_UNKNOWN **sub_1001AD70C()
{
}

void *sub_1001AD720(uint64_t a1)
{
  result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_1007B4510;
  result[1] = v3;
  return result;
}

uint64_t sub_1001AD754(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_1007B4510;
  a2[1] = v2;
  return result;
}

uint64_t sub_1001AD770(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  v4 = (os_log_s *)qword_1007F9210;
  BOOL v5 = os_log_type_enabled((os_log_t)qword_1007F9210, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v5)
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "regulatory,geof,startLocationRequest",  buf,  2u);
    }

    return sub_100268128((dispatch_queue_s **)(v3 + 528));
  }

  else
  {
    if (v5)
    {
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "regulatory,geof,stopLocationRequest", v7, 2u);
    }

    return sub_1002681C4((dispatch_queue_s **)(v3 + 528));
  }

uint64_t sub_1001AD824(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1001AD860()
{
}

void *sub_1001AD874(uint64_t a1)
{
  result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_1007B4590;
  result[1] = v3;
  return result;
}

uint64_t sub_1001AD8A8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_1007B4590;
  a2[1] = v2;
  return result;
}

void sub_1001AD8C4(uint64_t a1, int *a2, const std::string *a3, unsigned __int8 *a4)
{
  int v5 = *a2;
  uint64_t v6 = *(void *)(a1 + 8);
  sub_1001AAFB4(v6, *a2, a3, *a4);
  sub_10022EF50(v6 + 936, v5, a3);
}

uint64_t sub_1001AD90C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1001AD948()
{
}

void *sub_1001AD95C(uint64_t a1)
{
  result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_1007B4620;
  result[1] = v3;
  return result;
}

uint64_t sub_1001AD990(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_1007B4620;
  a2[1] = v2;
  return result;
}

void sub_1001AD9AC(uint64_t a1, const std::string *a2, unsigned __int8 *a3, double *a4)
{
}

uint64_t sub_1001AD9BC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1001AD9F8()
{
}

void *sub_1001ADA0C(uint64_t a1)
{
  result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_1007B46B0;
  result[1] = v3;
  return result;
}

uint64_t sub_1001ADA40(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_1007B46B0;
  a2[1] = v2;
  return result;
}

uint64_t sub_1001ADA5C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  sub_1001AC584(v3, *a2);
  return sub_10022EEE8(v3 + 936, v2);
}

uint64_t sub_1001ADA90(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1001ADACC()
{
}

void *sub_1001ADAE0(uint64_t a1)
{
  result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_1007B4730;
  result[1] = v3;
  return result;
}

uint64_t sub_1001ADB14(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_1007B4730;
  a2[1] = v2;
  return result;
}

void sub_1001ADB30(uint64_t a1, double *a2, double *a3, double *a4, double *a5)
{
}

uint64_t sub_1001ADB4C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1001ADB88()
{
}

void *sub_1001ADB9C(uint64_t a1)
{
  result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_1007B47C0;
  result[1] = v3;
  return result;
}

uint64_t sub_1001ADBD0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_1007B47C0;
  a2[1] = v2;
  return result;
}

uint64_t sub_1001ADBEC(uint64_t a1, std::string *a2)
{
  return sub_1001ABD18(*(int **)(a1 + 8), a2);
}

uint64_t sub_1001ADBF4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1001ADC30()
{
}

void *sub_1001ADC44(uint64_t a1)
{
  result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_1007B4850;
  result[1] = v3;
  return result;
}

uint64_t sub_1001ADC78(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_1007B4850;
  a2[1] = v2;
  return result;
}

void sub_1001ADC94(uint64_t a1, const std::string *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (os_log_type_enabled((os_log_t)qword_1007F9210, OS_LOG_TYPE_DEBUG)) {
    sub_100397688();
  }
  std::string::operator=((std::string *)(v3 + 440), a2);
  sub_1001AA43C(v3);
  sub_10022EF50(v3 + 936, 0, a2);
}

uint64_t sub_1001ADD0C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1001ADD48()
{
}

uint64_t sub_1001ADD54(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  sub_100160B7C(*(void **)(a1 + 56), (void *)(a1 + 64), (uint64_t **)a1);

  sub_100034A98(a1 + 80, *(void **)(a1 + 88));
  sub_100160AB8(v2, *(void **)(a1 + 64));
  sub_100012390(a1 + 32);
  sub_100034A98(a1 + 8, *(void **)(a1 + 16));
  return a1;
}

uint64_t sub_1001ADDD0(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0LL;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_1001ADE08(int a1, void **__p)
{
  if (__p)
  {
    uint64_t v2 = __p;
    do
    {
      uint64_t v3 = (void **)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }

    while (v3);
  }

char *sub_1001ADE4C(uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }

    v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      v11 = (char *)*v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = *((void *)v11 + 1);
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == (_DWORD)v7) {
              return v11;
            }
          }

          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }

            else
            {
              v12 &= v8 - 1;
            }

            if (v12 != v4) {
              break;
            }
          }

          v11 = *(char **)v11;
        }

        while (v11);
      }
    }
  }

  v13 = (void *)(a1 + 16);
  v11 = (char *)operator new(0x40uLL);
  *(void *)v11 = 0LL;
  *((void *)v11 + 1) = v7;
  *((_DWORD *)v11 + 4) = **a4;
  *((void *)v11 + 7) = 0LL;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    BOOL v16 = 1LL;
    if (v8 >= 3) {
      BOOL v16 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v8);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    sub_100021B74(a1, v19);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }

  uint64_t v20 = *(void *)a1;
  v21 = *(void **)(*(void *)a1 + 8 * v4);
  if (v21)
  {
    *(void *)v11 = *v21;
LABEL_38:
    void *v21 = v11;
    goto LABEL_39;
  }

  *(void *)v11 = *v13;
  void *v13 = v11;
  *(void *)(v20 + 8 * v4) = v13;
  if (*(void *)v11)
  {
    unint64_t v22 = *(void *)(*(void *)v11 + 8LL);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v22 >= v8) {
        v22 %= v8;
      }
    }

    else
    {
      v22 &= v8 - 1;
    }

    v21 = (void *)(*(void *)a1 + 8 * v22);
    goto LABEL_38;
  }

void sub_1001AE088( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
}

void sub_1001AE0A4(uint64_t a1, void **__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
  }

  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

char *sub_1001AE0F0(uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }

    v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      uint64_t v11 = (char *)*v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = *((void *)v11 + 1);
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == (_DWORD)v7) {
              return v11;
            }
          }

          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }

            else
            {
              v12 &= v8 - 1;
            }

            if (v12 != v4) {
              break;
            }
          }

          uint64_t v11 = *(char **)v11;
        }

        while (v11);
      }
    }
  }

  v13 = (void *)(a1 + 16);
  uint64_t v11 = (char *)operator new(0x40uLL);
  *(void *)uint64_t v11 = 0LL;
  *((void *)v11 + 1) = v7;
  *((_DWORD *)v11 + 4) = **a4;
  *((void *)v11 + 7) = 0LL;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    BOOL v16 = 1LL;
    if (v8 >= 3) {
      BOOL v16 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v8);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    sub_100021B74(a1, v19);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }

  uint64_t v20 = *(void *)a1;
  v21 = *(void **)(*(void *)a1 + 8 * v4);
  if (v21)
  {
    *(void *)uint64_t v11 = *v21;
LABEL_38:
    void *v21 = v11;
    goto LABEL_39;
  }

  *(void *)uint64_t v11 = *v13;
  void *v13 = v11;
  *(void *)(v20 + 8 * v4) = v13;
  if (*(void *)v11)
  {
    unint64_t v22 = *(void *)(*(void *)v11 + 8LL);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v22 >= v8) {
        v22 %= v8;
      }
    }

    else
    {
      v22 &= v8 - 1;
    }

    v21 = (void *)(*(void *)a1 + 8 * v22);
    goto LABEL_38;
  }

void sub_1001AE32C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
}

void sub_1001AE348(uint64_t a1, int a2, double a3)
{
  int v19 = a2;
  uint64_t v3 = *(dispatch_queue_s **)(a1 + 104);
  if (!v3) {
    sub_100391490();
  }
  if (a3 >= 0.0)
  {
    uint64_t v7 = a1 + 64;
    uint64_t v6 = *(void *)(a1 + 64);
    if (!v6) {
      goto LABEL_15;
    }
    uint64_t v8 = a1 + 64;
    do
    {
      int v9 = *(_DWORD *)(v6 + 32);
      BOOL v10 = v9 < a2;
      if (v9 >= a2) {
        uint64_t v11 = (uint64_t *)v6;
      }
      else {
        uint64_t v11 = (uint64_t *)(v6 + 8);
      }
      if (!v10) {
        uint64_t v8 = v6;
      }
      uint64_t v6 = *v11;
    }

    while (*v11);
    if (v8 != v7 && *(_DWORD *)(v8 + 32) <= a2 && (unint64_t v12 = *(void **)(v8 + 40)) != 0LL)
    {
      v13 = v12;
    }

    else
    {
LABEL_15:
      dispatch_source_t v14 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0LL, 0LL, v3);
      if (!v14) {
        return;
      }
      v13 = v14;
      uint64_t v20 = &v19;
      float v15 = sub_100160ED4((uint64_t **)(v7 - 8), &v19, (uint64_t)&unk_1004242F8, &v20);
      objc_storeStrong((id *)v15 + 5, v13);
      dispatch_source_set_timer(v13, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0x1DCD6500uLL);
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472LL;
      v17[2] = sub_1001AE50C;
      v17[3] = &unk_1007AF260;
      v17[4] = a1;
      int v18 = v19;
      dispatch_source_set_event_handler(v13, v17);
      dispatch_resume(v13);
    }

    dispatch_time_t v16 = dispatch_time(0xFFFFFFFFFFFFFFFELL, (uint64_t)(a3 * 1000000000.0));
    dispatch_source_set_timer(v13, v16, 0xFFFFFFFFFFFFFFFFLL, 0x1DCD6500uLL);
    uint64_t v20 = &v19;
    *((_BYTE *)sub_100160F94((uint64_t **)(a1 + 80), &v19, (uint64_t)&unk_1004242F8, &v20) + 32) = 1;
  }

void sub_1001AE4FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t **sub_1001AE50C(uint64_t a1)
{
  v1 = (_DWORD *)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1001606BC(v2, *(unsigned int *)(a1 + 40));
  unint64_t v4 = v1;
  result = sub_100160F94((uint64_t **)(v2 + 80), v1, (uint64_t)&unk_1004242F8, &v4);
  *((_BYTE *)result + 32) = 0;
  return result;
}

void sub_1001AE564(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

uint64_t sub_1001AE57C(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a2 = a4;
  *(void *)(a2 + 4) = result;
  *(_WORD *)(a2 + 12) = 2048;
  *(void *)(a2 + 14) = a3;
  return result;
}

void sub_1001AE594(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, os_log_s *a4@<X8>)
{
}

void sub_1001AE5A4()
{
  v0 = objc_autoreleasePoolPush();
  qword_1007F9210 = (uint64_t)os_log_create("com.apple.nearbyd", "Regulatory");
  objc_autoreleasePoolPop(v0);
}

void *sub_1001AE5E4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B48D0[a1]);
}

void *sub_1001AE5F8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B4928[a1]);
}

void *sub_1001AE60C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B4970[a1]);
}

void *sub_1001AE620@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B4990[a1]);
}

double sub_1001AE634(uint64_t a1)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 850045863LL;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_BYTE *)(a1 + 88) = 0;
  return result;
}

void sub_1001AE660(void *a1@<X8>)
{
  *a1 = 0LL;
}

void sub_1001AE668(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 80);
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }

  std::mutex::~mutex((std::mutex *)a1);
}

uint64_t sub_1001AE6A0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(_BYTE *)(a1 + 16) = 0;
  id v9 = v8;
  *(void *)(a1 + 24) = v9;
  id v10 = v7;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = 0LL;
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  sub_10001E914(a1 + 64, a2);
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
  if (!*(void *)(a1 + 88))
  {
    dispatch_source_t v14 = "fTimeoutCallback";
    int v15 = 25;
    goto LABEL_10;
  }

  if (!*(void *)(a1 + 32))
  {
    dispatch_source_t v14 = "fDispatchQueue";
    int v15 = 26;
    goto LABEL_10;
  }

  if (!*(void *)(a1 + 24))
  {
    dispatch_source_t v14 = "fSessionIdentifier";
    int v15 = 27;
LABEL_10:
    __assert_rtn("CarKeyTimeoutManager", "NIServerCarKeyTimeoutManager.mm", v15, v14);
  }

  uint64_t v11 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = *(void *)(a1 + 24);
    int v16 = 138412290;
    uint64_t v17 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#alisha-tom,TimeoutManager is constructed for session identifier %@",  (uint8_t *)&v16,  0xCu);
  }

  return a1;
}

void sub_1001AE80C(_Unwind_Exception *a1)
{
  for (uint64_t i = 56LL; i != 32; i -= 8LL)

  uint64_t v6 = *(std::__shared_weak_count **)(v1 + 8);
  if (v6) {
    std::__shared_weak_count::__release_weak(v6);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1001AE898(uint64_t a1)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)(a1 + 16));
  uint64_t v3 = (os_log_s *)qword_1008000A0;
  if ((v2 & 1) == 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10039774C(a1, v3);
    }
    __assert_rtn("~CarKeyTimeoutManager", "NIServerCarKeyTimeoutManager.mm", 34, "false");
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 24);
    int v10 = 138412290;
    uint64_t v11 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#alisha-tom,TimeoutManager is destructed for session identifier %@",  (uint8_t *)&v10,  0xCu);
  }

  int v5 = *(void **)(a1 + 88);
  if (v5 == (void *)(a1 + 64))
  {
    uint64_t v6 = 4LL;
    int v5 = (void *)(a1 + 64);
    goto LABEL_8;
  }

  if (v5)
  {
    uint64_t v6 = 5LL;
LABEL_8:
    (*(void (**)(void))(*v5 + 8 * v6))();
  }

  for (uint64_t i = 56LL; i != 32; i -= 8LL)

  id v8 = *(std::__shared_weak_count **)(a1 + 8);
  if (v8) {
    std::__shared_weak_count::__release_weak(v8);
  }
  return a1;
}

void sub_1001AE9EC(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_10000DE88(a1);
  }
  _Unwind_Resume(a1);
}

void sub_1001AE9FC(uint64_t a1)
{
  unsigned __int8 v2 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = 0LL;
  if (v2 == (void *)(a1 + 64))
  {
    uint64_t v3 = 4LL;
    unsigned __int8 v2 = (void *)(a1 + 64);
  }

  else
  {
    if (!v2) {
      goto LABEL_6;
    }
    uint64_t v3 = 5LL;
  }

  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  atomic_store(1u, (unsigned __int8 *)(a1 + 16));
  uint64_t v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 24);
    int v6 = 138412290;
    uint64_t v7 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#alisha-tom,TimeoutManager is invalidated for session identifier %@",  (uint8_t *)&v6,  0xCu);
  }

void sub_1001AEAF0(uint64_t a1)
{
  for (int i = 0; i != 3; ++i)
    sub_1001AF000(a1, i);
}

void sub_1001AEB30(uint64_t a1, int a2, int a3)
{
  if (a3 == 1)
  {
    id v8 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 24);
      int v20 = 138412290;
      uint64_t v21 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#alisha-tom,Schedule timer for Session Requested monitoring. Session identifier %@",  (uint8_t *)&v20,  0xCu);
    }

    sub_1001AEEB0(a1, 0, 5000000000LL, 0x989680uLL, 0);
  }

  else if (!a3)
  {
    int v6 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 24);
      int v20 = 138412290;
      uint64_t v21 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#alisha-tom,Cancel all timers (entering idle state). Session identifier %@",  (uint8_t *)&v20,  0xCu);
    }

    sub_1001AEAF0(a1);
  }

  if (a2 == 1)
  {
    int v10 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(void *)(a1 + 24);
      int v20 = 138412290;
      uint64_t v21 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#alisha-tom,Cancel timer for Session Requested monitoring. Session identifier %@",  (uint8_t *)&v20,  0xCu);
    }

    sub_1001AF000(a1, 0);
  }

  if (a3 == 4)
  {
    uint64_t v12 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = *(void *)(a1 + 24);
      int v20 = 138412290;
      uint64_t v21 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "#alisha-tom,Schedule timer for awaiting suspend response monitoring. Session identifier %@",  (uint8_t *)&v20,  0xCu);
    }

    sub_1001AEEB0(a1, 2, 5000000000LL, 0x989680uLL, 5);
  }

  if (a2 == 4)
  {
    dispatch_source_t v14 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = *(void *)(a1 + 24);
      int v20 = 138412290;
      uint64_t v21 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "#alisha-tom,Cancel timer for awaiting suspend response monitoring. Session identifier %@",  (uint8_t *)&v20,  0xCu);
    }

    sub_1001AF000(a1, 2);
  }

  if (a3 == 2)
  {
    int v16 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = *(void *)(a1 + 24);
      int v20 = 138412290;
      uint64_t v21 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "#alisha-tom,Schedule timer for suspension after ranging disallowed response. Session identifier %@",  (uint8_t *)&v20,  0xCu);
    }

    sub_1001AEEB0(a1, 1, 1000000000LL, 0x989680uLL, 1);
  }

  if (a2 == 2)
  {
    int v18 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v19 = *(void *)(a1 + 24);
      int v20 = 138412290;
      uint64_t v21 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "#alisha-tom,Cancel timer for suspension after ranging disallowed response. Session identifier %@",  (uint8_t *)&v20,  0xCu);
    }

    sub_1001AF000(a1, 1);
  }

void sub_1001AEEB0(uint64_t a1, int a2, int64_t a3, uint64_t a4, int a5)
{
  uint64_t v11 = *(void *)a1;
  int v10 = *(std::__shared_weak_count **)(a1 + 8);
  if (v10)
  {
    p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
    do
      unint64_t v13 = __ldxr(p_shared_weak_owners);
    while (__stxr(v13 + 1, p_shared_weak_owners));
  }

  dispatch_source_t v14 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  *(dispatch_queue_t *)(a1 + 32));
  uint64_t v15 = *(void **)(a1 + 40 + 8LL * a2);
  *(void *)(a1 + 40 + 8LL * a2) = v14;

  int v16 = *(dispatch_source_s **)(a1 + 40 + 8LL * a2);
  dispatch_time_t v17 = dispatch_time(0LL, a3);
  dispatch_source_set_timer(v16, v17, 0xFFFFFFFFFFFFFFFFLL, a4);
  int v18 = *(dispatch_source_s **)(a1 + 40 + 8LL * a2);
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3321888768LL;
  v21[2] = sub_1001AF050;
  v21[3] = &unk_1007B49B0;
  v21[4] = a1;
  v21[5] = v11;
  unint64_t v22 = v10;
  if (v10)
  {
    uint64_t v19 = (unint64_t *)&v10->__shared_weak_owners_;
    do
      unint64_t v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }

  int v23 = a5;
  dispatch_source_set_event_handler(v18, v21);
  dispatch_resume(*(dispatch_object_t *)(a1 + 40 + 8LL * a2));
  if (v22) {
    std::__shared_weak_count::__release_weak(v22);
  }
  if (v10) {
    std::__shared_weak_count::__release_weak(v10);
  }
}

void sub_1001AF000(uint64_t a1, int a2)
{
  uint64_t v4 = a1 + 40;
  uint64_t v5 = *(dispatch_source_s **)(v4 + 8LL * a2);
  if (v5)
  {
    dispatch_source_cancel(v5);
    int v6 = *(void **)(v4 + 8LL * a2);
    *(void *)(v4 + 8LL * a2) = 0LL;
  }

void sub_1001AF050(uint64_t a1)
{
  unsigned __int8 v2 = *(std::__shared_weak_count **)(a1 + 48);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = std::__shared_weak_count::lock(v2);
    if (v4)
    {
      uint64_t v5 = v4;
      if (*(void *)(a1 + 40))
      {
        double v6 = sub_100023CC4();
        if (*(void *)(v3 + 88)) {
          sub_1001AF110(v3 + 64, *(_DWORD *)(a1 + 56), v6);
        }
      }

      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        unint64_t v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }

void sub_1001AF0FC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1001AF110(uint64_t a1, int a2, double a3)
{
  int v6 = a2;
  double v5 = a3;
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    sub_10001EEF0();
  }
  return (*(uint64_t (**)(uint64_t, int *, double *))(*(void *)v3 + 48LL))(v3, &v6, &v5);
}

uint64_t sub_1001AF150(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(result + 48) = v2;
  if (v2)
  {
    uint64_t v3 = (unint64_t *)(v2 + 16);
    do
      unint64_t v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

void sub_1001AF174(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 48);
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }
}

void *sub_1001AF184@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B50A0[a1]);
}

void *sub_1001AF198@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B50F8[a1]);
}

void *sub_1001AF1AC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B5140[a1]);
}

void *sub_1001AF1C0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B5160[a1]);
}

void sub_1001AF214(id a1)
{
  id v1 = -[NIServerHomeDeviceService _initInternal](objc_alloc(&OBJC_CLASS___NIServerHomeDeviceService), "_initInternal");
  uint64_t v2 = (void *)qword_1007F9610;
  qword_1007F9610 = (uint64_t)v1;
}

void sub_1001AF398(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_1001AF3B8(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _internalPrintableState]);
  uint64_t v2 = sub_100024190(@"Home Device Service", v1);

  return v2;
}

void sub_1001AF3FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001AF4E0(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) objectForKey:*(void *)(a1 + 40)]);

  uint64_t v3 = (os_log_s *)qword_1008000A0;
  if (v2)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      uint64_t v5 = *(void *)(a1 + 48);
      int v11 = 138478083;
      uint64_t v12 = v4;
      __int16 v13 = 2113;
      v14[0] = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#ses-home,Service updated client configuration for %{private}@. Configuration: %{private}@",  (uint8_t *)&v11,  0x16u);
    }
  }

  else
  {
    int v6 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 40);
      unsigned int v8 = [*(id *)(*(void *)(a1 + 32) + 16) count];
      uint64_t v9 = *(void *)(a1 + 48);
      int v11 = 138478339;
      uint64_t v12 = v7;
      __int16 v13 = 1024;
      LODWORD(v14[0]) = v8;
      WORD2(v14[0]) = 2112;
      *(void *)((char *)v14 + 6) = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#ses-home,Service added client %{private}@ (%d previous clients). Configuration: %@",  (uint8_t *)&v11,  0x1Cu);
    }
  }

  [*(id *)(*(void *)(a1 + 32) + 16) setObject:*(void *)(a1 + 56) forKey:*(void *)(a1 + 40)];
  [*(id *)(*(void *)(a1 + 32) + 24) setObject:*(void *)(a1 + 48) forKey:*(void *)(a1 + 40)];
  return [*(id *)(a1 + 32) _processCommonConfiguration];
}

void sub_1001AF664(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001AF6F8(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1 + 40) + 24), "objectForKey:"));

    if (v2)
    {
      uint64_t v3 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v4 = *(void *)(a1 + 32);
        int v5 = 138477827;
        uint64_t v6 = v4;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#ses-home,Service removed client %{private}@",  (uint8_t *)&v5,  0xCu);
      }

      [*(id *)(*(void *)(a1 + 40) + 16) removeObjectForKey:*(void *)(a1 + 32)];
      [*(id *)(*(void *)(a1 + 40) + 24) removeObjectForKey:*(void *)(a1 + 32)];
      [*(id *)(a1 + 40) _processCommonConfiguration];
    }
  }

uint64_t sub_1001AF894(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001AF8A4(uint64_t a1)
{
}

void sub_1001AF8AC(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _internalPrintableState]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1001AF978(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001AFA94( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1001AFAC0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if ([v4 minimumPreferredUpdatedRate] != (id)2
    && +[NIInternalUtils nearbyObjectUpdateRate:isGreaterThan:]( NIInternalUtils,  "nearbyObjectUpdateRate:isGreaterThan:",  [v4 minimumPreferredUpdatedRate],  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)))
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v4 minimumPreferredUpdatedRate];
  }
}

void sub_1001AFB3C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001AFF28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B073C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B0E2C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, uint64_t a23, void *__p, uint64_t a25, int a26, __int16 a27, char a28, char a29, uint64_t a30, uint64_t a31, char a32, uint64_t a33, uint64_t a34, uint64_t a35)
{
  _Unwind_Resume(a1);
}

void sub_1001B0F64(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_100397818();
  }
}

void sub_1001B0FB4(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) remote]);
  [v2 didUpdateHomeDeviceUWBRangingAvailability:*(unsigned __int8 *)(*(void *)(a1 + 40) + 97)];
}

void sub_1001B1000( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001B10FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B1330(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B14B8(_Unwind_Exception *a1)
{
  uint64_t v6 = v4;

  _Unwind_Resume(a1);
}

void sub_1001B1700(_Unwind_Exception *a1)
{
  int v5 = v3;

  _Unwind_Resume(a1);
}

void sub_1001B1A00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B1B3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B1D38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1001B1E0C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  int v10 = v9;

  a9.super_class = (Class)&OBJC_CLASS___NIServerHomeDeviceSession;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_1001B2D88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::locale a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27, uint64_t a28, void *__p, uint64_t a30, uint64_t a31, uint64_t a32)
{
  sub_100012390((uint64_t)&a27);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B303C(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (!v1) {
    goto LABEL_52;
  }
  if ([v1 hasPrefix:@"AudioAccessory"])
  {
    uint64_t v22 = 0LL;
    id v3 = v2;
    int v4 = sscanf((const char *)[v3 UTF8String], "AudioAccessory%d,%d", (char *)&v22 + 4, &v22);
    int v5 = (os_log_s *)(id)qword_1008000A0;
    uint64_t v6 = v5;
    if (v4 <= 1)
    {
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
        sub_100397B90((uint64_t)[v3 UTF8String], (uint64_t)buf);
      }
LABEL_23:

      goto LABEL_52;
    }

    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      id v19 = [v3 UTF8String];
      *(_DWORD *)buf = 136315650;
      id v24 = v19;
      __int16 v25 = 1024;
      int v26 = HIDWORD(v22);
      __int16 v27 = 1024;
      int v28 = v22;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "#ses-home,#allow-list model %s decoded as audio accessory %d, %d",  buf,  0x18u);
    }

    uint64_t v10 = 999LL;
    if (HIDWORD(v22) == 6)
    {
      if ((_DWORD)v22 == 1) {
        uint64_t v10 = 201LL;
      }
      else {
        uint64_t v10 = 999LL;
      }
    }

    else if (HIDWORD(v22) == 5)
    {
      if ((_DWORD)v22 == 1) {
        uint64_t v10 = 200LL;
      }
      else {
        uint64_t v10 = 999LL;
      }
    }
  }

  else
  {
    if ([v2 hasPrefix:@"iPhone"])
    {
      uint64_t v22 = 0LL;
      id v7 = v2;
      int v8 = sscanf((const char *)[v7 UTF8String], "iPhone%d,%d", (char *)&v22 + 4, &v22);
      uint64_t v9 = (os_log_s *)(id)qword_1008000A0;
      uint64_t v6 = v9;
      if (v8 > 1)
      {
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
        {
          id v20 = [v7 UTF8String];
          *(_DWORD *)buf = 136315650;
          id v24 = v20;
          __int16 v25 = 1024;
          int v26 = HIDWORD(v22);
          __int16 v27 = 1024;
          int v28 = v22;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "#ses-home,#allow-list model %s decoded as iphone %d, %d",  buf,  0x18u);
        }

        switch(HIDWORD(v22))
        {
          case 0xC:
            int v14 = v22 - 1;
            uint64_t v15 = (unsigned int *)&unk_100427790;
            goto LABEL_51;
          case 0xD:
            unsigned int v16 = v22 - 1;
            unsigned int v17 = v22 + 2;
            goto LABEL_44;
          case 0xE:
            int v14 = v22 - 2;
            uint64_t v15 = (unsigned int *)&unk_1004277A4;
            goto LABEL_51;
          case 0xF:
            unsigned int v16 = v22 - 2;
            unsigned int v17 = v22 + 11;
LABEL_44:
            if (v16 >= 4) {
              uint64_t v10 = 999LL;
            }
            else {
              uint64_t v10 = v17;
            }
            goto LABEL_53;
          case 0x10:
            int v14 = v22 - 1;
            uint64_t v15 = (unsigned int *)&unk_1004277C0;
            goto LABEL_51;
          case 0x11:
            int v14 = v22 - 1;
            uint64_t v15 = (unsigned int *)&unk_100427850;
            goto LABEL_51;
          default:
            goto LABEL_52;
        }
      }

      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_100397BC8((uint64_t)[v7 UTF8String], (uint64_t)buf);
      }
      goto LABEL_23;
    }

    if (![v2 hasPrefix:@"Watch"])
    {
LABEL_52:
      uint64_t v10 = 999LL;
      goto LABEL_53;
    }

    uint64_t v22 = 0LL;
    id v11 = v2;
    int v12 = sscanf((const char *)[v11 UTF8String], "Watch%d,%d", (char *)&v22 + 4, &v22);
    __int16 v13 = (os_log_s *)(id)qword_1008000A0;
    uint64_t v6 = v13;
    if (v12 <= 1)
    {
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_100397C00((uint64_t)[v11 UTF8String], (uint64_t)buf);
      }
      goto LABEL_23;
    }

    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
    {
      id v21 = [v11 UTF8String];
      *(_DWORD *)buf = 136315650;
      id v24 = v21;
      __int16 v25 = 1024;
      int v26 = HIDWORD(v22);
      __int16 v27 = 1024;
      int v28 = v22;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "#ses-home,#allow-list model %s decoded as watch %d, %d",  buf,  0x18u);
    }

    if (HIDWORD(v22) == 7)
    {
      int v14 = v22 - 1;
      uint64_t v15 = (unsigned int *)&unk_100427814;
    }

    else
    {
      if (HIDWORD(v22) != 6) {
        goto LABEL_52;
      }
      int v14 = v22 - 1;
      uint64_t v15 = (unsigned int *)&unk_1004277CC;
    }

void sub_1001B34E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001B3554(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  sub_100021814(a1, a2, (uint64_t)v4);
  sub_1001B9B74((uint64_t)v4, 0LL);
  return v2;
}

void sub_1001B35E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B4250( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, void *__p, uint64_t a28, uint64_t a29, uint64_t a30)
{
  _Unwind_Resume(a1);
}

void sub_1001B45EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B4874(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B4D20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B4E40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

LABEL_3:
  LOBYTE(v7) = 0;
LABEL_4:

  return (char)v7;
}

  int v5 = [v2 integerForKey:@"HandoffIntentPredictorType"];
  uint64_t v6 = (uint64_t)v5;
  id v7 = 0;
  if (dword_1007FE568 <= 199)
  {
    if ((dword_1007FE568 - 11) >= 0xD)
    {
      uint64_t v9 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
LABEL_27:
      }
        sub_1003A5F38(v6, v9, v10, v11, v12, v13, v14, v15);
    }

    else
    {
      uint64_t v9 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_27;
      }
    }

    id v7 = 1;
    goto LABEL_29;
  }

  if ((dword_1007FE568 - 200) >= 2 && dword_1007FE568 != 997 && dword_1007FE568 != 999) {
LABEL_25:
  }
    id v7 = (int)v5;
LABEL_29:

  return v7;
}

void sub_1001B4F88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B50C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B53BC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  _Unwind_Resume(a1);
}

void sub_1001B573C(_Unwind_Exception *a1)
{
  int v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001B5E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  sub_100012390((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001B6224( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18, uint64_t a19, std::__shared_weak_count *a20, char a21, uint64_t a22, uint64_t a23, char *a24, char a25, uint64_t a26, uint64_t a27, char *a28)
{
  if (a18) {
    sub_1003982F4(a18);
  }
  if (a20)
  {
    p_shared_owners = (unint64_t *)&a20->__shared_owners_;
    do
      unint64_t v34 = __ldaxr(p_shared_owners);
    while (__stlxr(v34 - 1, p_shared_owners));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))a20->__on_zero_shared)(a20);
      std::__shared_weak_count::__release_weak(a20);
    }
  }

  v35 = a24;
  if (a24 == &a21)
  {
    uint64_t v36 = 4LL;
    v35 = &a21;
  }

  else
  {
    if (!a24) {
      goto LABEL_13;
    }
    uint64_t v36 = 5LL;
  }

  (*(void (**)(void))(*(void *)v35 + 8 * v36))();
LABEL_13:
  v37 = a28;
  if (a28 == &a25)
  {
    uint64_t v38 = 4LL;
    v37 = &a25;
  }

  else
  {
    if (!a28) {
      goto LABEL_18;
    }
    uint64_t v38 = 5LL;
  }

  (*(void (**)(void))(*(void *)v37 + 8 * v38))();
LABEL_18:
  v39 = *(void **)(v31 - 96);
  if (v39 == (void *)(v31 - 120))
  {
    uint64_t v40 = 4LL;
    v39 = (void *)(v31 - 120);
  }

  else
  {
    if (!v39) {
      goto LABEL_23;
    }
    uint64_t v40 = 5LL;
  }

  (*(void (**)(void))(*v39 + 8 * v40))();
LABEL_23:
  std::__shared_weak_count::~__shared_weak_count(v30);
  operator delete(v41);
  if (a14 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1001B6864( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, uint64_t a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, char a28, uint64_t a29, uint64_t a30, uint64_t a31, char a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36, uint64_t a37, uint64_t a38, uint64_t a39, char a40, uint64_t a41, uint64_t a42, uint64_t a43)
{
  sub_100012390((uint64_t)&a14);
  if (a21 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1001B6B7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B6E2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B6FEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B7178( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001B751C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1001B76A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B792C(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1001B7B18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B7FE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  _Unwind_Resume(a1);
}

void sub_1001B834C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B841C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B85C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B86E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B86F4(uint64_t a1)
{
  if (!*(_BYTE *)(*(void *)(a1 + 32) + 96LL))
  {
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    id v9 = *(id *)(a1 + 40);
    id v10 = [v9 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v10)
    {
      char v11 = 0;
      uint64_t v12 = *(void *)v18;
      do
      {
        for (int i = 0LL; i != v10; int i = (char *)i + 1)
        {
          if (*(void *)v18 != v12) {
            objc_enumerationMutation(v9);
          }
          id v14 = *(id *)(*((void *)&v17 + 1) + 8LL * (void)i);
          if ([v14 distanceMeasurementQuality] == (id)2
            || [v14 distanceMeasurementQuality] == (id)3)
          {
            char v11 = 1;
          }
        }

        id v10 = [v9 countByEnumeratingWithState:&v17 objects:v21 count:16];
      }

      while (v10);

      if ((v11 & 1) != 0)
      {
        double v15 = sub_100023CC4();
        sub_10026F03C(*(void *)(*(void *)(a1 + 32) + 336LL), v15);
        *(_BYTE *)(*(void *)(a1 + 32) + 96LL) = 1;
      }
    }

    else
    {
    }
  }

  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  unsigned __int8 v3 = [v2 BOOLForKey:@"HomeDeviceSessionBTLeechingEnabled"];

  v16.receiver = *(id *)(a1 + 32);
  v16.super_class = (Class)&OBJC_CLASS___NIServerHomeDeviceSession;
  id v4 = objc_msgSendSuper2(&v16, "resourcesManager");
  int v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = v5;
  if (*(_BYTE *)(*(void *)(a1 + 32) + 72LL)) {
    char v7 = 1;
  }
  else {
    char v7 = v3;
  }
  if ((v7 & 1) != 0)
  {
    int v8 = (void *)objc_claimAutoreleasedReturnValue([v5 remote]);
    [v8 didUpdateNearbyObjects:*(void *)(a1 + 40)];
  }
}

void sub_1001B88F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B8B0C(_Unwind_Exception *exception_object)
{
}

void sub_1001B8B30(uint64_t a1)
{
  if ((*(void *)(a1 + 40) || *(void *)(a1 + 56)) && !*(_BYTE *)(a1 + 64))
  {
    double v2 = sub_100023CC4();
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) discoveryToken]);
    sub_1001E01A0(v3 + 224, (unint64_t)[v4 hash], *(void **)(a1 + 40), v2);

    uint64_t v5 = *(void *)(a1 + 32);
    if (*(_BYTE *)(v5 + 72))
    {
      sub_10016300C(v5 + 368);
      v10.receiver = *(id *)(a1 + 32);
      v10.super_class = (Class)&OBJC_CLASS___NIServerHomeDeviceSession;
      id v6 = objc_msgSendSuper2(&v10, "resourcesManager");
      char v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      int v8 = (void *)objc_claimAutoreleasedReturnValue([v7 remote]);
      [v8 object:*(void *)(a1 + 48) didUpdateRegion:*(void *)(a1 + 40) previousRegion:*(void *)(a1 + 56)];
    }

    else
    {
      id v9 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#ses-home,#regions, didUpdateRegion:previousRegion. Should deliver is False.",  buf,  2u);
      }
    }
  }

void sub_1001B8C7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B8E28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B8EAC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 208LL);
  id v4 = (os_log_s *)(id)qword_1008000A0;
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3 == v2)
  {
    if (v5)
    {
      id v6 = +[NIInternalUtils NINearbyObjectUpdateRateToString:]( &OBJC_CLASS___NIInternalUtils,  "NINearbyObjectUpdateRateToString:",  *(void *)(a1 + 40));
      int v10 = 136315138;
      char v11 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#ses-home,didUpdateMinimumPreferredUpdateRate. %s (no change)",  (uint8_t *)&v10,  0xCu);
    }
  }

  else
  {
    if (v5)
    {
      char v7 = +[NIInternalUtils NINearbyObjectUpdateRateToString:]( &OBJC_CLASS___NIInternalUtils,  "NINearbyObjectUpdateRateToString:",  *(void *)(*(void *)(a1 + 32) + 208LL));
      int v8 = +[NIInternalUtils NINearbyObjectUpdateRateToString:]( &OBJC_CLASS___NIInternalUtils,  "NINearbyObjectUpdateRateToString:",  *(void *)(a1 + 40));
      int v10 = 136315394;
      char v11 = v7;
      __int16 v12 = 2080;
      __int16 v13 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#ses-home,didUpdateMinimumPreferredUpdateRate. %s -> %s",  (uint8_t *)&v10,  0x16u);
    }

    *(void *)(*(void *)(a1 + 32) + 208LL) = *(void *)(a1 + 40);
    id v9 = *(void **)(*(void *)(a1 + 32) + 64LL);
    if (v9) {
      [v9 probeRegions];
    }
  }

void sub_1001B901C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001B9538( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100012390((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001B9630( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

__n128 *sub_1001B983C(__n128 *a1, uint64_t a2)
{
  a1->n128_u8[0] = 0;
  a1[3].n128_u8[0] = 0;
  sub_1001B987C(a1, a2);
  return a1;
}

void sub_1001B9868(_Unwind_Exception *a1)
{
}

__n128 sub_1001B987C(__n128 *a1, uint64_t a2)
{
  if (*(_BYTE *)(a2 + 48))
  {
    unint64_t v4 = *(void *)a2;
    a1->n128_u32[2] = *(_DWORD *)(a2 + 8);
    a1->n128_u64[0] = v4;
    a1[1].n128_u64[0] = (unint64_t)*(id *)(a2 + 16);
    a1[1].n128_u64[1] = (unint64_t)*(id *)(a2 + 24);
    __n128 result = *(__n128 *)(a2 + 32);
    a1[2] = result;
    a1[3].n128_u8[0] = 1;
  }

  return result;
}

void sub_1001B98DC(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1001B98DC(a1, *a2);
    sub_1001B98DC(a1, a2[1]);
    sub_1001B9924((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_1001B9924(uint64_t a1)
{
}

uint64_t sub_1001B9960(uint64_t a1)
{
  return a1;
}

void sub_1001B9988(id *a1)
{
}

void *sub_1001B99B0(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B4A80;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1001B99F4(uint64_t a1, void *a2)
{
  *a2 = off_1007B4A80;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1001B9A28(uint64_t a1)
{
}

void sub_1001B9A30(id *a1)
{
}

id sub_1001B9A58(uint64_t a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  unint64_t v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v5 = "unavailable";
    if (v3) {
      BOOL v5 = "available";
    }
    int v7 = 136315138;
    int v8 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#ses-home,current wifi availability: %s",  (uint8_t *)&v7,  0xCu);
  }

  return [*(id *)(a1 + 8) _handleWifiRangingAvailableUpdate:v3 != 0];
}

uint64_t sub_1001B9B2C(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001B9B68()
{
  return &off_1007B4AE0;
}

void sub_1001B9B74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_100012390((uint64_t)v2 + 24);
    }
    operator delete(v2);
  }

void *sub_1001B9BB8(uint64_t a1, uint64_t *a2, uint64_t a3, void **a4, uint64_t a5)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v5 = *a2;
      if (v7 >= v8) {
        unint64_t v5 = v7 % v8;
      }
    }

    else
    {
      unint64_t v5 = (v8 - 1) & v7;
    }

    int v10 = *(void **)(*(void *)a1 + 8 * v5);
    if (v10)
    {
      char v11 = (void *)*v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (v11[2] == v7) {
              return v11;
            }
          }

          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }

            else
            {
              v12 &= v8 - 1;
            }

            if (v12 != v5) {
              break;
            }
          }

          char v11 = (void *)*v11;
        }

        while (v11);
      }
    }
  }

  sub_1001B9DFC(a1, *a2, a4, a5, (uint64_t)v22);
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1LL;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_100021B74(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        unint64_t v5 = v7 % v8;
      }
      else {
        unint64_t v5 = v7;
      }
    }

    else
    {
      unint64_t v5 = (v8 - 1) & v7;
    }
  }

  __int128 v19 = *(void **)(*(void *)a1 + 8 * v5);
  if (v19)
  {
    *(void *)v22[0] = *v19;
    *__int128 v19 = v22[0];
  }

  else
  {
    *(void *)v22[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v22[0];
    *(void *)(*(void *)a1 + 8 * v5) = a1 + 16;
    if (*(void *)v22[0])
    {
      unint64_t v20 = *(void *)(*(void *)v22[0] + 8LL);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v20 >= v8) {
          v20 %= v8;
        }
      }

      else
      {
        v20 &= v8 - 1;
      }

      *(void *)(*(void *)a1 + 8 * v20) = v22[0];
    }
  }

  char v11 = (void *)v22[0];
  v22[0] = 0LL;
  ++*(void *)(a1 + 24);
  sub_1001B9B74((uint64_t)v22, 0LL);
  return v11;
}

void sub_1001B9DE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1001B9DFC@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, void **a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9 = a1 + 16;
  int v10 = operator new(0x40uLL);
  *(void *)a5 = v10;
  *(void *)(a5 + _Block_object_dispose(va, 8) = v9;
  *(_BYTE *)(a5 + 16) = 0;
  *int v10 = 0LL;
  v10[1] = a2;
  uint64_t result = sub_1001B9E78((uint64_t)(v10 + 2), *a3, *(uint64_t **)a4, *(__int128 **)(a4 + 8));
  *(_BYTE *)(a5 + 16) = 1;
  return result;
}

void sub_1001B9E60(_Unwind_Exception *a1)
{
}

uint64_t sub_1001B9E78(uint64_t a1, void *a2, uint64_t *a3, __int128 *a4)
{
  *(void *)a1 = *a2;
  uint64_t v5 = *a3;
  id v6 = (std::__shared_weak_count *)a3[1];
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      unint64_t v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    *(void *)(a1 + _Block_object_dispose(va, 8) = v5;
    *(void *)(a1 + 16) = v6;
    do
      unint64_t v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    __int128 v10 = *a4;
    *(void *)(a1 + 40) = *((void *)a4 + 2);
    *(_OWORD *)(a1 + 24) = v10;
    do
      unint64_t v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  else
  {
    *(void *)(a1 + _Block_object_dispose(va, 8) = v5;
    *(void *)(a1 + 16) = 0LL;
    __int128 v12 = *a4;
    *(void *)(a1 + 40) = *((void *)a4 + 2);
    *(_OWORD *)(a1 + 24) = v12;
  }

  return a1;
}

void *sub_1001B9F24(uint64_t a1, unint64_t *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v7 >= v8) {
        unint64_t v4 = v7 % v8;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }

    __int128 v10 = *(void **)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      unint64_t v11 = (void *)*v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (v11[2] == v7) {
              return v11;
            }
          }

          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }

            else
            {
              v12 &= v8 - 1;
            }

            if (v12 != v4) {
              break;
            }
          }

          unint64_t v11 = (void *)*v11;
        }

        while (v11);
      }
    }
  }

  uint64_t v13 = a1 + 16;
  float v14 = operator new(0x28uLL);
  v24[0] = v14;
  v24[1] = a1 + 16;
  *float v14 = 0LL;
  v14[1] = v7;
  v14[2] = **a4;
  void v14[3] = 0LL;
  v14[4] = 0LL;
  char v25 = 1;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v16 = *(float *)(a1 + 32);
  if (!v8 || (float)(v16 * (float)v8) < v15)
  {
    BOOL v17 = 1LL;
    if (v8 >= 3) {
      BOOL v17 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v8);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    sub_100021B74(a1, v20);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }

  id v21 = *(void **)(*(void *)a1 + 8 * v4);
  if (v21)
  {
    *(void *)v24[0] = *v21;
    void *v21 = v24[0];
  }

  else
  {
    *(void *)v24[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v24[0];
    *(void *)(*(void *)a1 + 8 * v4) = v13;
    if (*(void *)v24[0])
    {
      unint64_t v22 = *(void *)(*(void *)v24[0] + 8LL);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v22 >= v8) {
          v22 %= v8;
        }
      }

      else
      {
        v22 &= v8 - 1;
      }

      *(void *)(*(void *)a1 + 8 * v22) = v24[0];
    }
  }

  unint64_t v11 = (void *)v24[0];
  v24[0] = 0LL;
  ++*(void *)(a1 + 24);
  sub_1001B9B74((uint64_t)v24, 0LL);
  return v11;
}

void sub_1001BA168(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1001BA180(void *a1, unint64_t *a2)
{
  uint64_t result = (uint64_t)sub_100046FEC(a1, a2);
  if (result)
  {
    sub_100021814(a1, (void *)result, (uint64_t)v4);
    sub_1001B9B74((uint64_t)v4, 0LL);
    return 1LL;
  }

  return result;
}

void *sub_1001BA1CC(uint64_t a1, unint64_t *a2, void *a3, uint64_t *a4)
{
  unint64_t v8 = *a2;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 >= v9) {
        unint64_t v4 = v8 % v9;
      }
    }

    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }

    unint64_t v11 = *(void **)(*(void *)a1 + 8 * v4);
    if (v11)
    {
      unint64_t v12 = (void *)*v11;
      if (*v11)
      {
        do
        {
          unint64_t v13 = v12[1];
          if (v13 == v8)
          {
            if (v12[2] == v8) {
              return v12;
            }
          }

          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9) {
                v13 %= v9;
              }
            }

            else
            {
              v13 &= v9 - 1;
            }

            if (v13 != v4) {
              break;
            }
          }

          unint64_t v12 = (void *)*v12;
        }

        while (v12);
      }
    }
  }

  uint64_t v14 = a1 + 16;
  float v15 = operator new(0x28uLL);
  v29[0] = v15;
  v29[1] = a1 + 16;
  *float v15 = 0LL;
  v15[1] = v8;
  uint64_t v17 = *a4;
  uint64_t v16 = a4[1];
  v15[2] = *a3;
  v15[3] = v17;
  v15[4] = v16;
  if (v16)
  {
    unint64_t v18 = (unint64_t *)(v16 + 8);
    do
      unint64_t v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
  }

  char v30 = 1;
  float v20 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v21 = *(float *)(a1 + 32);
  if (!v9 || (float)(v21 * (float)v9) < v20)
  {
    BOOL v22 = 1LL;
    if (v9 >= 3) {
      BOOL v22 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v9);
    unint64_t v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24) {
      size_t v25 = v24;
    }
    else {
      size_t v25 = v23;
    }
    sub_100021B74(a1, v25);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v4 = v8 % v9;
      }
      else {
        unint64_t v4 = v8;
      }
    }

    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }
  }

  int v26 = *(void **)(*(void *)a1 + 8 * v4);
  if (v26)
  {
    *(void *)v29[0] = *v26;
    *int v26 = v29[0];
  }

  else
  {
    *(void *)v29[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v29[0];
    *(void *)(*(void *)a1 + 8 * v4) = v14;
    if (*(void *)v29[0])
    {
      unint64_t v27 = *(void *)(*(void *)v29[0] + 8LL);
      if ((v9 & (v9 - 1)) != 0)
      {
        if (v27 >= v9) {
          v27 %= v9;
        }
      }

      else
      {
        v27 &= v9 - 1;
      }

      *(void *)(*(void *)a1 + 8 * v27) = v29[0];
    }
  }

  unint64_t v12 = (void *)v29[0];
  v29[0] = 0LL;
  ++*(void *)(a1 + 24);
  sub_1001B9B74((uint64_t)v29, 0LL);
  return v12;
}

void sub_1001BA434(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_1001BA44C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1007B4B00;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1001BA45C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1007B4B00;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_1001BA47C(uint64_t a1)
{
  return sub_100024A24(a1 + 24);
}

uint64_t sub_1001BA488(uint64_t a1)
{
  return a1;
}

void sub_1001BA4B0(id *a1)
{
}

void *sub_1001BA4D8(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B4B50;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1001BA51C(uint64_t a1, void *a2)
{
  *a2 = off_1007B4B50;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1001BA550(uint64_t a1)
{
}

void sub_1001BA558(id *a1)
{
}

void sub_1001BA580(uint64_t a1, __int128 **a2)
{
  id v6 = 0LL;
  unint64_t v7 = 0LL;
  uint64_t v8 = 0LL;
  sub_1001BA8EC(&v6, *a2, a2[1], 0x6DB6DB6DB6DB6DB7LL * (((char *)a2[1] - (char *)*a2) >> 3));
  int v3 = *(dispatch_queue_s **)(*(void *)(a1 + 8) + 80LL);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768LL;
  v4[2] = sub_1001BA6DC;
  v4[3] = &unk_1007B4BB8;
  memset(v5, 0, sizeof(v5));
  sub_1001BA8EC(v5, v6, v7, 0x6DB6DB6DB6DB6DB7LL * (((char *)v7 - (char *)v6) >> 3));
  v4[4] = *(void *)(a1 + 8);
  dispatch_async(v3, v4);
  unint64_t v9 = (__int128 **)v5;
  sub_10001FB2C((void ***)&v9);
  unint64_t v9 = &v6;
  sub_10001FB2C((void ***)&v9);
}

void sub_1001BA67C(_Unwind_Exception *a1)
{
  *(void *)(v2 - 56) = v1;
  sub_10001FB2C((void ***)(v2 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_1001BA694(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001BA6D0()
{
  return &off_1007B4BE8;
}

void sub_1001BA6DC(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(a1 + 40);
  uint64_t v13 = a1 + 40;
  int v3 = *(uint64_t **)(a1 + 48);
  if (v2 == v3)
  {
LABEL_5:
    [*(id *)(*(void *)(a1 + 32) + 64) acceptWiFiRangeResults:v13];
  }

  else
  {
    while (1)
    {
      uint64_t v4 = *v2;
      v15.receiver = *(id *)(a1 + 32);
      v15.super_class = (Class)&OBJC_CLASS___NIServerHomeDeviceSession;
      id v5 = objc_msgSendSuper2(&v15, "discoveryTokenFromIdentifier:", v4);
      uint64_t v6 = objc_claimAutoreleasedReturnValue(v5);
      if (!v6) {
        break;
      }
      unint64_t v7 = (void *)v6;
      v14.receiver = *(id *)(a1 + 32);
      v14.super_class = (Class)&OBJC_CLASS___NIServerHomeDeviceSession;
      id v8 = objc_msgSendSuper2(&v14, "resourcesManager");
      unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      uint8x8_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 lifecycleSupervisor]);
      unsigned __int8 v11 = [v10 isTrackingPeer:v7];

      if ((v11 & 1) == 0)
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_100397DE8();
        }

        return;
      }

      unint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v9 lifecycleSupervisor]);
      [v12 measurementReceivedForToken:v7 contTimestamp:sub_100023CC4()];

      v2 += 7;
      if (v2 == v3) {
        goto LABEL_5;
      }
    }

    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003988E0();
    }
  }

void sub_1001BA868(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1001BA894(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = 0LL;
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;
  uint64_t v2 = (void *)(a1 + 40);
  v2[2] = 0LL;
  return sub_1001BA8EC( v2,  *(__int128 **)(a2 + 40),  *(__int128 **)(a2 + 48),  0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*(void *)(a2 + 48) - *(void *)(a2 + 40)) >> 3));
}

void sub_1001BA8C4(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 40);
  sub_10001FB2C(&v1);
}

void *sub_1001BA8EC(void *result, __int128 *a2, __int128 *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_10011B690(result, a4);
    id result = (void *)sub_1001BA970((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }

  return result;
}

void sub_1001BA950( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + _Block_object_dispose(va, 8) = v10;
  sub_10001FB2C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BA970(uint64_t a1, __int128 *a2, __int128 *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      __int128 v7 = *v6;
      *(_DWORD *)(v4 + 16) = *((_DWORD *)v6 + 4);
      *(_OWORD *)uint64_t v4 = v7;
      *(void *)(v4 + 24) = 0LL;
      *(void *)(v4 + 32) = 0LL;
      *(void *)(v4 + 40) = 0LL;
      sub_10001E054( (void *)(v4 + 24),  *((const void **)v6 + 3),  *((void *)v6 + 4),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)v6 + 4) - *((void *)v6 + 3)) >> 3));
      *(_DWORD *)(v4 + 4_Block_object_dispose(va, 8) = *((_DWORD *)v6 + 12);
      uint64_t v4 = v12 + 56;
      v12 += 56LL;
      uint64_t v6 = (__int128 *)((char *)v6 + 56);
    }

    while (v6 != a3);
  }

  char v10 = 1;
  sub_100020FA4((uint64_t)v9);
  return v4;
}

void sub_1001BAA30( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1001BAA44(uint64_t a1)
{
  return a1;
}

void sub_1001BAA6C(id *a1)
{
}

void *sub_1001BAA94(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B4C08;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1001BAAD8(uint64_t a1, void *a2)
{
  *a2 = off_1007B4C08;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1001BAB0C(uint64_t a1)
{
}

void sub_1001BAB14(id *a1)
{
}

void sub_1001BAB3C(uint64_t a1, int *a2)
{
  if (v13 >= 0) {
    int v3 = __p;
  }
  else {
    int v3 = (void **)__p[0];
  }
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v3));
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_100398940();
  }
  NSErrorUserInfoKey v14 = NSLocalizedDescriptionKey;
  objc_super v15 = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v15,  &v14,  1LL));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"com.apple.NearbyInteraction",  -5887LL,  v5));

  uint64_t v7 = *(void *)(a1 + 8);
  id v8 = *(dispatch_queue_s **)(v7 + 80);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_1001BAD4C;
  v10[3] = &unk_1007A2248;
  v10[4] = v7;
  id v11 = v6;
  id v9 = v6;
  dispatch_async(v8, v10);

  if (v13 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1001BACC8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1001BAD04(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001BAD40()
{
  return &off_1007B4C68;
}

void sub_1001BAD4C(uint64_t a1)
{
  v5.receiver = *(id *)(a1 + 32);
  v5.super_class = (Class)&OBJC_CLASS___NIServerHomeDeviceSession;
  id v2 = objc_msgSendSuper2(&v5, "resourcesManager");
  int v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 remote]);
  [v4 uwbSessionDidFailWithError:*(void *)(a1 + 40)];
}

void sub_1001BADBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001BADD8(uint64_t a1)
{
  return a1;
}

void sub_1001BAE00(id *a1)
{
}

void *sub_1001BAE28(uint64_t a1)
{
  id v2 = operator new(0x10uLL);
  *id v2 = off_1007B4C88;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1001BAE6C(uint64_t a1, void *a2)
{
  *a2 = off_1007B4C88;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1001BAEA0(uint64_t a1)
{
}

void sub_1001BAEA8(id *a1)
{
}

void sub_1001BAED0(uint64_t a1, int *a2)
{
  int v3 = *a2;
  uint64_t v4 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    sub_100025844(v3, &__p);
    objc_super v5 = v12 >= 0 ? &__p : (objc_super *)__p.receiver;
    *(_DWORD *)buf = 136315138;
    NSErrorUserInfoKey v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#ses-home,WiFi readiness update: %s", buf, 0xCu);
    if (v12 < 0) {
      operator delete(__p.receiver);
    }
  }

  __p.receiver = *(id *)(a1 + 8);
  __p.super_class = (Class)&OBJC_CLASS___NIServerHomeDeviceSession;
  id v6 = objc_msgSendSuper2(&__p, "resourcesManager");
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 wifiResource]);
  unsigned __int8 v9 = [v8 deviceCapabilities];

  if (*(_BYTE *)(*(void *)(a1 + 8) + 97LL)) {
    BOOL v10 = 1;
  }
  else {
    BOOL v10 = (v9 & 1) == 0;
  }
  if (!v10)
  {
    if (v3)
    {
      if (v3 == 1) {
        [v7 interruptSessionWithReason:5 monotonicTimeSeconds:sub_100023CC4()];
      }
    }

    else
    {
      [v7 interruptionReasonEnded:5 monotonicTimeSeconds:sub_100023CC4()];
    }
  }
}

void sub_1001BB050(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001BB078(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001BB0B4()
{
  return &off_1007B4CE8;
}

uint64_t sub_1001BB0C0(uint64_t a1)
{
  return a1;
}

void sub_1001BB0E8(id *a1)
{
}

void *sub_1001BB110(uint64_t a1)
{
  id v2 = operator new(0x10uLL);
  *id v2 = off_1007B4D08;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1001BB154(uint64_t a1, void *a2)
{
  *a2 = off_1007B4D08;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1001BB188(uint64_t a1)
{
}

void sub_1001BB190(id *a1)
{
}

void sub_1001BB1B8(uint64_t a1, void *a2, uint64_t *a3)
{
  int v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  uint64_t v4 = *(void *)(a1 + 8);
  objc_super v5 = *(dispatch_queue_s **)(v4 + 80);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001BB2B0;
  block[3] = &unk_1007B2E28;
  uint64_t v6 = *a3;
  block[4] = v4;
  block[5] = v6;
  int v10 = *((_DWORD *)a3 + 2);
  dispatch_async(v5, block);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

uint64_t sub_1001BB268(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001BB2A4()
{
  return &off_1007B4D68;
}

id sub_1001BB2B0(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "serviceRequestDidUpdateStatus:",  *(void *)(a1 + 40),  *(unsigned int *)(a1 + 48));
}

uint64_t sub_1001BB2C0(uint64_t a1)
{
  return a1;
}

void sub_1001BB2E8(id *a1)
{
}

void *sub_1001BB310(uint64_t a1)
{
  id v2 = operator new(0x10uLL);
  *id v2 = off_1007B4D88;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1001BB354(uint64_t a1, void *a2)
{
  *a2 = off_1007B4D88;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1001BB388(uint64_t a1)
{
}

void sub_1001BB390(id *a1)
{
}

void sub_1001BB3B8(uint64_t a1, void *a2, __int128 *a3)
{
  objc_super v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  __int128 v6 = a3[1];
  __int128 v24 = *a3;
  __int128 v25 = v6;
  __int128 v26 = a3[2];
  sub_1001376C0(v27, (uint64_t)(a3 + 3));
  sub_1001317DC(v28, (uint64_t)(a3 + 38));
  sub_100137714(v31, (__n128 *)((char *)a3 + 760));
  memcpy(v35, a3 + 55, sizeof(v35));
  uint64_t v7 = *(void *)(a1 + 8);
  unint64_t v8 = *(dispatch_queue_s **)(v7 + 80);
  block[1] = 3321888768LL;
  __int128 v13 = v25;
  __int128 v14 = v26;
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_1001BB6EC;
  block[3] = &unk_1007B3B10;
  block[4] = v7;
  __int128 v12 = v24;
  sub_1001376C0(v15, (uint64_t)v27);
  sub_1001317DC(v16, (uint64_t)v28);
  sub_100137714(v19, v31);
  memcpy(v23, v35, sizeof(v23));
  dispatch_async(v8, block);
  if (v22 && __p)
  {
    float v21 = __p;
    operator delete(__p);
  }

  if (v18) {
    sub_100034A98((uint64_t)v17, v17[1]);
  }
  sub_100124BFC((uint64_t)v15);
  if (v34 && v32)
  {
    v33 = v32;
    operator delete(v32);
  }

  if (v30) {
    sub_100034A98((uint64_t)v29, v29[1]);
  }
  sub_100124BFC((uint64_t)v27);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

void sub_1001BB5D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  if (LOBYTE(STACK[0x320])) {
    sub_10038DDB8((uint64_t)va);
  }
  sub_100124BFC(v4);
  if (LOBYTE(STACK[0x948]))
  {
    __int128 v6 = (void *)STACK[0x920];
    if (STACK[0x920])
    {
      STACK[0x928] = (unint64_t)v6;
      operator delete(v6);
    }
  }

  if (LOBYTE(STACK[0x8D0])) {
    sub_100034A98((uint64_t)&STACK[0x850], (void *)STACK[0x858]);
  }
  sub_100124BFC(v3);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1001BB6A4(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001BB6E0()
{
  return &off_1007B4DE8;
}

id sub_1001BB6EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) didReceiveNewSolution:a1 + 40];
}

uint64_t sub_1001BB6FC(uint64_t a1)
{
  return a1;
}

void sub_1001BB724(id *a1)
{
}

void *sub_1001BB74C(uint64_t a1)
{
  id v2 = operator new(0x10uLL);
  *id v2 = off_1007B4E08;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1001BB790(uint64_t a1, void *a2)
{
  *a2 = off_1007B4E08;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1001BB7C4(uint64_t a1)
{
}

void sub_1001BB7CC(id *a1)
{
}

void sub_1001BB7F4(uint64_t a1, void *a2, __int16 *a3)
{
  objc_super v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  __int16 v16 = *a3;
  char v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t v17 = 0LL;
  sub_1001309C0(&v17, *((const void **)a3 + 1), *((void *)a3 + 2), *((void *)a3 + 2) - *((void *)a3 + 1));
  __int128 v20 = *((_OWORD *)a3 + 2);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(dispatch_queue_s **)(v6 + 80);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768LL;
  block[2] = sub_1001BB9C8;
  block[3] = &unk_1007B3BD8;
  block[4] = v6;
  __int16 v11 = v16;
  __int128 v13 = 0LL;
  uint64_t v14 = 0LL;
  objc_super __p = 0LL;
  sub_1001309C0(&__p, v17, (uint64_t)v18, v18 - (_BYTE *)v17);
  __int128 v15 = v20;
  dispatch_async(v7, block);
  if (__p)
  {
    __int128 v13 = __p;
    operator delete(__p);
  }

  if (v17)
  {
    char v18 = v17;
    operator delete(v17);
  }

  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

void sub_1001BB928(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *(void **)(v2 - 72);
  if (v4)
  {
    *(void *)(v2 - 64) = v4;
    operator delete(v4);
  }

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_1001BB980(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001BB9BC()
{
  return &off_1007B4E68;
}

id sub_1001BB9C8(uint64_t a1)
{
  return [*(id *)(a1 + 32) didReceiveRemoteData:a1 + 40];
}

uint64_t sub_1001BB9D8(uint64_t a1)
{
  return a1;
}

void sub_1001BBA00(id *a1)
{
}

void *sub_1001BBA28(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B4E88;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1001BBA6C(uint64_t a1, void *a2)
{
  *a2 = off_1007B4E88;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1001BBAA0(uint64_t a1)
{
}

void sub_1001BBAA8(id *a1)
{
}

void sub_1001BBAD0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  int v5 = *a3;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(dispatch_queue_s **)(v6 + 80);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3321888768LL;
  v15[2] = sub_1001BBC20;
  v15[3] = &unk_1007B4EF0;
  v15[4] = v6;
  v15[5] = v3;
  __int16 v16 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      unint64_t v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }

  int v17 = v5;
  dispatch_async(v7, v15);
  unint64_t v10 = v16;
  if (!v16) {
    goto LABEL_8;
  }
  __int16 v11 = (unint64_t *)&v16->__shared_owners_;
  do
    unint64_t v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if (!v4) {
      return;
    }
  }

  else
  {
LABEL_8:
    if (!v4) {
      return;
    }
  }

  __int128 v13 = (unint64_t *)&v4->__shared_owners_;
  do
    unint64_t v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }

uint64_t sub_1001BBBD8(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001BBC14()
{
  return &off_1007B4F20;
}

void sub_1001BBC20(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 40);
  unint64_t v10 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }

  [v2 _roseSession:&v9 invalidatedWithReason:*(unsigned int *)(a1 + 56)];
  uint64_t v6 = v10;
  if (v10)
  {
    uint64_t v7 = (unint64_t *)&v10->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

void sub_1001BBCAC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1001BBCC0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(result + 4_Block_object_dispose(va, 8) = v2;
  if (v2)
  {
    uint64_t v3 = (unint64_t *)(v2 + 8);
    do
      unint64_t v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

uint64_t sub_1001BBCE4(uint64_t a1)
{
  return sub_100012390(a1 + 40);
}

uint64_t sub_1001BBCEC(uint64_t a1)
{
  return a1;
}

void sub_1001BBD14(id *a1)
{
}

void *sub_1001BBD3C(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B4F40;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1001BBD80(uint64_t a1, void *a2)
{
  *a2 = off_1007B4F40;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1001BBDB4(uint64_t a1)
{
}

void sub_1001BBDBC(id *a1)
{
}

void sub_1001BBDE4(uint64_t a1, uint64_t *a2, int *a3, int *a4, int *a5, int *a6)
{
  uint64_t v6 = *a2;
  uint64_t v7 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  int v8 = *a3;
  int v9 = *a4;
  int v10 = *a5;
  int v11 = *a6;
  uint64_t v12 = *(void *)(a1 + 8);
  __int128 v13 = *(dispatch_queue_s **)(v12 + 80);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768LL;
  block[2] = sub_1001BBF48;
  block[3] = &unk_1007B4FA8;
  block[4] = v12;
  void block[5] = v6;
  char v22 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v15 = __ldxr(p_shared_owners);
    while (__stxr(v15 + 1, p_shared_owners));
  }

  int v23 = v8;
  int v24 = v9;
  int v25 = v10;
  int v26 = v11;
  dispatch_async(v13, block);
  __int16 v16 = v22;
  if (!v22) {
    goto LABEL_8;
  }
  int v17 = (unint64_t *)&v22->__shared_owners_;
  do
    unint64_t v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    if (!v7) {
      return;
    }
  }

  else
  {
LABEL_8:
    if (!v7) {
      return;
    }
  }

  uint64_t v19 = (unint64_t *)&v7->__shared_owners_;
  do
    unint64_t v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (!v20)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }

uint64_t sub_1001BBF00(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001BBF3C()
{
  return &off_1007B4FD8;
}

void sub_1001BBF48(uint64_t a1, double a2, double a3)
{
  unint64_t v4 = *(void **)(a1 + 32);
  unint64_t v5 = *(std::__shared_weak_count **)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }

  LODWORD(a2) = *(_DWORD *)(a1 + 60);
  LODWORD(a3) = *(_DWORD *)(a1 + 64);
  [v4 _roseSession:&v11 didChangeRangingUpdateRate:*(unsigned int *)(a1 + 56) newThrottleRate:*(unsigned int *)(a1 + 68) prevThrottleRate:a2 effectiveSinceCycleInde:a3];
  int v8 = v12;
  if (v12)
  {
    int v9 = (unint64_t *)&v12->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

void sub_1001BBFDC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1001BBFF0(uint64_t a1)
{
  return a1;
}

void sub_1001BC018(id *a1)
{
}

void *sub_1001BC040(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B4FF8;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1001BC084(uint64_t a1, void *a2)
{
  *a2 = off_1007B4FF8;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1001BC0B8(uint64_t a1)
{
}

void sub_1001BC0C0(id *a1)
{
}

void sub_1001BC0E8(uint64_t a1, void *a2, __int128 *a3)
{
  uint64_t v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(dispatch_queue_s **)(v4 + 80);
  block[1] = 3221225472LL;
  __int128 v6 = a3[6];
  __int128 v22 = a3[7];
  __int128 v7 = a3[9];
  __int128 v23 = a3[8];
  __int128 v24 = v7;
  __int128 v25 = a3[10];
  __int128 v8 = a3[2];
  __int128 v9 = a3[4];
  __int128 v10 = a3[5];
  __int128 v18 = a3[3];
  __int128 v19 = v9;
  __int128 v20 = v10;
  __int128 v21 = v6;
  __int128 v11 = a3[1];
  __int128 v15 = *a3;
  __int128 v16 = v11;
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_1001BC214;
  block[3] = &unk_1007B5070;
  block[4] = v4;
  __int128 v17 = v8;
  dispatch_async(v5, block);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

uint64_t sub_1001BC1CC(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001BC208()
{
  return &off_1007B5090;
}

id sub_1001BC214(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveDeviceMotion:a1 + 40];
}

void sub_1001BC224(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    sub_1001BC278(a1, *(void **)(a1 + 16));
    *(void *)(a1 + 16) = 0LL;
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      for (uint64_t i = 0LL; i != v2; ++i)
        *(void *)(*(void *)a1 + 8 * i) = 0LL;
    }

    *(void *)(a1 + 24) = 0LL;
  }

void sub_1001BC278(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      sub_100012390((uint64_t)(v2 + 3));
      operator delete(v2);
      uint64_t v2 = v3;
    }

    while (v3);
  }

uint64_t sub_1001BC2B4(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0LL;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

uint64_t sub_1001BC2EC(uint64_t result, uint64_t a2, float a3)
{
  *(float *)a2 = a3;
  *(void *)(a2 + 4) = result;
  return result;
}

void sub_1001BC2F8(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
}

void sub_1001BC308(uint64_t a1@<X8>)
{
  *(void *)(v1 - _Block_object_dispose(va, 8) = a1;
}

void sub_1001BC314()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_1001BC390(_Unwind_Exception *a1)
{
}

void sub_1001BC3A8()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_100426C40;
      v1[1] = *(_OWORD *)algn_100426C50;
      v1[2] = xmmword_100426C60;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_1001BC448(_Unwind_Exception *a1)
{
}

void sub_1001BC460()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  *(_OWORD *)v45 = xmmword_100426BD0;
  *(_OWORD *)&v45[16] = unk_100426BE0;
  sub_10015EABC((uint64_t)&unk_1007F9220, (int *)v45, 4LL);
  xmmword_1007F9238 = xmmword_100423CB0;
  unk_1007F9248 = xmmword_100423CC0;
  qword_1007F9260 = 0LL;
  unk_1007F9268 = 0LL;
  qword_1007F9258 = 0x3FD999999999999ALL;
  unk_1007F9270 = xmmword_100423CD0;
  dword_1007F9280 = 5;
  qword_1007F9288 = 0x4000000000000000LL;
  dword_1007F9290 = 5;
  byte_1007F9298 = 0;
  unk_1007F929C = 0x30000000ALL;
  xmmword_1007F92A8 = xmmword_100423CE0;
  unk_1007F92B8 = xmmword_100423CF0;
  xmmword_1007F92C8 = xmmword_100423D00;
  qword_1007F92D8 = 0x3FE3333333333333LL;
  dword_1007F92E0 = 3;
  xmmword_1007F92E8 = xmmword_100423D10;
  unk_1007F92F8 = xmmword_100423CF0;
  xmmword_1007F9308 = xmmword_100423CE0;
  qword_1007F9318 = 0x3FE3333333333333LL;
  byte_1007F9320 = 0;
  xmmword_1007F9328 = xmmword_100423D20;
  unk_1007F9338 = xmmword_100423D30;
  __asm { FMOV            V0.2D, #1.0 }

  __int128 v44 = _Q0;
  xmmword_1007F9348 = _Q0;
  qword_1007F9358 = 0xBFD3333333333333LL;
  xmmword_1007F9360 = xmmword_100423D40;
  qword_1007F9370 = 0x3E99999A40000000LL;
  xmmword_1007F9378 = xmmword_100423CC0;
  qword_1007F9390 = 0LL;
  unk_1007F9398 = 0LL;
  qword_1007F9388 = 0x3FD999999999999ALL;
  xmmword_1007F93A0 = xmmword_100423CD0;
  dword_1007F93B0 = 5;
  qword_1007F93B8 = 0x4000000000000000LL;
  dword_1007F93C0 = 4;
  qword_1007F93C8 = 0x300000008LL;
  qword_1007F93D0 = 0xC04E800000000000LL;
  v46.__r_.__value_.__r.__words[0] = 0xC04E800000000000LL;
  sub_10015ED64((uint64_t)&unk_1007F93D8, (double *)&v46, 1LL);
  xmmword_1007F93F0 = xmmword_100423D50;
  qword_1007F9400 = 0x4024000000000000LL;
  dword_1007F9408 = 45;
  byte_1007F9410 = 0;
  byte_1007F9428 = 0;
  qword_1007F9430 = 0LL;
  byte_1007F9438 = 0;
  dword_1007F943C = 1;
  byte_1007F9440 = 1;
  xmmword_1007F9448 = xmmword_100423D60;
  unk_1007F9458 = xmmword_100423D70;
  xmmword_1007F9468 = v44;
  qword_1007F9478 = 0xC059000000000000LL;
  xmmword_1007F9480 = xmmword_100423D80;
  qword_1007F9490 = (uint64_t)vdup_n_s32(0x3DCCCCCDu);
  xmmword_1007F9498 = xmmword_100423CC0;
  qword_1007F94A8 = 0x3FD999999999999ALL;
  qword_1007F94B8 = 0LL;
  qword_1007F94B0 = 0LL;
  xmmword_1007F94C0 = xmmword_100423CD0;
  dword_1007F94D0 = 5;
  qword_1007F94D8 = 0x4000000000000000LL;
  dword_1007F94E0 = 10;
  qword_1007F94E8 = 0x4034000000000000LL;
  dword_1007F94F0 = 3;
  xmmword_1007F94F8 = xmmword_100423D90;
  __cxa_atexit((void (*)(void *))sub_10015CF8C, &unk_1007F9220, (void *)&_mh_execute_header);
  qword_1007F9510 = 0LL;
  unk_1007F9518 = 0LL;
  qword_1007F9508 = 0LL;
  __int128 v6 = operator new(0x40uLL);
  qword_1007F9510 = (uint64_t)(v6 + 4);
  unk_1007F9518 = v6 + 4;
  *__int128 v6 = xmmword_100426BF0;
  v6[1] = unk_100426C00;
  v6[2] = xmmword_100426C10;
  v6[3] = unk_100426C20;
  qword_1007F9508 = (uint64_t)v6;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007F9508, (void *)&_mh_execute_header);
  qword_1007F9528 = 0LL;
  unk_1007F9530 = 0LL;
  qword_1007F9520 = 0LL;
  __int128 v7 = operator new(0x10uLL);
  qword_1007F9528 = (uint64_t)(v7 + 1);
  unk_1007F9530 = v7 + 1;
  *__int128 v7 = xmmword_100426C30;
  qword_1007F9520 = (uint64_t)v7;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007F9520, (void *)&_mh_execute_header);
  sub_100320A4C(0LL, &v46);
  __int128 v8 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v8->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v9;
  v8->__r_.__value_.__l.__size_ = 0LL;
  v8->__r_.__value_.__l.__cap_ = 0LL;
  v8->__r_.__value_.__r.__words[0] = 0LL;
  __int128 v10 = std::string::append((std::string *)v45, ".bin");
  __int128 v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  qword_1007F9548 = v10->__r_.__value_.__l.__cap_;
  xmmword_1007F9538 = v11;
  v10->__r_.__value_.__l.__size_ = 0LL;
  v10->__r_.__value_.__l.__cap_ = 0LL;
  v10->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9538, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v46);
  uint64_t v12 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v12->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v13;
  v12->__r_.__value_.__l.__size_ = 0LL;
  v12->__r_.__value_.__l.__cap_ = 0LL;
  v12->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v14 = std::string::append((std::string *)v45, ".bin");
  __int128 v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  qword_1007F9560 = v14->__r_.__value_.__l.__cap_;
  xmmword_1007F9550 = v15;
  v14->__r_.__value_.__l.__size_ = 0LL;
  v14->__r_.__value_.__l.__cap_ = 0LL;
  v14->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9550, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v46);
  __int128 v16 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v16->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v17;
  v16->__r_.__value_.__l.__size_ = 0LL;
  v16->__r_.__value_.__l.__cap_ = 0LL;
  v16->__r_.__value_.__r.__words[0] = 0LL;
  __int128 v18 = std::string::append((std::string *)v45, ".bin");
  __int128 v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  qword_1007F9578 = v18->__r_.__value_.__l.__cap_;
  xmmword_1007F9568 = v19;
  v18->__r_.__value_.__l.__size_ = 0LL;
  v18->__r_.__value_.__l.__cap_ = 0LL;
  v18->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9568, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v46);
  __int128 v20 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v20->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v21;
  v20->__r_.__value_.__l.__size_ = 0LL;
  v20->__r_.__value_.__l.__cap_ = 0LL;
  v20->__r_.__value_.__r.__words[0] = 0LL;
  __int128 v22 = std::string::append((std::string *)v45, ".bin");
  __int128 v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  qword_1007F9590 = v22->__r_.__value_.__l.__cap_;
  xmmword_1007F9580 = v23;
  v22->__r_.__value_.__l.__size_ = 0LL;
  v22->__r_.__value_.__l.__cap_ = 0LL;
  v22->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9580, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v46);
  __int128 v24 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v24->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v25;
  v24->__r_.__value_.__l.__size_ = 0LL;
  v24->__r_.__value_.__l.__cap_ = 0LL;
  v24->__r_.__value_.__r.__words[0] = 0LL;
  int v26 = std::string::append((std::string *)v45, ".bin");
  __int128 v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  qword_1007F95A8 = v26->__r_.__value_.__l.__cap_;
  xmmword_1007F9598 = v27;
  v26->__r_.__value_.__l.__size_ = 0LL;
  v26->__r_.__value_.__l.__cap_ = 0LL;
  v26->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9598, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v46);
  int v28 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v28->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v29;
  v28->__r_.__value_.__l.__size_ = 0LL;
  v28->__r_.__value_.__l.__cap_ = 0LL;
  v28->__r_.__value_.__r.__words[0] = 0LL;
  char v30 = std::string::append((std::string *)v45, ".bin");
  __int128 v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  qword_1007F95C0 = v30->__r_.__value_.__l.__cap_;
  xmmword_1007F95B0 = v31;
  v30->__r_.__value_.__l.__size_ = 0LL;
  v30->__r_.__value_.__l.__cap_ = 0LL;
  v30->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F95B0, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v46);
  v32 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v32->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v33;
  v32->__r_.__value_.__l.__size_ = 0LL;
  v32->__r_.__value_.__l.__cap_ = 0LL;
  v32->__r_.__value_.__r.__words[0] = 0LL;
  char v34 = std::string::append((std::string *)v45, ".bin");
  __int128 v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
  qword_1007F95D8 = v34->__r_.__value_.__l.__cap_;
  xmmword_1007F95C8 = v35;
  v34->__r_.__value_.__l.__size_ = 0LL;
  v34->__r_.__value_.__l.__cap_ = 0LL;
  v34->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F95C8, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v46);
  uint64_t v36 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v36->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v37;
  v36->__r_.__value_.__l.__size_ = 0LL;
  v36->__r_.__value_.__l.__cap_ = 0LL;
  v36->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v38 = std::string::append((std::string *)v45, ".bin");
  __int128 v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
  qword_1007F95F0 = v38->__r_.__value_.__l.__cap_;
  xmmword_1007F95E0 = v39;
  v38->__r_.__value_.__l.__size_ = 0LL;
  v38->__r_.__value_.__l.__cap_ = 0LL;
  v38->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F95E0, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v46);
  uint64_t v40 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v40->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v41;
  v40->__r_.__value_.__l.__size_ = 0LL;
  v40->__r_.__value_.__l.__cap_ = 0LL;
  v40->__r_.__value_.__r.__words[0] = 0LL;
  v42 = std::string::append((std::string *)v45, ".bin");
  __int128 v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
  qword_1007F9608 = v42->__r_.__value_.__l.__cap_;
  xmmword_1007F95F8 = v43;
  v42->__r_.__value_.__l.__size_ = 0LL;
  v42->__r_.__value_.__l.__cap_ = 0LL;
  v42->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F95F8, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_1001BCD84( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22, uint64_t a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1001BCE14@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B5318[a1]);
}

void *sub_1001BCE28@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B5370[a1]);
}

void *sub_1001BCE3C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B53B8[a1]);
}

void *sub_1001BCE50@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B53D8[a1]);
}

void sub_1001BCF88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_1001BCFA8(uint64_t a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) printableState]);
  uint64_t v2 = sub_100024190(@"Finding Service", v1);

  return v2;
}

void sub_1001BCFEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001BD03C(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___NIServerFindingServicePool);
  uint64_t v2 = (void *)qword_1007F9A10;
  qword_1007F9A10 = (uint64_t)v1;
}

void sub_1001BD22C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v3);
  _Unwind_Resume(a1);
}

void sub_1001BD3EC(_Unwind_Exception *a1)
{
  unint64_t v5 = v3;

  std::mutex::unlock(v2);
  _Unwind_Resume(a1);
}

void sub_1001BD484( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001BD4F8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001BD93C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, void *a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  std::mutex::unlock(a11);
  _Unwind_Resume(a1);
}

void sub_1001BDC84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001BDF38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001BDF60(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001BDF70(uint64_t a1)
{
}

void sub_1001BDF78(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) objectForKey:*(void *)(a1 + 40)]);

  if (!v2)
  {
    uint64_t v3 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      unsigned int v5 = [*(id *)(*(void *)(a1 + 32) + 32) count];
      int v20 = 138543618;
      uint64_t v21 = v4;
      __int16 v22 = 1026;
      unsigned int v23 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#find-ses,Service add client %{public}@ (%{public}d previous clients)",  (uint8_t *)&v20,  0x12u);
    }

    [*(id *)(*(void *)(a1 + 32) + 32) setObject:*(void *)(a1 + 48) forKey:*(void *)(a1 + 40)];
    [*(id *)(*(void *)(a1 + 32) + 40) setObject:*(void *)(a1 + 56) forKey:*(void *)(a1 + 40)];
    [*(id *)(*(void *)(a1 + 32) + 48) setObject:&__kCFBooleanTrue forKey:*(void *)(a1 + 40)];
    if ([*(id *)(*(void *)(a1 + 32) + 32) count] == (id)1)
    {
      uint64_t v6 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) specifiedToken]);
      uint64_t v7 = *(void *)(a1 + 32);
      __int128 v8 = *(void **)(v7 + 88);
      *(void *)(v7 + 8_Block_object_dispose(va, 8) = v6;
    }

    __int128 v9 = (void *)objc_claimAutoreleasedReturnValue( +[NIServerFindingServicePool sharedInstance]( &OBJC_CLASS___NIServerFindingServicePool,  "sharedInstance"));
    [v9 setService:*(void *)(a1 + 32) forToken:*(void *)(*(void *)(a1 + 32) + 88)];

    __int128 v10 = *(_DWORD **)(a1 + 32);
    if (v10[14] == 1)
    {
      __int128 v11 = -[NINearbyObject initWithToken:]( objc_alloc(&OBJC_CLASS___NINearbyObject),  "initWithToken:",  *(void *)(*(void *)(a1 + 32) + 88LL));
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 104) advertisingPeers]);
      __int128 v13 = (void *)objc_claimAutoreleasedReturnValue([v12 objectForKey:*(void *)(*(void *)(a1 + 32) + 88)]);

      [*(id *)(a1 + 32) _processUpdatedCommonConfigurationIfNecessary];
      unint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 104) advertisingPeers]);
      __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([v14 objectForKey:*(void *)(*(void *)(a1 + 32) + 88)]);

      if (v15)
      {
        if ([v15 isEqual:v13])
        {
          __int128 v16 = *(void **)(a1 + 48);
          __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v15 byteRepresentation]);
          [v16 serviceDidGenerateShareableConfigurationData:v17 forObject:v11];
        }
      }
    }

    else
    {
      uint64_t v18 = objc_claimAutoreleasedReturnValue([v10 _startService]);
      uint64_t v19 = *(void *)(*(void *)(a1 + 64) + 8LL);
      __int128 v11 = *(NINearbyObject **)(v19 + 40);
      *(void *)(v19 + 40) = v18;
    }
  }

void sub_1001BE210(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001BE318(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1 + 40) + 32), "objectForKey:"));

    if (v2)
    {
      uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 48) objectForKey:*(void *)(a1 + 32)]);
      if (!v3) {
        __assert_rtn( "-[NIServerFindingService clientWithIdentifier:updatedStateToRunning:dueToTimeout:]_block_invoke",  "NIServerFindingSession.mm",  565,  "previousRunState != nil");
      }
      uint64_t v4 = *(void **)(*(void *)(a1 + 40) + 48LL);
      unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(a1 + 48)));
      [v4 setObject:v5 forKey:*(void *)(a1 + 32)];

      unsigned int v6 = [*(id *)(a1 + 40) _isAnyClientRunning];
      uint64_t v7 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v8 = *(void *)(a1 + 32);
        int v9 = *(unsigned __int8 *)(a1 + 48);
        unsigned int v10 = [v3 BOOLValue];
        int v11 = *(unsigned __int8 *)(a1 + 49);
        int v12 = *(_DWORD *)(*(void *)(a1 + 40) + 56LL);
        __int128 v13 = "Idle";
        if (v12 == 1) {
          __int128 v13 = "Running";
        }
        int v18 = 138544642;
        if (v12 == 2) {
          unint64_t v14 = "Paused";
        }
        else {
          unint64_t v14 = v13;
        }
        uint64_t v19 = v8;
        __int16 v20 = 1026;
        int v21 = v9;
        __int16 v22 = 1026;
        unsigned int v23 = v10;
        __int16 v24 = 1026;
        int v25 = v11;
        __int16 v26 = 2082;
        __int128 v27 = v14;
        __int16 v28 = 1026;
        unsigned int v29 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#find-ses,Service client %{public}@ updated its run state to %{public}d (previous %{public}d) due to timeout % {public}d. Service state: %{public}s. Is any client running %{public}d",  (uint8_t *)&v18,  0x2Eu);
      }

      __int128 v15 = *(_DWORD **)(a1 + 40);
      int v16 = v15[14];
      switch(v16)
      {
        case 2:
          goto LABEL_14;
        case 1:
          if ((v6 & 1) == 0) {
            [v15 _pauseServiceDueToClientTimeout:*(unsigned __int8 *)(a1 + 49)];
          }
          break;
        case 0:
LABEL_14:
          if (v6) {
            id v17 = [v15 _startService];
          }
          break;
      }
    }
  }

void sub_1001BE524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001BE5E4(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1 + 40) + 40), "objectForKey:"));

    if (v2)
    {
      uint64_t v3 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        int v4 = *(unsigned __int8 *)(a1 + 48);
        uint64_t v5 = *(void *)(a1 + 32);
        unsigned int v6 = [*(id *)(*(void *)(a1 + 40) + 32) count];
        *(_DWORD *)uint64_t v19 = 138543874;
        *(void *)&__n128 v19[4] = v5;
        __int16 v20 = 1026;
        *(_DWORD *)int v21 = v4;
        *(_WORD *)&v21[4] = 1026;
        *(_DWORD *)&void v21[6] = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#find-ses,Service removing client %{public}@ due to timeout %{public}d (%{public}d clients before removal)",  v19,  0x18u);
      }

      [*(id *)(*(void *)(a1 + 40) + 32) removeObjectForKey:*(void *)(a1 + 32)];
      [*(id *)(*(void *)(a1 + 40) + 40) removeObjectForKey:*(void *)(a1 + 32)];
      [*(id *)(*(void *)(a1 + 40) + 48) removeObjectForKey:*(void *)(a1 + 32)];
      id v7 = [*(id *)(*(void *)(a1 + 40) + 32) count];
      uint64_t v8 = *(id **)(a1 + 40);
      if (v7)
      {
        unsigned int v9 = [v8 _isAnyClientRunning];
        unsigned int v10 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v11 = *(void *)(a1 + 32);
          int v12 = *(_DWORD *)(*(void *)(a1 + 40) + 56LL);
          __int128 v13 = "Idle";
          if (v12 == 1) {
            __int128 v13 = "Running";
          }
          *(_DWORD *)uint64_t v19 = 138543874;
          if (v12 == 2) {
            unint64_t v14 = "Paused";
          }
          else {
            unint64_t v14 = v13;
          }
          *(void *)&__n128 v19[4] = v11;
          __int16 v20 = 2082;
          *(void *)int v21 = v14;
          *(_WORD *)&v21[8] = 1026;
          unsigned int v22 = v9;
          _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#find-ses,Update service after removing client %{public}@. Service state: %{public}s. Is any client running %{public}d",  v19,  0x1Cu);
        }

        __int128 v15 = *(_DWORD **)(a1 + 40);
        if (v15[14] == 1) {
          char v16 = v9;
        }
        else {
          char v16 = 1;
        }
        if ((v16 & 1) == 0)
        {
          [v15 _pauseServiceDueToClientTimeout:*(unsigned __int8 *)(a1 + 48)];
          __int128 v15 = *(_DWORD **)(a1 + 40);
        }

        objc_msgSend(v15, "_processUpdatedCommonConfigurationIfNecessary", *(void *)v19);
      }

      else
      {
        id v17 = v8[11];
        [*(id *)(a1 + 40) _resetServiceStateForOperation:2];
        int v18 = (void *)objc_claimAutoreleasedReturnValue( +[NIServerFindingServicePool sharedInstance]( &OBJC_CLASS___NIServerFindingServicePool,  "sharedInstance"));
        [v18 setService:0 forToken:v17];
      }
    }
  }

void sub_1001BE834(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001BE8E0(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 104) advertisingPeers]);
  id v7 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKey:*(void *)(*(void *)(a1 + 32) + 88)]);

  uint64_t v3 = v7;
  if (v7)
  {
    int v4 = -[NINearbyObject initWithToken:]( objc_alloc(&OBJC_CLASS___NINearbyObject),  "initWithToken:",  *(void *)(*(void *)(a1 + 32) + 88LL));
    uint64_t v5 = *(void **)(a1 + 40);
    unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([v7 byteRepresentation]);
    [v5 serviceDidGenerateShareableConfigurationData:v6 forObject:v4];

    uint64_t v3 = v7;
  }
}

void sub_1001BE98C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  int v12 = v10;

  _Unwind_Resume(a1);
}

id sub_1001BEA70(uint64_t a1)
{
  return [*(id *)(a1 + 32) _processUpdatedCommonConfigurationIfNecessary];
}

void sub_1001BEB1C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 160);
  if (v3)
  {
    [v3 timestamp];
    double v5 = v4;
    [*(id *)(a1 + 40) timestamp];
    if (v5 >= v6) {
      return;
    }
    uint64_t v2 = *(void *)(a1 + 32);
  }

  [*(id *)(v2 + 120) acceptVisionInput:*(void *)(a1 + 40)];
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 160LL), *(id *)(a1 + 40));
}

void sub_1001BECE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1001BED08(void *result)
{
  uint64_t v1 = result[4];
  if (*(void *)(v1 + 88)) {
    return objc_msgSend(*(id *)(v1 + 104), "processAdvertisement:receivedOOBFromPeer:", result[5]);
  }
  return result;
}

void sub_1001BEE3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1001BEE54(void *result)
{
  uint64_t v1 = result[4];
  if (*(void *)(v1 + 88)) {
    return objc_msgSend(*(id *)(v1 + 104), "processLostEventReceivedOOBFromPeer:");
  }
  return result;
}

void sub_1001BEF78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001BEF94(uint64_t a1)
{
  uint64_t v28 = v2;
  [*(id *)(a1 + 32) longitude];
  uint64_t v27 = v3;
  double v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) timestamp]);
  [v4 timeIntervalSinceReferenceDate];
  uint64_t v26 = v5;
  [*(id *)(a1 + 32) course];
  uint64_t v7 = v6;
  [*(id *)(a1 + 32) courseAccuracy];
  uint64_t v9 = v8;
  [*(id *)(a1 + 32) speed];
  uint64_t v11 = v10;
  [*(id *)(a1 + 32) speedAccuracy];
  uint64_t v13 = v12;
  [*(id *)(a1 + 32) horizontalAccuracy];
  uint64_t v15 = v14;
  [*(id *)(a1 + 32) verticalAccuracy];
  uint64_t v17 = v16;
  [*(id *)(a1 + 32) altitude];
  uint64_t v19 = v18;
  [*(id *)(a1 + 32) ellipsoidalAltitude];
  uint64_t v21 = v20;
  unsigned int v22 = [*(id *)(a1 + 32) floor];
  unsigned int v23 = [*(id *)(a1 + 32) locationType];
  unsigned int v24 = [*(id *)(a1 + 32) signalEnvironment];
  v29[0] = v28;
  v29[1] = v27;
  void v29[2] = v26;
  v29[3] = v7;
  v29[4] = v9;
  v29[5] = v11;
  v29[6] = v13;
  v29[7] = v15;
  v29[8] = v17;
  v29[9] = v19;
  v29[10] = v21;
  unsigned int v30 = v22;
  unsigned int v31 = v23;
  unsigned int v32 = v24;

  return [*(id *)(*(void *)(a1 + 40) + 120) acceptSelfLocationData:v29];
}

void sub_1001BF0D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001BF1D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001BF1F4(uint64_t a1)
{
  uint64_t v3 = v2;
  [*(id *)(a1 + 32) trueHeading];
  uint64_t v5 = v4;
  [*(id *)(a1 + 32) headingAccuracy];
  uint64_t v7 = v6;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) timestamp]);
  [v8 timeIntervalSinceReferenceDate];
  v11[0] = v3;
  v11[1] = v5;
  v11[2] = v7;
  v11[3] = v9;

  return [*(id *)(*(void *)(a1 + 40) + 120) acceptHeadingData:v11];
}

void sub_1001BF27C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001BF3F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001BF418(uint64_t a1)
{
  uint64_t v28 = v2;
  [*(id *)(a1 + 32) longitude];
  uint64_t v27 = v3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) timestamp]);
  [v4 timeIntervalSinceReferenceDate];
  uint64_t v26 = v5;
  [*(id *)(a1 + 32) course];
  uint64_t v7 = v6;
  [*(id *)(a1 + 32) courseAccuracy];
  uint64_t v9 = v8;
  [*(id *)(a1 + 32) speed];
  uint64_t v11 = v10;
  [*(id *)(a1 + 32) speedAccuracy];
  uint64_t v13 = v12;
  [*(id *)(a1 + 32) horizontalAccuracy];
  uint64_t v15 = v14;
  [*(id *)(a1 + 32) verticalAccuracy];
  uint64_t v17 = v16;
  [*(id *)(a1 + 32) altitude];
  uint64_t v19 = v18;
  [*(id *)(a1 + 32) ellipsoidalAltitude];
  uint64_t v21 = v20;
  unsigned int v22 = [*(id *)(a1 + 32) floor];
  unsigned int v23 = [*(id *)(a1 + 32) locationType];
  unsigned int v24 = [*(id *)(a1 + 32) signalEnvironment];
  v29[0] = v28;
  v29[1] = v27;
  void v29[2] = v26;
  v29[3] = v7;
  v29[4] = v9;
  v29[5] = v11;
  v29[6] = v13;
  v29[7] = v15;
  v29[8] = v17;
  v29[9] = v19;
  v29[10] = v21;
  unsigned int v30 = v22;
  unsigned int v31 = v23;
  unsigned int v32 = v24;

  return [*(id *)(*(void *)(a1 + 40) + 120) acceptPeerLocationData:v29 forPeer:*(void *)(a1 + 48)];
}

void sub_1001BF554(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C0140( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28)
{
  _Unwind_Resume(a1);
}

void sub_1001C05A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C05D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v1 = (void *)*((void *)WeakRetained + 12);
    *((void *)WeakRetained + 12) = 0LL;

    if ([*((id *)WeakRetained + 4) count])
    {
    }
  }
}

void sub_1001C063C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001C0800(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C0954(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C0A3C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_1001C0A54(uint64_t a1, uint64_t a2, void *a3, _BYTE *a4)
{
  id result = [a3 BOOLValue];
  if ((_DWORD)result)
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 1;
    *a4 = 1;
  }

  return result;
}

void sub_1001C100C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001C10DC(uint64_t a1, void *a2)
{
  return [a2 serviceDidRemoveNearbyObject:*(void *)(a1 + 32)];
}

void sub_1001C1380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C13F0(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 72) objectForKeyedSubscript:v9]);

  if (v6)
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 72) objectForKeyedSubscript:v9]);
    [v7 timeIntervalSinceDate:*(void *)(a1 + 40)];
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
    [*(id *)(*(void *)(a1 + 32) + 72) setObject:v8 forKeyedSubscript:v5];
  }
}

void sub_1001C14AC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001C14DC(uint64_t a1, void *a2)
{
  id v7 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 72), "objectForKeyedSubscript:"));

  if (v3)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 72) objectForKeyedSubscript:v7]);
    id v5 = sub_100277B78(v4);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    [*(id *)(*(void *)(a1 + 32) + 72) setObject:v6 forKeyedSubscript:v7];
  }
}

void sub_1001C1574( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001C15A0(uint64_t a1, void *a2)
{
  id v7 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 72), "objectForKeyedSubscript:"));

  if (v3)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 72) objectForKeyedSubscript:v7]);
    [v4 doubleValue];
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%0.1f s", v5));
    [*(id *)(*(void *)(a1 + 32) + 72) setObject:v6 forKeyedSubscript:v7];
  }
}

void sub_1001C1654( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001C1680(uint64_t a1, void *a2)
{
  id v7 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 72), "objectForKeyedSubscript:"));

  if (v3)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 72) objectForKeyedSubscript:v7]);
    [v4 doubleValue];
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%0.2f m", v5));
    [*(id *)(*(void *)(a1 + 32) + 72) setObject:v6 forKeyedSubscript:v7];
  }
}

void sub_1001C1734( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001C1920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001C1AA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C1BDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C1D04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C1F68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001C1FEC(uint64_t a1, void *a2)
{
  return [a2 serviceDidGenerateShareableConfigurationData:*(void *)(a1 + 32) forObject:*(void *)(a1 + 40)];
}

void sub_1001C20D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C21C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C22BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C2484(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C2590(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C28BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C2A50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C2B74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C2C8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C2EF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C2FEC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001C3054( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001C30BC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001C3124( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001C3194( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001C3204( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001C3B20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C3DD4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  _Unwind_Resume(a1);
}

void sub_1001C4144( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  _Unwind_Resume(a1);
}

void sub_1001C4338( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id a11)
{
  _Unwind_Resume(a1);
}

void sub_1001C4380(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 revokeFindingExperience])
  {
    [*(id *)(a1 + 32) _removeAlgorithmOutputFlagsFromPeerTrackingState:255];
    uint64_t v4 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#find-ses,Revoking finding experience",  v8,  2u);
    }
  }

  else
  {
    [v3 distance];
    if (v5 != NINearbyObjectDistanceNotAvailable)
    {
      uint64_t v6 = *(void **)(*(void *)(a1 + 32) + 264LL);
      [v3 distance];
      [v6 updateWithMostRecentDistance:v7];
      [*(id *)(a1 + 32) _addAlgorithmOutputFlagsToPeerTrackingState:1];
    }
  }
}

void sub_1001C4458(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C454C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001C4654( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001C4888(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C49BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C4AF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C4B58( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001C4CF0(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___NIServerFindingServiceObserverRelay);
  uint64_t v2 = (void *)qword_1007F9A20;
  qword_1007F9A20 = (uint64_t)v1;
}

void sub_1001C4DA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C4F00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C5050(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C50C4(_Unwind_Exception *a1)
{
}

void sub_1001C51DC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001C5328( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, id a26)
{
  _Unwind_Resume(a1);
}

void sub_1001C534C(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "objectForKey:"));

  if (!v3) {
    [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v4];
  }
}

void sub_1001C53B0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001C53C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138543362;
    id v6 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#find-ses,Remove stale observer from relay: %{public}@",  (uint8_t *)&v5,  0xCu);
  }

  [*(id *)(*(void *)(a1 + 32) + 8) removeObjectForKey:v3];
  [*(id *)(*(void *)(a1 + 32) + 16) removeObjectForKey:v3];
}

void sub_1001C5498(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C57BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C5AB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C5E00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C6164(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C6260( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
}

void sub_1001C6570(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C67BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C67E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v1 = (void *)WeakRetained[11];
    WeakRetained[11] = 0LL;

    [WeakRetained _resetSessionStateForOperation:1];
  }
}

void sub_1001C6838( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001C68FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C6D08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C6E50(uint64_t a1)
{
  v5.receiver = *(id *)(a1 + 32);
  v5.super_class = (Class)&OBJC_CLASS___NIServerFindingSession;
  id v2 = objc_msgSendSuper2(&v5, "resourcesManager");
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 remote]);
  [v4 didGenerateShareableConfigurationData:*(void *)(a1 + 40) forObject:*(void *)(a1 + 48)];
}

void sub_1001C6EC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C6F60(uint64_t a1)
{
  v5.receiver = *(id *)(a1 + 32);
  v5.super_class = (Class)&OBJC_CLASS___NIServerFindingSession;
  id v2 = objc_msgSendSuper2(&v5, "resourcesManager");
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 remote]);
  [v4 didDiscoverNearbyObject:*(void *)(a1 + 40)];
}

void sub_1001C6FD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C7070(uint64_t a1)
{
  v6.receiver = *(id *)(a1 + 32);
  v6.super_class = (Class)&OBJC_CLASS___NIServerFindingSession;
  id v2 = objc_msgSendSuper2(&v6, "resourcesManager");
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 remote]);
  uint64_t v7 = *(void *)(a1 + 40);
  objc_super v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v7, 1LL));
  [v4 didRemoveNearbyObjects:v5 withReason:0];
}

void sub_1001C713C(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001C71F4(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 104) preferredUpdateRate] != (id)3)
  {
    id v2 = *(_BYTE **)(a1 + 32);
    if (v2[57])
    {
      if (!v2[58])
      {
        v2[58] = 1;
        id v3 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 80LL);
          objc_super v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) firstObject]);
          [v5 distance];
          *(_DWORD *)buf = 138543618;
          uint64_t v12 = v4;
          __int16 v13 = 2050;
          double v14 = v6;
          _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#find-ses,Delivered first update [%{public}@]. Range: %{public}0.2f",  buf,  0x16u);
        }

        id v2 = *(_BYTE **)(a1 + 32);
      }

      v10.receiver = v2;
      v10.super_class = (Class)&OBJC_CLASS___NIServerFindingSession;
      id v7 = objc_msgSendSuper2(&v10, "resourcesManager");
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
      id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 remote]);
      [v9 didUpdateNearbyObjects:*(void *)(a1 + 40)];
    }
  }

void sub_1001C7364(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C7450(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 104) preferredUpdateRate] != (id)3)
  {
    if (*(_BYTE *)(*(void *)(a1 + 32) + 57LL))
    {
      v5.receiver = *(id *)(a1 + 32);
      v5.super_class = (Class)&OBJC_CLASS___NIServerFindingSession;
      id v2 = objc_msgSendSuper2(&v5, "resourcesManager");
      id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
      uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 remote]);
      [v4 didUpdateAlgorithmState:*(void *)(a1 + 40) forObject:*(void *)(a1 + 48)];
    }
  }

void sub_1001C74EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C75E0(_Unwind_Exception *a1)
{
  float v6 = v5;

  _Unwind_Resume(a1);
}

void sub_1001C76BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001C7780(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a3 = a4;
  *(void *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2113;
  *(void *)(a3 + 14) = a2;
  return result;
}

void sub_1001C7798()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_1001C7814(_Unwind_Exception *a1)
{
}

void sub_1001C782C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_100427920;
      v1[1] = *(_OWORD *)algn_100427930;
      v1[2] = xmmword_100427940;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_1001C78CC(_Unwind_Exception *a1)
{
}

void sub_1001C78E4()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  *(_OWORD *)v45 = xmmword_1004278B0;
  *(_OWORD *)&v45[16] = unk_1004278C0;
  sub_10015EABC((uint64_t)&unk_1007F9620, (int *)v45, 4LL);
  xmmword_1007F9638 = xmmword_100423CB0;
  unk_1007F9648 = xmmword_100423CC0;
  qword_1007F9660 = 0LL;
  unk_1007F9668 = 0LL;
  qword_1007F9658 = 0x3FD999999999999ALL;
  unk_1007F9670 = xmmword_100423CD0;
  dword_1007F9680 = 5;
  qword_1007F9688 = 0x4000000000000000LL;
  dword_1007F9690 = 5;
  byte_1007F9698 = 0;
  unk_1007F969C = 0x30000000ALL;
  xmmword_1007F96A8 = xmmword_100423CE0;
  unk_1007F96B8 = xmmword_100423CF0;
  xmmword_1007F96C8 = xmmword_100423D00;
  qword_1007F96D8 = 0x3FE3333333333333LL;
  dword_1007F96E0 = 3;
  xmmword_1007F96E8 = xmmword_100423D10;
  unk_1007F96F8 = xmmword_100423CF0;
  xmmword_1007F9708 = xmmword_100423CE0;
  qword_1007F9718 = 0x3FE3333333333333LL;
  byte_1007F9720 = 0;
  xmmword_1007F9728 = xmmword_100423D20;
  unk_1007F9738 = xmmword_100423D30;
  __asm { FMOV            V0.2D, #1.0 }

  __int128 v44 = _Q0;
  xmmword_1007F9748 = _Q0;
  qword_1007F9758 = 0xBFD3333333333333LL;
  xmmword_1007F9760 = xmmword_100423D40;
  qword_1007F9770 = 0x3E99999A40000000LL;
  xmmword_1007F9778 = xmmword_100423CC0;
  qword_1007F9790 = 0LL;
  unk_1007F9798 = 0LL;
  qword_1007F9788 = 0x3FD999999999999ALL;
  xmmword_1007F97A0 = xmmword_100423CD0;
  dword_1007F97B0 = 5;
  qword_1007F97B8 = 0x4000000000000000LL;
  dword_1007F97C0 = 4;
  qword_1007F97C8 = 0x300000008LL;
  qword_1007F97D0 = 0xC04E800000000000LL;
  v46.__r_.__value_.__r.__words[0] = 0xC04E800000000000LL;
  sub_10015ED64((uint64_t)&unk_1007F97D8, (double *)&v46, 1LL);
  xmmword_1007F97F0 = xmmword_100423D50;
  qword_1007F9800 = 0x4024000000000000LL;
  dword_1007F9808 = 45;
  byte_1007F9810 = 0;
  byte_1007F9828 = 0;
  qword_1007F9830 = 0LL;
  byte_1007F9838 = 0;
  dword_1007F983C = 1;
  byte_1007F9840 = 1;
  xmmword_1007F9848 = xmmword_100423D60;
  unk_1007F9858 = xmmword_100423D70;
  xmmword_1007F9868 = v44;
  qword_1007F9878 = 0xC059000000000000LL;
  xmmword_1007F9880 = xmmword_100423D80;
  qword_1007F9890 = (uint64_t)vdup_n_s32(0x3DCCCCCDu);
  xmmword_1007F9898 = xmmword_100423CC0;
  qword_1007F98A8 = 0x3FD999999999999ALL;
  qword_1007F98B8 = 0LL;
  qword_1007F98B0 = 0LL;
  xmmword_1007F98C0 = xmmword_100423CD0;
  dword_1007F98D0 = 5;
  qword_1007F98D8 = 0x4000000000000000LL;
  dword_1007F98E0 = 10;
  qword_1007F98E8 = 0x4034000000000000LL;
  dword_1007F98F0 = 3;
  xmmword_1007F98F8 = xmmword_100423D90;
  __cxa_atexit((void (*)(void *))sub_10015CF8C, &unk_1007F9620, (void *)&_mh_execute_header);
  qword_1007F9910 = 0LL;
  unk_1007F9918 = 0LL;
  qword_1007F9908 = 0LL;
  float v6 = operator new(0x40uLL);
  qword_1007F9910 = (uint64_t)(v6 + 4);
  unk_1007F9918 = v6 + 4;
  *float v6 = xmmword_1004278D0;
  v6[1] = unk_1004278E0;
  v6[2] = xmmword_1004278F0;
  v6[3] = unk_100427900;
  qword_1007F9908 = (uint64_t)v6;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007F9908, (void *)&_mh_execute_header);
  qword_1007F9928 = 0LL;
  unk_1007F9930 = 0LL;
  qword_1007F9920 = 0LL;
  id v7 = operator new(0x10uLL);
  qword_1007F9928 = (uint64_t)(v7 + 1);
  unk_1007F9930 = v7 + 1;
  *id v7 = xmmword_100427910;
  qword_1007F9920 = (uint64_t)v7;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007F9920, (void *)&_mh_execute_header);
  sub_100320A4C(0LL, &v46);
  uint64_t v8 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v8->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v9;
  v8->__r_.__value_.__l.__size_ = 0LL;
  v8->__r_.__value_.__l.__cap_ = 0LL;
  v8->__r_.__value_.__r.__words[0] = 0LL;
  objc_super v10 = std::string::append((std::string *)v45, ".bin");
  __int128 v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  qword_1007F9948 = v10->__r_.__value_.__l.__cap_;
  xmmword_1007F9938 = v11;
  v10->__r_.__value_.__l.__size_ = 0LL;
  v10->__r_.__value_.__l.__cap_ = 0LL;
  v10->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9938, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v46);
  uint64_t v12 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v12->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v13;
  v12->__r_.__value_.__l.__size_ = 0LL;
  v12->__r_.__value_.__l.__cap_ = 0LL;
  v12->__r_.__value_.__r.__words[0] = 0LL;
  double v14 = std::string::append((std::string *)v45, ".bin");
  __int128 v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  qword_1007F9960 = v14->__r_.__value_.__l.__cap_;
  xmmword_1007F9950 = v15;
  v14->__r_.__value_.__l.__size_ = 0LL;
  v14->__r_.__value_.__l.__cap_ = 0LL;
  v14->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9950, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v46);
  uint64_t v16 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v16->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v17;
  v16->__r_.__value_.__l.__size_ = 0LL;
  v16->__r_.__value_.__l.__cap_ = 0LL;
  v16->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v18 = std::string::append((std::string *)v45, ".bin");
  __int128 v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  qword_1007F9978 = v18->__r_.__value_.__l.__cap_;
  xmmword_1007F9968 = v19;
  v18->__r_.__value_.__l.__size_ = 0LL;
  v18->__r_.__value_.__l.__cap_ = 0LL;
  v18->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9968, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v46);
  uint64_t v20 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v20->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v21;
  v20->__r_.__value_.__l.__size_ = 0LL;
  v20->__r_.__value_.__l.__cap_ = 0LL;
  v20->__r_.__value_.__r.__words[0] = 0LL;
  unsigned int v22 = std::string::append((std::string *)v45, ".bin");
  __int128 v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  qword_1007F9990 = v22->__r_.__value_.__l.__cap_;
  xmmword_1007F9980 = v23;
  v22->__r_.__value_.__l.__size_ = 0LL;
  v22->__r_.__value_.__l.__cap_ = 0LL;
  v22->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9980, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v46);
  unsigned int v24 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v24->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v25;
  v24->__r_.__value_.__l.__size_ = 0LL;
  v24->__r_.__value_.__l.__cap_ = 0LL;
  v24->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v26 = std::string::append((std::string *)v45, ".bin");
  __int128 v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  qword_1007F99A8 = v26->__r_.__value_.__l.__cap_;
  xmmword_1007F9998 = v27;
  v26->__r_.__value_.__l.__size_ = 0LL;
  v26->__r_.__value_.__l.__cap_ = 0LL;
  v26->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9998, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v46);
  uint64_t v28 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v28->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v29;
  v28->__r_.__value_.__l.__size_ = 0LL;
  v28->__r_.__value_.__l.__cap_ = 0LL;
  v28->__r_.__value_.__r.__words[0] = 0LL;
  unsigned int v30 = std::string::append((std::string *)v45, ".bin");
  __int128 v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  qword_1007F99C0 = v30->__r_.__value_.__l.__cap_;
  xmmword_1007F99B0 = v31;
  v30->__r_.__value_.__l.__size_ = 0LL;
  v30->__r_.__value_.__l.__cap_ = 0LL;
  v30->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F99B0, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v46);
  unsigned int v32 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v32->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v33;
  v32->__r_.__value_.__l.__size_ = 0LL;
  v32->__r_.__value_.__l.__cap_ = 0LL;
  v32->__r_.__value_.__r.__words[0] = 0LL;
  char v34 = std::string::append((std::string *)v45, ".bin");
  __int128 v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
  qword_1007F99D8 = v34->__r_.__value_.__l.__cap_;
  xmmword_1007F99C8 = v35;
  v34->__r_.__value_.__l.__size_ = 0LL;
  v34->__r_.__value_.__l.__cap_ = 0LL;
  v34->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F99C8, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v46);
  uint64_t v36 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v36->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v37;
  v36->__r_.__value_.__l.__size_ = 0LL;
  v36->__r_.__value_.__l.__cap_ = 0LL;
  v36->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v38 = std::string::append((std::string *)v45, ".bin");
  __int128 v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
  qword_1007F99F0 = v38->__r_.__value_.__l.__cap_;
  xmmword_1007F99E0 = v39;
  v38->__r_.__value_.__l.__size_ = 0LL;
  v38->__r_.__value_.__l.__cap_ = 0LL;
  v38->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F99E0, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v46);
  uint64_t v40 = std::string::insert(&v46, 0LL, "reverseLUT_A");
  __int128 v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
  *(void *)&v45[16] = v40->__r_.__value_.__l.__cap_;
  *(_OWORD *)v45 = v41;
  v40->__r_.__value_.__l.__size_ = 0LL;
  v40->__r_.__value_.__l.__cap_ = 0LL;
  v40->__r_.__value_.__r.__words[0] = 0LL;
  v42 = std::string::append((std::string *)v45, ".bin");
  __int128 v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
  qword_1007F9A08 = v42->__r_.__value_.__l.__cap_;
  xmmword_1007F99F8 = v43;
  v42->__r_.__value_.__l.__size_ = 0LL;
  v42->__r_.__value_.__l.__cap_ = 0LL;
  v42->__r_.__value_.__r.__words[0] = 0LL;
  if ((v45[23] & 0x80000000) != 0) {
    operator delete(*(void **)v45);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F99F8, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_1001C8208( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22, uint64_t a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001C842C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C855C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001C8634(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C8900(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C8F0C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20)
{
  __int128 v23 = *(void **)(v21 - 112);
  if (v23)
  {
    *(void *)(v21 - 104) = v23;
    operator delete(v23);
  }

  if (__p) {
    operator delete(__p);
  }
  if (a19) {
    operator delete(a19);
  }
  unsigned int v24 = *(void **)(v21 - 80);
  if (v24)
  {
    *(void *)(v21 - 72) = v24;
    operator delete(v24);
  }

  _Unwind_Resume(a1);
}

void sub_1001C8FA8(unint64_t *a1, unint64_t a2)
{
  unint64_t v2 = a1[1] - *a1;
  BOOL v3 = a2 >= v2;
  size_t v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    sub_1000353EC(a1, v4);
  }

  else if (!v3)
  {
    a1[1] = *a1 + a2;
  }

void sub_1001C97E8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, void *__p, uint64_t a26)
{
  if (__p) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  if (a19) {
    operator delete(a19);
  }
  unsigned int v30 = *(void **)(v28 - 144);
  if (v30)
  {
    *(void *)(v28 - 136) = v30;
    operator delete(v30);
  }

  __int128 v31 = *(void **)(v28 - 112);
  if (v31)
  {
    *(void *)(v28 - 104) = v31;
    operator delete(v31);
  }

  unsigned int v32 = *(void **)(v28 - 80);
  if (v32)
  {
    *(void *)(v28 - 72) = v32;
    operator delete(v32);
  }

  _Unwind_Resume(a1);
}

void sub_1001C98F4(void *a1, unint64_t a2, _BYTE *a3)
{
  unint64_t v3 = a1[1] - *a1;
  BOOL v4 = a2 >= v3;
  unint64_t v5 = a2 - v3;
  if (v5 != 0 && v4)
  {
    sub_1001C9BC8(a1, v5, a3);
  }

  else if (!v4)
  {
    a1[1] = *a1 + a2;
  }

void sub_1001C9B2C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1001C9BC8(void *a1, unint64_t a2, _BYTE *a3)
{
  unint64_t v4 = a2;
  id v7 = (_BYTE *)a1[1];
  uint64_t v6 = a1[2];
  if (v6 - (uint64_t)v7 >= a2)
  {
    if (a2)
    {
      __int128 v13 = &v7[a2];
      do
      {
        *v7++ = *a3;
        --v4;
      }

      while (v4);
      id v7 = v13;
    }

    a1[1] = v7;
  }

  else
  {
    uint64_t v8 = &v7[-*a1];
    unint64_t v9 = (unint64_t)&v8[a2];
    unint64_t v10 = v6 - *a1;
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v11 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v11 = v9;
    }
    if (v11) {
      uint64_t v12 = operator new(v11);
    }
    else {
      uint64_t v12 = 0LL;
    }
    double v14 = &v8[(void)v12];
    __int128 v15 = &v8[(void)v12 + v4];
    uint64_t v16 = &v8[(void)v12];
    do
    {
      *v16++ = *a3;
      --v4;
    }

    while (v4);
    __int128 v17 = (_BYTE *)*a1;
    if (v7 != (_BYTE *)*a1)
    {
      do
      {
        char v18 = *--v7;
        *--double v14 = v18;
      }

      while (v7 != v17);
      id v7 = (_BYTE *)*a1;
    }

    *a1 = v14;
    a1[1] = v15;
    a1[2] = (char *)v12 + v11;
    if (v7) {
      operator delete(v7);
    }
  }

void sub_1001C9CF8(uint64_t a1@<X8>)
{
  *(void *)(v1 - _Block_object_dispose(va, 8) = a1;
}

uint64_t sub_1001C9D04(uint64_t result, int a2, uint64_t a3, float a4)
{
  *(float *)a3 = a4;
  *(void *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 1024;
  *(_DWORD *)(a3 + 14) = a2;
  *(_WORD *)(a3 + 1_Block_object_dispose(va, 8) = 1024;
  return result;
}

void sub_1001C9D20(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, os_log_s *a4@<X8>)
{
}

void sub_1001C9E44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001C9F34( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001CA050(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001CA1AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001CA244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001CA3D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001CA454(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  *(_DWORD *)a1 = *((_DWORD *)sub_100005150() + 144);
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  sub_10001E914(a1 + 24, a4);
  id v8 = v7;
  *(void *)(a1 + 56) = v8;
  sub_10001E914((uint64_t)v14, a3);
  sub_1001CC2D8(a1 + 64, (uint64_t)v14);
  unint64_t v9 = v15;
  if (v15 == v14)
  {
    uint64_t v10 = 4LL;
    unint64_t v9 = v14;
  }

  else
  {
    if (!v15) {
      goto LABEL_6;
    }
    uint64_t v10 = 5LL;
  }

  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_6:
  *(void *)(a1 + 96) = 0LL;
  *(_BYTE *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0LL;
  if (!*(void *)(a1 + 56))
  {
    uint64_t v12 = "fDispatchQueue";
    int v13 = 53;
    goto LABEL_13;
  }

  if (!*(void *)(a1 + 88))
  {
    uint64_t v12 = "fInjectIsoCb";
    int v13 = 54;
    goto LABEL_13;
  }

  if (!*(void *)(a1 + 48))
  {
    uint64_t v12 = "fGetIsoCb";
    int v13 = 55;
LABEL_13:
    __assert_rtn("PRIsoQueryManager", "PRIsoQueryManager.mm", v13, v12);
  }

  return a1;
}

void sub_1001CA5B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char v18 = a13;
  if (a13 == v16)
  {
    uint64_t v19 = 4LL;
    char v18 = &a10;
  }

  else
  {
    if (!a13) {
      goto LABEL_6;
    }
    uint64_t v19 = 5LL;
  }

  (*(void (**)(char *))(*(void *)v18 + 8 * v19))(v18);
LABEL_6:

  uint64_t v20 = *(void **)(v13 + 48);
  if (v20 == v15)
  {
    uint64_t v21 = 4LL;
    uint64_t v20 = v15;
  }

  else
  {
    if (!v20) {
      goto LABEL_11;
    }
    uint64_t v21 = 5LL;
  }

  (*(void (**)(void))(*v20 + 8 * v21))();
LABEL_11:

  _Unwind_Resume(a1);
}

uint64_t sub_1001CA690(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 112);
  if (v2)
  {
    unint64_t v3 = *(dispatch_queue_s **)(a1 + 56);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001CA7DC;
    block[3] = &unk_1007A2398;
    block[4] = a1;
    dispatch_sync(v3, block);
    unint64_t v2 = *(void **)(a1 + 112);
  }

  unint64_t v4 = *(void **)(a1 + 88);
  if (v4 == (void *)(a1 + 64))
  {
    uint64_t v5 = 4LL;
    unint64_t v4 = (void *)(a1 + 64);
  }

  else
  {
    if (!v4) {
      goto LABEL_8;
    }
    uint64_t v5 = 5LL;
  }

  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_8:

  uint64_t v6 = *(void **)(a1 + 48);
  if (v6 == (void *)(a1 + 24))
  {
    uint64_t v7 = 4LL;
    uint64_t v6 = (void *)(a1 + 24);
    goto LABEL_12;
  }

  if (v6)
  {
    uint64_t v7 = 5LL;
LABEL_12:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  return a1;
}

void sub_1001CA784(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 96);
  if (v2)
  {
    [v2 enumerateObjectsUsingBlock:&stru_1007B5608];
    [*(id *)(a1 + 96) removeAllObjects];
  }

  unint64_t v3 = *(void **)(a1 + 16);
  if (v3)
  {
    [v3 invalidate];
    unint64_t v4 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = 0LL;
  }

void sub_1001CA7DC(uint64_t a1)
{
}

void sub_1001CA7E4(uint64_t a1)
{
  if (*(void *)(a1 + 112))
  {
    unint64_t v2 = (os_log_s *)qword_1007F9A30;
    if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)unint64_t v4 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,PRIsoQueryManager: Cancelling fNoDeviceFoundErrorSubmissionTimer",  v4,  2u);
    }

    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 112));
    unint64_t v3 = *(void **)(a1 + 112);
    *(void *)(a1 + 112) = 0LL;
  }

void sub_1001CA868(uint64_t a1)
{
  if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEBUG)) {
    sub_1003999C8();
  }
  unint64_t v2 = objc_alloc_init(&OBJC_CLASS___RPCompanionLinkClient);
  unint64_t v3 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v2;

  [*(id *)(a1 + 16) setInvalidationHandler:&stru_1007B5410];
  unint64_t v4 = *(void **)(a1 + 16);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_1001CA9C4;
  v7[3] = &unk_1007B5430;
  v7[4] = a1;
  [v4 registerRequestID:@"com.apple.proximity.regulatoryrappportlink" options:0 handler:v7];
  uint64_t v5 = (os_log_s *)qword_1007F9A30;
  if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,registerIsoQueryListener request handler registered",  v6,  2u);
  }

void sub_1001CA964(id a1)
{
  uint64_t v1 = (os_log_s *)qword_1007F9A30;
  if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unint64_t v2 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,isoQueryListener client invalidation",  v2,  2u);
  }

void sub_1001CA9C4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 48LL);
  if (!v10) {
    sub_10001EEF0();
  }
  (*(void (**)(void **__return_ptr))(*(void *)v10 + 48LL))(__p);
  if (v17 >= 0) {
    size_t v11 = __p;
  }
  else {
    size_t v11 = (void **)__p[0];
  }
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v11,  4LL));
  v20[0] = @"name";
  v20[1] = @"version";
  v21[0] = @"RegulatoryInfo";
  v21[1] = @"1.0";
  v20[2] = @"country";
  v21[2] = v12;
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v21,  v20,  3LL));
  double v14 = (os_log_s *)qword_1007F9A30;
  if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
  {
    if (v17 < 0)
    {
      if (__p[1]) {
        __int128 v15 = (void **)__p[0];
      }
      else {
        __int128 v15 = (void **)"__";
      }
    }

    else
    {
      __int128 v15 = __p;
      if (!v17) {
        __int128 v15 = (void **)"__";
      }
    }

    *(_DWORD *)buf = 136315138;
    uint64_t v19 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,isoQueryListener,request received,isoCountry:%s",  buf,  0xCu);
  }

  (*((void (**)(id, void *, void, void))v9 + 2))(v9, v13, 0LL, 0LL);

  if (v17 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1001CABA8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1001CABF8(uint64_t a1)
{
  if (sub_100320824(*(_DWORD *)a1))
  {
    sub_1001CA868(a1);
  }

  else if (sub_100320900(*(_DWORD *)a1))
  {
    if (*(void *)(a1 + 16))
    {
      unint64_t v2 = (os_log_s *)qword_1007F9A30;
      if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,start, active discovery client present",  buf,  2u);
      }
    }

    else
    {
      *(_BYTE *)(a1 + 104) = 0;
      unint64_t v3 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      unint64_t v4 = *(void **)(a1 + 96);
      *(void *)(a1 + 96) = v3;

      uint64_t v5 = objc_alloc_init(&OBJC_CLASS___RPCompanionLinkClient);
      uint64_t v6 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v5;

      [*(id *)(a1 + 16) setDispatchQueue:*(void *)(a1 + 56)];
      [*(id *)(a1 + 16) setInvalidationHandler:&stru_1007B5450];
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472LL;
      v9[2] = sub_1001CAE4C;
      void v9[3] = &unk_1007A2398;
      v9[4] = a1;
      [*(id *)(a1 + 16) setInterruptionHandler:v9];
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472LL;
      v8[2] = sub_1001CAEB8;
      v8[3] = &unk_1007B5470;
      v8[4] = a1;
      [*(id *)(a1 + 16) setDeviceFoundHandler:v8];
      id v7 = (os_log_s *)qword_1007F9A30;
      if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,start, activating discovery client",  buf,  2u);
      }

      objc_msgSend(*(id *)(a1 + 16), "setFlags:", objc_msgSend(*(id *)(a1 + 16), "flags") | 0x10);
      objc_msgSend( *(id *)(a1 + 16),  "setControlFlags:",  (unint64_t)objc_msgSend(*(id *)(a1 + 16), "controlFlags") | 0x980E);
      *(double *)(a1 + _Block_object_dispose(va, 8) = sub_100023CC4();
      [*(id *)(a1 + 16) activateWithCompletion:&stru_1007B5490];
      sub_1001CB2B0(a1);
    }
  }

void sub_1001CADEC(id a1)
{
  uint64_t v1 = (os_log_s *)qword_1007F9A30;
  if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unint64_t v2 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,start,invalidationHandler, discovery client invalidation",  v2,  2u);
  }

id sub_1001CAE4C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  unint64_t v2 = (os_log_s *)qword_1007F9A30;
  if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unint64_t v4 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,start,interruptionHandler,discovery client",  v4,  2u);
  }

  return [*(id *)(v1 + 96) removeAllObjects];
}

void sub_1001CAEB8(uint64_t a1, void *a2)
{
}

void sub_1001CAEC0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    unint64_t v4 = (os_log_s *)(id)qword_1007F9A30;
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 effectiveIdentifier]);
      uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 model]);
      *(_DWORD *)buf = 138478083;
      uint64_t v20 = v5;
      __int16 v21 = 2112;
      unsigned int v22 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,connectWithActiveDevice, device found: %{private}@ %@",  buf,  0x16u);
    }

    if (*(_BYTE *)(a1 + 104))
    {
      id v7 = (os_log_s *)qword_1007F9A30;
      if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,connectWithActiveDevice, device found, ignoring, Iso already available",  buf,  2u);
      }
    }

    else
    {
      id v8 = (void *)objc_claimAutoreleasedReturnValue([v3 model]);
      if (!v8
        || (id v9 = (void *)objc_claimAutoreleasedReturnValue([v3 model]),
            unsigned __int8 v10 = [v9 containsString:@"iPhone"],
            v9,
            v8,
            (v10 & 1) != 0))
      {
        sub_1001CA7E4(a1);
        size_t v11 = (os_log_s *)(id)qword_1007F9A30;
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v3 effectiveIdentifier]);
          uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v3 model]);
          *(_DWORD *)buf = 138478083;
          uint64_t v20 = v12;
          __int16 v21 = 2112;
          unsigned int v22 = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,connectWithActiveDevice, activating %{private}@ %@",  buf,  0x16u);
        }

        double v14 = objc_alloc_init(&OBJC_CLASS___RPCompanionLinkClient);
        -[RPCompanionLinkClient setControlFlags:]( v14,  "setControlFlags:",  (unint64_t)-[RPCompanionLinkClient controlFlags](v14, "controlFlags") | 0x980E);
        -[RPCompanionLinkClient setDestinationDevice:](v14, "setDestinationDevice:", v3);
        -[RPCompanionLinkClient setDispatchQueue:](v14, "setDispatchQueue:", *(void *)(a1 + 56));
        -[RPCompanionLinkClient setInvalidationHandler:](v14, "setInvalidationHandler:", &stru_1007B54F0);
        -[RPCompanionLinkClient setInterruptionHandler:](v14, "setInterruptionHandler:", &stru_1007B5510);
        [*(id *)(a1 + 96) addObject:v14];
        v16[0] = _NSConcreteStackBlock;
        v16[1] = 3221225472LL;
        v16[2] = sub_1001CB54C;
        v16[3] = &unk_1007B5538;
        uint64_t v18 = a1;
        __int128 v15 = v14;
        char v17 = v15;
        -[RPCompanionLinkClient activateWithCompletion:](v15, "activateWithCompletion:", v16);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_ERROR))
  {
    sub_1003999F4();
  }
}

void sub_1001CB1A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001CB220(id a1, NSError *a2)
{
  unint64_t v2 = a2;
  id v3 = (os_log_s *)qword_1007F9A30;
  if (v2)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_ERROR)) {
      sub_100399A20((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9);
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unsigned __int8 v10 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,start, activateWithCompletion, success",  v10,  2u);
  }
}

BOOL sub_1001CB2B0(uint64_t a1)
{
  dispatch_source_t v2 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  *(dispatch_queue_t *)(a1 + 56));
  id v3 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v2;

  uint64_t v4 = *(dispatch_source_s **)(a1 + 112);
  if (v4)
  {
    dispatch_time_t v5 = dispatch_time(0LL, 1800000000000LL);
    dispatch_source_set_timer(v4, v5, 0xFFFFFFFFFFFFFFFFLL, 0xBEBC200uLL);
    uint64_t v6 = *(dispatch_source_s **)(a1 + 112);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472LL;
    handler[2] = sub_1001CB37C;
    handler[3] = &unk_1007A2398;
    handler[4] = a1;
    dispatch_source_set_event_handler(v6, handler);
    dispatch_resume(*(dispatch_object_t *)(a1 + 112));
  }

  return v4 != 0LL;
}

uint64_t sub_1001CB37C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEBUG)) {
    sub_100399A84();
  }
  sub_1001CA7E4(v1);
  return AnalyticsSendEventLazy(@"com.apple.nearbyd.PhoneIsoError", &stru_1007B54D0);
}

NSDictionary *__cdecl sub_1001CB3D8(id a1)
{
  uint64_t v4 = @"ErrorCode";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 6LL));
  dispatch_time_t v5 = v1;
  dispatch_source_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));

  return (NSDictionary *)v2;
}

void sub_1001CB474(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001CB48C(id a1)
{
  uint64_t v1 = (os_log_s *)qword_1007F9A30;
  if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)dispatch_source_t v2 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,connectWithActiveDevice, client invalidation",  v2,  2u);
  }

void sub_1001CB4EC(id a1)
{
  uint64_t v1 = (os_log_s *)qword_1007F9A30;
  if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)dispatch_source_t v2 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,connectWithActiveDevice,interruptionHandler, connectionClient interrupted",  v2,  2u);
  }

void sub_1001CB54C(uint64_t a1, void *a2)
{
}

void sub_1001CB55C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (os_log_s *)(id)qword_1007F9A30;
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 destinationDevice]);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 effectiveIdentifier]);
    LODWORD(buf) = 138477827;
    *(void *)((char *)&buf + 4) = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,sendIsoRequest, device:%{private}@",  (uint8_t *)&buf,  0xCu);
  }

  if (v6)
  {
    unsigned __int8 v10 = (os_log_s *)qword_1007F9A30;
    if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_ERROR)) {
      sub_100399AB0((uint64_t)v6, v10, v11, v12, v13, v14, v15, v16);
    }
    [*(id *)(a1 + 96) removeObject:v5];
    if (!*(_BYTE *)(a1 + 104))
    {
      *(void *)&__int128 buf = 0LL;
      *((void *)&buf + 1) = &buf;
      uint64_t v30 = 0x2020000000LL;
      uint64_t v17 = (uint64_t)[v6 code];
      if (v17 > -6723)
      {
        if (v17 == -6714)
        {
          int v18 = 2;
          goto LABEL_21;
        }

        if (v17 == -6722)
        {
          int v18 = 1;
          goto LABEL_21;
        }
      }

      else
      {
        if (v17 == -71143)
        {
          int v18 = 5;
          goto LABEL_21;
        }

        if (v17 == -6727)
        {
          int v18 = 3;
LABEL_21:
          int v31 = v18;
          v26[0] = _NSConcreteStackBlock;
          v26[1] = 3221225472LL;
          v26[2] = sub_1001CB8E8;
          v26[3] = &unk_1007B5560;
          v26[4] = &buf;
          AnalyticsSendEventLazy(@"com.apple.nearbyd.PhoneIsoError", v26);
          _Block_object_dispose(&buf, 8);
          goto LABEL_22;
        }
      }

      int v18 = 0;
      goto LABEL_21;
    }
  }

  else if ([*(id *)(a1 + 96) containsObject:v5])
  {
    uint64_t v27 = RPOptionStatusFlags;
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  24590LL));
    uint64_t v28 = v19;
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v28,  &v27,  1LL));

    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472LL;
    v23[2] = sub_1001CB9A8;
    v23[3] = &unk_1007B55C8;
    uint64_t v25 = a1;
    id v24 = v5;
    [v24 sendRequestID:@"com.apple.proximity.regulatoryrappportlink" request:&__NSDictionary0__struct options:v20 responseHandler:v23];
  }

  else
  {
    __int16 v21 = (os_log_s *)qword_1007F9A30;
    if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
    {
      int v22 = *(unsigned __int8 *)(a1 + 104);
      LODWORD(buf) = 67109120;
      DWORD1(buf) = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,sendIsoRequest, client invalid fIsoKnown = %d",  (uint8_t *)&buf,  8u);
    }
  }

void sub_1001CB878( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_1001CB8E8(uint64_t a1)
{
  uint64_t v4 = @"ErrorCode";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL)));
  id v5 = v1;
  dispatch_source_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));

  return v2;
}

void sub_1001CB990(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001CB9A8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = (os_log_s *)(id)qword_1007F9A30;
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) destinationDevice]);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 effectiveIdentifier]);
    *(_DWORD *)__int128 buf = 138477827;
    *(void *)&uint8_t buf[4] = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,sendIsoRequest,response, device:%{private}@",  buf,  0xCu);
  }

  if ([*(id *)(v10 + 96) containsObject:*(void *)(a1 + 32)])
  {
    if (*(_BYTE *)(v10 + 104))
    {
      uint64_t v14 = qword_1007F9A30;
      if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 138412290;
        *(void *)&uint8_t buf[4] = v9;
        uint64_t v15 = "#regulatory,isoquerymgr,sendIsoRequest,response, Iso available, ignoring error = %@";
        uint64_t v16 = (os_log_s *)v14;
        uint32_t v17 = 12;
LABEL_9:
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, v15, buf, v17);
        goto LABEL_41;
      }

      goto LABEL_41;
    }

    if (v9)
    {
      uint64_t v20 = (os_log_s *)qword_1007F9A30;
      if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_ERROR)) {
        sub_100399B40((uint64_t)v9, v20, v21, v22, v23, v24, v25, v26);
      }
      [*(id *)(a1 + 32) invalidate];
      [*(id *)(v10 + 96) removeObject:*(void *)(a1 + 32)];
      *(void *)__int128 buf = 0LL;
      *(void *)&buf[8] = buf;
      *(void *)&uint8_t buf[16] = 0x2020000000LL;
      uint64_t v27 = (uint64_t)[v9 code];
      if (v27 > -6723)
      {
        if (v27 == -6714)
        {
          int v28 = 2;
          goto LABEL_31;
        }

        if (v27 == -6722)
        {
          int v28 = 1;
          goto LABEL_31;
        }
      }

      else
      {
        if (v27 == -71143)
        {
          int v28 = 5;
          goto LABEL_31;
        }

        if (v27 == -6727)
        {
          int v28 = 3;
LABEL_31:
          LODWORD(v49) = v28;
          v47[0] = _NSConcreteStackBlock;
          v47[1] = 3221225472LL;
          v47[2] = sub_1001CBFF8;
          v47[3] = &unk_1007B5560;
          v47[4] = buf;
          AnalyticsSendEventLazy(@"com.apple.nearbyd.PhoneIsoError", v47);
          _Block_object_dispose(buf, 8);
          goto LABEL_41;
        }
      }

      int v28 = 0;
      goto LABEL_31;
    }

    if (v7)
    {
      __int128 v29 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"name"]);
      if (v29)
      {
        uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"version"]);
        if (v30)
        {
          int v31 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"country"]);
          BOOL v32 = v31 == 0LL;

          if (!v32)
          {
            __int128 v33 = (os_log_s *)(id)qword_1007F9A30;
            if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
            {
              v42 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"name"]);
              char v34 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"version"]);
              __int128 v35 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"country"]);
              *(_DWORD *)__int128 buf = 138412802;
              *(void *)&uint8_t buf[4] = v42;
              *(_WORD *)&buf[12] = 2112;
              *(void *)&buf[14] = v34;
              *(_WORD *)&buf[22] = 2112;
              v49 = v35;
              _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,sendIsoRequest,response, %@ %@ %@",  buf,  0x20u);
            }

            uint64_t v36 = *(dispatch_queue_s **)(v10 + 56);
            block[0] = _NSConcreteStackBlock;
            block[1] = 3221225472LL;
            block[2] = sub_1001CC0B8;
            block[3] = &unk_1007B14E0;
            uint64_t v46 = v10;
            id v37 = v7;
            id v45 = v37;
            dispatch_async(v36, block);
            id v38 = objc_claimAutoreleasedReturnValue([v37 objectForKeyedSubscript:@"country"]);
            sub_1000065CC(buf, (char *)[v38 UTF8String]);
            if ((buf[23] & 0x80000000) != 0)
            {
              BOOL v39 = *(void *)&buf[8] == 0LL;
              operator delete(*(void **)buf);
            }

            else
            {
              BOOL v39 = buf[23] == 0;
            }

            if (!v39)
            {
              *(_BYTE *)(v10 + 104) = 1;
              double v41 = floor(sub_100023CC4() - *(double *)(v10 + 8));
              v43[0] = _NSConcreteStackBlock;
              v43[1] = 3221225472LL;
              v43[2] = sub_1001CC160;
              v43[3] = &unk_1007B5580;
              *(double *)&v43[4] = v41;
              AnalyticsSendEventLazy(@"com.apple.rose.regulatory.mcc.isosearchtime", v43);
            }

LABEL_36:
            if (*(_BYTE *)(v10 + 104))
            {
              uint64_t v40 = (os_log_s *)qword_1007F9A30;
              if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)__int128 buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEFAULT,  "#regulatory,isoquerymgr,sendIsoRequest,response, Iso available,teardown",  buf,  2u);
              }

              sub_1001CA784(v10);
            }

            else
            {
              [*(id *)(a1 + 32) invalidate];
              [*(id *)(v10 + 96) removeObject:*(void *)(a1 + 32)];
            }

            goto LABEL_41;
          }
        }

        else
        {
        }
      }
    }

    if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_ERROR)) {
      sub_100399B14();
    }
    AnalyticsSendEventLazy(@"com.apple.nearbyd.PhoneIsoError", &stru_1007B55A0);
    goto LABEL_36;
  }

  uint64_t v18 = qword_1007F9A30;
  if (os_log_type_enabled((os_log_t)qword_1007F9A30, OS_LOG_TYPE_DEFAULT))
  {
    int v19 = *(unsigned __int8 *)(v10 + 104);
    *(_DWORD *)__int128 buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v19;
    uint64_t v15 = "#regulatory,isoquerymgr,sendIsoRequest,response, client connection invalid fIsoKnown = %d";
    uint64_t v16 = (os_log_s *)v18;
    uint32_t v17 = 8;
    goto LABEL_9;
  }

void sub_1001CBF48( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

id sub_1001CBFF8(uint64_t a1)
{
  uint64_t v4 = @"ErrorCode";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL)));
  id v5 = v1;
  dispatch_source_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));

  return v2;
}

void sub_1001CC0A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001CC0B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKeyedSubscript:@"country"]);
  sub_1000065CC(__p, (char *)[v2 UTF8String]);
  uint64_t v3 = *(void *)(v1 + 88);
  if (!v3) {
    sub_10001EEF0();
  }
  (*(void (**)(uint64_t, void **))(*(void *)v3 + 48LL))(v3, __p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1001CC138( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

id sub_1001CC160(uint64_t a1)
{
  uint64_t v4 = @"MCCSearchTime";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  (int)*(double *)(a1 + 32)));
  char v5 = v1;
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));

  return v2;
}

void sub_1001CC204(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

NSDictionary *__cdecl sub_1001CC21C(id a1)
{
  uint64_t v4 = @"ErrorCode";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 4LL));
  char v5 = v1;
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));

  return (NSDictionary *)v2;
}

void sub_1001CC2B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001CC2D0(id a1, RPCompanionLinkClient *a2, unint64_t a3, BOOL *a4)
{
}

uint64_t sub_1001CC2D8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = 0LL;
  if (*(void *)(a2 + 24))
  {
    uint64_t v4 = operator new(0x28uLL);
    void *v4 = &off_1007B5638;
    sub_1001CC560((uint64_t)(v4 + 1), a2);
    *(void *)(a1 + 24) = v4;
  }

  return a1;
}

void *sub_1001CC338(void *a1)
{
  *a1 = &off_1007B5638;
  id v2 = a1 + 1;
  uint64_t v3 = (void *)a1[4];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return a1;
}

void sub_1001CC398(char *__p)
{
  *(void *)objc_super __p = &off_1007B5638;
  id v2 = __p + 8;
  uint64_t v3 = (char *)*((void *)__p + 4);
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*(void *)v3 + 8 * v4))();
  }

  operator delete(__p);
}

void *sub_1001CC3F8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  id v2 = operator new(0x28uLL);
  *id v2 = &off_1007B5638;
  sub_10001E914((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_1001CC43C(_Unwind_Exception *a1)
{
}

uint64_t sub_1001CC450(uint64_t a1, void *a2)
{
  *a2 = &off_1007B5638;
  return sub_10001E914((uint64_t)(a2 + 1), a1 + 8);
}

void *sub_1001CC470(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 8);
  id result = *(void **)(a1 + 32);
  if (result == v1)
  {
    uint64_t v3 = 4LL;
    id result = v1;
  }

  else
  {
    if (!result) {
      return result;
    }
    uint64_t v3 = 5LL;
  }

  return (void *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_1001CC4A4(char *__p)
{
  id v2 = __p + 8;
  uint64_t v3 = (char *)*((void *)__p + 4);
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*(void *)v3 + 8 * v4))();
  }

  operator delete(__p);
}

uint64_t sub_1001CC4F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (!v1) {
    sub_10001EEF0();
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 48LL))(v1);
}

uint64_t sub_1001CC518(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001CC554()
{
}

uint64_t sub_1001CC560(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24LL))(*v3, a1);
      return a1;
    }

    *(void *)(a1 + 24) = v4;
  }

  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }

  *uint64_t v3 = 0LL;
  return a1;
}

void sub_1001CC5C4()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  qword_1007F9A30 = (uint64_t)os_log_create("com.apple.nearbyd", "Regulatory");
  objc_autoreleasePoolPop(v0);
}

uint64_t sub_1001CC604(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  *(void *)a1 = dispatch_queue_create(off_1007F4158[0], 0LL);
  id v6 = v5;
  *(void *)(a1 + _Block_object_dispose(va, 8) = v6;
  *(_BYTE *)(a1 + 16) = 0;
  sub_10001E914(a1 + 24, a3);
  *(void *)(a1 + 64) = 0LL;
  *(_DWORD *)(a1 + 56) = 0;
  *(void *)(a1 + 72) = 345600LL;
  id v7 = (os_log_s *)qword_1007F9A38;
  if (os_log_type_enabled((os_log_t)qword_1007F9A38, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "regulatory,download,sm,init", buf, 2u);
  }

  *(void *)__int128 buf = 0LL;
  id v8 = sub_1001A8438();
  BOOL v9 = sub_100351650((uint64_t)v8, buf);
  xpc_object_t v11 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_BOOL(v11, XPC_ACTIVITY_REPEATING, 1);
  xpc_dictionary_set_string(v11, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
  xpc_dictionary_set_int64(v11, XPC_ACTIVITY_INTERVAL, *(void *)(a1 + 72));
  xpc_dictionary_set_int64(v11, XPC_ACTIVITY_GRACE_PERIOD, XPC_ACTIVITY_INTERVAL_15_MIN);
  xpc_activity_unregister(off_1007F4158[0]);
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472LL;
  handler[2] = sub_1001CC844;
  handler[3] = &unk_1007B5708;
  handler[4] = a1;
  xpc_activity_register(off_1007F4158[0], v11, handler);
  sub_1001CCA38((dispatch_queue_s **)a1);

  return a1;
}

void sub_1001CC7D4(_Unwind_Exception *a1)
{
  id v6 = *(void **)(v1 + 48);
  if (v6 == v3)
  {
    uint64_t v7 = 4LL;
    id v6 = v3;
  }

  else
  {
    if (!v6) {
      goto LABEL_6;
    }
    uint64_t v7 = 5LL;
  }

  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_6:

  _Unwind_Resume(a1);
}

void sub_1001CC844(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = *(dispatch_queue_s ***)(a1 + 32);
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  id v6 = (os_log_s *)qword_1007F9A38;
  if (os_log_type_enabled((os_log_t)qword_1007F9A38, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 134217984;
    xpc_activity_state_t v9 = state;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "regulatory,download,state,%ld",  (uint8_t *)&v8,  0xCu);
  }

  if (state == 2)
  {
    sub_1001CC96C(v4, v3);
    goto LABEL_9;
  }

  if (state == 1)
  {
LABEL_6:
    uint64_t v7 = (os_log_s *)qword_1007F9A38;
    if (os_log_type_enabled((os_log_t)qword_1007F9A38, OS_LOG_TYPE_ERROR)) {
      sub_100399BA4(state, v7);
    }
  }

void sub_1001CC954(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001CC96C(dispatch_queue_s **a1, void *a2)
{
  id v3 = a2;
  if (xpc_activity_set_state((xpc_activity_t)v3, 4LL))
  {
    uint64_t v4 = *a1;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    v13[2] = sub_1001CCE4C;
    v13[3] = &unk_1007B14E0;
    uint64_t v15 = a1;
    id v14 = v3;
    dispatch_async(v4, v13);
  }

  else
  {
    id v5 = (os_log_s *)qword_1007F9A38;
    if (os_log_type_enabled((os_log_t)qword_1007F9A38, OS_LOG_TYPE_ERROR)) {
      sub_100399C18(v5, v6, v7, v8, v9, v10, v11, v12);
    }
  }
}

void sub_1001CCA28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001CCA38(dispatch_queue_s **a1)
{
  id v2 = (os_log_s *)qword_1007F9A38;
  if (os_log_type_enabled((os_log_t)qword_1007F9A38, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "regulatory,download,triggerUpdate,startup",  buf,  2u);
  }

  id v3 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001CCE44;
  block[3] = &unk_1007A2398;
  void block[4] = a1;
  dispatch_async(v3, block);
}

void sub_1001CCADC(dispatch_queue_s **a1)
{
  id v2 = (os_log_s *)qword_1007F9A38;
  if (os_log_type_enabled((os_log_t)qword_1007F9A38, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "regulatory,download,onFirstUnlock", buf, 2u);
  }

  id v3 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001CCB7C;
  block[3] = &unk_1007A2398;
  void block[4] = a1;
  dispatch_async(v3, block);
}

void sub_1001CCB7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (sub_1001CCBB8(v1))
  {
    *(_DWORD *)(v1 + 56) = 0;
    sub_1001CCD34(v1);
  }

uint64_t sub_1001CCBB8(uint64_t a1)
{
  if ((v14.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    id v2 = &v14;
  }
  else {
    id v2 = (std::string *)v14.__r_.__value_.__r.__words[0];
  }
  sub_1000065CC(v12, (char *)v2);
  if (sub_1002547E4((const char *)v12))
  {
    if ((v14.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      id v3 = &v14;
    }
    else {
      id v3 = (std::string *)v14.__r_.__value_.__r.__words[0];
    }
    sub_1000065CC(v10, (char *)v3);
    sub_10025481C((const char *)v10);
    if (v4 <= (double)*(uint64_t *)(a1 + 72))
    {
      if ((v14.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v6 = &v14;
      }
      else {
        uint64_t v6 = (std::string *)v14.__r_.__value_.__r.__words[0];
      }
      sub_1000065CC(__p, (char *)v6);
      uint64_t v5 = sub_100254EC4((uint64_t)__p) ^ 1;
      if (v9 < 0) {
        operator delete(__p[0]);
      }
    }

    else
    {
      uint64_t v5 = 1LL;
    }

    if (v11 < 0) {
      operator delete(v10[0]);
    }
  }

  else
  {
    uint64_t v5 = 1LL;
  }

  if (v13 < 0) {
    operator delete(v12[0]);
  }
  return v5;
}

void sub_1001CCCC8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20, void *a21, uint64_t a22, int a23, __int16 a24, char a25, char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001CCD34(uint64_t a1)
{
  if (sub_1001CCBB8(a1) && (sub_1001CCEF4(a1) & 1) == 0)
  {
    int v2 = *(_DWORD *)(a1 + 56);
    *(_DWORD *)(a1 + 56) = v2 + 1;
    if (v2 <= 3) {
      sub_1001CCD88((dispatch_queue_s **)a1);
    }
  }

void sub_1001CCD88(dispatch_queue_s **a1)
{
  int v2 = (os_log_s *)qword_1007F9A38;
  if (os_log_type_enabled((os_log_t)qword_1007F9A38, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "regulatory,download,triggerUpdate,retry",  buf,  2u);
  }

  dispatch_time_t v3 = dispatch_time(0LL, 60000000000LL);
  double v4 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001CCE3C;
  block[3] = &unk_1007A2398;
  void block[4] = a1;
  dispatch_after(v3, v4, block);
}

uint64_t sub_1001CCE3C(uint64_t a1)
{
  return sub_1001CCD34(*(void *)(a1 + 32));
}

void sub_1001CCE44(uint64_t a1)
{
}

void sub_1001CCE4C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  dispatch_time_t v3 = (os_log_s *)qword_1007F9A38;
  if (os_log_type_enabled((os_log_t)qword_1007F9A38, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "regulatory,download,xpc,triggerUpdate", v12, 2u);
  }

  sub_1001CCD34(v2);
  if (!xpc_activity_set_state(*(xpc_activity_t *)(a1 + 32), 5LL))
  {
    double v4 = (os_log_s *)qword_1007F9A38;
    if (os_log_type_enabled((os_log_t)qword_1007F9A38, OS_LOG_TYPE_ERROR)) {
      sub_100399C84(v4, v5, v6, v7, v8, v9, v10, v11);
    }
  }

uint64_t sub_1001CCEF4(uint64_t a1)
{
  uint64_t v2 = (const __CFDictionary *)CLCopyNearbyAssetSettings();
  dispatch_time_t v3 = v2;
  if (v2)
  {
    CFTypeID v4 = CFGetTypeID(v2);
    if (v4 == CFDictionaryGetTypeID())
    {
      uint64_t v5 = (os_log_s *)qword_1007F9A38;
      if (os_log_type_enabled((os_log_t)qword_1007F9A38, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf.__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "regulatory,download,copyFromCLMobileAsset,copyData",  (uint8_t *)&buf,  2u);
      }

      value = 0LL;
      int ValueIfPresent = CFDictionaryGetValueIfPresent(v3, @"PrGlobalTileKey", (const void **)&value);
      sub_100005150();
      sub_1003550BC(off_1007F4170[0], &v29);
      uint64_t v7 = 0LL;
      if (ValueIfPresent && value)
      {
        CFTypeID v8 = CFGetTypeID(value);
        if (v8 == CFDataGetTypeID())
        {
          uint64_t v9 = operator new(0x28uLL);
          sub_1000065CC(&buf, off_1007F4160[0]);
          sub_100361848(v9);
          sub_1001AC5F4((uint64_t *)(a1 + 64), (uint64_t)v9);
          uint64_t v10 = value;
          sub_100005150();
          sub_1003550BC(off_1007F4168[0], &buf);
          uint64_t v11 = objc_alloc(&OBJC_CLASS___NSString);
          if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
            p_std::string buf = &buf;
          }
          else {
            p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
          }
          char v13 = -[NSString initWithCString:encoding:](v11, "initWithCString:encoding:", p_buf, 4LL);
          unsigned int v14 = [v10 writeToFile:v13 atomically:0];

          if (v14)
          {
            if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
              uint64_t v15 = &buf;
            }
            else {
              uint64_t v15 = (std::string *)buf.__r_.__value_.__r.__words[0];
            }
            sub_1000065CC(v27, (char *)v15);
            if ((v29.__r_.__value_.__s.__size_ & 0x80u) == 0) {
              uint64_t v16 = &v29;
            }
            else {
              uint64_t v16 = (std::string *)v29.__r_.__value_.__r.__words[0];
            }
            sub_1000065CC(__p, (char *)v16);
            uint64_t v7 = sub_100265814((uint64_t)v27, (uint64_t)__p);
            if (v26 < 0) {
              operator delete(__p[0]);
            }
            if (v28 < 0) {
              operator delete(*(void **)v27);
            }
            if ((_DWORD)v7)
            {
              uint32_t v17 = (os_log_s *)qword_1007F9A38;
              if (os_log_type_enabled((os_log_t)qword_1007F9A38, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)uint64_t v27 = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "regulatory,download,decompressOkay",  v27,  2u);
              }

              if ((v29.__r_.__value_.__s.__size_ & 0x80u) == 0) {
                uint64_t v18 = &v29;
              }
              else {
                uint64_t v18 = (std::string *)v29.__r_.__value_.__r.__words[0];
              }
              sub_1000065CC(v27, (char *)v18);
              uint64_t v7 = sub_100254EC4((uint64_t)v27);
              if (v28 < 0) {
                operator delete(*(void **)v27);
              }
              if ((_DWORD)v7)
              {
                int v19 = (os_log_s *)qword_1007F9A38;
                if (os_log_type_enabled((os_log_t)qword_1007F9A38, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)uint64_t v27 = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "regulatory,download,crcCheckOkay",  v27,  2u);
                }

                uint64_t v20 = *(dispatch_queue_s **)(a1 + 8);
                block[0] = _NSConcreteStackBlock;
                block[1] = 3321888768LL;
                block[2] = sub_1001CD394;
                block[3] = &unk_1007B5728;
                void block[4] = a1;
                else {
                  std::string v24 = v29;
                }
                dispatch_sync(v20, block);
                uint64_t v7 = 1LL;
              }
            }
          }

          else
          {
            uint64_t v7 = 0LL;
          }

          sub_1001AC5F4((uint64_t *)(a1 + 64), 0LL);
        }

        else
        {
          uint64_t v7 = 0LL;
        }
      }

void sub_1001CD2E0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *__p, uint64_t a25, int a26, __int16 a27, char a28, char a29, uint64_t a30, void *a31, uint64_t a32, int a33, __int16 a34, char a35, char a36)
{
  if (a29 < 0) {
    operator delete(__p);
  }

  if (a36 < 0) {
    operator delete(a31);
  }
  _Unwind_Resume(a1);
}

void sub_1001CD394(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = (char *)(a1 + 40);
  sub_1000065CC(__p, v2);
  sub_1001CD408(v1, (uint64_t *)__p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1001CD3EC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1001CD408(uint64_t a1, uint64_t *a2)
{
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  p_p,  4LL));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:isDirectory:](&OBJC_CLASS___NSURL, "fileURLWithPath:isDirectory:", v5, 0LL));

  if (v6)
  {
    else {
      uint64_t v7 = (uint64_t *)*a2;
    }
    CFTypeID v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v7));
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:isDirectory:](&OBJC_CLASS___NSURL, "fileURLWithPath:isDirectory:", v8, 0LL));

    if (v9)
    {
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
      id v35 = 0LL;
      id v36 = 0LL;
      id v11 = [v10 replaceItemAtURL:v6 withItemAtURL:v9 backupItemName:0 options:1 resultingItemURL:&v36 error:&v35];
      id v12 = v36;
      id v13 = v35;

      unsigned int v14 = *(dispatch_queue_s **)(a1 + 8);
      v34[0] = _NSConcreteStackBlock;
      v34[1] = 3221225472LL;
      v34[2] = sub_1001CD7D0;
      v34[3] = &unk_1007A2398;
      v34[4] = a1;
      dispatch_async(v14, v34);
      uint64_t v15 = (os_log_s *)qword_1007F9A38;
      if (os_log_type_enabled((os_log_t)qword_1007F9A38, OS_LOG_TYPE_DEFAULT))
      {
        else {
          uint64_t v16 = (uint64_t *)*a2;
        }
        *(_DWORD *)std::string buf = 136315394;
        BOOL v39 = v16;
        __int16 v40 = 1024;
        int v41 = (int)v11;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "regulatory,download,safeReplaceFileOnDiskWith,%s,replacementSucceeded,%d",  buf,  0x12u);
      }
    }

    else
    {
      uint64_t v25 = (os_log_s *)qword_1007F9A38;
      if (os_log_type_enabled((os_log_t)qword_1007F9A38, OS_LOG_TYPE_ERROR)) {
        sub_100399D20(v25, v26, v27, v28, v29, v30, v31, v32);
      }
      id v12 = 0LL;
      id v13 = 0LL;
      id v11 = 0LL;
    }
  }

  else
  {
    uint32_t v17 = (os_log_s *)qword_1007F9A38;
    if (os_log_type_enabled((os_log_t)qword_1007F9A38, OS_LOG_TYPE_ERROR)) {
      sub_100399CF0(v17, v18, v19, v20, v21, v22, v23, v24);
    }
    id v12 = 0LL;
    id v13 = 0LL;
    id v11 = 0LL;
  }

  return v11;
}

void sub_1001CD69C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_1001CD6FC(uint64_t a1, uint64_t a2)
{
  uint64_t result = (void *)(a1 + 40);
  __int128 v3 = *(_OWORD *)(a2 + 40);
  result[2] = *(void *)(a2 + 56);
  *(_OWORD *)uint64_t result = v3;
  return result;
}

void sub_1001CD72C(uint64_t a1)
{
}

float sub_1001CD740(FILE *a1, uint64_t a2)
{
  if (a1 && sub_100254894(a1, a2) && fread(&__ptr, 1uLL, 6uLL, a1) == 6)
  {
    *(_WORD *)(a2 + 84) = __ptr;
    if (*(_BYTE *)a2 == 2) {
      unsigned int v5 = bswap32(v7);
    }
    else {
      unsigned int v5 = v7;
    }
    float result = (double)v5 / 100.0;
    *(float *)(a2 + 80) = result;
  }

  return result;
}

uint64_t sub_1001CD7D0(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)(a1 + 32) + 48LL);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 48LL))(result);
  }
  return result;
}

void sub_1001CD7EC()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  qword_1007F9A38 = (uint64_t)os_log_create("com.apple.nearbyd", "Regulatory");
  objc_autoreleasePoolPop(v0);
}

__CFString *sub_1001CD82C()
{
  if (qword_1007F9A40 != -1) {
    dispatch_once(&qword_1007F9A40, &stru_1007B5758);
  }
  return off_1007F4180;
}

void sub_1001CD86C(id a1)
{
  uint64_t v1 = (__CFString *)MGCopyAnswer(@"ProductType", 0LL);
  if (v1)
  {
    uint64_t v2 = v1;
    CFTypeID v3 = CFGetTypeID(v1);
    if (v3 != CFStringGetTypeID()) {
      sub_100399D50();
    }
    char v4 = off_1007F4180;
    off_1007F4180 = v2;
  }

id sub_1001CD8CC()
{
  int v1 = 0;
  return (id)MGCopyAnswerWithError(@"UserAssignedDeviceName", 0LL, &v1);
}

id sub_1001CD8FC()
{
  if (qword_1007F9A50 != -1) {
    dispatch_once(&qword_1007F9A50, &stru_1007B5778);
  }
  return (id)qword_1007F9A48;
}

void sub_1001CD93C(id a1)
{
  int v3 = 0;
  uint64_t v1 = MGCopyAnswerWithError(@"BuildVersion", 0LL, &v3);
  uint64_t v2 = (void *)qword_1007F9A48;
  qword_1007F9A48 = v1;
}

id sub_1001CD97C()
{
  if (qword_1007F9A60 != -1) {
    dispatch_once(&qword_1007F9A60, &stru_1007B5798);
  }
  return (id)qword_1007F9A58;
}

void sub_1001CD9BC(id a1)
{
  int v3 = 0;
  uint64_t v1 = MGCopyAnswerWithError(@"WifiChipset", 0LL, &v3);
  uint64_t v2 = (void *)qword_1007F9A58;
  qword_1007F9A58 = v1;
}

__CFString *sub_1001CD9FC()
{
  if (qword_1007F9A68 != -1) {
    dispatch_once(&qword_1007F9A68, &stru_1007B57B8);
  }
  return off_1007F4188;
}

void sub_1001CDA3C(id a1)
{
  uint64_t v1 = (void *)MGCopyAnswer(@"gD8SNRcHQeIxCAvsp+2vjA", 0LL);
  uint64_t v2 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSMutableString stringWithCapacity:]( NSMutableString,  "stringWithCapacity:",  2 * (void)[v1 length]));
  id v6 = v1;
  int v3 = (unsigned __int8 *)[v6 bytes];
  if (!v2) {
    __assert_rtn("PRGetDeviceWifiSKU_block_invoke", "PRUtilities.m", 104, "mutableString");
  }
  unsigned int v5 = off_1007F4188;
  off_1007F4188 = v2;
}

void sub_1001CDB24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001CDB48()
{
  if (qword_1007F9A78 != -1) {
    dispatch_once(&qword_1007F9A78, &stru_1007B57D8);
  }
  return byte_1007F9A70;
}

void sub_1001CDB88(id a1)
{
  id v1 = (id)MGCopyAnswer(@"9RryeqF6OCWlbaXP2Qsoag", 0LL);
  byte_1007F9A70 = [v1 BOOLValue];
}

void sub_1001CDBCC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

uint64_t sub_1001CDBE0()
{
  if (qword_1007F9A88 != -1) {
    dispatch_once(&qword_1007F9A88, &stru_1007B57F8);
  }
  return byte_1007F9A80;
}

void sub_1001CDC20(id a1)
{
  id v1 = (id)MGCopyAnswer(@"InternalBuild", 0LL);
  byte_1007F9A80 = [v1 BOOLValue];
}

void sub_1001CDC64( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

uint64_t sub_1001CDC78()
{
  if (qword_1007F9A98 != -1) {
    dispatch_once(&qword_1007F9A98, &stru_1007B5818);
  }
  return byte_1007F9A90;
}

void sub_1001CDCB8(id a1)
{
  id v1 = (const void *)MGCopyAnswer(@"ReleaseType", 0LL);
  if (v1)
  {
    uint64_t v2 = v1;
    byte_1007F9A90 = CFEqual(v1, @"NonUI") != 0;
    CFRelease(v2);
  }

  else
  {
    byte_1007F9A90 = 0;
  }

id sub_1001CDD1C(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1 && [v1 length] == (id)6)
  {
    int v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableString string](&OBJC_CLASS___NSMutableString, "string"));
    id v4 = v2;
    id v5 = [v4 bytes];
    for (unint64_t i = 0; [v4 length] > i; ++i)
    {
      objc_msgSend(v3, "appendFormat:", @"%02lX", i[(void)v5]);
    }
  }

  else
  {
    int v3 = 0LL;
  }

  return v3;
}

void sub_1001CDE04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001CDEE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1001CDF68@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B5CF0[a1]);
}

void *sub_1001CDF7C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B5D48[a1]);
}

void *sub_1001CDF90@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B5D90[a1]);
}

void *sub_1001CDFA4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B5DB0[a1]);
}

uint64_t sub_1001CDFB8(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v9 = a2;
  *(void *)a1 = 0LL;
  id v41 = v9;
  *(void *)(a1 + _Block_object_dispose(va, 8) = v41;
  dispatch_queue_t v10 = dispatch_queue_create("com.apple.nearbyd.Rose.analytics", 0LL);
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 16) = v10;
  id v11 = operator new(0x20uLL);
  void *v11 = &off_1007B5B08;
  v11[1] = sub_1001CE69C;
  v11[2] = 0LL;
  v11[3] = a1;
  v49 = v11;
  id v12 = operator new(0x20uLL);
  *id v12 = &off_1007B5BC8;
  v12[1] = sub_1001CE6F8;
  v12[2] = 0LL;
  v12[3] = a1;
  v47 = v12;
  sub_100367180(a1 + 40, 0LL, 5LL, v48, v46);
  id v13 = v47;
  if (v47 == v46)
  {
    uint64_t v14 = 4LL;
    id v13 = v46;
  }

  else
  {
    if (!v47) {
      goto LABEL_6;
    }
    uint64_t v14 = 5LL;
  }

  (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_6:
  uint64_t v15 = v49;
  if (v49 == v48)
  {
    uint64_t v16 = 4LL;
    uint64_t v15 = v48;
  }

  else
  {
    if (!v49) {
      goto LABEL_11;
    }
    uint64_t v16 = 5LL;
  }

  (*(void (**)(void))(*v15 + 8 * v16))();
LABEL_11:
  *(void *)(a1 + 1240) = 0LL;
  dispatch_queue_attr_t v17 = dispatch_queue_attr_make_with_qos_class(0LL, QOS_CLASS_USER_INITIATED, 0);
  uint64_t v18 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v17);
  dispatch_queue_t v19 = dispatch_queue_create("com.apple.nearbyd.rose-hid-queue", v18);
  sub_10031F2D4(a1 + 1248, v19);

  *(_OWORD *)(a1 + 1280) = 0u;
  *(void *)(a1 + 1296) = *a3;
  uint64_t v20 = a3[1];
  *(void *)(a1 + 1304) = v20;
  if (v20)
  {
    uint64_t v21 = (unint64_t *)(v20 + 8);
    do
      unint64_t v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
  }

  *(void *)(a1 + 1312) = *a5;
  uint64_t v23 = a5[1];
  *(void *)(a1 + 1320) = v23;
  if (v23)
  {
    uint64_t v24 = (unint64_t *)(v23 + 8);
    do
      unint64_t v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }

  *(void *)(a1 + 132_Block_object_dispose(va, 8) = 0LL;
  *(_DWORD *)(a1 + 1335) = 0;
  *(void *)(a1 + 1344) = 850045863LL;
  *(void *)(a1 + 1400) = 0LL;
  *(_OWORD *)(a1 + 1352) = 0u;
  *(_OWORD *)(a1 + 136_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 1384) = 0u;
  *(void *)(a1 + 140_Block_object_dispose(va, 8) = 1018212795LL;
  *(_BYTE *)(a1 + 1464) = 0;
  *(_BYTE *)(a1 + 1472) = 0;
  *(_BYTE *)(a1 + 1480) = 0;
  *(_BYTE *)(a1 + 148_Block_object_dispose(va, 8) = 0;
  *(_OWORD *)(a1 + 1416) = 0u;
  *(_OWORD *)(a1 + 1432) = 0u;
  *(_OWORD *)(a1 + 1442) = 0u;
  uint64_t v26 = sub_100005150();
  *(_BYTE *)(a1 + 1496) = sub_100355268((uint64_t)v26);
  *(std::chrono::steady_clock::time_point *)(a1 + 1504) = std::chrono::steady_clock::now();
  *(_OWORD *)(a1 + 1512) = 0u;
  *(_BYTE *)(a1 + 152_Block_object_dispose(va, 8) = 0;
  *(void *)(a1 + 1536) = a4;
  *(_DWORD *)(a1 + 1544) = 0;
  *(void *)(a1 + 1552) = 1018212795LL;
  *(_OWORD *)(a1 + 1560) = 0u;
  *(_OWORD *)(a1 + 1576) = 0u;
  *(void *)(a1 + 1592) = 0LL;
  *(void *)(a1 + 1600) = 850045863LL;
  *(_OWORD *)(a1 + 160_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 1624) = 0u;
  *(_OWORD *)(a1 + 1640) = 0u;
  *(void *)(a1 + 1656) = 0LL;
  *(void *)(a1 + 1680) = 0LL;
  *(_DWORD *)(a1 + 1687) = 0;
  sub_10016467C((void *)(a1 + 1696));
  if (!*(void *)(a1 + 8))
  {
    BOOL v39 = "fDispatchQueue";
    int v40 = 105;
    goto LABEL_49;
  }

  if (!*(void *)(a1 + 1296))
  {
    BOOL v39 = "fConfigManager";
    int v40 = 106;
LABEL_49:
    __assert_rtn("PRRose", "PRRose.mm", v40, v39);
  }

  v43[0] = _NSConcreteStackBlock;
  v43[1] = 3221225472LL;
  v43[2] = sub_1001CE8C8;
  v43[3] = &unk_1007B5838;
  v43[4] = a1;
  sub_10031F7CC(a1 + 1248, v43);
  Boolean keyExistsAndHasValidFormat = 0;
  int AppBooleanValue = CFPreferencesGetAppBooleanValue( @"AllowRoseDeepSleep",  @"com.apple.nearbyd",  &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat)
  {
    *(_BYTE *)(a1 + 1496) = AppBooleanValue != 0;
    uint64_t v28 = (os_log_s *)qword_1007F9AA0;
    if (!os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_31;
    }
    if (*(_BYTE *)(a1 + 1496)) {
      uint64_t v29 = "enabled";
    }
    else {
      uint64_t v29 = "disabled";
    }
    *(_DWORD *)std::string buf = 136315138;
    id v45 = v29;
    uint64_t v30 = "PRRose: OVERRIDE: #deep-slp feature: %s";
  }

  else
  {
    uint64_t v28 = (os_log_s *)qword_1007F9AA0;
    if (!os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_31;
    }
    if (*(_BYTE *)(a1 + 1496)) {
      uint64_t v31 = "enabled";
    }
    else {
      uint64_t v31 = "disabled";
    }
    *(_DWORD *)std::string buf = 136315138;
    id v45 = v31;
    uint64_t v30 = "PRRose: #deep-slp feature: %s";
  }

  _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, v30, buf, 0xCu);
LABEL_31:
  if (sub_1001CDBE0())
  {
    Boolean keyExistsAndHasValidFormat = 0;
    CFIndex AppIntegerValue = CFPreferencesGetAppIntegerValue( @"roseDeepSleepExitTimeout",  @"com.apple.nearbyd",  &keyExistsAndHasValidFormat);
    if (keyExistsAndHasValidFormat)
    {
      CFIndex v33 = AppIntegerValue;
      if (AppIntegerValue >= 1)
      {
        char v34 = (os_log_s *)qword_1007F9AA0;
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string buf = 134217984;
          id v45 = (const char *)v33;
          _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "PRRose: OVERRIDE: #deep-slp exit timeout: %ld milliseconds",  buf,  0xCu);
        }

        if (!*(_BYTE *)(a1 + 1472)) {
          *(_BYTE *)(a1 + 1472) = 1;
        }
        *(void *)(a1 + 1464) = v33;
      }
    }

    Boolean keyExistsAndHasValidFormat = 0;
    CFIndex v35 = CFPreferencesGetAppIntegerValue( @"roseIdleTimeoutDeepSleepMsec",  @"com.apple.nearbyd",  &keyExistsAndHasValidFormat);
    if (keyExistsAndHasValidFormat)
    {
      CFIndex v36 = v35;
      if (v35 >= 1)
      {
        uint64_t v37 = (os_log_s *)qword_1007F9AA0;
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string buf = 134217984;
          id v45 = (const char *)v36;
          _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "PRRose: OVERRIDE: rose idle timeout #deep-slp: %ld millisec",  buf,  0xCu);
        }

        if (!*(_BYTE *)(a1 + 1488)) {
          *(_BYTE *)(a1 + 148_Block_object_dispose(va, 8) = 1;
        }
        *(void *)(a1 + 1480) = v36;
      }
    }
  }

  return a1;
}

void sub_1001CE54C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, void *a11, uint64_t a12)
{
  sub_10031F36C(v14);
  sub_1003672F4(a9);

  _Unwind_Resume(a1);
}

void sub_1001CE69C(uint64_t a1, int a2)
{
  uint64_t v2 = *(dispatch_queue_s **)(a1 + 8);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_1001DE09C;
  v3[3] = &unk_1007AF260;
  v3[4] = a1;
  int v4 = a2;
  dispatch_async(v2, v3);
}

void sub_1001CE6F8(uint64_t a1, int a2, uint64_t a3)
{
  switch(a2)
  {
    case 2:
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_100399E68();
      }
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472LL;
      v7[2] = sub_1001DDFE0;
      v7[3] = &unk_1007B5580;
      v7[4] = a3;
      id v5 = @"com.apple.nearbyd.RoseCrashLogCorrupted";
      id v6 = v7;
      goto LABEL_15;
    case 1:
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_100399E3C();
      }
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472LL;
      v8[2] = sub_1001DDE68;
      v8[3] = &unk_1007B5580;
      v8[4] = a3;
      id v5 = @"com.apple.nearbyd.RoseFWGeneratedCrashError";
      id v6 = v8;
      goto LABEL_15;
    case 0:
      int v4 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "FW crash metric being submitted", buf, 2u);
      }

      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_100399DA4();
      }
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472LL;
      v9[2] = sub_1001DDD24;
      void v9[3] = &unk_1007B5580;
      v9[4] = a3;
      id v5 = @"com.apple.nearbyd.RoseFWGeneratedCrash";
      id v6 = v9;
LABEL_15:
      AnalyticsSendEventLazy(v5, v6);
      return;
  }

  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_100399D78();
  }
}

void sub_1001CE8C8(uint64_t a1, uint64_t *a2)
{
}

void sub_1001CE8D0(uint64_t a1, uint64_t *a2)
{
  int v3 = a2 + 1;
  uint64_t v2 = (__int128 *)a2[1];
  int v4 = a2 + 2;
  uint64_t v5 = a2[2] - (void)v2;
  if (v5)
  {
    if (v5 == 155)
    {
      __int128 v8 = v2[7];
      __int128 v39 = v2[6];
      __int128 v40 = v8;
      v41[0] = v2[8];
      *(_OWORD *)((char *)v41 + 11) = *(__int128 *)((char *)v2 + 139);
      __int128 v9 = v2[3];
      __int128 v35 = v2[2];
      __int128 v36 = v9;
      __int128 v10 = v2[5];
      __int128 v37 = v2[4];
      __int128 v38 = v10;
      __int128 v11 = v2[1];
      __int128 v33 = *v2;
      __int128 v34 = v11;
      id v12 = (os_log_s *)qword_1007F9AA0;
      uint64_t v13 = v33;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v16 = *v4 - *v3;
        *(_DWORD *)std::string buf = 134218496;
        uint64_t v28 = v16;
        __int16 v29 = 2048;
        uint64_t v30 = 155LL;
        __int16 v31 = 1024;
        int v32 = v33;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "HID event size [%lu] (expected [%lu]). Report type %08x",  buf,  0x1Cu);
      }

      kdebug_trace(728956932LL, v13, 0LL, 0LL, 0LL);
      if ((_DWORD)v13 == 236)
      {
        sub_1001D36B0(a1, (unsigned __int8 *)&v33 + 4);
      }

      else
      {
        uint64_t v14 = *a2;
        uint64_t v15 = *(dispatch_queue_s **)(a1 + 8);
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 3221225472LL;
        v17[2] = sub_1001D7A80;
        v17[3] = &unk_1007B5948;
        v17[4] = a1;
        void v17[5] = v14;
        __int128 v24 = v39;
        __int128 v25 = v40;
        v26[0] = v41[0];
        *(_OWORD *)((char *)v26 + 11) = *(_OWORD *)((char *)v41 + 11);
        __int128 v20 = v35;
        __int128 v21 = v36;
        __int128 v22 = v37;
        __int128 v23 = v38;
        __int128 v18 = v33;
        __int128 v19 = v34;
        dispatch_async(v15, v17);
      }
    }

    else if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR))
    {
      sub_100399E94();
    }
  }

uint64_t sub_1001CEAF4(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "~PRRose()", buf, 2u);
  }

  int v3 = *(dispatch_queue_s **)(a1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001CEC24;
  block[3] = &unk_1007A2398;
  void block[4] = a1;
  dispatch_sync(v3, block);
  sub_100012390(a1 + 1696);
  std::mutex::~mutex((std::mutex *)(a1 + 1600));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 1552));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 1408));
  std::mutex::~mutex((std::mutex *)(a1 + 1344));
  sub_1001AC5F4((uint64_t *)(a1 + 1328), 0LL);
  sub_100012390(a1 + 1312);
  sub_100012390(a1 + 1296);

  sub_10031F36C(a1 + 1248);
  sub_1003672F4(a1 + 40);

  return a1;
}

void sub_1001CEC24(uint64_t a1)
{
}

void sub_1001CEC2C(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    uint64_t v2 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: Cancelling SecureRom timer", v4, 2u);
    }

    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 24));
    int v3 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = 0LL;
  }

void sub_1001CECB0(uint64_t a1, int a2)
{
  uint64_t v2 = *(dispatch_queue_s **)(a1 + 8);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_1001CED0C;
  v3[3] = &unk_1007AF260;
  v3[4] = a1;
  int v4 = a2;
  dispatch_async(v2, v3);
}

void sub_1001CED0C(uint64_t a1)
{
}

void sub_1001CED1C(uint64_t a1, int a2)
{
  int v4 = (os_log_s *)(id)qword_1007F9AA0;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    sub_1000065CC(__p, off_1007B5DD0[a2]);
    uint64_t v5 = v15 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)std::string buf = 136315138;
    dispatch_queue_attr_t v17 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Deactivating Rose with reason: %s", buf, 0xCu);
    if (v15 < 0) {
      operator delete(__p[0]);
    }
  }

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  id v6 = (unsigned int *)(a1 + 1240);
  unsigned int v7 = atomic_load((unsigned int *)(a1 + 1240));
  if (v7 == 8 || (unsigned int v8 = atomic_load(v6), v8 == 10) || (v9 = atomic_load(v6)) == 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_100399F0C(v6);
    }
  }

  else
  {
    unsigned int v10 = atomic_load(v6);
    if (v10 == 11)
    {
      __int128 v11 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(__p[0]) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "PRRose waking Rose from DSLP to properly power down",  (uint8_t *)__p,  2u);
      }

      sub_1001D05E0(a1);
    }

    if (!sub_1001D06A0(a1) && os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_100399F8C();
    }
    if (v10 == 11)
    {
      sub_1001D07E8(a1);
    }

    else
    {
      atomic_store(8u, (unsigned int *)(a1 + 1240));
      sub_1001D08F8(a1);
    }

    *(_DWORD *)(a1 + 1244) = a2;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_1001D0A04;
    v12[3] = &unk_1007AF260;
    v12[4] = a1;
    int v13 = a2;
    sub_1001CFF84(a1, v12);
  }

void sub_1001CEF40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001CEF58(uint64_t a1)
{
  uint64_t v5 = 0LL;
  id v6 = &v5;
  uint64_t v7 = 0x2020000000LL;
  char v8 = 0;
  id v1 = *(dispatch_queue_s **)(a1 + 8);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1001CEFE8;
  v4[3] = &unk_1007B2170;
  v4[4] = &v5;
  void v4[5] = a1;
  dispatch_sync(v1, v4);
  uint64_t v2 = *((unsigned __int8 *)v6 + 24);
  _Block_object_dispose(&v5, 8);
  return v2;
}

uint64_t sub_1001CEFE8(uint64_t result)
{
  unsigned int v1 = atomic_load((unsigned int *)(*(void *)(result + 40) + 1240LL));
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = v1 - 10 < 0xFFFFFFFE;
  return result;
}

uint64_t sub_1001CF00C(uint64_t a1, io_iterator_t a2)
{
  int v4 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "_serviceMatchRoseSupervisor is called", buf, 2u);
  }

  if (!a1) {
    sub_100399FB8();
  }
  uint64_t result = IOIteratorNext(a2);
  io_registry_entry_t v7 = result;
  if ((_DWORD)result)
  {
    *(void *)&__int128 v6 = 136315138LL;
    __int128 v22 = v6;
    while (1)
    {
      __int128 v38 = 0u;
      __int128 v39 = 0u;
      __int128 v36 = 0u;
      __int128 v37 = 0u;
      __int128 v35 = 0u;
      __int128 v33 = 0u;
      __int128 v34 = 0u;
      *(_OWORD *)std::string buf = 0u;
      sub_1000065CC(v28, "rose");
      sub_1000065CC(__p, "rose-supervisor");
LABEL_48:
      IOObjectRelease(v7);
      uint64_t result = IOIteratorNext(a2);
      io_registry_entry_t v7 = result;
      if (!(_DWORD)result) {
        return result;
      }
    }

    sub_1000065CC(&__s1, (char *)buf);
    char v8 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      p_s1 = &__s1;
      if ((v25 & 0x80u) != 0) {
        p_s1 = __s1;
      }
      *(_DWORD *)uint64_t v30 = v22;
      __int16 v31 = p_s1;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Found matching name: %s", v30, 0xCu);
    }

    uint64_t v10 = v25;
    int v11 = v25;
    size_t v12 = __n;
    if ((v25 & 0x80u) == 0) {
      size_t v13 = v25;
    }
    else {
      size_t v13 = __n;
    }
    unint64_t v14 = v29;
    if ((v29 & 0x80u) != 0) {
      unint64_t v14 = (unint64_t)v28[1];
    }
    if (v13 == v14)
    {
      if ((v29 & 0x80u) == 0) {
        char v15 = v28;
      }
      else {
        char v15 = (void **)v28[0];
      }
      if ((v25 & 0x80) != 0)
      {
        if (memcmp(__s1, v15, __n)) {
          goto LABEL_27;
        }
      }

      else if (v25)
      {
        uint64_t v16 = &__s1;
        uint64_t v17 = v25;
        while (*(unsigned __int8 *)v16 == *(unsigned __int8 *)v15)
        {
          uint64_t v16 = (void **)((char *)v16 + 1);
          char v15 = (void **)((char *)v15 + 1);
          if (!--v17) {
            goto LABEL_39;
          }
        }

        goto LABEL_27;
      }

void sub_1001CF37C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001CF3D8(uint64_t a1, int a2)
{
  if (!*(void *)(a1 + 1288)) {
    sub_100399FCC();
  }
  if (!*(void *)(a1 + 1280)) {
    sub_100399FF4();
  }
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  int v4 = (unsigned int *)(a1 + 1240);
  unsigned int v5 = atomic_load((unsigned int *)(a1 + 1240));
  __int128 v6 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    LODWORD(buf) = 67109120;
    DWORD1(buf) = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "PRRose: activateInternal (ActivationEvent: %d)",  (uint8_t *)&buf,  8u);
  }

  if (v5 - 8 >= 4 && v5 != 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039A01C();
    }
    return 0LL;
  }

  atomic_store(0, (unsigned int *)(a1 + 1240));
  Boolean keyExistsAndHasValidFormat = 0;
  *(_BYTE *)(a1 + 1336) = CFPreferencesGetAppBooleanValue( @"roseEnableFirmwareLogs",  @"com.apple.nearbyd",  &keyExistsAndHasValidFormat) != 0;
  if (keyExistsAndHasValidFormat)
  {
    char v8 = (os_log_s *)qword_1007F9AA0;
    if (!os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_22;
    }
    if (*(_BYTE *)(a1 + 1336)) {
      unsigned int v9 = "enabled";
    }
    else {
      unsigned int v9 = "disabled";
    }
    LODWORD(buf) = 136315138;
    *(void *)((char *)&buf + 4) = v9;
    uint64_t v10 = "PRRose: OVERRIDE: firmware logging config: %s";
  }

  else
  {
    *(_BYTE *)(a1 + 1336) = sub_1001CDBE0();
    char v8 = (os_log_s *)qword_1007F9AA0;
    if (!os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_22;
    }
    if (*(_BYTE *)(a1 + 1336)) {
      int v11 = "enabled";
    }
    else {
      int v11 = "disabled";
    }
    LODWORD(buf) = 136315138;
    *(void *)((char *)&buf + 4) = v11;
    uint64_t v10 = "PRRose: firmware logging config: %s";
  }

  _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&buf, 0xCu);
LABEL_22:
  Boolean keyExistsAndHasValidFormat = 0;
  *(_BYTE *)(a1 + 1337) = CFPreferencesGetAppBooleanValue( @"roseSaveCrashLogs",  @"com.apple.nearbyd",  &keyExistsAndHasValidFormat) != 0;
  if (keyExistsAndHasValidFormat)
  {
    size_t v12 = (os_log_s *)qword_1007F9AA0;
    if (!os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_34;
    }
    if (*(_BYTE *)(a1 + 1337)) {
      size_t v13 = "enabled";
    }
    else {
      size_t v13 = "disabled";
    }
    LODWORD(buf) = 136315138;
    *(void *)((char *)&buf + 4) = v13;
    unint64_t v14 = "PRRose: OVERRIDE: crash log config: %s";
  }

  else
  {
    *(_BYTE *)(a1 + 1337) = sub_1001CDBE0();
    size_t v12 = (os_log_s *)qword_1007F9AA0;
    if (!os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_34;
    }
    if (*(_BYTE *)(a1 + 1337)) {
      char v15 = "enabled";
    }
    else {
      char v15 = "disabled";
    }
    LODWORD(buf) = 136315138;
    *(void *)((char *)&buf + 4) = v15;
    unint64_t v14 = "PRRose: crash log config: %s";
  }

  _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v14, (uint8_t *)&buf, 0xCu);
LABEL_34:
  if (sub_1001CFE74(a1))
  {
    uint64_t v16 = NSTemporaryDirectory();
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    unint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@/%s",  v17,  "healAttemped.tok"));

    __int128 v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    unsigned __int8 v20 = [v19 fileExistsAtPath:v18];

    if ((v20 & 1) != 0 || !sub_10036BC50(a1 + 40))
    {
      if (a2 == 1)
      {
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
          sub_10039A17C();
        }
        uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
        __int16 v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSData data](&OBJC_CLASS___NSData, "data"));
        unsigned __int8 v32 = [v30 createFileAtPath:v18 contents:v31 attributes:0];

        if ((v32 & 1) == 0 && os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
          sub_10039A150();
        }
      }

      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_10039A124();
      }
      if (sub_10036730C(a1 + 40, *(_BYTE *)(a1 + 1336), *(_BYTE *)(a1 + 1337))
        && !sub_10036BE8C(a1 + 40, 0LL, v33, v34, v35, v36, v37, v38)
        && os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR))
      {
        sub_10039A0A4((unsigned int *)(a1 + 1240));
      }

      sub_1003672B4(a1 + 40);
      usleep(0x30D40u);
      __int128 v39 = sub_100005150();
      if (sub_100320824(v39[144]))
      {
        uint64_t v40 = *(void *)(a1 + 1696);
        if (v40) {
          nullsub_68(v40, 0LL);
        }
      }

      else
      {
        AnalyticsSendEventLazy(@"com.apple.nearbyd.RoseFailedForward2", &stru_1007B5858);
      }

      atomic_store(9u, (unsigned int *)(a1 + 1240));
      v54[0] = _NSConcreteStackBlock;
      v54[1] = 3221225472LL;
      v54[2] = sub_1001D0000;
      v54[3] = &unk_1007A2398;
      v54[4] = a1;
      sub_1001CFF84(a1, v54);

      return 0LL;
    }

    uint64_t v21 = *(void *)(a1 + 1696);
    if (v21) {
      nullsub_68(v21, 1LL);
    }
    __int128 v22 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "Rose successfully healed ^_^",  (uint8_t *)&buf,  2u);
    }
  }

  if ((sub_10036A5A0() & 1) == 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039A1D4();
    }
    sub_1001CED1C(a1, 2);
    uint64_t v41 = 0LL;
    atomic_store(9u, (unsigned int *)(a1 + 1240));
    return v41;
  }

  if (!sub_10036730C(a1 + 40, *(_BYTE *)(a1 + 1336), *(_BYTE *)(a1 + 1337)) || !sub_10031F370(a1 + 1248))
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039A1A8();
    }
    uint64_t v41 = 0LL;
    atomic_store(9u, v4);
    return v41;
  }

  int v23 = sub_10016D074(*(dispatch_queue_s ***)(a1 + 1536));
  __int128 v24 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    LODWORD(buf) = 67109120;
    DWORD1(buf) = v23;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "PRRose::shouldPowerOnRose %d ",  (uint8_t *)&buf,  8u);
  }

  if ((v23 & 1) != 0) {
    goto LABEL_98;
  }
  BOOL v53 = 0;
  int v25 = sub_10036BF60(a1 + 40, &v53);
  if (v53) {
    int v26 = 0;
  }
  else {
    int v26 = v25;
  }
  if (v26 != 1)
  {
LABEL_97:
    *(_DWORD *)(a1 + 1544) = 2;
LABEL_98:
    uint64_t v49 = *(void *)(a1 + 1696);
    if (v49) {
      nullsub_68(v49, 1LL);
    }
    sub_1000065CC(__p, "");
    sub_1001D0044(a1, 0LL, (__int128 *)__p);
    if (v51 < 0) {
      operator delete(__p[0]);
    }
    return 1LL;
  }

  __int128 buf = 0uLL;
  uint64_t v57 = 0LL;
  if (*(_BYTE *)(a1 + 1457))
  {
    uint64_t v27 = qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v52 = 0;
      uint64_t v28 = "Rose is powered off, but deep sleep on demand is enabled";
      unsigned __int8 v29 = (os_log_s *)v27;
LABEL_55:
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, v28, v52, 2u);
    }
  }

  else if (sub_10031FEF4(a1 + 1248, 0xD9u, (unint64_t *)&buf))
  {
    __int128 v44 = (void *)buf;
    if (*((void *)&buf + 1) - (void)buf != 1LL)
    {
      uint64_t v41 = 0LL;
      int v48 = 1;
      goto LABEL_94;
    }

    int v45 = *(unsigned __int8 *)buf;
    uint64_t v46 = (os_log_s *)qword_1007F9AA0;
    BOOL v47 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT);
    if (v45)
    {
      if (v47)
      {
        *(_WORD *)v52 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEFAULT,  "OTP workaround already completed. No need to boot rose again.",  v52,  2u);
      }

      int v48 = 0;
      atomic_store(0xAu, v4);
      uint64_t v41 = 1LL;
      goto LABEL_93;
    }

    if (v47)
    {
      *(_WORD *)v52 = 0;
      uint64_t v28 = "Rose is powered off, but the OTP workaround hasn't been done yet";
      unsigned __int8 v29 = v46;
      goto LABEL_55;
    }
  }

  uint64_t v41 = 0LL;
  int v48 = 1;
LABEL_93:
  __int128 v44 = (void *)buf;
LABEL_94:
  if (v44)
  {
    *((void *)&buf + 1) = v44;
    operator delete(v44);
  }

  if (v48) {
    goto LABEL_97;
  }
  return v41;
}

void sub_1001CFBB0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  __int128 v19 = *(void **)(v17 - 96);
  if (v19)
  {
    *(void *)(v17 - 8_Block_object_dispose(va, 8) = v19;
    operator delete(v19);
  }

  _Unwind_Resume(exception_object);
}

void sub_1001CFC28(uint64_t a1, int a2)
{
  uint64_t v2 = *(dispatch_queue_s **)(a1 + 8);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_1001CFC84;
  v3[3] = &unk_1007AF260;
  v3[4] = a1;
  int v4 = a2;
  dispatch_async(v2, v3);
}

void sub_1001CFC84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(_BYTE *)(v1 + 1690))
  {
    uint64_t v2 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)size_t v13 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "PRRose: activation and matching is already in progress",  v13,  2u);
    }
  }

  else if (*(_BYTE *)(v1 + 1689) && *(_BYTE *)(v1 + 1688))
  {
    int v4 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "PRRose activate: rose and rose service are already matched",  buf,  2u);
    }

    sub_1001CF3D8(v1, *(_DWORD *)(a1 + 40));
  }

  else
  {
    unsigned int v5 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)unint64_t v14 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "PRRose activate: registering for a matching service",  v14,  2u);
    }

    *(_BYTE *)(v1 + 1690) = 1;
    __int128 v6 = IONotificationPortCreate(kIOMainPortDefault);
    *(void *)(v1 + 1680) = v6;
    if (v6)
    {
      IONotificationPortSetDispatchQueue(v6, *(dispatch_queue_t *)(v1 + 8));
      io_registry_entry_t v7 = *(IONotificationPort **)(v1 + 1680);
      char v8 = IOServiceNameMatching("rose");
      IOServiceAddMatchingNotification( v7,  "IOServiceFirstMatch",  v8,  (IOServiceMatchingCallback)sub_1001CF00C,  (void *)v1,  (io_iterator_t *)(v1 + 1668));
      unsigned int v9 = *(IONotificationPort **)(v1 + 1680);
      uint64_t v10 = IOServiceNameMatching("rose-supervisor");
      IOServiceAddMatchingNotification( v9,  "IOServiceFirstMatch",  v10,  (IOServiceMatchingCallback)sub_1001CF00C,  (void *)v1,  (io_iterator_t *)(v1 + 1672));
      sub_1001CF00C(v1, *(_DWORD *)(v1 + 1668));
      sub_1001CF00C(v1, *(_DWORD *)(v1 + 1672));
    }

    else
    {
      uint64_t v11 = sub_10039A200();
      sub_1001CFE4C(v11, v12);
    }
  }

const char *sub_1001CFE4C(uint64_t a1, int a2)
{
  else {
    return off_1007B6160[a2 - 1];
  }
}

uint64_t sub_1001CFE74(uint64_t a1)
{
  unsigned __int8 v2 = 0;
  if ((sub_10036BC48(a1 + 40, &v2) & 1) == 0 && os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039A214();
  }
  return v2;
}

NSDictionary *__cdecl sub_1001CFED0(id a1)
{
  int v4 = @"UpdateFailed";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL));
  unsigned int v5 = v1;
  unsigned __int8 v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));

  return (NSDictionary *)v2;
}

void sub_1001CFF6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001CFF84(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = *(dispatch_queue_s **)(a1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001DEE8C;
  block[3] = &unk_1007B2198;
  id v7 = v3;
  id v5 = v3;
  dispatch_async(v4, block);
}

uint64_t sub_1001D0000(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 7;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

uint64_t sub_1001D003C(uint64_t a1, BOOL *a2)
{
  return sub_10036BF60(a1 + 40, a2);
}

void sub_1001D0044(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v6 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v7 = atomic_load((unsigned int *)(a1 + 1240));
    unsigned int v8 = v7 - 1;
    if (v8 > 0xA) {
      unsigned int v9 = "UnknownToHost";
    }
    else {
      unsigned int v9 = off_1007B6160[v8];
    }
    else {
      uint64_t v10 = off_1007B6108[(int)a2 - 1];
    }
    *(_DWORD *)__int128 buf = 136315394;
    __int128 v39 = v9;
    __int16 v40 = 2080;
    uint64_t v41 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "PRRose::setState, currState: [%s], event: [%s]",  buf,  0x16u);
  }

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  unsigned int v11 = atomic_load((unsigned int *)(a1 + 1240));
  switch(v11)
  {
    case 0u:
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(&__dst, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        __int128 __dst = *a3;
        uint64_t v37 = *((void *)a3 + 2);
      }

      sub_1001D7B4C(a1, a2, &__dst);
      if (SHIBYTE(v37) < 0)
      {
        uint64_t v17 = (void *)__dst;
        goto LABEL_68;
      }

      break;
    case 1u:
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(&v34, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        __int128 v34 = *a3;
        uint64_t v35 = *((void *)a3 + 2);
      }

      sub_1001D864C(a1, a2, &v34);
      if (SHIBYTE(v35) < 0)
      {
        uint64_t v17 = (void *)v34;
        goto LABEL_68;
      }

      break;
    case 2u:
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(&v32, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        __int128 v32 = *a3;
        uint64_t v33 = *((void *)a3 + 2);
      }

      sub_1001D8A60(a1, a2, (uint64_t)&v32);
      if (SHIBYTE(v33) < 0)
      {
        uint64_t v17 = (void *)v32;
        goto LABEL_68;
      }

      break;
    case 3u:
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(&v30, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        __int128 v30 = *a3;
        uint64_t v31 = *((void *)a3 + 2);
      }

      sub_1001DACF8(a1, a2, &v30);
      if (SHIBYTE(v31) < 0)
      {
        uint64_t v17 = (void *)v30;
        goto LABEL_68;
      }

      break;
    case 4u:
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(&v28, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        __int128 v28 = *a3;
        uint64_t v29 = *((void *)a3 + 2);
      }

      sub_1001DB1E0(a1, a2, &v28);
      if (SHIBYTE(v29) < 0)
      {
        uint64_t v17 = (void *)v28;
        goto LABEL_68;
      }

      break;
    case 5u:
    case 9u:
      int v12 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v13 = atomic_load((unsigned int *)(a1 + 1240));
        unsigned int v14 = v13 - 1;
        if (v14 > 0xA) {
          char v15 = "UnknownToHost";
        }
        else {
          char v15 = off_1007B6160[v14];
        }
        else {
          uint64_t v16 = off_1007B6108[(int)a2 - 1];
        }
        *(_DWORD *)__int128 buf = 136315394;
        __int128 v39 = v15;
        __int16 v40 = 2080;
        uint64_t v41 = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "PRRose unexpected event while in state: %s, event: %s, ignoring",  buf,  0x16u);
      }

      break;
    case 6u:
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(&v26, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        __int128 v26 = *a3;
        uint64_t v27 = *((void *)a3 + 2);
      }

      sub_1001DB630(a1, a2, &v26);
      if (SHIBYTE(v27) < 0)
      {
        uint64_t v17 = (void *)v26;
        goto LABEL_68;
      }

      break;
    case 7u:
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(__p, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        *(_OWORD *)std::string __p = *a3;
        uint64_t v25 = *((void *)a3 + 2);
      }

      sub_1001DBB64(a1, a2);
      if (SHIBYTE(v25) < 0)
      {
        uint64_t v17 = __p[0];
        goto LABEL_68;
      }

      break;
    case 8u:
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(&v22, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        __int128 v22 = *a3;
        uint64_t v23 = *((void *)a3 + 2);
      }

      sub_1001DBE58(a1, a2, &v22);
      if (SHIBYTE(v23) < 0)
      {
        uint64_t v17 = (void *)v22;
        goto LABEL_68;
      }

      break;
    case 0xAu:
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(&v20, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        __int128 v20 = *a3;
        uint64_t v21 = *((void *)a3 + 2);
      }

      sub_1001DC27C(a1, a2, (uint64_t)&v20);
      if (SHIBYTE(v21) < 0)
      {
        uint64_t v17 = (void *)v20;
        goto LABEL_68;
      }

      break;
    case 0xBu:
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(&v18, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        __int128 v18 = *a3;
        uint64_t v19 = *((void *)a3 + 2);
      }

      sub_1001DC450(a1, a2, &v18);
      if (SHIBYTE(v19) < 0)
      {
        uint64_t v17 = (void *)v18;
LABEL_68:
        operator delete(v17);
      }

      break;
    default:
      return;
  }

void sub_1001D0504( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, char a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, uint64_t a29, void *a30, uint64_t a31, int a32, __int16 a33, char a34, char a35, uint64_t a36, char a37, uint64_t a38, int a39, __int16 a40, char a41, char a42, uint64_t a43, char a44, uint64_t a45, int a46, __int16 a47, char a48, char a49, uint64_t a50,char a51,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001D05E0(uint64_t a1)
{
  unsigned __int8 v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: powerOnInternal", buf, 2u);
  }

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  *(_DWORD *)(a1 + 1544) = 1;
  sub_1000065CC(__p, "");
  sub_1001D0044(a1, 10LL, (__int128 *)__p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1001D0684( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1001D06A0(uint64_t a1)
{
  unsigned __int8 v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: sendHostGoodbye", buf, 2u);
  }

  *(void *)__int128 buf = 0LL;
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  std::string __p = 0LL;
  unsigned int v7 = 0LL;
  uint64_t v8 = 0LL;
  BOOL v3 = sub_10031F840(a1 + 1248, 0x29u, (uint64_t)&__p, (unint64_t *)buf);
  if (__p)
  {
    unsigned int v7 = __p;
    operator delete(__p);
  }

  if (v3)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    v5[2] = sub_1001D5F7C;
    void v5[3] = &unk_1007A2398;
    v5[4] = a1;
    sub_1001CFF84(a1, v5);
  }

  else if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR))
  {
    sub_10039A240();
  }

  if (*(void *)buf)
  {
    uint64_t v10 = *(void **)buf;
    operator delete(*(void **)buf);
  }

  return v3;
}

void sub_1001D07BC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, void *a17, uint64_t a18)
{
  if (__p) {
    operator delete(__p);
  }
  if (a17) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001D07E8(uint64_t a1)
{
  unsigned __int8 v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: executePowerOff starting.", buf, 2u);
  }

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  if (sub_10036BE8C(a1 + 40, 0LL, v3, v4, v5, v6, v7, v8))
  {
    atomic_store(0xAu, (unsigned int *)(a1 + 1240));
    dispatch_async(*(dispatch_queue_t *)(a1 + 16), &stru_1007B5A58);
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
    *(_DWORD *)(a1 + 1544) = 0;
    unsigned int v9 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "PRRose: executePowerOff complete.", v11, 2u);
    }
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039A26C();
    }
    uint64_t v10 = abort_report_np("PRRose:: Failed to Power off Rose");
    sub_1001D08F8(v10);
  }

void sub_1001D08F8(uint64_t a1)
{
  if (*(void *)a1)
  {
    id v2 = objc_retainBlock(*(id *)a1);
    char v9 = sub_10036A218(a1 + 40, (uint64_t)&v17, v3, v4, v5, v6, v7, v8);
    uint64_t v10 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Handling cached getChipInfoAsync", buf, 2u);
    }

    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_1001D79CC;
    v12[3] = &unk_1007B5928;
    v12[4] = v2;
    char v15 = v9;
    __int128 v13 = v17;
    uint64_t v14 = v18;
    sub_1001CFF84(a1, v12);

    id v11 = *(id *)a1;
  }

  else
  {
    id v11 = 0LL;
  }

  *(void *)a1 = 0LL;
}

void sub_1001D09F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001D0A04(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 7;
  return (*(uint64_t (**)(uint64_t, char *, unint64_t))(v1 + 16))( v1,  &v3,  *(unsigned int *)(a1 + 40) | (unint64_t)&_mh_execute_header);
}

uint64_t sub_1001D0A44(uint64_t a1)
{
  uint64_t v5 = 0LL;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000LL;
  char v8 = 0;
  uint64_t v1 = *(dispatch_queue_s **)(a1 + 8);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1001D0AD4;
  v4[3] = &unk_1007B2170;
  v4[4] = &v5;
  void v4[5] = a1;
  dispatch_sync(v1, v4);
  uint64_t v2 = *((unsigned __int8 *)v6 + 24);
  _Block_object_dispose(&v5, 8);
  return v2;
}

void sub_1001D0AD4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = sub_1001CFE74(v2);
  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    char v3 = NSTemporaryDirectory();
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@/%s",  v4,  "healAttemped.tok"));

    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    unsigned int v7 = [v6 fileExistsAtPath:v5];

    char v8 = (os_log_s *)qword_1007F9AA0;
    BOOL v9 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (v9)
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Healing skipped as it was attempted before without success...",  buf,  2u);
      }
    }

    else
    {
      if (v9)
      {
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Attempting healing for the first time",  v10,  2u);
      }

      *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = sub_10036BC50(v2 + 40) ^ 1;
    }
  }

void sub_1001D0C20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001D0C48(uint64_t a1)
{
  int v2 = v7;
  if (v7 || !v6[96])
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039A2C4();
    }
    if (v2 == 1) {
      int v3 = 3;
    }
    else {
      int v3 = 4 * (v2 == 2);
    }
    sub_1001CED1C(a1, v3);
  }

  else if ((sub_1001D0DDC((_BYTE *)a1, (uint64_t)v6) & 1) == 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039A298();
    }
    sub_1000065CC(&__p, "Failed to apply config parameters");
    sub_1001D2610(a1, 0LL, &__p);
  }

  sub_1001DF55C((uint64_t)v6);
  return sub_1001DF55C((uint64_t)v8);
}

void sub_1001D0D94( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1001DF55C((uint64_t)&a16);
  sub_1001DF55C(v16);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D0DDC(_BYTE *a1, uint64_t a2)
{
  v89 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  sub_1001DF5B4((uint64_t)v122, 4, *(_BYTE *)a2);
  int v2 = *(unsigned __int16 *)(a2 + 80);
  int v3 = operator new(2uLL);
  v119 = v3;
  *int v3 = v2;
  v120 = v3 + 1;
  v121 = v3 + 1;
  sub_1001DF62C(&v116, 22, (__int16 **)&v119);
  sub_1001DF5B4((uint64_t)v113, 21, 2);
  buf[0] = v122[0];
  memset(&buf[8], 0, 24);
  sub_1001309C0(&buf[8], v123, (uint64_t)v124, v124 - (_BYTE *)v123);
  unsigned __int8 v130 = v113[0];
  memset(v131, 0, sizeof(v131));
  sub_1001309C0(v131, v114, (uint64_t)v115, v115 - (_BYTE *)v114);
  char v132 = v116;
  v134[0] = 0LL;
  v134[1] = 0LL;
  uint64_t v133 = 0LL;
  sub_1001309C0(&v133, v117, (uint64_t)v118, v118 - (_BYTE *)v117);
  v110 = 0LL;
  v111 = 0LL;
  v112 = 0LL;
  v127.__r_.__value_.__r.__words[0] = (std::string::size_type)&v110;
  v127.__r_.__value_.__s.__data_[8] = 0;
  v110 = (char *)operator new(0x60uLL);
  v111 = v110;
  v112 = v110 + 96;
  uint64_t v4 = 0LL;
  v111 = (_BYTE *)sub_1001DFBF4((uint64_t)&v112, (uint64_t)buf, (uint64_t)&v135, (uint64_t)v110);
  do
  {
    uint64_t v5 = (void *)v134[v4 - 1];
    if (v5)
    {
      v134[v4] = v5;
      operator delete(v5);
    }

    v4 -= 4LL;
  }

  while (v4 != -12);
  memset(buf, 0, 24);
  sub_1001DF8D4(buf, (uint64_t)v110, (uint64_t)v111, (v111 - v110) >> 5);
  uint64_t v6 = (uint64_t)(a1 + 40);
  BOOL v7 = sub_10036937C((uint64_t)(a1 + 40), (uint64_t *)buf);
  v127.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
  sub_100130C0C((void ***)&v127);
  if (!v7)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039A3F8();
    }
    uint64_t v16 = 0LL;
    ++a1[1524];
    goto LABEL_88;
  }

  char v8 = (os_log_s *)(id)qword_1007F9AA0;
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    sub_10032AA2C(v122, &v127);
    int size = (char)v127.__r_.__value_.__s.__size_;
    std::string::size_type v10 = v127.__r_.__value_.__r.__words[0];
    sub_10032AA2C(v113, &__p);
    id v11 = &v127;
    if (size < 0) {
      id v11 = (std::stringbuf::string_type *)v10;
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__int128 buf = 136315650;
    *(void *)&uint8_t buf[4] = v11;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = p_p;
    *(_WORD *)&buf[22] = 1024;
    *(_DWORD *)&_BYTE buf[24] = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "PRRose::setConfigParameters: debugLevelParam (%s), cirMessageVersionParam (%s), coexModeParam,%d,",  buf,  0x1Cu);
  }

  if (!sub_1001D4530((uint64_t)a1, 1))
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039A3CC();
    }
    uint64_t v16 = 0LL;
    ++a1[1525];
    goto LABEL_88;
  }

  __int128 v13 = (os_log_s *)(id)qword_1007F9AA0;
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "PRRose::setConfigParameters: _updateCoexGlobalEventStatus, success",  buf,  2u);
  }

  LOBYTE(v107) = 0;
  char v108 = 0;
  int v14 = *((_DWORD *)sub_100005150() + 187);
  if (v14 != 1)
  {
    if (v14 != 2)
    {
      if (!v14)
      {
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_FAULT)) {
          sub_10039A3A0();
        }
        char v15 = (os_log_s *)qword_1007F9AA0;
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)__int128 buf = 136315650;
          *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/Ranging/Providers/Rose/IO/PRRose.mm";
          *(_WORD *)&buf[12] = 1024;
          *(_DWORD *)&buf[14] = 1216;
          *(_WORD *)&buf[18] = 2080;
          *(void *)&buf[20] = "applyConfigOptions";
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", buf, 0x1Cu);
        }

        abort();
      }

void sub_1001D2334( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25, uint64_t a26, uint64_t a27, char a28, uint64_t a29, uint64_t a30, uint64_t a31, void *a32, uint64_t a33, uint64_t a34, char a35, uint64_t a36, uint64_t a37, uint64_t a38, void *__p, uint64_t a40, uint64_t a41, uint64_t a42, void *a43, uint64_t a44, uint64_t a45, void *a46, uint64_t a47, uint64_t a48, uint64_t a49, void *a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  *(void *)(v53 - 256) = &a35;
  sub_100130C0C((void ***)(v53 - 256));
  if (__p)
  {
    a40 = (uint64_t)__p;
    operator delete(__p);
  }

  if (a43)
  {
    a44 = (uint64_t)a43;
    operator delete(a43);
  }

  if (a46)
  {
    a47 = (uint64_t)a46;
    operator delete(a46);
  }

  if (a50)
  {
    a51 = (uint64_t)a50;
    operator delete(a50);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1001D2610(uint64_t a1, uint64_t a2, const std::string *a3)
{
  uint64_t v6 = (os_log_s *)(id)qword_1007F9AA0;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    sub_10035F1D8(a2, __p);
    BOOL v7 = v43 >= 0 ? __p : (void **)__p[0];
    char v8 = (a3->__r_.__value_.__s.__size_ & 0x80u) == 0 ? a3 : (const std::string *)a3->__r_.__value_.__r.__words[0];
    *(_DWORD *)__int128 buf = 136315394;
    uint64_t v45 = v7;
    __int16 v46 = 2080;
    uint64_t v47 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "PRRose::_triggerLogCollection: type: %s, reason: %s",  buf,  0x16u);
    if (v43 < 0) {
      operator delete(__p[0]);
    }
  }

  if ((_DWORD)a2) {
    goto LABEL_21;
  }
  sub_1001CEC2C(a1);
  atomic_store(7u, (unsigned int *)(a1 + 1240));
  v41[0] = _NSConcreteStackBlock;
  v41[1] = 3221225472LL;
  _OWORD v41[2] = sub_1001D73C0;
  v41[3] = &unk_1007A2398;
  v41[4] = a1;
  sub_1001CFF84(a1, v41);
  if (*(void *)(a1 + 1328)) {
    goto LABEL_15;
  }
  int v14 = operator new(0x28uLL);
  sub_1000065CC(__p, "com.apple.nearbyd.rose-recovery");
  sub_100361848(v14);
  if (v43 < 0) {
    operator delete(__p[0]);
  }
  sub_1001AC5F4((uint64_t *)(a1 + 1328), (uint64_t)v14);
  if (*(void *)(a1 + 1328))
  {
LABEL_15:
    char v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    if ([v15 BOOLForKey:@"HaltPRRoseOnFatalError"])
    {
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_FAULT)) {
        sub_10039A450();
      }
      while (1)
        sleep(0xAu);
    }

    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 stringForKey:@"HaltPRRoseOnFatalErrorReason"]);
    if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      unsigned int v17 = a3;
    }
    else {
      unsigned int v17 = (const std::string *)a3->__r_.__value_.__r.__words[0];
    }
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v17));
    unsigned int v19 = [v16 isEqualToString:v18];

    if (v19)
    {
      uint64_t v36 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_FAULT)) {
        sub_10039A47C((uint64_t)v16, v36);
      }
      while (1)
        sleep(0xAu);
    }

LABEL_21:
    int v20 = sub_10036A5A4(a1 + 40, a2, a3, v9, v10, v11, v12, v13);
    int v21 = v20;
    BOOL v23 = (_DWORD)a2 == 1 && v20 == 1;
    v37[0] = _NSConcreteStackBlock;
    v37[1] = 3221225472LL;
    v37[2] = sub_1001D73F8;
    v37[3] = &unk_1007B58D8;
    v37[4] = a3;
    int v38 = a2;
    int v39 = v20;
    BOOL v40 = v23;
    AnalyticsSendEventLazy(@"com.apple.nearbyd.RoseHostTriggeredLogCollection", v37);
    switch(v21)
    {
      case 0:
        uint64_t v24 = (os_log_s *)qword_1007F9AA0;
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(__p[0]) = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Successfully triggered log collection",  (uint8_t *)__p,  2u);
        }

        goto LABEL_37;
      case 1:
        uint64_t v27 = (os_log_s *)qword_1007F9AA0;
        BOOL v28 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR);
        if ((_DWORD)a2 == 1)
        {
          if (v28) {
            sub_10039A4EC();
          }
          std::operator+<char>(__p, "Failed to trigger non-fatal log collection. Promoting to fatal. - ", a3);
          uint64_t v26 = sub_1001D2610(a1, 0LL, __p);
          if (v43 < 0) {
            operator delete(__p[0]);
          }
          goto LABEL_46;
        }

        if ((_DWORD)a2)
        {
          if (v28) {
            sub_10039A544(a2, v27, v29, v30, v31, v32, v33, v34);
          }
          uint64_t result = abort_report_np("Failed to trigger log collection.");
        }

        else
        {
          if (v28) {
            sub_10039A518();
          }
          uint64_t result = abort_report_np("Failed to triggered fatal log collection.");
        }

        goto LABEL_66;
      case 2:
        BOOL v25 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR);
        if (!(_DWORD)a2)
        {
          if (v25) {
            sub_10039A5A8();
          }
          uint64_t result = abort_report_np("Unexpected BusyNonFatalInProgress after triggering fatal log collection.");
          goto LABEL_66;
        }

        if (v25) {
          sub_10039A5D4();
        }
LABEL_45:
        uint64_t v26 = 0LL;
LABEL_46:
        uint64_t result = v26;
        break;
      case 3:
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
          sub_10039A600();
        }
        goto LABEL_37;
      case 4:
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
          sub_10039A62C();
        }
        goto LABEL_45;
      case 5:
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
          sub_10039A658();
        }
        goto LABEL_45;
      default:
LABEL_37:
        uint64_t v26 = 1LL;
        goto LABEL_46;
    }

    return result;
  }

  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039A424();
  }
  uint64_t result = abort_report_np("PRRose failed to take assertion after triggering fatal log collection, aborting nearbyd");
LABEL_66:
  __break(1u);
  return result;
}

void sub_1001D2AE8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, int a23, __int16 a24, char a25, char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  operator delete(v26);
  _Unwind_Resume(a1);
}

void sub_1001D2B6C(uint64_t a1)
{
  int v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "regulatory,refreshConfiguration()", buf, 2u);
  }

  int v3 = *(dispatch_queue_s **)(a1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001D2C0C;
  block[3] = &unk_1007A2398;
  void block[4] = a1;
  dispatch_async(v3, block);
}

void sub_1001D2C0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_1000065CC(__p, "");
  sub_1001D0044(v1, 8LL, (__int128 *)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1001D2C60( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001D2C7C(uint64_t a1)
{
  int v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: LPEM enable", buf, 2u);
  }

  char v3 = *(dispatch_queue_s **)(a1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001D2D1C;
  block[3] = &unk_1007A2398;
  void block[4] = a1;
  dispatch_async(v3, block);
}

void sub_1001D2D1C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_1000065CC(__p, "");
  sub_1001D0044(v1, 11LL, (__int128 *)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1001D2D70( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001D2D8C(uint64_t a1, int a2)
{
  uint64_t v4 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 67109120;
    int v11 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "PRRose: enableDeepSleepOnDemand %u", buf, 8u);
  }

  uint64_t v5 = sub_100005150();
  if (sub_100355268((uint64_t)v5))
  {
    if (*(_BYTE *)(a1 + 1496))
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1 + 8);
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472LL;
      v8[2] = sub_1001D2EC8;
      v8[3] = &unk_1007B5878;
      v8[4] = a1;
      char v9 = a2;
      dispatch_async(v6, v8);
    }

    else
    {
      BOOL v7 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "PRRose: ignoring deep sleep on demand change because deep sleep feature is disabled",  buf,  2u);
      }
    }
  }

void sub_1001D2EC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  char v3 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    if (*(_BYTE *)(a1 + 40)) {
      uint64_t v4 = "enabled";
    }
    else {
      uint64_t v4 = "disabled";
    }
    *(_DWORD *)__int128 buf = 136315138;
    char v15 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "PRRose: deep sleep on demand has been %s",  buf,  0xCu);
  }

  int v5 = *(unsigned __int8 *)(a1 + 40);
  *(_BYTE *)(v1 + 1457) = v5;
  if (*(_BYTE *)(v1 + 1488)) {
    uint64_t v6 = *(void *)(v1 + 1480);
  }
  else {
    uint64_t v6 = 1000LL;
  }
  if (v5) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 15000LL;
  }
  sub_10016CB60(*(dispatch_queue_s ***)(v1 + 1536), v7);
  if (*(_BYTE *)(v1 + 1457))
  {
    unsigned int v8 = atomic_load((unsigned int *)(v1 + 1240));
    if (v8 == 10)
    {
      char v9 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "PRRose: deep sleep on demand is enabled but we're in PoweredOff, need to power on and then enter deep sleep",  buf,  2u);
      }

      *(_DWORD *)(v1 + 1544) = 2;
      sub_1000065CC(__p, "");
      sub_1001D0044(v1, 10LL, (__int128 *)__p);
      if (v13 < 0) {
        operator delete(__p[0]);
      }
      return;
    }

    if (*(_BYTE *)(v1 + 1457)) {
      return;
    }
  }

  unsigned int v10 = atomic_load((unsigned int *)(v1 + 1240));
  if (v10 == 11)
  {
    int v11 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "PRRose: deep sleep on demand is disabled but we're in DeepSleep, need to exit deep sleep and then power off",  buf,  2u);
    }

    *(_DWORD *)(v1 + 1544) = 2;
    sub_1001D30EC(v1, 1);
  }

void sub_1001D30C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001D30EC(uint64_t a1, int a2)
{
  uint64_t v4 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "PRRose: requestDeepSleepExit", buf, 2u);
  }

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v5 = *(void *)(a1 + 1504) + 50000000LL;
  if (std::chrono::steady_clock::now().__d_.__rep_ < v5)
  {
    uint64_t v6 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "PRRose: deep sleep exit request too quick after previous entry. waiting...",  buf,  2u);
    }

    *(void *)__int128 buf = v5 - std::chrono::steady_clock::now().__d_.__rep_;
    std::this_thread::sleep_for ((const std::chrono::nanoseconds *)buf);
  }

  char v18 = sub_100154F9C(3LL);
  *(void *)__int128 buf = 0LL;
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  sub_100030B3C(buf, &v18, (uint64_t)&v19, 1uLL);
  std::stringbuf::string_type __p = 0LL;
  char v13 = 0LL;
  uint64_t v14 = 0LL;
  BOOL v7 = sub_10031F840(a1 + 1248, 0x2Du, (uint64_t)buf, (unint64_t *)&__p);
  unsigned int v8 = (os_log_s *)qword_1007F9AA0;
  if (v7)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v11 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "PRRose: sent deep sleep exit request to RoseSupervisor. Polling for completion.",  v11,  2u);
    }

    uint64_t v9 = sub_1001DC968(a1, a2);
    if (__p)
    {
      char v13 = __p;
      operator delete(__p);
    }

    if (*(void *)buf)
    {
      uint64_t v16 = *(void **)buf;
      operator delete(*(void **)buf);
    }

    return v9;
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039A684();
    }
    uint64_t result = abort_report_np("PRRose: sending deep sleep exit request to RoseSupervisor failed. Aborting nearbyd.");
    __break(1u);
  }

  return result;
}

void sub_1001D32BC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  if (a13) {
    operator delete(a13);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001D32E8(uint64_t a1)
{
  uint64_t v5 = 0LL;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000LL;
  char v8 = 0;
  uint64_t v1 = *(dispatch_queue_s **)(a1 + 8);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1001D3378;
  v4[3] = &unk_1007B2170;
  v4[4] = &v5;
  void v4[5] = a1;
  dispatch_sync(v1, v4);
  uint64_t v2 = *((unsigned __int8 *)v6 + 24);
  _Block_object_dispose(&v5, 8);
  return v2;
}

uint64_t sub_1001D3378(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 40) + 1457LL);
  return result;
}

void sub_1001D338C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3) {
    sub_10039A6B0();
  }
  id v6 = v3;
  id v4 = objc_retainBlock(v3);
  uint64_t v5 = *(void **)(a1 + 1280);
  *(void *)(a1 + 1280) = v4;
}

void sub_1001D33D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3) {
    sub_10039A6D8();
  }
  id v6 = v3;
  id v4 = objc_retainBlock(v3);
  uint64_t v5 = *(void **)(a1 + 1288);
  *(void *)(a1 + 128_Block_object_dispose(va, 8) = v4;
}

BOOL sub_1001D341C(uint64_t a1, unsigned int a2, uint64_t a3, unint64_t *a4)
{
  unsigned int v8 = atomic_load((unsigned int *)(a1 + 1240));
  if (v8 - 3 <= 1 || a2 <= 0x3B && ((1LL << a2) & 0xA40219800000001LL) != 0) {
    return sub_10031F840(a1 + 1248, a2, a3, a4);
  }
  if (a2 - 37 > 1)
  {
    BOOL result = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    sub_10039A77C();
    return 0LL;
  }

  char v12 = 0;
  if ((sub_1001D35E0(a1, &v12) & 1) == 0 && os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039A750();
  }
  if (v12)
  {
    unsigned int v10 = (os_log_s *)(id)qword_1007F9AA0;
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      sub_10031FBA8(a2, v11);
      sub_10039A700();
    }

    return 0LL;
  }

  return sub_10031F840(a1 + 1248, a2, a3, a4);
}

void sub_1001D35C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001D35E0(uint64_t a1, _BYTE *a2)
{
  id v4 = sub_100005150();
  if (!sub_100355268((uint64_t)v4))
  {
    LOBYTE(v7) = 0;
    LOBYTE(v6) = 1;
    goto LABEL_5;
  }

  unsigned int v5 = sub_1001D71A0(a1);
  if (v5 <= 3)
  {
    unsigned int v7 = 0x1010000u >> (8 * v5);
    unsigned int v6 = (0xEu >> (v5 & 0xF)) & 1;
LABEL_5:
    *a2 = v7;
  }

  return v6 & 1;
}

BOOL sub_1001D364C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unsigned int v3 = atomic_load((unsigned int *)(a1 + 1240));
  if (v3 - 3 < 2) {
    return sub_10031FBD4(a1 + 1248, a2, a3);
  }
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039A7A8();
  }
  return 0LL;
}

void sub_1001D36B0(uint64_t a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  id v4 = (os_log_s *)qword_1007F9AA0;
  BOOL v5 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT);
  if (v3 != 1) {
    sub_10039A7D4(v5);
  }
  if (v5)
  {
    *(_WORD *)unsigned int v6 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "PRRose::_handleRoseControlReport - ResetCompleteSuccess",  v6,  2u);
  }

  std::mutex::lock((std::mutex *)(a1 + 1344));
  atomic_store(1u, (unsigned __int8 *)(a1 + 1456));
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 1408));
  std::mutex::unlock((std::mutex *)(a1 + 1344));
}

BOOL sub_1001D3760(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(__p) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "PRRose: assertUWBCommsOwnership",  (uint8_t *)&__p,  2u);
  }

  char v8 = 1;
  std::stringbuf::string_type __p = 0LL;
  unsigned int v6 = 0LL;
  uint64_t v7 = 0LL;
  sub_100030B3C(&__p, &v8, (uint64_t)&v9, 1uLL);
  BOOL v3 = sub_10031FBD4(a1 + 1248, 0xD1u, (uint64_t)&__p);
  if (__p)
  {
    unsigned int v6 = __p;
    operator delete(__p);
  }

  return v3;
}

void sub_1001D3814( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1001D3830(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(__p) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "PRRose: deassertUWBCommsOwnership",  (uint8_t *)&__p,  2u);
  }

  char v8 = 0;
  std::stringbuf::string_type __p = 0LL;
  unsigned int v6 = 0LL;
  uint64_t v7 = 0LL;
  sub_100030B3C(&__p, &v8, (uint64_t)&v9, 1uLL);
  BOOL v3 = sub_10031FBD4(a1 + 1248, 0xD1u, (uint64_t)&__p);
  if (__p)
  {
    unsigned int v6 = __p;
    operator delete(__p);
  }

  return v3;
}

void sub_1001D38E0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1001D38FC(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(__p) = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: allowRoseSleep", (uint8_t *)&__p, 2u);
  }

  char v8 = 1;
  std::stringbuf::string_type __p = 0LL;
  unsigned int v6 = 0LL;
  uint64_t v7 = 0LL;
  sub_100030B3C(&__p, &v8, (uint64_t)&v9, 1uLL);
  BOOL v3 = sub_10031FBD4(a1 + 1248, 0xD4u, (uint64_t)&__p);
  if (__p)
  {
    unsigned int v6 = __p;
    operator delete(__p);
  }

  return v3;
}

void sub_1001D39B0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1001D39CC(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(__p) = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: disallowRoseSleep", (uint8_t *)&__p, 2u);
  }

  char v8 = 0;
  std::stringbuf::string_type __p = 0LL;
  unsigned int v6 = 0LL;
  uint64_t v7 = 0LL;
  sub_100030B3C(&__p, &v8, (uint64_t)&v9, 1uLL);
  BOOL v3 = sub_10031FBD4(a1 + 1248, 0xD4u, (uint64_t)&__p);
  if (__p)
  {
    unsigned int v6 = __p;
    operator delete(__p);
  }

  return v3;
}

void sub_1001D3A7C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1001D3A98(uint64_t a1)
{
  int v2 = *((_DWORD *)sub_100005150() + 144);
  BOOL v7 = 1;
  if ((v2 - 3) >= 0x15)
  {
    unsigned int v3 = v2 - 102;
    BOOL v4 = v3 > 0x13;
    int v5 = (1 << v3) & 0xCE733;
    if (v4 || v5 == 0) {
      BOOL v7 = 0;
    }
  }

  char v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  if ([v8 BOOLForKey:@"DisableUwbBasebandCoexMessaging"])
  {
    uint64_t v9 = (os_log_s *)qword_1007F9AA0;
    BOOL v7 = 0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Disabling UWB-BB coex messaging. DisableUwbBasebandCoexMessaging is set to true.",  buf,  2u);
      BOOL v7 = 0;
    }
  }

  unsigned int v10 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v7;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Support Rose-BB Coex: %d", buf, 8u);
  }

  BOOL v13 = v7;
  *(void *)__int128 buf = 0LL;
  char v15 = 0LL;
  uint64_t v16 = 0LL;
  sub_100030B3C(buf, &v13, (uint64_t)buf, 4uLL);
  BOOL v11 = sub_10031FBD4(a1 + 1248, 0xD8u, (uint64_t)buf);
  if (*(void *)buf)
  {
    char v15 = *(void **)buf;
    operator delete(*(void **)buf);
  }

  return v11;
}

void sub_1001D3C40( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

BOOL sub_1001D3C74(std::mutex *a1)
{
  int v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: resetSupervisorJobs", buf, 2u);
  }

  std::mutex::lock(a1 + 21);
  atomic_store(0, (unsigned __int8 *)&a1[22].__m_.__opaque[40]);
  std::mutex::unlock(a1 + 21);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  v11[2] = sub_1001D3DD4;
  void v11[3] = &unk_1007A2398;
  void v11[4] = a1;
  sub_1001CFF84((uint64_t)a1, v11);
  *(void *)__int128 buf = 0LL;
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  std::stringbuf::string_type __p = 0LL;
  unsigned int v6 = 0LL;
  uint64_t v7 = 0LL;
  BOOL v3 = sub_10031F840((uint64_t)&a1[19].__m_.__opaque[24], 0x27u, (uint64_t)&__p, (unint64_t *)buf);
  if (__p)
  {
    unsigned int v6 = __p;
    operator delete(__p);
  }

  if (!v3 && os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039A858();
  }
  if (*(void *)buf)
  {
    uint64_t v9 = *(void **)buf;
    operator delete(*(void **)buf);
  }

  return v3;
}

void sub_1001D3DA8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  if (a13) {
    operator delete(a13);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001D3DD4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 3;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

BOOL sub_1001D3E0C(uint64_t a1)
{
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEBUG)) {
    sub_10039A8B0();
  }
  uint64_t v7 = 0LL;
  char v8 = 0LL;
  uint64_t v9 = 0LL;
  std::stringbuf::string_type __p = 0LL;
  int v5 = 0LL;
  uint64_t v6 = 0LL;
  BOOL v2 = sub_10031F840(a1 + 1248, 0x36u, (uint64_t)&__p, (unint64_t *)&v7);
  if (__p)
  {
    int v5 = __p;
    operator delete(__p);
  }

  if (!v2 && os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039A884();
  }
  if (v7)
  {
    char v8 = v7;
    operator delete(v7);
  }

  return v2;
}

void sub_1001D3ECC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  if (a12) {
    operator delete(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001D3EF8(uint64_t a1)
{
  BOOL v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: activateAOPTimeSync", buf, 2u);
  }

  char v3 = sub_100005150();
  *(void *)__int128 buf = 0LL;
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  std::stringbuf::string_type __p = 0LL;
  uint64_t v7 = 0LL;
  uint64_t v8 = 0LL;
  BOOL v4 = sub_10031F840(a1 + 1248, 0x2Au, (uint64_t)&__p, (unint64_t *)buf);
  if (__p)
  {
    uint64_t v7 = __p;
    operator delete(__p);
  }

  if (!v4 && os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039A8E8();
  }
  if (*(void *)buf)
  {
    uint64_t v10 = *(void **)buf;
    operator delete(*(void **)buf);
  }

  return v4;
}

void sub_1001D3FE8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  if (a13) {
    operator delete(a13);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1001D4014(uint64_t a1)
{
  std::stringbuf::string_type __p = 0LL;
  int v5 = 0LL;
  uint64_t v6 = 0LL;
  if (sub_10031FEF4(a1 + 1248, 0xD5u, (unint64_t *)&__p))
  {
    if (v5 - (_BYTE *)__p == 1)
    {
      BOOL v1 = *(unsigned __int8 *)__p != 0;
      goto LABEL_9;
    }

    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039A914();
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR))
  {
    sub_10039A97C();
  }

  BOOL v1 = 0LL;
LABEL_9:
  BOOL v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 67109120;
    BOOL v8 = v1;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: hasCalDataBeenPushed %u", buf, 8u);
  }

  if (__p)
  {
    int v5 = __p;
    operator delete(__p);
  }

  return v1;
}

void sub_1001D4148( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
}

unint64_t sub_1001D416C(uint64_t a1)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  std::stringbuf::string_type __p = 0LL;
  BOOL v8 = 0LL;
  uint64_t v9 = 0LL;
  BOOL v1 = sub_10031F840(a1 + 1248, 0x28u, (uint64_t)&__p, (unint64_t *)&v10);
  if (__p)
  {
    BOOL v8 = __p;
    operator delete(__p);
  }

  if (!v1 && os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039A9D4();
  }
  BOOL v2 = v10;
  if (v11 - (_BYTE *)v10 == 8)
  {
    unint64_t v3 = *(void *)v10 & 0xFFFFFFFFFFFFFF00LL;
    uint64_t v4 = *(void *)v10;
LABEL_11:
    uint64_t v11 = v2;
    operator delete(v2);
    return v3 | v4;
  }

  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039A9A8();
  }
  unint64_t v3 = 0LL;
  uint64_t v4 = 0LL;
  uint64_t v5 = 0LL;
  BOOL v2 = v10;
  if (v10) {
    goto LABEL_11;
  }
  return v5;
}

void sub_1001D4268( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  if (a12) {
    operator delete(a12);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1001D4294()
{
  unsigned __int8 v0 = IOServiceNameMatching("rose");
  io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v0);
  if (!MatchingService)
  {
    sub_10039AA00();
    __break(1u);
  }

  CFProperty = (const __CFData *)IORegistryEntryCreateCFProperty( MatchingService,  @"use-internal-32k-clock",  kCFAllocatorDefault,  0);
  if (CFProperty)
  {
    unint64_t v3 = CFProperty;
    CFTypeID v4 = CFGetTypeID(CFProperty);
    if (v4 == CFDataGetTypeID() && CFDataGetLength(v3) == 4)
    {
      BytePtr = CFDataGetBytePtr(v3);
      uint64_t v6 = (os_log_s *)qword_1007F9AA0;
      if (BytePtr)
      {
        uint64_t v7 = BytePtr;
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
        {
          int v8 = *(_DWORD *)v7;
          v14[0] = 67109120;
          v14[1] = v8;
          _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "use-internal-32k-clock property exists: 0x%x",  (uint8_t *)v14,  8u);
        }

        BOOL v9 = *(_DWORD *)v7 != 0;
        goto LABEL_13;
      }

      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_10039AA14();
      }
    }

    else
    {
      uint64_t v10 = (os_log_s *)(id)qword_1007F9AA0;
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        CFTypeID v11 = CFGetTypeID(v3);
        sub_10039AA40((uint64_t)v14, v11, v10);
      }
    }

    BOOL v9 = 0LL;
LABEL_13:
    CFRelease(v3);
    return v9;
  }

  uint64_t v12 = (os_log_s *)qword_1007F9AA0;
  BOOL v9 = 0LL;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v14[0]) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "use-internal-32k-clock property does not exist",  (uint8_t *)v14,  2u);
    return 0LL;
  }

  return v9;
}

void sub_1001D4480(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1001D4498(void *a1, uint64_t a2, unint64_t a3)
{
  a1[2] = 0LL;
  uint64_t v4 = (uint64_t)(a1 + 2);
  *a1 = 0LL;
  a1[1] = 0LL;
  if (a3)
  {
    sub_100130DA0(a1, a3);
    a1[1] = sub_1001DFBF4(v4, a2, a2 + 32 * a3, a1[1]);
  }

  return a1;
}

void sub_1001D4510( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + _Block_object_dispose(va, 8) = v10;
  sub_100130C0C(&a9);
  _Unwind_Resume(a1);
}

BOOL sub_1001D4530(uint64_t a1, char a2)
{
  uint64_t v4 = operator new(1uLL);
  _BYTE *v4 = 23;
  uint64_t v24 = 0LL;
  uint64_t v25 = 0LL;
  BOOL v23 = 0LL;
  sub_1001309C0(&v23, v4, (uint64_t)(v4 + 1), 1uLL);
  operator delete(v4);
  uint64_t v5 = a1 + 40;
  sub_1003691A8(v5, (char **)&v23, 2000, (uint64_t)__p);
  if (!v22)
  {
    BOOL v9 = 0LL;
    goto LABEL_17;
  }

  sub_100357354(__p, (uint64_t)v18);
  uint64_t v15 = 0LL;
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  sub_1001DF8D4(&v15, v19, v20, (v20 - v19) >> 5);
  if (v16 == v15 || *(_BYTE *)v15 != 23)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039AA7C();
    }
  }

  else
  {
    unsigned __int16 v6 = sub_10032ACB4(v15, 0);
    unsigned __int8 v7 = v6;
    if (v6 >= 0x100u)
    {
      int v8 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v7;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Coex: global event config (%d) ", buf, 8u);
      }

      sub_10032ACEC(v15, 0, v7 & 0xFE | a2);
      buf[0] = *(_BYTE *)v15;
      uint64_t v30 = 0LL;
      uint64_t v31 = 0LL;
      uint64_t v29 = 0LL;
      sub_1001309C0( &v29,  *(const void **)(v15 + 8),  *(void *)(v15 + 16),  *(void *)(v15 + 16) - *(void *)(v15 + 8));
      CFTypeID v11 = 0LL;
      uint64_t v12 = 0LL;
      BOOL v13 = 0LL;
      uint64_t v26 = &v11;
      char v27 = 0;
      CFTypeID v11 = (char *)operator new(0x20uLL);
      uint64_t v12 = v11;
      BOOL v13 = v11 + 32;
      uint64_t v12 = (_BYTE *)sub_1001DFBF4((uint64_t)&v13, (uint64_t)buf, (uint64_t)&v32, (uint64_t)v11);
      memset(v14, 0, sizeof(v14));
      sub_1001DF8D4(v14, (uint64_t)v11, (uint64_t)v12, (v12 - v11) >> 5);
      uint64_t v26 = &v11;
      sub_100130C0C((void ***)&v26);
      if (v29)
      {
        uint64_t v30 = v29;
        operator delete(v29);
      }

      BOOL v9 = sub_10036937C(v5, v14);
      *(void *)__int128 buf = v14;
      sub_100130C0C((void ***)buf);
      goto LABEL_13;
    }
  }

  BOOL v9 = 0LL;
LABEL_13:
  *(void *)__int128 buf = &v15;
  sub_100130C0C((void ***)buf);
  *(void *)__int128 buf = &v19;
  sub_100130C0C((void ***)buf);
  if (v22 && __p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }

void sub_1001D47F8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void *__p, uint64_t a23, uint64_t a24, char a25, void *a26, uint64_t a27)
{
  *(void *)(v29 - 96) = v27;
  sub_100130C0C((void ***)(v29 - 96));
  *(void *)(v29 - 96) = &a15;
  sub_100130C0C((void ***)(v29 - 96));
  *(void *)(v29 - 96) = v28;
  sub_100130C0C((void ***)(v29 - 96));
  if (a25 && __p)
  {
    a23 = (uint64_t)__p;
    operator delete(__p);
  }

  if (a26)
  {
    a27 = (uint64_t)a26;
    operator delete(a26);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1001D48C8@<X0>(uint64_t *a1@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  if (a1[1] != *a1)
  {
    unint64_t v4 = 0LL;
    do
    {
      uint64_t v5 = sub_100046B94(&v12, (uint64_t)"0x", 2LL);
      char v11 = 48;
      unsigned __int16 v6 = sub_100138E6C(v5, &v11);
      uint64_t v7 = *v6;
      *(_DWORD *)((char *)v6 + *(void *)(*v6 - 24) + _Block_object_dispose(va, 8) = *(_DWORD *)((_BYTE *)v6 + *(void *)(*v6 - 24) + 8) & 0xFFFFFFB5 | 8;
      *(uint64_t *)((char *)v6 + *(void *)(v7 - 24) + 24) = 2LL;
      std::ostream::operator<<(v6, *(unsigned __int8 *)(*a1 + v4));
      uint64_t v9 = *a1;
      uint64_t v8 = a1[1];
      if (v4 != ~*a1 + v8)
      {
        sub_100046B94(&v12, (uint64_t)",", 1LL);
        uint64_t v9 = *a1;
        uint64_t v8 = a1[1];
      }

      ++v4;
    }

    while (v8 - v9 > v4);
  }

  std::stringbuf::str(a2, &v13);
  std::streambuf::~streambuf(&v13);
  return std::ios::~ios(&v14);
}

void sub_1001D4A3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

BOOL sub_1001D4A5C(uint64_t a1, unsigned __int8 *a2)
{
  unsigned int v2 = atomic_load((unsigned int *)(a1 + 1240));
  if (v2 - 3 > 1) {
    return 0LL;
  }
  uint64_t v5 = (os_log_s *)(id)qword_1007F9AA0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    sub_100045754((uint64_t)&__p);
    char v14 = 48;
    uint64_t v8 = sub_100138E6C(&v17, &v14);
    *(_DWORD *)((char *)v8 + *(void *)(*v8 - 24LL) + _Block_object_dispose(va, 8) = *(_DWORD *)((_BYTE *)v8 + *(void *)(*v8 - 24LL) + 8) & 0xFFFFFFB5 | 8;
    sub_100046B94(&v17, (uint64_t)"0x", 2LL);
    for (uint64_t i = 7LL; i != -1; --i)
    {
      *(std::streambuf::char_type **)((char *)&v18.__binp_ + *(void *)(v17 - 24)) = (std::streambuf::char_type *)2;
      uint64_t v10 = a2[i];
      std::ostream::operator<<(&v17, v10);
    }

    std::stringbuf::str(&v13, &v18);
    *(void **)((char *)&__p
    uint64_t v17 = v11;
    std::streambuf::~streambuf(&v18);
    std::ios::~ios(&v19);
    uint64_t v12 = &v13;
    if ((v13.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v12 = (std::stringbuf::string_type *)v13.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__int128 buf = 136315138;
    int v21 = v12;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "PRRose::setRoseConnectionlessMacAddress: %s",  buf,  0xCu);
  }

  std::stringbuf::string_type __p = 0LL;
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  sub_100030B3C(&__p, a2, (uint64_t)(a2 + 8), 8uLL);
  BOOL v6 = sub_1001D364C(a1, 0xD3u, (uint64_t)&__p);
  if (__p)
  {
    uint64_t v16 = __p;
    operator delete(__p);
  }

  return v6;
}

void sub_1001D4CA4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  _Unwind_Resume(a1);
}

BOOL sub_1001D4CEC(uint64_t a1, char a2)
{
  unsigned int v2 = atomic_load((unsigned int *)(a1 + 1240));
  if (v2 - 3 >= 2)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039AAA8();
    }
    return 0LL;
  }

  else
  {
    sub_1001DF5B4((uint64_t)v9, 4, a2);
    v14[0] = v9[0];
    uint64_t v16 = 0LL;
    uint64_t v17 = 0LL;
    std::stringbuf::string_type __p = 0LL;
    sub_1001309C0(&__p, v10, (uint64_t)v11, v11 - (_BYTE *)v10);
    BOOL v6 = 0LL;
    uint64_t v7 = 0LL;
    uint64_t v8 = 0LL;
    uint64_t v12 = &v6;
    char v13 = 0;
    BOOL v6 = (unsigned __int8 *)operator new(0x20uLL);
    uint64_t v7 = v6;
    uint64_t v8 = v6 + 32;
    uint64_t v7 = (unsigned __int8 *)sub_1001DFBF4((uint64_t)&v8, (uint64_t)v14, (uint64_t)&v18, (uint64_t)v6);
    BOOL v4 = sub_1001D4E9C(a1, &v6);
    uint64_t v12 = &v6;
    sub_100130C0C((void ***)&v12);
    if (__p)
    {
      uint64_t v16 = __p;
      operator delete(__p);
    }

    if (v10)
    {
      uint64_t v11 = v10;
      operator delete(v10);
    }
  }

  return v4;
}

void sub_1001D4E40( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  if (__p)
  {
    a20 = (uint64_t)__p;
    operator delete(__p);
  }

  if (a13) {
    operator delete(a13);
  }
  _Unwind_Resume(a1);
}

BOOL sub_1001D4E9C(uint64_t a1, unsigned __int8 **a2)
{
  BOOL v4 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf.__r_.__value_.__l.__data_) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Setting config parameters:",  (uint8_t *)&buf,  2u);
  }

  uint64_t v5 = *a2;
  BOOL v6 = a2[1];
  if (*a2 == v6)
  {
    uint64_t v9 = (uint64_t)*a2;
  }

  else
  {
    do
    {
      uint64_t v7 = (os_log_s *)(id)qword_1007F9AA0;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        sub_10032AA2C(v5, &buf);
        uint64_t v8 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
           ? &buf
           : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
        *(_DWORD *)char v13 = 136315138;
        *(void *)&void v13[4] = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "\t%s", v13, 0xCu);
      }

      v5 += 32;
    }

    while (v5 != v6);
    uint64_t v9 = (uint64_t)*a2;
    uint64_t v5 = a2[1];
  }

  memset(&buf, 0, sizeof(buf));
  sub_1001DF8D4(&buf, v9, (uint64_t)v5, (uint64_t)&v5[-v9] >> 5);
  BOOL v10 = sub_10036937C(a1 + 40, (uint64_t *)&buf);
  *(void *)char v13 = &buf;
  sub_100130C0C((void ***)v13);
  if (!v10 && os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039AAD4();
  }
  return v10;
}

void sub_1001D5064( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

BOOL sub_1001D5090(uint64_t a1, _WORD *a2, int a3)
{
  BOOL v6 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67109376;
    *(_DWORD *)&uint8_t buf[4] = (_DWORD)a2;
    LOWORD(v23) = 1024;
    *(_DWORD *)((char *)&v23 + 2) = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "setRoseLeadingEdgeThresholds: %d, %d",  buf,  0xEu);
  }

  sub_10032B200(a2, a3, (uint64_t)buf);
  if (v24)
  {
    char v12 = 35;
    char v14 = 0LL;
    uint64_t v15 = 0LL;
    char v13 = 0LL;
    sub_1001309C0(&v13, *(const void **)buf, (uint64_t)v23, (size_t)v23 - *(void *)buf);
    v18[0] = 35;
    uint64_t v20 = 0LL;
    uint64_t v21 = 0LL;
    std::stringbuf::string_type __p = 0LL;
    sub_1001309C0(&__p, v13, (uint64_t)v14, v14 - (_BYTE *)v13);
    uint64_t v9 = 0LL;
    BOOL v10 = 0LL;
    uint64_t v11 = 0LL;
    uint64_t v16 = &v9;
    char v17 = 0;
    uint64_t v9 = (unsigned __int8 *)operator new(0x20uLL);
    BOOL v10 = v9;
    uint64_t v11 = v9 + 32;
    BOOL v10 = (unsigned __int8 *)sub_1001DFBF4((uint64_t)&v11, (uint64_t)v18, (uint64_t)buf, (uint64_t)v9);
    BOOL v7 = sub_1001D4E9C(a1, &v9);
    uint64_t v16 = &v9;
    sub_100130C0C((void ***)&v16);
    if (__p)
    {
      uint64_t v20 = __p;
      operator delete(__p);
    }

    if (v13)
    {
      char v14 = v13;
      operator delete(v13);
    }
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039AB00();
    }
    BOOL v7 = 0LL;
  }

  if (v24 && *(void *)buf)
  {
    BOOL v23 = *(const void **)buf;
    operator delete(*(void **)buf);
  }

  return v7;
}

void sub_1001D5278( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p, uint64_t a21)
{
  if (__p)
  {
    a21 = (uint64_t)__p;
    operator delete(__p);
  }

  if (a14) {
    operator delete(a14);
  }
  if (*(_BYTE *)(v21 - 72))
  {
    BOOL v23 = *(void **)(v21 - 96);
    if (v23)
    {
      *(void *)(v21 - 8_Block_object_dispose(va, 8) = v23;
      operator delete(v23);
    }
  }

  _Unwind_Resume(a1);
}

BOOL sub_1001D52F4(uint64_t a1, uint64_t a2)
{
  BOOL v4 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134217984;
    *(void *)uint64_t v18 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "setRoseAlishaURSKTTL: %llu", buf, 0xCu);
  }

  uint64_t v5 = operator new(8uLL);
  *uint64_t v5 = a2;
  buf[0] = 7;
  uint64_t v19 = 0LL;
  uint64_t v20 = 0LL;
  *(void *)&v18[4] = 0LL;
  sub_1001309C0(&v18[4], v5, (uint64_t)(v5 + 1), 8uLL);
  v13[0] = buf[0];
  uint64_t v15 = 0LL;
  uint64_t v16 = 0LL;
  std::stringbuf::string_type __p = 0LL;
  sub_1001309C0(&__p, *(const void **)&v18[4], v19, v19 - *(void *)&v18[4]);
  uint64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  BOOL v10 = 0LL;
  uint64_t v11 = &v8;
  char v12 = 0;
  uint64_t v8 = (unsigned __int8 *)operator new(0x20uLL);
  uint64_t v9 = v8;
  BOOL v10 = v8 + 32;
  uint64_t v9 = (unsigned __int8 *)sub_1001DFBF4((uint64_t)&v10, (uint64_t)v13, (uint64_t)buf, (uint64_t)v8);
  BOOL v6 = sub_1001D4E9C(a1, &v8);
  uint64_t v11 = &v8;
  sub_100130C0C((void ***)&v11);
  if (__p)
  {
    uint64_t v15 = __p;
    operator delete(__p);
  }

  if (*(void *)&v18[4])
  {
    uint64_t v19 = *(void *)&v18[4];
    operator delete(*(void **)&v18[4]);
  }

  operator delete(v5);
  return v6;
}

void sub_1001D5488( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, void *a20, uint64_t a21)
{
  if (__p)
  {
    a17 = (uint64_t)__p;
    operator delete(__p);
  }

  if (a20)
  {
    a21 = (uint64_t)a20;
    operator delete(a20);
  }

  operator delete(v21);
  _Unwind_Resume(a1);
}

void sub_1001D54EC()
{
}

void *sub_1001D54F4(void *a1, const void *a2, size_t __sz)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  if (__sz)
  {
    sub_1000242D4(a1, __sz);
    BOOL v6 = (char *)a1[1];
    memmove(v6, a2, __sz);
    a1[1] = &v6[__sz];
  }

  return a1;
}

void sub_1001D5558(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose(va, 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

BOOL sub_1001D5574(uint64_t a1, int a2)
{
  BOOL v4 = sub_100005150();
  unsigned __int16 v5 = sub_100355300((uint64_t)v4);
  if (v5 < 0x100u) {
    return 0LL;
  }
  sub_1001DF5B4((uint64_t)v12, v5, a2);
  buf[0] = v12[0];
  uint64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  std::stringbuf::string_type __p = 0LL;
  sub_1001309C0(&__p, v13, (uint64_t)v14, v14 - (_BYTE *)v13);
  uint64_t v9 = 0LL;
  BOOL v10 = 0LL;
  uint64_t v11 = 0LL;
  uint64_t v15 = &v9;
  char v16 = 0;
  uint64_t v9 = (unsigned __int8 *)operator new(0x20uLL);
  BOOL v10 = v9;
  uint64_t v11 = v9 + 32;
  BOOL v10 = (unsigned __int8 *)sub_1001DFBF4((uint64_t)&v11, (uint64_t)buf, (uint64_t)&v22, (uint64_t)v9);
  BOOL v6 = sub_1001D4E9C(a1, &v9);
  uint64_t v15 = &v9;
  sub_100130C0C((void ***)&v15);
  if (__p)
  {
    uint64_t v20 = __p;
    operator delete(__p);
  }

  BOOL v7 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67109376;
    BOOL v18 = v6;
    LOWORD(__p) = 1024;
    *(_DWORD *)((char *)&__p + 2) = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "setRoseAlishaTestMode. Success: %d. Enable: %d",  buf,  0xEu);
  }

  if (v13)
  {
    char v14 = v13;
    operator delete(v13);
  }

  return v6;
}

void sub_1001D5704( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p, uint64_t a21)
{
  if (__p)
  {
    a21 = (uint64_t)__p;
    operator delete(__p);
  }

  if (a14) {
    operator delete(a14);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1001D5760()
{
  unsigned __int8 v0 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "setRoseCoexMode called", buf, 2u);
  }

  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  unsigned int v2 = [v1 BOOLForKey:@"DisableCoex"];

  unint64_t v3 = (os_log_s *)qword_1007F9AA0;
  BOOL v4 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      __int16 v9 = 0;
      unsigned __int16 v5 = "Coex disabled using default writes: DisableCoex";
      BOOL v6 = (uint8_t *)&v9;
LABEL_8:
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, v5, v6, 2u);
    }
  }

  else if (v4)
  {
    __int16 v8 = 0;
    unsigned __int16 v5 = "Nothing to do on non-watchOS platforms";
    BOOL v6 = (uint8_t *)&v8;
    goto LABEL_8;
  }

  return 1LL;
}

void sub_1001D5854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001D5864(uint64_t a1)
{
  unsigned int v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "getRoseAlishaTestMode called", buf, 2u);
  }

  unint64_t v3 = sub_100005150();
  unsigned __int16 v4 = sub_100355300((uint64_t)v3);
  unsigned __int8 v5 = v4;
  if (v4 >= 0x100u)
  {
    __int16 v8 = operator new(1uLL);
    *__int16 v8 = v5;
    uint64_t v25 = 0LL;
    uint64_t v26 = 0LL;
    std::stringbuf::string_type __p = 0LL;
    sub_1001309C0(&__p, v8, (uint64_t)(v8 + 1), 1uLL);
    operator delete(v8);
    sub_1003691A8(a1 + 40, (char **)&__p, 2000, (uint64_t)buf);
    if (v23)
    {
      sub_100357354(buf, (uint64_t)&v19);
      int v9 = v19;
      if (v19)
      {
        BOOL v10 = (os_log_s *)(id)qword_1007F9AA0;
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        {
          sub_10032B2C8(v9, v18);
          sub_10039AB84();
        }

LABEL_10:
        int v6 = 0;
        int v7 = 0;
      }

      else
      {
        for (uint64_t i = (unsigned __int8 *)v20[0]; ; i += 32)
        {
          if (i == (unsigned __int8 *)v20[1])
          {
            if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
              sub_10039AB58();
            }
            goto LABEL_10;
          }

          if (*i == v5) {
            break;
          }
        }

        unsigned __int16 v13 = sub_10032ACB4((uint64_t)i, 0);
        if (v13 < 0x100u)
        {
          char v16 = "optTestModeEnabled.has_value()";
          int v17 = 1410;
          goto LABEL_38;
        }

        if (v13 != 1)
        {
          if (!(_BYTE)v13)
          {
            char v14 = (os_log_s *)qword_1007F9AA0;
            if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)BOOL v18 = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "getRoseAlishaTestMode: disabled",  v18,  2u);
            }

            int v6 = 0;
            goto LABEL_36;
          }

          char v16 = "false";
          int v17 = 1422;
LABEL_38:
          __assert_rtn("getRoseAlishaTestMode", "PRRose.mm", v17, v16);
        }

        uint64_t v15 = (os_log_s *)qword_1007F9AA0;
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)BOOL v18 = 0;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "getRoseAlishaTestMode: enabled", v18, 2u);
        }

        int v6 = 1;
LABEL_36:
        int v7 = 1;
      }

      uint64_t v27 = (void **)v20;
      sub_100130C0C(&v27);
    }

    else
    {
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_10039AB2C();
      }
      int v6 = 0;
      int v7 = 0;
    }

    if (v23 && *(void *)buf)
    {
      uint64_t v22 = *(void **)buf;
      operator delete(*(void **)buf);
    }

    if (__p)
    {
      uint64_t v25 = __p;
      operator delete(__p);
    }
  }

  else
  {
    int v6 = 0;
    int v7 = 0;
  }

  return v6 | (v7 << 8);
}

void sub_1001D5B54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t *a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, char a20, void *a21, uint64_t a22)
{
  char v23 = v22;

  a9 = &a14;
  sub_100130C0C((void ***)&a9);
  if (a20 && __p)
  {
    a18 = (uint64_t)__p;
    operator delete(__p);
  }

  if (a21)
  {
    a22 = (uint64_t)a21;
    operator delete(a21);
  }

  _Unwind_Resume(a1);
}

void sub_1001D5BD0(uint64_t a1)
{
  unsigned int v2 = operator new(2uLL);
  *unsigned int v2 = 11558;
  uint64_t v28 = 0LL;
  uint64_t v29 = 0LL;
  uint64_t v27 = 0LL;
  sub_1001309C0(&v27, v2, (uint64_t)(v2 + 1), 2uLL);
  operator delete(v2);
  sub_1003691A8(a1 + 40, (char **)&v27, 2000, (uint64_t)__p);
  if (v26)
  {
    sub_100357354(__p, (uint64_t)&v22);
    int v3 = v22;
    if (v22)
    {
      unsigned __int16 v4 = (os_log_s *)(id)qword_1007F9AA0;
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        sub_10032B2C8(v3, &buf);
        sub_10039AC00();
      }

      goto LABEL_27;
    }

    unsigned __int8 v5 = v23;
    int v6 = v24;
    if (v23 == v24)
    {
LABEL_27:
      uint64_t v30 = &v23;
      sub_100130C0C((void ***)&v30);
      goto LABEL_28;
    }

    while (1)
    {
      int v7 = *v5;
      if (v7 != 38) {
        goto LABEL_18;
      }
      unsigned __int16 v8 = sub_10032ACB4((uint64_t)v5, 0);
      unsigned __int16 v9 = sub_10032ACB4((uint64_t)v5, 1);
      uint64_t v10 = qword_1007F9AA0;
      BOOL v11 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT);
      if (v8 < 0x100u || v9 < 0x100u)
      {
        if (v11)
        {
          LOWORD(buf) = 0;
          char v12 = (os_log_s *)v10;
          unsigned __int16 v13 = "UWB ePA mode: N/A, eLNA mode: N/A";
          uint32_t v14 = 2;
          goto LABEL_16;
        }
      }

      else if (v11)
      {
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v8;
        __int16 v32 = 1024;
        int v33 = v9;
        char v12 = (os_log_s *)v10;
        unsigned __int16 v13 = "UWB ePA mode: 0x%02x, eLNA mode: 0x%02x";
        uint32_t v14 = 14;
LABEL_16:
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&buf, v14);
      }

      int v7 = *v5;
LABEL_18:
      if (v7 == 45)
      {
        unsigned __int16 v15 = sub_10032ACB4((uint64_t)v5, 0);
        unsigned __int16 v16 = sub_10032ACB4((uint64_t)v5, 1);
        uint64_t v17 = qword_1007F9AA0;
        BOOL v18 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT);
        if (v15 < 0x100u || v16 < 0x100u)
        {
          if (v18)
          {
            LOWORD(buf) = 0;
            unsigned __int16 v19 = (os_log_s *)v17;
            uint64_t v20 = "NB ePA mode: N/A, eLNA mode: N/A";
            uint32_t v21 = 2;
            goto LABEL_25;
          }
        }

        else if (v18)
        {
          LODWORD(buf) = 67109376;
          HIDWORD(buf) = v15;
          __int16 v32 = 1024;
          int v33 = v16;
          unsigned __int16 v19 = (os_log_s *)v17;
          uint64_t v20 = "NB ePA mode: 0x%02x, eLNA mode: 0x%02x";
          uint32_t v21 = 14;
LABEL_25:
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, v20, (uint8_t *)&buf, v21);
        }
      }

      v5 += 32;
      if (v5 == v6) {
        goto LABEL_27;
      }
    }
  }

  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039ABD4();
  }
LABEL_28:
  if (v26 && __p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }

  if (v27)
  {
    uint64_t v28 = v27;
    operator delete(v27);
  }

void sub_1001D5EF8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, char a18, void *a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t *a23)
{
  a23 = &a12;
  sub_100130C0C((void ***)&a23);
  if (a18 && __p)
  {
    a16 = (uint64_t)__p;
    operator delete(__p);
  }

  if (a19)
  {
    a20 = (uint64_t)a19;
    operator delete(a19);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1001D5F7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 3;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

void sub_1001D5FB4(uint64_t a1)
{
  uint64_t v2 = sub_1002B5554(@"AOPSensorFusionDataForwarding", 0LL);
  unsigned int v3 = sub_1002B5554(@"UseNIPathForSuspendOnStationary", 0LL);
  uint64_t v4 = 2LL;
  if (!v3) {
    uint64_t v4 = 0LL;
  }
  uint64_t v5 = v4 | v2 | (4 * (sub_1002B53D8(@"AopSFStationaryTimeoutIn100msUnits", (id)0x32) & 0x7Fu));
  uint64_t v6 = sub_1002B53D8(@"AopSFIOReportIntervalIn10msUnits", (id)0xA) << 9;
  uint64_t v7 = v5 | v6 | (sub_1002B53D8(@"AopSFCloserThresholddBm", (id)0xFFFFFFA8LL) << 17);
  uint64_t v8 = sub_1002B53D8(@"AopSFFurtherThresholddBm", (id)0xFFFFFFA3LL);
  uint64_t v9 = sub_1002B53D8(@"AopSFTxPowerdBm", (id)0x7F);
  unint64_t v10 = (unint64_t)sub_1002B53D8(@"AopSFSimulateDisplacement", 0LL) & 3;
  unint64_t v11 = (unint64_t)sub_1002B53D8(@"AopSFUseStaticIOClassifier", 0LL) & 1;
  uint64_t v17 = 0LL;
  unint64_t v18 = v7 | (v8 << 25) | (v9 << 33) | (v10 << 41) | (v11 << 43) | (((unint64_t)sub_1002B53D8( @"AopSFStaticIOClassifierEpsilonInMM",  (id)0xA) & 0x1FF) << 44);
  std::stringbuf::string_type __p = 0LL;
  unsigned __int16 v16 = 0LL;
  sub_100030B3C(&__p, &v18, (uint64_t)&v19, 8uLL);
  BOOL v12 = sub_10031FBD4(a1 + 1248, 0xDBu, (uint64_t)&__p);
  unsigned __int16 v13 = (os_log_s *)qword_1007F9AA0;
  if (v12)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      v14[0] = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Wrote the AOP UserDefaults property",  (uint8_t *)v14,  2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR))
  {
    sub_10039AC50();
  }

  if (__p)
  {
    unsigned __int16 v16 = __p;
    operator delete(__p);
  }

void sub_1001D6180( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001D619C(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: boot rose", buf, 2u);
  }

  if (!sub_1001D3830(a1))
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039AD00();
    }
    return 0LL;
  }

  if ((sub_10036730C(a1 + 40, *(_BYTE *)(a1 + 1336), *(_BYTE *)(a1 + 1337)) & 1) == 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039ACD4();
    }
    return 0LL;
  }

  if ((sub_10036A5A0() & 1) == 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039ACA8();
    }
    return 0LL;
  }

  uint64_t v8 = sub_100369D0C(a1 + 40, 1LL, (uint64_t)buf, v3, v4, v5, v6, v7);
  if ((v8 & 1) == 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039AC7C();
    }
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_1001D6360;
    v12[3] = &unk_1007B5898;
    __int128 v13 = *(_OWORD *)buf;
    int v14 = v16;
    AnalyticsSendEventLazy(@"com.apple.nearbyd.RoseBootFailure", v12);
  }

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_1001D65A4;
  v10[3] = &unk_1007B58B8;
  char v11 = v8;
  AnalyticsSendEventLazy(@"com.apple.nearbyd.RoseBootResult", v10);
  return v8;
}

id sub_1001D6360(uint64_t a1)
{
  v12[0] = @"BootReturnValue";
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32)));
  v13[0] = v2;
  v12[1] = @"DriverState";
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 36)));
  v13[1] = v3;
  v12[2] = @"BootStatusRegister";
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 40)));
  v13[2] = v4;
  v12[3] = @"CalibrationReturnValue";
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 44)));
  v13[3] = v5;
  void v12[4] = @"SendCalibrationTimeout";
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned __int8 *)(a1 + 48)));
  void v13[4] = v6;
  void v12[5] = @"UWBInitDoneTimeout";
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned __int8 *)(a1 + 49)));
  v13[5] = v7;
  v12[6] = @"SetCalDataPushedFalseFailure";
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned __int8 *)(a1 + 50)));
  v13[6] = v8;
  v12[7] = @"SetCalDataPushedTrueFailure";
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned __int8 *)(a1 + 51)));
  v13[7] = v9;
  unint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v13,  v12,  8LL));

  return v10;
}

void sub_1001D6538(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001D65A4(uint64_t a1)
{
  uint64_t v4 = @"BootSuccess";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned __int8 *)(a1 + 32)));
  uint64_t v5 = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));

  return v2;
}

void sub_1001D6644(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001D665C(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: Resetting chip.", buf, 2u);
  }

  int v3 = *(_DWORD *)(a1 + 1512);
  if (v3 >= 6)
  {
    v35[0] = _NSConcreteStackBlock;
    v35[1] = 3221225472LL;
    v35[2] = sub_1001D69CC;
    v35[3] = &unk_1007B5580;
    v35[4] = a1;
    AnalyticsSendEventLazy(@"com.apple.nearbyd.RoseBootFailureBreakdown", v35);
    uint64_t v25 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039B208(v25, v26, v27, v28, v29, v30, v31, v32);
    }
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039B1DC();
    }
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039B178();
    }
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039B114();
    }
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039B0B0();
    }
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039B04C();
    }
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039AFE8();
    }
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039AF84();
    }
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039AF20();
    }
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039AEBC();
    }
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039AE58();
    }
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039ADF4();
    }
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039AD90();
    }
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039AD2C();
    }
    abort_report_np("fResetCounter exceeded kMaxChipResets (%d)", 5);
LABEL_39:
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039B2A0();
    }
    abort_report_np("Unable to power off Rose");
    goto LABEL_42;
  }

  *(_DWORD *)(a1 + 1512) = v3 + 1;
  v34[0] = _NSConcreteStackBlock;
  v34[1] = 3221225472LL;
  v34[2] = sub_1001D6CFC;
  v34[3] = &unk_1007B5580;
  v34[4] = a1;
  AnalyticsSendEventLazy(@"com.apple.nearbyd.RoseExternalChipReset", v34);
  uint64_t v4 = a1 + 40;
  if ((sub_10036A2D8(v4, v5, v6, v7, v8, v9, v10, v11) & 1) != 0) {
    return 1LL;
  }
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039B2CC();
  }
  if (!sub_10036BE8C(v4, 0LL, v12, v13, v14, v15, v16, v17)) {
    goto LABEL_39;
  }
  if (sub_10036BE8C(v4, 1LL, v18, v19, v20, v21, v22, v23)) {
    return 1LL;
  }
LABEL_42:
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039B274();
  }
  uint64_t v33 = abort_report_np("Unable to power on Rose");
  return (uint64_t)sub_1001D69CC(v33);
}

id sub_1001D69CC(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 **)(a1 + 32);
  v16[0] = @"PushFWFailure";
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[1516]));
  v17[0] = v15;
  v16[1] = @"PingFWFailure";
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[1517]));
  v17[1] = v14;
  v16[2] = @"PushCalFailure";
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[1518]));
  v17[2] = v13;
  v16[3] = @"ExtClockSettingFailure";
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[1519]));
  v17[3] = v2;
  void v16[4] = @"ConfigureFWSleepFailure";
  int v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[1520]));
  v17[4] = v3;
  v16[5] = @"DisableFWLogsFailure";
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[1521]));
  void v17[5] = v4;
  v16[6] = @"FWTimeSyncEnableFailure";
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[1522]));
  void v17[6] = v5;
  v16[7] = @"AOPActivateTimeSyncEnableFailure";
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[1523]));
  v17[7] = v6;
  v16[8] = @"ApplyConfigParamsCIRVersionFailure";
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[1524]));
  v17[8] = v7;
  v16[9] = @"ApplyConfigParamsCoExStatusFailure";
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[1525]));
  v17[9] = v8;
  v16[10] = @"ApplyConfigParamsSendPowerTableFailure";
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[1526]));
  v17[10] = v9;
  v16[11] = @"ApplyConfigParamsSetMACAddressFailure";
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[1527]));
  v17[11] = v10;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v17,  v16,  12LL));

  return v11;
}

void sub_1001D6C54( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

id sub_1001D6CFC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v5 = @"ResetCounter";
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(v1 + 1512)));
  uint64_t v6 = v2;
  int v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v6,  &v5,  1LL));

  return v3;
}

void sub_1001D6D9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001D6DB4(uint64_t a1)
{
  if ((sub_10036A5A0() & 1) != 0)
  {
    uint64_t v9 = (unsigned int *)(a1 + 1240);
    unsigned int v10 = atomic_load((unsigned int *)(a1 + 1240));
    if (v10 == 4 || (unsigned int v11 = atomic_load(v9), v11 == 8))
    {
      uint64_t result = sub_10036A1B4(a1 + 40, v2, v3, v4, v5, v6, v7, v8);
      if (result) {
        return result;
      }
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_10039B2F8();
      }
    }

    else if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR))
    {
      sub_10039B324(v9);
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR))
  {
    sub_10039B3A4();
  }

  return 0LL;
}

uint64_t sub_1001D6E74( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = (unsigned int *)(a1 + 1240);
  unsigned int v9 = atomic_load((unsigned int *)(a1 + 1240));
  if (v9 == 4) {
    return sub_10036A218(a1 + 40, a2, a3, a4, a5, a6, a7, a8);
  }
  unsigned int v10 = atomic_load(v8);
  if (v10 == 8) {
    return sub_10036A218(a1 + 40, a2, a3, a4, a5, a6, a7, a8);
  }
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039B3D0(v8);
  }
  return 0LL;
}

void sub_1001D6EE4(uint64_t a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1001D6F5C;
  v4[3] = &unk_1007B43E0;
  id v5 = a2;
  uint64_t v6 = a1;
  id v3 = v5;
  sub_1001CFF84(a1, v4);
}

void sub_1001D6F5C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(void *)(a1 + 40);
  if (*(void *)v8)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039B4D0();
    }
  }

  else
  {
    *(void *)uint64_t v8 = 0LL;
    unsigned int v10 = (unsigned int *)(v8 + 1240);
    unsigned int v11 = atomic_load((unsigned int *)(v8 + 1240));
    if (v11 == 5 || (unsigned int v12 = atomic_load(v10), v12 == 9))
    {
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_10039B450((unsigned int *)(v8 + 1240));
      }
      uint64_t v13 = *(void *)(a1 + 32);
      char v32 = 0;
      char v33 = 0;
      (*(void (**)(void))(v13 + 16))();
    }

    else
    {
      unsigned int v14 = atomic_load(v10);
      if (v14 == 4 || (unsigned int v15 = atomic_load(v10), v15 == 8))
      {
        uint64_t v16 = sub_10036A218(v8 + 40, (uint64_t)v36, a3, a4, a5, a6, a7, a8);
        uint64_t v17 = (os_log_s *)qword_1007F9AA0;
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
        {
          unsigned int v19 = atomic_load(v10);
          unsigned int v20 = v19 - 1;
          if (v20 > 0xA) {
            uint64_t v21 = "UnknownToHost";
          }
          else {
            uint64_t v21 = off_1007B6160[v20];
          }
          *(_DWORD *)uint64_t buf = 136315138;
          BOOL v35 = v21;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Called getChipInfoAsync in compatible terminal state: [%s]",  buf,  0xCu);
        }

        uint64_t v26 = *(void *)(a1 + 32);
        uint64_t v30 = v37;
        __int128 v29 = *(_OWORD *)v36;
        char v31 = 1;
        (*(void (**)(uint64_t, uint64_t, __int128 *, uint64_t))(v26 + 16))(v26, v16, &v29, v18);
      }

      else
      {
        uint64_t v22 = (os_log_s *)qword_1007F9AA0;
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
        {
          unsigned int v23 = atomic_load(v10);
          unsigned int v24 = v23 - 1;
          if (v24 > 0xA) {
            uint64_t v25 = "UnknownToHost";
          }
          else {
            uint64_t v25 = off_1007B6160[v24];
          }
          *(_DWORD *)uint64_t v36 = 136315138;
          *(void *)&v36[4] = v25;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "Called getChipInfoAsync in transitory state: [%s]. Caching handler for later execution",  v36,  0xCu);
        }

        id v27 = objc_retainBlock(*(id *)(a1 + 32));
        uint64_t v28 = *(void **)v8;
        *(void *)uint64_t v8 = v27;
      }
    }
  }

uint64_t sub_1001D71A0(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: getDeepSleepStateInternal", buf, 2u);
  }

  char v14 = sub_100154F9C(1LL);
  *(void *)uint64_t buf = 0LL;
  unsigned int v12 = 0LL;
  uint64_t v13 = 0LL;
  sub_100030B3C(buf, &v14, (uint64_t)v15, 1uLL);
  std::stringbuf::string_type __p = 0LL;
  unsigned int v9 = 0LL;
  uint64_t v10 = 0LL;
  if (!sub_10031F840(a1 + 1248, 0x2Du, (uint64_t)buf, (unint64_t *)&__p))
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039B564();
    }
    uint64_t v7 = "PRRose: sending deep sleep state query to RoseSupervisor failed";
LABEL_24:
    abort_report_np(v7);
    __break(1u);
  }

  if (v9 - (_BYTE *)__p != 1)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039B4FC();
    }
    uint64_t v7 = "PRRose: RoseSupervisor returned unexpected size for deep sleep state";
    goto LABEL_24;
  }

  uint64_t v3 = *(char *)__p;
  uint64_t v4 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    else {
      id v5 = off_1007B5E58[v3];
    }
    *(_DWORD *)unsigned int v15 = 136315138;
    uint64_t v16 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "PRRose: deep sleep state %s", v15, 0xCu);
  }

  if (__p)
  {
    unsigned int v9 = __p;
    operator delete(__p);
  }

  if (*(void *)buf)
  {
    unsigned int v12 = *(void **)buf;
    operator delete(*(void **)buf);
  }

  else {
    return 0LL;
  }
}

void sub_1001D738C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  if (a13) {
    operator delete(a13);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001D73C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 6;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

id sub_1001D73F8(uint64_t a1)
{
  v10[0] = @"LogCollectionType";
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 40)));
  v11[0] = v2;
  v10[1] = @"LogCollectionReason";
  char v3 = objc_alloc(&OBJC_CLASS___NSString);
  uint64_t v4 = *(uint64_t **)(a1 + 32);
  id v5 = -[NSString initWithCString:encoding:](v3, "initWithCString:encoding:", v4, 4LL);
  v11[1] = v5;
  v10[2] = @"Result";
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 44)));
  v11[2] = v6;
  v10[3] = @"PromotedToFatal";
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned __int8 *)(a1 + 48)));
  void v11[3] = v7;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v11,  v10,  4LL));

  return v8;
}

void sub_1001D7534(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001D7570(uint64_t a1, uint64_t a2, const std::string *a3)
{
  uint64_t v6 = (os_log_s *)(id)qword_1007F9AA0;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    sub_10035F1D8(a2, &__p);
    uint64_t v7 = v20 >= 0 ? &__p : (__int128 *)__p;
    uint64_t v8 = (a3->__r_.__value_.__s.__size_ & 0x80u) == 0 ? a3 : (const std::string *)a3->__r_.__value_.__r.__words[0];
    *(_DWORD *)uint64_t buf = 136315394;
    id v27 = v7;
    __int16 v28 = 2080;
    __int128 v29 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "PRRose::triggerLogCollection: type: %s, reason: %s",  buf,  0x16u);
    if (SHIBYTE(v20) < 0) {
      operator delete((void *)__p);
    }
  }

  unint64_t v9 = sub_1001D416C(a1);
  char v11 = v10;
  unsigned int v12 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    if (v11) {
      unint64_t v13 = v9;
    }
    else {
      unint64_t v13 = 0LL;
    }
    LODWORD(__p) = 134217984;
    *(void *)((char *)&__p + 4) = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Last known Rose MAC Timestamp: %llu",  (uint8_t *)&__p,  0xCu);
  }

  if ((sub_10036A5A0() & 1) != 0)
  {
    if ((a2 & 0xFFFFFFFE) == 2)
    {
      uint64_t v14 = sub_1001D2610(a1, a2, a3);
    }

    else
    {
      *(void *)&__int128 __p = 0LL;
      *((void *)&__p + 1) = &__p;
      uint64_t v20 = 0x4812000000LL;
      uint64_t v21 = sub_1001D7830;
      uint64_t v22 = sub_1001D784C;
      uint64_t v23 = 0LL;
      if ((char)a3->__r_.__value_.__s.__size_ < 0)
      {
        sub_1000063A8(&v24, a3->__r_.__value_.__l.__data_, a3->__r_.__value_.__l.__size_);
      }

      else
      {
        __int128 v24 = *(_OWORD *)&a3->__r_.__value_.__l.__data_;
        std::string::size_type cap = a3->__r_.__value_.__l.__cap_;
      }

      unsigned int v15 = *(dispatch_queue_s **)(a1 + 8);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1001D7860;
      block[3] = &unk_1007B5900;
      int v18 = a2;
      void block[4] = &__p;
      void block[5] = a1;
      dispatch_async(v15, block);
      _Block_object_dispose(&__p, 8);
      if (SHIBYTE(cap) < 0) {
        operator delete((void *)v24);
      }
      uint64_t v14 = 1LL;
    }

    if (!sub_1001D3E0C(a1) && os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039B590();
    }
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039B5BC();
    }
    return 0LL;
  }

  return v14;
}

void sub_1001D7818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__n128 sub_1001D7830(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a1[3] = result;
  a2[3].n128_u64[1] = 0LL;
  a2[4].n128_u64[0] = 0LL;
  a2[3].n128_u64[0] = 0LL;
  return result;
}

void sub_1001D784C(uint64_t a1)
{
}

void sub_1001D7860(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = (unsigned int *)(v2 + 1240);
  unsigned int v4 = atomic_load((unsigned int *)(v2 + 1240));
  if (v4 == 4 || (unsigned int v5 = atomic_load(v3), v5 == 8) || (v6 = atomic_load(v3), v6 == 11))
  {
    if ((sub_1001D2610( v2,  *(unsigned int *)(a1 + 48),  (const std::string *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 48LL)) & 1) == 0 && os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR))
    {
      sub_10039B5E8();
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR))
  {
    sub_10039B614(v3);
  }

CFDataRef sub_1001D790C(uint64_t a1)
{
  if ((sub_10036A5A0() & 1) != 0)
  {
    uint64_t v2 = (unsigned int *)(a1 + 1240);
    unsigned int v3 = atomic_load((unsigned int *)(a1 + 1240));
    if (v3 == 4 || (unsigned int v4 = atomic_load(v2), v4 == 8))
    {
      CFDataRef result = sub_10036A5B4(a1 + 40);
      if (result) {
        return result;
      }
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_10039B694();
      }
    }

    else if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR))
    {
      sub_10039B6C0(v2);
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR))
  {
    sub_10039B740();
  }

  return 0LL;
}

uint64_t sub_1001D79CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 56);
  __int128 v4 = *(_OWORD *)(a1 + 40);
  char v6 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, __int128 *))(v1 + 16))(v1, v2, &v4);
}

id sub_1001D7A14(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: _startReceivingHIDEvents", v4, 2u);
  }

  return sub_10032026C(a1 + 1248);
}

uint64_t sub_1001D7A80( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = *(void *)(a1 + 40);
  __int128 v8 = *(_OWORD *)(a1 + 112);
  __int128 v20 = *(_OWORD *)(a1 + 128);
  __int128 v19 = v8;
  __int128 v9 = *(_OWORD *)(a1 + 80);
  __int128 v18 = *(_OWORD *)(a1 + 96);
  __int128 v17 = v9;
  *(_OWORD *)&v23[11] = *(_OWORD *)(a1 + 187);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)(a1 + 176);
  __int128 v10 = *(_OWORD *)(a1 + 144);
  __int128 v22 = *(_OWORD *)(a1 + 160);
  __int128 v21 = v10;
  __int128 v11 = *(_OWORD *)(a1 + 64);
  __int128 v15 = *(_OWORD *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 32);
  __int128 v16 = v11;
  return (*(uint64_t (**)(void, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 + 1280) + 16LL))( *(void *)(v12 + 1280),  &v14,  a3,  a4,  a5,  a6,  a7,  a8);
}

const char *sub_1001D7B24(uint64_t a1, int a2)
{
  else {
    return off_1007B6108[a2 - 1];
  }
}

void sub_1001D7B4C(uint64_t a1, unsigned int a2, __int128 *a3)
{
  if (a2)
  {
    uint64_t v5 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v6 = atomic_load((unsigned int *)(a1 + 1240));
      unsigned int v7 = v6 - 1;
      if (v7 > 0xA) {
        __int128 v8 = "UnknownToHost";
      }
      else {
        __int128 v8 = off_1007B6160[v7];
      }
      if (a2 > 0xB) {
        uint64_t v30 = "HostStartup";
      }
      else {
        uint64_t v30 = off_1007B6108[a2 - 1];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v8;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v30;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "PRRose::setStateFromUnknownToHost ignoring unexpected event while in state: %s, event: %s",  (uint8_t *)&buf,  0x16u);
    }

    return;
  }

  sub_1001D7A14(a1);
  if (!sub_1001D3760(a1))
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039B9D8();
    }
    abort_report_np("PRRose::setStateFromUnknownToHost failed to assert UWB comms ownership");
    goto LABEL_135;
  }

  if (sub_1001D3C74((std::mutex *)a1))
  {
    BOOL v60 = 0;
    char v10 = sub_10036BF60(a1 + 40, &v60);
    if (v60) {
      char v18 = v10;
    }
    else {
      char v18 = 0;
    }
    if ((v18 & 1) == 0)
    {
      __int128 v19 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf.__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "Rose powered off or unable to read the power state. Powering it on",  (uint8_t *)&buf,  2u);
      }

      if (!sub_10036BE8C(a1 + 40, 1LL, v20, v21, v22, v23, v24, v25))
      {
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
          sub_10039B954();
        }
        abort_report_np("Unable to power on R1");
        goto LABEL_135;
      }
    }

    int v26 = sub_10036A5AC(a1 + 40, v11, v12, v13, v14, v15, v16, v17);
    id v27 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      else {
        __int16 v28 = off_1007B60E8[v26 - 1];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v28;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "PRRose: Firmware State: %s",  (uint8_t *)&buf,  0xCu);
    }

    if (v26 == 1)
    {
      char v31 = sub_100005150();
      if (sub_100355268((uint64_t)v31))
      {
        switch(sub_1001D71A0(a1))
        {
          case 0u:
            if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
              sub_10039B7F0();
            }
            abort_report_np("failed to get deep sleep state during startup");
            goto LABEL_135;
          case 1u:
            char v32 = (os_log_s *)qword_1007F9AA0;
            if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
            {
              LOWORD(buf.__r_.__value_.__l.__data_) = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "PRRose: not in deep sleep, proceeding",  (uint8_t *)&buf,  2u);
            }

            goto LABEL_67;
          case 2u:
            uint64_t v37 = (os_log_s *)qword_1007F9AA0;
            if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
            {
              LOWORD(buf.__r_.__value_.__l.__data_) = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "PRRose: requesting deep sleep exit before proceeding",  (uint8_t *)&buf,  2u);
            }

            if ((sub_1001D30EC(a1, 0) & 1) != 0) {
              goto LABEL_67;
            }
            sub_1001D665C(a1);
            if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
              sub_10039B81C();
            }
            break;
          case 3u:
            int v38 = (os_log_s *)qword_1007F9AA0;
            if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
            {
              LOWORD(buf.__r_.__value_.__l.__data_) = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "PRRose: waiting for deep sleep exit to complete before proceeding",  (uint8_t *)&buf,  2u);
            }

            if ((sub_1001DC968(a1, 0) & 1) != 0) {
              goto LABEL_67;
            }
            sub_1001D665C(a1);
            if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
              sub_10039B81C();
            }
            break;
          default:
            goto LABEL_67;
        }

        abort_report_np("failed to exit deep sleep during startup");
        goto LABEL_135;
      }

void sub_1001D8584( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, std::mutex *a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, uint64_t a30, void *__p, uint64_t a32, int a33, __int16 a34, char a35, char a36)
{
  if (a36 < 0) {
    operator delete(__p);
  }
  if (a18) {
    std::mutex::unlock(a17);
  }
  int v38 = *(void **)(v36 - 112);
  if (v38)
  {
    *(void *)(v36 - 104) = v38;
    operator delete(v38);
  }

  _Unwind_Resume(exception_object);
}

void sub_1001D864C(uint64_t a1, int a2, __int128 *a3)
{
  switch(a2)
  {
    case 0:
      uint64_t v5 = qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        unsigned int v6 = "PRRose, already started, ignoring HostStartup";
        goto LABEL_11;
      }

      break;
    case 1:
      atomic_store(2u, (unsigned int *)(a1 + 1240));
      v30[0] = _NSConcreteStackBlock;
      v30[1] = 3221225472LL;
      v30[2] = sub_1001DCECC;
      v30[3] = &unk_1007A2398;
      uint8_t v30[4] = a1;
      sub_1001CFF84(a1, v30);
      if ((sub_1001D619C(a1) & 1) != 0)
      {
        uint64_t v11 = 2LL;
      }

      else
      {
        ++*(_BYTE *)(a1 + 1516);
        uint64_t v11 = 3LL;
      }

      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(__p, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        *(_OWORD *)__int128 __p = *a3;
        uint64_t v29 = *((void *)a3 + 2);
      }

      sub_1001D0044(a1, v11, __p);
      if (SHIBYTE(v29) < 0)
      {
        uint64_t v17 = __p[0];
        goto LABEL_31;
      }

      break;
    case 6:
      atomic_store(6u, (unsigned int *)(a1 + 1240));
      v27[0] = _NSConcreteStackBlock;
      v27[1] = 3221225472LL;
      v27[2] = sub_1001DCF00;
      v27[3] = &unk_1007A2398;
      v27[4] = a1;
      sub_1001CFF84(a1, v27);
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(&__dst, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        __int128 __dst = *a3;
        uint64_t v26 = *((void *)a3 + 2);
      }

      sub_1001D0044(a1, 6LL, &__dst);
      if (SHIBYTE(v26) < 0)
      {
        uint64_t v17 = (void *)__dst;
        goto LABEL_31;
      }

      break;
    case 7:
      sub_1001CEC2C(a1);
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(&v23, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        __int128 v23 = *a3;
        uint64_t v24 = *((void *)a3 + 2);
      }

      sub_1001D0044(a1, 1LL, &v23);
      if (SHIBYTE(v24) < 0)
      {
        uint64_t v17 = (void *)v23;
LABEL_31:
        operator delete(v17);
      }

      break;
    case 8:
      uint64_t v7 = qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v8 = atomic_load((unsigned int *)(a1 + 1240));
        unsigned int v9 = v8 - 1;
        if (v9 > 0xA) {
          char v10 = "UnknownToHost";
        }
        else {
          char v10 = off_1007B6160[v9];
        }
        *(_DWORD *)std::string buf = 136315138;
        char v32 = v10;
        unsigned int v6 = "PRRose, regulatory,configuration update ignored during %s";
        goto LABEL_36;
      }

      break;
    case 10:
      uint64_t v5 = qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        unsigned int v6 = "PRRose, already started, ignoring PowerOn";
LABEL_11:
        uint64_t v12 = (os_log_s *)v5;
        uint32_t v13 = 2;
        goto LABEL_37;
      }

      break;
    case 11:
      uint64_t v7 = qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v14 = atomic_load((unsigned int *)(a1 + 1240));
        unsigned int v15 = v14 - 1;
        if (v15 > 0xA) {
          uint64_t v16 = "UnknownToHost";
        }
        else {
          uint64_t v16 = off_1007B6160[v15];
        }
        *(_DWORD *)std::string buf = 136315138;
        char v32 = v16;
        unsigned int v6 = "PRRose, LPEM enable event ignored during %s";
LABEL_36:
        uint64_t v12 = (os_log_s *)v7;
        uint32_t v13 = 12;
LABEL_37:
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v6, buf, v13);
      }

      break;
    default:
      BOOL v19 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR);
      if (v19) {
        sub_10039BA04(a1);
      }
      int v20 = atomic_load((unsigned int *)(a1 + 1240));
      uint64_t v21 = sub_1001CFE4C(v19, v20);
      uint64_t v22 = sub_1001D7B24((uint64_t)v21, a2);
      abort_report_np("PRRose unexpected event while in state: %s, event: %s", v21, v22);
      __break(1u);
      break;
  }

void sub_1001D8A10( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, void *a29, uint64_t a30, int a31, __int16 a32, char a33, char a34)
{
  if (a34 < 0) {
    operator delete(a29);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001D8A60(uint64_t a1, int a2, uint64_t a3)
{
  switch(a2)
  {
    case 0:
      uint64_t v5 = qword_1007F9AA0;
      if (!os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT)) {
        return;
      }
      *(_WORD *)v191 = 0;
      unsigned int v6 = "PRRose, already started, ignoring HostStartup";
      uint64_t v7 = (os_log_s *)v5;
      uint32_t v8 = 2;
      goto LABEL_71;
    case 2:
      sub_1001D5FB4(a1);
      atomic_store(3u, (unsigned int *)(a1 + 1240));
      sub_1000065CC(v191, "shenan");
      sub_1001DF684(&v179, (__int128 *)v191);
      uint64_t v129 = a1 + 40;
      sub_100367C64(a1 + 40, (unsigned __int8 *)&v179, (uint64_t)v191);
      uint64_t v9 = *(void *)(a1 + 1312);
      if (v9) {
        sub_1002343C8(v9, &v179);
      }
      if (!v194)
      {
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
          sub_10039BB4C();
        }
        ++*(_BYTE *)(a1 + 1517);
        sub_1000065CC(v177, "Failed to send hello.");
        sub_1001D0044(a1, 3LL, v177);
        if ((v178 & 0x80000000) == 0) {
          goto LABEL_294;
        }
        char v31 = (void *)v177[0];
LABEL_65:
        operator delete(v31);
        goto LABEL_294;
      }

      char v10 = sub_100005150();
      if (!v194) {
        goto LABEL_298;
      }
      sub_100354BCC((uint64_t)v10, (__int128 *)v191);
      uint64_t v11 = (os_log_s *)(id)qword_1007F9AA0;
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        if (!v194) {
          sub_100006080();
        }
        sub_10034C490((uint64_t)v191, (std::stringbuf::string_type *)&__p);
        if ((SBYTE7(v187) & 0x80u) == 0) {
          p_p = &__p;
        }
        else {
          p_p = __p;
        }
        LODWORD(buf) = 136315138;
        *(void *)((char *)&buf + 4) = p_p;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Hello Response: %s", (uint8_t *)&buf, 0xCu);
        if (SBYTE7(v187) < 0) {
          operator delete(__p);
        }
      }

      if (*(_BYTE *)(a1 + 1496))
      {
        uint32_t v13 = sub_100005150();
        if ((sub_100355280((uint64_t)v13) & 1) == 0)
        {
          unsigned int v14 = (os_log_s *)(id)qword_1007F9AA0;
          if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
            sub_10039BE38();
          }

          *(_BYTE *)(a1 + 1496) = 0;
          *(_BYTE *)(a1 + 1457) = 0;
          sub_10016CB60(*(dispatch_queue_s ***)(a1 + 1536), 15000LL);
        }
      }

      uint64_t v15 = *(void *)(a1 + 1312);
      if (v15)
      {
        if (!v194) {
          goto LABEL_298;
        }
        sub_1002346C0(v15, (uint64_t)v191);
      }

      if (!sub_1001D4014(a1))
      {
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
          sub_10039BE0C();
        }
        AnalyticsSendEventLazy(@"com.apple.nearbyd.RoseCalDataMissing", &stru_1007B5968);
        ++*(_BYTE *)(a1 + 1518);
        sub_1000065CC(v175, "Resetting chip since cal data has not been pushed");
        sub_1001D0044(a1, 3LL, v175);
        if ((v176 & 0x80000000) == 0) {
          goto LABEL_294;
        }
        char v31 = v175[0];
        goto LABEL_65;
      }

      if (!v194) {
LABEL_298:
      }
        sub_100006080();
      if (v193)
      {
        sub_1001DCFEC((uint64_t)&__p, v192);
        if (!v188)
        {
          uint64_t v16 = (os_log_s *)(id)qword_1007F9AA0;
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
            sub_10039BDE0();
          }
        }

        sub_100156AD8((uint64_t)&__p);
      }

      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
      v128 = (void *)objc_claimAutoreleasedReturnValue([v17 objectForKey:@"NBePAeLNA"]);

      if (v128 && (uint64_t v19 = objc_opt_class(&OBJC_CLASS___NSNumber, v18), (objc_opt_isKindOfClass(v128, v19) & 1) != 0))
      {
        unint64_t v20 = (unint64_t)[v128 integerValue];
        char v21 = v20;
        unint64_t v126 = v20 >> 8;
        int v22 = 1;
      }

      else
      {
        char v21 = 0;
        LOBYTE(v126) = 0;
        int v22 = 0;
      }

      char v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
      std::stringbuf::string_type v127 = (void *)objc_claimAutoreleasedReturnValue([v32 objectForKey:@"UWBePAeLNA"]);

      if (v127 && (uint64_t v34 = objc_opt_class(&OBJC_CLASS___NSNumber, v33), (objc_opt_isKindOfClass(v127, v34) & 1) != 0))
      {
        unint64_t v35 = (unint64_t)[v127 integerValue];
        uint8_t v36 = v35;
        unint64_t v37 = v35 >> 8;
        int v38 = 1;
      }

      else
      {
        uint8_t v36 = 0;
        LOBYTE(v37) = 0;
        int v38 = 0;
      }

      int v39 = sub_100005150();
      int v40 = sub_1003551E8((uint64_t)v39);
      int v41 = sub_100005150();
      int v42 = sub_1003552DC((uint64_t)v41);
      BOOL v43 = (v40 & 0xFF0000) != 0 && (unsigned __int16)v40 == 5;
      int v44 = v43;
      if (v43) {
        int v45 = 1;
      }
      else {
        int v45 = v22;
      }
      if ((v42 & v45) == 1)
      {
        v164 = 0LL;
        *(void *)v163 = 0LL;
        *(void *)v165 = 0LL;
        if (v22)
        {
          LOBYTE(__p) = v21;
          LOBYTE(buf) = v126;
          sub_1001DD0A8((unint64_t *)v163, &__p);
          sub_1001DD0A8((unint64_t *)v163, &buf);
        }

        else
        {
          LOBYTE(__p) = 2;
          sub_1001DD0A8((unint64_t *)v163, &__p);
          LOBYTE(__p) = 2;
          sub_1001DD0A8((unint64_t *)v163, &__p);
        }

        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v47 = (os_log_s *)(id)qword_1007F9AA0;
        if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
        {
          int v48 = **(_BYTE **)v163;
          int v49 = *(unsigned __int8 *)(*(void *)v163 + 1LL);
          LODWORD(__p) = 67109376;
          HIDWORD(__p) = v48;
          LOWORD(v186) = 1024;
          *(_DWORD *)((char *)&v186 + 2) = v49;
          _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "Set NB ePA&eLNA to high gain mode, NB:(0x%02x, 0x%02x)",  (uint8_t *)&__p,  0xEu);
        }

        LOBYTE(__p) = 45;
        v186 = 0LL;
        __int128 v187 = 0uLL;
        sub_1001309C0(&v186, *(const void **)v163, (uint64_t)v164, (size_t)v164 - *(void *)v163);
        LOBYTE(buf) = (_BYTE)__p;
        uint64_t v183 = 0LL;
        *((void *)&buf + 1) = 0LL;
        *(void *)v182 = 0LL;
        sub_1001309C0((void *)&buf + 1, v186, v187, v187 - (void)v186);
        sub_1001D4498(&v172, (uint64_t)&buf, 1uLL);
        if (*((void *)&buf + 1))
        {
          *(void *)v182 = *((void *)&buf + 1);
          operator delete(*((void **)&buf + 1));
        }

        __int128 buf = 0uLL;
        *(void *)v182 = 0LL;
        sub_1001DF8D4(&buf, (uint64_t)v172, *(uint64_t *)v173, (uint64_t)(*(void *)v173 - (void)v172) >> 5);
        BOOL v50 = sub_10036937C(v129, (uint64_t *)&buf);
        *(void *)v167 = &buf;
        sub_100130C0C((void ***)v167);
        if (!v50)
        {
          if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
            sub_10039BDB4();
          }
          sub_1000065CC(v170, "Failed to set NB ePA/eLNA mode on the FW");
          sub_1001D0044(a1, 3LL, v170);
          if ((v171 & 0x80000000) == 0) {
            goto LABEL_199;
          }
          uint64_t v74 = (void *)v170[0];
          goto LABEL_198;
        }

        *(void *)&__int128 buf = &v172;
        sub_100130C0C((void ***)&buf);
        if (v186)
        {
          *(void *)&__int128 v187 = v186;
          operator delete(v186);
        }

        if (*(void *)v163)
        {
          v164 = *(void **)v163;
          operator delete(*(void **)v163);
        }
      }

      else
      {
        std::chrono::system_clock::time_point v46 = (os_log_s *)(id)qword_1007F9AA0;
        if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(__p) = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEFAULT,  "Use default NB ePA&eLNA settings",  (uint8_t *)&__p,  2u);
        }
      }

      char v51 = sub_100005150();
      int v52 = sub_100355268((uint64_t)v51);
      if (!v22)
      {
        if ((v52 & v44) == 1)
        {
          *(void *)v173 = 0LL;
          v172 = 0LL;
          uint64_t v174 = 0LL;
          *(void *)v168 = 0LL;
          *(void *)v167 = 0LL;
          uint64_t v169 = 0LL;
          goto LABEL_108;
        }

void sub_1001DA77C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, void *__p, uint64_t a45, int a46, __int16 a47, char a48, char a49)
{
  if (a49 < 0) {
    operator delete(__p);
  }
  sub_1001DF55C((uint64_t)&STACK[0x2E0]);
  sub_1001DF55C(v49);
  STACK[0x350] = (unint64_t)&STACK[0x278];
  sub_100130C0C((void ***)&STACK[0x350]);
  uint64_t v53 = (void *)STACK[0x228];
  if (STACK[0x228])
  {
    STACK[0x230] = (unint64_t)v53;
    operator delete(v53);
  }

  sub_1000060B4(v51 - 224);
  if (SLOBYTE(STACK[0x2D7]) < 0) {
    operator delete((void *)STACK[0x2C0]);
  }
  _Unwind_Resume(a1);
}

void sub_1001DACF8(uint64_t a1, uint64_t a2, __int128 *a3)
{
  switch((int)a2)
  {
    case 0:
      uint64_t v7 = qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        uint32_t v8 = "PRRose, already started, ignoring HostStartup";
        goto LABEL_18;
      }

      break;
    case 3:
    case 5:
    case 7:
      atomic_store(6u, (unsigned int *)(a1 + 1240));
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472LL;
      _OWORD v26[2] = sub_1001DD428;
      v26[3] = &unk_1007A2398;
      v26[4] = a1;
      sub_1001CFF84(a1, v26);
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(&__dst, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        __int128 __dst = *a3;
        uint64_t v25 = *((void *)a3 + 2);
      }

      sub_1001D0044(a1, a2, &__dst);
      if (SHIBYTE(v25) < 0)
      {
        unsigned int v6 = (void *)__dst;
        goto LABEL_29;
      }

      break;
    case 4:
      atomic_store(4u, (unsigned int *)(a1 + 1240));
      sub_1001AC5F4((uint64_t *)(a1 + 1328), 0LL);
      v30[0] = _NSConcreteStackBlock;
      v30[1] = 3221225472LL;
      v30[2] = sub_1001DD2F4;
      v30[3] = &unk_1007A2398;
      uint8_t v30[4] = a1;
      sub_1001CFF84(a1, v30);
      sub_1001D3A98(a1);
      dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
      if (*(_DWORD *)(a1 + 1544) == 1)
      {
        sub_1001DD19C(a1);
      }

      else
      {
        dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
        if (*(_DWORD *)(a1 + 1544) == 2)
        {
          dispatch_time_t v15 = dispatch_time(0LL, 500000000LL);
          uint64_t v16 = *(dispatch_queue_s **)(a1 + 8);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3321888768LL;
          block[2] = sub_1001DD33C;
          block[3] = &unk_1007B5728;
          void block[4] = a1;
          if (*((char *)a3 + 23) < 0)
          {
            sub_1000063A8(&v28, *(void **)a3, *((void *)a3 + 1));
          }

          else
          {
            __int128 v28 = *a3;
            uint64_t v29 = *((void *)a3 + 2);
          }

          dispatch_after(v15, v16, block);
          if (SHIBYTE(v29) < 0)
          {
            unsigned int v6 = (void *)v28;
            goto LABEL_29;
          }
        }
      }

      break;
    case 6:
      atomic_store(6u, (unsigned int *)(a1 + 1240));
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472LL;
      v23[2] = sub_1001DD460;
      v23[3] = &unk_1007A2398;
      void v23[4] = a1;
      sub_1001CFF84(a1, v23);
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(__p, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        *(_OWORD *)__int128 __p = *a3;
        uint64_t v22 = *((void *)a3 + 2);
      }

      sub_1001D0044(a1, 6LL, __p);
      if (SHIBYTE(v22) < 0)
      {
        unsigned int v6 = __p[0];
LABEL_29:
        operator delete(v6);
      }

      break;
    case 8:
      sub_1001D0C48(a1);
      break;
    case 9:
      if (*(_BYTE *)(a1 + 1457)) {
        sub_1001DD498(a1);
      }
      else {
        sub_1001D07E8(a1);
      }
      break;
    case 10:
      uint64_t v7 = qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        uint32_t v8 = "PRRose, already started, ignoring";
LABEL_18:
        uint64_t v9 = (os_log_s *)v7;
        uint32_t v10 = 2;
        goto LABEL_32;
      }

      break;
    case 11:
      uint64_t v11 = qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v12 = atomic_load((unsigned int *)(a1 + 1240));
        unsigned int v13 = v12 - 1;
        if (v13 > 0xA) {
          unsigned int v14 = "UnknownToHost";
        }
        else {
          unsigned int v14 = off_1007B6160[v13];
        }
        *(_DWORD *)__int128 buf = 136315138;
        char v32 = v14;
        uint32_t v8 = "PRRose, LPEM enable event ignored during %s";
        uint64_t v9 = (os_log_s *)v11;
        uint32_t v10 = 12;
LABEL_32:
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v8, buf, v10);
      }

      break;
    default:
      BOOL v17 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR);
      if (v17) {
        sub_10039BE90(a1);
      }
      int v18 = atomic_load((unsigned int *)(a1 + 1240));
      uint64_t v19 = sub_1001CFE4C(v17, v18);
      unint64_t v20 = sub_1001D7B24((uint64_t)v19, a2);
      abort_report_np("PRRose unexpected event while in state: %s, event: %s", v19, v20);
      __break(1u);
      break;
  }

void sub_1001DB1A4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a16 < 0) {
    operator delete(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001DB1E0(uint64_t a1, int a2, __int128 *a3)
{
  __int128 v4 = (const char *)a1;
  switch(a2)
  {
    case 0:
      unsigned int v6 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "PRRose, already started, ignoring HostStartup",  buf,  2u);
      }

      return;
    case 6:
      uint64_t v7 = operator new(0x28uLL);
      sub_1000065CC(buf, "com.apple.nearbyd.rose-recovery");
      sub_100361848(v7);
      if (v28 < 0) {
        operator delete(*(void **)buf);
      }
      sub_1001AC5F4((uint64_t *)v4 + 166, (uint64_t)v7);
      if (!*((void *)v4 + 166)) {
        goto LABEL_33;
      }
      atomic_store(6u, (unsigned int *)v4 + 310);
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472LL;
      _OWORD v26[2] = sub_1001DD62C;
      v26[3] = &unk_1007A2398;
      v26[4] = v4;
      sub_1001CFF84((uint64_t)v4, v26);
      sub_1001D3830((uint64_t)v4);
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(&__dst, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        __int128 __dst = *a3;
        uint64_t v25 = *((void *)a3 + 2);
      }

      sub_1001D0044(v4, 6LL, &__dst);
      if ((SHIBYTE(v25) & 0x80000000) == 0) {
        return;
      }
      uint32_t v10 = (void *)__dst;
      goto LABEL_28;
    case 7:
      uint32_t v8 = operator new(0x28uLL);
      sub_1000065CC(buf, "com.apple.nearbyd.rose-recovery");
      sub_100361848(v8);
      if (v28 < 0) {
        operator delete(*(void **)buf);
      }
      sub_1001AC5F4((uint64_t *)v4 + 166, (uint64_t)v8);
      if (!*((void *)v4 + 166))
      {
        BOOL v18 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR);
        if (v18) {
          sub_10039C064((uint64_t)v4);
        }
        int v19 = atomic_load((unsigned int *)v4 + 310);
        uint64_t v16 = sub_1001CFE4C(v18, v19);
        BOOL v17 = "ChipReset";
LABEL_39:
        unint64_t v20 = (_Unwind_Exception *)abort_report_np( "PRRose failed to take assertion. state %s, event: %s, aborting nearbyd",  v16,  v17);
        if (SHIBYTE(v22) < 0) {
          operator delete(__p[0]);
        }
        _Unwind_Resume(v20);
      }

      atomic_store(6u, (unsigned int *)v4 + 310);
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472LL;
      v23[2] = sub_1001DD664;
      v23[3] = &unk_1007A2398;
      void v23[4] = v4;
      sub_1001CFF84((uint64_t)v4, v23);
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(__p, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        *(_OWORD *)__int128 __p = *a3;
        uint64_t v22 = *((void *)a3 + 2);
      }

      sub_1001D0044(v4, 7LL, __p);
      if ((SHIBYTE(v22) & 0x80000000) == 0) {
        return;
      }
      uint32_t v10 = __p[0];
LABEL_28:
      operator delete(v10);
      return;
    case 8:
      sub_1001D0C48(a1);
      return;
    case 9:
      if (*(_BYTE *)(a1 + 1457)) {
        sub_1001DD498(a1);
      }
      else {
        sub_1001D07E8(a1);
      }
      return;
    case 10:
      uint64_t v9 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "PRRose already Ready", buf, 2u);
      }

      sub_1001DD19C((uint64_t)v4);
      return;
    case 11:
      sub_1001DD69C(a1);
      return;
    default:
      BOOL v11 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR);
      if (v11) {
        sub_10039BF34((uint64_t)v4);
      }
      int v12 = atomic_load((unsigned int *)v4 + 310);
      __int128 v4 = sub_1001CFE4C(v11, v12);
      unsigned int v13 = sub_1001D7B24((uint64_t)v4, a2);
      abort_report_np("PRRose unexpected event while in state: %s, event: %s", v4, v13);
LABEL_33:
      BOOL v14 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR);
      if (v14) {
        sub_10039BFD8((uint64_t)v4);
      }
      int v15 = atomic_load((unsigned int *)v4 + 310);
      uint64_t v16 = sub_1001CFE4C(v14, v15);
      BOOL v17 = "FatalChipError";
      goto LABEL_39;
  }

void sub_1001DB630(uint64_t a1, int a2, __int128 *a3)
{
  switch(a2)
  {
    case 0:
      uint64_t v5 = qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        unsigned int v6 = "PRRose, already started, ignoring HostStartup";
        goto LABEL_24;
      }

      return;
    case 1:
      uint64_t v5 = qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        unsigned int v6 = "PRRose, in error state, but getting StartBoot dispatch block that is executed after the state changed to er"
             "ror due to firmware issues";
        goto LABEL_24;
      }

      return;
    case 3:
      BOOL v11 = *(dispatch_queue_s **)(a1 + 8);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768LL;
      block[2] = sub_1001DD944;
      block[3] = &unk_1007B5988;
      void block[4] = a1;
      int v34 = 3;
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(&__p, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        __int128 __p = *a3;
        uint64_t v33 = *((void *)a3 + 2);
      }

      dispatch_async(v11, block);
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)__p);
      }
      return;
    case 5:
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_10039C1F0();
      }
      abort_report_np("RoseServiceHandshakeError");
      goto LABEL_60;
    case 6:
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_10039C198();
      }
      atomic_store(7u, (unsigned int *)(a1 + 1240));
      return;
    case 7:
      sub_100045754((uint64_t)buf);
      sub_100046B94(&v36, (uint64_t)"ChipReset", 9LL);
      if (*((char *)a3 + 23) < 0)
      {
        if (!*((void *)a3 + 1)) {
          goto LABEL_36;
        }
      }

      else if (!*((_BYTE *)a3 + 23))
      {
        goto LABEL_36;
      }

      BOOL v17 = sub_100046B94(&v36, (uint64_t)": ", 2LL);
      int v18 = *((char *)a3 + 23);
      if (v18 >= 0) {
        uint64_t v19 = (uint64_t)a3;
      }
      else {
        uint64_t v19 = *(void *)a3;
      }
      if (v18 >= 0) {
        uint64_t v20 = *((unsigned __int8 *)a3 + 23);
      }
      else {
        uint64_t v20 = *((void *)a3 + 1);
      }
      sub_100046B94(v17, v19, v20);
LABEL_36:
      std::stringbuf::str(&v30, &v37);
      char v21 = sub_1001D2610(a1, 3LL, &v30);
      if ((v21 & 1) != 0)
      {
        atomic_store(1u, (unsigned int *)(a1 + 1240));
        sub_1000065CC(v28, "");
        sub_1001D0044(a1, 1LL, v28);
        if (v29 < 0) {
          operator delete(v28[0]);
        }
        uint64_t v36 = v22;
        std::streambuf::~streambuf(&v37);
        std::ios::~ios(&v38);
      }

      else
      {
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
          sub_10039C1C4();
        }
        abort_report_np("Failed to dump firmware logs");
LABEL_60:
        __break(1u);
      }

      return;
    case 8:
      uint64_t v7 = qword_1007F9AA0;
      if (!os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT)) {
        return;
      }
      unsigned int v8 = atomic_load((unsigned int *)(a1 + 1240));
      unsigned int v9 = v8 - 1;
      if (v9 > 0xA) {
        uint32_t v10 = "UnknownToHost";
      }
      else {
        uint32_t v10 = off_1007B6160[v9];
      }
      *(_DWORD *)__int128 buf = 136315138;
      *(void *)&uint8_t buf[4] = v10;
      unsigned int v6 = "PRRose, regulatory,configuration update ignored during %s";
      goto LABEL_48;
    case 9:
      uint64_t v5 = qword_1007F9AA0;
      if (!os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT)) {
        return;
      }
      *(_WORD *)__int128 buf = 0;
      unsigned int v6 = "PRRose, in error state, Power off delayed";
      goto LABEL_24;
    case 10:
      uint64_t v5 = qword_1007F9AA0;
      if (!os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT)) {
        return;
      }
      *(_WORD *)__int128 buf = 0;
      unsigned int v6 = "PRRose, already started";
LABEL_24:
      int v15 = (os_log_s *)v5;
      uint32_t v16 = 2;
      goto LABEL_49;
    case 11:
      uint64_t v7 = qword_1007F9AA0;
      if (!os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT)) {
        return;
      }
      unsigned int v12 = atomic_load((unsigned int *)(a1 + 1240));
      unsigned int v13 = v12 - 1;
      if (v13 > 0xA) {
        BOOL v14 = "UnknownToHost";
      }
      else {
        BOOL v14 = off_1007B6160[v13];
      }
      *(_DWORD *)__int128 buf = 136315138;
      *(void *)&uint8_t buf[4] = v14;
      unsigned int v6 = "PRRose, LPEM enable event ignored during %s";
LABEL_48:
      int v15 = (os_log_s *)v7;
      uint32_t v16 = 12;
LABEL_49:
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, v6, buf, v16);
      return;
    default:
      BOOL v24 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR);
      if (v24) {
        sub_10039C0F0(a1);
      }
      int v25 = atomic_load((unsigned int *)(a1 + 1240));
      uint64_t v26 = sub_1001CFE4C(v24, v25);
      unsigned int v27 = sub_1001D7B24((uint64_t)v26, a2);
      abort_report_np("PRRose unexpected event while in state: %s, event: %s", v26, v27);
      goto LABEL_60;
  }

void sub_1001DBB18( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_100045880((uint64_t)&a33);
  _Unwind_Resume(a1);
}

void sub_1001DBB64(uint64_t a1, int a2)
{
  switch(a2)
  {
    case 0:
      uint64_t v4 = qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        uint64_t v5 = "PRRose, already started, ignoring HostStartup";
        goto LABEL_22;
      }

      break;
    case 1:
      uint64_t v4 = qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        uint64_t v5 = "PRRose, in error handling state, but getting StartBoot dispatch block that is executed after the state chan"
             "ged to error due to firmware issues";
        goto LABEL_22;
      }

      break;
    case 3:
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_10039C274();
      }
      break;
    case 6:
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_10039C21C();
      }
      break;
    case 7:
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_10039C248();
      }
      break;
    case 8:
      uint64_t v6 = qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v10 = atomic_load((unsigned int *)(a1 + 1240));
        unsigned int v11 = v10 - 1;
        if (v11 > 0xA) {
          unsigned int v12 = "UnknownToHost";
        }
        else {
          unsigned int v12 = off_1007B6160[v11];
        }
        *(_DWORD *)__int128 buf = 136315138;
        uint64_t v20 = v12;
        uint64_t v5 = "PRRose, regulatory,configuration update ignored during %s";
        goto LABEL_27;
      }

      break;
    case 9:
      uint64_t v4 = qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        uint64_t v5 = "PRRose, in error state, Power off delayed";
        goto LABEL_22;
      }

      break;
    case 10:
      uint64_t v4 = qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        uint64_t v5 = "PRRose, already started";
LABEL_22:
        unsigned int v13 = (os_log_s *)v4;
        uint32_t v14 = 2;
        goto LABEL_28;
      }

      break;
    case 11:
      uint64_t v6 = qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v7 = atomic_load((unsigned int *)(a1 + 1240));
        unsigned int v8 = v7 - 1;
        if (v8 > 0xA) {
          unsigned int v9 = "UnknownToHost";
        }
        else {
          unsigned int v9 = off_1007B6160[v8];
        }
        *(_DWORD *)__int128 buf = 136315138;
        uint64_t v20 = v9;
        uint64_t v5 = "PRRose, LPEM enable event ignored during %s";
LABEL_27:
        unsigned int v13 = (os_log_s *)v6;
        uint32_t v14 = 12;
LABEL_28:
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, v5, buf, v14);
      }

      break;
    default:
      BOOL v15 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR);
      if (v15) {
        sub_10039BF34(a1);
      }
      int v16 = atomic_load((unsigned int *)(a1 + 1240));
      BOOL v17 = sub_1001CFE4C(v15, v16);
      int v18 = sub_1001D7B24((uint64_t)v17, a2);
      abort_report_np("PRRose unexpected event while in state: %s, event: %s", v17, v18);
      __break(1u);
      break;
  }

void sub_1001DBE58(uint64_t a1, int a2, __int128 *a3)
{
  switch(a2)
  {
    case 6:
      uint64_t v5 = operator new(0x28uLL);
      sub_1000065CC(buf, "com.apple.nearbyd.rose-recovery");
      sub_100361848(v5);
      if (v25 < 0) {
        operator delete(*(void **)buf);
      }
      sub_1001AC5F4((uint64_t *)(a1 + 1328), (uint64_t)v5);
      if (*(void *)(a1 + 1328))
      {
        atomic_store(6u, (unsigned int *)(a1 + 1240));
        v23[0] = _NSConcreteStackBlock;
        v23[1] = 3221225472LL;
        v23[2] = sub_1001DD8D4;
        v23[3] = &unk_1007A2398;
        void v23[4] = a1;
        sub_1001CFF84(a1, v23);
        sub_1001D3830(a1);
        if (*((char *)a3 + 23) < 0)
        {
          sub_1000063A8(&__dst, *(void **)a3, *((void *)a3 + 1));
        }

        else
        {
          __int128 __dst = *a3;
          uint64_t v22 = *((void *)a3 + 2);
        }

        sub_1001D0044(a1, 6LL, &__dst);
        if (SHIBYTE(v22) < 0)
        {
          unsigned int v10 = (void *)__dst;
LABEL_30:
          operator delete(v10);
          return;
        }

        return;
      }

      BOOL v11 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR);
      if (v11) {
        sub_10039BFD8(a1);
      }
      int v12 = atomic_load((unsigned int *)(a1 + 1240));
      unsigned int v13 = sub_1001CFE4C(v11, v12);
      uint32_t v14 = "FatalChipError";
      goto LABEL_38;
    case 7:
      uint64_t v6 = operator new(0x28uLL);
      sub_1000065CC(buf, "com.apple.nearbyd.rose-recovery");
      sub_100361848(v6);
      if (v25 < 0) {
        operator delete(*(void **)buf);
      }
      sub_1001AC5F4((uint64_t *)(a1 + 1328), (uint64_t)v6);
      if (!*(void *)(a1 + 1328))
      {
        BOOL v15 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR);
        if (v15) {
          sub_10039C064(a1);
        }
        int v16 = atomic_load((unsigned int *)(a1 + 1240));
        unsigned int v13 = sub_1001CFE4C(v15, v16);
        uint32_t v14 = "ChipReset";
LABEL_38:
        BOOL v17 = (_Unwind_Exception *)abort_report_np( "PRRose failed to take assertion. state %s, event: %s, aborting nearbyd",  v13,  v14);
        if (SHIBYTE(v19) < 0) {
          operator delete(__p[0]);
        }
        _Unwind_Resume(v17);
      }

      atomic_store(6u, (unsigned int *)(a1 + 1240));
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472LL;
      v20[2] = sub_1001DD90C;
      void v20[3] = &unk_1007A2398;
      v20[4] = a1;
      sub_1001CFF84(a1, v20);
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(__p, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        *(_OWORD *)__int128 __p = *a3;
        uint64_t v19 = *((void *)a3 + 2);
      }

      sub_1001D0044(a1, 7LL, __p);
      if (SHIBYTE(v19) < 0)
      {
        unsigned int v10 = __p[0];
        goto LABEL_30;
      }

      return;
    case 9:
      unsigned int v7 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "PRRose power down Rose after regulatory disallowment",  buf,  2u);
      }

      sub_1001D07E8(a1);
      return;
    case 10:
      unsigned int v8 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "PRRose already started", buf, 2u);
      }

      sub_1001DD19C(a1);
      return;
    case 11:
      if (*(_DWORD *)(a1 + 1244) == 3)
      {
        unsigned int v9 = (os_log_s *)qword_1007F9AA0;
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "PRRose: enabling LPEM while in Airplane Mode",  buf,  2u);
        }

        sub_1001DD69C(a1);
      }

      return;
    default:
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_10039C2A0(a1);
      }
      return;
  }

void sub_1001DC27C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "PRRose setStateFromPowerOff", buf, 2u);
  }

  if (a2 == 8)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039C46C(a1);
    }
  }

  else if (a2 == 10)
  {
    unsigned int v7 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "PRRose Powering On", buf, 2u);
    }

    if (!sub_10036BE8C(a1 + 40, 1LL, v8, v9, v10, v11, v12, v13))
    {
      BOOL v14 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR);
      if (v14) {
        sub_10039C3E0(a1);
      }
      int v15 = atomic_load((unsigned int *)(a1 + 1240));
      int v16 = sub_1001CFE4C(v14, v15);
      BOOL v17 = (_Unwind_Exception *)abort_report_np( "PRRose Power On Failed  while in state: %s, event: %s",  v16,  "PowerOn");
      if (SHIBYTE(v19) < 0) {
        operator delete(__p[0]);
      }
      _Unwind_Resume(v17);
    }

    atomic_store(0, (unsigned int *)(a1 + 1240));
    if (*(char *)(a3 + 23) < 0)
    {
      sub_1000063A8(__p, *(void **)a3, *(void *)(a3 + 8));
    }

    else
    {
      *(_OWORD *)__int128 __p = *(_OWORD *)a3;
      uint64_t v19 = *(void *)(a3 + 16);
    }

    sub_1001D0044(a1, 0LL, __p);
    if (SHIBYTE(v19) < 0) {
      operator delete(__p[0]);
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_FAULT))
  {
    sub_10039C344(a1);
  }

void sub_1001DC450(uint64_t a1, int a2, __int128 *a3)
{
  uint64_t v6 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "PRRose setStateFromDeepSleep", buf, 2u);
  }

  switch(a2)
  {
    case 6:
      unsigned int v7 = operator new(0x28uLL);
      sub_1000065CC(buf, "com.apple.nearbyd.rose-recovery");
      sub_100361848(v7);
      if (v30 < 0) {
        operator delete(*(void **)buf);
      }
      sub_1001AC5F4((uint64_t *)(a1 + 1328), (uint64_t)v7);
      if (*(void *)(a1 + 1328))
      {
        atomic_store(6u, (unsigned int *)(a1 + 1240));
        v28[0] = _NSConcreteStackBlock;
        v28[1] = 3221225472LL;
        v28[2] = sub_1001DDB50;
        v28[3] = &unk_1007A2398;
        v28[4] = a1;
        sub_1001CFF84(a1, v28);
        sub_1001D3830(a1);
        if (*((char *)a3 + 23) < 0)
        {
          sub_1000063A8(&__dst, *(void **)a3, *((void *)a3 + 1));
        }

        else
        {
          __int128 __dst = *a3;
          uint64_t v27 = *((void *)a3 + 2);
        }

        sub_1001D0044(a1, 6LL, &__dst);
        if (SHIBYTE(v27) < 0)
        {
          int v15 = (void *)__dst;
LABEL_38:
          operator delete(v15);
          return;
        }

        return;
      }

      BOOL v16 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR);
      if (v16) {
        sub_10039BFD8(a1);
      }
      int v17 = atomic_load((unsigned int *)(a1 + 1240));
      int v18 = sub_1001CFE4C(v16, v17);
      uint64_t v19 = "FatalChipError";
      goto LABEL_46;
    case 7:
      uint64_t v8 = operator new(0x28uLL);
      sub_1000065CC(buf, "com.apple.nearbyd.rose-recovery");
      sub_100361848(v8);
      if (v30 < 0) {
        operator delete(*(void **)buf);
      }
      sub_1001AC5F4((uint64_t *)(a1 + 1328), (uint64_t)v8);
      if (!*(void *)(a1 + 1328))
      {
        BOOL v20 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR);
        if (v20) {
          sub_10039C064(a1);
        }
        int v21 = atomic_load((unsigned int *)(a1 + 1240));
        int v18 = sub_1001CFE4C(v20, v21);
        uint64_t v19 = "ChipReset";
LABEL_46:
        uint64_t v22 = (_Unwind_Exception *)abort_report_np( "PRRose failed to take assertion. state %s, event: %s, aborting nearbyd",  v18,  v19);
        if (SHIBYTE(v24) < 0) {
          operator delete(__p[0]);
        }
        _Unwind_Resume(v22);
      }

      atomic_store(6u, (unsigned int *)(a1 + 1240));
      v25[0] = _NSConcreteStackBlock;
      v25[1] = 3221225472LL;
      v25[2] = sub_1001DDB88;
      v25[3] = &unk_1007A2398;
      v25[4] = a1;
      sub_1001CFF84(a1, v25);
      if (*((char *)a3 + 23) < 0)
      {
        sub_1000063A8(__p, *(void **)a3, *((void *)a3 + 1));
      }

      else
      {
        *(_OWORD *)__int128 __p = *a3;
        uint64_t v24 = *((void *)a3 + 2);
      }

      sub_1001D0044(a1, 7LL, __p);
      if (SHIBYTE(v24) < 0)
      {
        int v15 = __p[0];
        goto LABEL_38;
      }

      return;
    case 8:
      uint64_t v9 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "PRRose reconfigure Rose from deep sleep",  buf,  2u);
      }

      sub_1001D05E0(a1);
      sub_1001D0C48(a1);
      unsigned int v10 = atomic_load((unsigned int *)(a1 + 1240));
      uint64_t v11 = (os_log_s *)qword_1007F9AA0;
      BOOL v12 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT);
      if (v10 == 8)
      {
        if (v12)
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "PRRose UWB not allowed. Power off rose",  buf,  2u);
        }

        sub_1001D07E8(a1);
      }

      else
      {
        if (v12)
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "PRRose Reconfigured. Reenter deep sleep",  buf,  2u);
        }

        sub_1001DDBC0(a1);
      }

      return;
    case 10:
      uint64_t v13 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "PRRose Exiting Deep Sleep", buf, 2u);
      }

      sub_1001D30EC(a1, 1);
      return;
    case 11:
      BOOL v14 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "PRRose: exiting Deep Sleep before entering LPEM",  buf,  2u);
      }

      return;
    default:
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_FAULT)) {
        sub_10039C4F8(a1);
      }
      return;
  }

const char *sub_1001DC940(uint64_t a1, int a2)
{
  else {
    return off_1007B60E8[a2 - 1];
  }
}

uint64_t sub_1001DC968(uint64_t a1, int a2)
{
  uint64_t v4 = (uint64_t *)(a1 + 1464);
  if (!*(_BYTE *)(a1 + 1472)) {
    uint64_t v4 = (uint64_t *)&unk_100427C38;
  }
  uint64_t v5 = *v4;
  v6.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_ + 1000000 * v5;
  while (1)
  {
    __p.__r_.__value_.__r.__words[0] = 10000000LL;
    std::this_thread::sleep_for ((const std::chrono::nanoseconds *)&__p);
    int v7 = sub_1001D71A0(a1);
    if (v7 != 3) {
      break;
    }
    if (std::chrono::steady_clock::now().__d_.__rep_ >= v6.__d_.__rep_)
    {
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR))
      {
        sub_10039C594();
        if (a2)
        {
LABEL_8:
          sub_1000065CC(&__p, "Deep sleep exit timeout");
          sub_1001D2610(a1, 0LL, &__p);
          AnalyticsSendEventLazy(@"com.apple.nearbyd.uwb.deepsleep.failure", &stru_1007B5AB8);
        }
      }

      else if (a2)
      {
        goto LABEL_8;
      }

      char v8 = 0;
      return v8 & 1;
    }
  }

  if (v7 != 1)
  {
    if (v7)
    {
      if (v7 != 2) {
        return v8 & 1;
      }
    }

    else
    {
      AnalyticsSendEventLazy(@"com.apple.nearbyd.uwb.deepsleep.failure", &stru_1007B5AD8);
    }

    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039C5C0();
    }
    uint64_t v11 = (_Unwind_Exception *)abort_report_np("PRRose: invalid deep sleep state after requesting deep sleep exit");
    _Unwind_Resume(v11);
  }

  uint64_t v9 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(__p.__r_.__value_.__l.__data_) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "PRRose: deep sleep exit completed successfully",  (uint8_t *)&__p,  2u);
  }

  if (a2)
  {
    atomic_store(4u, (unsigned int *)(a1 + 1240));
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
    if (*(_DWORD *)(a1 + 1544) == 1)
    {
      sub_1001DD19C(a1);
    }

    else
    {
      dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
      if (*(_DWORD *)(a1 + 1544) == 2) {
        sub_1001D07E8(a1);
      }
    }

    AnalyticsSendEventLazy(@"com.apple.nearbyd.uwb.deepsleep.wakesuccess", &stru_1007B5A98);
  }

  char v8 = 1;
  return v8 & 1;
}

uint64_t sub_1001DCB9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 0;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

void sub_1001DCBD0(uint64_t a1, int a2)
{
  uint64_t v4 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v5 = atomic_load((unsigned int *)(a1 + 1240));
    unsigned int v6 = v5 - 1;
    if (v6 > 0xA) {
      int v7 = "UnknownToHost";
    }
    else {
      int v7 = off_1007B6160[v6];
    }
    else {
      char v8 = off_1007B6258[a2 - 1];
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v7;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v8;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "PRRose: errorHandlingRoutine. Current state: [%s], Next Step: [%s]",  (uint8_t *)&buf,  0x16u);
  }

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  switch(a2)
  {
    case 1:
      sub_1001D665C(a1);
      atomic_store(1u, (unsigned int *)(a1 + 1240));
      sub_1000065CC(v19, "");
      sub_1001D0044(a1, 1LL, v19);
      if ((v20 & 0x80000000) == 0) {
        return;
      }
      int v18 = (void *)v19[0];
      goto LABEL_25;
    case 3:
      atomic_store(7u, (unsigned int *)(a1 + 1240));
      sub_1000065CC(&buf, "PRRose::errorHandlingRoutine: current state: ErrorHandling, next step: PromoteToFatal");
      char v17 = sub_1001D2610(a1, 0LL, &buf);
      if ((v17 & 1) == 0)
      {
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
          sub_10039C63C();
        }
        abort_report_np("PRRose::errorHandlingRoutine: Failed to promote error to fatal.");
LABEL_30:
        __break(1u);
      }

      break;
    case 2:
      atomic_store(1u, (unsigned int *)(a1 + 1240));
      if (sub_10036A5AC(a1 + 40, v9, v10, v11, v12, v13, v14, v15))
      {
        v21[0] = _NSConcreteStackBlock;
        v21[1] = 3221225472LL;
        v21[2] = sub_1001DEE1C;
        void v21[3] = &unk_1007A2398;
        v21[4] = a1;
        BOOL v16 = objc_retainBlock(v21);
        if ((sub_1001DEC34(a1, v16, 1u) & 1) != 0)
        {

          return;
        }

        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
          sub_10039C668();
        }
        abort_report_np("PRRose: Failed to start secureROM Timer.");
        goto LABEL_30;
      }

      sub_1000065CC(__p, "");
      sub_1001D0044(a1, 1LL, __p);
      if (v23 < 0)
      {
        int v18 = __p[0];
LABEL_25:
        operator delete(v18);
      }

      break;
  }

void sub_1001DCE74( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, int a23, __int16 a24, char a25, char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001DCECC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 0;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

uint64_t sub_1001DCF00(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 6;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

NSDictionary *__cdecl sub_1001DCF38(id a1)
{
  uint64_t v4 = @"HasCalDataBeenPushed";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 0LL));
  unsigned int v5 = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));

  return (NSDictionary *)v2;
}

void sub_1001DCFD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001DCFEC(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(_WORD *)(a1 + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)a1 = v4;
  if (*((char *)a2 + 31) < 0)
  {
    sub_1000063A8((_BYTE *)(a1 + 8), *((void **)a2 + 1), *((void *)a2 + 2));
  }

  else
  {
    __int128 v5 = *(_OWORD *)(a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(_OWORD *)(a1 + _Block_object_dispose(va, 8) = v5;
  }

  *(void *)(a1 + 32) = *((void *)a2 + 4);
  unsigned int v6 = (_BYTE *)(a1 + 40);
  if (*((char *)a2 + 63) < 0)
  {
    sub_1000063A8(v6, *((void **)a2 + 5), *((void *)a2 + 6));
  }

  else
  {
    __int128 v7 = *(_OWORD *)(a2 + 10);
    *(void *)(a1 + 56) = *((void *)a2 + 7);
    *(_OWORD *)unsigned int v6 = v7;
  }

  return a1;
}

void sub_1001DD08C(_Unwind_Exception *exception_object)
{
}

void sub_1001DD0A8(unint64_t *a1, _BYTE *a2)
{
  __int128 v5 = (_BYTE *)a1[1];
  unint64_t v4 = a1[2];
  if ((unint64_t)v5 >= v4)
  {
    unint64_t v7 = *a1;
    char v8 = &v5[-*a1];
    unint64_t v9 = (unint64_t)(v8 + 1);
    unint64_t v10 = v4 - v7;
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v11 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v11 = v9;
    }
    if (v11) {
      unint64_t v12 = (unint64_t)operator new(v11);
    }
    else {
      unint64_t v12 = 0LL;
    }
    uint64_t v13 = (char *)(v12 + v11);
    v8[v12] = *a2;
    uint64_t v6 = (uint64_t)&v8[v12 + 1];
    if (v5 == (_BYTE *)v7)
    {
      v12 += (unint64_t)v8;
    }

    else
    {
      uint64_t v14 = &v5[~v7];
      do
      {
        char v15 = *--v5;
        (v14--)[v12] = v15;
      }

      while (v5 != (_BYTE *)v7);
      __int128 v5 = (_BYTE *)*a1;
    }

    *a1 = v12;
    a1[1] = v6;
    a1[2] = (unint64_t)v13;
    if (v5) {
      operator delete(v5);
    }
  }

  else
  {
    *__int128 v5 = *a2;
    uint64_t v6 = (uint64_t)(v5 + 1);
  }

  a1[1] = v6;
}

void sub_1001DD19C(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)char v3 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "PRRose: notifyPowerOnReadyAndClearRequest",  v3,  2u);
  }

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  std::mutex::lock((std::mutex *)(a1 + 1600));
  *(_BYTE *)(a1 + 1664) = 1;
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 1552));
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  *(_DWORD *)(a1 + 1544) = 0;
  std::mutex::unlock((std::mutex *)(a1 + 1600));
}

void sub_1001DD238(_Unwind_Exception *a1)
{
}

uint64_t sub_1001DD24C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 2;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

uint64_t sub_1001DD284(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 1;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

uint64_t sub_1001DD2BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 6;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

void sub_1001DD2F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(v1 + 1288);
  char v3 = 4;
  (*(void (**)(void))(v2 + 16))();
  sub_1001D08F8(v1);
}

void sub_1001DD33C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(v2 + 8));
  if (*(_DWORD *)(v2 + 1544) == 2)
  {
    char v3 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "PRRose Executing pending power off", buf, 2u);
    }

    if (*(char *)(a1 + 63) < 0)
    {
      sub_1000063A8(__p, *(void **)(a1 + 40), *(void *)(a1 + 48));
    }

    else
    {
      *(_OWORD *)std::string __p = *(_OWORD *)(a1 + 40);
      uint64_t v5 = *(void *)(a1 + 56);
    }

    sub_1001D0044(v2, 9LL, __p);
    if (SHIBYTE(v5) < 0) {
      operator delete(__p[0]);
    }
  }

void sub_1001DD40C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001DD428(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 5;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

uint64_t sub_1001DD460(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 6;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

void sub_1001DD498(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: requestDeepSleepEntry", buf, 2u);
  }

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  char v12 = sub_100154F9C(2LL);
  *(void *)std::string buf = 0LL;
  unint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  sub_100030B3C(buf, &v12, (uint64_t)&v13, 1uLL);
  std::string __p = 0LL;
  unint64_t v7 = 0LL;
  uint64_t v8 = 0LL;
  BOOL v3 = sub_10031F840(a1 + 1248, 0x2Du, (uint64_t)buf, (unint64_t *)&__p);
  unint64_t v4 = (os_log_s *)qword_1007F9AA0;
  if (v3)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "PRRose: sent deep sleep entry request to RoseSupervisor. Going to DeepSleep state.",  v5,  2u);
    }

    atomic_store(0xBu, (unsigned int *)(a1 + 1240));
    *(std::chrono::steady_clock::time_point *)(a1 + 1504) = std::chrono::steady_clock::now();
    dispatch_async(*(dispatch_queue_t *)(a1 + 16), &stru_1007B5A78);
    if (__p)
    {
      unint64_t v7 = __p;
      operator delete(__p);
    }

    if (*(void *)buf)
    {
      unint64_t v10 = *(void **)buf;
      operator delete(*(void **)buf);
    }
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039C694();
    }
    abort_report_np("PRRose: sending deep sleep entry request to RoseSupervisor failed");
    __break(1u);
  }

void sub_1001DD600( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  if (a13) {
    operator delete(a13);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001DD62C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 6;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

uint64_t sub_1001DD664(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 5;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

void sub_1001DD69C(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: LPEMEnableInternal", buf, 2u);
  }

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  unsigned int v3 = atomic_load((unsigned int *)(a1 + 1240));
  if (v3 == 5)
  {
    unint64_t v4 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "PRRose: LPEM already enabled", buf, 2u);
    }
  }

  else
  {
    sub_100266DF4(*(void *)(a1 + 1296));
    sub_1001549F8((unsigned __int8 **)v14, (uint64_t)buf);
    uint64_t v11 = 0LL;
    char v12 = 0LL;
    uint64_t v13 = 0LL;
    sub_100030B3C(&v11, buf, (uint64_t)&v16, 0x34uLL);
    std::string __p = 0LL;
    unint64_t v9 = 0LL;
    uint64_t v10 = 0LL;
    BOOL v5 = sub_10031F840(a1 + 1248, 0x34u, (uint64_t)&v11, (unint64_t *)&__p);
    uint64_t v6 = (os_log_s *)qword_1007F9AA0;
    if (v5)
    {
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)unint64_t v7 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "PRRose: sent LPEM Enable command to Rose. Going to LPEM state.",  v7,  2u);
      }

      atomic_store(5u, (unsigned int *)(a1 + 1240));
      if (__p)
      {
        unint64_t v9 = __p;
        operator delete(__p);
      }

      if (v11)
      {
        char v12 = v11;
        operator delete(v11);
      }

      if (v14[0])
      {
        v14[1] = v14[0];
        operator delete(v14[0]);
      }
    }

    else
    {
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
        sub_10039C6C0();
      }
      abort_report_np("PRRose: sending LPEM Enable command to Rose failed. Aborting nearbyd.");
      __break(1u);
    }
  }

void sub_1001DD884( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001DD8D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 6;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

uint64_t sub_1001DD90C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 5;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

void sub_1001DD944(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  unsigned int v2 = atomic_load((unsigned int *)(v1 + 1240));
  if (v2 == 6)
  {
    sub_100045754((uint64_t)v14);
    unsigned int v4 = *(_DWORD *)(a1 + 64) - 1;
    if (v4 > 0xA) {
      BOOL v5 = "HostStartup";
    }
    else {
      BOOL v5 = off_1007B6108[v4];
    }
    size_t v6 = strlen(v5);
    sub_100046B94(&v15, (uint64_t)v5, v6);
    if (*(char *)(a1 + 63) < 0)
    {
      if (!*(void *)(a1 + 48))
      {
LABEL_18:
        std::stringbuf::str(&__p, &v16);
        char v11 = sub_1001D2610(v1, 0LL, &__p);
        if ((v11 & 1) != 0)
        {
          *(_BYTE *)(v1 + 152_Block_object_dispose(va, 8) = 1;
          *(void *)((char *)v14
          uint64_t v15 = v12;
          std::streambuf::~streambuf(&v16);
          std::ios::~ios(&v17);
        }

        else
        {
          if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
            sub_10039C6EC();
          }
          abort_report_np("Failed to trigger fatal crash logs");
          __break(1u);
        }

        return;
      }
    }

    else if (!*(_BYTE *)(a1 + 63))
    {
      goto LABEL_18;
    }

    unint64_t v7 = sub_100046B94(&v15, (uint64_t)": ", 2LL);
    int v8 = *(char *)(a1 + 63);
    if (v8 >= 0) {
      uint64_t v9 = a1 + 40;
    }
    else {
      uint64_t v9 = *(void *)(a1 + 40);
    }
    if (v8 >= 0) {
      uint64_t v10 = *(unsigned __int8 *)(a1 + 63);
    }
    else {
      uint64_t v10 = *(void *)(a1 + 48);
    }
    sub_100046B94(v7, v9, v10);
    goto LABEL_18;
  }

  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039C718();
  }
}

void sub_1001DDB20( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_100045880((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_1001DDB50(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 6;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

uint64_t sub_1001DDB88(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 1288LL);
  char v3 = 5;
  return (*(uint64_t (**)(void))(v1 + 16))();
}

void sub_1001DDBC0(uint64_t a1)
{
  unsigned int v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "PRRose: powerOffInternal", buf, 2u);
  }

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
  unsigned int v3 = atomic_load((unsigned int *)(a1 + 1240));
  if (v3 == 10)
  {
    unsigned int v4 = (os_log_s *)qword_1007F9AA0;
    if (!os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_WORD *)std::string buf = 0;
    BOOL v5 = "PRRose: Already Powered Off";
    goto LABEL_6;
  }

  *(_DWORD *)(a1 + 1544) = 2;
  unsigned int v6 = atomic_load((unsigned int *)(a1 + 1240));
  if (v6 == 4 || (unsigned int v7 = atomic_load((unsigned int *)(a1 + 1240)), v7 == 8))
  {
    sub_1000065CC(__p, "");
    sub_1001D0044(a1, 9LL, __p);
    if (v9 < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    unsigned int v4 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      BOOL v5 = "PRRose: Delay Powering off";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, v5, buf, 2u);
    }
  }

void sub_1001DDD08( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1001DDD24(uint64_t a1)
{
  v9[0] = @"CrashLogReason";
  unsigned int v2 = objc_alloc(&OBJC_CLASS___NSString);
  unsigned int v3 = *(uint64_t **)(a1 + 32);
  unsigned int v4 = -[NSString initWithCString:encoding:](v2, "initWithCString:encoding:", v3, 4LL);
  v10[0] = v4;
  v9[1] = @"IsFatal";
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 28LL)));
  v10[1] = v5;
  v9[2] = @"Core";
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 29LL)));
  v10[2] = v6;
  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v10,  v9,  3LL));

  return v7;
}

void sub_1001DDE38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001DDE68(uint64_t a1)
{
  v9[0] = @"CrashStringSectionFound";
  uint64_t v2 = a1 + 32;
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", **(unsigned __int8 **)(a1 + 32)));
  v10[0] = v3;
  v9[1] = @"CrashStringSectionVersionFound";
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned __int8 *)(*(void *)v2 + 1LL)));
  v10[1] = v4;
  v9[2] = @"IsFatal";
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 8LL)));
  v10[2] = v5;
  void v9[3] = @"Core";
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 9LL)));
  void v10[3] = v6;
  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v10,  v9,  4LL));

  return v7;
}

void sub_1001DDFA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001DDFE0(uint64_t a1)
{
  unsigned int v4 = @"Core";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", **(unsigned __int8 **)(a1 + 32)));
  BOOL v5 = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));

  return v2;
}

void sub_1001DE084(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001DE09C(uint64_t a1)
{
}

void sub_1001DE0AC(uint64_t a1, int a2)
{
  unsigned int v4 = (os_log_s *)qword_1007F9AA0;
  BOOL v5 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    unsigned int v6 = atomic_load((unsigned int *)(a1 + 1240));
    unsigned int v7 = v6 - 1;
    if (v7 > 0xA) {
      int v8 = "UnknownToHost";
    }
    else {
      int v8 = off_1007B6160[v7];
    }
    *(_DWORD *)std::string buf = 136315394;
    uint64_t v38 = v8;
    __int16 v39 = 2080;
    int v40 = sub_1001DE604(v5, a2);
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "PRRose::debugEventHandler received DebugManagerEvent while in state: %s, event: %s",  buf,  0x16u);
  }

  unsigned int v9 = atomic_load((unsigned int *)(a1 + 1240));
  if (v9 == 10)
  {
    uint64_t v10 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "PRRose:Ignore event, Nothing to do", buf, 2u);
    }
  }

  else
  {
    switch(a2)
    {
      case 0:
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
          sub_10039C770();
        }
        unsigned int v24 = atomic_load((unsigned int *)(a1 + 1240));
        if (v24 == 7) {
          goto LABEL_34;
        }
        v36[0] = _NSConcreteStackBlock;
        v36[1] = 3221225472LL;
        v36[2] = sub_1001DE62C;
        v36[3] = &unk_1007A2398;
        v36[4] = a1;
        char v25 = objc_retainBlock(v36);
        if ((sub_1001DE69C(a1, v25, 0xAu) & 1) != 0)
        {

LABEL_34:
          sub_1000065CC(&v34, "");
          sub_1001D0044(a1, 6LL, &v34);
          if (v35 < 0)
          {
            uint64_t v26 = (void *)v34;
            goto LABEL_53;
          }
        }

        else
        {
          if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
            sub_10039C744();
          }
          abort_report_np("PRRose: Failed to start LogCollectionCompleted Timer.");
          __break(1u);
        }

        return;
      case 1:
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
          sub_10039C848();
        }
        AnalyticsSendEventLazy(@"com.apple.nearbyd.RoseLogCollectionFailed", &stru_1007B59B8);
        sub_1001DE8E0(a1);
        unsigned int v27 = atomic_load((unsigned int *)(a1 + 1240));
        if (v27 == 7) {
          goto LABEL_39;
        }
        uint64_t v12 = (os_log_s *)qword_1007F9AA0;
        BOOL v29 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT);
        int v11 = 0;
        if (!v29) {
          goto LABEL_12;
        }
        *(_WORD *)std::string buf = 0;
        uint64_t v14 = "PRRose: DebugManagerEvent::LogCollectionFatalFailed is ignored if the state is not ErrorHandling";
        goto LABEL_50;
      case 2:
        uint64_t v15 = (os_log_s *)qword_1007F9AA0;
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "PRRose: DebugManagerEvent::LogCollectionFatalSucceeded",  buf,  2u);
        }

        sub_1001DE8E0(a1);
        unsigned int v16 = atomic_load((unsigned int *)(a1 + 1240));
        if (v16 == 7)
        {
          if (*(_BYTE *)(a1 + 1528))
          {
            *(_BYTE *)(a1 + 152_Block_object_dispose(va, 8) = 0;
LABEL_39:
            int v11 = 1;
          }

          else
          {
            int v11 = 2;
          }
        }

        else
        {
          uint64_t v12 = (os_log_s *)qword_1007F9AA0;
          BOOL v28 = os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT);
          int v11 = 0;
          if (v28)
          {
            *(_WORD *)std::string buf = 0;
            uint64_t v14 = "PRRose: DebugManagerEvent::LogCollectionFatalSucceeded is ignored if the state is not ErrorHandling";
LABEL_50:
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v14, buf, 2u);
LABEL_11:
            int v11 = 0;
          }
        }

void sub_1001DE5C0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, uint64_t a21, int a22, __int16 a23, char a24, char a25)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

const char *sub_1001DE604(uint64_t a1, int a2)
{
  else {
    return off_1007B61B8[a2 - 1];
  }
}

void sub_1001DE62C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unsigned int v3 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "PRRose: Executing LogCollectionCompleted Timeout Callback.",  v3,  2u);
  }

  sub_1001DCBD0(v1, 1);
}

uint64_t sub_1001DE69C(uint64_t a1, void *a2, unsigned int a3)
{
  id v5 = a2;
  sub_1001DE8E0(a1);
  if (!v5)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039C8F8();
    }
    goto LABEL_10;
  }

  dispatch_source_t v6 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  *(dispatch_queue_t *)(a1 + 8));
  unsigned int v7 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v6;

  int v8 = *(dispatch_source_s **)(a1 + 32);
  if (!v8)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039C924();
    }
LABEL_10:
    uint64_t v12 = 0LL;
    goto LABEL_11;
  }

  dispatch_time_t v9 = dispatch_time(0LL, 1000000000LL * a3);
  dispatch_source_set_timer(v8, v9, 0xFFFFFFFFFFFFFFFFLL, 0xBEBC200uLL);
  uint64_t v10 = *(dispatch_source_s **)(a1 + 32);
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472LL;
  handler[2] = sub_1001DEDF0;
  handler[3] = &unk_1007B43E0;
  uint64_t v17 = a1;
  id v16 = v5;
  dispatch_source_set_event_handler(v10, handler);
  int v11 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "PRRose: Starting LogCollectionCompleted timer.",  v14,  2u);
  }

  dispatch_resume(*(dispatch_object_t *)(a1 + 32));

  uint64_t v12 = 1LL;
LABEL_11:

  return v12;
}

NSDictionary *__cdecl sub_1001DE82C(id a1)
{
  unsigned int v4 = @"IsFatal";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 1LL));
  id v5 = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));

  return (NSDictionary *)v2;
}

void sub_1001DE8C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001DE8E0(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = (os_log_s *)qword_1007F9AA0;
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)unsigned int v4 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "PRRose: Cancelling LogCollectionCompleted timer",  v4,  2u);
    }

    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
    unsigned int v3 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = 0LL;
  }

NSDictionary *__cdecl sub_1001DE960(id a1)
{
  unsigned int v4 = @"IsFatal";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 0LL));
  id v5 = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));

  return (NSDictionary *)v2;
}

void sub_1001DE9FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

NSDictionary *__cdecl sub_1001DEA14(id a1)
{
  unsigned int v4 = @"InterfaceError";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 1LL));
  id v5 = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));

  return (NSDictionary *)v2;
}

void sub_1001DEAB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

NSDictionary *__cdecl sub_1001DEAC8(id a1)
{
  unsigned int v4 = @"FilesystemError";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 1LL));
  id v5 = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));

  return (NSDictionary *)v2;
}

void sub_1001DEB64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001DEB7C(uint64_t a1)
{
  unsigned int v4 = @"ErrorCode";
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32)));
  id v5 = v1;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));

  return v2;
}

void sub_1001DEC1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001DEC34(uint64_t a1, void *a2, unsigned int a3)
{
  id v5 = a2;
  sub_1001CEC2C(a1);
  if (!v5)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039C8F8();
    }
    goto LABEL_10;
  }

  dispatch_source_t v6 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  *(dispatch_queue_t *)(a1 + 8));
  unsigned int v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v6;

  int v8 = *(dispatch_source_s **)(a1 + 24);
  if (!v8)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039C950();
    }
LABEL_10:
    uint64_t v12 = 0LL;
    goto LABEL_11;
  }

  dispatch_time_t v9 = dispatch_time(0LL, 1000000000LL * a3);
  dispatch_source_set_timer(v8, v9, 0xFFFFFFFFFFFFFFFFLL, 0xBEBC200uLL);
  uint64_t v10 = *(dispatch_source_s **)(a1 + 24);
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472LL;
  handler[2] = sub_1001DEDC4;
  handler[3] = &unk_1007B43E0;
  uint64_t v17 = a1;
  id v16 = v5;
  dispatch_source_set_event_handler(v10, handler);
  int v11 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "PRRose: Starting SecureROM timer.", v14, 2u);
  }

  dispatch_resume(*(dispatch_object_t *)(a1 + 24));

  uint64_t v12 = 1LL;
LABEL_11:

  return v12;
}

uint64_t sub_1001DEDC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1001DEDF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1001DEE1C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = (os_log_s *)qword_1007F9AA0;
  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unsigned int v4 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "PRRose: Executing SecureROM Timeout Callback.",  v4,  2u);
  }

  return sub_1001DCBD0(v1, 1LL);
}

uint64_t sub_1001DEE8C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1001DEE98(uint64_t a1)
{
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 1600);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 1600));
  unsigned int v2 = atomic_load((unsigned int *)(a1 + 1240));
  if (v2 == 9)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039C97C();
    }
    goto LABEL_4;
  }

  *(_BYTE *)(a1 + 1664) = 0;
  unsigned int v4 = *(dispatch_queue_s **)(a1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001DF094;
  block[3] = &unk_1007A2398;
  void block[4] = a1;
  dispatch_async(v4, block);
  v5.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_ + 30000000000LL;
  do
  {
    if (*(_BYTE *)(a1 + 1664)) {
      goto LABEL_23;
    }
    if (std::chrono::steady_clock::now().__d_.__rep_ >= v5.__d_.__rep_) {
      break;
    }
    v6.__d_.__rep_ = v5.__d_.__rep_ - std::chrono::steady_clock::now().__d_.__rep_;
    if (v6.__d_.__rep_ >= 1)
    {
      std::chrono::steady_clock::now();
      v7.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
      if (v7.__d_.__rep_)
      {
        if (v7.__d_.__rep_ < 1)
        {
          if ((unint64_t)v7.__d_.__rep_ < 0xFFDF3B645A1CAC09LL)
          {
            std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v8 = 0x8000000000000000LL;
            goto LABEL_19;
          }
        }

        else if ((unint64_t)v7.__d_.__rep_ > 0x20C49BA5E353F7LL)
        {
          std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v8 = 0x7FFFFFFFFFFFFFFFLL;
          goto LABEL_17;
        }

        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v8 = 1000 * v7.__d_.__rep_;
      }

      else
      {
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v8 = 0LL;
      }

void sub_1001DF094(uint64_t a1)
{
}

void sub_1001DF09C(id a1)
{
}

void sub_1001DF0A4(uint64_t a1)
{
  unsigned int v2 = *(dispatch_queue_s **)(a1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001DF10C;
  block[3] = &unk_1007A2398;
  void block[4] = a1;
  dispatch_async(v2, block);
}

void sub_1001DF10C(uint64_t a1)
{
}

void sub_1001DF114(id a1)
{
}

void sub_1001DF11C(id a1)
{
}

NSDictionary *__cdecl sub_1001DF124(id a1)
{
  return (NSDictionary *)&off_1007D2818;
}

NSDictionary *__cdecl sub_1001DF130(id a1)
{
  v4[0] = @"NumberOfFailures";
  v4[1] = @"Reason";
  v5[0] = &off_1007D2520;
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 1LL));
  v5[1] = v1;
  unsigned int v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL));

  return (NSDictionary *)v2;
}

void sub_1001DF1E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

NSDictionary *__cdecl sub_1001DF1FC(id a1)
{
  v4[0] = @"NumberOfFailures";
  v4[1] = @"Reason";
  v5[0] = &off_1007D2520;
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 2LL));
  v5[1] = v1;
  unsigned int v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL));

  return (NSDictionary *)v2;
}

void sub_1001DF2B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

_BYTE *sub_1001DF2C8(_BYTE *a1, uint64_t a2)
{
  *a1 = 0;
  a1[96] = 0;
  if (*(_BYTE *)(a2 + 96))
  {
    sub_1001DF31C((uint64_t)a1, a2);
    a1[96] = 1;
  }

  return a1;
}

void sub_1001DF308(_Unwind_Exception *a1)
{
}

uint64_t sub_1001DF31C(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  sub_1001DF3F4( (void *)(a1 + 8),  *(const void **)(a2 + 8),  *(void *)(a2 + 16),  (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 40) = 0LL;
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;
  sub_1001DF46C( (void *)(a1 + 32),  *(const void **)(a2 + 32),  *(void *)(a2 + 40),  (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
  *(void *)(a1 + 56) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  sub_1001DF4E4( (void *)(a1 + 56),  *(const void **)(a2 + 56),  *(void *)(a2 + 64),  (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 3);
  uint64_t v4 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 87) = *(_DWORD *)(a2 + 87);
  *(void *)(a1 + 80) = v4;
  return a1;
}

void sub_1001DF3C0(_Unwind_Exception *exception_object)
{
  std::chrono::steady_clock::time_point v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 40) = v5;
    operator delete(v5);
  }

  std::chrono::steady_clock::time_point v6 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 16) = v6;
    operator delete(v6);
  }

  _Unwind_Resume(exception_object);
}

void *sub_1001DF3F4(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    std::chrono::steady_clock::time_point v6 = result;
    CFDataRef result = sub_10011B5D8(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      CFDataRef result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }

  return result;
}

void sub_1001DF450(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose(va, 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

void *sub_1001DF46C(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    std::chrono::steady_clock::time_point v6 = result;
    CFDataRef result = sub_10011B5D8(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      CFDataRef result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }

  return result;
}

void sub_1001DF4C8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose(va, 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

void *sub_1001DF4E4(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    std::chrono::steady_clock::time_point v6 = result;
    CFDataRef result = sub_10011B5D8(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      CFDataRef result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }

  return result;
}

void sub_1001DF540(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose(va, 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_1001DF55C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 96))
  {
    unsigned int v2 = *(void **)(a1 + 56);
    if (v2)
    {
      *(void *)(a1 + 64) = v2;
      operator delete(v2);
    }

    uint64_t v3 = *(void **)(a1 + 32);
    if (v3)
    {
      *(void *)(a1 + 40) = v3;
      operator delete(v3);
    }

    uint64_t v4 = *(void **)(a1 + 8);
    if (v4)
    {
      *(void *)(a1 + 16) = v4;
      operator delete(v4);
    }
  }

  return a1;
}

uint64_t sub_1001DF5B4(uint64_t a1, char a2, char a3)
{
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  *(_BYTE *)a1 = a2;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  char __src = a3;
  sub_100178F70((void *)(a1 + 8), &__src, (char *)&v6, 1uLL);
  return a1;
}

void sub_1001DF610(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 16) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(exception_object);
}

void *sub_1001DF62C(void *a1, char a2, __int16 **a3)
{
  *(_BYTE *)a1 = a2;
  a1[1] = 0LL;
  a1[2] = 0LL;
  a1[3] = 0LL;
  sub_10032A854(a1, a3);
  return a1;
}

void sub_1001DF664(_Unwind_Exception *exception_object)
{
  uint64_t v3 = v2;
  std::chrono::steady_clock::time_point v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 16) = v5;
    operator delete(v5);
  }

  _Unwind_Resume(exception_object);
}

void *sub_1001DF684(void *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__int128 __dst = v4;
  }

  unint64_t v5 = *((unsigned __int8 *)a2 + 23);
  if ((v5 & 0x80u) != 0LL) {
    unint64_t v5 = *((void *)a2 + 1);
  }
  if (v5 >= 0x20)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "string length exceeds maximum");
  }

  return __dst;
}

void sub_1001DF738(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1001DF764(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  *(void *)a1 = v3;
  *(void *)(a1 + *(void *)(v3 - 24)) = v4;
  unint64_t v5 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24LL));
  std::ios_base::init(v5, (void *)(a1 + 8));
  v5[1].__vftable = 0LL;
  v5[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf(v2);
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 8_Block_object_dispose(va, 8) = 0u;
  *(_DWORD *)(a1 + 104) = 16;
  return a1;
}

void sub_1001DF828(_Unwind_Exception *a1)
{
}

uint64_t sub_1001DF850(uint64_t a1)
{
  uint64_t v3 = a1 + 8;
  std::streambuf::~streambuf(v3);
  std::ios::~ios(a1 + 112);
  return a1;
}

void *sub_1001DF8D4(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_100130DA0(result, a4);
    CFDataRef result = (void *)sub_1001DF958((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }

  return result;
}

void sub_1001DF938( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + std::ostream::~ostream(v2, v3 + 8) = v10;
  sub_100130C0C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1001DF958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *(_BYTE *)uint64_t v4 = *(_BYTE *)v6;
      *(void *)(v4 + 16) = 0LL;
      *(void *)(v4 + 24) = 0LL;
      *(void *)(v4 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
      sub_1001309C0( (void *)(v4 + 8),  *(const void **)(v6 + 8),  *(void *)(v6 + 16),  *(void *)(v6 + 16) - *(void *)(v6 + 8));
      uint64_t v4 = v11 + 32;
      v11 += 32LL;
      v6 += 32LL;
    }

    while (v6 != a3);
  }

  char v9 = 1;
  sub_1001DFA0C((uint64_t)v8);
  return v4;
}

void sub_1001DF9F8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1001DFA0C(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_100130EFC(a1);
  }
  return a1;
}

__n128 sub_1001DFA48(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = &off_1007B5B08;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + std::ostream::~ostream(v2, v3 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_1001DFA88(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_1007B5B08;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + std::ostream::~ostream(v2, v3 + 8) = result;
  return result;
}

uint64_t sub_1001DFAB0(void *a1, unsigned int *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (uint64_t (*)(void *, void))a1[1];
  uint64_t v4 = (void *)(a1[3] + (v2 >> 1));
  if ((v2 & 1) != 0) {
    uint64_t v3 = *(uint64_t (**)(void *, void))(*v4 + v3);
  }
  return v3(v4, *a2);
}

uint64_t sub_1001DFAD0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1001DFB0C()
{
}

__n128 sub_1001DFB20(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = &off_1007B5BC8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + std::ostream::~ostream(v2, v3 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_1001DFB60(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_1007B5BC8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + std::ostream::~ostream(v2, v3 + 8) = result;
  return result;
}

uint64_t sub_1001DFB88(void *a1, unsigned int *a2, void *a3)
{
  uint64_t v3 = a1[2];
  uint64_t v4 = (uint64_t (*)(void *, void, void))a1[1];
  unint64_t v5 = (void *)(a1[3] + (v3 >> 1));
  if ((v3 & 1) != 0) {
    uint64_t v4 = *(uint64_t (**)(void *, void, void))(*v5 + v4);
  }
  return v4(v5, *a2, *a3);
}

uint64_t sub_1001DFBAC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1001DFBE8()
{
}

uint64_t sub_1001DFBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *(_BYTE *)uint64_t v4 = *(_BYTE *)v6;
      *(void *)(v4 + 16) = 0LL;
      *(void *)(v4 + 24) = 0LL;
      *(void *)(v4 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
      sub_1001309C0( (void *)(v4 + 8),  *(const void **)(v6 + 8),  *(void *)(v6 + 16),  *(void *)(v6 + 16) - *(void *)(v6 + 8));
      uint64_t v4 = v11 + 32;
      v11 += 32LL;
      v6 += 32LL;
    }

    while (v6 != a3);
  }

  char v9 = 1;
  sub_1001DFA0C((uint64_t)v8);
  return v4;
}

void sub_1001DFC94( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_1001DFCB0(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_1007B5C70;
  result[1] = v3;
  return result;
}

uint64_t sub_1001DFCE4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_1007B5C70;
  a2[1] = v2;
  return result;
}

uint64_t sub_1001DFD00(uint64_t a1, uint64_t a2, void *a3)
{
  if (sub_10032A158(a2))
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
      sub_10039CA38();
    }
  }

  else if (sub_10032A1C0(a2) == 5)
  {
    unint64_t v6 = sub_100357708(a3);
    int v7 = v6;
    if (!(_WORD)v6) {
      return 0LL;
    }
    uint64_t v8 = *(void *)(a1 + 8);
    *(_WORD *)uint64_t v8 = v6;
    *(_BYTE *)(v8 + 2) = 1;
    if ((v6 & 0xFF00000000LL) != 0) {
      std::to_string(&v15, BYTE3(v6));
    }
    else {
      sub_1000065CC(&v15, "N/A");
    }
    uint64_t v10 = (os_log_s *)(id)qword_1007F9AA0;
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      sub_10032B2C8((unsigned __int16)v7, __p);
      if (v14 >= 0) {
        uint64_t v11 = __p;
      }
      else {
        uint64_t v11 = (void **)__p[0];
      }
      uint64_t v12 = &v15;
      if ((v15.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v12 = (std::string *)v15.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136315650;
      uint64_t v17 = v11;
      __int16 v18 = 1024;
      int v19 = BYTE2(v7);
      __int16 v20 = 2080;
      uint64_t v21 = v12;
      _os_log_error_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "PRRose:applyConfigOptions,regulatory,failed to send regulatory config. Status: %s, numConfigsSetSuccessfully: %u , firstErroneousConfigId: %s",  buf,  0x1Cu);
      if (v14 < 0) {
        operator delete(__p[0]);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR))
  {
    sub_10039C9D4();
  }

  return 1LL;
}

void sub_1001DFEF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1001DFF1C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1001DFF58()
{
}

uint64_t sub_1001DFF64@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 - std::ostream::~ostream(v2, v3 + 8) = a2;
  atomic_load((unsigned int *)(result + 1240));
  return result;
}

uint64_t sub_1001DFF7C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 - std::ostream::~ostream(v2, v3 + 8) = a2;
  atomic_load((unsigned int *)(result + 1240));
  return result;
}

  ;
}

unsigned int *sub_1001DFFA8@<X0>(unsigned int *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 - std::ostream::~ostream(v2, v3 + 8) = a2;
  atomic_load(result);
  return result;
}

  ;
}

void sub_1001DFFC8(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
}

void sub_1001DFFDC()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  qword_1007F9AA0 = (uint64_t)os_log_create("com.apple.nearbyd", "Driver");
  objc_autoreleasePoolPop(v0);
}

double sub_1001E001C(uint64_t a1)
{
  v3[2] = xmmword_100428128;
  v3[3] = unk_100428138;
  v3[4] = xmmword_100428148;
  v3[0] = xmmword_100428108;
  v3[1] = unk_100428118;
  uint64_t v1 = sub_1001E0FB4(a1, (int *)v3, 5LL);
  *(void *)(v1 + 32) = 0LL;
  *(void *)(v1 + 24) = v1 + 32;
  *(void *)(v1 + 40) = 0LL;
  *(void *)(v1 + 4std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(_BYTE *)(v1 + 56) = 0;
  *(_BYTE *)(v1 + 10std::ostream::~ostream(v2, v3 + 8) = 0;
  double result = 0.0;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 89) = 0u;
  return result;
}

void sub_1001E00B4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_10000DE88(a1);
}

void sub_1001E00C4(uint64_t a1, unint64_t a2, int a3, double a4)
{
  if (*(_BYTE *)(a1 + 56))
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
      sub_10039CAC8();
    }
    uint64_t v10 = *(void **)(a1 + 32);
    char v9 = (uint64_t **)(a1 + 32);
    uint64_t v8 = v10;
    if (v10)
    {
      uint64_t v11 = v9;
      do
      {
        unint64_t v12 = v8[4];
        BOOL v13 = v12 >= a2;
        if (v12 >= a2) {
          char v14 = v8;
        }
        else {
          char v14 = v8 + 1;
        }
        if (v13) {
          uint64_t v11 = (uint64_t **)v8;
        }
        uint64_t v8 = (void *)*v14;
      }

      while (*v14);
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10039CA9C();
  }

void sub_1001E01A0(uint64_t a1, unint64_t a2, void *a3, double a4)
{
  id v7 = a3;
  if (*(_BYTE *)(a1 + 56))
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
      sub_10039CB6C();
    }
    uint64_t v10 = *(void **)(a1 + 32);
    char v9 = (void *)(a1 + 32);
    uint64_t v8 = v10;
    if (v10)
    {
      uint64_t v11 = v9;
      do
      {
        unint64_t v12 = v8[4];
        BOOL v13 = v12 >= a2;
        if (v12 >= a2) {
          char v14 = v8;
        }
        else {
          char v14 = v8 + 1;
        }
        if (v13) {
          uint64_t v11 = v8;
        }
        uint64_t v8 = (void *)*v14;
      }

      while (*v14);
      if (v11 != v9 && v11[4] <= a2) {
        sub_10026D900((uint64_t)(v11 + 5), v7, a4);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10039CB40();
  }
}

void sub_1001E027C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double sub_1001E028C(uint64_t a1, double a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_10039CBD0();
  }
  int v4 = *(_DWORD *)(a1 + 40);
  if (v4 >= 4) {
    int v4 = 4;
  }
  int v8 = v4;
  double v5 = a2 - *(double *)(a1 + 88);
  char v9 = &v8;
  unint64_t v6 = sub_100160ED4((uint64_t **)a1, &v8, (uint64_t)&unk_1004242F8, &v9);
  double result = v5 + *((double *)v6 + 5);
  *((double *)v6 + 5) = result;
  *(double *)(a1 + 8std::ostream::~ostream(v2, v3 + 8) = a2;
  return result;
}

void sub_1001E0338(uint64_t a1, unint64_t a2, int a3, double a4)
{
  unint64_t v40 = a2;
  if (*(_BYTE *)(a1 + 56))
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
      sub_10039CCC4();
    }
    int v8 = *(void **)(a1 + 32);
    if (!v8) {
      goto LABEL_31;
    }
    uint64_t v9 = a1 + 32;
    do
    {
      unint64_t v10 = v8[4];
      BOOL v11 = v10 >= a2;
      if (v10 >= a2) {
        unint64_t v12 = v8;
      }
      else {
        unint64_t v12 = v8 + 1;
      }
      if (v11) {
        uint64_t v9 = (uint64_t)v8;
      }
      int v8 = (void *)*v12;
    }

    while (*v12);
    if (v9 == a1 + 32 || *(void *)(v9 + 32) > a2)
    {
LABEL_31:
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
        sub_10039CC60();
      }
      sub_1001E028C(a1, a4);
      sub_10026CB1C(v29);
      int v41 = &v40;
      BOOL v13 = sub_1001E125C((uint64_t **)(a1 + 24), &v40, (uint64_t)&unk_1004242F8, (uint64_t **)&v41);
      __int128 v14 = *(_OWORD *)&v30[9];
      __int128 v16 = v29[3];
      __int128 v15 = *(_OWORD *)v30;
      *(_OWORD *)(v13 + 9) = v29[2];
      *(_OWORD *)(v13 + 11) = v16;
      *(_OWORD *)(v13 + 13) = v15;
      *(_OWORD *)((char *)v13 + 113) = v14;
      __int128 v17 = v29[1];
      *(_OWORD *)(v13 + 5) = v29[0];
      *(_OWORD *)(v13 + 7) = v17;
      __int16 v18 = v13 + 18;
      sub_100034A98((uint64_t)(v13 + 17), (void *)v13[18]);
      int v19 = v32;
      v13[17] = (uint64_t)v31;
      v13[18] = (uint64_t)v19;
      uint64_t v20 = v33;
      v13[19] = v33;
      if (v20)
      {
        void v19[2] = v18;
        int v31 = &v32;
        char v32 = 0LL;
        uint64_t v33 = 0LL;
      }

      else
      {
        v13[17] = (uint64_t)v18;
      }

      uint64_t v21 = v13 + 21;
      sub_100034A98((uint64_t)(v13 + 20), (void *)v13[21]);
      uint64_t v22 = v35;
      v13[20] = (uint64_t)v34;
      v13[21] = (uint64_t)v22;
      uint64_t v23 = v36;
      v13[22] = v36;
      if (v23)
      {
        v22[2] = v21;
        __int128 v34 = &v35;
        char v35 = 0LL;
        uint64_t v36 = 0LL;
      }

      else
      {
        v13[20] = (uint64_t)v21;
      }

      char v25 = (char *)v13[24];
      unsigned int v24 = v13 + 24;
      sub_10015B4D0((uint64_t)(v24 - 1), v25);
      uint64_t v26 = v38;
      *(v24 - 1) = v37;
      *unsigned int v24 = v26;
      uint64_t v27 = v39;
      v24[1] = v39;
      if (v27)
      {
        *(void *)(v26 + 16) = v24;
        std::stringbuf v37 = &v38;
        uint64_t v38 = 0LL;
        uint64_t v39 = 0LL;
        uint64_t v26 = 0LL;
      }

      else
      {
        *(v24 - 1) = v24;
      }

      sub_10015B4D0((uint64_t)&v37, (char *)v26);
      sub_100034A98((uint64_t)&v34, v35);
      sub_100034A98((uint64_t)&v31, v32);
      *(void *)&v29[0] = &v40;
      BOOL v28 = sub_1001E125C((uint64_t **)(a1 + 24), &v40, (uint64_t)&unk_1004242F8, (uint64_t **)v29);
      sub_10026CB20((uint64_t)(v28 + 5), a3, *(void **)(a1 + 48), *(void *)(a1 + 104), a4);
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10039CC34();
  }

void sub_1001E05E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1001E05FC(uint64_t a1)
{
  return a1;
}

void sub_1001E0640(uint64_t a1, unint64_t a2, double a3)
{
  if (*(_BYTE *)(a1 + 56))
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
      sub_10039CDB8();
    }
    unint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      uint64_t v7 = a1 + 32;
      do
      {
        unint64_t v8 = v6[4];
        BOOL v9 = v8 >= a2;
        if (v8 >= a2) {
          unint64_t v10 = v6;
        }
        else {
          unint64_t v10 = v6 + 1;
        }
        if (v9) {
          uint64_t v7 = (uint64_t)v6;
        }
        unint64_t v6 = (void *)*v10;
      }

      while (*v10);
      if (v7 != a1 + 32 && *(void *)(v7 + 32) <= a2)
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
          sub_10039CD54();
        }
        sub_1001E028C(a1, a3);
        sub_10026CE7C((double *)(v7 + 40), a3);
        *(double *)(a1 + 80) = *(double *)(v7 + 48) + *(double *)(a1 + 80);
        sub_10001EA5C((uint64_t **)(a1 + 24), (uint64_t *)v7);
        sub_1001B9924(v7 + 32);
        operator delete((void *)v7);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10039CD28();
  }

void sub_1001E0780(uint64_t a1, void *a2, int a3)
{
  *(_DWORD *)(a1 + 104) = a3;
  *(_BYTE *)(a1 + 10std::ostream::~ostream(v2, v3 + 8) = 1;
}

void sub_1001E07B4(uint64_t a1, double a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_10039CE1C();
  }
  *(double *)(a1 + 64) = a2;
  *(_BYTE *)(a1 + 56) = 1;
}

void sub_1001E0814(uint64_t a1, double a2)
{
  if (*(_BYTE *)(a1 + 56))
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
      sub_10039CEAC();
    }
    int v4 = *(void **)(a1 + 24);
    if (v4 != (void *)(a1 + 32))
    {
      do
      {
        double v5 = (void *)v4[1];
        unint64_t v6 = v4;
        if (v5)
        {
          do
          {
            uint64_t v7 = v5;
            double v5 = (void *)*v5;
          }

          while (v5);
        }

        else
        {
          do
          {
            uint64_t v7 = (void *)v6[2];
            BOOL v8 = *v7 == (void)v6;
            unint64_t v6 = v7;
          }

          while (!v8);
        }

        BOOL v9 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 134217984;
          double v14 = a2;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "#handoffca removedDevice() called within sessionEnded(), monotonicTimeSeconds: %f, s",  buf,  0xCu);
        }

        sub_1001E0640(a1, v4[4], a2);
        int v4 = v7;
      }

      while (v7 != (void *)(a1 + 32));
    }

    *(double *)(a1 + 72) = a2 - *(double *)(a1 + 64);
    unint64_t v10 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = *(void *)(a1 + 64);
      uint64_t v12 = *(void *)(a1 + 72);
      *(_DWORD *)std::string buf = 134218496;
      double v14 = a2;
      __int16 v15 = 2048;
      uint64_t v16 = v11;
      __int16 v17 = 2048;
      uint64_t v18 = v12;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#handoffca no objects in session. Calling resetStatistics within removedDevice() monotonicTimeSeconds: %f s, fSe ssionStartTime: %f s, fSessionDuration: %f s",  buf,  0x20u);
    }

    *(double *)(a1 + 96) = *(double *)(a1 + 80) + *(double *)(a1 + 72) / 3600.0 * 12.65;
    sub_1001E0A38(a1);
    sub_1001E0EDC(a1);
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10039CE80();
  }

void sub_1001E0A38(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 96);
    uint64_t v4 = *(void *)(a1 + 72);
    char v25 = &dword_100428158;
    double v5 = sub_100160ED4((uint64_t **)a1, &dword_100428158, (uint64_t)&unk_1004242F8, &v25)[5];
    char v25 = &dword_10042815C;
    unint64_t v6 = sub_100160ED4((uint64_t **)a1, &dword_10042815C, (uint64_t)&unk_1004242F8, &v25)[5];
    char v25 = &dword_100428160;
    uint64_t v7 = sub_100160ED4((uint64_t **)a1, &dword_100428160, (uint64_t)&unk_1004242F8, &v25)[5];
    char v25 = &dword_100428164;
    BOOL v8 = sub_100160ED4((uint64_t **)a1, &dword_100428164, (uint64_t)&unk_1004242F8, &v25)[5];
    *(_DWORD *)std::string buf = 134219520;
    *(void *)&uint8_t buf[4] = v3;
    __int16 v29 = 1024;
    int v30 = 1;
    __int16 v31 = 2048;
    uint64_t v32 = v4;
    __int16 v33 = 2048;
    __int128 v34 = v5;
    __int16 v35 = 2048;
    uint64_t v36 = v6;
    __int16 v37 = 2048;
    uint64_t v38 = v7;
    __int16 v39 = 2048;
    unint64_t v40 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#handoffca Handoff ranging session report: {\n EnergyExpendedPerSession:%f mWh,\n NumberOfSessions %d,\n SessionDuration %f s,\n TimeSpentRanging1Device %f s,\n TimeSpentRanging2Device %f s,\n TimeSpentRanging3Device %f s,\n TimeSpentRanging4OrMoreDevice %f s}",  buf,  0x44u);
  }

  v26[0] = @"energyExpendedPerSession";
  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 96)));
  v27[0] = v9;
  v26[1] = @"numberOfSessions";
  unint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 1LL));
  v27[1] = v10;
  _OWORD v26[2] = @"sessionDuration";
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 72)));
  v27[2] = v11;
  v26[3] = @"timeSpentRanging1Device";
  *(void *)std::string buf = &dword_100428158;
  uint64_t v12 = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *((double *)sub_100160ED4((uint64_t **)a1, &dword_100428158, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 5));
  BOOL v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  v27[3] = v13;
  v26[4] = @"timeSpentRanging2Device";
  *(void *)std::string buf = &dword_10042815C;
  double v14 = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *((double *)sub_100160ED4((uint64_t **)a1, &dword_10042815C, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 5));
  __int16 v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  v27[4] = v15;
  void v26[5] = @"timeSpentRanging3Device";
  *(void *)std::string buf = &dword_100428160;
  uint64_t v16 = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *((double *)sub_100160ED4((uint64_t **)a1, &dword_100428160, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 5));
  __int16 v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  void v27[5] = v17;
  v26[6] = @"timeSpentRanging4OrMoreDevice";
  *(void *)std::string buf = &dword_100428164;
  uint64_t v18 = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *((double *)sub_100160ED4((uint64_t **)a1, &dword_100428164, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 5));
  int v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
  v27[6] = v19;
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v27,  v26,  7LL));

  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472LL;
  v23[2] = sub_1001E0FAC;
  v23[3] = &unk_1007A2298;
  id v21 = v20;
  id v24 = v21;
  AnalyticsSendEventLazy(@"com.apple.nearbyinteraction.b520session", v23);
  uint64_t v22 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "#handoffca Uploaded ranging session information through AnalyticsSendEventLazy",  buf,  2u);
  }
}

void sub_1001E0E68( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

double sub_1001E0EDC(uint64_t a1)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_10039CF10();
  }
  void v5[2] = xmmword_100428128;
  void v5[3] = unk_100428138;
  v5[4] = xmmword_100428148;
  v5[0] = xmmword_100428108;
  v5[1] = unk_100428118;
  sub_1001E1388((uint64_t **)a1, (int *)v5, &v6);
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v2 = a1 + 32;
  sub_1001B98DC(v2 - 8, v3);
  *(void *)(v2 - std::ostream::~ostream(v2, v3 + 8) = v2;
  *(void *)uint64_t v2 = 0LL;
  *(void *)(v2 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(_BYTE *)(v2 + 24) = 0;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 4std::ostream::~ostream(v2, v3 + 8) = 0u;
  *(void *)(v2 + 64) = 0LL;
  return result;
}

id sub_1001E0FAC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

uint64_t sub_1001E0FB4(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 16 * a3;
    do
    {
      sub_1001E1030((uint64_t **)a1, v4, a2, a2);
      a2 += 4;
      v6 -= 16LL;
    }

    while (v6);
  }

  return a1;
}

void sub_1001E1018(_Unwind_Exception *a1)
{
}

uint64_t *sub_1001E1030(uint64_t **a1, uint64_t *a2, int *a3, _OWORD *a4)
{
  uint64_t v6 = sub_1001E10B4(a1, a2, &v11, &v10, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    BOOL v8 = (uint64_t **)v6;
    uint64_t v7 = (uint64_t *)operator new(0x30uLL);
    *((_OWORD *)v7 + 2) = *a4;
    sub_10001E548(a1, (uint64_t)v11, v8, v7);
  }

  return v7;
}

uint64_t *sub_1001E10B4(void *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, int *a5)
{
  double v5 = a1 + 1;
  if (a1 + 1 == a2 || (int v6 = *a5, v7 = *((_DWORD *)a2 + 8), *a5 < v7))
  {
    BOOL v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      uint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }

      else
      {
        *a3 = a2;
        return a2;
      }
    }

    if (v8)
    {
      BOOL v9 = (uint64_t *)*a2;
      do
      {
        uint64_t v10 = v9;
        BOOL v9 = (uint64_t *)v9[1];
      }

      while (v9);
    }

    else
    {
      BOOL v13 = a2;
      do
      {
        uint64_t v10 = (uint64_t *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        BOOL v13 = v10;
      }

      while (v14);
    }

    int v15 = *a5;
    if (*((_DWORD *)v10 + 8) < *a5) {
      goto LABEL_17;
    }
    uint64_t v16 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          __int16 v17 = (uint64_t *)v16;
          int v18 = *(_DWORD *)(v16 + 32);
          if (v15 >= v18) {
            break;
          }
          uint64_t v16 = *v17;
          double v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }

        if (v18 >= v15) {
          break;
        }
        double v5 = v17 + 1;
        uint64_t v16 = v17[1];
      }

      while (v16);
    }

    else
    {
      __int16 v17 = a1 + 1;
    }

uint64_t *sub_1001E125C(uint64_t **a1, unint64_t *a2, uint64_t a3, uint64_t **a4)
{
  int v7 = a1 + 1;
  int v6 = a1[1];
  BOOL v8 = a1 + 1;
  BOOL v9 = a1 + 1;
  if (v6)
  {
    unint64_t v10 = *a2;
    while (1)
    {
      while (1)
      {
        BOOL v9 = (uint64_t **)v6;
        unint64_t v11 = v6[4];
        if (v10 >= v11) {
          break;
        }
        int v6 = *v9;
        BOOL v8 = v9;
        if (!*v9) {
          goto LABEL_9;
        }
      }

      if (v11 >= v10) {
        break;
      }
      int v6 = v9[1];
      if (!v6)
      {
        BOOL v8 = v9 + 1;
        goto LABEL_9;
      }
    }
  }

  else
  {
LABEL_9:
    uint64_t v12 = (uint64_t *)operator new(0xD0uLL);
    v14[1] = v7;
    void v12[4] = **a4;
    sub_10026CB1C(v12 + 5);
    char v15 = 1;
    sub_10001E548(a1, (uint64_t)v9, v8, v12);
    v14[0] = 0LL;
    sub_1001E1344((uint64_t)v14, 0LL);
    return v12;
  }

  return (uint64_t *)v9;
}

void sub_1001E1344(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_1001B9924((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

uint64_t **sub_1001E1388(uint64_t **result, int *a2, int *a3)
{
  double v5 = result;
  if (result[2])
  {
    int v6 = *result;
    int v7 = result[1];
    void *result = (uint64_t *)(result + 1);
    v7[2] = 0LL;
    result[1] = 0LL;
    result[2] = 0LL;
    if (v6[1]) {
      BOOL v8 = (uint64_t *)v6[1];
    }
    else {
      BOOL v8 = v6;
    }
    unint64_t v10 = result;
    unint64_t v11 = v8;
    uint64_t v12 = v8;
    if (v8)
    {
      unint64_t v11 = sub_100131360((uint64_t)v8);
      while (a2 != a3)
      {
        sub_1001E148C(v5, a2, (uint64_t)v8);
        if ((v9 & 1) != 0)
        {
          BOOL v8 = v11;
          uint64_t v12 = v11;
          if (!v11)
          {
            a2 += 4;
            break;
          }

          unint64_t v11 = sub_100131360((uint64_t)v11);
        }

        else
        {
          BOOL v8 = v12;
        }

        a2 += 4;
        if (!v8) {
          break;
        }
      }
    }

    double result = (uint64_t **)sub_1001313B4((uint64_t)&v10);
  }

  while (a2 != a3)
  {
    double result = sub_1001E1520(v5, a2, a2);
    a2 += 4;
  }

  return result;
}

void sub_1001E1478(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t **sub_1001E148C(uint64_t **a1, int *a2, uint64_t a3)
{
  uint64_t v4 = a1 + 1;
  double v5 = a1[1];
  int v6 = *a2;
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        int v7 = (uint64_t **)v5;
        int v8 = *((_DWORD *)v5 + 8);
        if (v6 >= v8) {
          break;
        }
        double v5 = *v7;
        uint64_t v4 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }

      if (v8 >= v6) {
        return v7;
      }
      double v5 = v7[1];
      if (!v5)
      {
        uint64_t v4 = v7 + 1;
        goto LABEL_9;
      }
    }
  }

  else
  {
    int v7 = a1 + 1;
LABEL_9:
    *(_DWORD *)(a3 + 32) = v6;
    *(void *)(a3 + 40) = *((void *)a2 + 1);
    sub_10001E548(a1, (uint64_t)v7, v4, (uint64_t *)a3);
  }

  return (uint64_t **)a3;
}

uint64_t **sub_1001E1520(uint64_t **a1, int *a2, _OWORD *a3)
{
  int v6 = a1 + 1;
  double v5 = a1[1];
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        int v8 = (uint64_t **)v5;
        int v9 = *((_DWORD *)v5 + 8);
        if (v7 >= v9) {
          break;
        }
        double v5 = *v8;
        int v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (v9 >= v7) {
        break;
      }
      double v5 = v8[1];
      if (!v5)
      {
        int v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    int v8 = a1 + 1;
LABEL_10:
    unint64_t v10 = (uint64_t *)operator new(0x30uLL);
    *((_OWORD *)v10 + 2) = *a3;
    sub_10001E548(a1, (uint64_t)v8, v6, v10);
    return (uint64_t **)v10;
  }

  return v8;
}

void *sub_1001E15D8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B6270[a1]);
}

void *sub_1001E15EC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B62C8[a1]);
}

void *sub_1001E1600@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B6310[a1]);
}

void *sub_1001E1614@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B6330[a1]);
}

void sub_1001E1698(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E171C(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) initPrivate];
  uint64_t v2 = (void *)qword_1007F9AA8;
  qword_1007F9AA8 = (uint64_t)v1;
}

void sub_1001E18F0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock, void *a10)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

id sub_1001E1928(uint64_t a1)
{
  return [*(id *)(a1 + 32) processVisionInput:*(void *)(a1 + 40)];
}

void sub_1001E1A64( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001E1AD4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1001E1B20(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v45 = a1;
  int v46 = 0;
  unsigned __int8 v5 = *(_BYTE *)(a2 + 16);
  if (*(_BYTE *)(a2 + 160)) {
    v5 |= 8u;
  }
  if (*(_BYTE *)(a2 + 72))
  {
    if (*(_BYTE *)(a2 + 112))
    {
      int v6 = (os_log_s *)qword_1008000A0;
      BOOL result = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT);
      if (result)
      {
        sub_10039CF88(v6, v8, v9, v10, v11, v12, v13, v14);
        return 0LL;
      }

      return result;
    }

    v5 |= 2u;
    char v15 = (double *)(a2 + 80);
  }

  else
  {
    char v15 = (double *)(a2 + 80);
    if (*(_BYTE *)(a2 + 112)) {
      v5 |= 4u;
    }
  }

  unsigned int v16 = v5;
  sub_1000065CC(__p, "measurement type");
  sub_1001E22FC((uint64_t)&v45, 4u, v16);
  if (v44 < 0) {
    operator delete(__p[0]);
  }
  if (*(_BYTE *)(a2 + 16))
  {
    double v17 = *(double *)a2;
    sub_1000065CC(__p, "bounded displacement enter timestamp");
    sub_1001E23EC((uint64_t)&v45, 0xCu, 0.0, 409.5, 0.1, v17);
    if (v44 < 0) {
      operator delete(__p[0]);
    }
    if (!*(_BYTE *)(a2 + 16)) {
      goto LABEL_90;
    }
    int v18 = *(_DWORD *)(a2 + 8);
    if (v18)
    {
      if (v18 == 1)
      {
        sub_1000065CC(__p, "bounded displacement category::slowly_moving");
        sub_1001E22FC((uint64_t)&v45, 2u, 1u);
      }

      else
      {
        if (v18 != 2) {
          goto LABEL_24;
        }
        sub_1000065CC(__p, "bounded displacement category::walking_or_unknown");
        sub_1001E22FC((uint64_t)&v45, 2u, 2u);
      }
    }

    else
    {
      sub_1000065CC(__p, "bounded displacement category::static");
      sub_1001E22FC((uint64_t)&v45, 2u, 0);
    }

    if (v44 < 0) {
      operator delete(__p[0]);
    }
  }

void sub_1001E227C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001E22FC(uint64_t a1, unsigned int a2, unsigned int a3)
{
  int v6 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *(_DWORD *)(a1 + 8);
    v9[0] = 67109632;
    v9[1] = v8;
    __int16 v10 = 1024;
    unsigned int v11 = a2;
    __int16 v12 = 1024;
    unsigned int v13 = a3;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "FindingFrame,writing unsigned curPos=%i, bitLen=%i, bitContents=%x",  (uint8_t *)v9,  0x14u);
  }

  sub_1001E2F00((unint64_t **)a1, *(_DWORD *)(a1 + 8), a2, a3);
  *(_DWORD *)(a1 + 8) += a2;
  return 1LL;
}

uint64_t sub_1001E23EC(uint64_t a1, unsigned int a2, double a3, double a4, double a5, double a6)
{
  if (a6 < a3 || a6 > a4)
  {
    __int16 v12 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_10039CFBC(v12, v13, v14, v15, v16, v17, v18, v19);
    }
  }

  unsigned int v20 = vcvtad_u64_f64((a6 - a3) / a5);
  int v21 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
  {
    int v23 = *(_DWORD *)(a1 + 8);
    v24[0] = 67109888;
    v24[1] = v23;
    __int16 v25 = 1024;
    unsigned int v26 = a2;
    __int16 v27 = 1024;
    unsigned int v28 = v20;
    __int16 v29 = 2048;
    double v30 = a6;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "FindingFrame,writing double curPos=%i, bitLen=%i, bitContents=%x, contents=%lf",  (uint8_t *)v24,  0x1Eu);
  }

  sub_1001E2F00((unint64_t **)a1, *(_DWORD *)(a1 + 8), a2, v20);
  *(_DWORD *)(a1 + 8) += a2;
  return 1LL;
}

uint64_t sub_1001E2534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_BYTE *)a2 = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 72) = 0;
  *(_BYTE *)(a2 + 80) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  *(_OWORD *)(a2 + 113) = *(_OWORD *)__p;
  *(void *)(a2 + 129) = *(void *)&__p[16];
  *(_BYTE *)(a2 + 160) = 0;
  *(_WORD *)(a2 + 16std::ostream::~ostream(v2, v3 + 8) = 0;
  memset(__p, 0, sizeof(__p));
  sub_1001309C0(__p, *(const void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 8) - *(void *)a1);
  int v59 = 0;
  int v5 = sub_1001E2A94((uint64_t)__p, 4u, &v56);
  char v6 = v56;
  if ((v56 & 1) == 0) {
    goto LABEL_13;
  }
  BOOL v7 = sub_1001E2B94((uint64_t)__p, 0xCu, (double *)&v55, 0.0, 0.1);
  int v8 = sub_1001E2A94((uint64_t)__p, 2u, &v57);
  if (v5) {
    BOOL v9 = v7;
  }
  else {
    BOOL v9 = 0;
  }
  if (v57 == 2)
  {
    int v44 = *(unsigned __int8 *)(a2 + 16);
    *(void *)a2 = v55;
    *(_DWORD *)(a2 + std::ostream::~ostream(v2, v3 + 8) = 2;
    if (v44) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

  if (v57 != 1)
  {
    if (v57) {
      goto LABEL_72;
    }
    int v10 = *(unsigned __int8 *)(a2 + 16);
    *(void *)a2 = v55;
    *(_DWORD *)(a2 + std::ostream::~ostream(v2, v3 + 8) = 0;
    if (v10) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

  int v11 = *(unsigned __int8 *)(a2 + 16);
  *(void *)a2 = v55;
  *(_DWORD *)(a2 + std::ostream::~ostream(v2, v3 + 8) = 1;
  if (!v11) {
LABEL_11:
  }
    *(_BYTE *)(a2 + 16) = 1;
LABEL_12:
  int v5 = v8 & v9;
LABEL_13:
  int v12 = v5 != 0;
  if ((v6 & 2) == 0) {
    goto LABEL_22;
  }
  BOOL v13 = sub_1001E2B94((uint64_t)__p, 0xCu, (double *)&v55, 0.0, 0.1);
  BOOL v14 = sub_1001E2B94((uint64_t)__p, 6u, &v53, 0.0, 0.1);
  int v15 = sub_1001E2A94((uint64_t)__p, 1u, (int *)&v54);
  unsigned int v16 = v54;
  if (v54 > 1) {
    goto LABEL_72;
  }
  int v17 = v15 && v13 && v14;
  BOOL v18 = sub_1001E2B94((uint64_t)__p, 0xDu, (double *)&v52, -409.6, 0.1);
  BOOL v19 = sub_1001E2B94((uint64_t)__p, 0xDu, (double *)&v51, -409.6, 0.1);
  BOOL v20 = sub_1001E2B94((uint64_t)__p, 9u, (double *)&v50, -25.6, 0.1);
  uint64_t v22 = v52;
  double v21 = v53;
  int v12 = v5 && v17 & (v18 && v19 && v20);
  uint64_t v24 = v50;
  uint64_t v23 = v51;
  int v25 = *(unsigned __int8 *)(a2 + 72);
  *(void *)(a2 + 24) = v55;
  *(double *)(a2 + 32) = v21;
  *(_DWORD *)(a2 + 40) = v16;
  *(void *)(a2 + 4std::ostream::~ostream(v2, v3 + 8) = v22;
  *(void *)(a2 + 56) = v23;
  *(void *)(a2 + 64) = v24;
  if (!v25)
  {
    *(_BYTE *)(a2 + 72) = 1;
    if ((v6 & 4) == 0) {
      goto LABEL_24;
    }
  }

  else
  {
LABEL_22:
    if ((v6 & 4) == 0) {
      goto LABEL_24;
    }
  }

  BOOL v26 = sub_1001E2B94((uint64_t)__p, 0xCu, (double *)&v55, 0.0, 0.1);
  BOOL v27 = sub_1001E2B94((uint64_t)__p, 6u, &v53, 0.0, 0.1);
  BOOL v28 = sub_1001E2B94((uint64_t)__p, 8u, (double *)&v52, -6.4, 0.05);
  v12 &= (v26 && v27) & v28 & sub_1001E2B94((uint64_t)__p, 8u, (double *)&v51, -6.4, 0.05);
  uint64_t v30 = v52;
  double v29 = v53;
  uint64_t v31 = v51;
  int v32 = *(unsigned __int8 *)(a2 + 112);
  *(void *)(a2 + 80) = v55;
  *(double *)(a2 + 8std::ostream::~ostream(v2, v3 + 8) = v29;
  *(void *)(a2 + 96) = v30;
  *(void *)(a2 + 104) = v31;
  if (!v32)
  {
    *(_BYTE *)(a2 + 112) = 1;
    if ((v6 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_25;
  }

uint64_t sub_1001E2A94(uint64_t a1, unsigned int a2, int *a3)
{
  *a3 = 0;
  BOOL v6 = sub_1001E2FCC((uint64_t *)a1, *(_DWORD *)(a1 + 24), a2, a3);
  uint64_t result = 0LL;
  if (v6)
  {
    int v8 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
    {
      int v9 = *(_DWORD *)(a1 + 24);
      int v10 = *a3;
      v11[0] = 67109632;
      v11[1] = v9;
      __int16 v12 = 1024;
      unsigned int v13 = a2;
      __int16 v14 = 1024;
      int v15 = v10;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "FindingFrame,reading unsigned curPos=%i, bitLen=%i, retVal=%x",  (uint8_t *)v11,  0x14u);
    }

    *(_DWORD *)(a1 + 24) += a2;
    return 1LL;
  }

  return result;
}

BOOL sub_1001E2B94(uint64_t a1, unsigned int a2, double *a3, double a4, double a5)
{
  unsigned int v16 = 0;
  BOOL v10 = sub_1001E2FCC((uint64_t *)a1, *(_DWORD *)(a1 + 24), a2, &v16);
  if (v10)
  {
    unsigned int v11 = v16;
    *a3 = a4 + (double)v16 * a5;
    __int16 v12 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
    {
      int v14 = *(_DWORD *)(a1 + 24);
      double v15 = *a3;
      *(_DWORD *)std::string buf = 67109888;
      int v18 = v14;
      __int16 v19 = 1024;
      unsigned int v20 = a2;
      __int16 v21 = 1024;
      unsigned int v22 = v11;
      __int16 v23 = 2048;
      double v24 = v15;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "FindingFrame,reading double curPos=%i, bitLen=%i, extractedVal=%x, retVal=%lf",  buf,  0x1Eu);
    }

    *(_DWORD *)(a1 + 24) += a2;
  }

  return v10;
}

uint64_t sub_1001E2CC0(uint64_t **a1, unsigned __int8 **a2)
{
  uint64_t v4 = *a2;
  int v5 = a2[1];
  if (*a2 != v5)
  {
    do
    {
      uint64_t v6 = *v4;
      *(_DWORD *)((char *)&v19.__vftable + *(void *)(v18 - 24)) |= 0x4000u;
      v16.__r_.__value_.__s.__data_[0] = 48;
      BOOL v7 = sub_100138E6C(&v18, (char *)&v16);
      uint64_t v8 = *v7;
      *(uint64_t *)((char *)v7 + *(void *)(*v7 - 24) + 24) = 2LL;
      *(_DWORD *)((char *)v7 + *(void *)(v8 - 24) + std::ostream::~ostream(v2, v3 + 8) = *(_DWORD *)((_BYTE *)v7 + *(void *)(v8 - 24) + 8) & 0xFFFFFFB5 | 8;
      std::ostream::operator<<(v7, v6);
      ++v4;
    }

    while (v4 != v5);
  }

  int v9 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
  {
    int v12 = *((char *)a1 + 23);
    unsigned int v13 = (uint64_t **)*a1;
    std::stringbuf::str(&v16, &v19);
    uint64_t v14 = (uint64_t)(v12 >= 0 ? a1 : v13);
    double v15 = (v16.__r_.__value_.__s.__size_ & 0x80u) == 0
        ? &v16
        : (std::stringbuf::string_type *)v16.__r_.__value_.__r.__words[0];
    *(_DWORD *)std::string buf = 136315394;
    uint64_t v22 = v14;
    __int16 v23 = 2080;
    double v24 = v15;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "FindingFrame,dataFrame [%s]: %s",  buf,  0x16u);
  }

  *(void *)((char *)v17
  uint64_t v18 = v10;
  std::streambuf::~streambuf(&v19);
  return std::ios::~ios(&v20);
}

void sub_1001E2ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  sub_100045880((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001E2F00(unint64_t **a1, unsigned int a2, unsigned int a3, unsigned int a4)
{
  if (a3)
  {
    unsigned int v5 = a3;
    do
    {
      unsigned int v7 = a2;
      unint64_t v8 = (unint64_t)a2 >> 3;
      char v9 = a2 & 7;
      if (v5 >= 8 - (a2 & 7)) {
        int v10 = 8 - (a2 & 7);
      }
      else {
        int v10 = v5;
      }
      unint64_t v11 = **a1;
      unint64_t v12 = (*a1)[1] - v11;
      if (v12 <= (unint64_t)a2 >> 3)
      {
        sub_1000353EC(*a1, (v8 + 1) - v12);
        unint64_t v11 = **a1;
        unint64_t v12 = (*a1)[1] - v11;
      }

      if (v12 <= v8) {
        sub_1001E3048();
      }
      *(_BYTE *)(v11 + v8) |= (a4 & ~(-1 << v10)) << v9;
      a4 >>= v10;
      a2 = v10 + v7;
      v5 -= v10;
    }

    while (v5);
  }

  return 1LL;
}

BOOL sub_1001E2FCC(uint64_t *a1, unsigned int a2, unsigned int a3, _DWORD *a4)
{
  *a4 = 0;
  if (!a3) {
    return 1LL;
  }
  int v4 = 0;
  int v5 = 0;
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1] - *a1;
  do
  {
    BOOL result = v7 > (unint64_t)a2 >> 3;
    unsigned int v9 = 8 - (a2 & 7);
    if (a3 < v9) {
      unsigned int v9 = a3;
    }
    v5 |= ((*(unsigned __int8 *)(v6 + ((unint64_t)a2 >> 3)) >> (a2 & 7)) & ~(-1 << v9)) << v4;
    *a4 = v5;
    a2 += v9;
    v4 += v9;
    a3 -= v9;
  }

  while (a3);
  return result;
}

void sub_1001E3048()
{
}

void sub_1001E312C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E31C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E327C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E334C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E3418(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E3508(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E35EC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001E3678(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E3730(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E37E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E3888(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1001E38C4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B63A8)[a1]);
}

void *sub_1001E38D8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B6400)[a1]);
}

void *sub_1001E38EC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B6448)[a1]);
}

void *sub_1001E3900@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B6468)[a1]);
}

void sub_1001E3C90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E3D28( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  int v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)&OBJC_CLASS___NIServerSessionLifeCycleManager;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_1001E3DEC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_1001E3EAC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001E3F8C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001E3F9C(uint64_t a1)
{
}

void sub_1001E3FA4(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 8) allKeys]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  int v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1001E4074(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1000065CC(__p, "runWithConfigurationCalled");
  uint64_t v6 = (__int128 *)__p;
  uint64_t v3 = sub_1001E68F8(v2 + 56, __p, (uint64_t)&unk_1004242F8, &v6);
  ++v3[5];
  if (v10 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136LL);
    *(_DWORD *)std::stringbuf::string_type __p = 138412546;
    *(void *)&__p[4] = @"runWithConfigurationCalled";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#lifecycle,%@ for session identifier: %@",  __p,  0x16u);
  }

  *(_BYTE *)(*(void *)(a1 + 32) + 49LL) = 1;
}

void sub_1001E4198( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1001E41BC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _watchdogLoop];
}

id sub_1001E421C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1000065CC(__p, "pauseCalled");
  unint64_t v7 = (__int128 *)__p;
  uint64_t v3 = sub_1001E68F8(v2 + 56, __p, (uint64_t)&unk_1004242F8, &v7);
  ++v3[5];
  if (v11 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136LL);
    *(_DWORD *)std::stringbuf::string_type __p = 138412546;
    *(void *)&__p[4] = @"pauseCalled";
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#lifecycle,%@ for session identifier: %@",  __p,  0x16u);
  }

  id result = [*(id *)(a1 + 32) _removeAllPeers];
  *(_BYTE *)(*(void *)(a1 + 32) + 49LL) = 0;
  return result;
}

void sub_1001E4344( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1001E43C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1000065CC(__p, "invalidateCalled");
  unint64_t v7 = (__int128 *)__p;
  uint64_t v3 = sub_1001E68F8(v2 + 56, __p, (uint64_t)&unk_1004242F8, &v7);
  ++v3[5];
  if (v11 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136LL);
    *(_DWORD *)std::stringbuf::string_type __p = 138412546;
    *(void *)&__p[4] = @"invalidateCalled";
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#lifecycle,%@ for session identifier: %@",  __p,  0x16u);
  }

  id result = [*(id *)(a1 + 32) _removeAllPeers];
  *(_BYTE *)(*(void *)(a1 + 32) + 52LL) = 1;
  return result;
}

void sub_1001E44EC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001E4568(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1000065CC(__p, "failedToAddPeer");
  uint64_t v6 = (__int128 *)__p;
  uint64_t v3 = sub_1001E68F8(v2 + 56, __p, (uint64_t)&unk_1004242F8, &v6);
  ++v3[5];
  if (v10 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136LL);
    *(_DWORD *)std::stringbuf::string_type __p = 138412546;
    *(void *)&__p[4] = @"failedToAddPeer";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#lifecycle,%@ for session identifier: %@",  __p,  0x16u);
  }

void sub_1001E4680( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001E46FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1000065CC(__p, "failedToRemovePeer");
  uint64_t v6 = (__int128 *)__p;
  uint64_t v3 = sub_1001E68F8(v2 + 56, __p, (uint64_t)&unk_1004242F8, &v6);
  ++v3[5];
  if (v10 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136LL);
    *(_DWORD *)std::stringbuf::string_type __p = 138412546;
    *(void *)&__p[4] = @"failedToRemovePeer";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#lifecycle,%@ for session identifier: %@",  __p,  0x16u);
  }

void sub_1001E4814( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1001E48B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1000065CC(__p, "startedDiscoveringPeersWithTokens");
  unint64_t v7 = (__int128 *)__p;
  uint64_t v3 = sub_1001E68F8(v2 + 56, __p, (uint64_t)&unk_1004242F8, &v7);
  ++v3[5];
  if (v11 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136LL);
    *(_DWORD *)std::stringbuf::string_type __p = 138412546;
    *(void *)&__p[4] = @"startedDiscoveringPeersWithTokens";
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#lifecycle,%@ for session identifier: %@",  __p,  0x16u);
  }

  *(_BYTE *)(*(void *)(a1 + 32) + 48LL) = 1;
  return [*(id *)(a1 + 32) _startMonitoringPeersActivity:*(void *)(a1 + 40)];
}

void sub_1001E49E0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001E4A80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1000065CC(__p, "stoppedDiscoveringPeersWithTokens");
  __int16 v9 = (__int128 *)__p;
  uint64_t v3 = sub_1001E68F8(v2 + 56, __p, (uint64_t)&unk_1004242F8, &v9);
  ++v3[5];
  if (SHIBYTE(v13) < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 136LL);
    *(_DWORD *)std::stringbuf::string_type __p = 138412802;
    *(void *)&__p[4] = @"stoppedDiscoveringPeersWithTokens";
    __int16 v11 = 2112;
    uint64_t v12 = v5;
    __int16 v13 = 2112;
    uint64_t v14 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#lifecycle,%@ %@ for session identifier: %@",  __p,  0x20u);
  }

  [*(id *)(*(void *)(a1 + 32) + 8) removeObjectsForKeys:*(void *)(a1 + 40)];
  if (![*(id *)(*(void *)(a1 + 32) + 8) count])
  {
    *(_BYTE *)(*(void *)(a1 + 32) + 48LL) = 0;
    unint64_t v7 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 136LL);
      *(_DWORD *)std::stringbuf::string_type __p = 138412546;
      *(void *)&__p[4] = @"removed all peers, discovery is inactive.";
      __int16 v11 = 2112;
      uint64_t v12 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#lifecycle,%@ for session identifier: %@",  __p,  0x16u);
    }
  }

void sub_1001E4C2C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1001E4CA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1000065CC(__p, "stoppedDiscoveringAllPeers");
  unint64_t v7 = (__int128 *)__p;
  uint64_t v3 = sub_1001E68F8(v2 + 56, __p, (uint64_t)&unk_1004242F8, &v7);
  ++v3[5];
  if (v11 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136LL);
    *(_DWORD *)std::stringbuf::string_type __p = 138412546;
    *(void *)&__p[4] = @"stoppedDiscoveringAllPeers";
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#lifecycle,%@ for session identifier: %@",  __p,  0x16u);
  }

  *(_BYTE *)(*(void *)(a1 + 32) + 48LL) = 0;
  return [*(id *)(a1 + 32) _removeAllPeers];
}

void sub_1001E4DD0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001E4E70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1000065CC(__p, "peerLostCallbackReceived");
  uint64_t v8 = (__int128 *)__p;
  uint64_t v3 = sub_1001E68F8(v2 + 56, __p, (uint64_t)&unk_1004242F8, &v8);
  ++v3[5];
  if (v12 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136LL);
    *(_DWORD *)std::stringbuf::string_type __p = 138412546;
    *(void *)&__p[4] = @"peerLostCallbackReceived";
    __int16 v10 = 2112;
    uint64_t v11 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#lifecycle,%@ for session identifier: %@",  __p,  0x16u);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 8) objectForKey:*(void *)(a1 + 40)]);
  unint64_t v7 = v6;
  if (v6)
  {
    [v6 setPeerLostCallbackReceived:1];
    [*(id *)(*(void *)(a1 + 32) + 8) setObject:v7 forKeyedSubscript:*(void *)(a1 + 40)];
  }
}

void sub_1001E4FC0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001E5048(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1000065CC(__p, "positioningSensorSessionStarted");
  uint64_t v6 = (__int128 *)__p;
  uint64_t v3 = sub_1001E68F8(v2 + 56, __p, (uint64_t)&unk_1004242F8, &v6);
  ++v3[5];
  if (v10 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136LL);
    *(_DWORD *)std::stringbuf::string_type __p = 138412546;
    *(void *)&__p[4] = @"positioningSensorSessionStarted";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#lifecycle,%@ for session identifier: %@",  __p,  0x16u);
  }

  *(_BYTE *)(*(void *)(a1 + 32) + 5sub_1001AC5F4(v4, 0LL) = 1;
}

void sub_1001E516C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001E51E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1000065CC(__p, "positioningSensorSessionStopped");
  uint64_t v6 = (__int128 *)__p;
  uint64_t v3 = sub_1001E68F8(v2 + 56, __p, (uint64_t)&unk_1004242F8, &v6);
  ++v3[5];
  if (v10 < 0) {
    operator delete(*(void **)__p);
  }
  int v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 136LL);
    *(_DWORD *)std::stringbuf::string_type __p = 138412546;
    *(void *)&__p[4] = @"positioningSensorSessionStopped";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#lifecycle,%@ for session identifier: %@",  __p,  0x16u);
  }

  *(_BYTE *)(*(void *)(a1 + 32) + 5sub_1001AC5F4(v4, 0LL) = 0;
}

void sub_1001E5308( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001E53B8(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 8) objectForKeyedSubscript:*(void *)(a1 + 40)]);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    sub_1000065CC(__p, "measurementReceivedForToken");
    unint64_t v7 = __p;
    int v4 = sub_1001E68F8(v3 + 56, (unsigned __int8 *)__p, (uint64_t)&unk_1004242F8, (__int128 **)&v7);
    ++v4[5];
    if (v6 < 0) {
      operator delete(__p[0]);
    }
    [v2 setLatestActivityTimestamp:*(double *)(a1 + 48)];
    [v2 setLatestActivityType:1];
  }
}

void sub_1001E546C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

id sub_1001E5514(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32) + 56LL;
  sub_1000065CC(__p, "peerHangupReceived");
  unint64_t v7 = __p;
  uint64_t v3 = sub_1001E68F8(v2, (unsigned __int8 *)__p, (uint64_t)&unk_1004242F8, (__int128 **)&v7);
  ++v3[5];
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  return [*(id *)(*(void *)(a1 + 32) + 8) removeObjectForKey:*(void *)(a1 + 40)];
}

void sub_1001E55A4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001E5670(void *a1)
{
  uint64_t v2 = a1[4] + 56LL;
  sub_1000065CC(__p, "isTrackingPeer:");
  unint64_t v7 = __p;
  uint64_t v3 = sub_1001E68F8(v2, (unsigned __int8 *)__p, (uint64_t)&unk_1004242F8, (__int128 **)&v7);
  ++v3[5];
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  int v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1[4] + 8) objectForKey:a1[5]]);
  *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) = v4 != 0LL;
}

void sub_1001E571C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001E58B4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1001E5950( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001E605C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14)
{
}

id sub_1001E60EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) peerInactivityPeriodExceeded:*(void *)(a1 + 40)];
}

void sub_1001E60F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 96LL));
  [WeakRetained lifecycleTimeoutBeforeTrackingForDiscoveryToken:*(void *)(a1 + 40)];
}

void sub_1001E6138( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

id sub_1001E614C(uint64_t a1)
{
  return [*(id *)(a1 + 32) peerInactivityPeriodExceeded:*(void *)(a1 + 40)];
}

void sub_1001E6158(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 96LL));
  [WeakRetained lifecycleTimeoutAfterTrackingForDiscoveryToken:*(void *)(a1 + 40)];
}

void sub_1001E6198( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

id sub_1001E61AC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) cycleElapsed];
}

id sub_1001E61B4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _watchdogLoop];
}

void sub_1001E61F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001E62E4(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 48LL);
  return result;
}

uint64_t sub_1001E63B4(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 49LL);
  return result;
}

uint64_t sub_1001E6484(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 50LL);
  return result;
}

uint64_t sub_1001E6554(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 51LL);
  return result;
}

uint64_t sub_1001E6624(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 52LL);
  return result;
}

void sub_1001E6740(_Unwind_Exception *exception_object)
{
}

void sub_1001E68B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1001E68F8(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  __int16 v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_10003118C(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }

    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }

    uint64_t v14 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(void **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
        }

        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }

          else
          {
            v16 &= v11 - 1;
          }

          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }

  int v17 = (void *)(a1 + 16);
  uint64_t i = operator new(0x30uLL);
  *(void *)uint64_t i = 0LL;
  *((void *)i + 1) = v10;
  uint64_t v18 = *a4;
  __int128 v19 = **a4;
  *((void *)i + 4) = *((void *)*a4 + 2);
  *((_OWORD *)i + 1) = v19;
  *((void *)v18 + 1) = 0LL;
  *((void *)v18 + 2) = 0LL;
  *(void *)uint64_t v18 = 0LL;
  *((void *)i + 5) = 0LL;
  float v20 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    BOOL v22 = 1LL;
    if (v11 >= 3) {
      BOOL v22 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v11);
    unint64_t v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24) {
      size_t v25 = v24;
    }
    else {
      size_t v25 = v23;
    }
    sub_100021B74(a1, v25);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }

    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }

  uint64_t v26 = *(void *)a1;
  BOOL v27 = *(void **)(*(void *)a1 + 8 * v4);
  if (v27)
  {
    *(void *)uint64_t i = *v27;
LABEL_38:
    *BOOL v27 = i;
    goto LABEL_39;
  }

  *(void *)uint64_t i = *v17;
  *int v17 = i;
  *(void *)(v26 + 8 * v4) = v17;
  if (*(void *)i)
  {
    unint64_t v28 = *(void *)(*(void *)i + 8LL);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v28 >= v11) {
        v28 %= v11;
      }
    }

    else
    {
      v28 &= v11 - 1;
    }

    BOOL v27 = (void *)(*(void *)a1 + 8 * v28);
    goto LABEL_38;
  }

void sub_1001E6B64( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
}

void sub_1001E6C24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E6D28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E6DEC(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) _initInternal];
  uint64_t v2 = (void *)qword_1007F9AB8;
  qword_1007F9AB8 = (uint64_t)v1;
}

void sub_1001E6EC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E717C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id sub_1001E71BC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) payloadDidChange];
}

void sub_1001E7584(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1001E75E8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1001E78D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E79FC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001E7C80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E7F88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E8104( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1001E8248(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E8520(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E85D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E87D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E893C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E8A60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E8C54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E8E64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E8FE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E918C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E9358(id a1)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue( +[NSURL fileURLWithPath:]( &OBJC_CLASS___NSURL,  "fileURLWithPath:",  @"/System/Library/PrivateFrameworks/NearbyInteraction.framework"));
  uint64_t v1 = objc_claimAutoreleasedReturnValue(+[NSBundle bundleWithURL:](&OBJC_CLASS___NSBundle, "bundleWithURL:", v3));
  uint64_t v2 = (void *)qword_1007F9AC8;
  qword_1007F9AC8 = v1;
}

double sub_1001E9828(uint64_t a1)
{
  *(_BYTE *)(a1 + 136) = 0;
  *(_BYTE *)(a1 + 144) = 0;
  *(_BYTE *)(a1 + 232) = 0;
  *(_BYTE *)(a1 + 240) = 0;
  *(_BYTE *)(a1 + 256) = 0;
  *(_BYTE *)(a1 + 264) = 0;
  *(_BYTE *)(a1 + 280) = 0;
  *(_BYTE *)(a1 + 320) = 0;
  *(void *)(a1 + 32std::ostream::~ostream(v2, v3 + 8) = 0LL;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_BYTE *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = 0;
  *(void *)(a1 + 28std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(void *)(a1 + 296) = 0LL;
  *(_BYTE *)(a1 + 304) = 0;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  return result;
}

std::string *sub_1001E9874(std::string *this, const std::string *__str, double a3)
{
  *(double *)&this[12].__r_.__value_.__l.__data_ = a3;
  *(double *)&this[16].__r_.__value_.__l.__data_ = a3;
  return std::string::operator=(this, __str);
}

uint64_t sub_1001E9880(std::string *a1, const std::string *a2)
{
  if (!a1[9].__r_.__value_.__s.__data_[16])
  {
    sub_1001E98C8((uint64_t)&a1[6], (uint64_t)a2);
    std::string::operator=(a1 + 1, a2 + 1);
  }

  return sub_1001E98C8((uint64_t)&a1[2], (uint64_t)a2);
}

uint64_t sub_1001E98C8(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 88))
  {
    __int128 v4 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    *(_OWORD *)a1 = v4;
    std::string::operator=((std::string *)(a1 + 24), (const std::string *)(a2 + 24));
    if (a1 != a2) {
      sub_100178F70( (void *)(a1 + 48),  *(char **)(a2 + 48),  *(char **)(a2 + 56),  *(void *)(a2 + 56) - *(void *)(a2 + 48));
    }
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  }

  else
  {
    sub_1001EA330(a1, (__int128 *)a2);
    *(_BYTE *)(a1 + 8std::ostream::~ostream(v2, v3 + 8) = 1;
  }

  return a1;
}

__n128 sub_1001E9948(__n128 *a1, __n128 result, double a3)
{
  if (!a1[17].n128_u8[8]) {
    a1[17].n128_u8[8] = 1;
  }
  a1[16].n128_f64[1] = a3;
  a1[17].n128_u32[0] = result.n128_u32[0];
  if (!a1[16].n128_u8[0])
  {
    double result = *(__n128 *)((char *)a1 + 264);
    a1[15] = result;
    a1[16].n128_u8[0] = 1;
  }

  return result;
}

uint64_t sub_1001E9984(uint64_t result, uint64_t a2, uint64_t a3, double a4)
{
  switch(a3)
  {
    case 0LL:
      *(double *)(result + 376) = *(double *)(result + 376) + a4 - *(double *)(result + 288);
      if (a2 < 0) {
        goto LABEL_9;
      }
      goto LABEL_11;
    case 1LL:
      __int128 v4 = (double *)(result + 352);
      goto LABEL_7;
    case 4LL:
      __int128 v4 = (double *)(result + 360);
      goto LABEL_7;
    case 5LL:
      __int128 v4 = (double *)(result + 368);
LABEL_7:
      double *v4 = *v4 + a4 - *(double *)(result + 384);
      break;
    default:
      break;
  }

  if (a2 >= a3) {
    ++*(_DWORD *)(result + 332);
  }
  else {
LABEL_9:
  }
    ++*(_DWORD *)(result + 328);
LABEL_11:
  *(void *)(result + 336) = a2;
  *(double *)(result + 384) = a4;
  return result;
}

void sub_1001E9A38(uint64_t a1, double a2)
{
  switch(*(void *)(a1 + 336))
  {
    case 0LL:
      id v3 = (double *)(a1 + 376);
      goto LABEL_6;
    case 1LL:
      id v3 = (double *)(a1 + 352);
      goto LABEL_6;
    case 4LL:
      id v3 = (double *)(a1 + 360);
      goto LABEL_6;
    case 5LL:
      id v3 = (double *)(a1 + 368);
LABEL_6:
      *id v3 = *v3 + a2 - *(double *)(a1 + 384);
      break;
    default:
      break;
  }

  *(double *)(a1 + 296) = a2;
  sub_1001E9AB8(a1);
  sub_1001E9F88(a1);
}

void sub_1001E9AB8(uint64_t a1)
{
  id v2 = [(id)qword_1008007B0 mutableCopy];
  if (*(_BYTE *)(a1 + 280) && *(_BYTE *)(a1 + 256))
  {
    LODWORD(v3) = *(_DWORD *)(a1 + 272);
    __int128 v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v3));
    [v2 setObject:v4 forKeyedSubscript:@"endingBRRMeasurement"];

    if (!*(_BYTE *)(a1 + 256)) {
      sub_100006080();
    }
    LODWORD(v5) = *(_DWORD *)(a1 + 248);
    char v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v5));
    [v2 setObject:v6 forKeyedSubscript:@"firstBRRMeasurement"];
  }

  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 328)));
  [v2 setObject:v7 forKeyedSubscript:@"numberOfGotCloserRegionTransitions"];

  __int16 v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 332)));
  [v2 setObject:v8 forKeyedSubscript:@"numberOfGotFartherRegionTransitions"];

  unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)(a1 + 296) - *(double *)(a1 + 288)));
  [v2 setObject:v9 forKeyedSubscript:@"sessionDuration"];

  unint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 376)));
  [v2 setObject:v10 forKeyedSubscript:@"timeSpentInSearching"];

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 368)));
  [v2 setObject:v11 forKeyedSubscript:@"timeSpentInFar"];

  uint8x8_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 352)));
  [v2 setObject:v12 forKeyedSubscript:@"timeSpentInHere"];

  unint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 360)));
  [v2 setObject:v13 forKeyedSubscript:@"timeSpentInNear"];

  if (*(_BYTE *)(a1 + 256))
  {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)(a1 + 240) - *(double *)(a1 + 288)));
    [v2 setObject:v14 forKeyedSubscript:@"timeToFirstBRRMeasurement"];
  }

  if (*(_BYTE *)(a1 + 232))
  {
    double v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)(a1 + 144) - *(double *)(a1 + 288)));
    [v2 setObject:v15 forKeyedSubscript:@"timeToFirstBTSample"];
  }

  unint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 344)));
  [v2 setObject:v16 forKeyedSubscript:@"timeToHere"];

  int v17 = (void *)(a1 + 24);
  uint64_t v18 = (void *)(a1 + 24);
  __int128 v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v18));
  float v20 = (void *)objc_claimAutoreleasedReturnValue([&off_1007D2840 objectForKeyedSubscript:v19]);
  [v2 setObject:v20 forKeyedSubscript:@"advertiserEnum"];

  float v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v17));
  [v2 setObject:v21 forKeyedSubscript:@"advertiserString"];

  BOOL v22 = off_1007F41F0;
  BOOL v27 = _NSConcreteStackBlock;
  uint64_t v28 = 3221225472LL;
  double v29 = sub_1001EA038;
  uint64_t v30 = &unk_1007B64C8;
  id v23 = v2;
  id v31 = v23;
  AnalyticsSendEventLazy(v22, &v27);
  unint64_t v24 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
  {
    id v25 = objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString, "stringWithFormat:", @"%@", v23, v27, v28, v29, v30));
    id v26 = [v25 UTF8String];
    *(_DWORD *)std::string buf = 136315138;
    id v33 = v26;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "#ni-ca-devicepresence submitting %s",  buf,  0xCu);
  }
}

void sub_1001E9EEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E9F88(uint64_t a1)
{
  v4[88] = 0;
  v5[0] = 0;
  v5[88] = 0;
  v5[96] = 0;
  v5[112] = 0;
  v5[120] = 0;
  v5[136] = 0;
  char v9 = 0;
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)std::stringbuf::string_type __p = 0u;
  __int128 v3 = 0u;
  v4[0] = 0;
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  char v8 = 0;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  sub_1001EA040(a1, (__int128 *)v1);
  sub_100163CDC((uint64_t)v5);
  sub_100163CDC((uint64_t)v4);
  if (SHIBYTE(v3) < 0) {
    operator delete(__p[1]);
  }
  if (SHIBYTE(__p[0]) < 0) {
    operator delete(v1[0]);
  }
}

id sub_1001EA038(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

uint64_t sub_1001EA040(uint64_t a1, __int128 *a2)
{
  __int128 v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((_BYTE *)a2 + 23) = 0;
  *(_BYTE *)a2 = 0;
  double v5 = (void **)(a1 + 24);
  __int128 v6 = *(__int128 *)((char *)a2 + 24);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(_OWORD *)double v5 = v6;
  *((_BYTE *)a2 + 47) = 0;
  *((_BYTE *)a2 + 24) = 0;
  sub_1001EA1E8(a1 + 48, a2 + 3);
  sub_1001EA1E8(a1 + 144, a2 + 9);
  if (*(unsigned __int8 *)(a1 + 256) == *((unsigned __int8 *)a2 + 256))
  {
    if (*(_BYTE *)(a1 + 256))
    {
      *(void *)(a1 + 240) = *((void *)a2 + 30);
      *(_DWORD *)(a1 + 24std::ostream::~ostream(v2, v3 + 8) = *((_DWORD *)a2 + 62);
    }
  }

  else if (*(_BYTE *)(a1 + 256))
  {
    *(_BYTE *)(a1 + 256) = 0;
  }

  else
  {
    *(_OWORD *)(a1 + 240) = a2[15];
    *(_BYTE *)(a1 + 256) = 1;
  }

  if (*(unsigned __int8 *)(a1 + 280) == *((unsigned __int8 *)a2 + 280))
  {
    if (*(_BYTE *)(a1 + 280))
    {
      *(void *)(a1 + 264) = *((void *)a2 + 33);
      *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
    }
  }

  else if (*(_BYTE *)(a1 + 280))
  {
    *(_BYTE *)(a1 + 280) = 0;
  }

  else
  {
    *(_OWORD *)(a1 + 264) = *(__int128 *)((char *)a2 + 264);
    *(_BYTE *)(a1 + 280) = 1;
  }

  *(_OWORD *)(a1 + 28std::ostream::~ostream(v2, v3 + 8) = a2[18];
  if (*(unsigned __int8 *)(a1 + 320) == *((unsigned __int8 *)a2 + 320))
  {
    if (*(_BYTE *)(a1 + 320))
    {
      *(void *)(a1 + 304) = *((void *)a2 + 38);
      *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
    }
  }

  else if (*(_BYTE *)(a1 + 320))
  {
    *(_BYTE *)(a1 + 320) = 0;
  }

  else
  {
    *(_OWORD *)(a1 + 304) = a2[19];
    *(_BYTE *)(a1 + 320) = 1;
  }

  __int128 v7 = *(__int128 *)((char *)a2 + 328);
  __int128 v8 = *(__int128 *)((char *)a2 + 344);
  __int128 v9 = *(__int128 *)((char *)a2 + 376);
  *(_OWORD *)(a1 + 360) = *(__int128 *)((char *)a2 + 360);
  *(_OWORD *)(a1 + 376) = v9;
  *(_OWORD *)(a1 + 32std::ostream::~ostream(v2, v3 + 8) = v7;
  *(_OWORD *)(a1 + 344) = v8;
  return a1;
}

__n128 sub_1001EA1E8(uint64_t a1, __int128 *a2)
{
  if (*(unsigned __int8 *)(a1 + 88) == *((unsigned __int8 *)a2 + 88))
  {
    if (*(_BYTE *)(a1 + 88))
    {
      __int128 v4 = *a2;
      *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
      *(_OWORD *)a1 = v4;
      double v5 = (void **)(a1 + 24);
      __int128 v6 = *(__int128 *)((char *)a2 + 24);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(_OWORD *)double v5 = v6;
      *((_BYTE *)a2 + 47) = 0;
      *((_BYTE *)a2 + 24) = 0;
      sub_10011B6E4(a1 + 48, (__n128 *)a2 + 3);
      __n128 result = *(__n128 *)((char *)a2 + 72);
      *(__n128 *)(a1 + 72) = result;
    }
  }

  else if (*(_BYTE *)(a1 + 88))
  {
    sub_1001EA2E8(a1);
  }

  else
  {
    __n128 v8 = (__n128)*a2;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    *(__n128 *)a1 = v8;
    __int128 v9 = *(__int128 *)((char *)a2 + 24);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(_OWORD *)(a1 + 24) = v9;
    *((void *)a2 + 4) = 0LL;
    *((void *)a2 + 5) = 0LL;
    *((void *)a2 + 3) = 0LL;
    *(void *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = 0LL;
    *(void *)(a1 + 56) = 0LL;
    *(void *)(a1 + 64) = 0LL;
    *(_OWORD *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = a2[3];
    *(void *)(a1 + 64) = *((void *)a2 + 8);
    *((void *)a2 + 7) = 0LL;
    *((void *)a2 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
    *((void *)a2 + 6) = 0LL;
    __n128 result = *(__n128 *)((char *)a2 + 72);
    *(__n128 *)(a1 + 72) = result;
    *(_BYTE *)(a1 + 8std::ostream::~ostream(v2, v3 + 8) = 1;
  }

  return result;
}

void sub_1001EA2E8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 88))
  {
    id v2 = *(void **)(a1 + 48);
    if (v2)
    {
      *(void *)(a1 + 56) = v2;
      operator delete(v2);
    }

    *(_BYTE *)(a1 + 8std::ostream::~ostream(v2, v3 + 8) = 0;
  }

uint64_t sub_1001EA330(uint64_t a1, __int128 *a2)
{
  __int128 v4 = *a2;
  *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
  *(_OWORD *)a1 = v4;
  if (*((char *)a2 + 47) < 0)
  {
    sub_1000063A8((_BYTE *)(a1 + 24), *((void **)a2 + 3), *((void *)a2 + 4));
  }

  else
  {
    __int128 v5 = *(__int128 *)((char *)a2 + 24);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(_OWORD *)(a1 + 24) = v5;
  }

  *(void *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  sub_1001309C0( (void *)(a1 + 48),  *((const void **)a2 + 6),  *((void *)a2 + 7),  *((void *)a2 + 7) - *((void *)a2 + 6));
  *(_OWORD *)(a1 + 72) = *(__int128 *)((char *)a2 + 72);
  return a1;
}

void sub_1001EA3BC(_Unwind_Exception *exception_object)
{
}

void sub_1001EA3D8()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  __int128 v15 = xmmword_1004281D4;
  __int128 v16 = unk_1004281E4;
  sub_10015EABC((uint64_t)&unk_1007F9AD8, (int *)&v15, 4LL);
  xmmword_1007F9AF0 = xmmword_100423CB0;
  unk_1007F9B00 = xmmword_100423CC0;
  qword_1007F9B18 = 0LL;
  unk_1007F9B20 = 0LL;
  qword_1007F9B10 = 0x3FD999999999999ALL;
  unk_1007F9B28 = xmmword_100423CD0;
  dword_1007F9B38 = 5;
  qword_1007F9B40 = 0x4000000000000000LL;
  dword_1007F9B48 = 5;
  byte_1007F9B50 = 0;
  *(void *)&algn_1007F9B51[3] = 0x30000000ALL;
  xmmword_1007F9B60 = xmmword_100423CE0;
  unk_1007F9B70 = xmmword_100423CF0;
  xmmword_1007F9B80 = xmmword_100423D00;
  qword_1007F9B90 = 0x3FE3333333333333LL;
  dword_1007F9B98 = 3;
  xmmword_1007F9BA0 = xmmword_100423D10;
  unk_1007F9BB0 = xmmword_100423CF0;
  xmmword_1007F9BC0 = xmmword_100423CE0;
  qword_1007F9BD0 = 0x3FE3333333333333LL;
  byte_1007F9BD8 = 0;
  xmmword_1007F9BE0 = xmmword_100423D20;
  unk_1007F9BF0 = xmmword_100423D30;
  __asm { FMOV            V0.2D, #1.0 }

  __int128 v13 = _Q0;
  xmmword_1007F9C00 = _Q0;
  qword_1007F9C10 = 0xBFD3333333333333LL;
  xmmword_1007F9C18 = xmmword_100423D40;
  qword_1007F9C28 = 0x3E99999A40000000LL;
  xmmword_1007F9C30 = xmmword_100423CC0;
  qword_1007F9C48 = 0LL;
  unk_1007F9C50 = 0LL;
  qword_1007F9C40 = 0x3FD999999999999ALL;
  xmmword_1007F9C58 = xmmword_100423CD0;
  dword_1007F9C68 = 5;
  qword_1007F9C70 = 0x4000000000000000LL;
  dword_1007F9C78 = 4;
  qword_1007F9C80 = 0x300000008LL;
  qword_1007F9C88 = 0xC04E800000000000LL;
  v14[0] = -61.0;
  sub_10015ED64((uint64_t)&unk_1007F9C90, v14, 1LL);
  xmmword_1007F9CA8 = xmmword_100423D50;
  qword_1007F9CB8 = 0x4024000000000000LL;
  dword_1007F9CC0 = 45;
  byte_1007F9CC8 = 0;
  byte_1007F9CE0 = 0;
  qword_1007F9CE8 = 0LL;
  byte_1007F9CF0 = 0;
  dword_1007F9CF4 = 1;
  byte_1007F9CF8 = 1;
  xmmword_1007F9D00 = xmmword_100423D60;
  unk_1007F9D10 = xmmword_100423D70;
  xmmword_1007F9D20 = v13;
  qword_1007F9D30 = 0xC059000000000000LL;
  xmmword_1007F9D38 = xmmword_100423D80;
  qword_1007F9D48 = (uint64_t)vdup_n_s32(0x3DCCCCCDu);
  xmmword_1007F9D50 = xmmword_100423CC0;
  qword_1007F9D60 = 0x3FD999999999999ALL;
  qword_1007F9D70 = 0LL;
  qword_1007F9D68 = 0LL;
  xmmword_1007F9D78 = xmmword_100423CD0;
  dword_1007F9D88 = 5;
  qword_1007F9D90 = 0x4000000000000000LL;
  dword_1007F9D98 = 10;
  qword_1007F9DA0 = 0x4034000000000000LL;
  dword_1007F9DA8 = 3;
  xmmword_1007F9DB0 = xmmword_100423D90;
  __cxa_atexit((void (*)(void *))sub_10015CF8C, &unk_1007F9AD8, (void *)&_mh_execute_header);
  qword_1007F9DC8 = 0LL;
  unk_1007F9DD0 = 0LL;
  qword_1007F9DC0 = 0LL;
  __int128 v6 = operator new(0x40uLL);
  qword_1007F9DC8 = (uint64_t)(v6 + 4);
  unk_1007F9DD0 = v6 + 4;
  *__int128 v6 = xmmword_1004281F8;
  v6[1] = unk_100428208;
  v6[2] = xmmword_100428218;
  v6[3] = unk_100428228;
  qword_1007F9DC0 = (uint64_t)v6;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007F9DC0, (void *)&_mh_execute_header);
  qword_1007F9DE0 = 0LL;
  unk_1007F9DE8 = 0LL;
  qword_1007F9DD8 = 0LL;
  __int128 v7 = operator new(0x10uLL);
  qword_1007F9DE0 = (uint64_t)(v7 + 1);
  unk_1007F9DE8 = v7 + 1;
  *__int128 v7 = xmmword_100428238;
  qword_1007F9DD8 = (uint64_t)v7;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007F9DD8, (void *)&_mh_execute_header);
  *(void *)&v14[0] = @"endingBRRMeasurement";
  __n128 v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  *(void *)&__int128 v15 = v8;
  *(void *)&v14[1] = @"firstBRRMeasurement";
  __int128 v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  *((void *)&v15 + 1) = v9;
  *(void *)&void v14[2] = @"numberOfGotCloserRegionTransitions";
  *(void *)&uint64_t v14[3] = @"numberOfGotFartherRegionTransitions";
  *(void *)&__int128 v16 = &off_1007D2538;
  *((void *)&v16 + 1) = &off_1007D2538;
  *(void *)&v14[4] = @"sessionDuration";
  __int128 v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  int v17 = v10;
  uint64_t v18 = &off_1007D2538;
  *(void *)&v14[5] = @"timeSpentInFar";
  *(void *)&_DWORD v14[6] = @"timeSpentInHere";
  __int128 v19 = &off_1007D2538;
  float v20 = &off_1007D2538;
  *(void *)&v14[7] = @"timeSpentInNear";
  *(void *)&__int16 v14[8] = @"timeSpentInSearching";
  float v21 = &off_1007D2538;
  BOOL v22 = &off_1007D2538;
  *(void *)&v14[9] = @"timeToFirstBRRMeasurement";
  *(void *)&v14[10] = @"timeToFirstBTSample";
  id v23 = &off_1007D2538;
  unint64_t v24 = &off_1007D2538;
  *(void *)&v14[11] = @"timeToHere";
  *(void *)&v14[12] = @"advertiserEnum";
  __int128 v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  id v25 = v11;
  *(void *)&v14[13] = @"advertiserString";
  __int128 v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  id v26 = v12;
  qword_1008007B0 = objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v15,  v14,  14LL));

  objc_autoreleasePoolPop(v0);
}

void sub_1001EA894(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_1001EA8F0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B6AB8[a1]);
}

void *sub_1001EA904@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B6B10[a1]);
}

void *sub_1001EA918@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B6B58[a1]);
}

void *sub_1001EA92C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B6B78[a1]);
}

void sub_1001EAC20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001EAC44(uint64_t a1)
{
  if (qword_1007F4258 != -1) {
    dispatch_once(&qword_1007F4258, &stru_1007B66B0);
  }
  *(_BYTE *)a1 = byte_1007F4260;
  id v2 = *(void **)(a1 + 8);
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;

  __int128 v3 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = 0LL;

  *(_BYTE *)(a1 + 24) = 0;
  __int128 v4 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = 0LL;

  __int128 v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = 0LL;

  *(_DWORD *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = 0;
}

void sub_1001EB9E8( _Unwind_Exception *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  sub_100012390((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001EC1DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  sub_100012390((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001EC420(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001EC5F8(_Unwind_Exception *exception_object)
{
  __int128 v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + std::ostream::~ostream(v2, v3 + 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

void sub_1001EC940(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001EC950(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didFailMutualAuthWithToken:*(void *)(*(void *)(a1 + 40) + 304)];
}

id sub_1001EC960(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didFailMutualAuthWithToken:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_1001ECB74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001ECC2C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001ECE10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001ECE40(unsigned int a1)
{
  if (a1 >= 4) {
    return (id)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Unknown [%d]",  a1));
  }
  else {
    return *((id *)&off_1007B6B98 + (char)a1);
  }
}

void sub_1001ED154( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20, void *a21, uint64_t a22)
{
  if (__p) {
    operator delete(__p);
  }
  if (a21) {
    operator delete(a21);
  }
  _Unwind_Resume(a1);
}

unint64_t sub_1001ED1E4(uint64_t a1, uint64_t a2)
{
  LOWORD(v2) = *(unsigned __int8 *)(a2 + 9);
  if (*(_BYTE *)(a1 + 9))
  {
    if (*(_BYTE *)(a2 + 9))
    {
      if (*(_BYTE *)(a1 + 1)) {
        id v2 = (_WORD *)a1;
      }
      else {
        id v2 = (_WORD *)a2;
      }
      LOWORD(v2) = *v2;
      if (*(_BYTE *)(a1 + 3)) {
        uint64_t v3 = a1;
      }
      else {
        uint64_t v3 = a2;
      }
      LOWORD(v4) = *(_WORD *)(v3 + 2);
      if (*(_BYTE *)(a1 + 5)) {
        uint64_t v5 = a1;
      }
      else {
        uint64_t v5 = a2;
      }
      LOWORD(v5) = *(_WORD *)(v5 + 4);
      if (*(_BYTE *)(a1 + 7)) {
        uint64_t v6 = a1;
      }
      else {
        uint64_t v6 = a2;
      }
      uint64_t v7 = *(unsigned __int16 *)(v6 + 6);
    }

    else
    {
      id v2 = *(_WORD **)a1;
      uint64_t v4 = *(void *)a1 >> 16;
      uint64_t v5 = HIDWORD(*(void *)a1);
      uint64_t v7 = HIWORD(*(void *)a1);
    }
  }

  else if (*(_BYTE *)(a2 + 9))
  {
    id v2 = *(_WORD **)a2;
    uint64_t v4 = *(void *)a2 >> 16;
    uint64_t v5 = HIDWORD(*(void *)a2);
    uint64_t v7 = HIWORD(*(void *)a2);
  }

  else
  {
    uint64_t v7 = 0LL;
    LOWORD(v5) = 0;
    LOWORD(v4) = 0;
  }

  return (v7 << 48) | ((unint64_t)(unsigned __int16)v5 << 32) | ((unint64_t)(unsigned __int16)v4 << 16) | (unsigned __int16)v2;
}

void sub_1001ED678(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 - 88);
  if (v4)
  {
    *(void *)(v2 - 80) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(a1);
}

id sub_1001ED6C0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNbammsPeerAlgorithmAidingData:a1 + 48 signallingData:a1 + 224 token:*(void *)(*(void *)(a1 + 40) + 304)];
}

id sub_1001ED6D8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNbammsPeerAlgorithmAidingData:a1 + 48 signallingData:a1 + 224 token:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_1001EDC38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20, uint64_t a21, uint64_t a22, int a23, __int16 a24, char a25, char a26)
{
  _Unwind_Resume(a1);
}

void sub_1001EDD1C(_BYTE *a1@<X0>, std::string *a2@<X8>)
{
  if (a1[1])
  {
    if (*a1) {
      uint64_t v4 = "Hng:Y";
    }
    else {
      uint64_t v4 = "Hng:N";
    }
  }

  else
  {
    uint64_t v4 = "Hng:-";
  }

  sub_1000065CC(&v44, v4);
  uint64_t v5 = std::string::insert(&v44, 0LL, "[ ");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v45.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v7 = std::string::append(&v45, " | ");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  v46.__r_.__value_.__l.__cap_ = v7->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  if (a1[3])
  {
    if (a1[2]) {
      __int128 v9 = "FrG:Y";
    }
    else {
      __int128 v9 = "FrG:N";
    }
  }

  else
  {
    __int128 v9 = "FrG:-";
  }

  sub_1000065CC(v42, v9);
  if ((v43 & 0x80u) == 0) {
    __int128 v10 = v42;
  }
  else {
    __int128 v10 = (void **)v42[0];
  }
  if ((v43 & 0x80u) == 0) {
    std::string::size_type v11 = v43;
  }
  else {
    std::string::size_type v11 = (std::string::size_type)v42[1];
  }
  __int128 v12 = std::string::append(&v46, (const std::string::value_type *)v10, v11);
  __int128 v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v47.__r_.__value_.__l.__cap_ = v12->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0LL;
  v12->__r_.__value_.__l.__cap_ = 0LL;
  v12->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v14 = std::string::append(&v47, " | ");
  __int128 v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v48.__r_.__value_.__l.__cap_ = v14->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0LL;
  v14->__r_.__value_.__l.__cap_ = 0LL;
  v14->__r_.__value_.__r.__words[0] = 0LL;
  if (a1[5])
  {
    if (a1[4]) {
      __int128 v16 = "FeG:Y";
    }
    else {
      __int128 v16 = "FeG:N";
    }
  }

  else
  {
    __int128 v16 = "FeG:-";
  }

  sub_1000065CC(v40, v16);
  if ((v41 & 0x80u) == 0) {
    int v17 = v40;
  }
  else {
    int v17 = (void **)v40[0];
  }
  if ((v41 & 0x80u) == 0) {
    std::string::size_type v18 = v41;
  }
  else {
    std::string::size_type v18 = (std::string::size_type)v40[1];
  }
  __int128 v19 = std::string::append(&v48, (const std::string::value_type *)v17, v18);
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  v49.__r_.__value_.__l.__cap_ = v19->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  float v21 = std::string::append(&v49, " | ");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v50.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  if (a1[7])
  {
    if (a1[6]) {
      id v23 = "FrU:Y";
    }
    else {
      id v23 = "FrU:N";
    }
  }

  else
  {
    id v23 = "FrU:-";
  }

  sub_1000065CC(v38, v23);
  if ((v39 & 0x80u) == 0) {
    unint64_t v24 = v38;
  }
  else {
    unint64_t v24 = (void **)v38[0];
  }
  if ((v39 & 0x80u) == 0) {
    std::string::size_type v25 = v39;
  }
  else {
    std::string::size_type v25 = (std::string::size_type)v38[1];
  }
  id v26 = std::string::append(&v50, (const std::string::value_type *)v24, v25);
  __int128 v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  v51.__r_.__value_.__l.__cap_ = v26->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v27;
  v26->__r_.__value_.__l.__size_ = 0LL;
  v26->__r_.__value_.__l.__cap_ = 0LL;
  v26->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v28 = std::string::append(&v51, " | ");
  __int128 v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  v52.__r_.__value_.__l.__cap_ = v28->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v29;
  v28->__r_.__value_.__l.__size_ = 0LL;
  v28->__r_.__value_.__l.__cap_ = 0LL;
  v28->__r_.__value_.__r.__words[0] = 0LL;
  if (a1[8]) {
    uint64_t v30 = "DT:P";
  }
  else {
    uint64_t v30 = "DT:W";
  }
  sub_1000065CC(__p, v30);
  if ((v37 & 0x80u) == 0) {
    id v31 = __p;
  }
  else {
    id v31 = (void **)__p[0];
  }
  if ((v37 & 0x80u) == 0) {
    std::string::size_type v32 = v37;
  }
  else {
    std::string::size_type v32 = (std::string::size_type)__p[1];
  }
  id v33 = std::string::append(&v52, (const std::string::value_type *)v31, v32);
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v53.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  int v35 = std::string::append(&v53, " ]");
  *a2 = *v35;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
}

void sub_1001EE120( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, void *a22, uint64_t a23, int a24, __int16 a25, char a26, char a27, void *a28, uint64_t a29, int a30, __int16 a31, char a32, char a33, void *a34, uint64_t a35, int a36, __int16 a37, char a38, char a39, void *a40, uint64_t a41, int a42, __int16 a43, char a44, char a45, uint64_t a46, void *a47, uint64_t a48, int a49, __int16 a50,char a51,char a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a66 < 0) {
    operator delete(a61);
  }
  if (a59 < 0) {
    operator delete(a54);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a52 < 0) {
    operator delete(a47);
  }
  if (a45 < 0) {
    operator delete(a40);
  }
  if (a39 < 0) {
    operator delete(a34);
  }
  _Unwind_Resume(a1);
}

void sub_1001EE24C()
{
}

void sub_1001EE254()
{
}

void sub_1001EE25C()
{
}

void sub_1001EE264()
{
}

void sub_1001EE26C()
{
}

id sub_1001EE274(unsigned __int8 *a1, uint64_t a2)
{
  unsigned int v3 = *a1;
  if (v3 < 0xC && ((0xC7Fu >> v3) & 1) != 0) {
    __int128 v19 = (void *)*((void *)&off_1007B6BB8 + (char)v3);
  }
  else {
    __int128 v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Unknown [%d]",  *a1));
  }
  uint64_t v4 = *((void *)a1 + 1);
  if (v4)
  {
    uint64_t v5 = CUPrintNSObjectMasked(*((void *)a1 + 1), a2);
    __int128 v20 = (__CFString *)objc_claimAutoreleasedReturnValue(v5);
  }

  else
  {
    __int128 v20 = @"---------";
  }

  uint64_t v6 = *((void *)a1 + 2);
  if (v6)
  {
    uint64_t v7 = CUPrintNSObjectMasked(*((void *)a1 + 2), a2);
    __int128 v8 = (__CFString *)objc_claimAutoreleasedReturnValue(v7);
  }

  else
  {
    __int128 v8 = @"---------";
  }

  unsigned int v9 = a1[24];
  if (v9 >= 3) {
    __int128 v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Unknown [%d]",  a1[24]));
  }
  else {
    __int128 v10 = (void *)*((void *)&off_1007B6C18 + (char)v9);
  }
  uint64_t v11 = *((void *)a1 + 4);
  if (v11)
  {
    uint64_t v12 = CUPrintNSObjectMasked(*((void *)a1 + 4), a2);
    __int128 v13 = (__CFString *)objc_claimAutoreleasedReturnValue(v12);
  }

  else
  {
    __int128 v13 = @"---------";
  }

  uint64_t v14 = *((void *)a1 + 5);
  if (v14)
  {
    uint64_t v15 = CUPrintNSObjectMasked(*((void *)a1 + 5), a2);
    __int128 v16 = (__CFString *)objc_claimAutoreleasedReturnValue(v15);
  }

  else
  {
    __int128 v16 = @"---------";
  }

  int v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"[ Out:%@ C:%@ R:%@ | In:%@ C:%@ R:%@ | Missed:%-3d ]",  v19,  v20,  v8,  v10,  v13,  v16,  *((unsigned int *)a1 + 12)));
  if (v14) {

  }
  if (v11) {
  if (v6)
  }

  if (v4) {
  return v17;
  }
}

void sub_1001EE43C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18)
{
  if (v19) {

  }
  if (v18) {
  _Unwind_Resume(a1);
  }
}

void sub_1001EE624(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001EE634(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNbammsSessionStatusUpdate:a1 + 48 token:*(void *)(*(void *)(a1 + 40) + 304)];
}

id sub_1001EE648(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNbammsSessionStatusUpdate:a1 + 48 token:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_1001EEADC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id a13)
{
  if (LOBYTE(STACK[0x320])) {
    sub_10039D594((uint64_t)&a9);
  }
  sub_100124BFC(v15);

  sub_10012EE88((uint64_t)&STACK[0xBC0]);
  _Unwind_Resume(a1);
}

id sub_1001EEBA0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNewNbammsSolution:a1 + 48 token:*(void *)(*(void *)(a1 + 40) + 304)];
}

void *sub_1001EEBB4(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 48);
  __int128 v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = v4;
  sub_1001376C0((_BYTE *)(a1 + 96), a2 + 96);
  sub_1001317DC((_BYTE *)(a1 + 656), a2 + 656);
  sub_100137714((__n128 *)(a1 + 808), (__n128 *)(a2 + 808));
  return memcpy((void *)(a1 + 928), (const void *)(a2 + 928), 0x239uLL);
}

void sub_1001EEC20(_Unwind_Exception *a1)
{
  if (*(_BYTE *)(v2 + 800)) {
    sub_10039D5C4(v2);
  }
  sub_100124BFC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001EEC4C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 920))
  {
    uint64_t v2 = *(void **)(a1 + 880);
    if (v2)
    {
      *(void *)(a1 + 88std::ostream::~ostream(v2, v3 + 8) = v2;
      operator delete(v2);
    }
  }

  if (*(_BYTE *)(a1 + 800)) {
    sub_100034A98(a1 + 672, *(void **)(a1 + 680));
  }
  return sub_100124BFC(a1 + 96);
}

id sub_1001EEC98(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNewNbammsSolution:a1 + 48 token:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_1001EF0A4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id a13)
{
  if (LOBYTE(STACK[0x320])) {
    sub_10039D594((uint64_t)&a9);
  }
  sub_100124BFC(v15);

  sub_10012EE88((uint64_t)&STACK[0xBC0]);
  _Unwind_Resume(a1);
}

id sub_1001EF168(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveUnsuccessfulNbammsSolution:a1 + 48 token:*(void *)(*(void *)(a1 + 40) + 304)];
}

id sub_1001EF17C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveUnsuccessfulNbammsSolution:a1 + 48 token:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_1001EF4BC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  _Unwind_Resume(a1);
}

void sub_1001EF8F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001EF90C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNbammsPeerAlgorithmAidingData:a1 + 48 signallingData:a1 + 224 token:*(void *)(*(void *)(a1 + 40) + 304)];
}

id sub_1001EF924(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didReceiveNbammsPeerAlgorithmAidingData:a1 + 48 signallingData:a1 + 224 token:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_1001EFA98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001EFAA8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didInvalidateNbammsSessionWithReason:*(unsigned int *)(a1 + 48) token:*(void *)(*(void *)(a1 + 40) + 304)];
}

id sub_1001EFABC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didInvalidateNbammsSessionWithReason:*(unsigned int *)(a1 + 48) token:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_1001EFD5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001EFEC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F045C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, char a34, uint64_t a35, uint64_t a36, uint64_t a37, char a38, uint64_t a39, uint64_t a40, uint64_t a41, char a42, uint64_t a43, uint64_t a44, uint64_t a45)
{
  sub_100012390((uint64_t)&a15);
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1001F07A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F0B58( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001F0FA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F1198(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F1228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F128C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F14E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001F14F8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didFailCryptoWithToken:*(void *)(*(void *)(a1 + 40) + 304)];
}

id sub_1001F1508(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didFailCryptoWithToken:*(void *)(*(void *)(a1 + 40) + 1040)];
}

void sub_1001F158C(uint64_t a1)
{
  if (+[NIPlatformInfo isInternalBuild](&OBJC_CLASS___NIPlatformInfo, "isInternalBuild"))
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    byte_1007F9ED0 = [v2 BOOLForKey:@"FindingDisableCrypto"];

    unsigned int v3 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 16LL);
      v5[0] = 67109378;
      v5[1] = byte_1007F9ED0;
      __int16 v6 = 2112;
      uint64_t v7 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#find-range,#crypto Disable crypto: %d, %@",  (uint8_t *)v5,  0x12u);
    }
  }

  else
  {
    byte_1007F9ED0 = 0;
  }

void sub_1001F1694(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F195C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F20A8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1001F210C(uint64_t a1)
{
  uint64_t v2 = NSRandomData(3LL, 0LL);
  uint64_t v3 = objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = *(void **)(a1 + 8);
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = v3;
}

void sub_1001F22D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  sub_1001FC378((uint64_t)&a9);
  sub_1001FC378((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_1001F230C(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  __int128 v21 = 0uLL;
  __int128 v23 = 0uLL;
  sub_1001EAC44((uint64_t)v20);
  __int16 v6 = (unsigned __int8 *)(a1 + 11);
  if (a2) {
    __int16 v6 = (unsigned __int8 *)(a1 + 1);
  }
  unsigned int v7 = *v6;
  if (a2) {
    uint64_t v8 = a1 + 2;
  }
  else {
    uint64_t v8 = a1 + 12;
  }
  if (a2) {
    uint64_t v9 = a1 + 5;
  }
  else {
    uint64_t v9 = a1 + 15;
  }
  unsigned int v10 = v7 >> 4;
  v20[0] = v7 >> 4;
  unsigned int v11 = v7 & 0xF;
  char v22 = v11;
  if (v10 > 0xB) {
    goto LABEL_18;
  }
  if (((1 << v10) & 0xC03) != 0)
  {
    if (v11 < 3) {
      goto LABEL_21;
    }
  }

  else
  {
    if (((1 << v10) & 0x38) != 0)
    {
      int v12 = 1;
LABEL_17:
      if (v11 > 2) {
        goto LABEL_18;
      }
      uint64_t v14 = objc_claimAutoreleasedReturnValue(+[NSData dataWithBytes:length:](&OBJC_CLASS___NSData, "dataWithBytes:length:", v8, 3LL));
      uint64_t v15 = (void *)v21;
      *(void *)&__int128 v21 = v14;

      if (v12)
      {
        uint64_t v16 = objc_claimAutoreleasedReturnValue(+[NSData dataWithBytes:length:](&OBJC_CLASS___NSData, "dataWithBytes:length:", v9, 6LL));
        int v17 = (void *)*((void *)&v21 + 1);
        *((void *)&v21 + 1) = v16;
      }

void sub_1001F2490(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_1001F28C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F2918(char *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 7)
  {
    if (v1 == 10)
    {
      char v3 = 11;
    }

    else
    {
      if (v1 != 11) {
        return;
      }
      sub_1001F210C((uint64_t)a1);
      char v3 = 2;
    }

    *a1 = v3;
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10039DC3C();
  }

void sub_1001F2990(uint64_t a1, unsigned int a2)
{
  if (a2 >= 7)
  {
    if (a2 - 10 < 2)
    {
      *(_BYTE *)a1 = a2;
      char v3 = *(void **)(a1 + 8);
      *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;

      uint64_t v4 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = 0LL;

      *(_BYTE *)(a1 + 24) = 0;
      __int128 v5 = *(void **)(a1 + 32);
      *(void *)(a1 + 32) = 0LL;

      __int16 v6 = *(void **)(a1 + 40);
      *(void *)(a1 + 40) = 0LL;
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10039DC68();
  }

void sub_1001F2A28(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)a1[1];
  if (v4 && a1[4])
  {
    id v5 = [v4 mutableCopy];
    [v5 appendData:a1[4]];
    id v6 = objc_claimAutoreleasedReturnValue([v3 getIRK]);
    id v7 = [v6 bytes];
    id v8 = v5;
    uint64_t v9 = SipHash(v7, [v8 bytes], objc_msgSend(v8, "length"));

    uint64_t v12 = v9;
    uint64_t v10 = objc_claimAutoreleasedReturnValue(+[NSData dataWithBytes:length:](&OBJC_CLASS___NSData, "dataWithBytes:length:", &v12, 6LL));
    unsigned int v11 = (void *)a1[2];
    a1[2] = v10;
  }
}

void sub_1001F2B0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001F2B38(void *a1, void *a2)
{
  id v3 = a2;
  if (a1[1] && (uint64_t v4 = (void *)a1[4]) != 0LL && a1[5])
  {
    id v5 = [v4 mutableCopy];
    [v5 appendData:a1[1]];
    id v6 = objc_claimAutoreleasedReturnValue([v3 getIRK]);
    id v7 = [v6 bytes];
    id v8 = v5;
    uint64_t v9 = SipHash(v7, [v8 bytes], objc_msgSend(v8, "length"));

    uint64_t v13 = v9;
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSData dataWithBytes:length:](&OBJC_CLASS___NSData, "dataWithBytes:length:", &v13, 6LL));
    id v11 = [v10 isEqualToData:a1[5]];
  }

  else
  {
    id v11 = 0LL;
  }

  return v11;
}

void sub_1001F2C38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1001F2C6C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unint64_t v4 = *((void *)a1 + 1);
  if (v4 | *((void *)a2 + 1)) {
    unsigned int v5 = objc_msgSend((id)v4, "isEqualToData:") ^ 1;
  }
  else {
    unsigned int v5 = 0;
  }
  unint64_t v6 = *((void *)a1 + 2);
  if (v6 | *((void *)a2 + 2)) {
    unsigned int v7 = objc_msgSend((id)v6, "isEqualToData:") ^ 1;
  }
  else {
    unsigned int v7 = 0;
  }
  unint64_t v8 = *((void *)a1 + 4);
  if (v8 | *((void *)a2 + 4)) {
    unsigned int v9 = objc_msgSend((id)v8, "isEqualToData:") ^ 1;
  }
  else {
    unsigned int v9 = 0;
  }
  unint64_t v10 = *((void *)a1 + 5);
  unint64_t v11 = v10 | *((void *)a2 + 5);
  if (v11) {
    LODWORD(v11) = objc_msgSend((id)v10, "isEqualToData:") ^ 1;
  }
  if (*a1 == *a2) {
    int v12 = v5;
  }
  else {
    int v12 = 1;
  }
  if (((v12 | v7) & 1) != 0) {
    return 0LL;
  }
  unsigned int v13 = a1[24] == a2[24] ? v9 : 1;
  return ((v13 | v11) & 1) == 0 && *((_DWORD *)a1 + 12) == *((_DWORD *)a2 + 12);
}

id *sub_1001F2D5C(id *a1)
{
  return a1;
}

void sub_1001F3044(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 240LL));

    if (v3)
    {
      unint64_t v4 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 16LL);
        int v8 = 138412290;
        uint64_t v9 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#find-range,Finder mutual-auth timer fires, failed mutual-auth, session %@",  (uint8_t *)&v8,  0xCu);
      }

      *(_DWORD *)(*(void *)(a1 + 32) + 296LL) = 50;
      *(_BYTE *)(*(void *)(a1 + 32) + 248LL) = 6;
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(v6 + 1904);
      if (v7) {
        (*(void (**)(uint64_t, uint64_t, void, void, void))(v7 + 16))( v7,  v6,  *(void *)(v6 + 304),  *(unsigned __int8 *)(a1 + 48),  0LL);
      }
    }
  }
}

void sub_1001F3158(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F3170(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 976LL));

    if (v3)
    {
      unint64_t v4 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 16LL);
        int v8 = 138412290;
        uint64_t v9 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#find-range,Findee mutual-auth timer fires, failed mutual-auth, session %@",  (uint8_t *)&v8,  0xCu);
      }

      *(_DWORD *)(*(void *)(a1 + 32) + 1032LL) = 50;
      *(_BYTE *)(*(void *)(a1 + 32) + 984LL) = 6;
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(v6 + 1904);
      if (v7) {
        (*(void (**)(uint64_t, uint64_t, void, void, void))(v7 + 16))( v7,  v6,  *(void *)(v6 + 1040),  *(unsigned __int8 *)(a1 + 48),  0LL);
      }
    }
  }
}

void sub_1001F3284(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F36BC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
  _Unwind_Resume(a1);
}

void sub_1001F370C(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v7 = WeakRetained;
  if (WeakRetained)
  {
    int v8 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 40LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001F37C0;
    block[3] = &unk_1007B6578;
    id v10 = WeakRetained;
    id v11 = v5;
    int v12 = a3;
    dispatch_async(v8, block);
  }
}

id sub_1001F37C0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) session:*(void *)(a1 + 40) updateState:*(unsigned int *)(a1 + 48)];
}

void sub_1001F37D0(uint64_t a1, void *a2, void *a3, char a4, char a5)
{
  id v9 = a2;
  id v10 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v12 = WeakRetained;
  if (WeakRetained)
  {
    unsigned int v13 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 40LL);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    void v14[2] = sub_1001F38B4;
    uint64_t v14[3] = &unk_1007B65F0;
    id v15 = WeakRetained;
    id v16 = v9;
    id v17 = v10;
    char v18 = a4;
    char v19 = a5;
    dispatch_async(v13, v14);
  }
}

id sub_1001F38B4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) mutualAuthUpdateForSession:*(void *)(a1 + 40) token:*(void *)(a1 + 48) isFinder:*(unsigned __int8 *)(a1 + 56) result:*(unsigned __int8 *)(a1 + 57)];
}

void sub_1001F3940(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_1007F9ED8;
  qword_1007F9ED8 = (uint64_t)v1;
}

void sub_1001F3BB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001F3BE0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001F3BF0(uint64_t a1)
{
}

void sub_1001F3BF8(uint64_t a1)
{
  if (([*(id *)(*(void *)(a1 + 32) + 8) sessionRegistered] & 1) == 0
    && ([*(id *)(*(void *)(a1 + 32) + 16) sessionRegistered] & 1) == 0)
  {
    uint64_t v18 = objc_claimAutoreleasedReturnValue( [*(id *)(*(void *)(a1 + 32) + 8) registerNBAMMSSessionWithToken:*(void *)(a1 + 40) isFinder:*(unsigned __int8 *)(a1 + 84) client:*(void *)(a1 + 48) serviceRequest:*(void *)(a1 + 64) startRangingOptions:*(void *)(a1 + 72) sharedProtocol:*(unsigned int *)(a1 + 80)]);
    uint64_t v19 = *(void *)(*(void *)(a1 + 56) + 8LL);
    __int128 v20 = *(void **)(v19 + 40);
    *(void *)(v19 + 40) = v18;

    [*(id *)(a1 + 32) _updateAnalyticsWithSuccessfulRangingRequest];
    return;
  }

  unsigned int v2 = [*(id *)(*(void *)(a1 + 32) + 8) sessionRegistered];
  if (v2 != [*(id *)(*(void *)(a1 + 32) + 16) sessionRegistered])
  {
    unsigned int v3 = [*(id *)(*(void *)(a1 + 32) + 8) sessionRegistered];
    uint64_t v4 = 16LL;
    if (v3) {
      uint64_t v4 = 8LL;
    }
    id v5 = *(id *)(*(void *)(a1 + 32) + v4);
    unsigned int v6 = [*(id *)(*(void *)(a1 + 32) + 8) sessionRegistered];
    uint64_t v7 = 8LL;
    if (v6) {
      uint64_t v7 = 16LL;
    }
    id v8 = *(id *)(*(void *)(a1 + 32) + v7);
    if ([v5 sharedProtocol])
    {
      if ([v5 sharedProtocol] != 1) {
        __assert_rtn( "-[NIServerFindingNBAMMSSessionManager registerNBAMMSSessionWithToken:isFinder:client:serviceRequest:startRangi ngOptions:sharedProtocol:]_block_invoke",  "NIServerFindingRanging.mm",  2842,  "false");
      }
      int v9 = *(_DWORD *)(a1 + 80);
      if (v9 != 1)
      {
        if (!v9)
        {
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
            sub_10039DC94();
          }
          NSErrorUserInfoKey v51 = NSLocalizedFailureReasonErrorKey;
          std::string v52 = @"protocol version does not support group finding";
          id v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v52,  &v51,  1LL));
          uint64_t v11 = objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"com.apple.NearbyInteraction",  -10020LL,  v10));
          uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8LL);
          unsigned int v13 = *(void **)(v12 + 40);
          *(void *)(v12 + 40) = v11;
        }

void sub_1001F41B0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  _Unwind_Resume(a1);
}

void sub_1001F42A8(uint64_t a1)
{
  unsigned int v2 = [*(id *)(*(void *)(a1 + 32) + 8) sessionState];
  [*(id *)(*(void *)(a1 + 32) + 8) unregisterNBAMMSSessionForToken:*(void *)(a1 + 40)];
  *(_DWORD *)(*(void *)(a1 + 32) + 24) = [*(id *)(*(void *)(a1 + 32) + 8) sessionState];
  unsigned int v3 = [*(id *)(*(void *)(a1 + 32) + 16) sessionState];
  [*(id *)(*(void *)(a1 + 32) + 16) unregisterNBAMMSSessionForToken:*(void *)(a1 + 40)];
  *(_DWORD *)(*(void *)(a1 + 32) + 28) = [*(id *)(*(void *)(a1 + 32) + 16) sessionState];
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(_DWORD *)(v4 + 24);
  if (v2 == v5)
  {
    if (v2) {
      return;
    }
    int v6 = *(_DWORD *)(v4 + 28);
    if (v3 == v6 || v6) {
      return;
    }
  }

  else if (v5 || *(_DWORD *)(v4 + 28))
  {
    return;
  }

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v4 + 64) descriptions]);
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  id v8 = v7;
  id v9 = [v8 countByEnumeratingWithState:&v14 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = *(void *)v15;
    do
    {
      uint64_t v11 = 0LL;
      do
      {
        if (*(void *)v15 != v10) {
          objc_enumerationMutation(v8);
        }
        uint64_t v12 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v13 = *(void *)(*((void *)&v14 + 1) + 8LL * (void)v11);
          *(_DWORD *)std::string buf = 138412290;
          uint64_t v19 = v13;
          _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "#find-range,GF-CA: %@", buf, 0xCu);
        }

        uint64_t v11 = (char *)v11 + 1;
      }

      while (v9 != v11);
      id v9 = [v8 countByEnumeratingWithState:&v14 objects:v20 count:16];
    }

    while (v9);
  }

  [*(id *)(*(void *)(a1 + 32) + 64) submitAnalytics];
}

void sub_1001F44C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001F4568(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) refreshRangingForToken:*(void *)(a1 + 40)];
}

id sub_1001F4624(void *a1)
{
  return [*(id *)(a1[4] + 16) updateAlgorithmAidingData:a1[6] token:a1[5]];
}

id sub_1001F46E8(void *a1)
{
  return [*(id *)(a1[4] + 16) updateSignallingData:a1[6] token:a1[5]];
}

id sub_1001F47AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateAnalyticsWithFailedRangingRequestToken:*(void *)(a1 + 40) isFinder:*(unsigned __int8 *)(a1 + 48)];
}

void sub_1001F48C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, id a28)
{
  _Unwind_Resume(a1);
}

void sub_1001F48E8(void *a1)
{
  id v1 = a1 + 4;
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1[4] + 8) printableState]);
  uint64_t v3 = *(void *)(a1[5] + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  uint64_t v5 = objc_claimAutoreleasedReturnValue([*(id *)(*v1 + 16) printableState]);
  uint64_t v6 = *(void *)(a1[6] + 8LL);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  [*(id *)(*(void *)(a1[5] + 8) + 40) addObjectsFromArray:*(void *)(*(void *)(a1[6] + 8) + 40)];
  [*(id *)(*(void *)(a1[5] + 8) + 40) addObject:@"TokensToMutualAuthSessions:"];
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  id obj = *(id *)(*v1 + 32LL);
  id v8 = [obj countByEnumeratingWithState:&v28 objects:v33 count:16];
  if (v8)
  {
    uint64_t v21 = *(void *)v29;
    do
    {
      id v22 = v8;
      for (uint64_t i = 0LL; i != v22; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v29 != v21) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = *(void **)(*((void *)&v28 + 1) + 8LL * (void)i);
        uint64_t v11 = objc_opt_new(&OBJC_CLASS___NSMutableString);
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v10 descriptionInternal]);
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Token %@: ",  v12));
        -[NSMutableString appendString:](v11, "appendString:", v13);

        __int128 v26 = 0u;
        __int128 v27 = 0u;
        __int128 v24 = 0u;
        __int128 v25 = 0u;
        __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1[4] + 32) objectForKey:v10]);
        id v15 = [v14 countByEnumeratingWithState:&v24 objects:v32 count:16];
        if (v15)
        {
          uint64_t v16 = *(void *)v25;
          do
          {
            for (j = 0LL; j != v15; j = (char *)j + 1)
            {
              if (*(void *)v25 != v16) {
                objc_enumerationMutation(v14);
              }
              uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"ses-%@ ",  v18));
              -[NSMutableString appendString:](v11, "appendString:", v19);
            }

            id v15 = [v14 countByEnumeratingWithState:&v24 objects:v32 count:16];
          }

          while (v15);
        }

        [*(id *)(*(void *)(a1[5] + 8) + 40) addObject:v11];
      }

      id v8 = [obj countByEnumeratingWithState:&v28 objects:v33 count:16];
    }

    while (v8);
  }
}

void sub_1001F4BC8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
}

void sub_1001F50A4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  _Unwind_Resume(a1);
}

void sub_1001F523C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  if (a12) {
    operator delete(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001F5364(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F53A8()
{
}

void sub_1001F5614(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F5738(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F599C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001F5AA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F5EB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F61B8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, char a11)
{
  if (a10) {
    std::__shared_weak_count::__release_weak(a10);
  }

  _Unwind_Resume(a1);
}

void sub_1001F6400( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Unwind_Resume(a1);
}

void sub_1001F6508( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9, uint64_t a10, uint64_t a11, char a12)
{
  a9.super_class = (Class)&OBJC_CLASS___NIServerFindingRangingProvider;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_1001F678C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F6D74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F705C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F7184(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F729C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F73D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F7668(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F772C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + std::ostream::~ostream(v2, v3 + 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

void sub_1001F78F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F7FE4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, void *a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *__p,uint64_t a60,uint64_t a61,char a62,uint64_t a63)
{
  _Block_object_dispose(&a62, 8);
  _Unwind_Resume(a1);
}

void sub_1001F812C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"        %@: %@", a2, a3));
  objc_msgSend(v3, "addObject:");
}

void sub_1001F8188( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
}

void sub_1001F8230(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F82D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F84C4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  _Unwind_Resume(a1);
}

void sub_1001F8744(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F8894(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F89B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F8AD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F8D44( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p, uint64_t a21, int a22, __int16 a23, char a24, char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1001F8D7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(_BYTE *)(v1 + 72))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    if ((v3 - 2) >= 3)
    {
      if (v3 == 1)
      {
        _[*(id *)(a1 + 40) rangingBecameAvailable];
      }

      else if (!v3)
      {
        sub_10039E110();
      }
    }

    else
    {
      __int128 v11 = 0u;
      __int128 v12 = 0u;
      __int128 v9 = 0u;
      __int128 v10 = 0u;
      id v4 = *(id *)(v1 + 112);
      id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v5)
      {
        uint64_t v6 = *(void *)v10;
        do
        {
          uint64_t v7 = 0LL;
          do
          {
            if (*(void *)v10 != v6) {
              objc_enumerationMutation(v4);
            }
            id v8 = *(id *)(*((void *)&v9 + 1) + 8LL * (void)v7);
            objc_msgSend(*(id *)(a1 + 32), "_resetRangingStateForToken:", v8, (void)v9);
            [*(id *)(a1 + 40) didStopRangingWithPeer:v8];

            uint64_t v7 = (char *)v7 + 1;
          }

          while (v5 != v7);
          id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
        }

        while (v5);
      }

      [*(id *)(a1 + 40) rangingBecameUnavailable];
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10039E0E4();
  }

void sub_1001F8F2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001F903C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1001F9ED8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1001FA86C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  _Unwind_Resume(a1);
}

void sub_1001FAA70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001FABA8(_Unwind_Exception *a1)
{
  int v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1001FAE08(_Unwind_Exception *a1)
{
  int v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1001FB134(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001FB208(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001FB62C(_Unwind_Exception *a1)
{
  id v4 = v2;

  _Unwind_Resume(a1);
}

void sub_1001FC140( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001FC278(id a1)
{
  if (+[NIPlatformInfo isInternalBuild](&OBJC_CLASS___NIPlatformInfo, "isInternalBuild"))
  {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    byte_1007F4260 = [v1 BOOLForKey:@"FindingDisableMutualAuth"];

    uint64_t v2 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 67109120;
      v3[1] = byte_1007F4260;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#find-range,#auth Disable mutual auth: %d",  (uint8_t *)v3,  8u);
    }
  }

  else
  {
    byte_1007F4260 = 0;
  }

void sub_1001FC360(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001FC378(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 56))
  {
  }

  return a1;
}

char *sub_1001FC3C0(uint64_t a1, char *__dst, char *__src, char *a4, uint64_t a5)
{
  id v5 = __dst;
  if (a5 < 1) {
    return v5;
  }
  uint64_t v6 = a5;
  uint64_t v7 = __src;
  __int128 v10 = *(char **)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9 - (uint64_t)v10 < a5)
  {
    __int128 v11 = *(char **)a1;
    uint64_t v12 = (uint64_t)&v10[a5 - *(void *)a1];
    if (v12 < 0) {
      sub_10001E11C();
    }
    uint64_t v13 = (char *)(__dst - v11);
    unint64_t v14 = v9 - (void)v11;
    if (2 * v14 > v12) {
      uint64_t v12 = 2 * v14;
    }
    if (v14 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v15 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v15 = v12;
    }
    if (v15) {
      uint64_t v16 = operator new(v15);
    }
    else {
      uint64_t v16 = 0LL;
    }
    __int128 v26 = &v13[(void)v16];
    __int128 v27 = &v13[(void)v16 + v6];
    __int128 v28 = v26;
    do
    {
      char v29 = *v7++;
      *v28++ = v29;
      --v6;
    }

    while (v6);
    __int128 v30 = *(char **)a1;
    if (*(char **)a1 == v5)
    {
      BOOL v32 = v26;
    }

    else
    {
      __int128 v31 = v5;
      BOOL v32 = v26;
      do
      {
        char v33 = *--v31;
        *--BOOL v32 = v33;
      }

      while (v31 != v30);
      __int128 v10 = *(char **)(a1 + 8);
    }

    id v34 = (char *)v16 + v15;
    if (v10 != v5) {
      memmove(v27, v5, v10 - v5);
    }
    int v35 = *(char **)a1;
    *(void *)a1 = v32;
    *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = &v27[v10 - v5];
    *(void *)(a1 + 16) = v34;
    if (v35) {
      operator delete(v35);
    }
    return v26;
  }

  uint64_t v17 = v10 - __dst;
  if (v10 - __dst >= a5)
  {
    uint64_t v18 = &__src[a5];
    __int128 v20 = *(char **)(a1 + 8);
LABEL_17:
    uint64_t v21 = &v5[v6];
    id v22 = &v20[-v6];
    uint64_t v23 = v20;
    if (&v20[-v6] < v10)
    {
      int64_t v24 = &v10[v6] - v20;
      uint64_t v23 = v20;
      do
      {
        char v25 = *v22++;
        *v23++ = v25;
        --v24;
      }

      while (v24);
    }

    *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = v23;
    if (v20 != v21) {
      memmove(&v5[v6], v5, v20 - v21);
    }
    if (v18 != v7) {
      memmove(v5, v7, v18 - v7);
    }
    return v5;
  }

  uint64_t v18 = &__src[v17];
  int64_t v19 = a4 - &__src[v17];
  if (a4 != &__src[v17]) {
    memmove(*(void **)(a1 + 8), &__src[v17], a4 - &__src[v17]);
  }
  __int128 v20 = &v10[v19];
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = &v10[v19];
  if (v17 >= 1) {
    goto LABEL_17;
  }
  return v5;
}

void *sub_1001FC59C(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    uint64_t v6 = result;
    __n128 result = sub_1000242D4(result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __n128 result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }

  return result;
}

void sub_1001FC5F8(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + std::ostream::~ostream(v2, v3 + 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

void sub_1001FC614(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1007B66E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1001FC624(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1007B66E0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_1001FC644(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_1001FC654(uint64_t a1)
{
  return a1;
}

void sub_1001FC67C(id *a1)
{
}

void *sub_1001FC6A4(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B6730;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1001FC6E8(uint64_t a1, void *a2)
{
  *a2 = off_1007B6730;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1001FC71C(uint64_t a1)
{
}

void sub_1001FC724(id *a1)
{
}

void sub_1001FC74C(uint64_t a1, void *a2, uint64_t *a3)
{
  int v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  uint64_t v4 = *(void *)(a1 + 8);
  id v5 = *(dispatch_queue_s **)(v4 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001FC83C;
  block[3] = &unk_1007B2E28;
  uint64_t v6 = *a3;
  void block[4] = v4;
  void block[5] = v6;
  int v10 = *((_DWORD *)a3 + 2);
  dispatch_async(v5, block);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

uint64_t sub_1001FC7F4(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001FC830()
{
  return &off_1007B6790;
}

id sub_1001FC83C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _serviceRequestStatusUpdate:a1 + 40];
}

uint64_t sub_1001FC84C(uint64_t a1)
{
  return a1;
}

void sub_1001FC874(id *a1)
{
}

void *sub_1001FC89C(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B67B0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1001FC8E0(uint64_t a1, void *a2)
{
  *a2 = off_1007B67B0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1001FC914(uint64_t a1)
{
}

void sub_1001FC91C(id *a1)
{
}

void sub_1001FC944(uint64_t a1, void *a2, __int128 *a3)
{
  id v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  __int128 v6 = a3[1];
  __int128 v24 = *a3;
  __int128 v25 = v6;
  __int128 v26 = a3[2];
  sub_1001376C0(v27, (uint64_t)(a3 + 3));
  sub_1001317DC(v28, (uint64_t)(a3 + 38));
  sub_100137714(v31, (__n128 *)((char *)a3 + 760));
  memcpy(v35, a3 + 55, sizeof(v35));
  uint64_t v7 = *(void *)(a1 + 8);
  unint64_t v8 = *(dispatch_queue_s **)(v7 + 8);
  block[1] = 3321888768LL;
  __int128 v13 = v25;
  __int128 v14 = v26;
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_1001FCC70;
  block[3] = &unk_1007B3B10;
  void block[4] = v7;
  __int128 v12 = v24;
  sub_1001376C0(v15, (uint64_t)v27);
  sub_1001317DC(v16, (uint64_t)v28);
  sub_100137714(v19, v31);
  memcpy(v23, v35, sizeof(v23));
  dispatch_async(v8, block);
  if (v22 && __p)
  {
    uint64_t v21 = __p;
    operator delete(__p);
  }

  if (v18) {
    sub_100034A98((uint64_t)v17, v17[1]);
  }
  sub_100124BFC((uint64_t)v15);
  if (v34 && v32)
  {
    char v33 = v32;
    operator delete(v32);
  }

  if (v30) {
    sub_100034A98((uint64_t)v29, v29[1]);
  }
  sub_100124BFC((uint64_t)v27);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

void sub_1001FCB54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  if (LOBYTE(STACK[0x320])) {
    sub_10039E190((uint64_t)va);
  }
  sub_100124BFC(v4);
  if (LOBYTE(STACK[0x948]))
  {
    __int128 v6 = (void *)STACK[0x920];
    if (STACK[0x920])
    {
      STACK[0x928] = (unint64_t)v6;
      operator delete(v6);
    }
  }

  if (LOBYTE(STACK[0x8D0])) {
    sub_100034A98((uint64_t)&STACK[0x850], (void *)STACK[0x858]);
  }
  sub_100124BFC(v3);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1001FCC28(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001FCC64()
{
  return &off_1007B6810;
}

id sub_1001FCC70(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _didReceiveNewSolution:a1 + 40];
}

uint64_t sub_1001FCC80(uint64_t a1)
{
  return a1;
}

void sub_1001FCCA8(id *a1)
{
}

void *sub_1001FCCD0(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B6830;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1001FCD14(uint64_t a1, void *a2)
{
  *a2 = off_1007B6830;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1001FCD48(uint64_t a1)
{
}

void sub_1001FCD50(id *a1)
{
}

void sub_1001FCD78(uint64_t a1, void *a2, __int16 *a3)
{
  id v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  __int16 v16 = *a3;
  char v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t v17 = 0LL;
  sub_1001309C0(&v17, *((const void **)a3 + 1), *((void *)a3 + 2), *((void *)a3 + 2) - *((void *)a3 + 1));
  __int128 v20 = *((_OWORD *)a3 + 2);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(dispatch_queue_s **)(v6 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768LL;
  block[2] = sub_1001FCF44;
  block[3] = &unk_1007B3BD8;
  void block[4] = v6;
  __int16 v11 = v16;
  __int128 v13 = 0LL;
  uint64_t v14 = 0LL;
  std::stringbuf::string_type __p = 0LL;
  sub_1001309C0(&__p, v17, (uint64_t)v18, v18 - (_BYTE *)v17);
  __int128 v15 = v20;
  dispatch_async(v7, block);
  if (__p)
  {
    __int128 v13 = __p;
    operator delete(__p);
  }

  if (v17)
  {
    char v18 = v17;
    operator delete(v17);
  }

  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

void sub_1001FCEA4(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *(void **)(v2 - 72);
  if (v4)
  {
    *(void *)(v2 - 64) = v4;
    operator delete(v4);
  }

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_1001FCEFC(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001FCF38()
{
  return &off_1007B6890;
}

id sub_1001FCF44(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _didReceivePeerData:a1 + 40];
}

uint64_t sub_1001FCF54(uint64_t a1)
{
  return a1;
}

void sub_1001FCF7C(id *a1)
{
}

void *sub_1001FCFA4(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B68B0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1001FCFE8(uint64_t a1, void *a2)
{
  *a2 = off_1007B68B0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1001FD01C(uint64_t a1)
{
}

void sub_1001FD024(id *a1)
{
}

void sub_1001FD04C(uint64_t a1, void *a2, int *a3)
{
  uint64_t v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  int v4 = *a3;
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(dispatch_queue_s **)(v5 + 8);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  _DWORD v9[2] = sub_1001FD138;
  void v9[3] = &unk_1007B2EE0;
  void v9[4] = v5;
  int v10 = v4;
  dispatch_async(v6, v9);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

uint64_t sub_1001FD0F0(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001FD12C()
{
  return &off_1007B6910;
}

id sub_1001FD138(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _didReceiveInvalidation:*(unsigned int *)(a1 + 40)];
}

uint64_t sub_1001FD148(uint64_t a1)
{
  return a1;
}

void sub_1001FD170(id *a1)
{
}

void *sub_1001FD198(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B6930;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1001FD1DC(uint64_t a1, void *a2)
{
  *a2 = off_1007B6930;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1001FD210(uint64_t a1)
{
}

void sub_1001FD218(id *a1)
{
}

void sub_1001FD240(uint64_t a1, void *a2, __int128 *a3)
{
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  __int128 v6 = a3[1];
  __int128 v24 = *a3;
  __int128 v25 = v6;
  __int128 v26 = a3[2];
  sub_1001376C0(v27, (uint64_t)(a3 + 3));
  sub_1001317DC(v28, (uint64_t)(a3 + 38));
  sub_100137714(v31, (__n128 *)((char *)a3 + 760));
  memcpy(v35, a3 + 55, sizeof(v35));
  uint64_t v7 = *(void *)(a1 + 8);
  unint64_t v8 = *(dispatch_queue_s **)(v7 + 8);
  block[1] = 3321888768LL;
  __int128 v13 = v25;
  __int128 v14 = v26;
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_1001FD56C;
  block[3] = &unk_1007B3B10;
  void block[4] = v7;
  __int128 v12 = v24;
  sub_1001376C0(v15, (uint64_t)v27);
  sub_1001317DC(v16, (uint64_t)v28);
  sub_100137714(v19, v31);
  memcpy(v23, v35, sizeof(v23));
  dispatch_async(v8, block);
  if (v22 && __p)
  {
    uint64_t v21 = __p;
    operator delete(__p);
  }

  if (v18) {
    sub_100034A98((uint64_t)v17, v17[1]);
  }
  sub_100124BFC((uint64_t)v15);
  if (v34 && v32)
  {
    char v33 = v32;
    operator delete(v32);
  }

  if (v30) {
    sub_100034A98((uint64_t)v29, v29[1]);
  }
  sub_100124BFC((uint64_t)v27);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

void sub_1001FD450(_Unwind_Exception *a1, uint64_t a2, ...)
{
  if (LOBYTE(STACK[0x320])) {
    sub_10039E190((uint64_t)va);
  }
  sub_100124BFC(v4);
  if (LOBYTE(STACK[0x948]))
  {
    __int128 v6 = (void *)STACK[0x920];
    if (STACK[0x920])
    {
      STACK[0x928] = (unint64_t)v6;
      operator delete(v6);
    }
  }

  if (LOBYTE(STACK[0x8D0])) {
    sub_100034A98((uint64_t)&STACK[0x850], (void *)STACK[0x858]);
  }
  sub_100124BFC(v3);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1001FD524(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1001FD560()
{
  return &off_1007B6990;
}

id sub_1001FD56C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _didReceiveUnsuccessfulSolution:a1 + 40];
}

void sub_1001FD580(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10026F6CC(a1);
  operator delete(v1);
}

uint64_t sub_1001FD594(uint64_t a1)
{
  return sub_10026F6CC(a1 - 8);
}

void sub_1001FD59C(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10026F6CC(a1 - 8);
  operator delete(v1);
}

void sub_1001FD5B4(void *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x48uLL);
  sub_1001FD614(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_100012538((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_1001FD600(_Unwind_Exception *a1)
{
}

void *sub_1001FD614(void *a1, void *a2)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_1007A2120;
  sub_100263A1C(a1 + 3, *a2);
  return a1;
}

void sub_1001FD64C(_Unwind_Exception *a1)
{
}

void sub_1001FD660(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, os_log_s *a4@<X8>)
{
}

void sub_1001FD670(void *a1@<X1>, uint64_t a2@<X8>)
{
}

void sub_1001FD678(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
}

void sub_1001FD68C(uint64_t a1@<X8>)
{
  *(void *)(v1 - std::ostream::~ostream(v2, v3 + 8) = a1;
}

uint64_t sub_1001FD698(uint64_t result, void *a2, uint64_t a3, float a4)
{
  if (v4 >= 0) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = (void *)*a2;
  }
  *(float *)a3 = a4;
  *(void *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2080;
  *(void *)(a3 + 14) = v5;
  return result;
}

  ;
}

uint64_t sub_1001FD6D0(uint64_t result, float a2, uint64_t a3, uint64_t a4)
{
  *(float *)a4 = a2;
  *(void *)(a4 + 4) = result;
  *(_WORD *)(a4 + 12) = 2112;
  *(void *)(a4 + 14) = v4;
  return result;
}

  ;
}

  ;
}

void sub_1001FD710(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

void sub_1001FD71C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_1001FD798(_Unwind_Exception *a1)
{
}

void sub_1001FD7B0()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_100428260;
      v1[1] = *(_OWORD *)algn_100428270;
      v1[2] = xmmword_100428280;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_1001FD850(_Unwind_Exception *a1)
{
}

void sub_1001FD868()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  uint64_t v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F9E00 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F9DF0 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9DF0, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  uint64_t v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F9E18 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F9E08 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9E08, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  unint64_t v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  __int16 v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F9E30 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F9E20 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9E20, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  __int128 v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  __int128 v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F9E48 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F9E38 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9E38, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  uint64_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F9E60 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F9E50 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9E50, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  uint64_t v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F9E78 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F9E68 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9E68, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  __int128 v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  __int128 v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F9E90 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F9E80 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9E80, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  char v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  __int128 v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F9EA8 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F9E98 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9E98, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  char v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  int v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F9EC0 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F9EB0 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F9EB0, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_1001FDE5C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001FDED0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001FDEF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001FDF3C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001FDF64(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001FDFA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001FDFD0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001FE00C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001FE060(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001FE088(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001FE0B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001FE0EC(uint64_t a1)
{
  return a1;
}

void sub_1001FE114( uint64_t a1, uint64_t a2, uint64_t *a3, __int128 *a4, const void **a5, __int128 *a6, __int128 *a7)
{
  uint64_t v13 = qword_1008007D8;
  if (qword_1008007D8)
  {
    int v14 = *(_DWORD *)a3;
    __int128 v15 = &qword_1008007D8;
    do
    {
      int v16 = *(_DWORD *)(v13 + 32);
      BOOL v17 = v16 < v14;
      if (v16 >= v14) {
        __int128 v18 = (uint64_t *)v13;
      }
      else {
        __int128 v18 = (uint64_t *)(v13 + 8);
      }
      if (!v17) {
        __int128 v15 = (uint64_t *)v13;
      }
      uint64_t v13 = *v18;
    }

    while (*v18);
    if (v15 != &qword_1008007D8 && v14 >= *((_DWORD *)v15 + 8))
    {
      __int16 v107 = a3;
      uint64_t v19 = sub_1002046A8(&qword_1008007D0, (int *)a3, (uint64_t)&unk_1004242F8, (_DWORD **)&v107);
      sub_100203904((uint64_t *)&v109, (const void ***)v19 + 5);
      if (v110 != (void **)sub_10001E9D0((uint64_t)&v109, (const void **)a4))
      {
        uint64_t v111 = a4;
        __int128 v20 = sub_100204774(&v109, (const void **)a4, (uint64_t)&unk_1004242F8, &v111);
        sub_1002035F8((uint64_t *)&v107, (const void ***)v20 + 7);
        uint64_t v21 = (void **)sub_10001E9D0((uint64_t)&v107, a5);
        if (v108 != v21)
        {
          uint64_t v111 = (__int128 *)a5;
          __int128 v22 = sub_1002048B0(&v107, a5, (uint64_t)&unk_1004242F8, &v111);
          *(_OWORD *)a2 = *(_OWORD *)(v22 + 7);
          goto LABEL_97;
        }

        sub_1002032A0((uint64_t)&v107, *v21);
      }

      sub_100203218((uint64_t)&v109, v110[0]);
    }
  }

  uint64_t v23 = qword_1008007F0;
  if (qword_1008007F0)
  {
    int v24 = *(_DWORD *)a3;
    __int128 v25 = &qword_1008007F0;
    do
    {
      int v26 = *(_DWORD *)(v23 + 32);
      BOOL v27 = v26 < v24;
      if (v26 >= v24) {
        __int128 v28 = (uint64_t *)v23;
      }
      else {
        __int128 v28 = (uint64_t *)(v23 + 8);
      }
      if (!v27) {
        __int128 v25 = (uint64_t *)v23;
      }
      uint64_t v23 = *v28;
    }

    while (*v28);
    if (v25 != &qword_1008007F0 && v24 >= *((_DWORD *)v25 + 8))
    {
      __int16 v107 = a3;
      char v29 = sub_1002046A8(&qword_1008007E8, (int *)a3, (uint64_t)&unk_1004242F8, (_DWORD **)&v107);
      sub_100203E0C((uint64_t *)&v109, (uint64_t)(v29 + 5));
      __int128 v30 = v110[0];
      if (v110[0])
      {
        int v31 = *(_DWORD *)a6;
        __int128 v32 = v110;
        char v33 = v110[0];
        do
        {
          __int128 v34 = v33;
          int v35 = v32;
          int v36 = *((_DWORD *)v33 + 8);
          if (v36 >= v31) {
            __int128 v32 = (void **)v33;
          }
          else {
            ++v33;
          }
          char v33 = (void *)*v33;
        }

        while (v33);
        if (v32 != v110)
        {
          std::string v37 = v36 >= v31 ? v34 : v35;
          if (v31 >= *((_DWORD *)v37 + 8))
          {
            uint64_t v111 = a6;
            std::string v38 = sub_1002046A8(&v109, (int *)a6, (uint64_t)&unk_1004242F8, (_DWORD **)&v111);
            sub_1002035F8((uint64_t *)&v107, (const void ***)v38 + 5);
            int v39 = (void **)sub_10001E9D0((uint64_t)&v107, a5);
            if (v108 != v39)
            {
              uint64_t v111 = (__int128 *)a5;
              id v40 = sub_1002048B0(&v107, a5, (uint64_t)&unk_1004242F8, &v111);
              *(_OWORD *)a2 = *(_OWORD *)(v40 + 7);
              __int128 v41 = *((_OWORD *)v40 + 6);
              *(_OWORD *)(a2 + 52) = *(_OWORD *)((char *)v40 + 108);
              *(_OWORD *)(a2 + 40) = v41;
              sub_100201B78((std::string *)(a2 + 72), (const std::string *)(v40 + 16));
              __int128 v42 = *((_OWORD *)v40 + 10);
              *(_OWORD *)(a2 + 120) = *((_OWORD *)v40 + 11);
              *(_OWORD *)(a2 + 104) = v42;
              __int128 v43 = *((_OWORD *)v40 + 12);
              __int128 v44 = *((_OWORD *)v40 + 13);
              __int128 v45 = *((_OWORD *)v40 + 14);
              *(_OWORD *)(a2 + 184) = *((_OWORD *)v40 + 15);
              *(_OWORD *)(a2 + 16std::ostream::~ostream(v2, v3 + 8) = v45;
              *(_OWORD *)(a2 + 152) = v44;
              *(_OWORD *)(a2 + 136) = v43;
              __int128 v46 = *((_OWORD *)v40 + 16);
              __int128 v47 = *((_OWORD *)v40 + 17);
              __int128 v48 = *((_OWORD *)v40 + 18);
              *(_OWORD *)(a2 + 24std::ostream::~ostream(v2, v3 + 8) = *((_OWORD *)v40 + 19);
              *(_OWORD *)(a2 + 232) = v48;
              *(_OWORD *)(a2 + 216) = v47;
              *(_OWORD *)(a2 + 200) = v46;
              __int128 v49 = *((_OWORD *)v40 + 20);
              __int128 v50 = *((_OWORD *)v40 + 21);
              __int128 v51 = *((_OWORD *)v40 + 22);
              *(void *)(a2 + 312) = v40[46];
              *(_OWORD *)(a2 + 280) = v50;
              *(_OWORD *)(a2 + 296) = v51;
              *(_OWORD *)(a2 + 264) = v49;
              sub_1002032A0((uint64_t)&v107, v108[0]);
              sub_100203BF4((uint64_t)&v109, v110[0]);
              return;
            }

            sub_1002032A0((uint64_t)&v107, *v39);
            __int128 v30 = v110[0];
          }
        }
      }

      sub_100203BF4((uint64_t)&v109, v30);
    }
  }

  uint64_t v52 = qword_100800808;
  if (qword_100800808)
  {
    int v53 = *(_DWORD *)a3;
    unsigned int v54 = &qword_100800808;
    do
    {
      int v55 = *(_DWORD *)(v52 + 32);
      BOOL v56 = v55 < v53;
      if (v55 >= v53) {
        int v57 = (uint64_t *)v52;
      }
      else {
        int v57 = (uint64_t *)(v52 + 8);
      }
      if (!v56) {
        unsigned int v54 = (uint64_t *)v52;
      }
      uint64_t v52 = *v57;
    }

    while (*v57);
    if (v54 != &qword_100800808 && v53 >= *((_DWORD *)v54 + 8))
    {
      __int16 v107 = a3;
      v58 = sub_1002046A8(&qword_100800800, (int *)a3, (uint64_t)&unk_1004242F8, (_DWORD **)&v107);
      sub_100203904((uint64_t *)&v109, (const void ***)v58 + 5);
      uint64_t v111 = &qword_1007FA710;
      int v59 = sub_100204774(&v109, (const void **)&qword_1007FA710, (uint64_t)&unk_1004242F8, &v111);
      sub_1002035F8((uint64_t *)&v107, (const void ***)v59 + 7);
      BOOL v60 = (void **)sub_10001E9D0((uint64_t)&v107, a5);
      if (v108 != v60)
      {
        uint64_t v111 = (__int128 *)a5;
        __int128 v22 = sub_1002048B0(&v107, a5, (uint64_t)&unk_1004242F8, &v111);
        *(_OWORD *)a2 = *(_OWORD *)(v22 + 7);
        goto LABEL_97;
      }

      sub_1002032A0((uint64_t)&v107, *v60);
      sub_100203218((uint64_t)&v109, v110[0]);
    }
  }

  uint64_t v61 = qword_100800820;
  if (qword_100800820)
  {
    int v62 = *(_DWORD *)a3;
    std::string::size_type v63 = &qword_100800820;
    do
    {
      int v64 = *(_DWORD *)(v61 + 32);
      BOOL v65 = v64 < v62;
      if (v64 >= v62) {
        uint64_t v66 = (uint64_t *)v61;
      }
      else {
        uint64_t v66 = (uint64_t *)(v61 + 8);
      }
      if (!v65) {
        std::string::size_type v63 = (uint64_t *)v61;
      }
      uint64_t v61 = *v66;
    }

    while (*v66);
    if (v63 != &qword_100800820 && v62 >= *((_DWORD *)v63 + 8))
    {
      __int16 v107 = a3;
      v67 = sub_1002046A8(&qword_100800818, (int *)a3, (uint64_t)&unk_1004242F8, (_DWORD **)&v107);
      sub_1002043B8((uint64_t *)&v109, (const void ***)v67 + 5);
      if (v110 != (void **)sub_10001E9D0((uint64_t)&v109, (const void **)a4))
      {
        uint64_t v111 = a4;
        BOOL v68 = sub_100204BB0(&v109, (const void **)a4, (uint64_t)&unk_1004242F8, &v111);
        sub_100202C84((uint64_t *)&v107, (uint64_t)(v68 + 7));
        if (v108[0])
        {
          int v69 = *(_DWORD *)a7;
          BOOL v70 = v108;
          int v71 = v108[0];
          do
          {
            v72 = v71;
            BOOL v73 = v70;
            int v74 = *((_DWORD *)v71 + 8);
            if (v74 >= v69) {
              BOOL v70 = (void **)v71;
            }
            else {
              ++v71;
            }
            int v71 = (void *)*v71;
          }

          while (v71);
          if (v70 != v108)
          {
            uint64_t v75 = v74 >= v69 ? v72 : v73;
            if (v69 >= *((_DWORD *)v75 + 8))
            {
              uint64_t v111 = a7;
              BOOL v95 = sub_100204CEC((uint64_t)&v107, (int *)a7, (uint64_t)&unk_1004242F8, (_DWORD **)&v111);
              *(_OWORD *)a2 = *(_OWORD *)(v95 + 5);
              __int128 v96 = *((_OWORD *)v95 + 5);
              *(_OWORD *)(a2 + 52) = *(_OWORD *)((char *)v95 + 92);
              *(_OWORD *)(a2 + 40) = v96;
              sub_100201B78((std::string *)(a2 + 72), (const std::string *)(v95 + 14));
              __int128 v97 = *((_OWORD *)v95 + 9);
              *(_OWORD *)(a2 + 120) = *((_OWORD *)v95 + 10);
              *(_OWORD *)(a2 + 104) = v97;
              __int128 v98 = *((_OWORD *)v95 + 11);
              __int128 v99 = *((_OWORD *)v95 + 12);
              __int128 v100 = *((_OWORD *)v95 + 13);
              *(_OWORD *)(a2 + 184) = *((_OWORD *)v95 + 14);
              *(_OWORD *)(a2 + 16std::ostream::~ostream(v2, v3 + 8) = v100;
              *(_OWORD *)(a2 + 152) = v99;
              *(_OWORD *)(a2 + 136) = v98;
              __int128 v101 = *((_OWORD *)v95 + 15);
              __int128 v102 = *((_OWORD *)v95 + 16);
              __int128 v103 = *((_OWORD *)v95 + 17);
              *(_OWORD *)(a2 + 24std::ostream::~ostream(v2, v3 + 8) = *((_OWORD *)v95 + 18);
              *(_OWORD *)(a2 + 232) = v103;
              *(_OWORD *)(a2 + 216) = v102;
              *(_OWORD *)(a2 + 200) = v101;
              __int128 v104 = *((_OWORD *)v95 + 19);
              __int128 v105 = *((_OWORD *)v95 + 20);
              __int128 v106 = *((_OWORD *)v95 + 21);
              *(void *)(a2 + 312) = v95[44];
              *(_OWORD *)(a2 + 280) = v105;
              *(_OWORD *)(a2 + 296) = v106;
              *(_OWORD *)(a2 + 264) = v104;
              sub_100202980((uint64_t)&v107, v108[0]);
              sub_1002040FC((uint64_t)&v109, v110[0]);
              return;
            }
          }
        }

        sub_100202980((uint64_t)&v107, v108[0]);
      }

      sub_1002040FC((uint64_t)&v109, v110[0]);
    }
  }

  uint64_t v76 = qword_100800838;
  if (qword_100800838)
  {
    int v77 = *(_DWORD *)a3;
    v78 = &qword_100800838;
    do
    {
      int v79 = *(_DWORD *)(v76 + 32);
      BOOL v80 = v79 < v77;
      if (v79 >= v77) {
        v81 = (uint64_t *)v76;
      }
      else {
        v81 = (uint64_t *)(v76 + 8);
      }
      if (!v80) {
        v78 = (uint64_t *)v76;
      }
      uint64_t v76 = *v81;
    }

    while (*v81);
    if (v78 != &qword_100800838 && v77 >= *((_DWORD *)v78 + 8))
    {
      __int16 v107 = a3;
      uint64_t v82 = sub_1002046A8(&qword_100800830, (int *)a3, (uint64_t)&unk_1004242F8, (_DWORD **)&v107);
      sub_100203904((uint64_t *)&v109, (const void ***)v82 + 5);
      if (v110 == (void **)sub_10001E9D0((uint64_t)&v109, (const void **)a4))
      {
LABEL_98:
        sub_100203218((uint64_t)&v109, v110[0]);
        return;
      }

      uint64_t v111 = a4;
      v83 = sub_100204774(&v109, (const void **)a4, (uint64_t)&unk_1004242F8, &v111);
      sub_1002035F8((uint64_t *)&v107, (const void ***)v83 + 7);
      uint64_t v111 = &qword_1007FA710;
      __int128 v22 = sub_1002048B0(&v107, (const void **)&qword_1007FA710, (uint64_t)&unk_1004242F8, &v111);
      *(_OWORD *)a2 = *(_OWORD *)(v22 + 7);
LABEL_97:
      __int128 v84 = *((_OWORD *)v22 + 6);
      *(_OWORD *)(a2 + 52) = *(_OWORD *)((char *)v22 + 108);
      *(_OWORD *)(a2 + 40) = v84;
      sub_100201B78((std::string *)(a2 + 72), (const std::string *)(v22 + 16));
      __int128 v85 = *((_OWORD *)v22 + 10);
      *(_OWORD *)(a2 + 120) = *((_OWORD *)v22 + 11);
      *(_OWORD *)(a2 + 104) = v85;
      __int128 v86 = *((_OWORD *)v22 + 12);
      __int128 v87 = *((_OWORD *)v22 + 13);
      __int128 v88 = *((_OWORD *)v22 + 14);
      *(_OWORD *)(a2 + 184) = *((_OWORD *)v22 + 15);
      *(_OWORD *)(a2 + 16std::ostream::~ostream(v2, v3 + 8) = v88;
      *(_OWORD *)(a2 + 152) = v87;
      *(_OWORD *)(a2 + 136) = v86;
      __int128 v89 = *((_OWORD *)v22 + 16);
      __int128 v90 = *((_OWORD *)v22 + 17);
      __int128 v91 = *((_OWORD *)v22 + 18);
      *(_OWORD *)(a2 + 24std::ostream::~ostream(v2, v3 + 8) = *((_OWORD *)v22 + 19);
      *(_OWORD *)(a2 + 232) = v91;
      *(_OWORD *)(a2 + 216) = v90;
      *(_OWORD *)(a2 + 200) = v89;
      __int128 v92 = *((_OWORD *)v22 + 20);
      __int128 v93 = *((_OWORD *)v22 + 21);
      __int128 v94 = *((_OWORD *)v22 + 22);
      *(void *)(a2 + 312) = v22[46];
      *(_OWORD *)(a2 + 280) = v93;
      *(_OWORD *)(a2 + 296) = v94;
      *(_OWORD *)(a2 + 264) = v92;
      sub_1002032A0((uint64_t)&v107, v108[0]);
      goto LABEL_98;
    }
  }

void sub_1001FE9C4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, char a12, void *a13)
{
}

void sub_1001FEA68(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t *a4, uint64_t *a5, _DWORD *a6, _DWORD *a7)
{
  __int128 v12 = sub_1001FF518(a3);
  v67 = (void *)objc_claimAutoreleasedReturnValue(v12);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  else {
    int v14 = (uint64_t *)*a4;
  }
  BOOL v65 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v14));
  else {
    __int128 v15 = (uint64_t *)*a5;
  }
  uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v15));
  if (byte_1007FA727 >= 0) {
    int v16 = &qword_1007FA710;
  }
  else {
    int v16 = (__int128 *)qword_1007FA710;
  }
  BOOL v60 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v16));
  int v64 = (void *)objc_claimAutoreleasedReturnValue([v13 objectForKey:@"BtThresholdScannerModelAdvertiserModel"]);
  std::string::size_type v63 = (void *)objc_claimAutoreleasedReturnValue([v13 objectForKey:@"BtThresholdScannerClassAdvertiserModel"]);
  uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue([v13 objectForKey:@"BtThresholdScannerModelAdvertiserClass"]);
  int v62 = (void *)objc_claimAutoreleasedReturnValue([v13 objectForKey:@"BtThresholdAdvertiserModel"]);
  int v59 = (void *)objc_claimAutoreleasedReturnValue([v13 objectForKey:@"BtThresholdScannerModel"]);
  BOOL v17 = (void *)objc_claimAutoreleasedReturnValue([v64 objectForKey:v67]);

  if (v17)
  {
    __int128 v18 = (void *)objc_claimAutoreleasedReturnValue([v64 objectForKeyedSubscript:v67]);
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKey:v65]);

    if (v19)
    {
      __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKeyedSubscript:v65]);
      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v20 objectForKey:v66]);

      if (v21)
      {
        __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v20 objectForKey:v66]);
        sub_1001FF6A8(v22, (uint64_t)&v68);
        *(_OWORD *)a2 = v68;
        uint64_t v23 = a2 + 24;
        sub_100034A98(a2 + 16, *(void **)(a2 + 24));
        int v24 = v70;
        *(void *)(a2 + 16) = v69;
        *(void *)(a2 + 24) = v24;
        uint64_t v25 = v71;
        *(void *)(a2 + 32) = v71;
        if (v25)
        {
          _DWORD v24[2] = v23;
          int v69 = &v70;
          BOOL v70 = 0LL;
          uint64_t v71 = 0LL;
        }

        else
        {
          *(void *)(a2 + 16) = v23;
        }

        *(_OWORD *)(a2 + 40) = v72[0];
        *(_OWORD *)(a2 + 52) = *(_OWORD *)((char *)v72 + 12);
        sub_100201D14(a2 + 72, &__p);
        *(void *)(a2 + 312) = v89;
        *(_OWORD *)(a2 + 200) = v82;
        *(_OWORD *)(a2 + 216) = v83;
        *(_OWORD *)(a2 + 232) = v84;
        *(_OWORD *)(a2 + 24std::ostream::~ostream(v2, v3 + 8) = v85;
        *(_OWORD *)(a2 + 136) = v78;
        *(_OWORD *)(a2 + 152) = v79;
        *(_OWORD *)(a2 + 16std::ostream::~ostream(v2, v3 + 8) = v80;
        *(_OWORD *)(a2 + 184) = v81;
        *(_OWORD *)(a2 + 104) = v76;
        *(_OWORD *)(a2 + 120) = v77;
        __int128 v49 = v87;
        *(_OWORD *)(a2 + 264) = v86;
        *(_OWORD *)(a2 + 280) = v49;
        *(_OWORD *)(a2 + 296) = v88;
        if (v75 && v74 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
        __int128 v50 = v70;
LABEL_56:
        sub_100034A98((uint64_t)&v69, v50);

LABEL_57:
        goto LABEL_63;
      }
    }
  }

  int v26 = (void *)objc_claimAutoreleasedReturnValue([v63 objectForKey:v67]);

  if (v26)
  {
    __int128 v18 = (void *)objc_claimAutoreleasedReturnValue([v63 objectForKeyedSubscript:v67]);
    BOOL v27 = sub_1001FFBBC(a6);
    __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(v27);
    char v29 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKey:v28]);

    if (v29)
    {
      __int128 v30 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKeyedSubscript:v28]);
      int v31 = (void *)objc_claimAutoreleasedReturnValue([v30 objectForKey:v66]);

      if (v31)
      {
        __int128 v32 = (void *)objc_claimAutoreleasedReturnValue([v30 objectForKey:v66]);
        sub_1001FF6A8(v32, (uint64_t)&v68);
        *(_OWORD *)a2 = v68;
        uint64_t v33 = a2 + 24;
        sub_100034A98(a2 + 16, *(void **)(a2 + 24));
        __int128 v34 = v70;
        *(void *)(a2 + 16) = v69;
        *(void *)(a2 + 24) = v34;
        uint64_t v35 = v71;
        *(void *)(a2 + 32) = v71;
        if (v35)
        {
          v34[2] = v33;
          int v69 = &v70;
          BOOL v70 = 0LL;
          uint64_t v71 = 0LL;
        }

        else
        {
          *(void *)(a2 + 16) = v33;
        }

void sub_1001FF3B8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_1001FF518(_DWORD *a1)
{
  LODWORD(v6[0]) = 1;
  v6[1] = @"unspecified";
  int v7 = 2;
  __int128 v8 = @"immediate";
  int v9 = 3;
  __int128 v10 = @"near";
  int v11 = 4;
  __int128 v12 = @"desk";
  int v13 = 5;
  int v14 = @"vicinity";
  int v15 = 6;
  int v16 = @"sensorMax";
  int v17 = 7;
  __int128 v18 = @"superImmediate";
  sub_100201C08((uint64_t)v5, (int *)v6, 7LL);
  for (uint64_t i = 13LL; i != -1; i -= 2LL)

  v6[0] = a1;
  uint64_t v3 = sub_100160ED4(v5, a1, (uint64_t)&unk_1004242F8, v6)[5];
  sub_100160AB8((uint64_t)v5, v5[1]);
  return v3;
}

void sub_1001FF668( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

void sub_1001FF6A8(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = a1;
  __int128 v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"threshold"]);
  [v4 floatValue];
  float v6 = v5;

  if (v6 >= 0.0)
  {
    int v9 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v10 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"threshold"]);
      *(_DWORD *)std::string buf = 138412290;
      *(void *)&uint8_t buf[4] = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#btproximitydatabase Invalid OTA threshold value of: %@",  buf,  0xCu);
    }
  }

  else
  {
    int v7 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"custom_threshold_type"]);
    unsigned int v8 = [v7 isEqualToString:@"default_bluetooth_filter"];

    if (v8)
    {
      *(void *)a2 = 0x300000008LL;
      *(double *)(a2 + std::ostream::~ostream(v2, v3 + 8) = v6;
      *(double *)std::string buf = v6;
      sub_10015ED64(a2 + 16, (double *)buf, 1LL);
LABEL_12:
      *(_OWORD *)(a2 + 40) = xmmword_100423D50;
      *(void *)(a2 + 56) = 0x4024000000000000LL;
      *(_DWORD *)(a2 + 64) = 45;
      *(_BYTE *)(a2 + 72) = 0;
      *(_BYTE *)(a2 + 96) = 0;
      *(void *)(a2 + 104) = 0LL;
      *(_BYTE *)(a2 + 112) = 0;
      *(_DWORD *)(a2 + 116) = 1;
      *(_BYTE *)(a2 + 120) = 1;
      *(_OWORD *)(a2 + 12std::ostream::~ostream(v2, v3 + 8) = xmmword_100423D60;
      *(_OWORD *)(a2 + 144) = xmmword_100423D70;
      __asm { FMOV            V0.2D, #1.0 }

      *(_OWORD *)(a2 + 160) = _Q0;
      *(void *)(a2 + 176) = 0xC059000000000000LL;
      *(_OWORD *)(a2 + 184) = xmmword_100423D80;
      *(int32x2_t *)(a2 + 200) = vdup_n_s32(0x3DCCCCCDu);
      *(_OWORD *)(a2 + 20std::ostream::~ostream(v2, v3 + 8) = xmmword_100423CC0;
      *(void *)(a2 + 232) = 0LL;
      *(void *)(a2 + 240) = 0LL;
      *(void *)(a2 + 224) = 0x3FD999999999999ALL;
      *(_OWORD *)(a2 + 24std::ostream::~ostream(v2, v3 + 8) = xmmword_100423CD0;
      *(_DWORD *)(a2 + 264) = 5;
LABEL_13:
      *(void *)(a2 + 272) = 0x4000000000000000LL;
      *(_DWORD *)(a2 + 280) = 10;
      *(void *)(a2 + 28std::ostream::~ostream(v2, v3 + 8) = 0x4034000000000000LL;
      *(_DWORD *)(a2 + 296) = 3;
      *(_OWORD *)(a2 + 304) = xmmword_100423D90;
      goto LABEL_14;
    }

    int v17 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"custom_threshold_type"]);
    unsigned int v18 = [v17 isEqualToString:@"rssi_estimator"];

    if (v18)
    {
      *(void *)a2 = 0x200000003LL;
      *(double *)(a2 + std::ostream::~ostream(v2, v3 + 8) = v6;
      *(double *)std::string buf = v6;
      sub_10015ED64(a2 + 16, (double *)buf, 1LL);
      goto LABEL_12;
    }

    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"custom_threshold_type"]);
    unsigned int v20 = [v19 isEqualToString:@"default_setup"];

    if (v20)
    {
      *(void *)a2 = 0x300000010LL;
      *(double *)(a2 + std::ostream::~ostream(v2, v3 + 8) = v6;
      *(double *)std::string buf = v6;
      sub_10015ED64(a2 + 16, (double *)buf, 1LL);
      goto LABEL_12;
    }

    int v26 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"custom_threshold_type"]);
    unsigned int v27 = [v26 isEqualToString:@"high_rate_hysteresis"];

    if (v27)
    {
      *(void *)a2 = 0x200000003LL;
      *(double *)(a2 + std::ostream::~ostream(v2, v3 + 8) = v6;
      *(double *)std::string buf = v6;
      sub_10015ED64(a2 + 16, (double *)buf, 1LL);
      *(_OWORD *)(a2 + 40) = xmmword_1004287C0;
      *(void *)(a2 + 56) = 0x4000000000000000LL;
      *(_DWORD *)(a2 + 64) = 20;
      *(_BYTE *)(a2 + 72) = 0;
      *(_BYTE *)(a2 + 96) = 0;
      *(void *)(a2 + 104) = 0LL;
      *(_BYTE *)(a2 + 112) = 0;
      *(_DWORD *)(a2 + 116) = 1;
      *(_BYTE *)(a2 + 120) = 1;
      *(_OWORD *)(a2 + 12std::ostream::~ostream(v2, v3 + 8) = xmmword_100423D60;
      *(_OWORD *)(a2 + 144) = xmmword_100423D70;
      __asm { FMOV            V0.2D, #1.0 }

      *(_OWORD *)(a2 + 160) = _Q0;
      *(_OWORD *)(a2 + 184) = xmmword_100423D80;
      *(void *)(a2 + 176) = 0xC059000000000000LL;
      *(int32x2_t *)(a2 + 200) = vdup_n_s32(0x3DCCCCCDu);
      *(_OWORD *)(a2 + 20std::ostream::~ostream(v2, v3 + 8) = xmmword_100423CC0;
      *(void *)(a2 + 232) = 0LL;
      *(void *)(a2 + 240) = 0LL;
      *(void *)(a2 + 224) = 0x3FD999999999999ALL;
      *(_OWORD *)(a2 + 24std::ostream::~ostream(v2, v3 + 8) = xmmword_100423CD0;
      *(_DWORD *)(a2 + 264) = 5;
      goto LABEL_13;
    }
  }

  *(_OWORD *)a2 = xmmword_1007FA740;
  sub_100201E2C((uint64_t *)(a2 + 16), (uint64_t)&unk_1007FA750);
  *(_OWORD *)(a2 + 40) = xmmword_1007FA768;
  *(_OWORD *)(a2 + 52) = *(__int128 *)((char *)&xmmword_1007FA768 + 12);
  sub_100201F04(a2 + 72, (__int128 *)&byte_1007FA788);
  __int128 v11 = *(_OWORD *)&dword_1007FA858;
  *(_OWORD *)(a2 + 264) = xmmword_1007FA848;
  *(_OWORD *)(a2 + 280) = v11;
  *(_OWORD *)(a2 + 296) = xmmword_1007FA868;
  __int128 v12 = unk_1007FA818;
  *(_OWORD *)(a2 + 200) = xmmword_1007FA808;
  *(_OWORD *)(a2 + 216) = v12;
  __int128 v13 = unk_1007FA838;
  *(_OWORD *)(a2 + 232) = xmmword_1007FA828;
  *(_OWORD *)(a2 + 24std::ostream::~ostream(v2, v3 + 8) = v13;
  __int128 v14 = unk_1007FA7D8;
  *(_OWORD *)(a2 + 136) = *(__int128 *)((char *)&xmmword_1007FA7C0 + 8);
  *(_OWORD *)(a2 + 152) = v14;
  __int128 v15 = unk_1007FA7F8;
  *(_OWORD *)(a2 + 16std::ostream::~ostream(v2, v3 + 8) = *(__int128 *)((char *)&xmmword_1007FA7E0 + 8);
  *(_OWORD *)(a2 + 184) = v15;
  __int128 v16 = *(_OWORD *)&byte_1007FA7B8;
  *(_OWORD *)(a2 + 104) = xmmword_1007FA7A8;
  *(void *)(a2 + 312) = qword_1007FA878;
  *(_OWORD *)(a2 + 120) = v16;
LABEL_14:
}

void sub_1001FFB50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_1001FFBBC(_DWORD *a1)
{
  v6[1] = @"DeviceClassInvalid";
  int v7 = 1;
  unsigned int v8 = @"DeviceClassMacBook";
  int v9 = 2;
  __int128 v10 = @"DeviceClassMacBookAir";
  int v11 = 3;
  __int128 v12 = @"DeviceClassMacBookPro";
  int v13 = 4;
  __int128 v14 = @"DeviceClassiMac";
  int v15 = 5;
  __int128 v16 = @"DeviceClassMacMini";
  int v17 = 6;
  unsigned int v18 = @"DeviceClassIpad";
  int v19 = 7;
  unsigned int v20 = @"DeviceClassIphone";
  int v21 = 8;
  __int128 v22 = @"DeviceClassMax";
  int v23 = 9;
  int v24 = @"DeviceClassMacPro";
  int v25 = 10;
  int v26 = @"DeviceClassMacStudio";
  int v27 = 11;
  __int128 v28 = @"DeviceClassAirTag";
  int v29 = 12;
  __int128 v30 = @"DeviceClassDefaultMac";
  int v31 = 13;
  __int128 v32 = @"DeviceClassAudioAccessory";
  int v33 = 14;
  __int128 v34 = @"DeviceClassHomePod";
  int v35 = 15;
  LODWORD(v6[0]) = 0;
  int v36 = @"DeviceClassWatch";
  int v37 = 16;
  std::string v38 = @"DeviceClassRemote";
  int v39 = 18;
  id v40 = @"DeviceClassPencil";
  sub_100201DB0((uint64_t)v5, (int *)v6, 18LL);
  for (uint64_t i = 35LL; i != -1; i -= 2LL)

  v6[0] = a1;
  id v3 = sub_100160ED4(v5, a1, (uint64_t)&unk_1004242F8, v6)[5];
  sub_100160AB8((uint64_t)v5, v5[1]);
  return v3;
}

void sub_1001FFDE4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

uint64_t sub_1001FFE24(uint64_t a1, char *__s)
{
  __int128 v2 = __s;
  int64_t v3 = __s[23];
  if (__s[23] < 0)
  {
    uint64_t v4 = *(void *)__s;
    float v5 = (char *)*((void *)__s + 1);
  }

  else
  {
    uint64_t v4 = (uint64_t)__s;
    float v5 = (char *)__s[23];
  }

  if (byte_1007FA1E7 >= 0) {
    float v6 = &qword_1007FA1D0;
  }
  else {
    float v6 = (uint64_t *)qword_1007FA1D0;
  }
  if (byte_1007FA1E7 >= 0) {
    int64_t v7 = byte_1007FA1E7;
  }
  else {
    int64_t v7 = unk_1007FA1D8;
  }
  if (v7)
  {
    if ((uint64_t)v5 >= v7)
    {
      __int128 v12 = &v5[v4];
      int v13 = *(char *)v6;
      a1 = v4;
      do
      {
        __int128 v14 = &v5[-v7];
        a1 = (uint64_t)memchr((const void *)a1, v13, (size_t)(v14 + 1));
        if (!a1) {
          break;
        }
        uint64_t v15 = a1;
        a1 = memcmp((const void *)a1, v6, v7);
        if (!(_DWORD)a1)
        {
          goto LABEL_40;
        }

        a1 = v15 + 1;
        float v5 = &v12[-v15 - 1];
      }

      while ((uint64_t)v5 >= v7);
    }

    uint64_t v8 = sub_100200404(a1, (char **)v2);
    if ((v8 & 1) == 0)
    {
      int v9 = (char *)v2[23];
      if (v2[23] < 0)
      {
        __int128 v10 = *(char **)v2;
        int v11 = (char *)*((void *)v2 + 1);
      }

      else
      {
        __int128 v10 = v2;
        int v11 = (char *)v2[23];
      }

      if (byte_1007FA22F >= 0) {
        __int128 v16 = &qword_1007FA218;
      }
      else {
        __int128 v16 = (uint64_t *)qword_1007FA218;
      }
      if (byte_1007FA22F >= 0) {
        int64_t v17 = byte_1007FA22F;
      }
      else {
        int64_t v17 = unk_1007FA220;
      }
      if (!v17) {
        return 4LL;
      }
      if ((uint64_t)v11 >= v17)
      {
        int v19 = &v11[(void)v10];
        int v20 = *(char *)v16;
        uint64_t v8 = (uint64_t)v10;
        do
        {
          int v21 = &v11[-v17];
          uint64_t v8 = (uint64_t)memchr((const void *)v8, v20, (size_t)(v21 + 1));
          if (!v8) {
            break;
          }
          uint64_t v22 = v8;
          uint64_t v8 = memcmp((const void *)v8, v16, v17);
          if (!(_DWORD)v8)
          {
            return 4LL;
          }

          uint64_t v8 = v22 + 1;
          int v11 = &v19[-v22 - 1];
        }

        while ((uint64_t)v11 >= v17);
      }

      if ((v9 & 0x80) != 0)
      {
        unsigned int v18 = *(char **)v2;
        int v9 = (char *)*((void *)v2 + 1);
      }

      else
      {
        unsigned int v18 = v2;
      }

      if (byte_1007FA247 >= 0) {
        __int128 v42 = &qword_1007FA230;
      }
      else {
        __int128 v42 = (uint64_t *)qword_1007FA230;
      }
      if (byte_1007FA247 >= 0) {
        int64_t v43 = byte_1007FA247;
      }
      else {
        int64_t v43 = unk_1007FA238;
      }
      if (!v43) {
        return 5LL;
      }
      if ((uint64_t)v9 >= v43)
      {
        __int128 v45 = &v9[(void)v18];
        int v46 = *(char *)v42;
        uint64_t v8 = (uint64_t)v18;
        do
        {
          uint64_t v8 = (uint64_t)memchr((const void *)v8, v46, (size_t)&v9[-v43 + 1]);
          if (!v8) {
            break;
          }
          uint64_t v47 = v8;
          uint64_t v8 = memcmp((const void *)v8, v42, v43);
          if (!(_DWORD)v8)
          {
            return 5LL;
          }

          uint64_t v8 = v47 + 1;
          int v9 = &v45[-v47 - 1];
        }

        while ((uint64_t)v9 >= v43);
      }

      uint64_t v44 = sub_100200690(v8, (char **)v2);
      return 17LL;
    }

    return 3LL;
  }

uint64_t sub_10020032C(uint64_t *a1, char *a2, unint64_t a3)
{
  uint64_t v3 = (uint64_t)a1;
  if (*((char *)a1 + 23) < 0)
  {
    uint64_t v3 = *a1;
    unint64_t v4 = a1[1];
  }

  else
  {
    unint64_t v4 = *((unsigned __int8 *)a1 + 23);
  }

  int v5 = a2[23];
  if (v5 >= 0) {
    float v6 = a2;
  }
  else {
    float v6 = *(char **)a2;
  }
  if (v5 >= 0) {
    int64_t v7 = a2[23];
  }
  else {
    int64_t v7 = *((void *)a2 + 1);
  }
  if (v4 < a3) {
    return -1LL;
  }
  if (v7)
  {
    uint64_t v8 = (const void *)(v3 + a3);
    int v9 = (char *)(v3 + v4);
    int64_t v10 = v4 - a3;
    if (v10 >= v7)
    {
      int v13 = *v6;
      do
      {
        uint64_t v14 = v10 - v7;
        if (v14 == -1) {
          break;
        }
        uint64_t v15 = (char *)memchr(v8, v13, v14 + 1);
        if (!v15) {
          break;
        }
        int v11 = v15;
        if (!memcmp(v15, v6, v7)) {
          goto LABEL_15;
        }
        uint64_t v8 = v11 + 1;
        int64_t v10 = v9 - (v11 + 1);
      }

      while (v10 >= v7);
    }

    int v11 = v9;
LABEL_15:
    if (v11 == v9) {
      return -1LL;
    }
    else {
      return (uint64_t)&v11[-v3];
    }
  }

  return a3;
}

BOOL sub_100200404(uint64_t a1, char **a2)
{
  unsigned __int8 v3 = atomic_load((unsigned __int8 *)&qword_1007FAB30);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_1007FAB30))
  {
    sub_1000065CC(&qword_1007FAB18, "Mac14,5");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1007FAB18, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1007FAB30);
  }

  unint64_t v4 = (char *)*((unsigned __int8 *)a2 + 23);
  else {
    int v5 = *a2;
  }
  if (byte_1007FAB2F >= 0) {
    float v6 = &qword_1007FAB18;
  }
  else {
    float v6 = (uint64_t *)qword_1007FAB18;
  }
  if (byte_1007FAB2F >= 0) {
    int64_t v7 = byte_1007FAB2F;
  }
  else {
    int64_t v7 = unk_1007FAB20;
  }
  if (!v7) {
    return 1LL;
  }
  if ((uint64_t)v4 >= v7)
  {
    uint64_t v14 = &v4[(void)v5];
    int v15 = *(char *)v6;
    __int128 v16 = v5;
    do
    {
      int64_t v17 = &v4[-v7];
      unsigned int v18 = (char *)memchr(v16, v15, (size_t)(v17 + 1));
      if (!v18) {
        break;
      }
      int v19 = v18;
      if (!memcmp(v18, v6, v7))
      {
        if (v19 != v14 && v19 - v5 != -1) {
          return 1LL;
        }
        break;
      }

      __int128 v16 = v19 + 1;
      unint64_t v4 = (char *)(v14 - (v19 + 1));
    }

    while ((uint64_t)v4 >= v7);
  }

  unsigned __int8 v8 = atomic_load((unsigned __int8 *)&qword_1007FAB50);
  if ((v8 & 1) == 0 && __cxa_guard_acquire(&qword_1007FAB50))
  {
    sub_1000065CC(&qword_1007FAB38, "Mac14,6");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1007FAB38, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1007FAB50);
  }

  int v9 = (char *)*((unsigned __int8 *)a2 + 23);
  int64_t v10 = (char)v9 >= 0 ? a2 : (char **)*a2;
  int v11 = byte_1007FAB4F >= 0 ? &qword_1007FAB38 : (uint64_t *)qword_1007FAB38;
  int64_t v12 = byte_1007FAB4F >= 0 ? byte_1007FAB4F : unk_1007FAB40;
  if (!v12) {
    return 1LL;
  }
  if ((uint64_t)v9 >= v12)
  {
    int v20 = &v9[(void)v10];
    int v21 = *(char *)v11;
    uint64_t v22 = v10;
    do
    {
      int v23 = &v9[-v12];
      int64_t v24 = (char *)memchr(v22, v21, (size_t)(v23 + 1));
      if (!v24) {
        break;
      }
      int v25 = v24;
      if (!memcmp(v24, v11, v12)) {
        return v25 != v20 && v25 - (char *)v10 != -1;
      }
      uint64_t v22 = (char **)(v25 + 1);
      int v9 = (char *)(v20 - (v25 + 1));
    }

    while ((uint64_t)v9 >= v12);
  }

  return 0LL;
}

void sub_100200668(_Unwind_Exception *a1)
{
}

uint64_t sub_100200690(uint64_t a1, char **a2)
{
  unsigned __int8 v3 = atomic_load((unsigned __int8 *)&qword_1007FABB0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_1007FABB0))
  {
    sub_1000065CC(&qword_1007FAB98, "Mac14,3");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1007FAB98, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1007FABB0);
  }

  unint64_t v4 = (char *)*((unsigned __int8 *)a2 + 23);
  else {
    int v5 = *a2;
  }
  if (byte_1007FABAF >= 0) {
    float v6 = &qword_1007FAB98;
  }
  else {
    float v6 = (uint64_t *)qword_1007FAB98;
  }
  if (byte_1007FABAF >= 0) {
    int64_t v7 = byte_1007FABAF;
  }
  else {
    int64_t v7 = unk_1007FABA0;
  }
  if (!v7) {
    return 1LL;
  }
  unsigned __int8 v8 = &v4[(void)v5];
  if ((uint64_t)v4 >= v7)
  {
    int v12 = *(char *)v6;
    int v13 = v5;
    do
    {
      uint64_t v14 = &v4[-v7];
      int v15 = (char *)memchr(v13, v12, (size_t)(v14 + 1));
      if (!v15) {
        break;
      }
      int v9 = v15;
      if (!memcmp(v15, v6, v7)) {
        return v9 != v8 && v9 - v5 != -1;
      }
      int v13 = v9 + 1;
      unint64_t v4 = (char *)(v8 - (v9 + 1));
    }

    while ((uint64_t)v4 >= v7);
  }

  int v9 = v8;
  return v9 != v8 && v9 - v5 != -1;
}

void sub_1002007D4(_Unwind_Exception *a1)
{
}

BOOL sub_1002007EC(uint64_t a1, char **a2)
{
  unsigned __int8 v3 = atomic_load((unsigned __int8 *)&qword_1007FAB70);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_1007FAB70))
  {
    sub_1000065CC(&qword_1007FAB58, "Mac13,1");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1007FAB58, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1007FAB70);
  }

  unsigned __int8 v4 = atomic_load((unsigned __int8 *)&qword_1007FAB90);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_1007FAB90))
  {
    sub_1000065CC(&qword_1007FAB78, "Mac13,2");
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1007FAB78, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1007FAB90);
  }

  char v5 = *((_BYTE *)a2 + 23);
  if (v5 >= 0) {
    float v6 = (char *)a2;
  }
  else {
    float v6 = *a2;
  }
  if (byte_1007FAB6F >= 0) {
    int64_t v7 = &qword_1007FAB58;
  }
  else {
    int64_t v7 = (uint64_t *)qword_1007FAB58;
  }
  if (byte_1007FAB6F >= 0) {
    int64_t v8 = byte_1007FAB6F;
  }
  else {
    int64_t v8 = unk_1007FAB60;
  }
  if (!v8) {
    return 1LL;
  }
  if (v5 >= 0) {
    int64_t v9 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    int64_t v9 = (int64_t)a2[1];
  }
  int64_t v10 = &v6[v9];
  if (v9 >= v8)
  {
    int v14 = *(char *)v7;
    int64_t v15 = v9;
    __int128 v16 = v6;
    do
    {
      int64_t v17 = v15 - v8;
      if (v17 == -1) {
        break;
      }
      unsigned int v18 = (char *)memchr(v16, v14, v17 + 1);
      if (!v18) {
        break;
      }
      int v19 = v18;
      if (!memcmp(v18, v7, v8))
      {
        if (v19 != v10 && v19 - v6 != -1) {
          return 1LL;
        }
        break;
      }

      __int128 v16 = v19 + 1;
      int64_t v15 = v10 - (v19 + 1);
    }

    while (v15 >= v8);
  }

  int v11 = byte_1007FAB8F >= 0 ? &qword_1007FAB78 : (uint64_t *)qword_1007FAB78;
  int64_t v12 = byte_1007FAB8F >= 0 ? byte_1007FAB8F : unk_1007FAB80;
  if (!v12) {
    return 1LL;
  }
  if (v9 >= v12)
  {
    int v20 = *(char *)v11;
    int v21 = v6;
    do
    {
      if (v9 - v12 == -1) {
        break;
      }
      uint64_t v22 = (char *)memchr(v21, v20, v9 - v12 + 1);
      if (!v22) {
        break;
      }
      int v23 = v22;
      if (!memcmp(v22, v11, v12)) {
        return v23 != v10 && v23 - v6 != -1;
      }
      int v21 = v23 + 1;
      int64_t v9 = v10 - (v23 + 1);
    }

    while (v9 >= v12);
  }

  return 0LL;
}

void sub_100200A2C(_Unwind_Exception *a1)
{
}

BOOL sub_100200A54(uint64_t a1, char **a2)
{
  char v2 = *((_BYTE *)a2 + 23);
  if (v2 >= 0) {
    unsigned __int8 v3 = (char *)a2;
  }
  else {
    unsigned __int8 v3 = *a2;
  }
  if (byte_1007FA37F >= 0) {
    unsigned __int8 v4 = &qword_1007FA368;
  }
  else {
    unsigned __int8 v4 = (uint64_t *)qword_1007FA368;
  }
  if (byte_1007FA37F >= 0) {
    int64_t v5 = byte_1007FA37F;
  }
  else {
    int64_t v5 = unk_1007FA370;
  }
  if (!v5) {
    return 1LL;
  }
  if (v2 >= 0) {
    int64_t v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    int64_t v6 = (int64_t)a2[1];
  }
  int64_t v7 = &v3[v6];
  if (v6 >= v5)
  {
    int v17 = *(char *)v4;
    int64_t v18 = v6;
    int v19 = v3;
    do
    {
      int64_t v20 = v18 - v5;
      if (v20 == -1) {
        break;
      }
      int v21 = (char *)memchr(v19, v17, v20 + 1);
      if (!v21) {
        break;
      }
      uint64_t v22 = v21;
      if (!memcmp(v21, v4, v5))
      {
        if (v22 != v7 && v22 - v3 != -1) {
          return 1LL;
        }
        break;
      }

      int v19 = v22 + 1;
      int64_t v18 = v7 - (v22 + 1);
    }

    while (v18 >= v5);
  }

  int64_t v8 = byte_1007FA397 >= 0 ? &xmmword_1007FA380 : (__int128 *)xmmword_1007FA380;
  int64_t v9 = byte_1007FA397 >= 0 ? byte_1007FA397 : *((void *)&xmmword_1007FA380 + 1);
  if (!v9) {
    return 1LL;
  }
  if (v6 >= v9)
  {
    int v23 = *(char *)v8;
    int64_t v24 = v6;
    int v25 = v3;
    do
    {
      int64_t v26 = v24 - v9;
      if (v26 == -1) {
        break;
      }
      int v27 = (char *)memchr(v25, v23, v26 + 1);
      if (!v27) {
        break;
      }
      __int128 v28 = v27;
      if (!memcmp(v27, v8, v9))
      {
        if (v28 != v7 && v28 - v3 != -1) {
          return 1LL;
        }
        break;
      }

      int v25 = v28 + 1;
      int64_t v24 = v7 - (v28 + 1);
    }

    while (v24 >= v9);
  }

  int64_t v10 = byte_1007FA337 >= 0 ? &qword_1007FA320 : (uint64_t *)qword_1007FA320;
  int64_t v11 = byte_1007FA337 >= 0 ? byte_1007FA337 : unk_1007FA328;
  if (!v11) {
    return 1LL;
  }
  if (v6 >= v11)
  {
    int v29 = *(char *)v10;
    int64_t v30 = v6;
    int v31 = v3;
    do
    {
      int64_t v32 = v30 - v11;
      if (v32 == -1) {
        break;
      }
      int v33 = (char *)memchr(v31, v29, v32 + 1);
      if (!v33) {
        break;
      }
      int64_t v34 = v33;
      if (!memcmp(v33, v10, v11))
      {
        if (v34 != v7 && v34 - v3 != -1) {
          return 1LL;
        }
        break;
      }

      int v31 = v34 + 1;
      int64_t v30 = v7 - (v34 + 1);
    }

    while (v30 >= v11);
  }

  int64_t v12 = byte_1007FA34F >= 0 ? &qword_1007FA338 : (uint64_t *)qword_1007FA338;
  int64_t v13 = byte_1007FA34F >= 0 ? byte_1007FA34F : unk_1007FA340;
  if (!v13) {
    return 1LL;
  }
  if (v6 >= v13)
  {
    int v35 = *(char *)v12;
    int64_t v36 = v6;
    int v37 = v3;
    do
    {
      int64_t v38 = v36 - v13;
      if (v38 == -1) {
        break;
      }
      int v39 = (char *)memchr(v37, v35, v38 + 1);
      if (!v39) {
        break;
      }
      id v40 = v39;
      if (!memcmp(v39, v12, v13))
      {
        if (v40 != v7 && v40 - v3 != -1) {
          return 1LL;
        }
        break;
      }

      int v37 = v40 + 1;
      int64_t v36 = v7 - (v40 + 1);
    }

    while (v36 >= v13);
  }

  int v14 = byte_1007FA367 >= 0 ? &qword_1007FA350 : (uint64_t *)qword_1007FA350;
  int64_t v15 = byte_1007FA367 >= 0 ? byte_1007FA367 : unk_1007FA358;
  if (!v15) {
    return 1LL;
  }
  if (v6 >= v15)
  {
    int v41 = *(char *)v14;
    __int128 v42 = v3;
    do
    {
      if (v6 - v15 == -1) {
        break;
      }
      int64_t v43 = (char *)memchr(v42, v41, v6 - v15 + 1);
      if (!v43) {
        break;
      }
      uint64_t v44 = v43;
      if (!memcmp(v43, v14, v15)) {
        return v44 != v7 && v44 - v3 != -1;
      }
      __int128 v42 = v44 + 1;
      int64_t v6 = v7 - (v44 + 1);
    }

    while (v6 >= v15);
  }

  return 0LL;
}

uint64_t sub_100200D80(uint64_t a1, char **a2)
{
  char v2 = (char *)*((unsigned __int8 *)a2 + 23);
  else {
    unsigned __int8 v3 = *a2;
  }
  if (byte_1007FA3DF >= 0) {
    unsigned __int8 v4 = &xmmword_1007FA3C8;
  }
  else {
    unsigned __int8 v4 = (__int128 *)xmmword_1007FA3C8;
  }
  if (byte_1007FA3DF >= 0) {
    int64_t v5 = byte_1007FA3DF;
  }
  else {
    int64_t v5 = *((void *)&xmmword_1007FA3C8 + 1);
  }
  if (!v5) {
    return 1LL;
  }
  int64_t v6 = &v2[(void)v3];
  if ((uint64_t)v2 >= v5)
  {
    int v10 = *(char *)v4;
    int64_t v11 = v3;
    do
    {
      int64_t v12 = &v2[-v5];
      int64_t v13 = (char *)memchr(v11, v10, (size_t)(v12 + 1));
      if (!v13) {
        break;
      }
      int64_t v7 = v13;
      if (!memcmp(v13, v4, v5)) {
        return v7 != v6 && v7 - v3 != -1;
      }
      int64_t v11 = v7 + 1;
      char v2 = (char *)(v6 - (v7 + 1));
    }

    while ((uint64_t)v2 >= v5);
  }

  int64_t v7 = v6;
  return v7 != v6 && v7 - v3 != -1;
}

uint64_t *sub_100200E60@<X0>(unsigned int *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = qword_1007FA730;
  if (!qword_1007FA730) {
    return sub_1000065CC(a2, "");
  }
  unsigned int v4 = *a1;
  while (1)
  {
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 >= v5) {
      break;
    }
LABEL_6:
    uint64_t v3 = *(void *)v3;
    if (!v3) {
      return sub_1000065CC(a2, "");
    }
  }

  if (v5 < v4)
  {
    v3 += 8LL;
    goto LABEL_6;
  }

  id result = sub_100200F00((uint64_t)&unk_1007FA728, a1);
  __int128 v7 = *(_OWORD *)result;
  a2[2] = result[2];
  *(_OWORD *)a2 = v7;
  return result;
}

uint64_t *sub_100200F00(uint64_t a1, unsigned int *a2)
{
  char v2 = *(uint64_t **)(a1 + 8);
  if (!v2) {
LABEL_8:
  }
    sub_100126B2C("map::at:  key not found");
  unsigned int v3 = *a2;
  while (1)
  {
    while (1)
    {
      unsigned int v4 = *((_DWORD *)v2 + 8);
      if (v3 >= v4) {
        break;
      }
      char v2 = (uint64_t *)*v2;
      if (!v2) {
        goto LABEL_8;
      }
    }

    if (v4 >= v3) {
      return v2 + 5;
    }
    char v2 = (uint64_t *)v2[1];
    if (!v2) {
      goto LABEL_8;
    }
  }

uint64_t *sub_100200F54(_DWORD *a1, const void **a2)
{
  if ((_UNKNOWN *)sub_10001E9D0((uint64_t)&unk_1007FAB00, a2) != &unk_1007FAB08)
  {
    uint64_t v4 = sub_10020107C((uint64_t)&unk_1007FAB00, a2);
    sub_100202408((uint64_t *)&v14, v4);
    if (v15[0])
    {
      int v5 = *a1;
      int64_t v6 = v15;
      __int128 v7 = v15[0];
      do
      {
        int64_t v8 = v7;
        int64_t v9 = v6;
        int v10 = *((_DWORD *)v7 + 8);
        if (v10 >= v5) {
          int64_t v6 = (void **)v7;
        }
        else {
          ++v7;
        }
        __int128 v7 = (void *)*v7;
      }

      while (v7);
      if (v6 != v15)
      {
        int64_t v11 = v10 >= v5 ? v8 : v9;
        if (v5 >= *((_DWORD *)v11 + 8))
        {
          __int128 v16 = a1;
          int64_t v12 = sub_100160ED4(&v14, a1, (uint64_t)&unk_1004242F8, &v16)[5];
          sub_100034A98((uint64_t)&v14, v15[0]);
          return v12;
        }
      }
    }

    sub_100034A98((uint64_t)&v14, v15[0]);
  }

  return 0LL;
}

void sub_100201064( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

uint64_t sub_10020107C(uint64_t a1, const void **a2)
{
  uint64_t v2 = *sub_10001E444(a1, &v4, a2);
  if (!v2) {
    sub_100126B2C("map::at:  key not found");
  }
  return v2 + 56;
}

void sub_1002010B8(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, std::string *a4@<X3>, uint64_t a5@<X8>)
{
  LODWORD(v57) = a2;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_1000063A8(__p, *(void **)a3, *(void *)(a3 + 8));
  }

  else
  {
    *(_OWORD *)__n128 __p = *(_OWORD *)a3;
    uint64_t v55 = *(void *)(a3 + 16);
  }

  int v10 = sub_1001FFE24(a1, (char *)__p);
  if (SHIBYTE(v55) < 0) {
    operator delete(__p[0]);
  }
  int v56 = v10;
  if ((char)a4->__r_.__value_.__s.__size_ < 0)
  {
    sub_1000063A8(__dst, a4->__r_.__value_.__l.__data_, a4->__r_.__value_.__l.__size_);
  }

  else
  {
    *(_OWORD *)__int128 __dst = *(_OWORD *)&a4->__r_.__value_.__l.__data_;
    std::string::size_type cap = a4->__r_.__value_.__l.__cap_;
  }

  int v11 = sub_1001FFE24(a1, (char *)__dst);
  if (SHIBYTE(cap) < 0) {
    operator delete(__dst[0]);
  }
  int v53 = v11;
  uint64_t v12 = qword_1008007C0;
  if (!qword_1008007C0) {
    goto LABEL_21;
  }
  int64_t v13 = &qword_1008007C0;
  do
  {
    int v14 = *(_DWORD *)(v12 + 32);
    BOOL v15 = v14 < a2;
    if (v14 >= a2) {
      __int128 v16 = (uint64_t *)v12;
    }
    else {
      __int128 v16 = (uint64_t *)(v12 + 8);
    }
    if (!v15) {
      int64_t v13 = (uint64_t *)v12;
    }
    uint64_t v12 = *v16;
  }

  while (*v16);
  if (v13 == &qword_1008007C0 || *((_DWORD *)v13 + 8) > a2) {
LABEL_21:
  }
    LODWORD(v57) = 1;
  uint64_t v47 = &v57;
  int v17 = sub_1002046A8(&qword_1008007B8, (int *)&v57, (uint64_t)&unk_1004242F8, (_DWORD **)&v47);
  sub_100202F28((uint64_t *)&v49, (uint64_t)(v17 + 5));
  int64_t v18 = v50[0];
  if (!v50[0]) {
    goto LABEL_32;
  }
  int v19 = v50;
  do
  {
    int64_t v20 = v18;
    int v21 = v19;
    int v22 = *((_DWORD *)v18 + 8);
    int v23 = v18 + 1;
    if (v22 >= v10)
    {
      int v23 = v20;
      int v19 = (void **)v20;
    }

    int64_t v18 = (void *)*v23;
  }

  while (v18);
  if (v19 == v50 || (v22 >= v10 ? (int64_t v24 = v20) : (int64_t v24 = v21), v10 < *((_DWORD *)v24 + 8))) {
LABEL_32:
  }
    int v56 = 0;
  __int128 v58 = &v56;
  int v25 = sub_1002046A8(&v49, &v56, (uint64_t)&unk_1004242F8, &v58);
  sub_100202C84((uint64_t *)&v47, (uint64_t)(v25 + 5));
  int64_t v26 = v48[0];
  if (!v48[0]) {
    goto LABEL_43;
  }
  int v27 = v48;
  do
  {
    __int128 v28 = v26;
    int v29 = v27;
    int v30 = *((_DWORD *)v26 + 8);
    int v31 = v26 + 1;
    if (v30 >= v11)
    {
      int v31 = v28;
      int v27 = (void **)v28;
    }

    int64_t v26 = (void *)*v31;
  }

  while (v26);
  if (v27 == v48 || (v30 >= v11 ? (int64_t v32 = v28) : (int64_t v32 = v29), v11 < *((_DWORD *)v32 + 8))) {
LABEL_43:
  }
    int v53 = 0;
  __int128 v58 = &v53;
  int v33 = sub_100204CEC((uint64_t)&v47, &v53, (uint64_t)&unk_1004242F8, &v58);
  *(_OWORD *)a5 = *(_OWORD *)(v33 + 5);
  sub_100201E2C((uint64_t *)(a5 + 16), (uint64_t)(v33 + 7));
  __int128 v34 = *((_OWORD *)v33 + 5);
  *(_OWORD *)(a5 + 52) = *(_OWORD *)((char *)v33 + 92);
  *(_OWORD *)(a5 + 40) = v34;
  uint64_t v35 = sub_100201F04(a5 + 72, (__int128 *)v33 + 7);
  __int128 v36 = *((_OWORD *)v33 + 9);
  *(_OWORD *)(a5 + 120) = *((_OWORD *)v33 + 10);
  *(_OWORD *)(a5 + 104) = v36;
  __int128 v37 = *((_OWORD *)v33 + 11);
  __int128 v38 = *((_OWORD *)v33 + 12);
  __int128 v39 = *((_OWORD *)v33 + 13);
  *(_OWORD *)(a5 + 184) = *((_OWORD *)v33 + 14);
  *(_OWORD *)(a5 + 16std::ostream::~ostream(v2, v3 + 8) = v39;
  *(_OWORD *)(a5 + 152) = v38;
  *(_OWORD *)(a5 + 136) = v37;
  __int128 v40 = *((_OWORD *)v33 + 15);
  __int128 v41 = *((_OWORD *)v33 + 16);
  __int128 v42 = *((_OWORD *)v33 + 17);
  *(_OWORD *)(a5 + 24std::ostream::~ostream(v2, v3 + 8) = *((_OWORD *)v33 + 18);
  *(_OWORD *)(a5 + 232) = v42;
  *(_OWORD *)(a5 + 216) = v41;
  *(_OWORD *)(a5 + 200) = v40;
  __int128 v43 = *((_OWORD *)v33 + 19);
  __int128 v44 = *((_OWORD *)v33 + 20);
  __int128 v45 = *((_OWORD *)v33 + 21);
  *(void *)(a5 + 312) = v33[44];
  *(_OWORD *)(a5 + 280) = v44;
  *(_OWORD *)(a5 + 296) = v45;
  *(_OWORD *)(a5 + 264) = v43;
  sub_1001FE114( v35,  a5,  &v57,  (__int128 *)a3,  (const void **)&a4->__r_.__value_.__l.__data_,  (__int128 *)&v56,  (__int128 *)&v53);
  sub_1001FEA68(v46, a5, &v57, (uint64_t *)a3, (uint64_t *)a4, &v56, &v53);
  sub_10020148C((std::string *)(a5 + 72), a4);
  sub_100202980((uint64_t)&v47, v48[0]);
  sub_100202934((uint64_t)&v49, v50[0]);
}

void sub_100201410( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, char a12, void *a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
}

std::string *sub_10020148C(std::string *__dst, const std::string *a2)
{
  if (__dst[1].__r_.__value_.__s.__data_[0])
  {
    std::string::operator=(__dst, a2);
  }

  else
  {
    if ((char)a2->__r_.__value_.__s.__size_ < 0)
    {
      sub_1000063A8(__dst, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
    }

    else
    {
      __int128 v3 = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
      __dst->__r_.__value_.__l.__cap_ = a2->__r_.__value_.__l.__cap_;
      *(_OWORD *)&__dst->__r_.__value_.__l.__data_ = v3;
    }

    __dst[1].__r_.__value_.__s.__data_[0] = 1;
  }

  return __dst;
}

void *sub_1002014F4(void *__dst, __int128 *a2, uint64_t a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v5 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__int128 __dst = v5;
  }

  sub_100202408(__dst + 3, a3);
  return __dst;
}

void sub_100201550(_Unwind_Exception *exception_object)
{
}

uint64_t sub_10020156C(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  *(_DWORD *)a1 = *a2;
  *(_OWORD *)(a1 + std::ostream::~ostream(v2, v3 + 8) = *(_OWORD *)a3;
  sub_100201E2C((uint64_t *)(a1 + 24), a3 + 16);
  __int128 v5 = *(_OWORD *)(a3 + 40);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a3 + 52);
  *(_OWORD *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = v5;
  sub_100201F04(a1 + 80, (__int128 *)(a3 + 72));
  __int128 v6 = *(_OWORD *)(a3 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a3 + 104);
  *(_OWORD *)(a1 + 12std::ostream::~ostream(v2, v3 + 8) = v6;
  __int128 v7 = *(_OWORD *)(a3 + 136);
  __int128 v8 = *(_OWORD *)(a3 + 152);
  __int128 v9 = *(_OWORD *)(a3 + 184);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a3 + 168);
  *(_OWORD *)(a1 + 192) = v9;
  *(_OWORD *)(a1 + 144) = v7;
  *(_OWORD *)(a1 + 160) = v8;
  __int128 v10 = *(_OWORD *)(a3 + 200);
  __int128 v11 = *(_OWORD *)(a3 + 216);
  __int128 v12 = *(_OWORD *)(a3 + 248);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a3 + 232);
  *(_OWORD *)(a1 + 256) = v12;
  *(_OWORD *)(a1 + 20std::ostream::~ostream(v2, v3 + 8) = v10;
  *(_OWORD *)(a1 + 224) = v11;
  __int128 v13 = *(_OWORD *)(a3 + 264);
  __int128 v14 = *(_OWORD *)(a3 + 280);
  __int128 v15 = *(_OWORD *)(a3 + 296);
  *(void *)(a1 + 320) = *(void *)(a3 + 312);
  *(_OWORD *)(a1 + 28std::ostream::~ostream(v2, v3 + 8) = v14;
  *(_OWORD *)(a1 + 304) = v15;
  *(_OWORD *)(a1 + 272) = v13;
  return a1;
}

void sub_10020162C(_Unwind_Exception *a1)
{
}

uint64_t sub_100201644(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  *(_DWORD *)a1 = *a2;
  *(_OWORD *)(a1 + std::ostream::~ostream(v2, v3 + 8) = *(_OWORD *)a3;
  sub_100201E2C((uint64_t *)(a1 + 24), a3 + 16);
  __int128 v5 = *(_OWORD *)(a3 + 40);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a3 + 52);
  *(_OWORD *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = v5;
  sub_100201F04(a1 + 80, (__int128 *)(a3 + 72));
  __int128 v6 = *(_OWORD *)(a3 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a3 + 104);
  *(_OWORD *)(a1 + 12std::ostream::~ostream(v2, v3 + 8) = v6;
  __int128 v7 = *(_OWORD *)(a3 + 136);
  __int128 v8 = *(_OWORD *)(a3 + 152);
  __int128 v9 = *(_OWORD *)(a3 + 184);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a3 + 168);
  *(_OWORD *)(a1 + 192) = v9;
  *(_OWORD *)(a1 + 144) = v7;
  *(_OWORD *)(a1 + 160) = v8;
  __int128 v10 = *(_OWORD *)(a3 + 200);
  __int128 v11 = *(_OWORD *)(a3 + 216);
  __int128 v12 = *(_OWORD *)(a3 + 248);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a3 + 232);
  *(_OWORD *)(a1 + 256) = v12;
  *(_OWORD *)(a1 + 20std::ostream::~ostream(v2, v3 + 8) = v10;
  *(_OWORD *)(a1 + 224) = v11;
  __int128 v13 = *(_OWORD *)(a3 + 264);
  __int128 v14 = *(_OWORD *)(a3 + 280);
  __int128 v15 = *(_OWORD *)(a3 + 296);
  *(void *)(a1 + 320) = *(void *)(a3 + 312);
  *(_OWORD *)(a1 + 28std::ostream::~ostream(v2, v3 + 8) = v14;
  *(_OWORD *)(a1 + 304) = v15;
  *(_OWORD *)(a1 + 272) = v13;
  return a1;
}

void sub_100201704(_Unwind_Exception *a1)
{
}

char *sub_10020171C(char *__dst, __int128 *a2, uint64_t a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__int128 __dst = v5;
  }

  *(_OWORD *)(__dst + 24) = *(_OWORD *)a3;
  sub_100201E2C((uint64_t *)__dst + 5, a3 + 16);
  __int128 v6 = *(_OWORD *)(a3 + 40);
  *(_OWORD *)(__dst + 76) = *(_OWORD *)(a3 + 52);
  *((_OWORD *)__dst + 4) = v6;
  sub_100201F04((uint64_t)(__dst + 96), (__int128 *)(a3 + 72));
  __int128 v7 = *(_OWORD *)(a3 + 120);
  *((_OWORD *)__dst + std::ostream::~ostream(v2, v3 + 8) = *(_OWORD *)(a3 + 104);
  *((_OWORD *)__dst + 9) = v7;
  __int128 v8 = *(_OWORD *)(a3 + 136);
  __int128 v9 = *(_OWORD *)(a3 + 152);
  __int128 v10 = *(_OWORD *)(a3 + 184);
  *((_OWORD *)__dst + 12) = *(_OWORD *)(a3 + 168);
  *((_OWORD *)__dst + 13) = v10;
  *((_OWORD *)__dst + 10) = v8;
  *((_OWORD *)__dst + 11) = v9;
  __int128 v11 = *(_OWORD *)(a3 + 200);
  __int128 v12 = *(_OWORD *)(a3 + 216);
  __int128 v13 = *(_OWORD *)(a3 + 248);
  *((_OWORD *)__dst + 16) = *(_OWORD *)(a3 + 232);
  *((_OWORD *)__dst + memset(&__p[7], 0, 17) = v13;
  *((_OWORD *)__dst + 14) = v11;
  *((_OWORD *)__dst + 15) = v12;
  __int128 v14 = *(_OWORD *)(a3 + 264);
  __int128 v15 = *(_OWORD *)(a3 + 280);
  __int128 v16 = *(_OWORD *)(a3 + 296);
  *((void *)__dst + 42) = *(void *)(a3 + 312);
  *((_OWORD *)__dst + 19) = v15;
  *((_OWORD *)__dst + 20) = v16;
  *((_OWORD *)__dst + 1std::ostream::~ostream(v2, v3 + 8) = v14;
  return __dst;
}

void sub_100201800(_Unwind_Exception *a1)
{
}

void *sub_100201830(void *__dst, __int128 *a2, const void ***a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v5 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__int128 __dst = v5;
  }

  sub_1002035F8(__dst + 3, a3);
  return __dst;
}

void sub_10020188C(_Unwind_Exception *exception_object)
{
}

void *sub_1002018A8(void *__dst, __int128 *a2, uint64_t a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v5 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__int128 __dst = v5;
  }

  sub_100202C84(__dst + 3, a3);
  return __dst;
}

void sub_100201904(_Unwind_Exception *exception_object)
{
}

uint64_t **sub_100201920(uint64_t **result, void *a2, void *a3)
{
  __int128 v5 = result;
  if (result[2])
  {
    __int128 v6 = *result;
    __int128 v7 = result[1];
    uint64_t *result = (uint64_t *)(result + 1);
    v7[2] = 0LL;
    result[1] = 0LL;
    result[2] = 0LL;
    if (v6[1]) {
      __int128 v8 = (uint64_t *)v6[1];
    }
    else {
      __int128 v8 = v6;
    }
    __int128 v14 = result;
    __int128 v15 = v8;
    __int128 v16 = v8;
    if (v8)
    {
      __int128 v15 = sub_100131360((uint64_t)v8);
      if (a2 != a3)
      {
        __int128 v9 = a2;
        do
        {
          v8[4] = v9[4];
          sub_100201A80(v5, (uint64_t)v8);
          __int128 v8 = v15;
          __int128 v16 = v15;
          if (v15) {
            __int128 v15 = sub_100131360((uint64_t)v15);
          }
          __int128 v10 = (void *)v9[1];
          if (v10)
          {
            do
            {
              a2 = v10;
              __int128 v10 = (void *)*v10;
            }

            while (v10);
          }

          else
          {
            do
            {
              a2 = (void *)v9[2];
              BOOL v11 = *a2 == (void)v9;
              __int128 v9 = a2;
            }

            while (!v11);
          }

          if (!v8) {
            break;
          }
          __int128 v9 = a2;
        }

        while (a2 != a3);
      }
    }

    id result = (uint64_t **)sub_1001313B4((uint64_t)&v14);
  }

  if (a2 != a3)
  {
    do
    {
      id result = (uint64_t **)sub_100201AEC(v5, (double *)a2 + 4);
      __int128 v12 = (void *)a2[1];
      if (v12)
      {
        do
        {
          __int128 v13 = v12;
          __int128 v12 = (void *)*v12;
        }

        while (v12);
      }

      else
      {
        do
        {
          __int128 v13 = (void *)a2[2];
          BOOL v11 = *v13 == (void)a2;
          a2 = v13;
        }

        while (!v11);
      }

      a2 = v13;
    }

    while (v13 != a3);
  }

  return result;
}

void sub_100201A6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100201A80(uint64_t **a1, uint64_t a2)
{
  __int128 v3 = a1 + 1;
  uint64_t v4 = a1[1];
  if (v4)
  {
    do
    {
      while (1)
      {
        __int128 v3 = (uint64_t **)v4;
        uint64_t v4 = (uint64_t *)*v4;
        __int128 v5 = v3;
        if (!*v3) {
          goto LABEL_8;
        }
      }

      uint64_t v4 = (uint64_t *)v4[1];
    }

    while (v4);
    __int128 v5 = v3 + 1;
  }

  else
  {
    __int128 v5 = a1 + 1;
  }

uint64_t *sub_100201AEC(uint64_t **a1, double *a2)
{
  uint64_t v4 = (uint64_t *)operator new(0x28uLL);
  double v5 = *a2;
  void v4[4] = *(void *)a2;
  __int128 v6 = a1 + 1;
  __int128 v7 = a1[1];
  if (v7)
  {
    do
    {
      while (1)
      {
        __int128 v6 = (uint64_t **)v7;
        __int128 v7 = (uint64_t *)*v7;
        __int128 v8 = v6;
        if (!*v6) {
          goto LABEL_8;
        }
      }

      __int128 v7 = (uint64_t *)v7[1];
    }

    while (v7);
    __int128 v8 = v6 + 1;
  }

  else
  {
    __int128 v8 = a1 + 1;
  }

void sub_100201B78(std::string *__dst, const std::string *a2)
{
  if (__dst[1].__r_.__value_.__s.__data_[0] == a2[1].__r_.__value_.__s.__data_[0])
  {
    if (__dst[1].__r_.__value_.__s.__data_[0]) {
      std::string::operator=(__dst, a2);
    }
  }

  else if (__dst[1].__r_.__value_.__s.__data_[0])
  {
    __dst[1].__r_.__value_.__s.__data_[0] = 0;
  }

  else
  {
    if ((char)a2->__r_.__value_.__s.__size_ < 0)
    {
      sub_1000063A8(__dst, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
    }

    else
    {
      __int128 v3 = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
      __dst->__r_.__value_.__l.__cap_ = a2->__r_.__value_.__l.__cap_;
      *(_OWORD *)&__dst->__r_.__value_.__l.__data_ = v3;
    }

    __dst[1].__r_.__value_.__s.__data_[0] = 1;
  }

uint64_t sub_100201C08(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 16 * a3;
    do
    {
      sub_100201C84((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 4;
      v6 -= 16LL;
    }

    while (v6);
  }

  return a1;
}

void sub_100201C6C(_Unwind_Exception *a1)
{
}

_DWORD *sub_100201C84(uint64_t **a1, uint64_t *a2, int *a3, uint64_t a4)
{
  uint64_t v6 = sub_1001E10B4(a1, a2, &v11, &v10, a3);
  __int128 v7 = (_DWORD *)*v6;
  if (!*v6)
  {
    __int128 v8 = (uint64_t **)v6;
    __int128 v7 = operator new(0x30uLL);
    uint8_t v7[8] = *(_DWORD *)a4;
    *((void *)v7 + 5) = *(id *)(a4 + 8);
    sub_10001E548(a1, (uint64_t)v11, v8, (uint64_t *)v7);
  }

  return v7;
}

__n128 sub_100201D14(uint64_t a1, __n128 *a2)
{
  if (*(unsigned __int8 *)(a1 + 24) == a2[1].n128_u8[8])
  {
    if (*(_BYTE *)(a1 + 24))
    {
      __n128 result = *a2;
      *(void *)(a1 + 16) = a2[1].n128_u64[0];
      *(__n128 *)a1 = result;
      a2[1].n128_u8[7] = 0;
      a2->n128_u8[0] = 0;
    }
  }

  else if (*(_BYTE *)(a1 + 24))
  {
    *(_BYTE *)(a1 + 24) = 0;
  }

  else
  {
    __n128 result = *a2;
    *(void *)(a1 + 16) = a2[1].n128_u64[0];
    *(__n128 *)a1 = result;
    a2->n128_u64[1] = 0LL;
    a2[1].n128_u64[0] = 0LL;
    a2->n128_u64[0] = 0LL;
    *(_BYTE *)(a1 + 24) = 1;
  }

  return result;
}

uint64_t sub_100201DB0(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 16 * a3;
    do
    {
      sub_100201C84((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 4;
      v6 -= 16LL;
    }

    while (v6);
  }

  return a1;
}

void sub_100201E14(_Unwind_Exception *a1)
{
}

uint64_t *sub_100201E2C(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_100201E80(a1, *(double **)a2, (double *)(a2 + 8));
  return a1;
}

void sub_100201E68(_Unwind_Exception *a1)
{
}

uint64_t *sub_100201E80(uint64_t *result, double *a2, double *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    double v5 = (uint64_t **)result;
    uint64_t v6 = (double *)(result + 1);
    do
    {
      __n128 result = sub_10015EDE0(v5, v6, v4 + 4, (uint64_t *)v4 + 4);
      __int128 v7 = (double *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          __int128 v8 = v7;
          __int128 v7 = *(double **)v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          __int128 v8 = (double *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          uint64_t v4 = v8;
        }

        while (!v9);
      }

      uint64_t v4 = v8;
    }

    while (v8 != a3);
  }

  return result;
}

uint64_t sub_100201F04(uint64_t a1, __int128 *a2)
{
  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 24) = 0;
  sub_100201F4C((_OWORD *)a1, a2);
  return a1;
}

void sub_100201F30(_Unwind_Exception *exception_object)
{
  if (*(_BYTE *)(v1 + 24)) {
    sub_10039E1AC(v1);
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_100201F4C(_OWORD *__dst, __int128 *a2)
{
  if (*((_BYTE *)a2 + 24))
  {
    uint64_t v2 = __dst;
    if (*((char *)a2 + 23) < 0)
    {
      __int128 __dst = sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
    }

    else
    {
      __int128 v3 = *a2;
      *((void *)__dst + 2) = *((void *)a2 + 2);
      *__int128 __dst = v3;
    }

    v2[24] = 1;
  }

  return __dst;
}

uint64_t sub_100201FA4(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 32 * a3;
    do
    {
      sub_100202020((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 8;
      v6 -= 32LL;
    }

    while (v6);
  }

  return a1;
}

void sub_100202008(_Unwind_Exception *a1)
{
}

uint64_t *sub_100202020(uint64_t **a1, uint64_t *a2, unsigned int *a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)sub_1002020A0(a1, a2, &v10, &v9, a3);
  __n128 result = *v6;
  if (!*v6)
  {
    sub_100202248((uint64_t)a1, a4, (uint64_t)&v8);
    sub_10001E548(a1, (uint64_t)v10, v6, v8);
    return v8;
  }

  return result;
}

uint64_t *sub_1002020A0(void *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, unsigned int *a5)
{
  double v5 = a1 + 1;
  if (a1 + 1 == a2 || (unsigned int v6 = *a5, v7 = *((_DWORD *)a2 + 8), *a5 < v7))
  {
    __int128 v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      uint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }

      else
      {
        *a3 = a2;
        return a2;
      }
    }

    if (v8)
    {
      uint64_t v9 = (uint64_t *)*a2;
      do
      {
        uint64_t v10 = v9;
        uint64_t v9 = (uint64_t *)v9[1];
      }

      while (v9);
    }

    else
    {
      __int128 v13 = a2;
      do
      {
        uint64_t v10 = (uint64_t *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        __int128 v13 = v10;
      }

      while (v14);
    }

    unsigned int v15 = *a5;
    if (*((_DWORD *)v10 + 8) < *a5) {
      goto LABEL_17;
    }
    uint64_t v16 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          int v17 = (uint64_t *)v16;
          unsigned int v18 = *(_DWORD *)(v16 + 32);
          if (v15 >= v18) {
            break;
          }
          uint64_t v16 = *v17;
          double v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }

        if (v18 >= v15) {
          break;
        }
        double v5 = v17 + 1;
        uint64_t v16 = v17[1];
      }

      while (v16);
    }

    else
    {
      int v17 = a1 + 1;
    }

void *sub_100202248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  unsigned int v6 = operator new(0x40uLL);
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(void *)a3 = v6;
  *(_BYTE *)(a3 + 16) = 0;
  uint8_t v6[8] = *(_DWORD *)a2;
  __n128 result = v6 + 10;
  if (*(char *)(a2 + 31) < 0)
  {
    __n128 result = sub_1000063A8(result, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }

  else
  {
    *(_OWORD *)__n128 result = *(_OWORD *)(a2 + 8);
    result[2] = *(void *)(a2 + 24);
  }

  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1002022D4(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  sub_1002022F0(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1002022F0(uint64_t a1, void **__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
  }

  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void sub_10020233C(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_10020233C(a1, *(void *)a2);
    sub_10020233C(a1, *((void *)a2 + 1));
    if (a2[63] < 0) {
      operator delete(*((void **)a2 + 5));
    }
    operator delete(a2);
  }

uint64_t sub_10020238C(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 16 * a3;
    do
    {
      sub_1001E1030((uint64_t **)a1, v4, a2, a2);
      a2 += 4;
      v6 -= 16LL;
    }

    while (v6);
  }

  return a1;
}

void sub_1002023F0(_Unwind_Exception *a1)
{
}

uint64_t *sub_100202408(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_10020245C(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_100202444(_Unwind_Exception *a1)
{
}

uint64_t *sub_10020245C(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      __n128 result = sub_1001E1030(v5, v6, v4 + 8, (_OWORD *)v4 + 2);
      unsigned int v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          __int128 v8 = v7;
          unsigned int v7 = *(int **)v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          __int128 v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          uint64_t v4 = v8;
        }

        while (!v9);
      }

      uint64_t v4 = v8;
    }

    while (v8 != a3);
  }

  return result;
}

uint64_t sub_1002024E0(uint64_t a1, const void **a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 48 * a3;
    do
    {
      sub_100202560((uint64_t **)a1, v4, a2, (__int128 *)a2);
      a2 += 6;
      v6 -= 48LL;
    }

    while (v6);
  }

  return a1;
}

void sub_100202548(_Unwind_Exception *a1)
{
}

uint64_t *sub_100202560(uint64_t **a1, uint64_t *a2, const void **a3, __int128 *a4)
{
  uint64_t v6 = sub_1002025F4(a1, a2, &v12, &v11, a3);
  unsigned int v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    __int128 v8 = (uint64_t **)v6;
    sub_10020278C((uint64_t)a1, a4, (uint64_t)v10);
    sub_10001E548(a1, (uint64_t)v12, v8, v10[0]);
    unsigned int v7 = v10[0];
    v10[0] = 0LL;
    sub_100202868((uint64_t)v10, 0LL);
  }

  return v7;
}

const void **sub_1002025F4(void *a1, uint64_t *a2, const void ***a3, uint64_t *a4, const void **a5)
{
  BOOL v9 = (const void **)(a1 + 1);
  if (a1 + 1 == a2 || sub_10001E59C((uint64_t)(a1 + 2), a5, (const void **)a2 + 4))
  {
    if ((uint64_t *)*a1 == a2)
    {
      __int128 v12 = (const void **)a2;
LABEL_16:
      if (*a2)
      {
        *a3 = v12;
        return v12 + 1;
      }

      else
      {
        *a3 = (const void **)a2;
        return (const void **)a2;
      }
    }

    uint64_t v11 = (const void **)*a2;
    if (*a2)
    {
      do
      {
        __int128 v12 = v11;
        uint64_t v11 = (const void **)v11[1];
      }

      while (v11);
    }

    else
    {
      uint64_t v16 = a2;
      do
      {
        __int128 v12 = (const void **)v16[2];
        BOOL v17 = *v12 == v16;
        uint64_t v16 = (uint64_t *)v12;
      }

      while (v17);
    }

    return (const void **)sub_10001E444((uint64_t)a1, a3, a5);
  }

  if (sub_10001E59C((uint64_t)(a1 + 2), (const void **)a2 + 4, a5))
  {
    a4 = a2 + 1;
    uint64_t v13 = a2[1];
    if (v13)
    {
      BOOL v14 = (const void **)a2[1];
      do
      {
        unsigned int v15 = v14;
        BOOL v14 = (const void **)*v14;
      }

      while (v14);
    }

    else
    {
      unsigned int v18 = (const void **)a2;
      do
      {
        unsigned int v15 = (const void **)v18[2];
        BOOL v17 = *v15 == v18;
        unsigned int v18 = v15;
      }

      while (!v17);
    }

    if (v15 != v9)
    {
      uint64_t v13 = *a4;
    }

    if (v13)
    {
      *a3 = v15;
      return v15;
    }

    else
    {
      *a3 = (const void **)a2;
    }

    return (const void **)a4;
  }

  *a3 = (const void **)a2;
  *a4 = (uint64_t)a2;
  return (const void **)a4;
}

void *sub_10020278C@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  __n128 result = sub_1002027F4(v6 + 4, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1002027DC(_Unwind_Exception *a1)
{
}

void *sub_1002027F4(void *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__int128 __dst = v4;
  }

  sub_100202408(__dst + 3, (uint64_t)a2 + 24);
  return __dst;
}

void sub_10020284C(_Unwind_Exception *exception_object)
{
}

void sub_100202868(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_1002028AC((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

void sub_1002028AC(uint64_t a1)
{
}

void sub_1002028EC(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1002028EC(a1, *a2);
    sub_1002028EC(a1, a2[1]);
    sub_1002028AC((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_100202934(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100202934(a1, *a2);
    sub_100202934(a1, a2[1]);
    sub_100202980((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }

void sub_100202980(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100202980(a1, *a2);
    sub_100202980(a1, a2[1]);
    sub_1002029C8((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_1002029C8(uint64_t a1)
{
}

uint64_t sub_100202A04(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  __int128 v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 328 * a3;
    do
    {
      sub_100202A84((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 82;
      v6 -= 328LL;
    }

    while (v6);
  }

  return a1;
}

void sub_100202A6C(_Unwind_Exception *a1)
{
}

uint64_t *sub_100202A84(uint64_t **a1, uint64_t *a2, int *a3, uint64_t a4)
{
  uint64_t v6 = sub_1001E10B4(a1, a2, &v12, &v11, a3);
  unsigned int v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    __int128 v8 = (uint64_t **)v6;
    sub_100202B18((uint64_t)a1, a4, (uint64_t)v10);
    sub_10001E548(a1, (uint64_t)v12, v8, v10[0]);
    unsigned int v7 = v10[0];
    v10[0] = 0LL;
    sub_100202C40((uint64_t)v10, 0LL);
  }

  return v7;
}

uint64_t sub_100202B18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x168uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = sub_100202B80((uint64_t)v6 + 32, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100202B68(_Unwind_Exception *a1)
{
}

uint64_t sub_100202B80(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + std::ostream::~ostream(v2, v3 + 8) = *(_OWORD *)(a2 + 8);
  sub_100201E2C((uint64_t *)(a1 + 24), a2 + 24);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = v4;
  sub_100201F04(a1 + 80, (__int128 *)(a2 + 80));
  __int128 v5 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 12std::ostream::~ostream(v2, v3 + 8) = v5;
  __int128 v6 = *(_OWORD *)(a2 + 144);
  __int128 v7 = *(_OWORD *)(a2 + 160);
  __int128 v8 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v8;
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 160) = v7;
  __int128 v9 = *(_OWORD *)(a2 + 208);
  __int128 v10 = *(_OWORD *)(a2 + 224);
  __int128 v11 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v11;
  *(_OWORD *)(a1 + 20std::ostream::~ostream(v2, v3 + 8) = v9;
  *(_OWORD *)(a1 + 224) = v10;
  __int128 v12 = *(_OWORD *)(a2 + 272);
  __int128 v13 = *(_OWORD *)(a2 + 288);
  __int128 v14 = *(_OWORD *)(a2 + 304);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(_OWORD *)(a1 + 28std::ostream::~ostream(v2, v3 + 8) = v13;
  *(_OWORD *)(a1 + 304) = v14;
  *(_OWORD *)(a1 + 272) = v12;
  return a1;
}

void sub_100202C28(_Unwind_Exception *a1)
{
}

void sub_100202C40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_1002029C8((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

uint64_t *sub_100202C84(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_100202CD8(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_100202CC0(_Unwind_Exception *a1)
{
}

uint64_t *sub_100202CD8(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    __int128 v4 = a2;
    __int128 v5 = (uint64_t **)result;
    __int128 v6 = result + 1;
    do
    {
      uint64_t result = sub_100202A84(v5, v6, v4 + 8, (uint64_t)(v4 + 8));
      __int128 v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          __int128 v8 = v7;
          __int128 v7 = *(int **)v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          __int128 v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          __int128 v4 = v8;
        }

        while (!v9);
      }

      __int128 v4 = v8;
    }

    while (v8 != a3);
  }

  return result;
}

uint64_t sub_100202D5C(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  __int128 v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 32 * a3;
    do
    {
      sub_100202DD8((uint64_t **)a1, v4, a2, a2);
      a2 += 8;
      v6 -= 32LL;
    }

    while (v6);
  }

  return a1;
}

void sub_100202DC0(_Unwind_Exception *a1)
{
}

uint64_t *sub_100202DD8(uint64_t **a1, uint64_t *a2, int *a3, _DWORD *a4)
{
  uint64_t v6 = (uint64_t **)sub_1001E10B4(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_100202E58((uint64_t)a1, a4, (uint64_t)&v8);
    sub_10001E548(a1, (uint64_t)v10, v6, v8);
    return v8;
  }

  return result;
}

uint64_t *sub_100202E58@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x40uLL);
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(void *)a3 = v6;
  *(_BYTE *)(a3 + 16) = 0;
  *((_DWORD *)v6 + std::ostream::~ostream(v2, v3 + 8) = *a2;
  uint64_t result = sub_100202C84((uint64_t *)v6 + 5, (uint64_t)(a2 + 2));
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100202EC4(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  sub_100202EE0(v3, v2);
  _Unwind_Resume(a1);
}

void sub_100202EE0(uint64_t a1, void **a2)
{
  if (*(_BYTE *)(a1 + 8))
  {
    sub_100202980((uint64_t)(a2 + 5), a2[6]);
  }

  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

uint64_t *sub_100202F28(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_100202F7C(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_100202F64(_Unwind_Exception *a1)
{
}

uint64_t *sub_100202F7C(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    __int128 v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = sub_100202DD8(v5, v6, v4 + 8, v4 + 8);
      __int128 v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          __int128 v8 = v7;
          __int128 v7 = *(int **)v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          __int128 v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          __int128 v4 = v8;
        }

        while (!v9);
      }

      __int128 v4 = v8;
    }

    while (v8 != a3);
  }

  return result;
}

uint64_t sub_100203000(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  __int128 v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 32 * a3;
    do
    {
      sub_10020307C((uint64_t **)a1, v4, a2, a2);
      a2 += 8;
      v6 -= 32LL;
    }

    while (v6);
  }

  return a1;
}

void sub_100203064(_Unwind_Exception *a1)
{
}

uint64_t *sub_10020307C(uint64_t **a1, uint64_t *a2, int *a3, _DWORD *a4)
{
  uint64_t v6 = (uint64_t **)sub_1001E10B4(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_1002030FC((uint64_t)a1, a4, (uint64_t)&v8);
    sub_10001E548(a1, (uint64_t)v10, v6, v8);
    return v8;
  }

  return result;
}

uint64_t *sub_1002030FC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x40uLL);
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(void *)a3 = v6;
  *(_BYTE *)(a3 + 16) = 0;
  *((_DWORD *)v6 + std::ostream::~ostream(v2, v3 + 8) = *a2;
  uint64_t result = sub_100202F28((uint64_t *)v6 + 5, (uint64_t)(a2 + 2));
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100203168(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  sub_100203184(v3, v2);
  _Unwind_Resume(a1);
}

void sub_100203184(uint64_t a1, void **a2)
{
  if (*(_BYTE *)(a1 + 8))
  {
    sub_100202934((uint64_t)(a2 + 5), a2[6]);
  }

  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

void sub_1002031CC(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1002031CC(a1, *a2);
    sub_1002031CC(a1, a2[1]);
    sub_100202934((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }

void sub_100203218(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100203218(a1, *a2);
    sub_100203218(a1, a2[1]);
    sub_100203260((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_100203260(uint64_t a1)
{
}

void sub_1002032A0(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1002032A0(a1, *a2);
    sub_1002032A0(a1, a2[1]);
    sub_1002032E8((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_1002032E8(uint64_t a1)
{
}

uint64_t sub_100203340(uint64_t a1, const void **a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  __int128 v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 344 * a3;
    do
    {
      sub_1002033C0((uint64_t **)a1, v4, a2, (__int128 *)a2);
      a2 += 43;
      v6 -= 344LL;
    }

    while (v6);
  }

  return a1;
}

void sub_1002033A8(_Unwind_Exception *a1)
{
}

uint64_t *sub_1002033C0(uint64_t **a1, uint64_t *a2, const void **a3, __int128 *a4)
{
  uint64_t v6 = sub_1002025F4(a1, a2, &v12, &v11, a3);
  __int128 v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    __int128 v8 = (uint64_t **)v6;
    sub_100203454((uint64_t)a1, a4, (uint64_t)v10);
    sub_10001E548(a1, (uint64_t)v12, v8, v10[0]);
    __int128 v7 = v10[0];
    v10[0] = 0LL;
    sub_1002035B4((uint64_t)v10, 0LL);
  }

  return v7;
}

char *sub_100203454@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x178uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = sub_1002034BC(v6 + 32, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1002034A4(_Unwind_Exception *a1)
{
}

char *sub_1002034BC(char *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__int128 __dst = v4;
  }

  *(_OWORD *)(__dst + 24) = *(__int128 *)((char *)a2 + 24);
  sub_100201E2C((uint64_t *)__dst + 5, (uint64_t)a2 + 40);
  __int128 v5 = a2[4];
  *(_OWORD *)(__dst + 76) = *(__int128 *)((char *)a2 + 76);
  *((_OWORD *)__dst + 4) = v5;
  sub_100201F04((uint64_t)(__dst + 96), a2 + 6);
  __int128 v6 = a2[9];
  *((_OWORD *)__dst + std::ostream::~ostream(v2, v3 + 8) = a2[8];
  *((_OWORD *)__dst + 9) = v6;
  __int128 v7 = a2[10];
  __int128 v8 = a2[11];
  __int128 v9 = a2[13];
  *((_OWORD *)__dst + 12) = a2[12];
  *((_OWORD *)__dst + 13) = v9;
  *((_OWORD *)__dst + 10) = v7;
  *((_OWORD *)__dst + 11) = v8;
  __int128 v10 = a2[14];
  __int128 v11 = a2[15];
  __int128 v12 = a2[17];
  *((_OWORD *)__dst + 16) = a2[16];
  *((_OWORD *)__dst + memset(&__p[7], 0, 17) = v12;
  *((_OWORD *)__dst + 14) = v10;
  *((_OWORD *)__dst + 15) = v11;
  __int128 v13 = a2[18];
  __int128 v14 = a2[19];
  __int128 v15 = a2[20];
  *((void *)__dst + 42) = *((void *)a2 + 42);
  *((_OWORD *)__dst + 19) = v14;
  *((_OWORD *)__dst + 20) = v15;
  *((_OWORD *)__dst + 1std::ostream::~ostream(v2, v3 + 8) = v13;
  return __dst;
}

void sub_100203584(_Unwind_Exception *a1)
{
}

void sub_1002035B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_1002032E8((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

uint64_t *sub_1002035F8(uint64_t *a1, const void ***a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_10020364C(a1, *a2, a2 + 1);
  return a1;
}

void sub_100203634(_Unwind_Exception *a1)
{
}

uint64_t *sub_10020364C(uint64_t *result, const void **a2, const void ***a3)
{
  if (a2 != (const void **)a3)
  {
    __int128 v4 = a2;
    __int128 v5 = (uint64_t **)result;
    __int128 v6 = result + 1;
    do
    {
      uint64_t result = sub_1002033C0(v5, v6, v4 + 4, (__int128 *)v4 + 2);
      __int128 v7 = (const void **)v4[1];
      if (v7)
      {
        do
        {
          __int128 v8 = (const void ***)v7;
          __int128 v7 = (const void **)*v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          __int128 v8 = (const void ***)v4[2];
          BOOL v9 = *v8 == v4;
          __int128 v4 = (const void **)v8;
        }

        while (!v9);
      }

      __int128 v4 = (const void **)v8;
    }

    while (v8 != a3);
  }

  return result;
}

uint64_t sub_1002036D0(uint64_t a1, const void **a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  __int128 v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 48 * a3;
    do
    {
      sub_100203750((uint64_t **)a1, v4, a2, (__int128 *)a2);
      a2 += 6;
      v6 -= 48LL;
    }

    while (v6);
  }

  return a1;
}

void sub_100203738(_Unwind_Exception *a1)
{
}

uint64_t *sub_100203750(uint64_t **a1, uint64_t *a2, const void **a3, __int128 *a4)
{
  uint64_t v6 = sub_1002025F4(a1, a2, &v12, &v11, a3);
  __int128 v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    __int128 v8 = (uint64_t **)v6;
    sub_1002037E4((uint64_t)a1, a4, (uint64_t)v10);
    sub_10001E548(a1, (uint64_t)v12, v8, v10[0]);
    __int128 v7 = v10[0];
    v10[0] = 0LL;
    sub_1002038C0((uint64_t)v10, 0LL);
  }

  return v7;
}

void *sub_1002037E4@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = sub_10020384C(v6 + 4, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100203834(_Unwind_Exception *a1)
{
}

void *sub_10020384C(void *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__int128 __dst = v4;
  }

  sub_1002035F8(__dst + 3, (const void ***)a2 + 3);
  return __dst;
}

void sub_1002038A4(_Unwind_Exception *exception_object)
{
}

void sub_1002038C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_100203260((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

uint64_t *sub_100203904(uint64_t *a1, const void ***a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_100203958(a1, *a2, a2 + 1);
  return a1;
}

void sub_100203940(_Unwind_Exception *a1)
{
}

uint64_t *sub_100203958(uint64_t *result, const void **a2, const void ***a3)
{
  if (a2 != (const void **)a3)
  {
    __int128 v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = sub_100203750(v5, v6, v4 + 4, (__int128 *)v4 + 2);
      __int128 v7 = (const void **)v4[1];
      if (v7)
      {
        do
        {
          __int128 v8 = (const void ***)v7;
          __int128 v7 = (const void **)*v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          __int128 v8 = (const void ***)v4[2];
          BOOL v9 = *v8 == v4;
          __int128 v4 = (const void **)v8;
        }

        while (!v9);
      }

      __int128 v4 = (const void **)v8;
    }

    while (v8 != a3);
  }

  return result;
}

uint64_t sub_1002039DC(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  __int128 v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 32 * a3;
    do
    {
      sub_100203A58((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 8;
      v6 -= 32LL;
    }

    while (v6);
  }

  return a1;
}

void sub_100203A40(_Unwind_Exception *a1)
{
}

uint64_t *sub_100203A58(uint64_t **a1, uint64_t *a2, int *a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)sub_1001E10B4(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_100203AD8((uint64_t)a1, a4, (uint64_t)&v8);
    sub_10001E548(a1, (uint64_t)v10, v6, v8);
    return v8;
  }

  return result;
}

uint64_t *sub_100203AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x40uLL);
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(void *)a3 = v6;
  *(_BYTE *)(a3 + 16) = 0;
  *((_DWORD *)v6 + std::ostream::~ostream(v2, v3 + 8) = *(_DWORD *)a2;
  uint64_t result = sub_100203904((uint64_t *)v6 + 5, (const void ***)(a2 + 8));
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100203B44(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  sub_100203B60(v3, v2);
  _Unwind_Resume(a1);
}

void sub_100203B60(uint64_t a1, void **a2)
{
  if (*(_BYTE *)(a1 + 8))
  {
    sub_100203218((uint64_t)(a2 + 5), a2[6]);
  }

  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

void sub_100203BA8(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100203BA8(a1, *a2);
    sub_100203BA8(a1, a2[1]);
    sub_100203218((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }

void sub_100203BF4(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100203BF4(a1, *a2);
    sub_100203BF4(a1, a2[1]);
    sub_1002032A0((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }

uint64_t sub_100203C40(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  __int128 v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 32 * a3;
    do
    {
      sub_100203CBC((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 8;
      v6 -= 32LL;
    }

    while (v6);
  }

  return a1;
}

void sub_100203CA4(_Unwind_Exception *a1)
{
}

uint64_t *sub_100203CBC(uint64_t **a1, uint64_t *a2, int *a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)sub_1001E10B4(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_100203D3C((uint64_t)a1, a4, (uint64_t)&v8);
    sub_10001E548(a1, (uint64_t)v10, v6, v8);
    return v8;
  }

  return result;
}

uint64_t *sub_100203D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x40uLL);
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(void *)a3 = v6;
  *(_BYTE *)(a3 + 16) = 0;
  *((_DWORD *)v6 + std::ostream::~ostream(v2, v3 + 8) = *(_DWORD *)a2;
  uint64_t result = sub_1002035F8((uint64_t *)v6 + 5, (const void ***)(a2 + 8));
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100203DA8(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  sub_100203DC4(v3, v2);
  _Unwind_Resume(a1);
}

void sub_100203DC4(uint64_t a1, void **a2)
{
  if (*(_BYTE *)(a1 + 8))
  {
    sub_1002032A0((uint64_t)(a2 + 5), a2[6]);
  }

  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

uint64_t *sub_100203E0C(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_100203E60(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_100203E48(_Unwind_Exception *a1)
{
}

uint64_t *sub_100203E60(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    __int128 v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = sub_100203CBC(v5, v6, v4 + 8, (uint64_t)(v4 + 8));
      __int128 v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          __int128 v8 = v7;
          __int128 v7 = *(int **)v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          __int128 v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          __int128 v4 = v8;
        }

        while (!v9);
      }

      __int128 v4 = v8;
    }

    while (v8 != a3);
  }

  return result;
}

uint64_t sub_100203EE4(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  __int128 v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 32 * a3;
    do
    {
      sub_100203F60((uint64_t **)a1, v4, a2, a2);
      a2 += 8;
      v6 -= 32LL;
    }

    while (v6);
  }

  return a1;
}

void sub_100203F48(_Unwind_Exception *a1)
{
}

uint64_t *sub_100203F60(uint64_t **a1, uint64_t *a2, int *a3, _DWORD *a4)
{
  uint64_t v6 = (uint64_t **)sub_1001E10B4(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_100203FE0((uint64_t)a1, a4, (uint64_t)&v8);
    sub_10001E548(a1, (uint64_t)v10, v6, v8);
    return v8;
  }

  return result;
}

uint64_t *sub_100203FE0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x40uLL);
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(void *)a3 = v6;
  *(_BYTE *)(a3 + 16) = 0;
  *((_DWORD *)v6 + std::ostream::~ostream(v2, v3 + 8) = *a2;
  uint64_t result = sub_100203E0C((uint64_t *)v6 + 5, (uint64_t)(a2 + 2));
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_10020404C(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  sub_100204068(v3, v2);
  _Unwind_Resume(a1);
}

void sub_100204068(uint64_t a1, void **a2)
{
  if (*(_BYTE *)(a1 + 8))
  {
    sub_100203BF4((uint64_t)(a2 + 5), a2[6]);
  }

  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

void sub_1002040B0(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1002040B0(a1, *a2);
    sub_1002040B0(a1, a2[1]);
    sub_100203BF4((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }

void sub_1002040FC(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1002040FC(a1, *a2);
    sub_1002040FC(a1, a2[1]);
    sub_100204144((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_100204144(uint64_t a1)
{
}

uint64_t sub_100204184(uint64_t a1, const void **a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  __int128 v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 48 * a3;
    do
    {
      sub_100204204((uint64_t **)a1, v4, a2, (__int128 *)a2);
      a2 += 6;
      v6 -= 48LL;
    }

    while (v6);
  }

  return a1;
}

void sub_1002041EC(_Unwind_Exception *a1)
{
}

uint64_t *sub_100204204(uint64_t **a1, uint64_t *a2, const void **a3, __int128 *a4)
{
  uint64_t v6 = sub_1002025F4(a1, a2, &v12, &v11, a3);
  __int128 v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    __int128 v8 = (uint64_t **)v6;
    sub_100204298((uint64_t)a1, a4, (uint64_t)v10);
    sub_10001E548(a1, (uint64_t)v12, v8, v10[0]);
    __int128 v7 = v10[0];
    v10[0] = 0LL;
    sub_100204374((uint64_t)v10, 0LL);
  }

  return v7;
}

void *sub_100204298@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = sub_100204300(v6 + 4, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1002042E8(_Unwind_Exception *a1)
{
}

void *sub_100204300(void *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__int128 __dst = v4;
  }

  sub_100202C84(__dst + 3, (uint64_t)a2 + 24);
  return __dst;
}

void sub_100204358(_Unwind_Exception *exception_object)
{
}

void sub_100204374(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_100204144((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

uint64_t *sub_1002043B8(uint64_t *a1, const void ***a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_10020440C(a1, *a2, a2 + 1);
  return a1;
}

void sub_1002043F4(_Unwind_Exception *a1)
{
}

uint64_t *sub_10020440C(uint64_t *result, const void **a2, const void ***a3)
{
  if (a2 != (const void **)a3)
  {
    __int128 v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = sub_100204204(v5, v6, v4 + 4, (__int128 *)v4 + 2);
      __int128 v7 = (const void **)v4[1];
      if (v7)
      {
        do
        {
          __int128 v8 = (const void ***)v7;
          __int128 v7 = (const void **)*v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          __int128 v8 = (const void ***)v4[2];
          BOOL v9 = *v8 == v4;
          __int128 v4 = (const void **)v8;
        }

        while (!v9);
      }

      __int128 v4 = (const void **)v8;
    }

    while (v8 != a3);
  }

  return result;
}

uint64_t sub_100204490(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  __int128 v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 32 * a3;
    do
    {
      sub_10020450C((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 8;
      v6 -= 32LL;
    }

    while (v6);
  }

  return a1;
}

void sub_1002044F4(_Unwind_Exception *a1)
{
}

uint64_t *sub_10020450C(uint64_t **a1, uint64_t *a2, int *a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)sub_1001E10B4(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_10020458C((uint64_t)a1, a4, (uint64_t)&v8);
    sub_10001E548(a1, (uint64_t)v10, v6, v8);
    return v8;
  }

  return result;
}

uint64_t *sub_10020458C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x40uLL);
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(void *)a3 = v6;
  *(_BYTE *)(a3 + 16) = 0;
  *((_DWORD *)v6 + std::ostream::~ostream(v2, v3 + 8) = *(_DWORD *)a2;
  uint64_t result = sub_1002043B8((uint64_t *)v6 + 5, (const void ***)(a2 + 8));
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1002045F8(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  sub_100204614(v3, v2);
  _Unwind_Resume(a1);
}

void sub_100204614(uint64_t a1, void **a2)
{
  if (*(_BYTE *)(a1 + 8))
  {
    sub_1002040FC((uint64_t)(a2 + 5), a2[6]);
  }

  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

void sub_10020465C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10020465C(a1, *a2);
    sub_10020465C(a1, a2[1]);
    sub_1002040FC((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }

uint64_t **sub_1002046A8(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  __int128 v7 = a1 + 1;
  uint64_t v6 = a1[1];
  if (v6)
  {
    int v8 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = (uint64_t **)v6;
        int v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10) {
          break;
        }
        uint64_t v6 = *v9;
        __int128 v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }

      if (v10 >= v8) {
        break;
      }
      uint64_t v6 = v9[1];
      if (!v6)
      {
        __int128 v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    uint64_t v9 = a1 + 1;
LABEL_10:
    uint64_t v11 = operator new(0x40uLL);
    uint8_t v11[8] = **a4;
    *((void *)v11 + 7) = 0LL;
    *((void *)v11 + 6) = 0LL;
    *((void *)v11 + 5) = v11 + 12;
    sub_10001E548(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }

  return v9;
}

uint64_t *sub_100204774(uint64_t **a1, const void **a2, uint64_t a3, __int128 **a4)
{
  uint64_t v6 = (uint64_t **)sub_10001E444((uint64_t)a1, &v11, a2);
  __int128 v7 = *v6;
  if (!*v6)
  {
    int v8 = v6;
    sub_10020481C((uint64_t)a1, a4, (uint64_t)v10);
    sub_10001E548(a1, v11, v8, v10[0]);
    __int128 v7 = v10[0];
    v10[0] = 0LL;
    sub_1002038C0((uint64_t)v10, 0LL);
  }

  return v7;
}

_BYTE *sub_10020481C@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = v6 + 4;
  int v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    uint64_t result = sub_1000063A8(result, *(void **)v8, *((void *)v8 + 1));
  }

  else
  {
    __int128 v9 = *v8;
    v6[6] = *((void *)v8 + 2);
    *(_OWORD *)uint64_t result = v9;
  }

  uint8_t v6[8] = 0LL;
  v6[9] = 0LL;
  v6[7] = v6 + 8;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100204898(_Unwind_Exception *a1)
{
}

uint64_t *sub_1002048B0(uint64_t **a1, const void **a2, uint64_t a3, __int128 **a4)
{
  uint64_t v6 = (uint64_t **)sub_10001E444((uint64_t)a1, &v11, a2);
  __int128 v7 = *v6;
  if (!*v6)
  {
    int v8 = v6;
    sub_100204958((uint64_t)a1, a4, (uint64_t)v10);
    sub_10001E548(a1, v11, v8, v10[0]);
    __int128 v7 = v10[0];
    v10[0] = 0LL;
    sub_1002035B4((uint64_t)v10, 0LL);
  }

  return v7;
}

char *sub_100204958@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x178uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  int v8 = *a2;
  uint64_t result = sub_1002049D4(v6 + 32, &v8);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1002049BC(_Unwind_Exception *a1)
{
}

char *sub_1002049D4(char *__dst, __int128 **a2)
{
  uint64_t v3 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)v3, *((void *)v3 + 1));
  }

  else
  {
    __int128 v4 = *v3;
    *((void *)__dst + 2) = *((void *)v3 + 2);
    *(_OWORD *)__int128 __dst = v4;
  }

  *(_OWORD *)(__dst + 40) = 0u;
  *(_OWORD *)(__dst + 232) = 0u;
  *(_OWORD *)(__dst + 24std::ostream::~ostream(v2, v3 + 8) = 0u;
  *(_OWORD *)(__dst + 200) = 0u;
  *(_OWORD *)(__dst + 216) = 0u;
  *(_OWORD *)(__dst + 16std::ostream::~ostream(v2, v3 + 8) = 0u;
  *(_OWORD *)(__dst + 184) = 0u;
  *(_OWORD *)(__dst + 136) = 0u;
  *(_OWORD *)(__dst + 152) = 0u;
  *(_OWORD *)(__dst + 104) = 0u;
  *(_OWORD *)(__dst + 120) = 0u;
  *(_OWORD *)(__dst + 72) = 0u;
  *(_OWORD *)(__dst + 8std::ostream::~ostream(v2, v3 + 8) = 0u;
  *(_OWORD *)(__dst + 56) = 0u;
  *(_OWORD *)(__dst + 312) = 0u;
  *(_OWORD *)(__dst + 32std::ostream::~ostream(v2, v3 + 8) = 0u;
  *(_OWORD *)(__dst + 280) = 0u;
  *(_OWORD *)(__dst + 296) = 0u;
  *(_OWORD *)(__dst + 264) = 0u;
  *((void *)__dst + 3) = 0x300000008LL;
  *((void *)__dst + 4) = 0xC04E800000000000LL;
  unint64_t v11 = 0xC04E800000000000LL;
  sub_10015ED64((uint64_t)(__dst + 40), (double *)&v11, 1LL);
  *((_OWORD *)__dst + 4) = xmmword_100423D50;
  *((void *)__dst + 10) = 0x4024000000000000LL;
  *((_DWORD *)__dst + 22) = 45;
  __dst[96] = 0;
  __dst[120] = 0;
  *((void *)__dst + 16) = 0LL;
  __dst[136] = 0;
  *((_DWORD *)__dst + 35) = 1;
  __dst[144] = 1;
  *(_OWORD *)(__dst + 152) = xmmword_100423D60;
  *(_OWORD *)(__dst + 16std::ostream::~ostream(v2, v3 + 8) = xmmword_100423D70;
  __asm { FMOV            V0.2D, #1.0 }

  *(_OWORD *)(__dst + 184) = _Q0;
  *((void *)__dst + 25) = 0xC059000000000000LL;
  *((_OWORD *)__dst + 13) = xmmword_100423D80;
  *((int32x2_t *)__dst + 2std::ostream::~ostream(v2, v3 + 8) = vdup_n_s32(0x3DCCCCCDu);
  *(_OWORD *)(__dst + 232) = xmmword_100423CC0;
  *((void *)__dst + 32) = 0LL;
  *((void *)__dst + 33) = 0LL;
  *((void *)__dst + 31) = 0x3FD999999999999ALL;
  *((_OWORD *)__dst + memset(&__p[7], 0, 17) = xmmword_100423CD0;
  *((_DWORD *)__dst + 72) = 5;
  *((void *)__dst + 37) = 0x4000000000000000LL;
  *((_DWORD *)__dst + 76) = 10;
  *((void *)__dst + 39) = 0x4034000000000000LL;
  *((_DWORD *)__dst + 80) = 3;
  *((void *)__dst + 41) = 0x3FF0000000000000LL;
  *((void *)__dst + 42) = 0x4008000000000000LL;
  return __dst;
}

void sub_100204B94(_Unwind_Exception *exception_object)
{
}

uint64_t *sub_100204BB0(uint64_t **a1, const void **a2, uint64_t a3, __int128 **a4)
{
  uint64_t v6 = (uint64_t **)sub_10001E444((uint64_t)a1, &v11, a2);
  __int128 v7 = *v6;
  if (!*v6)
  {
    int v8 = v6;
    sub_100204C58((uint64_t)a1, a4, (uint64_t)v10);
    sub_10001E548(a1, v11, v8, v10[0]);
    __int128 v7 = v10[0];
    v10[0] = 0LL;
    sub_100204374((uint64_t)v10, 0LL);
  }

  return v7;
}

_BYTE *sub_100204C58@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = v6 + 4;
  int v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    uint64_t result = sub_1000063A8(result, *(void **)v8, *((void *)v8 + 1));
  }

  else
  {
    __int128 v9 = *v8;
    v6[6] = *((void *)v8 + 2);
    *(_OWORD *)uint64_t result = v9;
  }

  uint8_t v6[8] = 0LL;
  v6[9] = 0LL;
  v6[7] = v6 + 8;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100204CD4(_Unwind_Exception *a1)
{
}

uint64_t *sub_100204CEC(uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t v6 = (uint64_t **)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        int v8 = (uint64_t *)v5;
        int v9 = *(_DWORD *)(v5 + 32);
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        uint64_t v6 = (uint64_t **)v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = (uint64_t **)(v8 + 1);
        goto LABEL_10;
      }
    }
  }

  else
  {
    int v8 = (uint64_t *)(a1 + 8);
LABEL_10:
    sub_100204DB4(a1, a4, (uint64_t)v11);
    sub_10001E548((uint64_t **)a1, (uint64_t)v8, v6, v11[0]);
    int v8 = v11[0];
    v11[0] = 0LL;
    sub_100202C40((uint64_t)v11, 0LL);
  }

  return v8;
}

uint64_t sub_100204DB4@<X0>(uint64_t a1@<X0>, _DWORD **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x168uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = sub_100204E1C((uint64_t)v6 + 32, *a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100204E04(_Unwind_Exception *a1)
{
}

uint64_t sub_100204E1C(uint64_t a1, _DWORD *a2)
{
  *(_DWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 8std::ostream::~ostream(v2, v3 + 8) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 16std::ostream::~ostream(v2, v3 + 8) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 24std::ostream::~ostream(v2, v3 + 8) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0x300000008LL;
  *(void *)(a1 + 16) = 0xC04E800000000000LL;
  unint64_t v9 = 0xC04E800000000000LL;
  sub_10015ED64(a1 + 24, (double *)&v9, 1LL);
  *(_OWORD *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = xmmword_100423D50;
  *(void *)(a1 + 64) = 0x4024000000000000LL;
  *(_DWORD *)(a1 + 72) = 45;
  *(_BYTE *)(a1 + 80) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0LL;
  *(_BYTE *)(a1 + 120) = 0;
  *(_DWORD *)(a1 + 124) = 1;
  *(_BYTE *)(a1 + 12std::ostream::~ostream(v2, v3 + 8) = 1;
  *(_OWORD *)(a1 + 136) = xmmword_100423D60;
  *(_OWORD *)(a1 + 152) = xmmword_100423D70;
  __asm { FMOV            V0.2D, #1.0 }

  *(_OWORD *)(a1 + 16std::ostream::~ostream(v2, v3 + 8) = _Q0;
  *(void *)(a1 + 184) = 0xC059000000000000LL;
  *(_OWORD *)(a1 + 192) = xmmword_100423D80;
  *(int32x2_t *)(a1 + 20std::ostream::~ostream(v2, v3 + 8) = vdup_n_s32(0x3DCCCCCDu);
  *(_OWORD *)(a1 + 216) = xmmword_100423CC0;
  *(void *)(a1 + 240) = 0LL;
  *(void *)(a1 + 24std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(void *)(a1 + 232) = 0x3FD999999999999ALL;
  *(_OWORD *)(a1 + 256) = xmmword_100423CD0;
  *(_DWORD *)(a1 + 272) = 5;
  *(void *)(a1 + 280) = 0x4000000000000000LL;
  *(_DWORD *)(a1 + 28std::ostream::~ostream(v2, v3 + 8) = 10;
  *(void *)(a1 + 296) = 0x4034000000000000LL;
  *(_DWORD *)(a1 + 304) = 3;
  *(void *)(a1 + 312) = 0x3FF0000000000000LL;
  *(void *)(a1 + 320) = 0x4008000000000000LL;
  return a1;
}

uint64_t sub_100204FCC()
{
  int v1674 = 6;
  sub_10020156C((uint64_t)v1823, &v1674, (uint64_t)&xmmword_1007FA740);
  int v1673 = 7;
  sub_10020156C((uint64_t)&v1824, &v1673, (uint64_t)&xmmword_1007FA740);
  int v1672 = 0;
  sub_10020156C((uint64_t)v1825, &v1672, (uint64_t)&xmmword_1007FA740);
  sub_100202A04((uint64_t)v1675, v1823, 3LL);
  int v1826 = 1;
  sub_100202C84(v1827, (uint64_t)v1675);
  int v1670 = 6;
  sub_10020156C((uint64_t)v1820, &v1670, (uint64_t)&xmmword_1007FA740);
  int v1669 = 7;
  sub_10020156C((uint64_t)&v1821, &v1669, (uint64_t)&xmmword_1007FA740);
  int v1668 = 0;
  sub_10020156C((uint64_t)v1822, &v1668, (uint64_t)&xmmword_1007FA740);
  sub_100202A04((uint64_t)v1671, v1820, 3LL);
  int v1828 = 2;
  sub_100202C84(v1829, (uint64_t)v1671);
  int v1666 = 6;
  sub_10020156C((uint64_t)v1816, &v1666, (uint64_t)&xmmword_1007FA740);
  int v1665 = 4;
  sub_10020156C((uint64_t)&v1817, &v1665, (uint64_t)&xmmword_1007FA740);
  int v1664 = 7;
  sub_10020156C((uint64_t)&v1818, &v1664, (uint64_t)&xmmword_1007FA740);
  int v1663 = 0;
  sub_10020156C((uint64_t)v1819, &v1663, (uint64_t)&xmmword_1007FA740);
  sub_100202A04((uint64_t)v1667, v1816, 4LL);
  int v1830 = 3;
  sub_100202C84(v1831, (uint64_t)v1667);
  int v1661 = 6;
  sub_10020156C((uint64_t)v1812, &v1661, (uint64_t)&xmmword_1007FA740);
  int v1660 = 3;
  v1631[0] = 0x300000008LL;
  v1631[1] = 0xC04F000000000000LL;
  v1793[0] = -62.0;
  sub_10015ED64((uint64_t)v1632, v1793, 1LL);
  __int128 v1633 = xmmword_100423D50;
  uint64_t v1634 = 0x4024000000000000LL;
  int v1635 = 45;
  LOBYTE(v1636) = 0;
  char v1638 = 0;
  uint64_t v1639 = 0LL;
  char v1640 = 0;
  int v1641 = 1;
  char v1642 = 1;
  __int128 v1643 = xmmword_100423D60;
  __int128 v1644 = xmmword_100423D70;
  __asm { FMOV            V0.2D, #1.0 }

  __int128 v58 = _Q0;
  __int128 v1645 = _Q0;
  unint64_t v1646 = 0xC059000000000000LL;
  __int128 v1647 = xmmword_100423D80;
  int32x2_t v1648 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1649 = xmmword_100423CC0;
  uint64_t v1651 = 0LL;
  uint64_t v1652 = 0LL;
  uint64_t v1650 = 0x3FD999999999999ALL;
  __int128 v1653 = xmmword_100423CD0;
  int v1654 = 5;
  uint64_t v1655 = 0x4000000000000000LL;
  int v1656 = 10;
  uint64_t v1657 = 0x4034000000000000LL;
  int v1658 = 3;
  __int128 v1659 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1813, &v1660, (uint64_t)v1631);
  int v1630 = 7;
  sub_10020156C((uint64_t)&v1814, &v1630, (uint64_t)&xmmword_1007FA740);
  int v1629 = 0;
  v1600[0] = 0x300000008LL;
  v1600[1] = 0xC04F000000000000LL;
  v1793[0] = -62.0;
  sub_10015ED64((uint64_t)v1601, v1793, 1LL);
  __int128 v1602 = xmmword_100423D50;
  uint64_t v1603 = 0x4024000000000000LL;
  int v1604 = 45;
  LOBYTE(v1605) = 0;
  char v1607 = 0;
  uint64_t v1608 = 0LL;
  char v1609 = 0;
  int v1610 = 1;
  char v1611 = 1;
  __int128 v1612 = xmmword_100423D60;
  __int128 v1613 = xmmword_100423D70;
  __int128 v1614 = v58;
  unint64_t v1615 = 0xC059000000000000LL;
  __int128 v1616 = xmmword_100423D80;
  int32x2_t v1617 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1618 = xmmword_100423CC0;
  uint64_t v1620 = 0LL;
  uint64_t v1621 = 0LL;
  uint64_t v1619 = 0x3FD999999999999ALL;
  __int128 v1622 = xmmword_100423CD0;
  int v1623 = 5;
  uint64_t v1624 = 0x4000000000000000LL;
  int v1625 = 10;
  uint64_t v1626 = 0x4034000000000000LL;
  int v1627 = 3;
  __int128 v1628 = xmmword_100423D90;
  sub_100201644((uint64_t)v1815, &v1629, (uint64_t)v1600);
  sub_100202A04((uint64_t)v1662, v1812, 4LL);
  int v1832 = 4;
  sub_100202C84(v1833, (uint64_t)v1662);
  int v1598 = 6;
  v1569[0] = 0x300000008LL;
  v1569[1] = 0xC04F19999999999ALL;
  v1793[0] = -62.2;
  sub_10015ED64((uint64_t)v1570, v1793, 1LL);
  __int128 v1571 = xmmword_100423D50;
  uint64_t v1572 = 0x4024000000000000LL;
  int v1573 = 45;
  LOBYTE(v1574) = 0;
  char v1576 = 0;
  uint64_t v1577 = 0LL;
  char v1578 = 0;
  int v1579 = 1;
  char v1580 = 1;
  __int128 v1581 = xmmword_100423D60;
  __int128 v1582 = xmmword_100423D70;
  __int128 v1583 = v58;
  unint64_t v1584 = 0xC059000000000000LL;
  __int128 v1585 = xmmword_100423D80;
  int32x2_t v1586 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1587 = xmmword_100423CC0;
  uint64_t v1589 = 0LL;
  uint64_t v1590 = 0LL;
  uint64_t v1588 = 0x3FD999999999999ALL;
  __int128 v1591 = xmmword_100423CD0;
  int v1592 = 5;
  uint64_t v1593 = 0x4000000000000000LL;
  int v1594 = 10;
  uint64_t v1595 = 0x4034000000000000LL;
  int v1596 = 3;
  __int128 v1597 = xmmword_100423D90;
  sub_100201644((uint64_t)v1809, &v1598, (uint64_t)v1569);
  int v1568 = 7;
  sub_10020156C((uint64_t)&v1810, &v1568, (uint64_t)&xmmword_1007FA740);
  int v1567 = 0;
  v1538[0] = 0x300000008LL;
  v1538[1] = 0xC04F19999999999ALL;
  v1793[0] = -62.2;
  sub_10015ED64((uint64_t)v1539, v1793, 1LL);
  __int128 v1540 = xmmword_100423D50;
  uint64_t v1541 = 0x4024000000000000LL;
  int v1542 = 45;
  LOBYTE(v1543) = 0;
  char v1545 = 0;
  uint64_t v1546 = 0LL;
  char v1547 = 0;
  int v1548 = 1;
  char v1549 = 1;
  __int128 v1550 = xmmword_100423D60;
  __int128 v1551 = xmmword_100423D70;
  __int128 v1552 = v58;
  unint64_t v1553 = 0xC059000000000000LL;
  __int128 v1554 = xmmword_100423D80;
  int32x2_t v1555 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1556 = xmmword_100423CC0;
  uint64_t v1558 = 0LL;
  uint64_t v1559 = 0LL;
  uint64_t v1557 = 0x3FD999999999999ALL;
  __int128 v1560 = xmmword_100423CD0;
  int v1561 = 5;
  uint64_t v1562 = 0x4000000000000000LL;
  int v1563 = 10;
  uint64_t v1564 = 0x4034000000000000LL;
  int v1565 = 3;
  __int128 v1566 = xmmword_100423D90;
  sub_100201644((uint64_t)v1811, &v1567, (uint64_t)v1538);
  sub_100202A04((uint64_t)v1599, v1809, 3LL);
  int v1834 = 5;
  sub_100202C84(v1835, (uint64_t)v1599);
  int v1536 = 6;
  sub_10020156C((uint64_t)v1806, &v1536, (uint64_t)&xmmword_1007FA740);
  int v1535 = 7;
  sub_10020156C((uint64_t)&v1807, &v1535, (uint64_t)&xmmword_1007FA740);
  int v1534 = 0;
  sub_10020156C((uint64_t)v1808, &v1534, (uint64_t)&xmmword_1007FA740);
  sub_100202A04((uint64_t)v1537, v1806, 3LL);
  int v1836 = 9;
  sub_100202C84(v1837, (uint64_t)v1537);
  int v1532 = 6;
  sub_10020156C((uint64_t)v1803, &v1532, (uint64_t)&xmmword_1007FA740);
  int v1531 = 7;
  sub_10020156C((uint64_t)&v1804, &v1531, (uint64_t)&xmmword_1007FA740);
  int v1530 = 0;
  sub_10020156C((uint64_t)v1805, &v1530, (uint64_t)&xmmword_1007FA740);
  sub_100202A04((uint64_t)v1533, v1803, 3LL);
  int v1838 = 12;
  sub_100202C84(v1839, (uint64_t)v1533);
  int v1528 = 1;
  sub_10020156C((uint64_t)v1793, &v1528, (uint64_t)&xmmword_1007FA740);
  int v1527 = 3;
  v1498[0] = 0x300000008LL;
  v1498[1] = 0xC050933333333333LL;
  v1742[0] = -66.3;
  sub_10015ED64((uint64_t)v1499, v1742, 1LL);
  __int128 v1500 = xmmword_100423D50;
  uint64_t v1501 = 0x4024000000000000LL;
  int v1502 = 45;
  LOBYTE(v1503) = 0;
  char v1505 = 0;
  uint64_t v1506 = 0LL;
  char v1507 = 0;
  int v1508 = 1;
  char v1509 = 1;
  __int128 v1510 = xmmword_100423D60;
  __int128 v1511 = xmmword_100423D70;
  __int128 v1512 = v58;
  unint64_t v1513 = 0xC059000000000000LL;
  __int128 v1514 = xmmword_100423D80;
  int32x2_t v1515 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1516 = xmmword_100423CC0;
  uint64_t v1518 = 0LL;
  uint64_t v1519 = 0LL;
  uint64_t v1517 = 0x3FD999999999999ALL;
  __int128 v1520 = xmmword_100423CD0;
  int v1521 = 5;
  uint64_t v1522 = 0x4000000000000000LL;
  int v1523 = 10;
  uint64_t v1524 = 0x4034000000000000LL;
  int v1525 = 3;
  __int128 v1526 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1794, &v1527, (uint64_t)v1498);
  int v1497 = 2;
  v1468[0] = 0x300000008LL;
  v1468[1] = 0xC050B9999999999ALL;
  v1742[0] = -66.9;
  sub_10015ED64((uint64_t)v1469, v1742, 1LL);
  __int128 v1470 = xmmword_100423D50;
  uint64_t v1471 = 0x4024000000000000LL;
  int v1472 = 45;
  LOBYTE(v1473) = 0;
  char v1475 = 0;
  uint64_t v1476 = 0LL;
  char v1477 = 0;
  int v1478 = 1;
  char v1479 = 1;
  __int128 v1480 = xmmword_100423D60;
  __int128 v1481 = xmmword_100423D70;
  __int128 v1482 = v58;
  unint64_t v1483 = 0xC059000000000000LL;
  __int128 v1484 = xmmword_100423D80;
  int32x2_t v1485 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1486 = xmmword_100423CC0;
  uint64_t v1488 = 0LL;
  uint64_t v1489 = 0LL;
  uint64_t v1487 = 0x3FD999999999999ALL;
  __int128 v1490 = xmmword_100423CD0;
  int v1491 = 5;
  uint64_t v1492 = 0x4000000000000000LL;
  int v1493 = 10;
  uint64_t v1494 = 0x4034000000000000LL;
  int v1495 = 3;
  __int128 v1496 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1795, &v1497, (uint64_t)v1468);
  int v1467 = 4;
  v1438[0] = 0x300000008LL;
  v1438[1] = 0xC05079999999999ALL;
  v1742[0] = -65.9;
  sub_10015ED64((uint64_t)v1439, v1742, 1LL);
  __int128 v1440 = xmmword_100423D50;
  uint64_t v1441 = 0x4024000000000000LL;
  int v1442 = 45;
  LOBYTE(v1443) = 0;
  char v1445 = 0;
  uint64_t v1446 = 0LL;
  char v1447 = 0;
  int v1448 = 1;
  char v1449 = 1;
  __int128 v1450 = xmmword_100423D60;
  __int128 v1451 = xmmword_100423D70;
  __int128 v1452 = v58;
  unint64_t v1453 = 0xC059000000000000LL;
  __int128 v1454 = xmmword_100423D80;
  int32x2_t v1455 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1456 = xmmword_100423CC0;
  uint64_t v1458 = 0LL;
  uint64_t v1459 = 0LL;
  uint64_t v1457 = 0x3FD999999999999ALL;
  __int128 v1460 = xmmword_100423CD0;
  int v1461 = 5;
  uint64_t v1462 = 0x4000000000000000LL;
  int v1463 = 10;
  uint64_t v1464 = 0x4034000000000000LL;
  int v1465 = 3;
  __int128 v1466 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1796, &v1467, (uint64_t)v1438);
  int v1437 = 5;
  sub_10020156C((uint64_t)&v1797, &v1437, (uint64_t)&xmmword_1007FA740);
  int v1436 = 9;
  v1407[0] = 0x300000008LL;
  v1407[1] = 0xC04F400000000000LL;
  v1742[0] = -62.5;
  sub_10015ED64((uint64_t)v1408, v1742, 1LL);
  __int128 v1409 = xmmword_100423D50;
  uint64_t v1410 = 0x4024000000000000LL;
  int v1411 = 45;
  LOBYTE(v1412) = 0;
  char v1414 = 0;
  uint64_t v1415 = 0LL;
  char v1416 = 0;
  int v1417 = 1;
  char v1418 = 1;
  __int128 v1419 = xmmword_100423D60;
  __int128 v1420 = xmmword_100423D70;
  __int128 v1421 = v58;
  unint64_t v1422 = 0xC059000000000000LL;
  __int128 v1423 = xmmword_100423D80;
  int32x2_t v1424 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1425 = xmmword_100423CC0;
  uint64_t v1427 = 0LL;
  uint64_t v1428 = 0LL;
  uint64_t v1426 = 0x3FD999999999999ALL;
  __int128 v1429 = xmmword_100423CD0;
  int v1430 = 5;
  uint64_t v1431 = 0x4000000000000000LL;
  int v1432 = 10;
  uint64_t v1433 = 0x4034000000000000LL;
  int v1434 = 3;
  __int128 v1435 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1798, &v1436, (uint64_t)v1407);
  int v1406 = 12;
  sub_10020156C((uint64_t)&v1799, &v1406, (uint64_t)&xmmword_1007FA740);
  int v1405 = 6;
  sub_10020156C((uint64_t)&v1800, &v1405, (uint64_t)&xmmword_1007FA740);
  int v1404 = 18;
  v1375[0] = 0x200000003LL;
  v1375[1] = 0xC04E000000000000LL;
  v1742[0] = -60.0;
  sub_10015ED64((uint64_t)v1376, v1742, 1LL);
  __int128 v1377 = xmmword_1004287C0;
  uint64_t v1378 = 0x4000000000000000LL;
  int v1379 = 20;
  LOBYTE(v1380) = 0;
  char v1382 = 0;
  uint64_t v1383 = 0LL;
  char v1384 = 0;
  int v1385 = 1;
  char v1386 = 1;
  __int128 v1387 = xmmword_100423D60;
  __int128 v1388 = xmmword_100423D70;
  __int128 v1389 = v58;
  unint64_t v1390 = 0xC059000000000000LL;
  __int128 v1391 = xmmword_100423D80;
  int32x2_t v1392 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1393 = xmmword_100423CC0;
  uint64_t v1395 = 0LL;
  uint64_t v1396 = 0LL;
  uint64_t v1394 = 0x3FD999999999999ALL;
  __int128 v1397 = xmmword_100423CD0;
  int v1398 = 5;
  uint64_t v1399 = 0x4000000000000000LL;
  int v1400 = 10;
  uint64_t v1401 = 0x4034000000000000LL;
  int v1402 = 3;
  __int128 v1403 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1801, &v1404, (uint64_t)v1375);
  int v1374 = 0;
  v1345[0] = 0x300000008LL;
  v1345[1] = 0xC050B9999999999ALL;
  v1742[0] = -66.9;
  sub_10015ED64((uint64_t)v1346, v1742, 1LL);
  __int128 v1347 = xmmword_100423D50;
  uint64_t v1348 = 0x4024000000000000LL;
  int v1349 = 45;
  LOBYTE(v1350) = 0;
  char v1352 = 0;
  uint64_t v1353 = 0LL;
  char v1354 = 0;
  int v1355 = 1;
  char v1356 = 1;
  __int128 v1357 = xmmword_100423D60;
  __int128 v1358 = xmmword_100423D70;
  __int128 v1359 = v58;
  unint64_t v1360 = 0xC059000000000000LL;
  __int128 v1361 = xmmword_100423D80;
  int32x2_t v1362 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1363 = xmmword_100423CC0;
  uint64_t v1365 = 0LL;
  uint64_t v1366 = 0LL;
  uint64_t v1364 = 0x3FD999999999999ALL;
  __int128 v1367 = xmmword_100423CD0;
  int v1368 = 5;
  uint64_t v1369 = 0x4000000000000000LL;
  int v1370 = 10;
  uint64_t v1371 = 0x4034000000000000LL;
  int v1372 = 3;
  __int128 v1373 = xmmword_100423D90;
  sub_100201644((uint64_t)v1802, &v1374, (uint64_t)v1345);
  sub_100202A04((uint64_t)v1529, (int *)v1793, 10LL);
  int v1840 = 6;
  sub_100202C84(v1841, (uint64_t)v1529);
  int v1343 = 4;
  sub_10020156C((uint64_t)v1786, &v1343, (uint64_t)&xmmword_1007FA740);
  int v1342 = 1;
  sub_10020156C((uint64_t)&v1787, &v1342, (uint64_t)&xmmword_1007FA740);
  int v1341 = 5;
  sub_10020156C((uint64_t)&v1788, &v1341, (uint64_t)&xmmword_1007FA740);
  int v1340 = 12;
  sub_10020156C((uint64_t)&v1789, &v1340, (uint64_t)&xmmword_1007FA740);
  int v1339 = 18;
  v1310[0] = 0x200000003LL;
  v1310[1] = 0xC04E000000000000LL;
  v1742[0] = -60.0;
  sub_10015ED64((uint64_t)v1311, v1742, 1LL);
  __int128 v1312 = xmmword_1004287C0;
  uint64_t v1313 = 0x4000000000000000LL;
  int v1314 = 20;
  LOBYTE(v1315) = 0;
  char v1317 = 0;
  uint64_t v1318 = 0LL;
  char v1319 = 0;
  int v1320 = 1;
  char v1321 = 1;
  __int128 v1322 = xmmword_100423D60;
  __int128 v1323 = xmmword_100423D70;
  __int128 v1324 = v58;
  unint64_t v1325 = 0xC059000000000000LL;
  __int128 v1326 = xmmword_100423D80;
  int32x2_t v1327 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1328 = xmmword_100423CC0;
  uint64_t v1330 = 0LL;
  uint64_t v1331 = 0LL;
  uint64_t v1329 = 0x3FD999999999999ALL;
  __int128 v1332 = xmmword_100423CD0;
  int v1333 = 5;
  uint64_t v1334 = 0x4000000000000000LL;
  int v1335 = 10;
  uint64_t v1336 = 0x4034000000000000LL;
  int v1337 = 3;
  __int128 v1338 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1790, &v1339, (uint64_t)v1310);
  int v1309 = 7;
  v1280[0] = 0x300000008LL;
  v1280[1] = 0xC050000000000000LL;
  v1742[0] = -64.0;
  sub_10015ED64((uint64_t)v1281, v1742, 1LL);
  __int128 v1282 = xmmword_100423D50;
  uint64_t v1283 = 0x4024000000000000LL;
  int v1284 = 45;
  LOBYTE(v1285) = 0;
  char v1287 = 0;
  uint64_t v1288 = 0LL;
  char v1289 = 0;
  int v1290 = 1;
  char v1291 = 1;
  __int128 v1292 = xmmword_100423D60;
  __int128 v1293 = xmmword_100423D70;
  __int128 v1294 = v58;
  unint64_t v1295 = 0xC059000000000000LL;
  __int128 v1296 = xmmword_100423D80;
  int32x2_t v1297 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1298 = xmmword_100423CC0;
  uint64_t v1300 = 0LL;
  uint64_t v1301 = 0LL;
  uint64_t v1299 = 0x3FD999999999999ALL;
  __int128 v1302 = xmmword_100423CD0;
  int v1303 = 5;
  uint64_t v1304 = 0x4000000000000000LL;
  int v1305 = 10;
  uint64_t v1306 = 0x4034000000000000LL;
  int v1307 = 3;
  __int128 v1308 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1791, &v1309, (uint64_t)v1280);
  int v1279 = 0;
  sub_10020156C((uint64_t)v1792, &v1279, (uint64_t)&xmmword_1007FA740);
  sub_100202A04((uint64_t)v1344, v1786, 7LL);
  int v1842 = 7;
  sub_100202C84(v1843, (uint64_t)v1344);
  int v1277 = 0;
  v1248[0] = 0x300000008LL;
  v1248[1] = 0xC050B9999999999ALL;
  v1742[0] = -66.9;
  sub_10015ED64((uint64_t)v1249, v1742, 1LL);
  __int128 v1250 = xmmword_100423D50;
  uint64_t v1251 = 0x4024000000000000LL;
  int v1252 = 45;
  LOBYTE(v1253) = 0;
  char v1255 = 0;
  uint64_t v1256 = 0LL;
  char v1257 = 0;
  int v1258 = 1;
  char v1259 = 1;
  __int128 v1260 = xmmword_100423D60;
  __int128 v1261 = xmmword_100423D70;
  __int128 v1262 = v58;
  unint64_t v1263 = 0xC059000000000000LL;
  __int128 v1264 = xmmword_100423D80;
  int32x2_t v1265 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1266 = xmmword_100423CC0;
  uint64_t v1268 = 0LL;
  uint64_t v1269 = 0LL;
  uint64_t v1267 = 0x3FD999999999999ALL;
  __int128 v1270 = xmmword_100423CD0;
  int v1271 = 5;
  uint64_t v1272 = 0x4000000000000000LL;
  int v1273 = 10;
  uint64_t v1274 = 0x4034000000000000LL;
  int v1275 = 3;
  __int128 v1276 = xmmword_100423D90;
  sub_100201644((uint64_t)v1782, &v1277, (uint64_t)v1248);
  sub_100202A04((uint64_t)v1278, v1782, 1LL);
  int v1844 = 0;
  sub_100202C84(v1845, (uint64_t)v1278);
  sub_100202D5C((uint64_t)v1676, &v1826, 10LL);
  int v1846 = 4;
  sub_100202F28(v1847, (uint64_t)v1676);
  int v1245 = 7;
  v1216[0] = 0x300000008LL;
  v1216[1] = 0xC04CC00000000000LL;
  v1742[0] = -57.5;
  sub_10015ED64((uint64_t)v1217, v1742, 1LL);
  __int128 v1218 = xmmword_100423D50;
  uint64_t v1219 = 0x4024000000000000LL;
  int v1220 = 45;
  LOBYTE(v1221) = 0;
  char v1223 = 0;
  uint64_t v1224 = 0LL;
  char v1225 = 0;
  int v1226 = 1;
  char v1227 = 1;
  __int128 v1228 = xmmword_100423D60;
  __int128 v1229 = xmmword_100423D70;
  __int128 v1230 = v58;
  unint64_t v1231 = 0xC059000000000000LL;
  __int128 v1232 = xmmword_100423D80;
  int32x2_t v1233 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1234 = xmmword_100423CC0;
  uint64_t v1236 = 0LL;
  uint64_t v1237 = 0LL;
  uint64_t v1235 = 0x3FD999999999999ALL;
  __int128 v1238 = xmmword_100423CD0;
  int v1239 = 5;
  uint64_t v1240 = 0x4000000000000000LL;
  int v1241 = 10;
  uint64_t v1242 = 0x4034000000000000LL;
  int v1243 = 3;
  __int128 v1244 = xmmword_100423D90;
  sub_100201644((uint64_t)v1762, &v1245, (uint64_t)v1216);
  int v1215 = 0;
  sub_10020156C((uint64_t)v1763, &v1215, (uint64_t)&xmmword_1007FA740);
  sub_100202A04((uint64_t)v1246, v1762, 2LL);
  int v1764 = 1;
  sub_100202C84(v1765, (uint64_t)v1246);
  int v1213 = 7;
  v1184[0] = 0x300000008LL;
  v1184[1] = 0xC04B800000000000LL;
  v1742[0] = -55.0;
  sub_10015ED64((uint64_t)v1185, v1742, 1LL);
  __int128 v1186 = xmmword_100423D50;
  uint64_t v1187 = 0x4024000000000000LL;
  int v1188 = 45;
  LOBYTE(v1189) = 0;
  char v1191 = 0;
  uint64_t v1192 = 0LL;
  char v1193 = 0;
  int v1194 = 1;
  char v1195 = 1;
  __int128 v1196 = xmmword_100423D60;
  __int128 v1197 = xmmword_100423D70;
  __int128 v1198 = v58;
  unint64_t v1199 = 0xC059000000000000LL;
  __int128 v1200 = xmmword_100423D80;
  int32x2_t v1201 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1202 = xmmword_100423CC0;
  uint64_t v1204 = 0LL;
  uint64_t v1205 = 0LL;
  uint64_t v1203 = 0x3FD999999999999ALL;
  __int128 v1206 = xmmword_100423CD0;
  int v1207 = 5;
  uint64_t v1208 = 0x4000000000000000LL;
  int v1209 = 10;
  uint64_t v1210 = 0x4034000000000000LL;
  int v1211 = 3;
  __int128 v1212 = xmmword_100423D90;
  sub_100201644((uint64_t)v1760, &v1213, (uint64_t)v1184);
  int v1183 = 0;
  sub_10020156C((uint64_t)v1761, &v1183, (uint64_t)&xmmword_1007FA740);
  sub_100202A04((uint64_t)v1214, v1760, 2LL);
  int v1766 = 2;
  sub_100202C84(v1767, (uint64_t)v1214);
  int v1181 = 7;
  v1152[0] = 0x300000008LL;
  v1152[1] = 0xC04A000000000000LL;
  v1742[0] = -52.0;
  sub_10015ED64((uint64_t)v1153, v1742, 1LL);
  __int128 v1154 = xmmword_100423D50;
  uint64_t v1155 = 0x4024000000000000LL;
  int v1156 = 45;
  LOBYTE(v1157) = 0;
  char v1159 = 0;
  uint64_t v1160 = 0LL;
  char v1161 = 0;
  int v1162 = 1;
  char v1163 = 1;
  __int128 v1164 = xmmword_100423D60;
  __int128 v1165 = xmmword_100423D70;
  __int128 v1166 = v58;
  unint64_t v1167 = 0xC059000000000000LL;
  __int128 v1168 = xmmword_100423D80;
  int32x2_t v1169 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1170 = xmmword_100423CC0;
  uint64_t v1172 = 0LL;
  uint64_t v1173 = 0LL;
  uint64_t v1171 = 0x3FD999999999999ALL;
  __int128 v1174 = xmmword_100423CD0;
  int v1175 = 5;
  uint64_t v1176 = 0x4000000000000000LL;
  int v1177 = 10;
  uint64_t v1178 = 0x4034000000000000LL;
  int v1179 = 3;
  __int128 v1180 = xmmword_100423D90;
  sub_100201644((uint64_t)v1758, &v1181, (uint64_t)v1152);
  int v1151 = 0;
  sub_10020156C((uint64_t)v1759, &v1151, (uint64_t)&xmmword_1007FA740);
  sub_100202A04((uint64_t)v1182, v1758, 2LL);
  int v1768 = 3;
  sub_100202C84(v1769, (uint64_t)v1182);
  int v1149 = 7;
  v1120[0] = 0x300000008LL;
  v1120[1] = 0xC04A400000000000LL;
  v1742[0] = -52.5;
  sub_10015ED64((uint64_t)v1121, v1742, 1LL);
  __int128 v1122 = xmmword_100423D50;
  uint64_t v1123 = 0x4024000000000000LL;
  int v1124 = 45;
  LOBYTE(v1125) = 0;
  char v1127 = 0;
  uint64_t v1128 = 0LL;
  char v1129 = 0;
  int v1130 = 1;
  char v1131 = 1;
  __int128 v1132 = xmmword_100423D60;
  __int128 v1133 = xmmword_100423D70;
  __int128 v1134 = v58;
  unint64_t v1135 = 0xC059000000000000LL;
  __int128 v1136 = xmmword_100423D80;
  int32x2_t v1137 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1138 = xmmword_100423CC0;
  uint64_t v1140 = 0LL;
  uint64_t v1141 = 0LL;
  uint64_t v1139 = 0x3FD999999999999ALL;
  __int128 v1142 = xmmword_100423CD0;
  int v1143 = 5;
  uint64_t v1144 = 0x4000000000000000LL;
  int v1145 = 10;
  uint64_t v1146 = 0x4034000000000000LL;
  int v1147 = 3;
  __int128 v1148 = xmmword_100423D90;
  sub_100201644((uint64_t)v1756, &v1149, (uint64_t)v1120);
  int v1119 = 0;
  sub_10020156C((uint64_t)v1757, &v1119, (uint64_t)&xmmword_1007FA740);
  sub_100202A04((uint64_t)v1150, v1756, 2LL);
  int v1770 = 4;
  sub_100202C84(v1771, (uint64_t)v1150);
  int v1117 = 7;
  v1088[0] = 0x300000008LL;
  v1088[1] = 0xC048A66666666666LL;
  v1742[0] = -49.3;
  sub_10015ED64((uint64_t)v1089, v1742, 1LL);
  __int128 v1090 = xmmword_100423D50;
  uint64_t v1091 = 0x4024000000000000LL;
  int v1092 = 45;
  LOBYTE(v1093) = 0;
  char v1095 = 0;
  uint64_t v1096 = 0LL;
  char v1097 = 0;
  int v1098 = 1;
  char v1099 = 1;
  __int128 v1100 = xmmword_100423D60;
  __int128 v1101 = xmmword_100423D70;
  __int128 v1102 = v58;
  unint64_t v1103 = 0xC059000000000000LL;
  __int128 v1104 = xmmword_100423D80;
  int32x2_t v1105 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1106 = xmmword_100423CC0;
  uint64_t v1108 = 0LL;
  uint64_t v1109 = 0LL;
  uint64_t v1107 = 0x3FD999999999999ALL;
  __int128 v1110 = xmmword_100423CD0;
  int v1111 = 5;
  uint64_t v1112 = 0x4000000000000000LL;
  int v1113 = 10;
  uint64_t v1114 = 0x4034000000000000LL;
  int v1115 = 3;
  __int128 v1116 = xmmword_100423D90;
  sub_100201644((uint64_t)v1754, &v1117, (uint64_t)v1088);
  int v1087 = 0;
  sub_10020156C((uint64_t)v1755, &v1087, (uint64_t)&xmmword_1007FA740);
  sub_100202A04((uint64_t)v1118, v1754, 2LL);
  int v1772 = 5;
  sub_100202C84(v1773, (uint64_t)v1118);
  int v1085 = 7;
  sub_10020156C((uint64_t)v1752, &v1085, (uint64_t)&xmmword_1007FA740);
  int v1084 = 0;
  sub_10020156C((uint64_t)v1753, &v1084, (uint64_t)&xmmword_1007FA740);
  sub_100202A04((uint64_t)v1086, v1752, 2LL);
  int v1774 = 12;
  sub_100202C84(v1775, (uint64_t)v1086);
  int v1082 = 4;
  v1053[0] = 0x300000008LL;
  v1053[1] = 0xC04A000000000000LL;
  v1710[0] = -52.0;
  sub_10015ED64((uint64_t)v1054, v1710, 1LL);
  __int128 v1055 = xmmword_100423D50;
  uint64_t v1056 = 0x4024000000000000LL;
  int v1057 = 45;
  LOBYTE(v105std::ostream::~ostream(v2, v3 + 8) = 0;
  char v1060 = 0;
  uint64_t v1061 = 0LL;
  char v1062 = 0;
  int v1063 = 1;
  char v1064 = 1;
  __int128 v1065 = xmmword_100423D60;
  __int128 v1066 = xmmword_100423D70;
  __int128 v1067 = v58;
  unint64_t v1068 = 0xC059000000000000LL;
  __int128 v1069 = xmmword_100423D80;
  int32x2_t v1070 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1071 = xmmword_100423CC0;
  uint64_t v1073 = 0LL;
  uint64_t v1074 = 0LL;
  uint64_t v1072 = 0x3FD999999999999ALL;
  __int128 v1075 = xmmword_100423CD0;
  int v1076 = 5;
  uint64_t v1077 = 0x4000000000000000LL;
  int v1078 = 10;
  uint64_t v1079 = 0x4034000000000000LL;
  int v1080 = 3;
  __int128 v1081 = xmmword_100423D90;
  sub_100201644((uint64_t)v1742, &v1082, (uint64_t)v1053);
  int v1052 = 1;
  v1023[0] = 0x300000008LL;
  v1023[1] = 0xC04B800000000000LL;
  v1710[0] = -55.0;
  sub_10015ED64((uint64_t)v1024, v1710, 1LL);
  __int128 v1025 = xmmword_100423D50;
  uint64_t v1026 = 0x4024000000000000LL;
  int v1027 = 45;
  LOBYTE(v102std::ostream::~ostream(v2, v3 + 8) = 0;
  char v1030 = 0;
  uint64_t v1031 = 0LL;
  char v1032 = 0;
  int v1033 = 1;
  char v1034 = 1;
  __int128 v1035 = xmmword_100423D60;
  __int128 v1036 = xmmword_100423D70;
  __int128 v1037 = v58;
  unint64_t v1038 = 0xC059000000000000LL;
  __int128 v1039 = xmmword_100423D80;
  int32x2_t v1040 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1041 = xmmword_100423CC0;
  uint64_t v1043 = 0LL;
  uint64_t v1044 = 0LL;
  uint64_t v1042 = 0x3FD999999999999ALL;
  __int128 v1045 = xmmword_100423CD0;
  int v1046 = 5;
  uint64_t v1047 = 0x4000000000000000LL;
  int v1048 = 10;
  uint64_t v1049 = 0x4034000000000000LL;
  int v1050 = 3;
  __int128 v1051 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1743, &v1052, (uint64_t)v1023);
  int v1022 = 2;
  v993[0] = 0x300000008LL;
  v993[1] = 0xC04A800000000000LL;
  v1710[0] = -53.0;
  sub_10015ED64((uint64_t)v994, v1710, 1LL);
  __int128 v995 = xmmword_100423D50;
  uint64_t v996 = 0x4024000000000000LL;
  int v997 = 45;
  LOBYTE(v99std::ostream::~ostream(v2, v3 + 8) = 0;
  char v1000 = 0;
  uint64_t v1001 = 0LL;
  char v1002 = 0;
  int v1003 = 1;
  char v1004 = 1;
  __int128 v1005 = xmmword_100423D60;
  __int128 v1006 = xmmword_100423D70;
  __int128 v1007 = v58;
  unint64_t v1008 = 0xC059000000000000LL;
  __int128 v1009 = xmmword_100423D80;
  int32x2_t v1010 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1011 = xmmword_100423CC0;
  uint64_t v1013 = 0LL;
  uint64_t v1014 = 0LL;
  uint64_t v1012 = 0x3FD999999999999ALL;
  __int128 v1015 = xmmword_100423CD0;
  int v1016 = 5;
  uint64_t v1017 = 0x4000000000000000LL;
  int v1018 = 10;
  uint64_t v1019 = 0x4034000000000000LL;
  int v1020 = 3;
  __int128 v1021 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1744, &v1022, (uint64_t)v993);
  int v992 = 3;
  v963[0] = 0x300000008LL;
  v963[1] = 0xC04B800000000000LL;
  v1710[0] = -55.0;
  sub_10015ED64((uint64_t)v964, v1710, 1LL);
  __int128 v965 = xmmword_100423D50;
  uint64_t v966 = 0x4024000000000000LL;
  int v967 = 45;
  LOBYTE(v96std::ostream::~ostream(v2, v3 + 8) = 0;
  char v970 = 0;
  uint64_t v971 = 0LL;
  char v972 = 0;
  int v973 = 1;
  char v974 = 1;
  __int128 v975 = xmmword_100423D60;
  __int128 v976 = xmmword_100423D70;
  __int128 v977 = v58;
  unint64_t v978 = 0xC059000000000000LL;
  __int128 v979 = xmmword_100423D80;
  int32x2_t v980 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v981 = xmmword_100423CC0;
  uint64_t v983 = 0LL;
  uint64_t v984 = 0LL;
  uint64_t v982 = 0x3FD999999999999ALL;
  __int128 v985 = xmmword_100423CD0;
  int v986 = 5;
  uint64_t v987 = 0x4000000000000000LL;
  int v988 = 10;
  uint64_t v989 = 0x4034000000000000LL;
  int v990 = 3;
  __int128 v991 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1745, &v992, (uint64_t)v963);
  int v962 = 5;
  v933[0] = 0x300000008LL;
  v933[1] = 0xC04E000000000000LL;
  v1710[0] = -60.0;
  sub_10015ED64((uint64_t)v934, v1710, 1LL);
  __int128 v935 = xmmword_100423D50;
  uint64_t v936 = 0x4024000000000000LL;
  int v937 = 45;
  LOBYTE(v93std::ostream::~ostream(v2, v3 + 8) = 0;
  char v940 = 0;
  uint64_t v941 = 0LL;
  char v942 = 0;
  int v943 = 1;
  char v944 = 1;
  __int128 v945 = xmmword_100423D60;
  __int128 v946 = xmmword_100423D70;
  __int128 v947 = v58;
  unint64_t v948 = 0xC059000000000000LL;
  __int128 v949 = xmmword_100423D80;
  int32x2_t v950 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v951 = xmmword_100423CC0;
  uint64_t v953 = 0LL;
  uint64_t v954 = 0LL;
  uint64_t v952 = 0x3FD999999999999ALL;
  __int128 v955 = xmmword_100423CD0;
  int v956 = 5;
  uint64_t v957 = 0x4000000000000000LL;
  int v958 = 10;
  uint64_t v959 = 0x4034000000000000LL;
  int v960 = 3;
  __int128 v961 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1746, &v962, (uint64_t)v933);
  int v932 = 12;
  sub_10020156C((uint64_t)&v1747, &v932, (uint64_t)&xmmword_1007FA740);
  int v931 = 16;
  v902[0] = 0x300000008LL;
  v902[1] = 0xC045000000000000LL;
  v1710[0] = -42.0;
  sub_10015ED64((uint64_t)v903, v1710, 1LL);
  __int128 v904 = xmmword_100423D50;
  uint64_t v905 = 0x4024000000000000LL;
  int v906 = 45;
  LOBYTE(v907) = 0;
  char v909 = 0;
  uint64_t v910 = 0LL;
  char v911 = 0;
  int v912 = 1;
  char v913 = 1;
  __int128 v914 = xmmword_100423D60;
  __int128 v915 = xmmword_100423D70;
  __int128 v916 = v58;
  unint64_t v917 = 0xC059000000000000LL;
  __int128 v918 = xmmword_100423D80;
  int32x2_t v919 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v920 = xmmword_100423CC0;
  uint64_t v922 = 0LL;
  uint64_t v923 = 0LL;
  uint64_t v921 = 0x3FD999999999999ALL;
  __int128 v924 = xmmword_100423CD0;
  int v925 = 5;
  uint64_t v926 = 0x4000000000000000LL;
  int v927 = 10;
  uint64_t v928 = 0x4034000000000000LL;
  int v929 = 3;
  __int128 v930 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1748, &v931, (uint64_t)v902);
  int v901 = 7;
  v872[0] = 0x300000008LL;
  v872[1] = 0xC046800000000000LL;
  v1710[0] = -45.0;
  sub_10015ED64((uint64_t)v873, v1710, 1LL);
  __int128 v874 = xmmword_100423D50;
  uint64_t v875 = 0x4024000000000000LL;
  int v876 = 45;
  LOBYTE(v877) = 0;
  char v879 = 0;
  uint64_t v880 = 0LL;
  char v881 = 0;
  int v882 = 1;
  char v883 = 1;
  __int128 v884 = xmmword_100423D60;
  __int128 v885 = xmmword_100423D70;
  __int128 v886 = v58;
  unint64_t v887 = 0xC059000000000000LL;
  __int128 v888 = xmmword_100423D80;
  int32x2_t v889 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v890 = xmmword_100423CC0;
  uint64_t v892 = 0LL;
  uint64_t v893 = 0LL;
  uint64_t v891 = 0x3FD999999999999ALL;
  __int128 v894 = xmmword_100423CD0;
  int v895 = 5;
  uint64_t v896 = 0x4000000000000000LL;
  int v897 = 10;
  uint64_t v898 = 0x4034000000000000LL;
  int v899 = 3;
  __int128 v900 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1749, &v901, (uint64_t)v872);
  int v871 = 6;
  v842[0] = 0x300000008LL;
  v842[1] = 0xC045800000000000LL;
  v1710[0] = -43.0;
  sub_10015ED64((uint64_t)v843, v1710, 1LL);
  __int128 v844 = xmmword_100423D50;
  uint64_t v845 = 0x4024000000000000LL;
  int v846 = 45;
  LOBYTE(v847) = 0;
  char v849 = 0;
  uint64_t v850 = 0LL;
  char v851 = 0;
  int v852 = 1;
  char v853 = 1;
  __int128 v854 = xmmword_100423D60;
  __int128 v855 = xmmword_100423D70;
  __int128 v856 = v58;
  unint64_t v857 = 0xC059000000000000LL;
  __int128 v858 = xmmword_100423D80;
  int32x2_t v859 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v860 = xmmword_100423CC0;
  uint64_t v862 = 0LL;
  uint64_t v863 = 0LL;
  uint64_t v861 = 0x3FD999999999999ALL;
  __int128 v864 = xmmword_100423CD0;
  int v865 = 5;
  uint64_t v866 = 0x4000000000000000LL;
  int v867 = 10;
  uint64_t v868 = 0x4034000000000000LL;
  int v869 = 3;
  __int128 v870 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1750, &v871, (uint64_t)v842);
  int v841 = 0;
  sub_10020156C((uint64_t)v1751, &v841, (uint64_t)&xmmword_1007FA740);
  sub_100202A04((uint64_t)v1083, (int *)v1742, 10LL);
  int v1776 = 7;
  sub_100202C84(v1777, (uint64_t)v1083);
  int v839 = 6;
  v810[0] = 0x300000008LL;
  v810[1] = 0xC045800000000000LL;
  v1710[0] = -43.0;
  sub_10015ED64((uint64_t)v811, v1710, 1LL);
  __int128 v812 = xmmword_100423D50;
  uint64_t v813 = 0x4024000000000000LL;
  int v814 = 45;
  LOBYTE(v815) = 0;
  char v817 = 0;
  uint64_t v818 = 0LL;
  char v819 = 0;
  int v820 = 1;
  char v821 = 1;
  __int128 v822 = xmmword_100423D60;
  __int128 v823 = xmmword_100423D70;
  __int128 v824 = v58;
  unint64_t v825 = 0xC059000000000000LL;
  __int128 v826 = xmmword_100423D80;
  int32x2_t v827 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v828 = xmmword_100423CC0;
  uint64_t v830 = 0LL;
  uint64_t v831 = 0LL;
  uint64_t v829 = 0x3FD999999999999ALL;
  __int128 v832 = xmmword_100423CD0;
  int v833 = 5;
  uint64_t v834 = 0x4000000000000000LL;
  int v835 = 10;
  uint64_t v836 = 0x4034000000000000LL;
  int v837 = 3;
  __int128 v838 = xmmword_100423D90;
  sub_100201644((uint64_t)v1739, &v839, (uint64_t)v810);
  int v809 = 7;
  v780[0] = 0x300000008LL;
  v780[1] = 0xC045800000000000LL;
  v1710[0] = -43.0;
  sub_10015ED64((uint64_t)v781, v1710, 1LL);
  __int128 v782 = xmmword_100423D50;
  uint64_t v783 = 0x4024000000000000LL;
  int v784 = 45;
  LOBYTE(v785) = 0;
  char v787 = 0;
  uint64_t v788 = 0LL;
  char v789 = 0;
  int v790 = 1;
  char v791 = 1;
  __int128 v792 = xmmword_100423D60;
  __int128 v793 = xmmword_100423D70;
  __int128 v794 = v58;
  unint64_t v795 = 0xC059000000000000LL;
  __int128 v796 = xmmword_100423D80;
  int32x2_t v797 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v798 = xmmword_100423CC0;
  uint64_t v800 = 0LL;
  uint64_t v801 = 0LL;
  uint64_t v799 = 0x3FD999999999999ALL;
  __int128 v802 = xmmword_100423CD0;
  int v803 = 5;
  uint64_t v804 = 0x4000000000000000LL;
  int v805 = 10;
  uint64_t v806 = 0x4034000000000000LL;
  int v807 = 3;
  __int128 v808 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1740, &v809, (uint64_t)v780);
  int v779 = 0;
  v750[0] = 0x300000008LL;
  v750[1] = 0xC045800000000000LL;
  v1710[0] = -43.0;
  sub_10015ED64((uint64_t)v751, v1710, 1LL);
  __int128 v752 = xmmword_100423D50;
  uint64_t v753 = 0x4024000000000000LL;
  int v754 = 45;
  LOBYTE(v755) = 0;
  char v757 = 0;
  uint64_t v758 = 0LL;
  char v759 = 0;
  int v760 = 1;
  char v761 = 1;
  __int128 v762 = xmmword_100423D60;
  __int128 v763 = xmmword_100423D70;
  __int128 v764 = v58;
  unint64_t v765 = 0xC059000000000000LL;
  __int128 v766 = xmmword_100423D80;
  int32x2_t v767 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v768 = xmmword_100423CC0;
  uint64_t v770 = 0LL;
  uint64_t v771 = 0LL;
  uint64_t v769 = 0x3FD999999999999ALL;
  __int128 v772 = xmmword_100423CD0;
  int v773 = 5;
  uint64_t v774 = 0x4000000000000000LL;
  int v775 = 10;
  uint64_t v776 = 0x4034000000000000LL;
  int v777 = 3;
  __int128 v778 = xmmword_100423D90;
  sub_100201644((uint64_t)v1741, &v779, (uint64_t)v750);
  sub_100202A04((uint64_t)v840, v1739, 3LL);
  int v1778 = 6;
  sub_100202C84(v1779, (uint64_t)v840);
  int v748 = 0;
  sub_10020156C((uint64_t)v1735, &v748, (uint64_t)&xmmword_1007FA740);
  sub_100202A04((uint64_t)v749, v1735, 1LL);
  int v1780 = 0;
  sub_100202C84(v1781, (uint64_t)v749);
  sub_100202D5C((uint64_t)v1247, &v1764, 9LL);
  int v1848 = 3;
  sub_100202F28(v1849, (uint64_t)v1247);
  int v745 = 0;
  v716[0] = 0x300000008LL;
  v716[1] = 0xC050C00000000000LL;
  v1710[0] = -67.0;
  sub_10015ED64((uint64_t)v717, v1710, 1LL);
  __int128 v718 = xmmword_100423D50;
  uint64_t v719 = 0x4024000000000000LL;
  int v720 = 45;
  LOBYTE(v721) = 0;
  char v723 = 0;
  uint64_t v724 = 0LL;
  char v725 = 0;
  int v726 = 1;
  char v727 = 1;
  __int128 v728 = xmmword_100423D60;
  __int128 v729 = xmmword_100423D70;
  __int128 v730 = v58;
  unint64_t v731 = 0xC059000000000000LL;
  __int128 v732 = xmmword_100423D80;
  int32x2_t v733 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v734 = xmmword_100423CC0;
  uint64_t v736 = 0LL;
  uint64_t v737 = 0LL;
  uint64_t v735 = 0x3FD999999999999ALL;
  __int128 v738 = xmmword_100423CD0;
  int v739 = 5;
  uint64_t v740 = 0x4000000000000000LL;
  int v741 = 10;
  uint64_t v742 = 0x4034000000000000LL;
  int v743 = 3;
  __int128 v744 = xmmword_100423D90;
  sub_100201644((uint64_t)v1728, &v745, (uint64_t)v716);
  int v715 = 16;
  v686[0] = 0x200000003LL;
  v686[1] = 0xC052000000000000LL;
  v1710[0] = -72.0;
  sub_10015ED64((uint64_t)v687, v1710, 1LL);
  __int128 v688 = xmmword_1004287C0;
  uint64_t v689 = 0x4000000000000000LL;
  int v690 = 20;
  LOBYTE(v691) = 0;
  char v693 = 0;
  uint64_t v694 = 0LL;
  char v695 = 0;
  int v696 = 1;
  char v697 = 1;
  __int128 v698 = xmmword_100423D60;
  __int128 v699 = xmmword_100423D70;
  __int128 v700 = v58;
  unint64_t v701 = 0xC059000000000000LL;
  __int128 v702 = xmmword_100423D80;
  int32x2_t v703 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v704 = xmmword_100423CC0;
  uint64_t v706 = 0LL;
  uint64_t v707 = 0LL;
  uint64_t v705 = 0x3FD999999999999ALL;
  __int128 v708 = xmmword_100423CD0;
  int v709 = 5;
  uint64_t v710 = 0x4000000000000000LL;
  int v711 = 10;
  uint64_t v712 = 0x4034000000000000LL;
  int v713 = 3;
  __int128 v714 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1729, &v715, (uint64_t)v686);
  int v685 = 18;
  v656[0] = 0x200000003LL;
  v656[1] = 0xC052000000000000LL;
  v1710[0] = -72.0;
  sub_10015ED64((uint64_t)v657, v1710, 1LL);
  __int128 v658 = xmmword_1004287C0;
  uint64_t v659 = 0x4000000000000000LL;
  int v660 = 20;
  LOBYTE(v661) = 0;
  char v663 = 0;
  uint64_t v664 = 0LL;
  char v665 = 0;
  int v666 = 1;
  char v667 = 1;
  __int128 v668 = xmmword_100423D60;
  __int128 v669 = xmmword_100423D70;
  __int128 v670 = v58;
  unint64_t v671 = 0xC059000000000000LL;
  __int128 v672 = xmmword_100423D80;
  int32x2_t v673 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v674 = xmmword_100423CC0;
  uint64_t v676 = 0LL;
  uint64_t v677 = 0LL;
  uint64_t v675 = 0x3FD999999999999ALL;
  __int128 v678 = xmmword_100423CD0;
  int v679 = 5;
  uint64_t v680 = 0x4000000000000000LL;
  int v681 = 10;
  uint64_t v682 = 0x4034000000000000LL;
  int v683 = 3;
  __int128 v684 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1730, &v685, (uint64_t)v656);
  sub_100202A04((uint64_t)v746, v1728, 3LL);
  int v1731 = 7;
  sub_100202C84(v1732, (uint64_t)v746);
  int v654 = 0;
  v625[0] = 0x300000008LL;
  v625[1] = 0xC050C00000000000LL;
  v1710[0] = -67.0;
  sub_10015ED64((uint64_t)v626, v1710, 1LL);
  __int128 v627 = xmmword_100423D50;
  uint64_t v628 = 0x4024000000000000LL;
  int v629 = 45;
  LOBYTE(v630) = 0;
  char v632 = 0;
  uint64_t v633 = 0LL;
  char v634 = 0;
  int v635 = 1;
  char v636 = 1;
  __int128 v637 = xmmword_100423D60;
  __int128 v638 = xmmword_100423D70;
  __int128 v639 = v58;
  unint64_t v640 = 0xC059000000000000LL;
  __int128 v641 = xmmword_100423D80;
  int32x2_t v642 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v643 = xmmword_100423CC0;
  uint64_t v645 = 0LL;
  uint64_t v646 = 0LL;
  uint64_t v644 = 0x3FD999999999999ALL;
  __int128 v647 = xmmword_100423CD0;
  int v648 = 5;
  uint64_t v649 = 0x4000000000000000LL;
  int v650 = 10;
  uint64_t v651 = 0x4034000000000000LL;
  int v652 = 3;
  __int128 v653 = xmmword_100423D90;
  sub_100201644((uint64_t)v1726, &v654, (uint64_t)v625);
  int v624 = 18;
  v595[0] = 0x200000003LL;
  v595[1] = 0xC051000000000000LL;
  v1710[0] = -68.0;
  sub_10015ED64((uint64_t)v596, v1710, 1LL);
  __int128 v597 = xmmword_1004287C0;
  uint64_t v598 = 0x4000000000000000LL;
  int v599 = 20;
  LOBYTE(v600) = 0;
  char v602 = 0;
  uint64_t v603 = 0LL;
  char v604 = 0;
  int v605 = 1;
  char v606 = 1;
  __int128 v607 = xmmword_100423D60;
  __int128 v608 = xmmword_100423D70;
  __int128 v609 = v58;
  unint64_t v610 = 0xC059000000000000LL;
  __int128 v611 = xmmword_100423D80;
  int32x2_t v612 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v613 = xmmword_100423CC0;
  uint64_t v615 = 0LL;
  uint64_t v616 = 0LL;
  uint64_t v614 = 0x3FD999999999999ALL;
  __int128 v617 = xmmword_100423CD0;
  int v618 = 5;
  uint64_t v619 = 0x4000000000000000LL;
  int v620 = 10;
  uint64_t v621 = 0x4034000000000000LL;
  int v622 = 3;
  __int128 v623 = xmmword_100423D90;
  sub_100201644((uint64_t)v1727, &v624, (uint64_t)v595);
  sub_100202A04((uint64_t)v655, v1726, 2LL);
  int v1733 = 6;
  sub_100202C84(v1734, (uint64_t)v655);
  sub_100202D5C((uint64_t)v747, &v1731, 2LL);
  int v1850 = 5;
  sub_100202F28(v1851, (uint64_t)v747);
  int v592 = 13;
  sub_10020156C((uint64_t)v1710, &v592, (uint64_t)&qword_1007FA9C0);
  int v591 = 7;
  sub_10020156C((uint64_t)&v1711, &v591, (uint64_t)&qword_1007FA880);
  int v590 = 11;
  sub_10020156C((uint64_t)&v1712, &v590, (uint64_t)&qword_1007FA9C0);
  int v589 = 14;
  v560[0] = 0x300000010LL;
  v560[1] = 0xC043800000000000LL;
  v1702[0] = -39.0;
  sub_10015ED64((uint64_t)v561, v1702, 1LL);
  __int128 v562 = xmmword_100423D50;
  uint64_t v563 = 0x4024000000000000LL;
  int v564 = 45;
  LOBYTE(v565) = 0;
  char v567 = 0;
  uint64_t v568 = 0LL;
  char v569 = 0;
  int v570 = 1;
  char v571 = 1;
  __int128 v572 = xmmword_100423D60;
  __int128 v573 = xmmword_100423D70;
  __int128 v574 = v58;
  unint64_t v575 = 0xC059000000000000LL;
  __int128 v576 = xmmword_100423D80;
  int32x2_t v577 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v578 = xmmword_100423CC0;
  uint64_t v580 = 0LL;
  uint64_t v581 = 0LL;
  uint64_t v579 = 0x3FD999999999999ALL;
  __int128 v582 = xmmword_100423CD0;
  int v583 = 5;
  uint64_t v584 = 0x4000000000000000LL;
  int v585 = 10;
  uint64_t v586 = 0x4034000000000000LL;
  int v587 = 3;
  __int128 v588 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1713, &v589, (uint64_t)v560);
  int v559 = 6;
  v530[0] = 0x300000008LL;
  v530[1] = 0xC044000000000000LL;
  v1702[0] = -40.0;
  sub_10015ED64((uint64_t)v531, v1702, 1LL);
  __int128 v532 = xmmword_100423D50;
  uint64_t v533 = 0x4024000000000000LL;
  int v534 = 45;
  LOBYTE(v535) = 0;
  char v537 = 0;
  uint64_t v538 = 0LL;
  char v539 = 0;
  int v540 = 1;
  char v541 = 1;
  __int128 v542 = xmmword_100423D60;
  __int128 v543 = xmmword_100423D70;
  __int128 v544 = v58;
  unint64_t v545 = 0xC059000000000000LL;
  __int128 v546 = xmmword_100423D80;
  int32x2_t v547 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v548 = xmmword_100423CC0;
  uint64_t v550 = 0LL;
  uint64_t v551 = 0LL;
  uint64_t v549 = 0x3FD999999999999ALL;
  __int128 v552 = xmmword_100423CD0;
  int v553 = 5;
  uint64_t v554 = 0x4000000000000000LL;
  int v555 = 10;
  uint64_t v556 = 0x4034000000000000LL;
  int v557 = 3;
  __int128 v558 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1714, &v559, (uint64_t)v530);
  int v529 = 15;
  v500[0] = 0x300000010LL;
  v500[1] = 0xC044000000000000LL;
  v1702[0] = -40.0;
  sub_10015ED64((uint64_t)v501, v1702, 1LL);
  __int128 v502 = xmmword_100423D50;
  uint64_t v503 = 0x4024000000000000LL;
  int v504 = 45;
  LOBYTE(v505) = 0;
  char v507 = 0;
  uint64_t v508 = 0LL;
  char v509 = 0;
  int v510 = 1;
  char v511 = 1;
  __int128 v512 = xmmword_100423D60;
  __int128 v513 = xmmword_100423D70;
  __int128 v514 = v58;
  unint64_t v515 = 0xC059000000000000LL;
  __int128 v516 = xmmword_100423D80;
  int32x2_t v517 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v518 = xmmword_100423CC0;
  uint64_t v520 = 0LL;
  uint64_t v521 = 0LL;
  uint64_t v519 = 0x3FD999999999999ALL;
  __int128 v522 = xmmword_100423CD0;
  int v523 = 5;
  uint64_t v524 = 0x4000000000000000LL;
  int v525 = 10;
  uint64_t v526 = 0x4034000000000000LL;
  int v527 = 3;
  __int128 v528 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1715, &v529, (uint64_t)v500);
  int v499 = 16;
  v470[0] = 0x300000008LL;
  v470[1] = 0xC044000000000000LL;
  v1702[0] = -40.0;
  sub_10015ED64((uint64_t)v471, v1702, 1LL);
  __int128 v472 = xmmword_100423D50;
  uint64_t v473 = 0x4024000000000000LL;
  int v474 = 45;
  LOBYTE(v475) = 0;
  char v477 = 0;
  uint64_t v478 = 0LL;
  char v479 = 0;
  int v480 = 1;
  char v481 = 1;
  __int128 v482 = xmmword_100423D60;
  __int128 v483 = xmmword_100423D70;
  __int128 v484 = v58;
  unint64_t v485 = 0xC059000000000000LL;
  __int128 v486 = xmmword_100423D80;
  int32x2_t v487 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v488 = xmmword_100423CC0;
  uint64_t v490 = 0LL;
  uint64_t v491 = 0LL;
  uint64_t v489 = 0x3FD999999999999ALL;
  __int128 v492 = xmmword_100423CD0;
  int v493 = 5;
  uint64_t v494 = 0x4000000000000000LL;
  int v495 = 10;
  uint64_t v496 = 0x4034000000000000LL;
  int v497 = 3;
  __int128 v498 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1716, &v499, (uint64_t)v470);
  int v469 = 17;
  v440[0] = 0x300000010LL;
  v440[1] = 0xC044000000000000LL;
  v1702[0] = -40.0;
  sub_10015ED64((uint64_t)v441, v1702, 1LL);
  __int128 v442 = xmmword_100423D50;
  uint64_t v443 = 0x4024000000000000LL;
  int v444 = 45;
  LOBYTE(v445) = 0;
  char v447 = 0;
  uint64_t v448 = 0LL;
  char v449 = 0;
  int v450 = 1;
  char v451 = 1;
  __int128 v452 = xmmword_100423D60;
  __int128 v453 = xmmword_100423D70;
  __int128 v454 = v58;
  unint64_t v455 = 0xC059000000000000LL;
  __int128 v456 = xmmword_100423D80;
  int32x2_t v457 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v458 = xmmword_100423CC0;
  uint64_t v460 = 0LL;
  uint64_t v461 = 0LL;
  uint64_t v459 = 0x3FD999999999999ALL;
  __int128 v462 = xmmword_100423CD0;
  int v463 = 5;
  uint64_t v464 = 0x4000000000000000LL;
  int v465 = 10;
  uint64_t v466 = 0x4034000000000000LL;
  int v467 = 3;
  __int128 v468 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1717, &v469, (uint64_t)v440);
  int v439 = 18;
  v410[0] = 0x200000003LL;
  v410[1] = 0xC04B800000000000LL;
  v1702[0] = -55.0;
  sub_10015ED64((uint64_t)v411, v1702, 1LL);
  __int128 v412 = xmmword_1004287C0;
  uint64_t v413 = 0x4000000000000000LL;
  int v414 = 20;
  LOBYTE(v415) = 0;
  char v417 = 0;
  uint64_t v418 = 0LL;
  char v419 = 0;
  int v420 = 1;
  char v421 = 1;
  __int128 v422 = xmmword_100423D60;
  __int128 v423 = xmmword_100423D70;
  __int128 v424 = v58;
  unint64_t v425 = 0xC059000000000000LL;
  __int128 v426 = xmmword_100423D80;
  int32x2_t v427 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v428 = xmmword_100423CC0;
  uint64_t v430 = 0LL;
  uint64_t v431 = 0LL;
  uint64_t v429 = 0x3FD999999999999ALL;
  __int128 v432 = xmmword_100423CD0;
  int v433 = 5;
  uint64_t v434 = 0x4000000000000000LL;
  int v435 = 10;
  uint64_t v436 = 0x4034000000000000LL;
  int v437 = 3;
  __int128 v438 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1718, &v439, (uint64_t)v410);
  int v409 = 0;
  sub_10020156C((uint64_t)v1719, &v409, (uint64_t)&qword_1007FA9C0);
  sub_100202A04((uint64_t)v593, (int *)v1710, 10LL);
  int v1720 = 7;
  sub_100202C84(v1721, (uint64_t)v593);
  int v407 = 13;
  sub_10020156C((uint64_t)v1702, &v407, (uint64_t)&qword_1007FA9C0);
  int v406 = 7;
  v377[0] = 0x300000008LL;
  v377[1] = 0xC046800000000000LL;
  v1689[0] = -45.0;
  sub_10015ED64((uint64_t)v378, v1689, 1LL);
  __int128 v379 = xmmword_100423D50;
  uint64_t v380 = 0x4024000000000000LL;
  int v381 = 45;
  LOBYTE(v382) = 0;
  char v384 = 0;
  uint64_t v385 = 0LL;
  char v386 = 0;
  int v387 = 1;
  char v388 = 1;
  __int128 v389 = xmmword_100423D60;
  __int128 v390 = xmmword_100423D70;
  __int128 v391 = v58;
  unint64_t v392 = 0xC059000000000000LL;
  __int128 v393 = xmmword_100423D80;
  int32x2_t v394 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v395 = xmmword_100423CC0;
  uint64_t v397 = 0LL;
  uint64_t v398 = 0LL;
  uint64_t v396 = 0x3FD999999999999ALL;
  __int128 v399 = xmmword_100423CD0;
  int v400 = 5;
  uint64_t v401 = 0x4000000000000000LL;
  int v402 = 10;
  uint64_t v403 = 0x4034000000000000LL;
  int v404 = 3;
  __int128 v405 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1703, &v406, (uint64_t)v377);
  int v376 = 11;
  sub_10020156C((uint64_t)&v1704, &v376, (uint64_t)&qword_1007FA9C0);
  int v375 = 14;
  v346[0] = 0x300000008LL;
  v346[1] = 0xC046000000000000LL;
  v1689[0] = -44.0;
  sub_10015ED64((uint64_t)v347, v1689, 1LL);
  __int128 v348 = xmmword_100423D50;
  uint64_t v349 = 0x4024000000000000LL;
  int v350 = 45;
  LOBYTE(v351) = 0;
  char v353 = 0;
  uint64_t v354 = 0LL;
  char v355 = 0;
  int v356 = 1;
  char v357 = 1;
  __int128 v358 = xmmword_100423D60;
  __int128 v359 = xmmword_100423D70;
  __int128 v360 = v58;
  unint64_t v361 = 0xC059000000000000LL;
  __int128 v362 = xmmword_100423D80;
  int32x2_t v363 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v364 = xmmword_100423CC0;
  uint64_t v366 = 0LL;
  uint64_t v367 = 0LL;
  uint64_t v365 = 0x3FD999999999999ALL;
  __int128 v368 = xmmword_100423CD0;
  int v369 = 5;
  uint64_t v370 = 0x4000000000000000LL;
  int v371 = 10;
  uint64_t v372 = 0x4034000000000000LL;
  int v373 = 3;
  __int128 v374 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1705, &v375, (uint64_t)v346);
  int v345 = 6;
  v316[0] = 0x300000008LL;
  v316[1] = 0xC044000000000000LL;
  v1689[0] = -40.0;
  sub_10015ED64((uint64_t)v317, v1689, 1LL);
  __int128 v318 = xmmword_100423D50;
  uint64_t v319 = 0x4024000000000000LL;
  int v320 = 45;
  LOBYTE(v321) = 0;
  char v323 = 0;
  uint64_t v324 = 0LL;
  char v325 = 0;
  int v326 = 1;
  char v327 = 1;
  __int128 v328 = xmmword_100423D60;
  __int128 v329 = xmmword_100423D70;
  __int128 v330 = v58;
  unint64_t v331 = 0xC059000000000000LL;
  __int128 v332 = xmmword_100423D80;
  int32x2_t v333 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v334 = xmmword_100423CC0;
  uint64_t v336 = 0LL;
  uint64_t v337 = 0LL;
  uint64_t v335 = 0x3FD999999999999ALL;
  __int128 v338 = xmmword_100423CD0;
  int v339 = 5;
  uint64_t v340 = 0x4000000000000000LL;
  int v341 = 10;
  uint64_t v342 = 0x4034000000000000LL;
  int v343 = 3;
  __int128 v344 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1706, &v345, (uint64_t)v316);
  int v315 = 17;
  v286[0] = 0x300000008LL;
  v286[1] = 0xC042800000000000LL;
  v1689[0] = -37.0;
  sub_10015ED64((uint64_t)v287, v1689, 1LL);
  __int128 v288 = xmmword_100423D50;
  uint64_t v289 = 0x4024000000000000LL;
  int v290 = 45;
  LOBYTE(v291) = 0;
  char v293 = 0;
  uint64_t v294 = 0LL;
  char v295 = 0;
  int v296 = 1;
  char v297 = 1;
  __int128 v298 = xmmword_100423D60;
  __int128 v299 = xmmword_100423D70;
  __int128 v300 = v58;
  unint64_t v301 = 0xC059000000000000LL;
  __int128 v302 = xmmword_100423D80;
  int32x2_t v303 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v304 = xmmword_100423CC0;
  uint64_t v306 = 0LL;
  uint64_t v307 = 0LL;
  uint64_t v305 = 0x3FD999999999999ALL;
  __int128 v308 = xmmword_100423CD0;
  int v309 = 5;
  uint64_t v310 = 0x4000000000000000LL;
  int v311 = 10;
  uint64_t v312 = 0x4034000000000000LL;
  int v313 = 3;
  __int128 v314 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1707, &v315, (uint64_t)v286);
  int v285 = 18;
  v256[0] = 0x200000003LL;
  v256[1] = 0xC04B000000000000LL;
  v1689[0] = -54.0;
  sub_10015ED64((uint64_t)v257, v1689, 1LL);
  __int128 v258 = xmmword_1004287C0;
  uint64_t v259 = 0x4000000000000000LL;
  int v260 = 20;
  LOBYTE(v261) = 0;
  char v263 = 0;
  uint64_t v264 = 0LL;
  char v265 = 0;
  int v266 = 1;
  char v267 = 1;
  __int128 v268 = xmmword_100423D60;
  __int128 v269 = xmmword_100423D70;
  __int128 v270 = v58;
  unint64_t v271 = 0xC059000000000000LL;
  __int128 v272 = xmmword_100423D80;
  int32x2_t v273 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v274 = xmmword_100423CC0;
  uint64_t v276 = 0LL;
  uint64_t v277 = 0LL;
  uint64_t v275 = 0x3FD999999999999ALL;
  __int128 v278 = xmmword_100423CD0;
  int v279 = 5;
  uint64_t v280 = 0x4000000000000000LL;
  int v281 = 10;
  uint64_t v282 = 0x4034000000000000LL;
  int v283 = 3;
  __int128 v284 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1708, &v285, (uint64_t)v256);
  int v255 = 0;
  sub_10020156C((uint64_t)v1709, &v255, (uint64_t)&qword_1007FA9C0);
  sub_100202A04((uint64_t)v408, (int *)v1702, 8LL);
  int v1722 = 6;
  sub_100202C84(v1723, (uint64_t)v408);
  int v252 = 0;
  sub_10020156C((uint64_t)v1698, &v252, (uint64_t)&qword_1007FA9C0);
  sub_100202A04((uint64_t)v253, v1698, 1LL);
  int v1724 = 0;
  sub_100202C84(v1725, (uint64_t)v253);
  sub_100202D5C((uint64_t)v594, &v1720, 3LL);
  int v1852 = 2;
  sub_100202F28(v1853, (uint64_t)v594);
  int v247 = 16;
  v218[0] = 0x300000008LL;
  v218[1] = 0xC03D000000000000LL;
  v1687[0] = -29.0;
  sub_10015ED64((uint64_t)v219, v1687, 1LL);
  __int128 v220 = xmmword_100423D50;
  uint64_t v221 = 0x4024000000000000LL;
  int v222 = 45;
  LOBYTE(v223) = 0;
  char v225 = 0;
  uint64_t v226 = 0LL;
  char v227 = 0;
  int v228 = 1;
  char v229 = 1;
  __int128 v230 = xmmword_100423D60;
  __int128 v231 = xmmword_100423D70;
  __int128 v232 = v58;
  unint64_t v233 = 0xC059000000000000LL;
  __int128 v234 = xmmword_100423D80;
  int32x2_t v235 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v236 = xmmword_100423CC0;
  uint64_t v238 = 0LL;
  uint64_t v239 = 0LL;
  uint64_t v237 = 0x3FD999999999999ALL;
  __int128 v240 = xmmword_100423CD0;
  int v241 = 5;
  uint64_t v242 = 0x4000000000000000LL;
  int v243 = 10;
  uint64_t v244 = 0x4034000000000000LL;
  int v245 = 3;
  __int128 v246 = xmmword_100423D90;
  sub_100201644((uint64_t)v1689, &v247, (uint64_t)v218);
  int v217 = 14;
  v188[0] = 0x300000008LL;
  v188[1] = 0xC03D000000000000LL;
  v1687[0] = -29.0;
  sub_10015ED64((uint64_t)v189, v1687, 1LL);
  __int128 v190 = xmmword_100423D50;
  uint64_t v191 = 0x4024000000000000LL;
  int v192 = 45;
  LOBYTE(v193) = 0;
  char v195 = 0;
  uint64_t v196 = 0LL;
  char v197 = 0;
  int v198 = 1;
  char v199 = 1;
  __int128 v200 = xmmword_100423D60;
  __int128 v201 = xmmword_100423D70;
  __int128 v202 = v58;
  unint64_t v203 = 0xC059000000000000LL;
  __int128 v204 = xmmword_100423D80;
  int32x2_t v205 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v206 = xmmword_100423CC0;
  uint64_t v208 = 0LL;
  uint64_t v209 = 0LL;
  uint64_t v207 = 0x3FD999999999999ALL;
  __int128 v210 = xmmword_100423CD0;
  int v211 = 5;
  uint64_t v212 = 0x4000000000000000LL;
  int v213 = 10;
  uint64_t v214 = 0x4034000000000000LL;
  int v215 = 3;
  __int128 v216 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1690, &v217, (uint64_t)v188);
  int v187 = 0;
  v158[0] = 0x300000008LL;
  v158[1] = 0xC03D000000000000LL;
  v1687[0] = -29.0;
  sub_10015ED64((uint64_t)v159, v1687, 1LL);
  __int128 v160 = xmmword_100423D50;
  uint64_t v161 = 0x4024000000000000LL;
  int v162 = 45;
  LOBYTE(v163) = 0;
  char v165 = 0;
  uint64_t v166 = 0LL;
  char v167 = 0;
  int v168 = 1;
  char v169 = 1;
  __int128 v170 = xmmword_100423D60;
  __int128 v171 = xmmword_100423D70;
  __int128 v172 = v58;
  unint64_t v173 = 0xC059000000000000LL;
  __int128 v174 = xmmword_100423D80;
  int32x2_t v175 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v176 = xmmword_100423CC0;
  uint64_t v178 = 0LL;
  uint64_t v179 = 0LL;
  uint64_t v177 = 0x3FD999999999999ALL;
  __int128 v180 = xmmword_100423CD0;
  int v181 = 5;
  uint64_t v182 = 0x4000000000000000LL;
  int v183 = 10;
  uint64_t v184 = 0x4034000000000000LL;
  int v185 = 3;
  __int128 v186 = xmmword_100423D90;
  sub_100201644((uint64_t)&v1691, &v187, (uint64_t)v158);
  sub_100202A04((uint64_t)v248, (int *)v1689, 3LL);
  int v1692 = 7;
  sub_100202C84(v1693, (uint64_t)v248);
  int v155 = 14;
  v126[0] = 0x300000008LL;
  v126[1] = 0xC03D000000000000LL;
  v1683[0] = -29.0;
  sub_10015ED64((uint64_t)v127, v1683, 1LL);
  __int128 v128 = xmmword_100423D50;
  uint64_t v129 = 0x4024000000000000LL;
  int v130 = 45;
  LOBYTE(v131) = 0;
  char v133 = 0;
  uint64_t v134 = 0LL;
  char v135 = 0;
  int v136 = 1;
  char v137 = 1;
  __int128 v138 = xmmword_100423D60;
  __int128 v139 = xmmword_100423D70;
  __int128 v140 = v58;
  unint64_t v141 = 0xC059000000000000LL;
  __int128 v142 = xmmword_100423D80;
  int32x2_t v143 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v144 = xmmword_100423CC0;
  uint64_t v146 = 0LL;
  uint64_t v147 = 0LL;
  uint64_t v145 = 0x3FD999999999999ALL;
  __int128 v148 = xmmword_100423CD0;
  int v149 = 5;
  uint64_t v150 = 0x4000000000000000LL;
  int v151 = 10;
  uint64_t v152 = 0x4034000000000000LL;
  int v153 = 3;
  __int128 v154 = xmmword_100423D90;
  sub_100201644((uint64_t)v1687, &v155, (uint64_t)v126);
  int v125 = 0;
  v96[0] = 0x300000008LL;
  v96[1] = 0xC03D000000000000LL;
  v1683[0] = -29.0;
  sub_10015ED64((uint64_t)v97, v1683, 1LL);
  __int128 v98 = xmmword_100423D50;
  uint64_t v99 = 0x4024000000000000LL;
  int v100 = 45;
  LOBYTE(v101) = 0;
  char v103 = 0;
  uint64_t v104 = 0LL;
  char v105 = 0;
  int v106 = 1;
  char v107 = 1;
  __int128 v108 = xmmword_100423D60;
  __int128 v109 = xmmword_100423D70;
  __int128 v110 = v58;
  unint64_t v111 = 0xC059000000000000LL;
  __int128 v112 = xmmword_100423D80;
  int32x2_t v113 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v114 = xmmword_100423CC0;
  uint64_t v116 = 0LL;
  uint64_t v117 = 0LL;
  uint64_t v115 = 0x3FD999999999999ALL;
  __int128 v118 = xmmword_100423CD0;
  int v119 = 5;
  uint64_t v120 = 0x4000000000000000LL;
  int v121 = 10;
  uint64_t v122 = 0x4034000000000000LL;
  int v123 = 3;
  __int128 v124 = xmmword_100423D90;
  sub_100201644((uint64_t)v1688, &v125, (uint64_t)v96);
  sub_100202A04((uint64_t)v156, (int *)v1687, 2LL);
  int v1694 = 6;
  sub_100202C84(v1695, (uint64_t)v156);
  int v93 = 0;
  v64[0] = 0x300000008LL;
  v64[1] = 0xC03D000000000000LL;
  v1677[0] = -29.0;
  sub_10015ED64((uint64_t)v65, v1677, 1LL);
  __int128 v66 = xmmword_100423D50;
  uint64_t v67 = 0x4024000000000000LL;
  int v68 = 45;
  LOBYTE(v69) = 0;
  char v71 = 0;
  uint64_t v72 = 0LL;
  char v73 = 0;
  int v74 = 1;
  char v75 = 1;
  __int128 v76 = xmmword_100423D60;
  __int128 v77 = xmmword_100423D70;
  __int128 v78 = v58;
  unint64_t v79 = 0xC059000000000000LL;
  __int128 v80 = xmmword_100423D80;
  int32x2_t v81 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v82 = xmmword_100423CC0;
  uint64_t v84 = 0LL;
  uint64_t v85 = 0LL;
  uint64_t v83 = 0x3FD999999999999ALL;
  __int128 v86 = xmmword_100423CD0;
  int v87 = 5;
  uint64_t v88 = 0x4000000000000000LL;
  int v89 = 10;
  uint64_t v90 = 0x4034000000000000LL;
  int v91 = 3;
  __int128 v92 = xmmword_100423D90;
  sub_100201644((uint64_t)v1683, &v93, (uint64_t)v64);
  sub_100202A04((uint64_t)v94, (int *)v1683, 1LL);
  int v1696 = 0;
  sub_100202C84(v1697, (uint64_t)v94);
  sub_100202D5C((uint64_t)v250, &v1692, 3LL);
  int v1854 = 7;
  sub_100202F28(v1855, (uint64_t)v250);
  int v59 = 0;
  sub_10020156C((uint64_t)v1677, &v59, (uint64_t)&xmmword_1007FA740);
  sub_100202A04((uint64_t)v60, (int *)v1677, 1LL);
  int v1681 = 0;
  sub_100202C84(v1682, (uint64_t)v60);
  sub_100202D5C((uint64_t)v62, &v1681, 1LL);
  int v1856 = 1;
  sub_100202F28(v1857, (uint64_t)v62);
  sub_100203000((uint64_t)&unk_1008007B8, &v1846, 6LL);
  for (uint64_t i = 0LL; i != -24; i -= 4LL)
    sub_100202934((uint64_t)&v1857[i], (void *)v1857[i + 1]);
  sub_100202934((uint64_t)v62, v63);
  sub_100202980((uint64_t)v1682, (void *)v1682[1]);
  sub_100202980((uint64_t)v60, v61);
  if (v1680 && v1679 < 0) {
    operator delete(v1678[7]);
  }
  sub_100034A98((uint64_t)v1678, v1678[1]);
  sub_100202934((uint64_t)v250, v251);
  for (uint64_t j = 0LL; j != -12; j -= 4LL)
    sub_100202980((uint64_t)&v1697[j], (void *)v1697[j + 1]);
  sub_100202980((uint64_t)v94, v95);
  if (v1686[0] && v1685 < 0) {
    operator delete(v1684[7]);
  }
  sub_100034A98((uint64_t)v1684, v1684[1]);
  if (v71 && v70 < 0) {
    operator delete(v69);
  }
  sub_100034A98((uint64_t)v65, v65[1]);
  sub_100202980((uint64_t)v156, v157);
  uint64_t v7 = 82LL;
  do
  {
    int v8 = &v1687[v7];
    sub_100034A98((uint64_t)(v8 - 38), *((void **)v8 - 37));
    v7 -= 41LL;
  }

  while (v7 * 8);
  if (v103 && v102 < 0) {
    operator delete(v101);
  }
  sub_100034A98((uint64_t)v97, v97[1]);
  if (v133 && v132 < 0) {
    operator delete(v131);
  }
  sub_100034A98((uint64_t)v127, v127[1]);
  sub_100202980((uint64_t)v248, v249);
  uint64_t v9 = 123LL;
  do
  {
    int v10 = &v1689[v9];
    sub_100034A98((uint64_t)(v10 - 38), *((void **)v10 - 37));
    v9 -= 41LL;
  }

  while (v9 * 8);
  if (v165 && v164 < 0) {
    operator delete(v163);
  }
  sub_100034A98((uint64_t)v159, v159[1]);
  if (v195 && v194 < 0) {
    operator delete(v193);
  }
  sub_100034A98((uint64_t)v189, v189[1]);
  if (v225 && v224 < 0) {
    operator delete(v223);
  }
  sub_100034A98((uint64_t)v219, v219[1]);
  sub_100202934((uint64_t)v594, v594[1]);
  for (uint64_t k = 0LL; k != -12; k -= 4LL)
    sub_100202980((uint64_t)&v1725[k], (void *)v1725[k + 1]);
  sub_100202980((uint64_t)v253, v254);
  if (v1701[0] && v1700 < 0) {
    operator delete(v1699[7]);
  }
  sub_100034A98((uint64_t)v1699, v1699[1]);
  sub_100202980((uint64_t)v408, v408[1]);
  uint64_t v12 = 328LL;
  do
  {
    __int128 v13 = &v1702[v12];
    sub_100034A98((uint64_t)(v13 - 38), *((void **)v13 - 37));
    v12 -= 41LL;
  }

  while (v12 * 8);
  if (v263 && v262 < 0) {
    operator delete(v261);
  }
  sub_100034A98((uint64_t)v257, v257[1]);
  if (v293 && v292 < 0) {
    operator delete(v291);
  }
  sub_100034A98((uint64_t)v287, v287[1]);
  if (v323 && v322 < 0) {
    operator delete(v321);
  }
  sub_100034A98((uint64_t)v317, v317[1]);
  if (v353 && v352 < 0) {
    operator delete(v351);
  }
  sub_100034A98((uint64_t)v347, v347[1]);
  if (v384 && v383 < 0) {
    operator delete(v382);
  }
  sub_100034A98((uint64_t)v378, v378[1]);
  sub_100202980((uint64_t)v593, v593[1]);
  uint64_t v14 = 410LL;
  do
  {
    __int128 v15 = &v1710[v14];
    sub_100034A98((uint64_t)(v15 - 38), *((void **)v15 - 37));
    v14 -= 41LL;
  }

  while (v14 * 8);
  if (v417 && v416 < 0) {
    operator delete(v415);
  }
  sub_100034A98((uint64_t)v411, v411[1]);
  if (v447 && v446 < 0) {
    operator delete(v445);
  }
  sub_100034A98((uint64_t)v441, v441[1]);
  if (v477 && v476 < 0) {
    operator delete(v475);
  }
  sub_100034A98((uint64_t)v471, v471[1]);
  if (v507 && v506 < 0) {
    operator delete(v505);
  }
  sub_100034A98((uint64_t)v501, v501[1]);
  if (v537 && v536 < 0) {
    operator delete(v535);
  }
  sub_100034A98((uint64_t)v531, v531[1]);
  if (v567 && v566 < 0) {
    operator delete(v565);
  }
  sub_100034A98((uint64_t)v561, v561[1]);
  sub_100202934((uint64_t)v747, v747[1]);
  for (uint64_t m = 0LL; m != -8; m -= 4LL)
    sub_100202980((uint64_t)&v1734[m], (void *)v1734[m + 1]);
  sub_100202980((uint64_t)v655, v655[1]);
  uint64_t v17 = 164LL;
  do
  {
    unsigned int v18 = &v1726[v17];
    sub_100034A98((uint64_t)(v18 - 76), *((void **)v18 - 37));
    v17 -= 82LL;
  }

  while (v17 * 4);
  if (v602 && v601 < 0) {
    operator delete(v600);
  }
  sub_100034A98((uint64_t)v596, v596[1]);
  if (v632 && v631 < 0) {
    operator delete(v630);
  }
  sub_100034A98((uint64_t)v626, v626[1]);
  sub_100202980((uint64_t)v746, v746[1]);
  uint64_t v19 = 246LL;
  do
  {
    uint64_t v20 = &v1728[v19];
    sub_100034A98((uint64_t)(v20 - 76), *((void **)v20 - 37));
    v19 -= 82LL;
  }

  while (v19 * 4);
  if (v663 && v662 < 0) {
    operator delete(v661);
  }
  sub_100034A98((uint64_t)v657, v657[1]);
  if (v693 && v692 < 0) {
    operator delete(v691);
  }
  sub_100034A98((uint64_t)v687, v687[1]);
  if (v723 && v722 < 0) {
    operator delete(v721);
  }
  sub_100034A98((uint64_t)v717, v717[1]);
  sub_100202934((uint64_t)v1247, v1247[1]);
  uint64_t v21 = 288LL;
  do
  {
    sub_100202980((uint64_t)&v1763[v21 + 304], *(void **)&v1763[v21 + 312]);
    v21 -= 32LL;
  }

  while (v21);
  sub_100202980((uint64_t)v749, v749[1]);
  if (v1738[0] && v1737 < 0) {
    operator delete(v1736[7]);
  }
  sub_100034A98((uint64_t)v1736, v1736[1]);
  sub_100202980((uint64_t)v840, v840[1]);
  uint64_t v22 = 246LL;
  do
  {
    int v23 = &v1739[v22];
    sub_100034A98((uint64_t)(v23 - 76), *((void **)v23 - 37));
    v22 -= 82LL;
  }

  while (v22 * 4);
  if (v757 && v756 < 0) {
    operator delete(v755);
  }
  sub_100034A98((uint64_t)v751, v751[1]);
  if (v787 && v786 < 0) {
    operator delete(v785);
  }
  sub_100034A98((uint64_t)v781, v781[1]);
  if (v817 && v816 < 0) {
    operator delete(v815);
  }
  sub_100034A98((uint64_t)v811, v811[1]);
  sub_100202980((uint64_t)v1083, v1083[1]);
  uint64_t v24 = 410LL;
  do
  {
    int v25 = &v1742[v24];
    sub_100034A98((uint64_t)(v25 - 38), *((void **)v25 - 37));
    v24 -= 41LL;
  }

  while (v24 * 8);
  if (v849 && v848 < 0) {
    operator delete(v847);
  }
  sub_100034A98((uint64_t)v843, v843[1]);
  if (v879 && v878 < 0) {
    operator delete(v877);
  }
  sub_100034A98((uint64_t)v873, v873[1]);
  if (v909 && v908 < 0) {
    operator delete(v907);
  }
  sub_100034A98((uint64_t)v903, v903[1]);
  if (v940 && v939 < 0) {
    operator delete(v938);
  }
  sub_100034A98((uint64_t)v934, v934[1]);
  if (v970 && v969 < 0) {
    operator delete(v968);
  }
  sub_100034A98((uint64_t)v964, v964[1]);
  if (v1000 && v999 < 0) {
    operator delete(v998);
  }
  sub_100034A98((uint64_t)v994, v994[1]);
  if (v1030 && v1029 < 0) {
    operator delete(v1028);
  }
  sub_100034A98((uint64_t)v1024, v1024[1]);
  if (v1060 && v1059 < 0) {
    operator delete(v1058);
  }
  sub_100034A98((uint64_t)v1054, v1054[1]);
  sub_100202980((uint64_t)v1086, v1086[1]);
  uint64_t v26 = 164LL;
  do
  {
    uint64_t v27 = &v1752[v26];
    sub_100034A98((uint64_t)(v27 - 76), *((void **)v27 - 37));
    v26 -= 82LL;
  }

  while (v26 * 4);
  sub_100202980((uint64_t)v1118, v1118[1]);
  uint64_t v28 = 164LL;
  do
  {
    int v29 = &v1754[v28];
    sub_100034A98((uint64_t)(v29 - 76), *((void **)v29 - 37));
    v28 -= 82LL;
  }

  while (v28 * 4);
  if (v1095 && v1094 < 0) {
    operator delete(v1093);
  }
  sub_100034A98((uint64_t)v1089, v1089[1]);
  sub_100202980((uint64_t)v1150, v1150[1]);
  uint64_t v30 = 164LL;
  do
  {
    int v31 = &v1756[v30];
    sub_100034A98((uint64_t)(v31 - 76), *((void **)v31 - 37));
    v30 -= 82LL;
  }

  while (v30 * 4);
  if (v1127 && v1126 < 0) {
    operator delete(v1125);
  }
  sub_100034A98((uint64_t)v1121, v1121[1]);
  sub_100202980((uint64_t)v1182, v1182[1]);
  uint64_t v32 = 164LL;
  do
  {
    int v33 = &v1758[v32];
    sub_100034A98((uint64_t)(v33 - 76), *((void **)v33 - 37));
    v32 -= 82LL;
  }

  while (v32 * 4);
  if (v1159 && v1158 < 0) {
    operator delete(v1157);
  }
  sub_100034A98((uint64_t)v1153, v1153[1]);
  sub_100202980((uint64_t)v1214, v1214[1]);
  uint64_t v34 = 164LL;
  do
  {
    uint64_t v35 = &v1760[v34];
    sub_100034A98((uint64_t)(v35 - 76), *((void **)v35 - 37));
    v34 -= 82LL;
  }

  while (v34 * 4);
  if (v1191 && v1190 < 0) {
    operator delete(v1189);
  }
  sub_100034A98((uint64_t)v1185, v1185[1]);
  sub_100202980((uint64_t)v1246, v1246[1]);
  uint64_t v36 = 164LL;
  do
  {
    __int128 v37 = &v1762[v36];
    sub_100034A98((uint64_t)(v37 - 76), *((void **)v37 - 37));
    v36 -= 82LL;
  }

  while (v36 * 4);
  if (v1223 && v1222 < 0) {
    operator delete(v1221);
  }
  sub_100034A98((uint64_t)v1217, v1217[1]);
  sub_100202934((uint64_t)v1676, v1676[1]);
  uint64_t v38 = 320LL;
  do
  {
    sub_100202980((uint64_t)&v1825[v38 + 304], *(void **)&v1825[v38 + 312]);
    v38 -= 32LL;
  }

  while (v38);
  sub_100202980((uint64_t)v1278, v1278[1]);
  if (v1785[0] && v1784 < 0) {
    operator delete(v1783[7]);
  }
  sub_100034A98((uint64_t)v1783, v1783[1]);
  if (v1255 && v1254 < 0) {
    operator delete(v1253);
  }
  sub_100034A98((uint64_t)v1249, v1249[1]);
  sub_100202980((uint64_t)v1344, v1344[1]);
  uint64_t v39 = 574LL;
  do
  {
    __int128 v40 = &v1786[v39];
    sub_100034A98((uint64_t)(v40 - 76), *((void **)v40 - 37));
    v39 -= 82LL;
  }

  while (v39 * 4);
  if (v1287 && v1286 < 0) {
    operator delete(v1285);
  }
  sub_100034A98((uint64_t)v1281, v1281[1]);
  if (v1317 && v1316 < 0) {
    operator delete(v1315);
  }
  sub_100034A98((uint64_t)v1311, v1311[1]);
  sub_100202980((uint64_t)v1529, v1529[1]);
  uint64_t v41 = 410LL;
  do
  {
    __int128 v42 = &v1793[v41];
    sub_100034A98((uint64_t)(v42 - 38), *((void **)v42 - 37));
    v41 -= 41LL;
  }

  while (v41 * 8);
  if (v1352 && v1351 < 0) {
    operator delete(v1350);
  }
  sub_100034A98((uint64_t)v1346, v1346[1]);
  if (v1382 && v1381 < 0) {
    operator delete(v1380);
  }
  sub_100034A98((uint64_t)v1376, v1376[1]);
  if (v1414 && v1413 < 0) {
    operator delete(v1412);
  }
  sub_100034A98((uint64_t)v1408, v1408[1]);
  if (v1445 && v1444 < 0) {
    operator delete(v1443);
  }
  sub_100034A98((uint64_t)v1439, v1439[1]);
  if (v1475 && v1474 < 0) {
    operator delete(v1473);
  }
  sub_100034A98((uint64_t)v1469, v1469[1]);
  if (v1505 && v1504 < 0) {
    operator delete(v1503);
  }
  sub_100034A98((uint64_t)v1499, v1499[1]);
  sub_100202980((uint64_t)v1533, v1533[1]);
  uint64_t v43 = 246LL;
  do
  {
    __int128 v44 = &v1803[v43];
    sub_100034A98((uint64_t)(v44 - 76), *((void **)v44 - 37));
    v43 -= 82LL;
  }

  while (v43 * 4);
  sub_100202980((uint64_t)v1537, v1537[1]);
  uint64_t v45 = 246LL;
  do
  {
    uint64_t v46 = &v1806[v45];
    sub_100034A98((uint64_t)(v46 - 76), *((void **)v46 - 37));
    v45 -= 82LL;
  }

  while (v45 * 4);
  sub_100202980((uint64_t)v1599, v1599[1]);
  uint64_t v47 = 246LL;
  do
  {
    uint64_t v48 = &v1809[v47];
    sub_100034A98((uint64_t)(v48 - 76), *((void **)v48 - 37));
    v47 -= 82LL;
  }

  while (v47 * 4);
  if (v1545 && v1544 < 0) {
    operator delete(v1543);
  }
  sub_100034A98((uint64_t)v1539, v1539[1]);
  if (v1576 && v1575 < 0) {
    operator delete(v1574);
  }
  sub_100034A98((uint64_t)v1570, v1570[1]);
  sub_100202980((uint64_t)v1662, v1662[1]);
  uint64_t v49 = 328LL;
  do
  {
    __int128 v50 = &v1812[v49];
    sub_100034A98((uint64_t)(v50 - 76), *((void **)v50 - 37));
    v49 -= 82LL;
  }

  while (v49 * 4);
  if (v1607 && v1606 < 0) {
    operator delete(v1605);
  }
  sub_100034A98((uint64_t)v1601, v1601[1]);
  if (v1638 && v1637 < 0) {
    operator delete(v1636);
  }
  sub_100034A98((uint64_t)v1632, v1632[1]);
  sub_100202980((uint64_t)v1667, v1667[1]);
  uint64_t v51 = 328LL;
  do
  {
    uint64_t v52 = &v1816[v51];
    sub_100034A98((uint64_t)(v52 - 76), *((void **)v52 - 37));
    v51 -= 82LL;
  }

  while (v51 * 4);
  sub_100202980((uint64_t)v1671, v1671[1]);
  uint64_t v53 = 246LL;
  do
  {
    uint64_t v54 = &v1820[v53];
    sub_100034A98((uint64_t)(v54 - 76), *((void **)v54 - 37));
    v53 -= 82LL;
  }

  while (v53 * 4);
  sub_100202980((uint64_t)v1675, v1675[1]);
  uint64_t v55 = 246LL;
  do
  {
    int v56 = &v1823[v55];
    sub_100034A98((uint64_t)(v56 - 76), *((void **)v56 - 37));
    v55 -= 82LL;
  }

  while (v55 * 4);
  return __cxa_atexit((void (*)(void *))sub_1001FDFA8, &unk_1008007B8, (void *)&_mh_execute_header);
}

void sub_10020B064(unint64_t a1)
{
  uint64_t v3 = 0LL;
  STACK[0x230] = a1;
  do
  {
    sub_100202934(v2 + v3 + 168, *(void **)(v2 + v3 + 176));
    v3 -= 32LL;
  }

  while (v3 != -192);
  LODWORD(STACK[0x220]) = 0;
  sub_100202934((uint64_t)&STACK[0x260], (void *)STACK[0x268]);
  sub_100202980(v1, (void *)STACK[0x4958]);
  sub_100202980((uint64_t)&STACK[0x248], (void *)STACK[0x250]);
  sub_1001FDF64((uint64_t)&STACK[0x4800]);
  sub_100202934((uint64_t)&STACK[0xA88], (void *)STACK[0xA90]);
  for (uint64_t i = 0LL; i != -96; i -= 32LL)
    sub_100202980((uint64_t)&STACK[0x5118] + i + 72, *(void **)((char *)&STACK[0x5118] + i + 80));
  LODWORD(STACK[0x210]) = 0;
  sub_100202980((uint64_t)&STACK[0x3C8], (void *)STACK[0x3D0]);
  sub_1001FDF64((uint64_t)&STACK[0x4968]);
  sub_1001FDEF8((uint64_t)&STACK[0x280]);
  uint64_t v5 = &STACK[0x5158];
  sub_100202980((uint64_t)&STACK[0x678], (void *)STACK[0x680]);
  for (uint64_t j = 328LL; j != -328; j -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x4AB0] + j);
  sub_1001FDEF8((uint64_t)&STACK[0x3E8]);
  sub_1001FDEF8((uint64_t)&STACK[0x530]);
  sub_100202980((uint64_t)&STACK[0xA70], (void *)STACK[0xA78]);
  for (uint64_t k = 656LL; k != -328; k -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x4D40] + k);
  sub_1001FDEF8((uint64_t)&STACK[0x698]);
  sub_1001FDEF8((uint64_t)&STACK[0x7E0]);
  sub_1001FDEF8((uint64_t)&STACK[0x928]);
  if (LODWORD(STACK[0x210]) && &STACK[0x5118] != &STACK[0x5158])
  {
    do
    {
      sub_100202980((uint64_t)(v5 - 3), (void *)*(v5 - 2));
      v5 -= 4;
    }

    while (v5 != &STACK[0x5118]);
  }

  sub_100202934((uint64_t)&STACK[0x1920], (void *)STACK[0x1928]);
  for (uint64_t m = 0LL; m != -96; m -= 32LL)
    sub_100202980((uint64_t)&STACK[0x69D0] + m + 72, *(void **)((char *)&STACK[0x69D0] + m + 80));
  sub_100202980((uint64_t)&STACK[0xAA8], (void *)STACK[0xAB0]);
  sub_1001FDF64((uint64_t)&STACK[0x5178]);
  sub_100202980((uint64_t)&STACK[0x1130], (void *)STACK[0x1138]);
  for (uint64_t n = 2296LL; n != -328; n -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x52C0] + n);
  sub_1001FDEF8((uint64_t)&STACK[0xAC8]);
  sub_1001FDEF8((uint64_t)&STACK[0xC10]);
  sub_1001FDEF8((uint64_t)&STACK[0xD58]);
  sub_1001FDEF8((uint64_t)&STACK[0xEA0]);
  sub_1001FDEF8((uint64_t)&STACK[0xFE8]);
  sub_100202980((uint64_t)&STACK[0x1908], (void *)STACK[0x1910]);
  for (iuint64_t i = 2952LL; ii != -328; ii -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x5D00] + ii);
  sub_1001FDEF8((uint64_t)&STACK[0x1150]);
  sub_1001FDEF8((uint64_t)&STACK[0x1298]);
  sub_1001FDEF8((uint64_t)&STACK[0x13E0]);
  sub_1001FDEF8((uint64_t)&STACK[0x1528]);
  sub_1001FDEF8((uint64_t)&STACK[0x1670]);
  sub_1001FDEF8((uint64_t)&STACK[0x17B8]);
  sub_100202934((uint64_t)&STACK[0x1FE0], (void *)STACK[0x1FE8]);
  for (juint64_t j = 0LL; jj != -64; jj -= 32LL)
    sub_100202980((uint64_t)&STACK[0x7098] + jj + 40, *(void **)((char *)&STACK[0x7098] + jj + 48));
  sub_100202980((uint64_t)&STACK[0x1BD0], (void *)STACK[0x1BD8]);
  for (kuint64_t k = 328LL; kk != -328; kk -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x6A30] + kk);
  sub_1001FDEF8((uint64_t)&STACK[0x1940]);
  sub_1001FDEF8((uint64_t)&STACK[0x1A88]);
  sub_100202980((uint64_t)&STACK[0x1FC8], (void *)STACK[0x1FD0]);
  for (muint64_t m = 656LL; mm != -328; mm -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x6CC0] + mm);
  sub_1001FDEF8((uint64_t)&STACK[0x1BF0]);
  sub_1001FDEF8((uint64_t)&STACK[0x1D38]);
  sub_1001FDEF8((uint64_t)&STACK[0x1E80]);
  sub_100202934((uint64_t)&STACK[0x35A0], (void *)STACK[0x35A8]);
  uint64_t v14 = 288LL;
  do
  {
    sub_100202980((uint64_t)&STACK[0x9228] + v14 - 24, *(void **)((char *)&STACK[0x9228] + v14 - 16));
    v14 -= 32LL;
  }

  while (v14);
  sub_100202980((uint64_t)&STACK[0x2000], (void *)STACK[0x2008]);
  sub_1001FDF64((uint64_t)&STACK[0x70D8]);
  sub_100202980((uint64_t)&STACK[0x23F8], (void *)STACK[0x2400]);
  for (nuint64_t n = 656LL; nn != -328; nn -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x7220] + nn);
  sub_1001FDEF8((uint64_t)&STACK[0x2020]);
  sub_1001FDEF8((uint64_t)&STACK[0x2168]);
  sub_1001FDEF8((uint64_t)&STACK[0x22B0]);
  sub_100202980((uint64_t)&STACK[0x2E58], (void *)STACK[0x2E60]);
  for (uint64_t i1 = 2952LL; i1 != -328; i1 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x75F8] + i1);
  sub_1001FDEF8((uint64_t)&STACK[0x2418]);
  sub_1001FDEF8((uint64_t)&STACK[0x2560]);
  sub_1001FDEF8((uint64_t)&STACK[0x26A8]);
  sub_1001FDEF8((uint64_t)&STACK[0x27F0]);
  sub_1001FDEF8((uint64_t)&STACK[0x2938]);
  sub_1001FDEF8((uint64_t)&STACK[0x2A80]);
  sub_1001FDEF8((uint64_t)&STACK[0x2BC8]);
  sub_1001FDEF8((uint64_t)&STACK[0x2D10]);
  sub_100202980((uint64_t)&STACK[0x2E80], (void *)STACK[0x2E88]);
  for (uint64_t i2 = 328LL; i2 != -328; i2 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x82C8] + i2);
  sub_100202980((uint64_t)&STACK[0x2FE8], (void *)STACK[0x2FF0]);
  for (uint64_t i3 = 328LL; i3 != -328; i3 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x8558] + i3);
  sub_1001FDEF8((uint64_t)&STACK[0x2EA0]);
  sub_100202980((uint64_t)&STACK[0x3150], (void *)STACK[0x3158]);
  for (uint64_t i4 = 328LL; i4 != -328; i4 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x87E8] + i4);
  sub_1001FDEF8((uint64_t)&STACK[0x3008]);
  sub_100202980((uint64_t)&STACK[0x32B8], (void *)STACK[0x32C0]);
  for (uint64_t i5 = 328LL; i5 != -328; i5 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x8A78] + i5);
  sub_1001FDEF8((uint64_t)&STACK[0x3170]);
  sub_100202980((uint64_t)&STACK[0x3420], (void *)STACK[0x3428]);
  for (uint64_t i6 = 328LL; i6 != -328; i6 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x8D08] + i6);
  sub_1001FDEF8((uint64_t)&STACK[0x32D8]);
  sub_100202980((uint64_t)&STACK[0x3588], (void *)STACK[0x3590]);
  for (uint64_t i7 = 328LL; i7 != -328; i7 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x8F98] + i7);
  sub_1001FDEF8((uint64_t)&STACK[0x3440]);
  sub_100202934((uint64_t)&STACK[0x47E8], (void *)STACK[0x47F0]);
  uint64_t v23 = 320LL;
  do
  {
    sub_100202980((uint64_t)&STACK[0xC7D0] + v23 - 24, *(void **)((char *)&STACK[0xC7D0] + v23 - 16));
    v23 -= 32LL;
  }

  while (v23);
  sub_100202980((uint64_t)&STACK[0x3708], (void *)STACK[0x3710]);
  sub_1001FDF64((uint64_t)&STACK[0x9348]);
  sub_1001FDEF8((uint64_t)&STACK[0x35C0]);
  sub_100202980((uint64_t)&STACK[0x39C8], (void *)STACK[0x39D0]);
  for (uint64_t i8 = 1968LL; i8 != -328; i8 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x9490] + i8);
  sub_1001FDEF8((uint64_t)&STACK[0x3728]);
  sub_1001FDEF8((uint64_t)&STACK[0x3870]);
  sub_100202980((uint64_t)&STACK[0x41A0], (void *)STACK[0x41A8]);
  for (uint64_t i9 = 2952LL; i9 != -328; i9 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0x9D88] + i9);
  sub_1001FDEF8((uint64_t)&STACK[0x39E8]);
  sub_1001FDEF8((uint64_t)&STACK[0x3B30]);
  sub_1001FDEF8((uint64_t)&STACK[0x3C80]);
  sub_1001FDEF8((uint64_t)&STACK[0x3DC8]);
  sub_1001FDEF8((uint64_t)&STACK[0x3F10]);
  sub_1001FDEF8((uint64_t)&STACK[0x4058]);
  uint64_t v26 = &STACK[0xC9B0];
  int v27 = STACK[0x220];
  sub_100202980((uint64_t)&STACK[0x41C8], (void *)STACK[0x41D0]);
  for (uint64_t i10 = 656LL; i10 != -328; i10 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0xAA58] + i10);
  sub_100202980((uint64_t)&STACK[0x41F0], (void *)STACK[0x41F8]);
  for (uint64_t i11 = 656LL; i11 != -328; i11 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0xAE30] + i11);
  sub_100202980((uint64_t)&STACK[0x44A0], (void *)STACK[0x44A8]);
  for (uint64_t i12 = 656LL; i12 != -328; i12 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0xB208] + i12);
  sub_1001FDEF8((uint64_t)&STACK[0x4210]);
  sub_1001FDEF8((uint64_t)&STACK[0x4358]);
  sub_100202980((uint64_t)&STACK[0x4750], (void *)STACK[0x4758]);
  for (uint64_t i13 = 984LL; i13 != -328; i13 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0xB5E0] + i13);
  sub_1001FDEF8((uint64_t)&STACK[0x44C0]);
  sub_1001FDEF8((uint64_t)&STACK[0x4608]);
  sub_100202980((uint64_t)&STACK[0x4780], (void *)STACK[0x4788]);
  for (uint64_t i14 = 984LL; i14 != -328; i14 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0xBB00] + i14);
  sub_100202980((uint64_t)&STACK[0x47A8], (void *)STACK[0x47B0]);
  for (uint64_t i15 = 656LL; i15 != -328; i15 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0xC020] + i15);
  sub_100202980((uint64_t)&STACK[0x47D0], (void *)STACK[0x47D8]);
  for (uint64_t i16 = 656LL; i16 != -328; i16 -= 328LL)
    sub_1001FDF64((uint64_t)&STACK[0xC3F8] + i16);
  if (&STACK[0xC910] == &STACK[0xC9B0]) {
    int v35 = 0;
  }
  else {
    int v35 = v27;
  }
  if (v35 == 1)
  {
    do
    {
      sub_100202934((uint64_t)(v26 - 3), (void *)*(v26 - 2));
      v26 -= 4;
    }

    while (v26 != &STACK[0xC910]);
  }

  _Unwind_Resume((_Unwind_Exception *)STACK[0x230]);
}

void sub_10020BF70(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B478LL);
}

void sub_10020BF80(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B4A4LL);
}

void sub_10020BF94(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B4B4LL);
}

void sub_10020BFA8(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B4C0LL);
}

void sub_10020BFBC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B4CCLL);
}

void sub_10020BFD0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B4E0LL);
}

void sub_10020BFE4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B504LL);
}

void sub_10020C000(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B50CLL);
}

void sub_10020C01C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B514LL);
}

void sub_10020C038(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B51CLL);
}

void sub_10020C054(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B524LL);
}

void sub_10020C074(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B52CLL);
}

void sub_10020C08C(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020B560LL);
}

void sub_10020C0A0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B560LL);
}

void sub_10020C0BC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B578LL);
}

void sub_10020C0D8(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B59CLL);
}

void sub_10020C0FC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B5A8LL);
}

void sub_10020C120(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B5B4LL);
}

void sub_10020C144(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B5C0LL);
}

void sub_10020C168(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B5CCLL);
}

void sub_10020C18C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B5D8LL);
}

void sub_10020C1B0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B5E4LL);
}

void sub_10020C1D8(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B64CLL);
}

void sub_10020C1EC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B664LL);
}

void sub_10020C1FC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B690LL);
}

void sub_10020C210(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B6A8LL);
}

void sub_10020C224(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B6CCLL);
}

void sub_10020C23C(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020B6E8LL);
}

void sub_10020C260(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020B6F4LL);
}

void sub_10020C284(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020B6F4LL);
}

void sub_10020C298(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B700LL);
}

void sub_10020C2B4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B718LL);
}

void sub_10020C2D0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B73CLL);
}

void sub_10020C2F0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B748LL);
}

void sub_10020C318(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020B764LL);
}

void sub_10020C348(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B7BCLL);
}

void sub_10020C374(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B7D4LL);
}

void sub_10020C384(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B7FCLL);
}

void sub_10020C398(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B810LL);
}

void sub_10020C3AC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B81CLL);
}

void sub_10020C3C0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B828LL);
}

void sub_10020C3D4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B840LL);
}

void sub_10020C3E8(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B864LL);
}

void sub_10020C400(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B870LL);
}

void sub_10020C420(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020B88CLL);
}

void sub_10020C448(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020B8A8LL);
}

void sub_10020C46C(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020B8A8LL);
}

void sub_10020C480(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B8A8LL);
}

void sub_10020C494(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B8C0LL);
}

void sub_10020C4A8(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B8E4LL);
}

void sub_10020C4C8(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B8F0LL);
}

void sub_10020C4E8(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B8FCLL);
}

void sub_10020C508(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B908LL);
}

void sub_10020C52C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B914LL);
}

void sub_10020C54C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B920LL);
}

void sub_10020C56C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B92CLL);
}

void sub_10020C58C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B938LL);
}

void sub_10020C5A8(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020B97CLL);
}

void sub_10020C5CC(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020B97CLL);
}

void sub_10020C5E0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B97CLL);
}

void sub_10020C5F4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B994LL);
}

void sub_10020C608(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020B9B4LL);
}

void sub_10020C62C(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020B9B4LL);
}

void sub_10020C640(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B9B4LL);
}

void sub_10020C654(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B9CCLL);
}

void sub_10020C668(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020B9F8LL);
}

void sub_10020C6AC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020B9F8LL);
}

void sub_10020C6C4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BA10LL);
}

void sub_10020C6D8(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020BA3CLL);
}

void sub_10020C708(unint64_t a1)
{
  STACK[0x230] = a1;
  sub_1001FDEF8((uint64_t)&STACK[0x3008]);
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BA3CLL);
}

void sub_10020C744(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BA5CLL);
}

void sub_10020C760(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020BA88LL);
}

void sub_10020C7D4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BAA0LL);
}

void sub_10020C7F0(unint64_t a1)
{
  LODWORD(STACK[0x220]) = 1;
  STACK[0x230] = a1;
  JUMPOUT(0x10020BACCLL);
}

void sub_10020C86C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BADCLL);
}

void sub_10020C888(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BB3CLL);
}

void sub_10020C8D0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BB4CLL);
}

void sub_10020C8F4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BB5CLL);
}

void sub_10020C910(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BB84LL);
}

void sub_10020C930(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BB9CLL);
}

void sub_10020C950(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BBA8LL);
}

void sub_10020C970(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BBB4LL);
}

void sub_10020C990(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BBB8LL);
}

void sub_10020C9B0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BBD0LL);
}

void sub_10020C9D0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BBF4LL);
}

void sub_10020C9F8(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BC00LL);
}

void sub_10020CA20(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BC0CLL);
}

void sub_10020CA50(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BC40LL);
}

void sub_10020CA70(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BC40LL);
}

void sub_10020CA90(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BC58LL);
}

void sub_10020CAB0(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BC7CLL);
}

void sub_10020CAD4(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BC88LL);
}

void sub_10020CAFC(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BC94LL);
}

void sub_10020CB2C(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BCA0LL);
}

void sub_10020CB58(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BCACLL);
}

void sub_10020CB80(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BCB8LL);
}

void sub_10020CBA8(unint64_t a1)
{
  STACK[0x230] = a1;
  LODWORD(STACK[0x220]) = 1;
  JUMPOUT(0x10020BCC4LL);
}

void sub_10020CBCC(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10020BD00LL);
}

void sub_10020CBE4(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10020BD00LL);
}

void sub_10020CBFC(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10020BD18LL);
}

void sub_10020CC14(unint64_t a1)
{
  STACK[0x230] = a1;
  do
  {
    v1 -= 41;
    sub_1001FDF64((uint64_t)v1);
  }

  while (v1 != &STACK[0xAA58]);
  JUMPOUT(0x10020BD38LL);
}

void sub_10020CC6C(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10020BD50LL);
}

void sub_10020CC84(unint64_t a1)
{
  STACK[0x230] = a1;
  do
  {
    v1 -= 41;
    sub_1001FDF64((uint64_t)v1);
  }

  while (v1 != &STACK[0xAE30]);
  JUMPOUT(0x10020BD70LL);
}

void sub_10020CCDC(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10020BD88LL);
}

void sub_10020CCF4(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10020BDACLL);
}

void sub_10020CD10(unint64_t a1)
{
  STACK[0x230] = a1;
  sub_1001FDEF8((uint64_t)&STACK[0x4358]);
  JUMPOUT(0x10020BDC8LL);
}

void sub_10020CD38(unint64_t a1)
{
  STACK[0x230] = a1;
  sub_1001FDEF8((uint64_t)&STACK[0x4358]);
  JUMPOUT(0x10020BDE4LL);
}

void sub_10020CD64(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10020BDE4LL);
}

void sub_10020CD7C(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10020BDFCLL);
}

void sub_10020CD94(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10020BE20LL);
}

void sub_10020CDB0(unint64_t a1)
{
  STACK[0x230] = a1;
  sub_1001FDEF8((uint64_t)&STACK[0x4608]);
  JUMPOUT(0x10020BE3CLL);
}

void sub_10020CDE4(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10020BE58LL);
}

void sub_10020CDFC(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10020BE58LL);
}

void sub_10020CE14(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10020BE70LL);
}

void sub_10020CE2C(unint64_t a1)
{
  STACK[0x230] = a1;
  do
  {
    v1 -= 41;
    sub_1001FDF64((uint64_t)v1);
  }

  while (v1 != &STACK[0xBB00]);
  JUMPOUT(0x10020BE90LL);
}

void sub_10020CE88(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10020BEA8LL);
}

void sub_10020CEA0(unint64_t a1)
{
  STACK[0x230] = a1;
  do
  {
    v1 -= 41;
    sub_1001FDF64((uint64_t)v1);
  }

  while (v1 != &STACK[0xC020]);
  JUMPOUT(0x10020BEC8LL);
}

void sub_10020CF08(unint64_t a1)
{
  STACK[0x230] = a1;
  JUMPOUT(0x10020BEE0LL);
}

void sub_10020CF28(_Unwind_Exception *a1)
{
  do
  {
    v1 -= 41;
    sub_1001FDF64((uint64_t)v1);
  }

  while (v1 != &STACK[0xC3F8]);
  _Unwind_Resume(a1);
}

uint64_t sub_10020CF58()
{
  int v1106 = 14;
  v1077[0] = 0x300000010LL;
  v1077[1] = 0xC042000000000000LL;
  v1183[0] = (const void *)0xC042000000000000LL;
  sub_10015ED64((uint64_t)v1078, (double *)v1183, 1LL);
  __int128 v1079 = xmmword_100423D50;
  uint64_t v1080 = 0x4024000000000000LL;
  int v1081 = 45;
  LOBYTE(v1082) = 0;
  char v1084 = 0;
  uint64_t v1085 = 0LL;
  char v1086 = 0;
  int v1087 = 1;
  char v1088 = 1;
  __int128 v1089 = xmmword_100423D60;
  __int128 v1090 = xmmword_100423D70;
  __asm { FMOV            V0.2D, #1.0 }

  __int128 v10 = _Q0;
  __int128 v1091 = _Q0;
  unint64_t v1092 = 0xC059000000000000LL;
  __int128 v1093 = xmmword_100423D80;
  int32x2_t v1094 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1095 = xmmword_100423CC0;
  uint64_t v1097 = 0LL;
  uint64_t v1098 = 0LL;
  uint64_t v1096 = 0x3FD999999999999ALL;
  __int128 v1099 = xmmword_100423CD0;
  int v1100 = 5;
  uint64_t v1101 = 0x4000000000000000LL;
  int v1102 = 10;
  uint64_t v1103 = 0x4034000000000000LL;
  int v1104 = 3;
  __int128 v1105 = xmmword_100423D90;
  sub_100201644((uint64_t)v1275, &v1106, (uint64_t)v1077);
  sub_100202A04((uint64_t)v1107, v1275, 1LL);
  sub_1002018A8(v1280, &xmmword_1007FA3E0, (uint64_t)v1107);
  int v1075 = 14;
  v1046[0] = 0x300000010LL;
  v1046[1] = 0xC042000000000000LL;
  v1183[0] = (const void *)0xC042000000000000LL;
  sub_10015ED64((uint64_t)v1047, (double *)v1183, 1LL);
  __int128 v1048 = xmmword_100423D50;
  uint64_t v1049 = 0x4024000000000000LL;
  int v1050 = 45;
  LOBYTE(v1051) = 0;
  char v1053 = 0;
  uint64_t v1054 = 0LL;
  char v1055 = 0;
  int v1056 = 1;
  char v1057 = 1;
  __int128 v1058 = xmmword_100423D60;
  __int128 v1059 = xmmword_100423D70;
  __int128 v1060 = v10;
  unint64_t v1061 = 0xC059000000000000LL;
  __int128 v1062 = xmmword_100423D80;
  int32x2_t v1063 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1064 = xmmword_100423CC0;
  uint64_t v1066 = 0LL;
  uint64_t v1067 = 0LL;
  uint64_t v1065 = 0x3FD999999999999ALL;
  __int128 v1068 = xmmword_100423CD0;
  int v1069 = 5;
  uint64_t v1070 = 0x4000000000000000LL;
  int v1071 = 10;
  uint64_t v1072 = 0x4034000000000000LL;
  int v1073 = 3;
  __int128 v1074 = xmmword_100423D90;
  sub_100201644((uint64_t)v1271, &v1075, (uint64_t)v1046);
  sub_100202A04((uint64_t)v1076, v1271, 1LL);
  sub_1002018A8(v1281, &xmmword_1007FA3F8, (uint64_t)v1076);
  int v1044 = 14;
  v1015[0] = 0x300000010LL;
  v1015[1] = 0xC042000000000000LL;
  v1183[0] = (const void *)0xC042000000000000LL;
  sub_10015ED64((uint64_t)v1016, (double *)v1183, 1LL);
  __int128 v1017 = xmmword_100423D50;
  uint64_t v1018 = 0x4024000000000000LL;
  int v1019 = 45;
  LOBYTE(v1020) = 0;
  char v1022 = 0;
  uint64_t v1023 = 0LL;
  char v1024 = 0;
  int v1025 = 1;
  char v1026 = 1;
  __int128 v1027 = xmmword_100423D60;
  __int128 v1028 = xmmword_100423D70;
  __int128 v1029 = v10;
  unint64_t v1030 = 0xC059000000000000LL;
  __int128 v1031 = xmmword_100423D80;
  int32x2_t v1032 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1033 = xmmword_100423CC0;
  uint64_t v1035 = 0LL;
  uint64_t v1036 = 0LL;
  uint64_t v1034 = 0x3FD999999999999ALL;
  __int128 v1037 = xmmword_100423CD0;
  int v1038 = 5;
  uint64_t v1039 = 0x4000000000000000LL;
  int v1040 = 10;
  uint64_t v1041 = 0x4034000000000000LL;
  int v1042 = 3;
  __int128 v1043 = xmmword_100423D90;
  sub_100201644((uint64_t)v1267, &v1044, (uint64_t)v1015);
  sub_100202A04((uint64_t)v1045, v1267, 1LL);
  sub_1002018A8(v1282, &xmmword_1007FA428, (uint64_t)v1045);
  int v1013 = 14;
  v984[0] = 0x300000010LL;
  v984[1] = 0xC042000000000000LL;
  v1183[0] = (const void *)0xC042000000000000LL;
  sub_10015ED64((uint64_t)v985, (double *)v1183, 1LL);
  __int128 v986 = xmmword_100423D50;
  uint64_t v987 = 0x4024000000000000LL;
  int v988 = 45;
  LOBYTE(v989) = 0;
  char v991 = 0;
  uint64_t v992 = 0LL;
  char v993 = 0;
  int v994 = 1;
  char v995 = 1;
  __int128 v996 = xmmword_100423D60;
  __int128 v997 = xmmword_100423D70;
  __int128 v998 = v10;
  unint64_t v999 = 0xC059000000000000LL;
  __int128 v1000 = xmmword_100423D80;
  int32x2_t v1001 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v1002 = xmmword_100423CC0;
  uint64_t v1004 = 0LL;
  uint64_t v1005 = 0LL;
  uint64_t v1003 = 0x3FD999999999999ALL;
  __int128 v1006 = xmmword_100423CD0;
  int v1007 = 5;
  uint64_t v1008 = 0x4000000000000000LL;
  int v1009 = 10;
  uint64_t v1010 = 0x4034000000000000LL;
  int v1011 = 3;
  __int128 v1012 = xmmword_100423D90;
  sub_100201644((uint64_t)v1263, &v1013, (uint64_t)v984);
  sub_100202A04((uint64_t)v1014, v1263, 1LL);
  sub_1002018A8(v1283, &xmmword_1007FA428, (uint64_t)v1014);
  int v982 = 14;
  v953[0] = 0x300000010LL;
  v953[1] = 0xC042000000000000LL;
  v1183[0] = (const void *)0xC042000000000000LL;
  sub_10015ED64((uint64_t)v954, (double *)v1183, 1LL);
  __int128 v955 = xmmword_100423D50;
  uint64_t v956 = 0x4024000000000000LL;
  int v957 = 45;
  LOBYTE(v95std::ostream::~ostream(v2, v3 + 8) = 0;
  char v960 = 0;
  uint64_t v961 = 0LL;
  char v962 = 0;
  int v963 = 1;
  char v964 = 1;
  __int128 v965 = xmmword_100423D60;
  __int128 v966 = xmmword_100423D70;
  __int128 v967 = v10;
  unint64_t v968 = 0xC059000000000000LL;
  __int128 v969 = xmmword_100423D80;
  int32x2_t v970 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v971 = xmmword_100423CC0;
  uint64_t v973 = 0LL;
  uint64_t v974 = 0LL;
  uint64_t v972 = 0x3FD999999999999ALL;
  __int128 v975 = xmmword_100423CD0;
  int v976 = 5;
  uint64_t v977 = 0x4000000000000000LL;
  int v978 = 10;
  uint64_t v979 = 0x4034000000000000LL;
  int v980 = 3;
  __int128 v981 = xmmword_100423D90;
  sub_100201644((uint64_t)v1259, &v982, (uint64_t)v953);
  sub_100202A04((uint64_t)v983, v1259, 1LL);
  sub_1002018A8(v1284, &xmmword_1007FA440, (uint64_t)v983);
  int v951 = 14;
  v922[0] = 0x300000010LL;
  v922[1] = 0xC044800000000000LL;
  v1183[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v923, (double *)v1183, 1LL);
  __int128 v924 = xmmword_100423D50;
  uint64_t v925 = 0x4024000000000000LL;
  int v926 = 45;
  LOBYTE(v927) = 0;
  char v929 = 0;
  uint64_t v930 = 0LL;
  char v931 = 0;
  int v932 = 1;
  char v933 = 1;
  __int128 v934 = xmmword_100423D60;
  __int128 v935 = xmmword_100423D70;
  __int128 v936 = v10;
  unint64_t v937 = 0xC059000000000000LL;
  __int128 v938 = xmmword_100423D80;
  int32x2_t v939 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v940 = xmmword_100423CC0;
  uint64_t v942 = 0LL;
  uint64_t v943 = 0LL;
  uint64_t v941 = 0x3FD999999999999ALL;
  __int128 v944 = xmmword_100423CD0;
  int v945 = 5;
  uint64_t v946 = 0x4000000000000000LL;
  int v947 = 10;
  uint64_t v948 = 0x4034000000000000LL;
  int v949 = 3;
  __int128 v950 = xmmword_100423D90;
  sub_100201644((uint64_t)v1255, &v951, (uint64_t)v922);
  sub_100202A04((uint64_t)v952, v1255, 1LL);
  sub_1002018A8(v1285, &xmmword_1007FA470, (uint64_t)v952);
  int v920 = 14;
  v891[0] = 0x300000010LL;
  v891[1] = 0xC044800000000000LL;
  v1183[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v892, (double *)v1183, 1LL);
  __int128 v893 = xmmword_100423D50;
  uint64_t v894 = 0x4024000000000000LL;
  int v895 = 45;
  LOBYTE(v896) = 0;
  char v898 = 0;
  uint64_t v899 = 0LL;
  char v900 = 0;
  int v901 = 1;
  char v902 = 1;
  __int128 v903 = xmmword_100423D60;
  __int128 v904 = xmmword_100423D70;
  __int128 v905 = v10;
  unint64_t v906 = 0xC059000000000000LL;
  __int128 v907 = xmmword_100423D80;
  int32x2_t v908 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v909 = xmmword_100423CC0;
  uint64_t v911 = 0LL;
  uint64_t v912 = 0LL;
  uint64_t v910 = 0x3FD999999999999ALL;
  __int128 v913 = xmmword_100423CD0;
  int v914 = 5;
  uint64_t v915 = 0x4000000000000000LL;
  int v916 = 10;
  uint64_t v917 = 0x4034000000000000LL;
  int v918 = 3;
  __int128 v919 = xmmword_100423D90;
  sub_100201644((uint64_t)v1251, &v920, (uint64_t)v891);
  sub_100202A04((uint64_t)v921, v1251, 1LL);
  sub_1002018A8(v1286, &xmmword_1007FA488, (uint64_t)v921);
  int v889 = 14;
  v860[0] = 0x300000010LL;
  v860[1] = 0xC044800000000000LL;
  v1183[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v861, (double *)v1183, 1LL);
  __int128 v862 = xmmword_100423D50;
  uint64_t v863 = 0x4024000000000000LL;
  int v864 = 45;
  LOBYTE(v865) = 0;
  char v867 = 0;
  uint64_t v868 = 0LL;
  char v869 = 0;
  int v870 = 1;
  char v871 = 1;
  __int128 v872 = xmmword_100423D60;
  __int128 v873 = xmmword_100423D70;
  __int128 v874 = v10;
  unint64_t v875 = 0xC059000000000000LL;
  __int128 v876 = xmmword_100423D80;
  int32x2_t v877 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v878 = xmmword_100423CC0;
  uint64_t v880 = 0LL;
  uint64_t v881 = 0LL;
  uint64_t v879 = 0x3FD999999999999ALL;
  __int128 v882 = xmmword_100423CD0;
  int v883 = 5;
  uint64_t v884 = 0x4000000000000000LL;
  int v885 = 10;
  uint64_t v886 = 0x4034000000000000LL;
  int v887 = 3;
  __int128 v888 = xmmword_100423D90;
  sub_100201644((uint64_t)v1247, &v889, (uint64_t)v860);
  sub_100202A04((uint64_t)v890, v1247, 1LL);
  sub_1002018A8(v1287, &xmmword_1007FA4A0, (uint64_t)v890);
  sub_100204184((uint64_t)v1108, v1280, 8LL);
  int v1288 = 2;
  sub_1002043B8(v1289, v1108);
  int v857 = 16;
  v828[0] = 0x300000008LL;
  v828[1] = 0xC043800000000000LL;
  v1183[0] = (const void *)0xC043800000000000LL;
  sub_10015ED64((uint64_t)v829, (double *)v1183, 1LL);
  __int128 v830 = xmmword_100423D50;
  uint64_t v831 = 0x4024000000000000LL;
  int v832 = 45;
  LOBYTE(v833) = 0;
  char v835 = 0;
  uint64_t v836 = 0LL;
  char v837 = 0;
  int v838 = 1;
  char v839 = 1;
  __int128 v840 = xmmword_100423D60;
  __int128 v841 = xmmword_100423D70;
  __int128 v842 = v10;
  unint64_t v843 = 0xC059000000000000LL;
  __int128 v844 = xmmword_100423D80;
  int32x2_t v845 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v846 = xmmword_100423CC0;
  uint64_t v848 = 0LL;
  uint64_t v849 = 0LL;
  uint64_t v847 = 0x3FD999999999999ALL;
  __int128 v850 = xmmword_100423CD0;
  int v851 = 5;
  uint64_t v852 = 0x4000000000000000LL;
  int v853 = 10;
  uint64_t v854 = 0x4034000000000000LL;
  int v855 = 3;
  __int128 v856 = xmmword_100423D90;
  sub_100201644((uint64_t)v1233, &v857, (uint64_t)v828);
  sub_100202A04((uint64_t)v858, v1233, 1LL);
  sub_1002018A8(v1238, &xmmword_1007FA3E0, (uint64_t)v858);
  int v826 = 16;
  v797[0] = 0x300000008LL;
  v797[1] = 0xC043800000000000LL;
  v1183[0] = (const void *)0xC043800000000000LL;
  sub_10015ED64((uint64_t)v798, (double *)v1183, 1LL);
  __int128 v799 = xmmword_100423D50;
  uint64_t v800 = 0x4024000000000000LL;
  int v801 = 45;
  LOBYTE(v802) = 0;
  char v804 = 0;
  uint64_t v805 = 0LL;
  char v806 = 0;
  int v807 = 1;
  char v808 = 1;
  __int128 v809 = xmmword_100423D60;
  __int128 v810 = xmmword_100423D70;
  __int128 v811 = v10;
  unint64_t v812 = 0xC059000000000000LL;
  __int128 v813 = xmmword_100423D80;
  int32x2_t v814 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v815 = xmmword_100423CC0;
  uint64_t v817 = 0LL;
  uint64_t v818 = 0LL;
  uint64_t v816 = 0x3FD999999999999ALL;
  __int128 v819 = xmmword_100423CD0;
  int v820 = 5;
  uint64_t v821 = 0x4000000000000000LL;
  int v822 = 10;
  uint64_t v823 = 0x4034000000000000LL;
  int v824 = 3;
  __int128 v825 = xmmword_100423D90;
  sub_100201644((uint64_t)v1229, &v826, (uint64_t)v797);
  sub_100202A04((uint64_t)v827, v1229, 1LL);
  sub_1002018A8(v1239, &xmmword_1007FA3F8, (uint64_t)v827);
  int v795 = 7;
  v766[0] = 8LL;
  v766[1] = 0xC04A000000000000LL;
  v1183[0] = (const void *)0xC04A000000000000LL;
  sub_10015ED64((uint64_t)v767, (double *)v1183, 1LL);
  __int128 v768 = xmmword_100423D50;
  uint64_t v769 = 0x4024000000000000LL;
  int v770 = 45;
  LOBYTE(v771) = 0;
  char v773 = 0;
  uint64_t v774 = 0LL;
  char v775 = 0;
  int v776 = 1;
  char v777 = 1;
  __int128 v778 = xmmword_100423D60;
  __int128 v779 = xmmword_100423D70;
  __int128 v780 = v10;
  unint64_t v781 = 0xC059000000000000LL;
  __int128 v782 = xmmword_100423D80;
  int32x2_t v783 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v784 = xmmword_100423CC0;
  uint64_t v786 = 0LL;
  uint64_t v787 = 0LL;
  uint64_t v785 = 0x3FD999999999999ALL;
  __int128 v788 = xmmword_100423CD0;
  int v789 = 5;
  uint64_t v790 = 0x4000000000000000LL;
  int v791 = 10;
  uint64_t v792 = 0x4034000000000000LL;
  int v793 = 3;
  __int128 v794 = xmmword_100423D90;
  sub_100201644((uint64_t)v1225, &v795, (uint64_t)v766);
  sub_100202A04((uint64_t)v796, v1225, 1LL);
  sub_1002018A8(v1240, &xmmword_1007FA5F0, (uint64_t)v796);
  int v764 = 7;
  v735[0] = 8LL;
  v735[1] = 0xC04A000000000000LL;
  v1183[0] = (const void *)0xC04A000000000000LL;
  sub_10015ED64((uint64_t)v736, (double *)v1183, 1LL);
  __int128 v737 = xmmword_100423D50;
  uint64_t v738 = 0x4024000000000000LL;
  int v739 = 45;
  LOBYTE(v740) = 0;
  char v742 = 0;
  uint64_t v743 = 0LL;
  char v744 = 0;
  int v745 = 1;
  char v746 = 1;
  __int128 v747 = xmmword_100423D60;
  __int128 v748 = xmmword_100423D70;
  __int128 v749 = v10;
  unint64_t v750 = 0xC059000000000000LL;
  __int128 v751 = xmmword_100423D80;
  int32x2_t v752 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v753 = xmmword_100423CC0;
  uint64_t v755 = 0LL;
  uint64_t v756 = 0LL;
  uint64_t v754 = 0x3FD999999999999ALL;
  __int128 v757 = xmmword_100423CD0;
  int v758 = 5;
  uint64_t v759 = 0x4000000000000000LL;
  int v760 = 10;
  uint64_t v761 = 0x4034000000000000LL;
  int v762 = 3;
  __int128 v763 = xmmword_100423D90;
  sub_100201644((uint64_t)v1221, &v764, (uint64_t)v735);
  sub_100202A04((uint64_t)v765, v1221, 1LL);
  sub_1002018A8(v1241, &xmmword_1007FA608, (uint64_t)v765);
  int v733 = 7;
  v704[0] = 8LL;
  v704[1] = 0xC04A000000000000LL;
  v1183[0] = (const void *)0xC04A000000000000LL;
  sub_10015ED64((uint64_t)v705, (double *)v1183, 1LL);
  __int128 v706 = xmmword_100423D50;
  uint64_t v707 = 0x4024000000000000LL;
  int v708 = 45;
  LOBYTE(v709) = 0;
  char v711 = 0;
  uint64_t v712 = 0LL;
  char v713 = 0;
  int v714 = 1;
  char v715 = 1;
  __int128 v716 = xmmword_100423D60;
  __int128 v717 = xmmword_100423D70;
  __int128 v718 = v10;
  unint64_t v719 = 0xC059000000000000LL;
  __int128 v720 = xmmword_100423D80;
  int32x2_t v721 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v722 = xmmword_100423CC0;
  uint64_t v724 = 0LL;
  uint64_t v725 = 0LL;
  uint64_t v723 = 0x3FD999999999999ALL;
  __int128 v726 = xmmword_100423CD0;
  int v727 = 5;
  uint64_t v728 = 0x4000000000000000LL;
  int v729 = 10;
  uint64_t v730 = 0x4034000000000000LL;
  int v731 = 3;
  __int128 v732 = xmmword_100423D90;
  sub_100201644((uint64_t)v1217, &v733, (uint64_t)v704);
  sub_100202A04((uint64_t)v734, v1217, 1LL);
  sub_1002018A8(v1242, &xmmword_1007FA620, (uint64_t)v734);
  int v702 = 7;
  v673[0] = 8LL;
  v673[1] = 0xC04A000000000000LL;
  v1183[0] = (const void *)0xC04A000000000000LL;
  sub_10015ED64((uint64_t)v674, (double *)v1183, 1LL);
  __int128 v675 = xmmword_100423D50;
  uint64_t v676 = 0x4024000000000000LL;
  int v677 = 45;
  LOBYTE(v67std::ostream::~ostream(v2, v3 + 8) = 0;
  char v680 = 0;
  uint64_t v681 = 0LL;
  char v682 = 0;
  int v683 = 1;
  char v684 = 1;
  __int128 v685 = xmmword_100423D60;
  __int128 v686 = xmmword_100423D70;
  __int128 v687 = v10;
  unint64_t v688 = 0xC059000000000000LL;
  __int128 v689 = xmmword_100423D80;
  int32x2_t v690 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v691 = xmmword_100423CC0;
  uint64_t v693 = 0LL;
  uint64_t v694 = 0LL;
  uint64_t v692 = 0x3FD999999999999ALL;
  __int128 v695 = xmmword_100423CD0;
  int v696 = 5;
  uint64_t v697 = 0x4000000000000000LL;
  int v698 = 10;
  uint64_t v699 = 0x4034000000000000LL;
  int v700 = 3;
  __int128 v701 = xmmword_100423D90;
  sub_100201644((uint64_t)v1213, &v702, (uint64_t)v673);
  sub_100202A04((uint64_t)v703, v1213, 1LL);
  sub_1002018A8(v1243, &xmmword_1007FA638, (uint64_t)v703);
  int v671 = 7;
  v642[0] = 8LL;
  v642[1] = 0xC04A000000000000LL;
  v1183[0] = (const void *)0xC04A000000000000LL;
  sub_10015ED64((uint64_t)v643, (double *)v1183, 1LL);
  __int128 v644 = xmmword_100423D50;
  uint64_t v645 = 0x4024000000000000LL;
  int v646 = 45;
  LOBYTE(v647) = 0;
  char v649 = 0;
  uint64_t v650 = 0LL;
  char v651 = 0;
  int v652 = 1;
  char v653 = 1;
  __int128 v654 = xmmword_100423D60;
  __int128 v655 = xmmword_100423D70;
  __int128 v656 = v10;
  unint64_t v657 = 0xC059000000000000LL;
  __int128 v658 = xmmword_100423D80;
  int32x2_t v659 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v660 = xmmword_100423CC0;
  uint64_t v662 = 0LL;
  uint64_t v663 = 0LL;
  uint64_t v661 = 0x3FD999999999999ALL;
  __int128 v664 = xmmword_100423CD0;
  int v665 = 5;
  uint64_t v666 = 0x4000000000000000LL;
  int v667 = 10;
  uint64_t v668 = 0x4034000000000000LL;
  int v669 = 3;
  __int128 v670 = xmmword_100423D90;
  sub_100201644((uint64_t)v1209, &v671, (uint64_t)v642);
  sub_100202A04((uint64_t)v672, v1209, 1LL);
  sub_1002018A8(v1244, &xmmword_1007FA650, (uint64_t)v672);
  int v640 = 7;
  v611[0] = 8LL;
  v611[1] = 0xC04A000000000000LL;
  v1183[0] = (const void *)0xC04A000000000000LL;
  sub_10015ED64((uint64_t)v612, (double *)v1183, 1LL);
  __int128 v613 = xmmword_100423D50;
  uint64_t v614 = 0x4024000000000000LL;
  int v615 = 45;
  LOBYTE(v616) = 0;
  char v618 = 0;
  uint64_t v619 = 0LL;
  char v620 = 0;
  int v621 = 1;
  char v622 = 1;
  __int128 v623 = xmmword_100423D60;
  __int128 v624 = xmmword_100423D70;
  __int128 v625 = v10;
  unint64_t v626 = 0xC059000000000000LL;
  __int128 v627 = xmmword_100423D80;
  int32x2_t v628 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v629 = xmmword_100423CC0;
  uint64_t v631 = 0LL;
  uint64_t v632 = 0LL;
  uint64_t v630 = 0x3FD999999999999ALL;
  __int128 v633 = xmmword_100423CD0;
  int v634 = 5;
  uint64_t v635 = 0x4000000000000000LL;
  int v636 = 10;
  uint64_t v637 = 0x4034000000000000LL;
  int v638 = 3;
  __int128 v639 = xmmword_100423D90;
  sub_100201644((uint64_t)v1205, &v640, (uint64_t)v611);
  sub_100202A04((uint64_t)v641, v1205, 1LL);
  sub_1002018A8(v1245, &xmmword_1007FA668, (uint64_t)v641);
  int v609 = 7;
  v580[0] = 8LL;
  v580[1] = 0xC04A000000000000LL;
  v1183[0] = (const void *)0xC04A000000000000LL;
  sub_10015ED64((uint64_t)v581, (double *)v1183, 1LL);
  __int128 v582 = xmmword_100423D50;
  uint64_t v583 = 0x4024000000000000LL;
  int v584 = 45;
  LOBYTE(v585) = 0;
  char v587 = 0;
  uint64_t v588 = 0LL;
  char v589 = 0;
  int v590 = 1;
  char v591 = 1;
  __int128 v592 = xmmword_100423D60;
  __int128 v593 = xmmword_100423D70;
  __int128 v594 = v10;
  unint64_t v595 = 0xC059000000000000LL;
  __int128 v596 = xmmword_100423D80;
  int32x2_t v597 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v598 = xmmword_100423CC0;
  uint64_t v600 = 0LL;
  uint64_t v601 = 0LL;
  uint64_t v599 = 0x3FD999999999999ALL;
  __int128 v602 = xmmword_100423CD0;
  int v603 = 5;
  uint64_t v604 = 0x4000000000000000LL;
  int v605 = 10;
  uint64_t v606 = 0x4034000000000000LL;
  int v607 = 3;
  __int128 v608 = xmmword_100423D90;
  sub_100201644((uint64_t)v1201, &v609, (uint64_t)v580);
  sub_100202A04((uint64_t)v610, v1201, 1LL);
  sub_1002018A8(v1246, &xmmword_1007FA680, (uint64_t)v610);
  sub_100204184((uint64_t)v859, v1238, 9LL);
  int v1290 = 3;
  sub_1002043B8(v1291, v859);
  int v577 = 6;
  v548[0] = 8LL;
  v548[1] = 0xC04E800000000000LL;
  v1174[0] = -61.0;
  sub_10015ED64((uint64_t)v549, v1174, 1LL);
  __int128 v550 = xmmword_100423D50;
  uint64_t v551 = 0x4024000000000000LL;
  int v552 = 45;
  LOBYTE(v553) = 0;
  char v555 = 0;
  uint64_t v556 = 0LL;
  char v557 = 0;
  int v558 = 1;
  char v559 = 1;
  __int128 v560 = xmmword_100423D60;
  __int128 v561 = xmmword_100423D70;
  __int128 v562 = v10;
  unint64_t v563 = 0xC059000000000000LL;
  __int128 v564 = xmmword_100423D80;
  int32x2_t v565 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v566 = xmmword_100423CC0;
  uint64_t v568 = 0LL;
  uint64_t v569 = 0LL;
  uint64_t v567 = 0x3FD999999999999ALL;
  __int128 v570 = xmmword_100423CD0;
  int v571 = 5;
  uint64_t v572 = 0x4000000000000000LL;
  int v573 = 10;
  uint64_t v574 = 0x4034000000000000LL;
  int v575 = 3;
  __int128 v576 = xmmword_100423D90;
  sub_100201644((uint64_t)v1178, &v577, (uint64_t)v548);
  sub_100202A04((uint64_t)v578, v1178, 1LL);
  sub_1002018A8(v1183, &xmmword_1007FA5F0, (uint64_t)v578);
  int v546 = 3;
  v517[0] = 8LL;
  v517[1] = 0xC04F000000000000LL;
  v1170[0] = -62.0;
  sub_10015ED64((uint64_t)v518, v1170, 1LL);
  __int128 v519 = xmmword_100423D50;
  uint64_t v520 = 0x4024000000000000LL;
  int v521 = 45;
  LOBYTE(v522) = 0;
  char v524 = 0;
  uint64_t v525 = 0LL;
  char v526 = 0;
  int v527 = 1;
  char v528 = 1;
  __int128 v529 = xmmword_100423D60;
  __int128 v530 = xmmword_100423D70;
  __int128 v531 = v10;
  unint64_t v532 = 0xC059000000000000LL;
  __int128 v533 = xmmword_100423D80;
  int32x2_t v534 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v535 = xmmword_100423CC0;
  uint64_t v537 = 0LL;
  uint64_t v538 = 0LL;
  uint64_t v536 = 0x3FD999999999999ALL;
  __int128 v539 = xmmword_100423CD0;
  int v540 = 5;
  uint64_t v541 = 0x4000000000000000LL;
  int v542 = 10;
  uint64_t v543 = 0x4034000000000000LL;
  int v544 = 3;
  __int128 v545 = xmmword_100423D90;
  sub_100201644((uint64_t)v1174, &v546, (uint64_t)v517);
  sub_100202A04((uint64_t)v547, (int *)v1174, 1LL);
  sub_1002018A8(v1184, &xmmword_1007FA5F0, (uint64_t)v547);
  int v515 = 7;
  v486[0] = 8LL;
  v486[1] = 0xC04E800000000000LL;
  v1166[0] = -61.0;
  sub_10015ED64((uint64_t)v487, v1166, 1LL);
  __int128 v488 = xmmword_100423D50;
  uint64_t v489 = 0x4024000000000000LL;
  int v490 = 45;
  LOBYTE(v491) = 0;
  char v493 = 0;
  uint64_t v494 = 0LL;
  char v495 = 0;
  int v496 = 1;
  char v497 = 1;
  __int128 v498 = xmmword_100423D60;
  __int128 v499 = xmmword_100423D70;
  __int128 v500 = v10;
  unint64_t v501 = 0xC059000000000000LL;
  __int128 v502 = xmmword_100423D80;
  int32x2_t v503 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v504 = xmmword_100423CC0;
  uint64_t v506 = 0LL;
  uint64_t v507 = 0LL;
  uint64_t v505 = 0x3FD999999999999ALL;
  __int128 v508 = xmmword_100423CD0;
  int v509 = 5;
  uint64_t v510 = 0x4000000000000000LL;
  int v511 = 10;
  uint64_t v512 = 0x4034000000000000LL;
  int v513 = 3;
  __int128 v514 = xmmword_100423D90;
  sub_100201644((uint64_t)v1170, &v515, (uint64_t)v486);
  sub_100202A04((uint64_t)v516, (int *)v1170, 1LL);
  sub_1002018A8(v1185, &xmmword_1007FA5F0, (uint64_t)v516);
  int v484 = 6;
  v455[0] = 8LL;
  v455[1] = 0xC04E800000000000LL;
  v1162[0] = -61.0;
  sub_10015ED64((uint64_t)v456, v1162, 1LL);
  __int128 v457 = xmmword_100423D50;
  uint64_t v458 = 0x4024000000000000LL;
  int v459 = 45;
  LOBYTE(v460) = 0;
  char v462 = 0;
  uint64_t v463 = 0LL;
  char v464 = 0;
  int v465 = 1;
  char v466 = 1;
  __int128 v467 = xmmword_100423D60;
  __int128 v468 = xmmword_100423D70;
  __int128 v469 = v10;
  unint64_t v470 = 0xC059000000000000LL;
  __int128 v471 = xmmword_100423D80;
  int32x2_t v472 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v473 = xmmword_100423CC0;
  uint64_t v475 = 0LL;
  uint64_t v476 = 0LL;
  uint64_t v474 = 0x3FD999999999999ALL;
  __int128 v477 = xmmword_100423CD0;
  int v478 = 5;
  uint64_t v479 = 0x4000000000000000LL;
  int v480 = 10;
  uint64_t v481 = 0x4034000000000000LL;
  int v482 = 3;
  __int128 v483 = xmmword_100423D90;
  sub_100201644((uint64_t)v1166, &v484, (uint64_t)v455);
  sub_100202A04((uint64_t)v485, (int *)v1166, 1LL);
  sub_1002018A8(v1186, &xmmword_1007FA608, (uint64_t)v485);
  int v453 = 3;
  v424[0] = 8LL;
  v424[1] = 0xC04F000000000000LL;
  v1158[0] = -62.0;
  sub_10015ED64((uint64_t)v425, v1158, 1LL);
  __int128 v426 = xmmword_100423D50;
  uint64_t v427 = 0x4024000000000000LL;
  int v428 = 45;
  LOBYTE(v429) = 0;
  char v431 = 0;
  uint64_t v432 = 0LL;
  char v433 = 0;
  int v434 = 1;
  char v435 = 1;
  __int128 v436 = xmmword_100423D60;
  __int128 v437 = xmmword_100423D70;
  __int128 v438 = v10;
  unint64_t v439 = 0xC059000000000000LL;
  __int128 v440 = xmmword_100423D80;
  int32x2_t v441 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v442 = xmmword_100423CC0;
  uint64_t v444 = 0LL;
  uint64_t v445 = 0LL;
  uint64_t v443 = 0x3FD999999999999ALL;
  __int128 v446 = xmmword_100423CD0;
  int v447 = 5;
  uint64_t v448 = 0x4000000000000000LL;
  int v449 = 10;
  uint64_t v450 = 0x4034000000000000LL;
  int v451 = 3;
  __int128 v452 = xmmword_100423D90;
  sub_100201644((uint64_t)v1162, &v453, (uint64_t)v424);
  sub_100202A04((uint64_t)v454, (int *)v1162, 1LL);
  sub_1002018A8(v1187, &xmmword_1007FA608, (uint64_t)v454);
  int v422 = 7;
  v393[0] = 8LL;
  v393[1] = 0xC04E800000000000LL;
  v1154[0] = -61.0;
  sub_10015ED64((uint64_t)v394, v1154, 1LL);
  __int128 v395 = xmmword_100423D50;
  uint64_t v396 = 0x4024000000000000LL;
  int v397 = 45;
  LOBYTE(v39std::ostream::~ostream(v2, v3 + 8) = 0;
  char v400 = 0;
  uint64_t v401 = 0LL;
  char v402 = 0;
  int v403 = 1;
  char v404 = 1;
  __int128 v405 = xmmword_100423D60;
  __int128 v406 = xmmword_100423D70;
  __int128 v407 = v10;
  unint64_t v408 = 0xC059000000000000LL;
  __int128 v409 = xmmword_100423D80;
  int32x2_t v410 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v411 = xmmword_100423CC0;
  uint64_t v413 = 0LL;
  uint64_t v414 = 0LL;
  uint64_t v412 = 0x3FD999999999999ALL;
  __int128 v415 = xmmword_100423CD0;
  int v416 = 5;
  uint64_t v417 = 0x4000000000000000LL;
  int v418 = 10;
  uint64_t v419 = 0x4034000000000000LL;
  int v420 = 3;
  __int128 v421 = xmmword_100423D90;
  sub_100201644((uint64_t)v1158, &v422, (uint64_t)v393);
  sub_100202A04((uint64_t)v423, (int *)v1158, 1LL);
  sub_1002018A8(v1188, &xmmword_1007FA608, (uint64_t)v423);
  int v391 = 6;
  v362[0] = 8LL;
  v362[1] = 0xC04E800000000000LL;
  v1150[0] = -61.0;
  sub_10015ED64((uint64_t)v363, v1150, 1LL);
  __int128 v364 = xmmword_100423D50;
  uint64_t v365 = 0x4024000000000000LL;
  int v366 = 45;
  LOBYTE(v367) = 0;
  char v369 = 0;
  uint64_t v370 = 0LL;
  char v371 = 0;
  int v372 = 1;
  char v373 = 1;
  __int128 v374 = xmmword_100423D60;
  __int128 v375 = xmmword_100423D70;
  __int128 v376 = v10;
  unint64_t v377 = 0xC059000000000000LL;
  __int128 v378 = xmmword_100423D80;
  int32x2_t v379 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v380 = xmmword_100423CC0;
  uint64_t v382 = 0LL;
  uint64_t v383 = 0LL;
  uint64_t v381 = 0x3FD999999999999ALL;
  __int128 v384 = xmmword_100423CD0;
  int v385 = 5;
  uint64_t v386 = 0x4000000000000000LL;
  int v387 = 10;
  uint64_t v388 = 0x4034000000000000LL;
  int v389 = 3;
  __int128 v390 = xmmword_100423D90;
  sub_100201644((uint64_t)v1154, &v391, (uint64_t)v362);
  sub_100202A04((uint64_t)v392, (int *)v1154, 1LL);
  sub_1002018A8(v1189, &xmmword_1007FA620, (uint64_t)v392);
  int v360 = 3;
  v331[0] = 8LL;
  v331[1] = 0xC04F000000000000LL;
  v1146[0] = -62.0;
  sub_10015ED64((uint64_t)v332, v1146, 1LL);
  __int128 v333 = xmmword_100423D50;
  uint64_t v334 = 0x4024000000000000LL;
  int v335 = 45;
  LOBYTE(v336) = 0;
  char v338 = 0;
  uint64_t v339 = 0LL;
  char v340 = 0;
  int v341 = 1;
  char v342 = 1;
  __int128 v343 = xmmword_100423D60;
  __int128 v344 = xmmword_100423D70;
  __int128 v345 = v10;
  unint64_t v346 = 0xC059000000000000LL;
  __int128 v347 = xmmword_100423D80;
  int32x2_t v348 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v349 = xmmword_100423CC0;
  uint64_t v351 = 0LL;
  uint64_t v352 = 0LL;
  uint64_t v350 = 0x3FD999999999999ALL;
  __int128 v353 = xmmword_100423CD0;
  int v354 = 5;
  uint64_t v355 = 0x4000000000000000LL;
  int v356 = 10;
  uint64_t v357 = 0x4034000000000000LL;
  int v358 = 3;
  __int128 v359 = xmmword_100423D90;
  sub_100201644((uint64_t)v1150, &v360, (uint64_t)v331);
  sub_100202A04((uint64_t)v361, (int *)v1150, 1LL);
  sub_1002018A8(v1190, &xmmword_1007FA620, (uint64_t)v361);
  int v328 = 7;
  v299[0] = 8LL;
  v299[1] = 0xC04E800000000000LL;
  v1142[0] = -61.0;
  sub_10015ED64((uint64_t)v300, v1142, 1LL);
  __int128 v301 = xmmword_100423D50;
  uint64_t v302 = 0x4024000000000000LL;
  int v303 = 45;
  LOBYTE(v304) = 0;
  char v306 = 0;
  uint64_t v307 = 0LL;
  char v308 = 0;
  int v309 = 1;
  char v310 = 1;
  __int128 v311 = xmmword_100423D60;
  __int128 v312 = xmmword_100423D70;
  __int128 v313 = v10;
  unint64_t v314 = 0xC059000000000000LL;
  __int128 v315 = xmmword_100423D80;
  int32x2_t v316 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v317 = xmmword_100423CC0;
  uint64_t v319 = 0LL;
  uint64_t v320 = 0LL;
  uint64_t v318 = 0x3FD999999999999ALL;
  __int128 v321 = xmmword_100423CD0;
  int v322 = 5;
  uint64_t v323 = 0x4000000000000000LL;
  int v324 = 10;
  uint64_t v325 = 0x4034000000000000LL;
  int v326 = 3;
  __int128 v327 = xmmword_100423D90;
  sub_100201644((uint64_t)v1146, &v328, (uint64_t)v299);
  sub_100202A04((uint64_t)v329, (int *)v1146, 1LL);
  sub_1002018A8(v1191, &xmmword_1007FA620, (uint64_t)v329);
  int v296 = 6;
  v267[0] = 8LL;
  v267[1] = 0xC04E800000000000LL;
  v1138[0] = -61.0;
  sub_10015ED64((uint64_t)v268, v1138, 1LL);
  __int128 v269 = xmmword_100423D50;
  uint64_t v270 = 0x4024000000000000LL;
  int v271 = 45;
  LOBYTE(v272) = 0;
  char v274 = 0;
  uint64_t v275 = 0LL;
  char v276 = 0;
  int v277 = 1;
  char v278 = 1;
  __int128 v279 = xmmword_100423D60;
  __int128 v280 = xmmword_100423D70;
  __int128 v281 = v10;
  unint64_t v282 = 0xC059000000000000LL;
  __int128 v283 = xmmword_100423D80;
  int32x2_t v284 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v285 = xmmword_100423CC0;
  uint64_t v287 = 0LL;
  uint64_t v288 = 0LL;
  uint64_t v286 = 0x3FD999999999999ALL;
  __int128 v289 = xmmword_100423CD0;
  int v290 = 5;
  uint64_t v291 = 0x4000000000000000LL;
  int v292 = 10;
  uint64_t v293 = 0x4034000000000000LL;
  int v294 = 3;
  __int128 v295 = xmmword_100423D90;
  sub_100201644((uint64_t)v1142, &v296, (uint64_t)v267);
  sub_100202A04((uint64_t)v297, (int *)v1142, 1LL);
  sub_1002018A8(v1192, &xmmword_1007FA638, (uint64_t)v297);
  int v264 = 4;
  v235[0] = 8LL;
  v235[1] = 0xC04E800000000000LL;
  v1134[0] = -61.0;
  sub_10015ED64((uint64_t)v236, v1134, 1LL);
  __int128 v237 = xmmword_100423D50;
  uint64_t v238 = 0x4024000000000000LL;
  int v239 = 45;
  LOBYTE(v240) = 0;
  char v242 = 0;
  uint64_t v243 = 0LL;
  char v244 = 0;
  int v245 = 1;
  char v246 = 1;
  __int128 v247 = xmmword_100423D60;
  __int128 v248 = xmmword_100423D70;
  __int128 v249 = v10;
  unint64_t v250 = 0xC059000000000000LL;
  __int128 v251 = xmmword_100423D80;
  int32x2_t v252 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v253 = xmmword_100423CC0;
  uint64_t v255 = 0LL;
  uint64_t v256 = 0LL;
  uint64_t v254 = 0x3FD999999999999ALL;
  __int128 v257 = xmmword_100423CD0;
  int v258 = 5;
  uint64_t v259 = 0x4000000000000000LL;
  int v260 = 10;
  uint64_t v261 = 0x4034000000000000LL;
  int v262 = 3;
  __int128 v263 = xmmword_100423D90;
  sub_100201644((uint64_t)v1138, &v264, (uint64_t)v235);
  sub_100202A04((uint64_t)v265, (int *)v1138, 1LL);
  sub_1002018A8(v1193, &xmmword_1007FA638, (uint64_t)v265);
  int v232 = 7;
  v203[0] = 8LL;
  v203[1] = 0xC04E800000000000LL;
  v1130[0] = -61.0;
  sub_10015ED64((uint64_t)v204, v1130, 1LL);
  __int128 v205 = xmmword_100423D50;
  uint64_t v206 = 0x4024000000000000LL;
  int v207 = 45;
  LOBYTE(v20std::ostream::~ostream(v2, v3 + 8) = 0;
  char v210 = 0;
  uint64_t v211 = 0LL;
  char v212 = 0;
  int v213 = 1;
  char v214 = 1;
  __int128 v215 = xmmword_100423D60;
  __int128 v216 = xmmword_100423D70;
  __int128 v217 = v10;
  unint64_t v218 = 0xC059000000000000LL;
  __int128 v219 = xmmword_100423D80;
  int32x2_t v220 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v221 = xmmword_100423CC0;
  uint64_t v223 = 0LL;
  uint64_t v224 = 0LL;
  uint64_t v222 = 0x3FD999999999999ALL;
  __int128 v225 = xmmword_100423CD0;
  int v226 = 5;
  uint64_t v227 = 0x4000000000000000LL;
  int v228 = 10;
  uint64_t v229 = 0x4034000000000000LL;
  int v230 = 3;
  __int128 v231 = xmmword_100423D90;
  sub_100201644((uint64_t)v1134, &v232, (uint64_t)v203);
  sub_100202A04((uint64_t)v233, (int *)v1134, 1LL);
  sub_1002018A8(v1194, &xmmword_1007FA638, (uint64_t)v233);
  int v200 = 6;
  v171[0] = 8LL;
  v171[1] = 0xC04E800000000000LL;
  v1126[0] = -61.0;
  sub_10015ED64((uint64_t)v172, v1126, 1LL);
  __int128 v173 = xmmword_100423D50;
  uint64_t v174 = 0x4024000000000000LL;
  int v175 = 45;
  LOBYTE(v176) = 0;
  char v178 = 0;
  uint64_t v179 = 0LL;
  char v180 = 0;
  int v181 = 1;
  char v182 = 1;
  __int128 v183 = xmmword_100423D60;
  __int128 v184 = xmmword_100423D70;
  __int128 v185 = v10;
  unint64_t v186 = 0xC059000000000000LL;
  __int128 v187 = xmmword_100423D80;
  int32x2_t v188 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v189 = xmmword_100423CC0;
  uint64_t v191 = 0LL;
  uint64_t v192 = 0LL;
  uint64_t v190 = 0x3FD999999999999ALL;
  __int128 v193 = xmmword_100423CD0;
  int v194 = 5;
  uint64_t v195 = 0x4000000000000000LL;
  int v196 = 10;
  uint64_t v197 = 0x4034000000000000LL;
  int v198 = 3;
  __int128 v199 = xmmword_100423D90;
  sub_100201644((uint64_t)v1130, &v200, (uint64_t)v171);
  sub_100202A04((uint64_t)v201, (int *)v1130, 1LL);
  sub_1002018A8(v1195, &xmmword_1007FA668, (uint64_t)v201);
  int v168 = 4;
  v139[0] = 8LL;
  v139[1] = 0xC04E800000000000LL;
  v1122[0] = -61.0;
  sub_10015ED64((uint64_t)v140, v1122, 1LL);
  __int128 v141 = xmmword_100423D50;
  uint64_t v142 = 0x4024000000000000LL;
  int v143 = 45;
  LOBYTE(v144) = 0;
  char v146 = 0;
  uint64_t v147 = 0LL;
  char v148 = 0;
  int v149 = 1;
  char v150 = 1;
  __int128 v151 = xmmword_100423D60;
  __int128 v152 = xmmword_100423D70;
  __int128 v153 = v10;
  unint64_t v154 = 0xC059000000000000LL;
  __int128 v155 = xmmword_100423D80;
  int32x2_t v156 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v157 = xmmword_100423CC0;
  uint64_t v159 = 0LL;
  uint64_t v160 = 0LL;
  uint64_t v158 = 0x3FD999999999999ALL;
  __int128 v161 = xmmword_100423CD0;
  int v162 = 5;
  uint64_t v163 = 0x4000000000000000LL;
  int v164 = 10;
  uint64_t v165 = 0x4034000000000000LL;
  int v166 = 3;
  __int128 v167 = xmmword_100423D90;
  sub_100201644((uint64_t)v1126, &v168, (uint64_t)v139);
  sub_100202A04((uint64_t)v169, (int *)v1126, 1LL);
  sub_1002018A8(v1196, &xmmword_1007FA668, (uint64_t)v169);
  int v136 = 7;
  v107[0] = 8LL;
  v107[1] = 0xC04E800000000000LL;
  v1118[0] = -61.0;
  sub_10015ED64((uint64_t)v108, v1118, 1LL);
  __int128 v109 = xmmword_100423D50;
  uint64_t v110 = 0x4024000000000000LL;
  int v111 = 45;
  LOBYTE(v112) = 0;
  char v114 = 0;
  uint64_t v115 = 0LL;
  char v116 = 0;
  int v117 = 1;
  char v118 = 1;
  __int128 v119 = xmmword_100423D60;
  __int128 v120 = xmmword_100423D70;
  __int128 v121 = v10;
  unint64_t v122 = 0xC059000000000000LL;
  __int128 v123 = xmmword_100423D80;
  int32x2_t v124 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v125 = xmmword_100423CC0;
  uint64_t v127 = 0LL;
  uint64_t v128 = 0LL;
  uint64_t v126 = 0x3FD999999999999ALL;
  __int128 v129 = xmmword_100423CD0;
  int v130 = 5;
  uint64_t v131 = 0x4000000000000000LL;
  int v132 = 10;
  uint64_t v133 = 0x4034000000000000LL;
  int v134 = 3;
  __int128 v135 = xmmword_100423D90;
  sub_100201644((uint64_t)v1122, &v136, (uint64_t)v107);
  sub_100202A04((uint64_t)v137, (int *)v1122, 1LL);
  sub_1002018A8(v1197, &xmmword_1007FA668, (uint64_t)v137);
  int v104 = 6;
  v75[0] = 8LL;
  v75[1] = 0xC04E800000000000LL;
  v1114[0] = -61.0;
  sub_10015ED64((uint64_t)v76, v1114, 1LL);
  __int128 v77 = xmmword_100423D50;
  uint64_t v78 = 0x4024000000000000LL;
  int v79 = 45;
  LOBYTE(v80) = 0;
  char v82 = 0;
  uint64_t v83 = 0LL;
  char v84 = 0;
  int v85 = 1;
  char v86 = 1;
  __int128 v87 = xmmword_100423D60;
  __int128 v88 = xmmword_100423D70;
  __int128 v89 = v10;
  unint64_t v90 = 0xC059000000000000LL;
  __int128 v91 = xmmword_100423D80;
  int32x2_t v92 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v93 = xmmword_100423CC0;
  uint64_t v95 = 0LL;
  uint64_t v96 = 0LL;
  uint64_t v94 = 0x3FD999999999999ALL;
  __int128 v97 = xmmword_100423CD0;
  int v98 = 5;
  uint64_t v99 = 0x4000000000000000LL;
  int v100 = 10;
  uint64_t v101 = 0x4034000000000000LL;
  int v102 = 3;
  __int128 v103 = xmmword_100423D90;
  sub_100201644((uint64_t)v1118, &v104, (uint64_t)v75);
  sub_100202A04((uint64_t)v105, (int *)v1118, 1LL);
  sub_1002018A8(v1198, &xmmword_1007FA680, (uint64_t)v105);
  int v72 = 4;
  v43[0] = 8LL;
  v43[1] = 0xC04E800000000000LL;
  v1110[0] = -61.0;
  sub_10015ED64((uint64_t)v44, v1110, 1LL);
  __int128 v45 = xmmword_100423D50;
  uint64_t v46 = 0x4024000000000000LL;
  int v47 = 45;
  LOBYTE(v4std::ostream::~ostream(v2, v3 + 8) = 0;
  char v50 = 0;
  uint64_t v51 = 0LL;
  char v52 = 0;
  int v53 = 1;
  char v54 = 1;
  __int128 v55 = xmmword_100423D60;
  __int128 v56 = xmmword_100423D70;
  __int128 v57 = v10;
  unint64_t v58 = 0xC059000000000000LL;
  __int128 v59 = xmmword_100423D80;
  int32x2_t v60 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v61 = xmmword_100423CC0;
  uint64_t v63 = 0LL;
  uint64_t v64 = 0LL;
  uint64_t v62 = 0x3FD999999999999ALL;
  __int128 v65 = xmmword_100423CD0;
  int v66 = 5;
  uint64_t v67 = 0x4000000000000000LL;
  int v68 = 10;
  uint64_t v69 = 0x4034000000000000LL;
  int v70 = 3;
  __int128 v71 = xmmword_100423D90;
  sub_100201644((uint64_t)v1114, &v72, (uint64_t)v43);
  sub_100202A04((uint64_t)v73, (int *)v1114, 1LL);
  sub_1002018A8(v1199, &xmmword_1007FA680, (uint64_t)v73);
  int v40 = 7;
  v11[0] = 8LL;
  v11[1] = 0xC04E800000000000LL;
  double v1109 = -61.0;
  sub_10015ED64((uint64_t)v12, &v1109, 1LL);
  __int128 v13 = xmmword_100423D50;
  uint64_t v14 = 0x4024000000000000LL;
  int v15 = 45;
  LOBYTE(__p) = 0;
  char v18 = 0;
  uint64_t v19 = 0LL;
  char v20 = 0;
  int v21 = 1;
  char v22 = 1;
  __int128 v23 = xmmword_100423D60;
  __int128 v24 = xmmword_100423D70;
  __int128 v25 = v10;
  unint64_t v26 = 0xC059000000000000LL;
  __int128 v27 = xmmword_100423D80;
  int32x2_t v28 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v29 = xmmword_100423CC0;
  uint64_t v31 = 0LL;
  uint64_t v32 = 0LL;
  uint64_t v30 = 0x3FD999999999999ALL;
  __int128 v33 = xmmword_100423CD0;
  int v34 = 5;
  uint64_t v35 = 0x4000000000000000LL;
  int v36 = 10;
  uint64_t v37 = 0x4034000000000000LL;
  int v38 = 3;
  __int128 v39 = xmmword_100423D90;
  sub_100201644((uint64_t)v1110, &v40, (uint64_t)v11);
  sub_100202A04((uint64_t)v41, (int *)v1110, 1LL);
  sub_1002018A8(v1200, &xmmword_1007FA680, (uint64_t)v41);
  sub_100204184((uint64_t)v579, v1183, 18LL);
  int v1292 = 4;
  sub_1002043B8(v1293, v579);
  sub_100204490((uint64_t)&unk_100800818, &v1288, 3LL);
  for (uint64_t i = 0LL; i != -12; i -= 4LL)
    sub_1002040FC((uint64_t)&v1293[i], (void *)v1293[i + 1]);
  sub_1002040FC((uint64_t)v579, v579[1]);
  uint64_t v6 = 864LL;
  do
  {
    sub_100202980((uint64_t)&v1182[v6 + 24], *(void **)&v1182[v6 + 32]);
    v6 -= 48LL;
  }

  while (v6);
  sub_100202980((uint64_t)v41, v42);
  if (v1113 && v1112 < 0) {
    operator delete(v1111[7]);
  }
  sub_100034A98((uint64_t)v1111, v1111[1]);
  if (v18 && v17 < 0) {
    operator delete(__p);
  }
  sub_100034A98((uint64_t)v12, v12[1]);
  sub_100202980((uint64_t)v73, v74);
  if (v1117 && v1116 < 0) {
    operator delete(v1115[7]);
  }
  sub_100034A98((uint64_t)v1115, v1115[1]);
  if (v50 && v49 < 0) {
    operator delete(v48);
  }
  sub_100034A98((uint64_t)v44, v44[1]);
  sub_100202980((uint64_t)v105, v106);
  if (v1121 && v1120 < 0) {
    operator delete(v1119[7]);
  }
  sub_100034A98((uint64_t)v1119, v1119[1]);
  if (v82 && v81 < 0) {
    operator delete(v80);
  }
  sub_100034A98((uint64_t)v76, v76[1]);
  sub_100202980((uint64_t)v137, v138);
  if (v1125 && v1124 < 0) {
    operator delete(v1123[7]);
  }
  sub_100034A98((uint64_t)v1123, v1123[1]);
  if (v114 && v113 < 0) {
    operator delete(v112);
  }
  sub_100034A98((uint64_t)v108, v108[1]);
  sub_100202980((uint64_t)v169, v170);
  if (v1129 && v1128 < 0) {
    operator delete(v1127[7]);
  }
  sub_100034A98((uint64_t)v1127, v1127[1]);
  if (v146 && v145 < 0) {
    operator delete(v144);
  }
  sub_100034A98((uint64_t)v140, v140[1]);
  sub_100202980((uint64_t)v201, v202);
  if (v1133 && v1132 < 0) {
    operator delete(v1131[7]);
  }
  sub_100034A98((uint64_t)v1131, v1131[1]);
  if (v178 && v177 < 0) {
    operator delete(v176);
  }
  sub_100034A98((uint64_t)v172, v172[1]);
  sub_100202980((uint64_t)v233, v234);
  if (v1137 && v1136 < 0) {
    operator delete(v1135[7]);
  }
  sub_100034A98((uint64_t)v1135, v1135[1]);
  if (v210 && v209 < 0) {
    operator delete(v208);
  }
  sub_100034A98((uint64_t)v204, v204[1]);
  sub_100202980((uint64_t)v265, v266);
  if (v1141 && v1140 < 0) {
    operator delete(v1139[7]);
  }
  sub_100034A98((uint64_t)v1139, v1139[1]);
  if (v242 && v241 < 0) {
    operator delete(v240);
  }
  sub_100034A98((uint64_t)v236, v236[1]);
  sub_100202980((uint64_t)v297, v298);
  if (v1145 && v1144 < 0) {
    operator delete(v1143[7]);
  }
  sub_100034A98((uint64_t)v1143, v1143[1]);
  if (v274 && v273 < 0) {
    operator delete(v272);
  }
  sub_100034A98((uint64_t)v268, v268[1]);
  sub_100202980((uint64_t)v329, v330);
  if (v1149 && v1148 < 0) {
    operator delete(v1147[7]);
  }
  sub_100034A98((uint64_t)v1147, v1147[1]);
  if (v306 && v305 < 0) {
    operator delete(v304);
  }
  sub_100034A98((uint64_t)v300, v300[1]);
  sub_100202980((uint64_t)v361, v361[1]);
  if (v1153 && v1152 < 0) {
    operator delete(v1151[7]);
  }
  sub_100034A98((uint64_t)v1151, v1151[1]);
  if (v338 && v337 < 0) {
    operator delete(v336);
  }
  sub_100034A98((uint64_t)v332, v332[1]);
  sub_100202980((uint64_t)v392, v392[1]);
  if (v1157 && v1156 < 0) {
    operator delete(v1155[7]);
  }
  sub_100034A98((uint64_t)v1155, v1155[1]);
  if (v369 && v368 < 0) {
    operator delete(v367);
  }
  sub_100034A98((uint64_t)v363, v363[1]);
  sub_100202980((uint64_t)v423, v423[1]);
  if (v1161 && v1160 < 0) {
    operator delete(v1159[7]);
  }
  sub_100034A98((uint64_t)v1159, v1159[1]);
  if (v400 && v399 < 0) {
    operator delete(v398);
  }
  sub_100034A98((uint64_t)v394, v394[1]);
  sub_100202980((uint64_t)v454, v454[1]);
  if (v1165 && v1164 < 0) {
    operator delete(v1163[7]);
  }
  sub_100034A98((uint64_t)v1163, v1163[1]);
  if (v431 && v430 < 0) {
    operator delete(v429);
  }
  sub_100034A98((uint64_t)v425, v425[1]);
  sub_100202980((uint64_t)v485, v485[1]);
  if (v1169 && v1168 < 0) {
    operator delete(v1167[7]);
  }
  sub_100034A98((uint64_t)v1167, v1167[1]);
  if (v462 && v461 < 0) {
    operator delete(v460);
  }
  sub_100034A98((uint64_t)v456, v456[1]);
  sub_100202980((uint64_t)v516, v516[1]);
  if (v1173 && v1172 < 0) {
    operator delete(v1171[7]);
  }
  sub_100034A98((uint64_t)v1171, v1171[1]);
  if (v493 && v492 < 0) {
    operator delete(v491);
  }
  sub_100034A98((uint64_t)v487, v487[1]);
  sub_100202980((uint64_t)v547, v547[1]);
  if (v1177 && v1176 < 0) {
    operator delete(v1175[7]);
  }
  sub_100034A98((uint64_t)v1175, v1175[1]);
  if (v524 && v523 < 0) {
    operator delete(v522);
  }
  sub_100034A98((uint64_t)v518, v518[1]);
  sub_100202980((uint64_t)v578, v578[1]);
  if (v1181 && v1180 < 0) {
    operator delete(v1179[7]);
  }
  sub_100034A98((uint64_t)v1179, v1179[1]);
  if (v555 && v554 < 0) {
    operator delete(v553);
  }
  sub_100034A98((uint64_t)v549, v549[1]);
  sub_1002040FC((uint64_t)v859, v859[1]);
  uint64_t v7 = 432LL;
  do
  {
    sub_100202980((uint64_t)&v1237[v7 + 24], *(void **)&v1237[v7 + 32]);
    v7 -= 48LL;
  }

  while (v7);
  sub_100202980((uint64_t)v610, v610[1]);
  if (v1204 && v1203 < 0) {
    operator delete(v1202[7]);
  }
  sub_100034A98((uint64_t)v1202, v1202[1]);
  if (v587 && v586 < 0) {
    operator delete(v585);
  }
  sub_100034A98((uint64_t)v581, v581[1]);
  sub_100202980((uint64_t)v641, v641[1]);
  if (v1208 && v1207 < 0) {
    operator delete(v1206[7]);
  }
  sub_100034A98((uint64_t)v1206, v1206[1]);
  if (v618 && v617 < 0) {
    operator delete(v616);
  }
  sub_100034A98((uint64_t)v612, v612[1]);
  sub_100202980((uint64_t)v672, v672[1]);
  if (v1212 && v1211 < 0) {
    operator delete(v1210[7]);
  }
  sub_100034A98((uint64_t)v1210, v1210[1]);
  if (v649 && v648 < 0) {
    operator delete(v647);
  }
  sub_100034A98((uint64_t)v643, v643[1]);
  sub_100202980((uint64_t)v703, v703[1]);
  if (v1216 && v1215 < 0) {
    operator delete(v1214[7]);
  }
  sub_100034A98((uint64_t)v1214, v1214[1]);
  if (v680 && v679 < 0) {
    operator delete(v678);
  }
  sub_100034A98((uint64_t)v674, v674[1]);
  sub_100202980((uint64_t)v734, v734[1]);
  if (v1220 && v1219 < 0) {
    operator delete(v1218[7]);
  }
  sub_100034A98((uint64_t)v1218, v1218[1]);
  if (v711 && v710 < 0) {
    operator delete(v709);
  }
  sub_100034A98((uint64_t)v705, v705[1]);
  sub_100202980((uint64_t)v765, v765[1]);
  if (v1224 && v1223 < 0) {
    operator delete(v1222[7]);
  }
  sub_100034A98((uint64_t)v1222, v1222[1]);
  if (v742 && v741 < 0) {
    operator delete(v740);
  }
  sub_100034A98((uint64_t)v736, v736[1]);
  sub_100202980((uint64_t)v796, v796[1]);
  if (v1228 && v1227 < 0) {
    operator delete(v1226[7]);
  }
  sub_100034A98((uint64_t)v1226, v1226[1]);
  if (v773 && v772 < 0) {
    operator delete(v771);
  }
  sub_100034A98((uint64_t)v767, v767[1]);
  sub_100202980((uint64_t)v827, v827[1]);
  if (v1232 && v1231 < 0) {
    operator delete(v1230[7]);
  }
  sub_100034A98((uint64_t)v1230, v1230[1]);
  if (v804 && v803 < 0) {
    operator delete(v802);
  }
  sub_100034A98((uint64_t)v798, v798[1]);
  sub_100202980((uint64_t)v858, v858[1]);
  if (v1236 && v1235 < 0) {
    operator delete(v1234[7]);
  }
  sub_100034A98((uint64_t)v1234, v1234[1]);
  if (v835 && v834 < 0) {
    operator delete(v833);
  }
  sub_100034A98((uint64_t)v829, v829[1]);
  sub_1002040FC((uint64_t)v1108, v1108[1]);
  uint64_t v8 = 384LL;
  do
  {
    sub_100202980((uint64_t)&v1279[v8 + 24], *(void **)&v1279[v8 + 32]);
    v8 -= 48LL;
  }

  while (v8);
  sub_100202980((uint64_t)v890, v890[1]);
  if (v1250 && v1249 < 0) {
    operator delete(v1248[7]);
  }
  sub_100034A98((uint64_t)v1248, v1248[1]);
  if (v867 && v866 < 0) {
    operator delete(v865);
  }
  sub_100034A98((uint64_t)v861, v861[1]);
  sub_100202980((uint64_t)v921, v921[1]);
  if (v1254 && v1253 < 0) {
    operator delete(v1252[7]);
  }
  sub_100034A98((uint64_t)v1252, v1252[1]);
  if (v898 && v897 < 0) {
    operator delete(v896);
  }
  sub_100034A98((uint64_t)v892, v892[1]);
  sub_100202980((uint64_t)v952, v952[1]);
  if (v1258 && v1257 < 0) {
    operator delete(v1256[7]);
  }
  sub_100034A98((uint64_t)v1256, v1256[1]);
  if (v929 && v928 < 0) {
    operator delete(v927);
  }
  sub_100034A98((uint64_t)v923, v923[1]);
  sub_100202980((uint64_t)v983, v983[1]);
  if (v1262 && v1261 < 0) {
    operator delete(v1260[7]);
  }
  sub_100034A98((uint64_t)v1260, v1260[1]);
  if (v960 && v959 < 0) {
    operator delete(v958);
  }
  sub_100034A98((uint64_t)v954, v954[1]);
  sub_100202980((uint64_t)v1014, v1014[1]);
  if (v1266 && v1265 < 0) {
    operator delete(v1264[7]);
  }
  sub_100034A98((uint64_t)v1264, v1264[1]);
  if (v991 && v990 < 0) {
    operator delete(v989);
  }
  sub_100034A98((uint64_t)v985, v985[1]);
  sub_100202980((uint64_t)v1045, v1045[1]);
  if (v1270 && v1269 < 0) {
    operator delete(v1268[7]);
  }
  sub_100034A98((uint64_t)v1268, v1268[1]);
  if (v1022 && v1021 < 0) {
    operator delete(v1020);
  }
  sub_100034A98((uint64_t)v1016, v1016[1]);
  sub_100202980((uint64_t)v1076, v1076[1]);
  if (v1274 && v1273 < 0) {
    operator delete(v1272[7]);
  }
  sub_100034A98((uint64_t)v1272, v1272[1]);
  if (v1053 && v1052 < 0) {
    operator delete(v1051);
  }
  sub_100034A98((uint64_t)v1047, v1047[1]);
  sub_100202980((uint64_t)v1107, v1107[1]);
  if (v1278 && v1277 < 0) {
    operator delete(v1276[7]);
  }
  sub_100034A98((uint64_t)v1276, v1276[1]);
  if (v1084 && v1083 < 0) {
    operator delete(v1082);
  }
  sub_100034A98((uint64_t)v1078, v1078[1]);
  return __cxa_atexit((void (*)(void *))sub_1001FE0EC, &unk_100800818, (void *)&_mh_execute_header);
}

void sub_100211150( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_Unwind_Exception *exception_objecta,uint64_t a58,uint64_t a59,char a60)
{
  for (uint64_t i = 0LL; i != -96; i -= 32LL)
    sub_1002040FC(v65 + i + 72, *(void **)(v65 + i + 80));
  sub_1002040FC((uint64_t)&STACK[0x1AE0], (void *)STACK[0x1AE8]);
  for (uint64_t j = 816LL; j != -48; j -= 48LL)
    sub_1001FE0B0((uint64_t)&STACK[0x4A28] + j);
  sub_100202980((uint64_t)&STACK[0x2E0], *(void **)(v60 + 336));
  sub_1001FDF64((uint64_t)&STACK[0x3318]);
  sub_1001FDEF8((uint64_t)&a60);
  sub_100202980((uint64_t)&STACK[0x448], *(void **)(v64 + 336));
  sub_1001FDF64((uint64_t)&STACK[0x3460]);
  sub_1001FDEF8((uint64_t)&STACK[0x300]);
  sub_100202980((uint64_t)&STACK[0x5B0], *(void **)(v63 + 336));
  sub_1001FDF64((uint64_t)&STACK[0x35A8]);
  sub_1001FDEF8((uint64_t)&STACK[0x468]);
  sub_100202980((uint64_t)&STACK[0x718], *(void **)(v62 + 336));
  sub_1001FDF64((uint64_t)&STACK[0x36F0]);
  sub_1001FDEF8((uint64_t)&STACK[0x5D0]);
  sub_100202980((uint64_t)&STACK[0x880], *(void **)(v61 + 336));
  sub_1001FDF64((uint64_t)&STACK[0x3838]);
  sub_1001FDEF8((uint64_t)&STACK[0x738]);
  sub_100202980((uint64_t)&STACK[0x9E8], (void *)STACK[0x9F0]);
  sub_1001FDF64((uint64_t)&STACK[0x3980]);
  sub_1001FDEF8((uint64_t)&STACK[0x8A0]);
  sub_100202980((uint64_t)&STACK[0xB50], (void *)STACK[0xB58]);
  sub_1001FDF64((uint64_t)&STACK[0x3AC8]);
  sub_1001FDEF8((uint64_t)&STACK[0xA08]);
  sub_100202980((uint64_t)&STACK[0xCB8], (void *)STACK[0xCC0]);
  sub_1001FDF64((uint64_t)&STACK[0x3C10]);
  sub_1001FDEF8((uint64_t)&STACK[0xB70]);
  sub_100202980((uint64_t)&STACK[0xE20], (void *)STACK[0xE28]);
  sub_1001FDF64((uint64_t)&STACK[0x3D58]);
  sub_1001FDEF8((uint64_t)&STACK[0xCD8]);
  sub_100202980((uint64_t)&STACK[0xF88], (void *)STACK[0xF90]);
  sub_1001FDF64((uint64_t)&STACK[0x3EA0]);
  sub_1001FDEF8((uint64_t)&STACK[0xE40]);
  sub_100202980((uint64_t)&STACK[0x10F0], (void *)STACK[0x10F8]);
  sub_1001FDF64((uint64_t)&STACK[0x3FE8]);
  sub_1001FDEF8((uint64_t)&STACK[0xFA8]);
  sub_100202980((uint64_t)&STACK[0x1258], (void *)STACK[0x1260]);
  sub_1001FDF64((uint64_t)&STACK[0x4130]);
  sub_1001FDEF8((uint64_t)&STACK[0x1110]);
  sub_100202980((uint64_t)&STACK[0x13C0], (void *)STACK[0x13C8]);
  sub_1001FDF64((uint64_t)&STACK[0x4278]);
  sub_1001FDEF8((uint64_t)&STACK[0x1278]);
  sub_100202980((uint64_t)&STACK[0x1528], (void *)STACK[0x1530]);
  sub_1001FDF64((uint64_t)&STACK[0x43C0]);
  sub_1001FDEF8((uint64_t)&STACK[0x13E0]);
  sub_100202980((uint64_t)&STACK[0x1690], (void *)STACK[0x1698]);
  sub_1001FDF64((uint64_t)&STACK[0x4508]);
  sub_1001FDEF8((uint64_t)&STACK[0x1548]);
  sub_100202980((uint64_t)&STACK[0x17F8], (void *)STACK[0x1800]);
  sub_1001FDF64((uint64_t)&STACK[0x4650]);
  sub_1001FDEF8((uint64_t)&STACK[0x16B0]);
  sub_100202980((uint64_t)&STACK[0x1960], (void *)STACK[0x1968]);
  sub_1001FDF64((uint64_t)&STACK[0x4798]);
  sub_1001FDEF8((uint64_t)&STACK[0x1818]);
  sub_100202980((uint64_t)&STACK[0x1AC8], (void *)STACK[0x1AD0]);
  sub_1001FDF64((uint64_t)&STACK[0x48E0]);
  sub_1001FDEF8((uint64_t)&STACK[0x1980]);
  sub_1002040FC((uint64_t)&STACK[0x27A0], (void *)STACK[0x27A8]);
  for (uint64_t k = 384LL; k != -48; k -= 48LL)
    sub_1001FE0B0((uint64_t)&STACK[0x5910] + k);
  sub_100202980((uint64_t)&STACK[0x1C48], (void *)STACK[0x1C50]);
  sub_1001FDF64((uint64_t)&STACK[0x4D88]);
  sub_1001FDEF8((uint64_t)&STACK[0x1B00]);
  sub_100202980((uint64_t)&STACK[0x1DB0], (void *)STACK[0x1DB8]);
  sub_1001FDF64((uint64_t)&STACK[0x4ED0]);
  sub_1001FDEF8((uint64_t)&STACK[0x1C68]);
  sub_100202980((uint64_t)&STACK[0x1F18], (void *)STACK[0x1F20]);
  sub_1001FDF64((uint64_t)&STACK[0x5018]);
  sub_1001FDEF8((uint64_t)&STACK[0x1DD0]);
  sub_100202980((uint64_t)&STACK[0x2080], (void *)STACK[0x2088]);
  sub_1001FDF64((uint64_t)&STACK[0x5160]);
  sub_1001FDEF8((uint64_t)&STACK[0x1F38]);
  sub_100202980((uint64_t)&STACK[0x21E8], (void *)STACK[0x21F0]);
  sub_1001FDF64((uint64_t)&STACK[0x52A8]);
  sub_1001FDEF8((uint64_t)&STACK[0x20A0]);
  sub_100202980((uint64_t)&STACK[0x2350], (void *)STACK[0x2358]);
  sub_1001FDF64((uint64_t)&STACK[0x53F0]);
  sub_1001FDEF8((uint64_t)&STACK[0x2208]);
  sub_100202980((uint64_t)&STACK[0x24B8], (void *)STACK[0x24C0]);
  sub_1001FDF64((uint64_t)&STACK[0x5538]);
  sub_1001FDEF8((uint64_t)&STACK[0x2370]);
  sub_100202980((uint64_t)&STACK[0x2620], (void *)STACK[0x2628]);
  sub_1001FDF64((uint64_t)&STACK[0x5680]);
  sub_1001FDEF8((uint64_t)&STACK[0x24D8]);
  sub_100202980((uint64_t)&STACK[0x2788], (void *)STACK[0x2790]);
  sub_1001FDF64((uint64_t)&STACK[0x57C8]);
  sub_1001FDEF8((uint64_t)&STACK[0x2640]);
  sub_1002040FC((uint64_t)&STACK[0x32F8], (void *)STACK[0x3300]);
  for (uint64_t m = 336LL; m != -48; m -= 48LL)
    sub_1001FE0B0((uint64_t)&STACK[0x6500] + m);
  sub_100202980((uint64_t)&STACK[0x2908], (void *)STACK[0x2910]);
  sub_1001FDF64((uint64_t)&STACK[0x5AC0]);
  sub_1001FDEF8((uint64_t)&STACK[0x27C0]);
  sub_100202980((uint64_t)&STACK[0x2A70], (void *)STACK[0x2A78]);
  sub_1001FDF64((uint64_t)&STACK[0x5C08]);
  sub_1001FDEF8((uint64_t)&STACK[0x2928]);
  sub_100202980((uint64_t)&STACK[0x2BD8], (void *)STACK[0x2BE0]);
  sub_1001FDF64((uint64_t)&STACK[0x5D50]);
  sub_1001FDEF8((uint64_t)&STACK[0x2A90]);
  sub_100202980((uint64_t)&STACK[0x2D40], (void *)STACK[0x2D48]);
  sub_1001FDF64((uint64_t)&STACK[0x5E98]);
  sub_1001FDEF8((uint64_t)&STACK[0x2BF8]);
  sub_100202980((uint64_t)&STACK[0x2EA8], (void *)STACK[0x2EB0]);
  sub_1001FDF64((uint64_t)&STACK[0x5FE0]);
  sub_1001FDEF8((uint64_t)&STACK[0x2D60]);
  sub_100202980((uint64_t)&STACK[0x3010], (void *)STACK[0x3018]);
  sub_1001FDF64((uint64_t)&STACK[0x6128]);
  sub_1001FDEF8((uint64_t)&STACK[0x2EC8]);
  sub_100202980((uint64_t)&STACK[0x3178], (void *)STACK[0x3180]);
  sub_1001FDF64((uint64_t)&STACK[0x6270]);
  sub_1001FDEF8((uint64_t)&STACK[0x3030]);
  sub_100202980((uint64_t)&STACK[0x32E0], (void *)STACK[0x32E8]);
  sub_1001FDF64((uint64_t)&STACK[0x63B8]);
  sub_1001FDEF8((uint64_t)&STACK[0x3198]);
  _Unwind_Resume(a1);
}

void sub_100211980()
{
}

void sub_100211994()
{
}

void sub_1002119A8()
{
}

void sub_1002119C0()
{
}

void sub_1002119D4()
{
}

void sub_1002119E8()
{
}

void sub_100211A00()
{
}

void sub_100211A14()
{
}

void sub_100211A28()
{
}

void sub_100211A40()
{
}

void sub_100211A54()
{
}

void sub_100211A68()
{
}

void sub_100211A80()
{
}

void sub_100211A94()
{
}

void sub_100211AA8()
{
}

void sub_100211AC0()
{
}

void sub_100211AD4()
{
}

void sub_100211AE8()
{
}

void sub_100211B00()
{
}

void sub_100211B14()
{
}

void sub_100211B28()
{
}

void sub_100211B40()
{
}

void sub_100211B54()
{
}

void sub_100211B68()
{
}

void sub_100211B80()
{
}

void sub_100211B94()
{
}

void sub_100211BA8()
{
}

void sub_100211BC0()
{
}

void sub_100211BD4()
{
}

void sub_100211BE8()
{
}

void sub_100211C00()
{
}

void sub_100211C14()
{
}

void sub_100211C28()
{
}

void sub_100211C40()
{
}

void sub_100211C54()
{
}

void sub_100211C68()
{
}

void sub_100211C80()
{
}

void sub_100211C94()
{
}

void sub_100211CA8()
{
}

void sub_100211CC0()
{
}

void sub_100211CD4()
{
}

void sub_100211CE8()
{
}

void sub_100211D08()
{
}

void sub_100211D1C()
{
}

void sub_100211D30()
{
}

void sub_100211D48()
{
}

void sub_100211D5C()
{
}

void sub_100211D70()
{
}

void sub_100211D98()
{
}

void sub_100211DB4()
{
}

void sub_100211DD8()
{
}

void sub_100211DE8()
{
}

void sub_100211DF8()
{
}

void sub_100211E0C()
{
}

void sub_100211E20()
{
}

void sub_100211E34()
{
}

void sub_100211E4C()
{
}

void sub_100211E60()
{
}

void sub_100211E74()
{
}

void sub_100211E8C()
{
}

void sub_100211EA0()
{
}

void sub_100211EB4()
{
}

void sub_100211ECC()
{
}

void sub_100211EE0()
{
}

void sub_100211EF4()
{
}

void sub_100211F0C()
{
}

void sub_100211F20()
{
}

void sub_100211F34()
{
}

void sub_100211F4C()
{
}

void sub_100211F60()
{
}

void sub_100211F74()
{
}

void sub_100211F8C()
{
}

void sub_100211FA0()
{
}

void sub_100211FB4()
{
}

void sub_100211FCC()
{
}

void sub_100211FE0()
{
}

void sub_100211FF4()
{
}

void sub_100212018()
{
}

void sub_100212034()
{
}

void sub_100212058()
{
}

void sub_10021206C()
{
}

void sub_100212080()
{
}

void sub_100212098()
{
}

void sub_1002120B0()
{
}

void sub_1002120C8()
{
}

void sub_1002120E4()
{
}

void sub_1002120FC()
{
}

void sub_100212114()
{
}

void sub_100212130()
{
}

void sub_100212148()
{
}

void sub_100212160()
{
}

void sub_100212178()
{
}

void sub_10021218C()
{
}

void sub_1002121A0()
{
}

void sub_1002121B8()
{
}

void sub_1002121CC()
{
}

void sub_1002121E0()
{
}

void sub_1002121F8()
{
}

void sub_10021220C()
{
}

void sub_100212220()
{
}

void sub_100212238()
{
}

void sub_10021224C()
{
}

void sub_100212260()
{
}

void sub_100212288()
{
}

void sub_1002122A4()
{
}

void sub_1002122B8()
{
}

uint64_t sub_1002122C0()
{
  v578[0] = 0x300000010LL;
  v578[1] = 0xC044000000000000LL;
  v700[0] = (const void *)0xC044000000000000LL;
  sub_10015ED64((uint64_t)v579, (double *)v700, 1LL);
  __int128 v580 = xmmword_100423D50;
  uint64_t v581 = 0x4024000000000000LL;
  int v582 = 45;
  LOBYTE(v583) = 0;
  char v585 = 0;
  uint64_t v586 = 0LL;
  char v587 = 0;
  int v588 = 1;
  char v589 = 1;
  __int128 v590 = xmmword_100423D60;
  __int128 v591 = xmmword_100423D70;
  __asm { FMOV            V0.2D, #1.0 }

  __int128 v7 = _Q0;
  __int128 v592 = _Q0;
  unint64_t v593 = 0xC059000000000000LL;
  __int128 v594 = xmmword_100423D80;
  int32x2_t v595 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v596 = xmmword_100423CC0;
  uint64_t v598 = 0LL;
  uint64_t v599 = 0LL;
  uint64_t v597 = 0x3FD999999999999ALL;
  __int128 v600 = xmmword_100423CD0;
  int v601 = 5;
  uint64_t v602 = 0x4000000000000000LL;
  int v603 = 10;
  uint64_t v604 = 0x4034000000000000LL;
  int v605 = 3;
  __int128 v606 = xmmword_100423D90;
  sub_10020171C((char *)v705, &qword_1007FA710, (uint64_t)v578);
  sub_100203340((uint64_t)v607, v705, 1LL);
  sub_100201830(v711, &xmmword_1007FA3E0, v607);
  v548[0] = 0x300000010LL;
  v548[1] = 0xC044000000000000LL;
  v695[0] = (const void *)0xC044000000000000LL;
  sub_10015ED64((uint64_t)v549, (double *)v695, 1LL);
  __int128 v550 = xmmword_100423D50;
  uint64_t v551 = 0x4024000000000000LL;
  int v552 = 45;
  LOBYTE(v553) = 0;
  char v555 = 0;
  uint64_t v556 = 0LL;
  char v557 = 0;
  int v558 = 1;
  char v559 = 1;
  __int128 v560 = xmmword_100423D60;
  __int128 v561 = xmmword_100423D70;
  __int128 v562 = v7;
  unint64_t v563 = 0xC059000000000000LL;
  __int128 v564 = xmmword_100423D80;
  int32x2_t v565 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v566 = xmmword_100423CC0;
  uint64_t v568 = 0LL;
  uint64_t v569 = 0LL;
  uint64_t v567 = 0x3FD999999999999ALL;
  __int128 v570 = xmmword_100423CD0;
  int v571 = 5;
  uint64_t v572 = 0x4000000000000000LL;
  int v573 = 10;
  uint64_t v574 = 0x4034000000000000LL;
  int v575 = 3;
  __int128 v576 = xmmword_100423D90;
  sub_10020171C((char *)v700, &qword_1007FA710, (uint64_t)v548);
  sub_100203340((uint64_t)v577, v700, 1LL);
  sub_100201830(v712, &xmmword_1007FA3F8, v577);
  v518[0] = 0x300000010LL;
  v518[1] = 0xC044800000000000LL;
  v690[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v519, (double *)v690, 1LL);
  __int128 v520 = xmmword_100423D50;
  uint64_t v521 = 0x4024000000000000LL;
  int v522 = 45;
  LOBYTE(v523) = 0;
  char v525 = 0;
  uint64_t v526 = 0LL;
  char v527 = 0;
  int v528 = 1;
  char v529 = 1;
  __int128 v530 = xmmword_100423D60;
  __int128 v531 = xmmword_100423D70;
  __int128 v532 = v7;
  unint64_t v533 = 0xC059000000000000LL;
  __int128 v534 = xmmword_100423D80;
  int32x2_t v535 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v536 = xmmword_100423CC0;
  uint64_t v538 = 0LL;
  uint64_t v539 = 0LL;
  uint64_t v537 = 0x3FD999999999999ALL;
  __int128 v540 = xmmword_100423CD0;
  int v541 = 5;
  uint64_t v542 = 0x4000000000000000LL;
  int v543 = 10;
  uint64_t v544 = 0x4034000000000000LL;
  int v545 = 3;
  __int128 v546 = xmmword_100423D90;
  sub_10020171C((char *)v695, &qword_1007FA710, (uint64_t)v518);
  sub_100203340((uint64_t)v547, v695, 1LL);
  sub_100201830(v713, &xmmword_1007FA410, v547);
  v488[0] = 0x300000010LL;
  v488[1] = 0xC044800000000000LL;
  v685[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v489, (double *)v685, 1LL);
  __int128 v490 = xmmword_100423D50;
  uint64_t v491 = 0x4024000000000000LL;
  int v492 = 45;
  LOBYTE(v493) = 0;
  char v495 = 0;
  uint64_t v496 = 0LL;
  char v497 = 0;
  int v498 = 1;
  char v499 = 1;
  __int128 v500 = xmmword_100423D60;
  __int128 v501 = xmmword_100423D70;
  __int128 v502 = v7;
  unint64_t v503 = 0xC059000000000000LL;
  __int128 v504 = xmmword_100423D80;
  int32x2_t v505 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v506 = xmmword_100423CC0;
  uint64_t v508 = 0LL;
  uint64_t v509 = 0LL;
  uint64_t v507 = 0x3FD999999999999ALL;
  __int128 v510 = xmmword_100423CD0;
  int v511 = 5;
  uint64_t v512 = 0x4000000000000000LL;
  int v513 = 10;
  uint64_t v514 = 0x4034000000000000LL;
  int v515 = 3;
  __int128 v516 = xmmword_100423D90;
  sub_10020171C((char *)v690, &qword_1007FA710, (uint64_t)v488);
  sub_100203340((uint64_t)v517, v690, 1LL);
  sub_100201830(v714, &xmmword_1007FA428, v517);
  v458[0] = 0x300000010LL;
  v458[1] = 0xC044000000000000LL;
  v680[0] = (const void *)0xC044000000000000LL;
  sub_10015ED64((uint64_t)v459, (double *)v680, 1LL);
  __int128 v460 = xmmword_100423D50;
  uint64_t v461 = 0x4024000000000000LL;
  int v462 = 45;
  LOBYTE(v463) = 0;
  char v465 = 0;
  uint64_t v466 = 0LL;
  char v467 = 0;
  int v468 = 1;
  char v469 = 1;
  __int128 v470 = xmmword_100423D60;
  __int128 v471 = xmmword_100423D70;
  __int128 v472 = v7;
  unint64_t v473 = 0xC059000000000000LL;
  __int128 v474 = xmmword_100423D80;
  int32x2_t v475 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v476 = xmmword_100423CC0;
  uint64_t v478 = 0LL;
  uint64_t v479 = 0LL;
  uint64_t v477 = 0x3FD999999999999ALL;
  __int128 v480 = xmmword_100423CD0;
  int v481 = 5;
  uint64_t v482 = 0x4000000000000000LL;
  int v483 = 10;
  uint64_t v484 = 0x4034000000000000LL;
  int v485 = 3;
  __int128 v486 = xmmword_100423D90;
  sub_10020171C((char *)v685, &qword_1007FA710, (uint64_t)v458);
  sub_100203340((uint64_t)v487, v685, 1LL);
  sub_100201830(v715, &xmmword_1007FA440, v487);
  v428[0] = 0x300000010LL;
  v428[1] = 0xC044800000000000LL;
  v675[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v429, (double *)v675, 1LL);
  __int128 v430 = xmmword_100423D50;
  uint64_t v431 = 0x4024000000000000LL;
  int v432 = 45;
  LOBYTE(v433) = 0;
  char v435 = 0;
  uint64_t v436 = 0LL;
  char v437 = 0;
  int v438 = 1;
  char v439 = 1;
  __int128 v440 = xmmword_100423D60;
  __int128 v441 = xmmword_100423D70;
  __int128 v442 = v7;
  unint64_t v443 = 0xC059000000000000LL;
  __int128 v444 = xmmword_100423D80;
  int32x2_t v445 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v446 = xmmword_100423CC0;
  uint64_t v448 = 0LL;
  uint64_t v449 = 0LL;
  uint64_t v447 = 0x3FD999999999999ALL;
  __int128 v450 = xmmword_100423CD0;
  int v451 = 5;
  uint64_t v452 = 0x4000000000000000LL;
  int v453 = 10;
  uint64_t v454 = 0x4034000000000000LL;
  int v455 = 3;
  __int128 v456 = xmmword_100423D90;
  sub_10020171C((char *)v680, &qword_1007FA710, (uint64_t)v428);
  sub_100203340((uint64_t)v457, v680, 1LL);
  sub_100201830(v716, &xmmword_1007FA458, v457);
  v398[0] = 0x300000010LL;
  v398[1] = 0xC044800000000000LL;
  v670[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v399, (double *)v670, 1LL);
  __int128 v400 = xmmword_100423D50;
  uint64_t v401 = 0x4024000000000000LL;
  int v402 = 45;
  LOBYTE(v403) = 0;
  char v405 = 0;
  uint64_t v406 = 0LL;
  char v407 = 0;
  int v408 = 1;
  char v409 = 1;
  __int128 v410 = xmmword_100423D60;
  __int128 v411 = xmmword_100423D70;
  __int128 v412 = v7;
  unint64_t v413 = 0xC059000000000000LL;
  __int128 v414 = xmmword_100423D80;
  int32x2_t v415 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v416 = xmmword_100423CC0;
  uint64_t v418 = 0LL;
  uint64_t v419 = 0LL;
  uint64_t v417 = 0x3FD999999999999ALL;
  __int128 v420 = xmmword_100423CD0;
  int v421 = 5;
  uint64_t v422 = 0x4000000000000000LL;
  int v423 = 10;
  uint64_t v424 = 0x4034000000000000LL;
  int v425 = 3;
  __int128 v426 = xmmword_100423D90;
  sub_10020171C((char *)v675, &qword_1007FA710, (uint64_t)v398);
  sub_100203340((uint64_t)v427, v675, 1LL);
  sub_100201830(v717, &xmmword_1007FA470, v427);
  v368[0] = 0x300000010LL;
  v368[1] = 0xC044800000000000LL;
  v665[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v369, (double *)v665, 1LL);
  __int128 v370 = xmmword_100423D50;
  uint64_t v371 = 0x4024000000000000LL;
  int v372 = 45;
  LOBYTE(v373) = 0;
  char v375 = 0;
  uint64_t v376 = 0LL;
  char v377 = 0;
  int v378 = 1;
  char v379 = 1;
  __int128 v380 = xmmword_100423D60;
  __int128 v381 = xmmword_100423D70;
  __int128 v382 = v7;
  unint64_t v383 = 0xC059000000000000LL;
  __int128 v384 = xmmword_100423D80;
  int32x2_t v385 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v386 = xmmword_100423CC0;
  uint64_t v388 = 0LL;
  uint64_t v389 = 0LL;
  uint64_t v387 = 0x3FD999999999999ALL;
  __int128 v390 = xmmword_100423CD0;
  int v391 = 5;
  uint64_t v392 = 0x4000000000000000LL;
  int v393 = 10;
  uint64_t v394 = 0x4034000000000000LL;
  int v395 = 3;
  __int128 v396 = xmmword_100423D90;
  sub_10020171C((char *)v670, &qword_1007FA710, (uint64_t)v368);
  sub_100203340((uint64_t)v397, v670, 1LL);
  sub_100201830(v718, &xmmword_1007FA488, v397);
  v338[0] = 0x300000010LL;
  v338[1] = 0xC044800000000000LL;
  v660[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v339, (double *)v660, 1LL);
  __int128 v340 = xmmword_100423D50;
  uint64_t v341 = 0x4024000000000000LL;
  int v342 = 45;
  LOBYTE(v343) = 0;
  char v345 = 0;
  uint64_t v346 = 0LL;
  char v347 = 0;
  int v348 = 1;
  char v349 = 1;
  __int128 v350 = xmmword_100423D60;
  __int128 v351 = xmmword_100423D70;
  __int128 v352 = v7;
  unint64_t v353 = 0xC059000000000000LL;
  __int128 v354 = xmmword_100423D80;
  int32x2_t v355 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v356 = xmmword_100423CC0;
  uint64_t v358 = 0LL;
  uint64_t v359 = 0LL;
  uint64_t v357 = 0x3FD999999999999ALL;
  __int128 v360 = xmmword_100423CD0;
  int v361 = 5;
  uint64_t v362 = 0x4000000000000000LL;
  int v363 = 10;
  uint64_t v364 = 0x4034000000000000LL;
  int v365 = 3;
  __int128 v366 = xmmword_100423D90;
  sub_10020171C((char *)v665, &qword_1007FA710, (uint64_t)v338);
  sub_100203340((uint64_t)v367, v665, 1LL);
  sub_100201830(v719, &xmmword_1007FA4A0, v367);
  v308[0] = 0x300000010LL;
  v308[1] = 0xC044800000000000LL;
  v655[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v309, (double *)v655, 1LL);
  __int128 v310 = xmmword_100423D50;
  uint64_t v311 = 0x4024000000000000LL;
  int v312 = 45;
  LOBYTE(v313) = 0;
  char v315 = 0;
  uint64_t v316 = 0LL;
  char v317 = 0;
  int v318 = 1;
  char v319 = 1;
  __int128 v320 = xmmword_100423D60;
  __int128 v321 = xmmword_100423D70;
  __int128 v322 = v7;
  unint64_t v323 = 0xC059000000000000LL;
  __int128 v324 = xmmword_100423D80;
  int32x2_t v325 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v326 = xmmword_100423CC0;
  uint64_t v328 = 0LL;
  uint64_t v329 = 0LL;
  uint64_t v327 = 0x3FD999999999999ALL;
  __int128 v330 = xmmword_100423CD0;
  int v331 = 5;
  uint64_t v332 = 0x4000000000000000LL;
  int v333 = 10;
  uint64_t v334 = 0x4034000000000000LL;
  int v335 = 3;
  __int128 v336 = xmmword_100423D90;
  sub_10020171C((char *)v660, &qword_1007FA710, (uint64_t)v308);
  sub_100203340((uint64_t)v337, v660, 1LL);
  sub_100201830(v720, &xmmword_1007FA4B8, v337);
  v278[0] = 0x300000010LL;
  v278[1] = 0xC044800000000000LL;
  v650[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v279, (double *)v650, 1LL);
  __int128 v280 = xmmword_100423D50;
  uint64_t v281 = 0x4024000000000000LL;
  int v282 = 45;
  LOBYTE(v283) = 0;
  char v285 = 0;
  uint64_t v286 = 0LL;
  char v287 = 0;
  int v288 = 1;
  char v289 = 1;
  __int128 v290 = xmmword_100423D60;
  __int128 v291 = xmmword_100423D70;
  __int128 v292 = v7;
  unint64_t v293 = 0xC059000000000000LL;
  __int128 v294 = xmmword_100423D80;
  int32x2_t v295 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v296 = xmmword_100423CC0;
  uint64_t v298 = 0LL;
  uint64_t v299 = 0LL;
  uint64_t v297 = 0x3FD999999999999ALL;
  __int128 v300 = xmmword_100423CD0;
  int v301 = 5;
  uint64_t v302 = 0x4000000000000000LL;
  int v303 = 10;
  uint64_t v304 = 0x4034000000000000LL;
  int v305 = 3;
  __int128 v306 = xmmword_100423D90;
  sub_10020171C((char *)v655, &qword_1007FA710, (uint64_t)v278);
  sub_100203340((uint64_t)v307, v655, 1LL);
  sub_100201830(v721, &xmmword_1007FA4D0, v307);
  v248[0] = 0x300000010LL;
  v248[1] = 0xC044800000000000LL;
  v645[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v249, (double *)v645, 1LL);
  __int128 v250 = xmmword_100423D50;
  uint64_t v251 = 0x4024000000000000LL;
  int v252 = 45;
  LOBYTE(v253) = 0;
  char v255 = 0;
  uint64_t v256 = 0LL;
  char v257 = 0;
  int v258 = 1;
  char v259 = 1;
  __int128 v260 = xmmword_100423D60;
  __int128 v261 = xmmword_100423D70;
  __int128 v262 = v7;
  unint64_t v263 = 0xC059000000000000LL;
  __int128 v264 = xmmword_100423D80;
  int32x2_t v265 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v266 = xmmword_100423CC0;
  uint64_t v268 = 0LL;
  uint64_t v269 = 0LL;
  uint64_t v267 = 0x3FD999999999999ALL;
  __int128 v270 = xmmword_100423CD0;
  int v271 = 5;
  uint64_t v272 = 0x4000000000000000LL;
  int v273 = 10;
  uint64_t v274 = 0x4034000000000000LL;
  int v275 = 3;
  __int128 v276 = xmmword_100423D90;
  sub_10020171C((char *)v650, &qword_1007FA710, (uint64_t)v248);
  sub_100203340((uint64_t)v277, v650, 1LL);
  sub_100201830(v722, &xmmword_1007FA4E8, v277);
  v218[0] = 0x300000010LL;
  v218[1] = 0xC044800000000000LL;
  v640[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v219, (double *)v640, 1LL);
  __int128 v220 = xmmword_100423D50;
  uint64_t v221 = 0x4024000000000000LL;
  int v222 = 45;
  LOBYTE(v223) = 0;
  char v225 = 0;
  uint64_t v226 = 0LL;
  char v227 = 0;
  int v228 = 1;
  char v229 = 1;
  __int128 v230 = xmmword_100423D60;
  __int128 v231 = xmmword_100423D70;
  __int128 v232 = v7;
  unint64_t v233 = 0xC059000000000000LL;
  __int128 v234 = xmmword_100423D80;
  int32x2_t v235 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v236 = xmmword_100423CC0;
  uint64_t v238 = 0LL;
  uint64_t v239 = 0LL;
  uint64_t v237 = 0x3FD999999999999ALL;
  __int128 v240 = xmmword_100423CD0;
  int v241 = 5;
  uint64_t v242 = 0x4000000000000000LL;
  int v243 = 10;
  uint64_t v244 = 0x4034000000000000LL;
  int v245 = 3;
  __int128 v246 = xmmword_100423D90;
  sub_10020171C((char *)v645, &qword_1007FA710, (uint64_t)v218);
  sub_100203340((uint64_t)v247, v645, 1LL);
  sub_100201830(v723, &xmmword_1007FA500, v247);
  v188[0] = 0x300000010LL;
  v188[1] = 0xC044800000000000LL;
  v635[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v189, (double *)v635, 1LL);
  __int128 v190 = xmmword_100423D50;
  uint64_t v191 = 0x4024000000000000LL;
  int v192 = 45;
  LOBYTE(v193) = 0;
  char v195 = 0;
  uint64_t v196 = 0LL;
  char v197 = 0;
  int v198 = 1;
  char v199 = 1;
  __int128 v200 = xmmword_100423D60;
  __int128 v201 = xmmword_100423D70;
  __int128 v202 = v7;
  unint64_t v203 = 0xC059000000000000LL;
  __int128 v204 = xmmword_100423D80;
  int32x2_t v205 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v206 = xmmword_100423CC0;
  uint64_t v208 = 0LL;
  uint64_t v209 = 0LL;
  uint64_t v207 = 0x3FD999999999999ALL;
  __int128 v210 = xmmword_100423CD0;
  int v211 = 5;
  uint64_t v212 = 0x4000000000000000LL;
  int v213 = 10;
  uint64_t v214 = 0x4034000000000000LL;
  int v215 = 3;
  __int128 v216 = xmmword_100423D90;
  sub_10020171C((char *)v640, &qword_1007FA710, (uint64_t)v188);
  sub_100203340((uint64_t)v217, v640, 1LL);
  sub_100201830(v724, &xmmword_1007FA518, v217);
  v158[0] = 0x300000010LL;
  v158[1] = 0xC044800000000000LL;
  v630[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v159, (double *)v630, 1LL);
  __int128 v160 = xmmword_100423D50;
  uint64_t v161 = 0x4024000000000000LL;
  int v162 = 45;
  LOBYTE(v163) = 0;
  char v165 = 0;
  uint64_t v166 = 0LL;
  char v167 = 0;
  int v168 = 1;
  char v169 = 1;
  __int128 v170 = xmmword_100423D60;
  __int128 v171 = xmmword_100423D70;
  __int128 v172 = v7;
  unint64_t v173 = 0xC059000000000000LL;
  __int128 v174 = xmmword_100423D80;
  int32x2_t v175 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v176 = xmmword_100423CC0;
  uint64_t v178 = 0LL;
  uint64_t v179 = 0LL;
  uint64_t v177 = 0x3FD999999999999ALL;
  __int128 v180 = xmmword_100423CD0;
  int v181 = 5;
  uint64_t v182 = 0x4000000000000000LL;
  int v183 = 10;
  uint64_t v184 = 0x4034000000000000LL;
  int v185 = 3;
  __int128 v186 = xmmword_100423D90;
  sub_10020171C((char *)v635, &qword_1007FA710, (uint64_t)v158);
  sub_100203340((uint64_t)v187, v635, 1LL);
  sub_100201830(v725, &xmmword_1007FA530, v187);
  v128[0] = 0x300000010LL;
  v128[1] = 0xC044800000000000LL;
  v625[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v129, (double *)v625, 1LL);
  __int128 v130 = xmmword_100423D50;
  uint64_t v131 = 0x4024000000000000LL;
  int v132 = 45;
  LOBYTE(v133) = 0;
  char v135 = 0;
  uint64_t v136 = 0LL;
  char v137 = 0;
  int v138 = 1;
  char v139 = 1;
  __int128 v140 = xmmword_100423D60;
  __int128 v141 = xmmword_100423D70;
  __int128 v142 = v7;
  unint64_t v143 = 0xC059000000000000LL;
  __int128 v144 = xmmword_100423D80;
  int32x2_t v145 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v146 = xmmword_100423CC0;
  uint64_t v148 = 0LL;
  uint64_t v149 = 0LL;
  uint64_t v147 = 0x3FD999999999999ALL;
  __int128 v150 = xmmword_100423CD0;
  int v151 = 5;
  uint64_t v152 = 0x4000000000000000LL;
  int v153 = 10;
  uint64_t v154 = 0x4034000000000000LL;
  int v155 = 3;
  __int128 v156 = xmmword_100423D90;
  sub_10020171C((char *)v630, &qword_1007FA710, (uint64_t)v128);
  sub_100203340((uint64_t)v157, v630, 1LL);
  sub_100201830(v726, &xmmword_1007FA548, v157);
  v98[0] = 0x300000010LL;
  v98[1] = 0xC044800000000000LL;
  v620[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v99, (double *)v620, 1LL);
  __int128 v100 = xmmword_100423D50;
  uint64_t v101 = 0x4024000000000000LL;
  int v102 = 45;
  LOBYTE(v103) = 0;
  char v105 = 0;
  uint64_t v106 = 0LL;
  char v107 = 0;
  int v108 = 1;
  char v109 = 1;
  __int128 v110 = xmmword_100423D60;
  __int128 v111 = xmmword_100423D70;
  __int128 v112 = v7;
  unint64_t v113 = 0xC059000000000000LL;
  __int128 v114 = xmmword_100423D80;
  int32x2_t v115 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v116 = xmmword_100423CC0;
  uint64_t v118 = 0LL;
  uint64_t v119 = 0LL;
  uint64_t v117 = 0x3FD999999999999ALL;
  __int128 v120 = xmmword_100423CD0;
  int v121 = 5;
  uint64_t v122 = 0x4000000000000000LL;
  int v123 = 10;
  uint64_t v124 = 0x4034000000000000LL;
  int v125 = 3;
  __int128 v126 = xmmword_100423D90;
  sub_10020171C((char *)v625, &qword_1007FA710, (uint64_t)v98);
  sub_100203340((uint64_t)v127, v625, 1LL);
  sub_100201830(v727, &xmmword_1007FA560, v127);
  v68[0] = 0x300000010LL;
  v68[1] = 0xC044800000000000LL;
  v615[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v69, (double *)v615, 1LL);
  __int128 v70 = xmmword_100423D50;
  uint64_t v71 = 0x4024000000000000LL;
  int v72 = 45;
  LOBYTE(v73) = 0;
  char v75 = 0;
  uint64_t v76 = 0LL;
  char v77 = 0;
  int v78 = 1;
  char v79 = 1;
  __int128 v80 = xmmword_100423D60;
  __int128 v81 = xmmword_100423D70;
  __int128 v82 = v7;
  unint64_t v83 = 0xC059000000000000LL;
  __int128 v84 = xmmword_100423D80;
  int32x2_t v85 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v86 = xmmword_100423CC0;
  uint64_t v88 = 0LL;
  uint64_t v89 = 0LL;
  uint64_t v87 = 0x3FD999999999999ALL;
  __int128 v90 = xmmword_100423CD0;
  int v91 = 5;
  uint64_t v92 = 0x4000000000000000LL;
  int v93 = 10;
  uint64_t v94 = 0x4034000000000000LL;
  int v95 = 3;
  __int128 v96 = xmmword_100423D90;
  sub_10020171C((char *)v620, &qword_1007FA710, (uint64_t)v68);
  sub_100203340((uint64_t)v97, v620, 1LL);
  sub_100201830(v728, &xmmword_1007FA578, v97);
  v38[0] = 0x300000010LL;
  v38[1] = 0xC044800000000000LL;
  v610[0] = (const void *)0xC044800000000000LL;
  sub_10015ED64((uint64_t)v39, (double *)v610, 1LL);
  __int128 v40 = xmmword_100423D50;
  uint64_t v41 = 0x4024000000000000LL;
  int v42 = 45;
  LOBYTE(v43) = 0;
  char v45 = 0;
  uint64_t v46 = 0LL;
  char v47 = 0;
  int v48 = 1;
  char v49 = 1;
  __int128 v50 = xmmword_100423D60;
  __int128 v51 = xmmword_100423D70;
  __int128 v52 = v7;
  unint64_t v53 = 0xC059000000000000LL;
  __int128 v54 = xmmword_100423D80;
  int32x2_t v55 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v56 = xmmword_100423CC0;
  uint64_t v58 = 0LL;
  uint64_t v59 = 0LL;
  uint64_t v57 = 0x3FD999999999999ALL;
  __int128 v60 = xmmword_100423CD0;
  int v61 = 5;
  uint64_t v62 = 0x4000000000000000LL;
  int v63 = 10;
  uint64_t v64 = 0x4034000000000000LL;
  int v65 = 3;
  __int128 v66 = xmmword_100423D90;
  sub_10020171C((char *)v615, &qword_1007FA710, (uint64_t)v38);
  sub_100203340((uint64_t)v67, v615, 1LL);
  sub_100201830(v729, &xmmword_1007FA590, v67);
  v8[0] = 0x300000010LL;
  v8[1] = 0xC044800000000000LL;
  double v609 = -41.0;
  sub_10015ED64((uint64_t)v9, &v609, 1LL);
  __int128 v10 = xmmword_100423D50;
  uint64_t v11 = 0x4024000000000000LL;
  int v12 = 45;
  LOBYTE(__p) = 0;
  char v15 = 0;
  uint64_t v16 = 0LL;
  char v17 = 0;
  int v18 = 1;
  char v19 = 1;
  __int128 v20 = xmmword_100423D60;
  __int128 v21 = xmmword_100423D70;
  __int128 v22 = v7;
  unint64_t v23 = 0xC059000000000000LL;
  __int128 v24 = xmmword_100423D80;
  int32x2_t v25 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v26 = xmmword_100423CC0;
  uint64_t v28 = 0LL;
  uint64_t v29 = 0LL;
  uint64_t v27 = 0x3FD999999999999ALL;
  __int128 v30 = xmmword_100423CD0;
  int v31 = 5;
  uint64_t v32 = 0x4000000000000000LL;
  int v33 = 10;
  uint64_t v34 = 0x4034000000000000LL;
  int v35 = 3;
  __int128 v36 = xmmword_100423D90;
  sub_10020171C((char *)v610, &qword_1007FA710, (uint64_t)v8);
  sub_100203340((uint64_t)v37, v610, 1LL);
  sub_100201830(v730, &xmmword_1007FA5A8, v37);
  sub_1002036D0((uint64_t)v608, v711, 20LL);
  int v731 = 2;
  sub_100203904(v732, v608);
  sub_1002039DC((uint64_t)&unk_100800830, &v731, 1LL);
  sub_100203218((uint64_t)v732, (void *)v732[1]);
  sub_100203218((uint64_t)v608, v608[1]);
  uint64_t v5 = 960LL;
  do
  {
    sub_1002032A0((uint64_t)&v710[v5 + 24], *(void **)&v710[v5 + 32]);
    v5 -= 48LL;
  }

  while (v5);
  sub_1002032A0((uint64_t)v37, v37[1]);
  if (v614 && v613 < 0) {
    operator delete(v612[7]);
  }
  sub_100034A98((uint64_t)v612, v612[1]);
  if (v611 < 0) {
    operator delete((void *)v610[0]);
  }
  if (v15 && v14 < 0) {
    operator delete(__p);
  }
  sub_100034A98((uint64_t)v9, v9[1]);
  sub_1002032A0((uint64_t)v67, v67[1]);
  if (v619 && v618 < 0) {
    operator delete(v617[7]);
  }
  sub_100034A98((uint64_t)v617, v617[1]);
  if (v616 < 0) {
    operator delete((void *)v615[0]);
  }
  if (v45 && v44 < 0) {
    operator delete(v43);
  }
  sub_100034A98((uint64_t)v39, v39[1]);
  sub_1002032A0((uint64_t)v97, v97[1]);
  if (v624 && v623 < 0) {
    operator delete(v622[7]);
  }
  sub_100034A98((uint64_t)v622, v622[1]);
  if (v621 < 0) {
    operator delete((void *)v620[0]);
  }
  if (v75 && v74 < 0) {
    operator delete(v73);
  }
  sub_100034A98((uint64_t)v69, v69[1]);
  sub_1002032A0((uint64_t)v127, v127[1]);
  if (v629 && v628 < 0) {
    operator delete(v627[7]);
  }
  sub_100034A98((uint64_t)v627, v627[1]);
  if (v626 < 0) {
    operator delete((void *)v625[0]);
  }
  if (v105 && v104 < 0) {
    operator delete(v103);
  }
  sub_100034A98((uint64_t)v99, v99[1]);
  sub_1002032A0((uint64_t)v157, v157[1]);
  if (v634 && v633 < 0) {
    operator delete(v632[7]);
  }
  sub_100034A98((uint64_t)v632, v632[1]);
  if (v631 < 0) {
    operator delete((void *)v630[0]);
  }
  if (v135 && v134 < 0) {
    operator delete(v133);
  }
  sub_100034A98((uint64_t)v129, v129[1]);
  sub_1002032A0((uint64_t)v187, v187[1]);
  if (v639 && v638 < 0) {
    operator delete(v637[7]);
  }
  sub_100034A98((uint64_t)v637, v637[1]);
  if (v636 < 0) {
    operator delete((void *)v635[0]);
  }
  if (v165 && v164 < 0) {
    operator delete(v163);
  }
  sub_100034A98((uint64_t)v159, v159[1]);
  sub_1002032A0((uint64_t)v217, v217[1]);
  if (v644 && v643 < 0) {
    operator delete(v642[7]);
  }
  sub_100034A98((uint64_t)v642, v642[1]);
  if (v641 < 0) {
    operator delete((void *)v640[0]);
  }
  if (v195 && v194 < 0) {
    operator delete(v193);
  }
  sub_100034A98((uint64_t)v189, v189[1]);
  sub_1002032A0((uint64_t)v247, v247[1]);
  if (v649 && v648 < 0) {
    operator delete(v647[7]);
  }
  sub_100034A98((uint64_t)v647, v647[1]);
  if (v646 < 0) {
    operator delete((void *)v645[0]);
  }
  if (v225 && v224 < 0) {
    operator delete(v223);
  }
  sub_100034A98((uint64_t)v219, v219[1]);
  sub_1002032A0((uint64_t)v277, v277[1]);
  if (v654 && v653 < 0) {
    operator delete(v652[7]);
  }
  sub_100034A98((uint64_t)v652, v652[1]);
  if (v651 < 0) {
    operator delete((void *)v650[0]);
  }
  if (v255 && v254 < 0) {
    operator delete(v253);
  }
  sub_100034A98((uint64_t)v249, v249[1]);
  sub_1002032A0((uint64_t)v307, v307[1]);
  if (v659 && v658 < 0) {
    operator delete(v657[7]);
  }
  sub_100034A98((uint64_t)v657, v657[1]);
  if (v656 < 0) {
    operator delete((void *)v655[0]);
  }
  if (v285 && v284 < 0) {
    operator delete(v283);
  }
  sub_100034A98((uint64_t)v279, v279[1]);
  sub_1002032A0((uint64_t)v337, v337[1]);
  if (v664 && v663 < 0) {
    operator delete(v662[7]);
  }
  sub_100034A98((uint64_t)v662, v662[1]);
  if (v661 < 0) {
    operator delete((void *)v660[0]);
  }
  if (v315 && v314 < 0) {
    operator delete(v313);
  }
  sub_100034A98((uint64_t)v309, v309[1]);
  sub_1002032A0((uint64_t)v367, v367[1]);
  if (v669 && v668 < 0) {
    operator delete(v667[7]);
  }
  sub_100034A98((uint64_t)v667, v667[1]);
  if (v666 < 0) {
    operator delete((void *)v665[0]);
  }
  if (v345 && v344 < 0) {
    operator delete(v343);
  }
  sub_100034A98((uint64_t)v339, v339[1]);
  sub_1002032A0((uint64_t)v397, v397[1]);
  if (v674 && v673 < 0) {
    operator delete(v672[7]);
  }
  sub_100034A98((uint64_t)v672, v672[1]);
  if (v671 < 0) {
    operator delete((void *)v670[0]);
  }
  if (v375 && v374 < 0) {
    operator delete(v373);
  }
  sub_100034A98((uint64_t)v369, v369[1]);
  sub_1002032A0((uint64_t)v427, v427[1]);
  if (v679 && v678 < 0) {
    operator delete(v677[7]);
  }
  sub_100034A98((uint64_t)v677, v677[1]);
  if (v676 < 0) {
    operator delete((void *)v675[0]);
  }
  if (v405 && v404 < 0) {
    operator delete(v403);
  }
  sub_100034A98((uint64_t)v399, v399[1]);
  sub_1002032A0((uint64_t)v457, v457[1]);
  if (v684 && v683 < 0) {
    operator delete(v682[7]);
  }
  sub_100034A98((uint64_t)v682, v682[1]);
  if (v681 < 0) {
    operator delete((void *)v680[0]);
  }
  if (v435 && v434 < 0) {
    operator delete(v433);
  }
  sub_100034A98((uint64_t)v429, v429[1]);
  sub_1002032A0((uint64_t)v487, v487[1]);
  if (v689 && v688 < 0) {
    operator delete(v687[7]);
  }
  sub_100034A98((uint64_t)v687, v687[1]);
  if (v686 < 0) {
    operator delete((void *)v685[0]);
  }
  if (v465 && v464 < 0) {
    operator delete(v463);
  }
  sub_100034A98((uint64_t)v459, v459[1]);
  sub_1002032A0((uint64_t)v517, v517[1]);
  if (v694 && v693 < 0) {
    operator delete(v692[7]);
  }
  sub_100034A98((uint64_t)v692, v692[1]);
  if (v691 < 0) {
    operator delete((void *)v690[0]);
  }
  if (v495 && v494 < 0) {
    operator delete(v493);
  }
  sub_100034A98((uint64_t)v489, v489[1]);
  sub_1002032A0((uint64_t)v547, v547[1]);
  if (v699 && v698 < 0) {
    operator delete(v697[7]);
  }
  sub_100034A98((uint64_t)v697, v697[1]);
  if (v696 < 0) {
    operator delete((void *)v695[0]);
  }
  if (v525 && v524 < 0) {
    operator delete(v523);
  }
  sub_100034A98((uint64_t)v519, v519[1]);
  sub_1002032A0((uint64_t)v577, v577[1]);
  if (v704 && v703 < 0) {
    operator delete(v702[7]);
  }
  sub_100034A98((uint64_t)v702, v702[1]);
  if (v701 < 0) {
    operator delete((void *)v700[0]);
  }
  if (v555 && v554 < 0) {
    operator delete(v553);
  }
  sub_100034A98((uint64_t)v549, v549[1]);
  sub_1002032A0((uint64_t)v607, v607[1]);
  if (v709 && v708 < 0) {
    operator delete(v707[7]);
  }
  sub_100034A98((uint64_t)v707, v707[1]);
  if (v706 < 0) {
    operator delete((void *)v705[0]);
  }
  if (v585 && v584 < 0) {
    operator delete(v583);
  }
  sub_100034A98((uint64_t)v579, v579[1]);
  return __cxa_atexit((void (*)(void *))sub_1001FE060, &unk_100800830, (void *)&_mh_execute_header);
}

void sub_100214824( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, _Unwind_Exception *exception_objecta, uint64_t a44, uint64_t a45, char a46)
{
  for (uint64_t i = 912LL; i != -48; i -= 48LL)
    sub_1001FDFD0((uint64_t)&STACK[0x37A0] + i);
  sub_1002032A0((uint64_t)&STACK[0x268], *(void **)(v49 + 328));
  sub_1001FE00C((uint64_t)&STACK[0x1CC0]);
  sub_1001FDEF8((uint64_t)&a46);
  sub_1002032A0((uint64_t)&STACK[0x3C8], *(void **)(v50 + 328));
  sub_1001FE00C((uint64_t)&STACK[0x1E18]);
  sub_1001FDEF8((uint64_t)&STACK[0x288]);
  sub_1002032A0((uint64_t)&STACK[0x528], *(void **)(v46 + 328));
  sub_1001FE00C((uint64_t)&STACK[0x1F70]);
  sub_1001FDEF8((uint64_t)&STACK[0x3E8]);
  sub_1002032A0((uint64_t)&STACK[0x688], *(void **)(v53 + 328));
  sub_1001FE00C((uint64_t)&STACK[0x20C8]);
  sub_1001FDEF8((uint64_t)&STACK[0x548]);
  sub_1002032A0((uint64_t)&STACK[0x7E8], *(void **)(v52 + 328));
  sub_1001FE00C((uint64_t)&STACK[0x2220]);
  sub_1001FDEF8((uint64_t)&STACK[0x6A8]);
  sub_1002032A0((uint64_t)&STACK[0x948], (void *)STACK[0x950]);
  sub_1001FE00C((uint64_t)&STACK[0x2378]);
  sub_1001FDEF8((uint64_t)&STACK[0x808]);
  sub_1002032A0((uint64_t)&STACK[0xAA8], (void *)STACK[0xAB0]);
  sub_1001FE00C((uint64_t)&STACK[0x24D0]);
  sub_1001FDEF8((uint64_t)&STACK[0x968]);
  sub_1002032A0((uint64_t)&STACK[0xC08], (void *)STACK[0xC10]);
  sub_1001FE00C((uint64_t)&STACK[0x2628]);
  sub_1001FDEF8((uint64_t)&STACK[0xAC8]);
  sub_1002032A0((uint64_t)&STACK[0xD68], (void *)STACK[0xD70]);
  sub_1001FE00C((uint64_t)&STACK[0x2780]);
  sub_1001FDEF8((uint64_t)&STACK[0xC28]);
  sub_1002032A0((uint64_t)&STACK[0xEC8], (void *)STACK[0xED0]);
  sub_1001FE00C((uint64_t)&STACK[0x28D8]);
  sub_1001FDEF8((uint64_t)&STACK[0xD88]);
  sub_1002032A0((uint64_t)&STACK[0x1028], (void *)STACK[0x1030]);
  sub_1001FE00C((uint64_t)&STACK[0x2A30]);
  sub_1001FDEF8((uint64_t)&STACK[0xEE8]);
  sub_1002032A0((uint64_t)&STACK[0x1188], (void *)STACK[0x1190]);
  sub_1001FE00C((uint64_t)&STACK[0x2B88]);
  sub_1001FDEF8((uint64_t)&STACK[0x1048]);
  sub_1002032A0((uint64_t)&STACK[0x12E8], (void *)STACK[0x12F0]);
  sub_1001FE00C((uint64_t)&STACK[0x2CE0]);
  sub_1001FDEF8((uint64_t)&STACK[0x11A8]);
  sub_1002032A0((uint64_t)&STACK[0x1448], (void *)STACK[0x1450]);
  sub_1001FE00C((uint64_t)&STACK[0x2E38]);
  sub_1001FDEF8((uint64_t)&STACK[0x1308]);
  sub_1002032A0((uint64_t)&STACK[0x15A8], (void *)STACK[0x15B0]);
  sub_1001FE00C((uint64_t)&STACK[0x2F90]);
  sub_1001FDEF8((uint64_t)&STACK[0x1468]);
  sub_1002032A0((uint64_t)&STACK[0x1708], (void *)STACK[0x1710]);
  sub_1001FE00C((uint64_t)&STACK[0x30E8]);
  sub_1001FDEF8((uint64_t)&STACK[0x15C8]);
  sub_1002032A0((uint64_t)&STACK[0x1868], (void *)STACK[0x1870]);
  sub_1001FE00C((uint64_t)&STACK[0x3240]);
  sub_1001FDEF8((uint64_t)&STACK[0x1728]);
  sub_1002032A0((uint64_t)&STACK[0x19C8], (void *)STACK[0x19D0]);
  sub_1001FE00C((uint64_t)&STACK[0x3398]);
  sub_1001FDEF8((uint64_t)&STACK[0x1888]);
  sub_1002032A0((uint64_t)&STACK[0x1B28], (void *)STACK[0x1B30]);
  sub_1001FE00C((uint64_t)&STACK[0x34F0]);
  sub_1001FDEF8((uint64_t)&STACK[0x19E8]);
  sub_1002032A0((uint64_t)&STACK[0x1C88], *(void **)(v48 + 328));
  sub_1001FE00C((uint64_t)&STACK[0x3648]);
  sub_1001FDEF8((uint64_t)&STACK[0x1B48]);
  _Unwind_Resume(a1);
}

void sub_100214C0C()
{
}

void sub_100214C18()
{
}

void sub_100214C24()
{
}

void sub_100214C34()
{
}

void sub_100214C40()
{
}

void sub_100214C4C()
{
}

void sub_100214C5C()
{
}

void sub_100214C68()
{
}

void sub_100214C74()
{
}

void sub_100214C84()
{
}

void sub_100214C90()
{
}

void sub_100214C9C()
{
}

void sub_100214CAC()
{
}

void sub_100214CB8()
{
}

void sub_100214CC4()
{
}

void sub_100214CD4()
{
}

void sub_100214CE0()
{
}

void sub_100214CEC()
{
}

void sub_100214CFC()
{
}

void sub_100214D08()
{
}

void sub_100214D14()
{
}

void sub_100214D24()
{
}

void sub_100214D30()
{
}

void sub_100214D3C()
{
}

void sub_100214D4C()
{
}

void sub_100214D58()
{
}

void sub_100214D64()
{
}

void sub_100214D74()
{
}

void sub_100214D80()
{
}

void sub_100214D8C()
{
}

void sub_100214D9C()
{
}

void sub_100214DA8()
{
}

void sub_100214DB4()
{
}

void sub_100214DC4()
{
}

void sub_100214DD0()
{
}

void sub_100214DDC()
{
}

void sub_100214DEC()
{
}

void sub_100214DF8()
{
}

void sub_100214E04()
{
}

void sub_100214E14()
{
}

void sub_100214E20()
{
}

void sub_100214E2C()
{
}

void sub_100214E3C()
{
}

void sub_100214E48()
{
}

void sub_100214E54()
{
}

void sub_100214E64()
{
}

void sub_100214E70()
{
}

void sub_100214E7C()
{
}

void sub_100214E8C()
{
}

void sub_100214E98()
{
}

void sub_100214EA4()
{
}

void sub_100214EB4()
{
}

void sub_100214EC0()
{
}

void sub_100214ECC()
{
}

void sub_100214ED8()
{
}

void sub_100214EEC()
{
}

void sub_100214F00()
{
}

void sub_100214F14()
{
}

void sub_100214F1C()
{
  context = objc_autoreleasePoolPush();
  *(_OWORD *)uint64_t v458 = xmmword_1004287D0;
  *(_OWORD *)&v458[16] = unk_1004287E0;
  sub_10015EABC((uint64_t)&unk_1007F9EE8, (int *)v458, 4LL);
  xmmword_1007F9F00 = xmmword_100423CB0;
  *(_OWORD *)algn_1007F9F10 = xmmword_100423CC0;
  qword_1007F9F28 = 0LL;
  unk_1007F9F30 = 0LL;
  qword_1007F9F20 = 0x3FD999999999999ALL;
  unk_1007F9F38 = xmmword_100423CD0;
  dword_1007F9F48 = 5;
  qword_1007F9F50 = 0x4000000000000000LL;
  dword_1007F9F58 = 5;
  byte_1007F9F60 = 0;
  *(void *)&algn_1007F9F61[3] = 0x30000000ALL;
  xmmword_1007F9F70 = xmmword_100423CE0;
  unk_1007F9F80 = xmmword_100423CF0;
  xmmword_1007F9F90 = xmmword_100423D00;
  qword_1007F9FA0 = 0x3FE3333333333333LL;
  dword_1007F9FA8 = 3;
  xmmword_1007F9FB0 = xmmword_100423D10;
  unk_1007F9FC0 = xmmword_100423CF0;
  xmmword_1007F9FD0 = xmmword_100423CE0;
  qword_1007F9FE0 = 0x3FE3333333333333LL;
  byte_1007F9FE8 = 0;
  xmmword_1007F9FF0 = xmmword_100423D20;
  unk_1007FA000 = xmmword_100423D30;
  __asm { FMOV            V0.2D, #1.0 }

  __int128 v22 = _Q0;
  xmmword_1007FA010 = _Q0;
  qword_1007FA020 = 0xBFD3333333333333LL;
  xmmword_1007FA028 = xmmword_100423D40;
  qword_1007FA038 = 0x3E99999A40000000LL;
  xmmword_1007FA040 = xmmword_100423CC0;
  qword_1007FA058 = 0LL;
  unk_1007FA060 = 0LL;
  qword_1007FA050 = 0x3FD999999999999ALL;
  xmmword_1007FA068 = xmmword_100423CD0;
  dword_1007FA078 = 5;
  qword_1007FA080 = 0x4000000000000000LL;
  dword_1007FA088 = 4;
  qword_1007FA090 = 0x300000008LL;
  qword_1007FA098 = 0xC04E800000000000LL;
  *(void *)&__int128 __dst = 0xC04E800000000000LL;
  sub_10015ED64((uint64_t)&unk_1007FA0A0, (double *)&__dst, 1LL);
  xmmword_1007FA0B8 = xmmword_100423D50;
  qword_1007FA0C8 = 0x4024000000000000LL;
  dword_1007FA0D0 = 45;
  byte_1007FA0D8 = 0;
  byte_1007FA0F0 = 0;
  qword_1007FA0F8 = 0LL;
  byte_1007FA100 = 0;
  dword_1007FA104 = 1;
  byte_1007FA108 = 1;
  xmmword_1007FA110 = xmmword_100423D60;
  unk_1007FA120 = xmmword_100423D70;
  xmmword_1007FA130 = v22;
  qword_1007FA140 = 0xC059000000000000LL;
  xmmword_1007FA148 = xmmword_100423D80;
  qword_1007FA158 = (uint64_t)vdup_n_s32(0x3DCCCCCDu);
  xmmword_1007FA160 = xmmword_100423CC0;
  qword_1007FA170 = 0x3FD999999999999ALL;
  qword_1007FA180 = 0LL;
  qword_1007FA178 = 0LL;
  xmmword_1007FA188 = xmmword_100423CD0;
  dword_1007FA198 = 5;
  qword_1007FA1A0 = 0x4000000000000000LL;
  dword_1007FA1A8 = 10;
  qword_1007FA1B0 = 0x4034000000000000LL;
  dword_1007FA1B8 = 3;
  xmmword_1007FA1C0 = xmmword_100423D90;
  __cxa_atexit((void (*)(void *))sub_10015CF8C, &unk_1007F9EE8, (void *)&_mh_execute_header);
  sub_1000065CC(&qword_1007FA1D0, "MacBook");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1007FA1D0, (void *)&_mh_execute_header);
  sub_1000065CC(&qword_1007FA1E8, "MacBookAir");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1007FA1E8, (void *)&_mh_execute_header);
  sub_1000065CC(&qword_1007FA200, "MacBookPro");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1007FA200, (void *)&_mh_execute_header);
  sub_1000065CC(&qword_1007FA218, "iMac");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1007FA218, (void *)&_mh_execute_header);
  sub_1000065CC(&qword_1007FA230, "Macmini");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1007FA230, (void *)&_mh_execute_header);
  sub_1000065CC(qword_1007FA248, "MacPro");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007FA248, (void *)&_mh_execute_header);
  sub_1000065CC(qword_1007FA260, "Mac");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007FA260, (void *)&_mh_execute_header);
  sub_1000065CC(qword_1007FA278, "iPad");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007FA278, (void *)&_mh_execute_header);
  sub_1000065CC(qword_1007FA290, "iPhone");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007FA290, (void *)&_mh_execute_header);
  sub_1000065CC(qword_1007FA2A8, "iPhone10");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007FA2A8, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA2C0, "Device1,21760");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA2C0, (void *)&_mh_execute_header);
  sub_1000065CC(qword_1007FA2D8, "AudioAccessory");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007FA2D8, (void *)&_mh_execute_header);
  sub_1000065CC(qword_1007FA2F0, "Watch");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007FA2F0, (void *)&_mh_execute_header);
  sub_1000065CC(qword_1007FA308, "ATVRemote1,");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007FA308, (void *)&_mh_execute_header);
  sub_1000065CC(&qword_1007FA320, "BeatsStudio3,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1007FA320, (void *)&_mh_execute_header);
  sub_1000065CC(&qword_1007FA338, "BeatsX1,1");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1007FA338, (void *)&_mh_execute_header);
  sub_1000065CC(&qword_1007FA350, "BeatsSolo3,1");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1007FA350, (void *)&_mh_execute_header);
  sub_1000065CC(&qword_1007FA368, "Device1,8202");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1007FA368, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA380, "Device1,8212");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA380, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA398, "ATVRemote1,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA398, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA3B0, "ATVRemote1,4");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA3B0, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA3C8, "A2538");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA3C8, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA3E0, "iPhone10,1");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA3E0, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA3F8, "iPhone10,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA3F8, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA410, "iPhone10,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA410, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA428, "iPhone10,4");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA428, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA440, "iPhone10,5");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA440, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA458, "iPhone10,6");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA458, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA470, "iPhone11,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA470, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA488, "iPhone11,6");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA488, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA4A0, "iPhone11,8");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA4A0, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA4B8, "iPhone12,1");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA4B8, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA4D0, "iPhone12,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA4D0, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA4E8, "iPhone12,5");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA4E8, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA500, "iPhone13,1");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA500, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA518, "iPhone13,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA518, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA530, "iPhone13,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA530, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA548, "iPhone13,4");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA548, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA560, "iPhone14,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA560, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA578, "iPhone14,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA578, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA590, "iPhone14,4");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA590, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA5A8, "iPhone14,5");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA5A8, (void *)&_mh_execute_header);
  sub_1000065CC(qword_1007FA5C0, "iPhone15,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007FA5C0, (void *)&_mh_execute_header);
  sub_1000065CC(qword_1007FA5D8, "iPhone15,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007FA5D8, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA5F0, "iMac18,1");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA5F0, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA608, "iMac18,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA608, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA620, "iMac18,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA620, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA638, "MacBookPro13,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA638, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA650, "MacBookPro14,2");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA650, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA668, "MacBookPro13,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA668, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA680, "MacBookPro14,3");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA680, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA698, "iPod9,1");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA698, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA6B0, "AudioAccessory5,1,");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA6B0, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA6C8, "AudioAccessory6,1,");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA6C8, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA6E0, "Watch6,18");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA6E0, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FA6F8, "DovePeace");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FA6F8, (void *)&_mh_execute_header);
  sub_1000065CC(&qword_1007FA710, "Any");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1007FA710, (void *)&_mh_execute_header);
  *(_DWORD *)uint64_t v458 = 788;
  if (byte_1007FA3AF < 0)
  {
    sub_1000063A8(&v458[8], (void *)xmmword_1007FA398, *((unint64_t *)&xmmword_1007FA398 + 1));
  }

  else
  {
    *(_OWORD *)&v458[8] = xmmword_1007FA398;
    *(void *)&v458[24] = unk_1007FA3A8;
  }

  int v459 = 789;
  if (byte_1007FA3C7 < 0)
  {
    sub_1000063A8(&v460, (void *)xmmword_1007FA3B0, *((unint64_t *)&xmmword_1007FA3B0 + 1));
  }

  else
  {
    __int128 v460 = xmmword_1007FA3B0;
    uint64_t v461 = unk_1007FA3C0;
  }

  int v462 = 1106;
  if (byte_1007FA3DF < 0)
  {
    sub_1000063A8(&v464, (void *)xmmword_1007FA3C8, *((unint64_t *)&xmmword_1007FA3C8 + 1));
  }

  else
  {
    __int128 v464 = xmmword_1007FA3C8;
    uint64_t v465 = unk_1007FA3D8;
  }

  int v466 = 8212;
  if (byte_1007FA397 < 0)
  {
    sub_1000063A8(&v467, (void *)xmmword_1007FA380, *((unint64_t *)&xmmword_1007FA380 + 1));
  }

  else
  {
    __int128 v467 = xmmword_1007FA380;
    v468[0] = unk_1007FA390;
  }

  sub_100201FA4((uint64_t)&unk_1007FA728, (unsigned int *)v458, 4LL);
  for (uint64_t i = 0LL; i != -16; i -= 4LL)
  {
    if (SHIBYTE(v468[i]) < 0) {
      operator delete((void *)v468[i - 2]);
    }
  }

  __cxa_atexit((void (*)(void *))sub_1001FDED0, &unk_1007FA728, (void *)&_mh_execute_header);
  *(void *)&xmmword_1007FA740 = 0x300000008LL;
  *((void *)&xmmword_1007FA740 + 1) = 0xC04E800000000000LL;
  *(void *)uint64_t v458 = 0xC04E800000000000LL;
  sub_10015ED64((uint64_t)&unk_1007FA750, (double *)v458, 1LL);
  xmmword_1007FA768 = xmmword_100423D50;
  qword_1007FA778 = 0x4024000000000000LL;
  dword_1007FA780 = 45;
  byte_1007FA788 = 0;
  byte_1007FA7A0 = 0;
  *(void *)&xmmword_1007FA7A8 = 0LL;
  BYTE8(xmmword_1007FA7Astd::ostream::~ostream(v2, v3 + 8) = 0;
  HIDWORD(xmmword_1007FA7Astd::ostream::~ostream(v2, v3 + 8) = 1;
  byte_1007FA7B8 = 1;
  xmmword_1007FA7C0 = xmmword_100423D60;
  unk_1007FA7D0 = xmmword_100423D70;
  xmmword_1007FA7E0 = v22;
  qword_1007FA7F0 = 0xC059000000000000LL;
  unk_1007FA7F8 = xmmword_100423D80;
  int32x2_t v6 = vdup_n_s32(0x3DCCCCCDu);
  *(int32x2_t *)&xmmword_1007FA808 = v6;
  *(__int128 *)((char *)&xmmword_1007FA808 + std::ostream::~ostream(v2, v3 + 8) = xmmword_100423CC0;
  xmmword_1007FA828 = 0uLL;
  qword_1007FA820 = 0x3FD999999999999ALL;
  unk_1007FA838 = xmmword_100423CD0;
  LODWORD(xmmword_1007FA84std::ostream::~ostream(v2, v3 + 8) = 5;
  *((void *)&xmmword_1007FA848 + 1) = 0x4000000000000000LL;
  dword_1007FA858 = 10;
  qword_1007FA860 = 0x4034000000000000LL;
  LODWORD(xmmword_1007FA86std::ostream::~ostream(v2, v3 + 8) = 3;
  *(__int128 *)((char *)&xmmword_1007FA868 + std::ostream::~ostream(v2, v3 + 8) = xmmword_100423D90;
  __cxa_atexit((void (*)(void *))sub_1001FDEF8, &xmmword_1007FA740, (void *)&_mh_execute_header);
  qword_1007FA880 = 0x300000010LL;
  qword_1007FA888 = 0xC046800000000000LL;
  *(void *)uint64_t v458 = 0xC046800000000000LL;
  sub_10015ED64((uint64_t)&unk_1007FA890, (double *)v458, 1LL);
  unk_1007FA8A8 = xmmword_100423D50;
  qword_1007FA8B8 = 0x4024000000000000LL;
  dword_1007FA8C0 = 45;
  byte_1007FA8C8 = 0;
  byte_1007FA8E0 = 0;
  qword_1007FA8E8 = 0LL;
  byte_1007FA8F0 = 0;
  dword_1007FA8F4 = 1;
  byte_1007FA8F8 = 1;
  xmmword_1007FA900 = xmmword_100423D60;
  unk_1007FA910 = xmmword_100423D70;
  xmmword_1007FA920 = v22;
  qword_1007FA930 = 0xC059000000000000LL;
  unk_1007FA938 = xmmword_100423D80;
  qword_1007FA948 = (uint64_t)v6;
  xmmword_1007FA950 = xmmword_100423CC0;
  qword_1007FA968 = 0LL;
  unk_1007FA970 = 0LL;
  qword_1007FA960 = 0x3FD999999999999ALL;
  unk_1007FA978 = xmmword_100423CD0;
  dword_1007FA988 = 5;
  qword_1007FA990 = 0x4000000000000000LL;
  dword_1007FA998 = 10;
  qword_1007FA9A0 = 0x4034000000000000LL;
  dword_1007FA9A8 = 3;
  xmmword_1007FA9B0 = xmmword_100423D90;
  __cxa_atexit((void (*)(void *))sub_1001FDEF8, &qword_1007FA880, (void *)&_mh_execute_header);
  qword_1007FA9C0 = 0x200000003LL;
  qword_1007FA9C8 = 0xC046800000000000LL;
  *(void *)uint64_t v458 = 0xC046800000000000LL;
  sub_10015ED64((uint64_t)&unk_1007FA9D0, (double *)v458, 1LL);
  unk_1007FA9E8 = xmmword_100423D50;
  qword_1007FA9F8 = 0x4024000000000000LL;
  dword_1007FAA00 = 45;
  byte_1007FAA08 = 0;
  byte_1007FAA20 = 0;
  qword_1007FAA28 = 0LL;
  byte_1007FAA30 = 0;
  dword_1007FAA34 = 1;
  byte_1007FAA38 = 1;
  xmmword_1007FAA40 = xmmword_100423D60;
  unk_1007FAA50 = xmmword_100423D70;
  xmmword_1007FAA60 = v22;
  qword_1007FAA70 = 0xC059000000000000LL;
  unk_1007FAA78 = xmmword_100423D80;
  qword_1007FAA88 = (uint64_t)v6;
  xmmword_1007FAA90 = xmmword_100423CC0;
  qword_1007FAAA8 = 0LL;
  unk_1007FAAB0 = 0LL;
  qword_1007FAAA0 = 0x3FD999999999999ALL;
  unk_1007FAAB8 = xmmword_100423CD0;
  dword_1007FAAC8 = 5;
  qword_1007FAAD0 = 0x4000000000000000LL;
  dword_1007FAAD8 = 10;
  qword_1007FAAE0 = 0x4034000000000000LL;
  dword_1007FAAE8 = 3;
  xmmword_1007FAAF0 = xmmword_100423D90;
  __cxa_atexit((void (*)(void *))sub_1001FDEF8, &qword_1007FA9C0, (void *)&_mh_execute_header);
  __int128 __dst = xmmword_1004287F0;
  __int128 v267 = unk_100428800;
  __int128 v268 = xmmword_100428810;
  sub_10020238C((uint64_t)&v203, (int *)&__dst, 3LL);
  sub_1002014F4(v458, &xmmword_1007FA398, (uint64_t)&v203);
  __int128 v429 = xmmword_1004287F0;
  __int128 v430 = unk_100428800;
  *(_OWORD *)uint64_t v431 = xmmword_100428810;
  sub_10020238C((uint64_t)&v172, (int *)&v429, 3LL);
  sub_1002014F4((void *)&v460 + 1, &xmmword_1007FA3B0, (uint64_t)&v172);
  sub_1002024E0((uint64_t)&unk_1007FAB00, (const void **)v458, 2LL);
  for (uint64_t j = 0LL; j != -96; j -= 48LL)
  {
    sub_100034A98((uint64_t)&v464 + j, *(void **)((char *)&v464 + j + 8));
    if (*(&v463 + j) < 0) {
      operator delete(*(void **)((char *)&v460 + j + 8));
    }
  }

  sub_100034A98((uint64_t)&v172, v173);
  sub_100034A98((uint64_t)&v203, v204);
  __cxa_atexit((void (*)(void *))sub_1001FDF3C, &unk_1007FAB00, (void *)&_mh_execute_header);
  sub_100204FCC();
  *(void *)&__int128 v429 = 0x300000010LL;
  *((void *)&v429 + 1) = 0xC042800000000000LL;
  *(void *)&__int128 __dst = 0xC042800000000000LL;
  sub_10015ED64((uint64_t)&v430, (double *)&__dst, 1LL);
  *(_OWORD *)&v431[8] = xmmword_100423D50;
  uint64_t v432 = 0x4024000000000000LL;
  int v433 = 45;
  LOBYTE(v434) = 0;
  v436[0] = 0;
  uint64_t v437 = 0LL;
  char v438 = 0;
  int v439 = 1;
  char v440 = 1;
  __int128 v441 = xmmword_100423D60;
  __int128 v442 = xmmword_100423D70;
  __int128 v443 = v22;
  unint64_t v444 = 0xC059000000000000LL;
  __int128 v445 = xmmword_100423D80;
  int32x2_t v446 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v447 = xmmword_100423CC0;
  uint64_t v449 = 0LL;
  uint64_t v450 = 0LL;
  uint64_t v448 = 0x3FD999999999999ALL;
  __int128 v451 = xmmword_100423CD0;
  int v452 = 5;
  uint64_t v453 = 0x4000000000000000LL;
  int v454 = 10;
  uint64_t v455 = 0x4034000000000000LL;
  int v456 = 3;
  __int128 v457 = xmmword_100423D90;
  sub_10020171C(v458, &xmmword_1007FA3E0, (uint64_t)&v429);
  uint64_t v203 = 0x300000010LL;
  __int128 v204 = (void *)0xC042800000000000LL;
  *(void *)&__int128 __dst = 0xC042800000000000LL;
  sub_10015ED64((uint64_t)&v205, (double *)&__dst, 1LL);
  __int128 v207 = xmmword_100423D50;
  uint64_t v208 = 0x4024000000000000LL;
  int v209 = 45;
  LOBYTE(v210) = 0;
  char v212 = 0;
  uint64_t v213 = 0LL;
  char v214 = 0;
  int v215 = 1;
  char v216 = 1;
  __int128 v217 = xmmword_100423D60;
  __int128 v218 = xmmword_100423D70;
  __int128 v219 = v22;
  unint64_t v220 = 0xC059000000000000LL;
  __int128 v221 = xmmword_100423D80;
  int32x2_t v222 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v223 = xmmword_100423CC0;
  uint64_t v225 = 0LL;
  uint64_t v226 = 0LL;
  uint64_t v224 = 0x3FD999999999999ALL;
  __int128 v227 = xmmword_100423CD0;
  int v228 = 5;
  uint64_t v229 = 0x4000000000000000LL;
  int v230 = 10;
  uint64_t v231 = 0x4034000000000000LL;
  int v232 = 3;
  __int128 v233 = xmmword_100423D90;
  sub_10020171C(v469, &xmmword_1007FA3F8, (uint64_t)&v203);
  sub_100203340((uint64_t)&v112, (const void **)v458, 2LL);
  sub_100201830(&v366, &xmmword_1007FA3E0, (const void ***)&v112);
  uint64_t v172 = 0x300000010LL;
  unint64_t v173 = (void *)0xC042800000000000LL;
  uint64_t v397 = 0xC042800000000000LL;
  sub_10015ED64((uint64_t)&v174, (double *)&v397, 1LL);
  __int128 v176 = xmmword_100423D50;
  uint64_t v177 = 0x4024000000000000LL;
  int v178 = 45;
  LOBYTE(v179) = 0;
  char v181 = 0;
  uint64_t v182 = 0LL;
  char v183 = 0;
  int v184 = 1;
  char v185 = 1;
  __int128 v186 = xmmword_100423D60;
  __int128 v187 = xmmword_100423D70;
  __int128 v188 = v22;
  unint64_t v189 = 0xC059000000000000LL;
  __int128 v190 = xmmword_100423D80;
  int32x2_t v191 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v192 = xmmword_100423CC0;
  uint64_t v194 = 0LL;
  uint64_t v195 = 0LL;
  uint64_t v193 = 0x3FD999999999999ALL;
  __int128 v196 = xmmword_100423CD0;
  int v197 = 5;
  uint64_t v198 = 0x4000000000000000LL;
  int v199 = 10;
  uint64_t v200 = 0x4034000000000000LL;
  int v201 = 3;
  __int128 v202 = xmmword_100423D90;
  sub_10020171C((char *)&__dst, &xmmword_1007FA3E0, (uint64_t)&v172);
  uint64_t v397 = 0x300000010LL;
  uint64_t v398 = 0xC042800000000000LL;
  v277[0] = -37.0;
  sub_10015ED64((uint64_t)&v399, v277, 1LL);
  __int128 v402 = xmmword_100423D50;
  uint64_t v403 = 0x4024000000000000LL;
  int v404 = 45;
  LOBYTE(v405) = 0;
  char v407 = 0;
  uint64_t v408 = 0LL;
  char v409 = 0;
  int v410 = 1;
  char v411 = 1;
  __int128 v412 = xmmword_100423D60;
  __int128 v413 = xmmword_100423D70;
  __int128 v414 = v22;
  unint64_t v415 = 0xC059000000000000LL;
  __int128 v416 = xmmword_100423D80;
  int32x2_t v417 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v418 = xmmword_100423CC0;
  uint64_t v420 = 0LL;
  uint64_t v421 = 0LL;
  uint64_t v419 = 0x3FD999999999999ALL;
  __int128 v422 = xmmword_100423CD0;
  int v423 = 5;
  uint64_t v424 = 0x4000000000000000LL;
  int v425 = 10;
  uint64_t v426 = 0x4034000000000000LL;
  int v427 = 3;
  __int128 v428 = xmmword_100423D90;
  sub_10020171C(v273, &xmmword_1007FA3F8, (uint64_t)&v397);
  sub_100203340((uint64_t)&v306, (const void **)&__dst, 2LL);
  sub_100201830((void *)&v369 + 1, &xmmword_1007FA3F8, (const void ***)&v306);
  sub_1002036D0((uint64_t)&v142, (const void **)&v366, 2LL);
  LODWORD(v336) = 2;
  sub_100203904((uint64_t *)&v337, (const void ***)&v142);
  sub_1002039DC((uint64_t)&unk_1008007D0, (int *)&v336, 1LL);
  sub_100203218((uint64_t)&v337, v338[0]);
  sub_100203218((uint64_t)&v142, v143);
  for (uint64_t k = 0LL; k != -12; k -= 6LL)
  {
    sub_1002032A0((uint64_t)&v373[k], v373[k + 1]);
    if (*(&v372 + k * 8) < 0) {
      operator delete(*(void **)((char *)&v369 + k * 8 + 8));
    }
  }

  sub_1002032A0((uint64_t)&v306, v307);
  uint64_t v9 = 688LL;
  do
  {
    __int128 v10 = (void **)((char *)&__dst + v9);
    sub_100034A98((uint64_t)(v10 - 38), *(v10 - 37));
    v9 -= 344LL;
  }

  while (v9);
  if (v407 && v406 < 0) {
    operator delete(v405);
  }
  sub_100034A98((uint64_t)&v399, v400);
  if (v181 && v180 < 0) {
    operator delete(v179);
  }
  sub_100034A98((uint64_t)&v174, v175);
  sub_1002032A0((uint64_t)&v112, v113);
  uint64_t v11 = 688LL;
  do
  {
    int v12 = (void **)&v458[v11];
    sub_100034A98((uint64_t)(v12 - 38), *(v12 - 37));
    v11 -= 344LL;
  }

  while (v11);
  if (v212 && v211 < 0) {
    operator delete(v210);
  }
  sub_100034A98((uint64_t)&v205, v206);
  if (v436[0] && v435 < 0) {
    operator delete(v434);
  }
  sub_100034A98((uint64_t)&v430, *((void **)&v430 + 1));
  __cxa_atexit((void (*)(void *))sub_1001FE060, &unk_1008007D0, (void *)&_mh_execute_header);
  *(void *)&__int128 v429 = 0x300000010LL;
  *((void *)&v429 + 1) = 0xC044000000000000LL;
  *(void *)&__int128 __dst = 0xC044000000000000LL;
  sub_10015ED64((uint64_t)&v430, (double *)&__dst, 1LL);
  *(_OWORD *)&v431[8] = xmmword_100423D50;
  uint64_t v432 = 0x4024000000000000LL;
  int v433 = 45;
  LOBYTE(v434) = 0;
  v436[0] = 0;
  uint64_t v437 = 0LL;
  char v438 = 0;
  int v439 = 1;
  char v440 = 1;
  __int128 v441 = xmmword_100423D60;
  __int128 v442 = xmmword_100423D70;
  __int128 v443 = v22;
  unint64_t v444 = 0xC059000000000000LL;
  __int128 v445 = xmmword_100423D80;
  int32x2_t v446 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v447 = xmmword_100423CC0;
  uint64_t v449 = 0LL;
  uint64_t v450 = 0LL;
  uint64_t v448 = 0x3FD999999999999ALL;
  __int128 v451 = xmmword_100423CD0;
  int v452 = 5;
  uint64_t v453 = 0x4000000000000000LL;
  int v454 = 10;
  uint64_t v455 = 0x4034000000000000LL;
  int v456 = 3;
  __int128 v457 = xmmword_100423D90;
  sub_10020171C(v458, &xmmword_1007FA6F8, (uint64_t)&v429);
  uint64_t v203 = 0x200000003LL;
  __int128 v204 = (void *)0xC04B800000000000LL;
  *(void *)&__int128 __dst = 0xC04B800000000000LL;
  sub_10015ED64((uint64_t)&v205, (double *)&__dst, 1LL);
  __int128 v207 = xmmword_1004287C0;
  uint64_t v208 = 0x4000000000000000LL;
  int v209 = 20;
  LOBYTE(v210) = 0;
  char v212 = 0;
  uint64_t v213 = 0LL;
  char v214 = 0;
  int v215 = 1;
  char v216 = 1;
  __int128 v217 = xmmword_100423D60;
  __int128 v218 = xmmword_100423D70;
  __int128 v219 = v22;
  unint64_t v220 = 0xC059000000000000LL;
  __int128 v221 = xmmword_100423D80;
  int32x2_t v222 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v223 = xmmword_100423CC0;
  uint64_t v225 = 0LL;
  uint64_t v226 = 0LL;
  uint64_t v224 = 0x3FD999999999999ALL;
  __int128 v227 = xmmword_100423CD0;
  int v228 = 5;
  uint64_t v229 = 0x4000000000000000LL;
  int v230 = 10;
  uint64_t v231 = 0x4034000000000000LL;
  int v232 = 3;
  __int128 v233 = xmmword_100423D90;
  sub_10020171C(v469, &xmmword_1007FA3C8, (uint64_t)&v203);
  sub_100203340((uint64_t)&v142, (const void **)v458, 2LL);
  LODWORD(v397) = 7;
  sub_1002035F8(&v398, (const void ***)&v142);
  uint64_t v172 = 0x300000010LL;
  unint64_t v173 = (void *)0xC044800000000000LL;
  unint64_t v306 = 0xC044800000000000LL;
  sub_10015ED64((uint64_t)&v174, (double *)&v306, 1LL);
  __int128 v176 = xmmword_100423D50;
  uint64_t v177 = 0x4024000000000000LL;
  int v178 = 45;
  LOBYTE(v179) = 0;
  char v181 = 0;
  uint64_t v182 = 0LL;
  char v183 = 0;
  int v184 = 1;
  char v185 = 1;
  __int128 v186 = xmmword_100423D60;
  __int128 v187 = xmmword_100423D70;
  __int128 v188 = v22;
  unint64_t v189 = 0xC059000000000000LL;
  __int128 v190 = xmmword_100423D80;
  int32x2_t v191 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v192 = xmmword_100423CC0;
  uint64_t v194 = 0LL;
  uint64_t v195 = 0LL;
  uint64_t v193 = 0x3FD999999999999ALL;
  __int128 v196 = xmmword_100423CD0;
  int v197 = 5;
  uint64_t v198 = 0x4000000000000000LL;
  int v199 = 10;
  uint64_t v200 = 0x4034000000000000LL;
  int v201 = 3;
  __int128 v202 = xmmword_100423D90;
  sub_10020171C((char *)&__dst, &xmmword_1007FA6F8, (uint64_t)&v172);
  sub_100203340((uint64_t)&v112, (const void **)&__dst, 1LL);
  int v401 = 6;
  sub_1002035F8((uint64_t *)&v402, (const void ***)&v112);
  sub_100203C40((uint64_t)&v336, (int *)&v397, 2LL);
  LODWORD(v366) = 2;
  sub_100203E0C(&v367, (uint64_t)&v336);
  sub_100203EE4((uint64_t)&unk_1008007E8, (int *)&v366, 1LL);
  sub_100203BF4((uint64_t)&v367, v368[0]);
  sub_100203BF4((uint64_t)&v336, v337);
  for (uint64_t m = 0LL; m != -64; m -= 32LL)
    sub_1002032A0((uint64_t)&v402 + m, *(void **)((char *)&v402 + m + 8));
  sub_1002032A0((uint64_t)&v112, v113);
  if (v272 && v271 < 0) {
    operator delete(v270);
  }
  sub_100034A98((uint64_t)&v268 + 8, v269);
  if (SBYTE7(v267) < 0) {
    operator delete((void *)__dst);
  }
  if (v181 && v180 < 0) {
    operator delete(v179);
  }
  sub_100034A98((uint64_t)&v174, v175);
  sub_1002032A0((uint64_t)&v142, v143);
  uint64_t v14 = 688LL;
  do
  {
    char v15 = (void **)&v458[v14];
    sub_100034A98((uint64_t)(v15 - 38), *(v15 - 37));
    v14 -= 344LL;
  }

  while (v14);
  if (v212 && v211 < 0) {
    operator delete(v210);
  }
  sub_100034A98((uint64_t)&v205, v206);
  if (v436[0] && v435 < 0) {
    operator delete(v434);
  }
  sub_100034A98((uint64_t)&v430, *((void **)&v430 + 1));
  __cxa_atexit((void (*)(void *))sub_1001FE088, &unk_1008007E8, (void *)&_mh_execute_header);
  *(void *)&__int128 v429 = 0x300000010LL;
  *((void *)&v429 + 1) = 0xC044000000000000LL;
  *(void *)&__int128 __dst = 0xC044000000000000LL;
  sub_10015ED64((uint64_t)&v430, (double *)&__dst, 1LL);
  *(_OWORD *)&v431[8] = xmmword_100423D50;
  uint64_t v432 = 0x4024000000000000LL;
  int v433 = 45;
  LOBYTE(v434) = 0;
  v436[0] = 0;
  uint64_t v437 = 0LL;
  char v438 = 0;
  int v439 = 1;
  char v440 = 1;
  __int128 v441 = xmmword_100423D60;
  __int128 v442 = xmmword_100423D70;
  __int128 v443 = v22;
  unint64_t v444 = 0xC059000000000000LL;
  __int128 v445 = xmmword_100423D80;
  int32x2_t v446 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v447 = xmmword_100423CC0;
  uint64_t v449 = 0LL;
  uint64_t v450 = 0LL;
  uint64_t v448 = 0x3FD999999999999ALL;
  __int128 v451 = xmmword_100423CD0;
  int v452 = 5;
  uint64_t v453 = 0x4000000000000000LL;
  int v454 = 10;
  uint64_t v455 = 0x4034000000000000LL;
  int v456 = 3;
  __int128 v457 = xmmword_100423D90;
  sub_10020171C(v458, &xmmword_1007FA3E0, (uint64_t)&v429);
  uint64_t v203 = 0x300000010LL;
  __int128 v204 = (void *)0xC044000000000000LL;
  *(void *)&__int128 __dst = 0xC044000000000000LL;
  sub_10015ED64((uint64_t)&v205, (double *)&__dst, 1LL);
  __int128 v207 = xmmword_100423D50;
  uint64_t v208 = 0x4024000000000000LL;
  int v209 = 45;
  LOBYTE(v210) = 0;
  char v212 = 0;
  uint64_t v213 = 0LL;
  char v214 = 0;
  int v215 = 1;
  char v216 = 1;
  __int128 v217 = xmmword_100423D60;
  __int128 v218 = xmmword_100423D70;
  __int128 v219 = v22;
  unint64_t v220 = 0xC059000000000000LL;
  __int128 v221 = xmmword_100423D80;
  int32x2_t v222 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v223 = xmmword_100423CC0;
  uint64_t v225 = 0LL;
  uint64_t v226 = 0LL;
  uint64_t v224 = 0x3FD999999999999ALL;
  __int128 v227 = xmmword_100423CD0;
  int v228 = 5;
  uint64_t v229 = 0x4000000000000000LL;
  int v230 = 10;
  uint64_t v231 = 0x4034000000000000LL;
  int v232 = 3;
  __int128 v233 = xmmword_100423D90;
  sub_10020171C(v469, &xmmword_1007FA3F8, (uint64_t)&v203);
  uint64_t v172 = 0x300000010LL;
  unint64_t v173 = (void *)0xC045800000000000LL;
  *(void *)&__int128 __dst = 0xC045800000000000LL;
  sub_10015ED64((uint64_t)&v174, (double *)&__dst, 1LL);
  __int128 v176 = xmmword_100423D50;
  uint64_t v177 = 0x4024000000000000LL;
  int v178 = 45;
  LOBYTE(v179) = 0;
  char v181 = 0;
  uint64_t v182 = 0LL;
  char v183 = 0;
  int v184 = 1;
  char v185 = 1;
  __int128 v186 = xmmword_100423D60;
  __int128 v187 = xmmword_100423D70;
  __int128 v188 = v22;
  unint64_t v189 = 0xC059000000000000LL;
  __int128 v190 = xmmword_100423D80;
  int32x2_t v191 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v192 = xmmword_100423CC0;
  uint64_t v194 = 0LL;
  uint64_t v195 = 0LL;
  uint64_t v193 = 0x3FD999999999999ALL;
  __int128 v196 = xmmword_100423CD0;
  int v197 = 5;
  uint64_t v198 = 0x4000000000000000LL;
  int v199 = 10;
  uint64_t v200 = 0x4034000000000000LL;
  int v201 = 3;
  __int128 v202 = xmmword_100423D90;
  sub_10020171C(v470, &xmmword_1007FA698, (uint64_t)&v172);
  sub_10020171C(v471, &xmmword_1007FA6E0, (uint64_t)&qword_1007FA880);
  uint64_t v397 = 0x200000003LL;
  uint64_t v398 = 0xC045000000000000LL;
  *(void *)&__int128 __dst = 0xC045000000000000LL;
  sub_10015ED64((uint64_t)&v399, (double *)&__dst, 1LL);
  __int128 v402 = xmmword_100423D50;
  uint64_t v403 = 0x4024000000000000LL;
  int v404 = 45;
  LOBYTE(v405) = 0;
  char v407 = 0;
  uint64_t v408 = 0LL;
  char v409 = 0;
  int v410 = 1;
  char v411 = 1;
  __int128 v412 = xmmword_100423D60;
  __int128 v413 = xmmword_100423D70;
  __int128 v414 = v22;
  unint64_t v415 = 0xC059000000000000LL;
  __int128 v416 = xmmword_100423D80;
  int32x2_t v417 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v418 = xmmword_100423CC0;
  uint64_t v420 = 0LL;
  uint64_t v421 = 0LL;
  uint64_t v419 = 0x3FD999999999999ALL;
  __int128 v422 = xmmword_100423CD0;
  int v423 = 5;
  uint64_t v424 = 0x4000000000000000LL;
  int v425 = 10;
  uint64_t v426 = 0x4034000000000000LL;
  int v427 = 3;
  __int128 v428 = xmmword_100423D90;
  sub_10020171C(v472, &xmmword_1007FA380, (uint64_t)&v397);
  uint64_t v366 = 0x200000003LL;
  uint64_t v367 = 0xC043000000000000LL;
  *(void *)&__int128 __dst = 0xC043000000000000LL;
  sub_10015ED64((uint64_t)v368, (double *)&__dst, 1LL);
  __int128 v369 = xmmword_100423D50;
  uint64_t v370 = 0x4024000000000000LL;
  int v371 = 45;
  LOBYTE(v373[0]) = 0;
  char v375 = 0;
  uint64_t v376 = 0LL;
  char v377 = 0;
  int v378 = 1;
  char v379 = 1;
  __int128 v380 = xmmword_100423D60;
  __int128 v381 = xmmword_100423D70;
  __int128 v382 = v22;
  unint64_t v383 = 0xC059000000000000LL;
  __int128 v384 = xmmword_100423D80;
  int32x2_t v385 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v386 = xmmword_100423CC0;
  uint64_t v388 = 0LL;
  uint64_t v389 = 0LL;
  uint64_t v387 = 0x3FD999999999999ALL;
  __int128 v390 = xmmword_100423CD0;
  int v391 = 5;
  uint64_t v392 = 0x4000000000000000LL;
  int v393 = 10;
  uint64_t v394 = 0x4034000000000000LL;
  int v395 = 3;
  __int128 v396 = xmmword_100423D90;
  sub_10020171C(v473, (__int128 *)&qword_1007FA368, (uint64_t)&v366);
  uint64_t v336 = 0x200000003LL;
  char v337 = (void *)0xC044800000000000LL;
  *(void *)&__int128 __dst = 0xC044800000000000LL;
  sub_10015ED64((uint64_t)v338, (double *)&__dst, 1LL);
  __int128 v339 = xmmword_100423D50;
  uint64_t v340 = 0x4024000000000000LL;
  int v341 = 45;
  LOBYTE(v342) = 0;
  char v344 = 0;
  uint64_t v345 = 0LL;
  char v346 = 0;
  int v347 = 1;
  char v348 = 1;
  __int128 v349 = xmmword_100423D60;
  __int128 v350 = xmmword_100423D70;
  __int128 v351 = v22;
  unint64_t v352 = 0xC059000000000000LL;
  __int128 v353 = xmmword_100423D80;
  int32x2_t v354 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v355 = xmmword_100423CC0;
  uint64_t v357 = 0LL;
  uint64_t v358 = 0LL;
  uint64_t v356 = 0x3FD999999999999ALL;
  __int128 v359 = xmmword_100423CD0;
  int v360 = 5;
  uint64_t v361 = 0x4000000000000000LL;
  int v362 = 10;
  uint64_t v363 = 0x4034000000000000LL;
  int v364 = 3;
  __int128 v365 = xmmword_100423D90;
  sub_10020171C(v474, (__int128 *)&qword_1007FA338, (uint64_t)&v336);
  uint64_t v142 = 0x200000003LL;
  unint64_t v143 = (void *)0xC043000000000000LL;
  *(void *)&__int128 __dst = 0xC043000000000000LL;
  sub_10015ED64((uint64_t)v144, (double *)&__dst, 1LL);
  __int128 v145 = xmmword_100423D50;
  uint64_t v146 = 0x4024000000000000LL;
  int v147 = 45;
  LOBYTE(v14std::ostream::~ostream(v2, v3 + 8) = 0;
  char v150 = 0;
  uint64_t v151 = 0LL;
  char v152 = 0;
  int v153 = 1;
  char v154 = 1;
  __int128 v155 = xmmword_100423D60;
  __int128 v156 = xmmword_100423D70;
  __int128 v157 = v22;
  unint64_t v158 = 0xC059000000000000LL;
  __int128 v159 = xmmword_100423D80;
  int32x2_t v160 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v161 = xmmword_100423CC0;
  uint64_t v163 = 0LL;
  uint64_t v164 = 0LL;
  uint64_t v162 = 0x3FD999999999999ALL;
  __int128 v165 = xmmword_100423CD0;
  int v166 = 5;
  uint64_t v167 = 0x4000000000000000LL;
  int v168 = 10;
  uint64_t v169 = 0x4034000000000000LL;
  int v170 = 3;
  __int128 v171 = xmmword_100423D90;
  sub_10020171C(v475, (__int128 *)&qword_1007FA350, (uint64_t)&v142);
  uint64_t v112 = 0x200000003LL;
  unint64_t v113 = (void *)0xC043000000000000LL;
  *(void *)&__int128 __dst = 0xC043000000000000LL;
  sub_10015ED64((uint64_t)v114, (double *)&__dst, 1LL);
  __int128 v115 = xmmword_100423D50;
  uint64_t v116 = 0x4024000000000000LL;
  int v117 = 45;
  LOBYTE(v11std::ostream::~ostream(v2, v3 + 8) = 0;
  char v120 = 0;
  uint64_t v121 = 0LL;
  char v122 = 0;
  int v123 = 1;
  char v124 = 1;
  __int128 v125 = xmmword_100423D60;
  __int128 v126 = xmmword_100423D70;
  __int128 v127 = v22;
  unint64_t v128 = 0xC059000000000000LL;
  __int128 v129 = xmmword_100423D80;
  int32x2_t v130 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v131 = xmmword_100423CC0;
  uint64_t v133 = 0LL;
  uint64_t v134 = 0LL;
  uint64_t v132 = 0x3FD999999999999ALL;
  __int128 v135 = xmmword_100423CD0;
  int v136 = 5;
  uint64_t v137 = 0x4000000000000000LL;
  int v138 = 10;
  uint64_t v139 = 0x4034000000000000LL;
  int v140 = 3;
  __int128 v141 = xmmword_100423D90;
  sub_10020171C(v476, (__int128 *)&qword_1007FA320, (uint64_t)&v112);
  unint64_t v306 = 0x200000003LL;
  uint64_t v307 = (void *)0xC046800000000000LL;
  *(void *)&__int128 __dst = 0xC046800000000000LL;
  sub_10015ED64((uint64_t)v308, (double *)&__dst, 1LL);
  __int128 v309 = xmmword_100423D50;
  uint64_t v310 = 0x4024000000000000LL;
  int v311 = 45;
  LOBYTE(v312) = 0;
  char v314 = 0;
  uint64_t v315 = 0LL;
  char v316 = 0;
  int v317 = 1;
  char v318 = 1;
  __int128 v319 = xmmword_100423D60;
  __int128 v320 = xmmword_100423D70;
  __int128 v321 = v22;
  unint64_t v322 = 0xC059000000000000LL;
  __int128 v323 = xmmword_100423D80;
  int32x2_t v324 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v325 = xmmword_100423CC0;
  uint64_t v327 = 0LL;
  uint64_t v328 = 0LL;
  uint64_t v326 = 0x3FD999999999999ALL;
  __int128 v329 = xmmword_100423CD0;
  int v330 = 5;
  uint64_t v331 = 0x4000000000000000LL;
  int v332 = 10;
  uint64_t v333 = 0x4034000000000000LL;
  int v334 = 3;
  __int128 v335 = xmmword_100423D90;
  sub_10020171C(v477, &xmmword_1007FA2C0, (uint64_t)&v306);
  *(void *)&v277[0] = 0x300000008LL;
  v277[1] = -41.0;
  *(void *)&__int128 __dst = 0xC044800000000000LL;
  sub_10015ED64((uint64_t)v278, (double *)&__dst, 1LL);
  __int128 v279 = xmmword_100423D50;
  uint64_t v280 = 0x4024000000000000LL;
  int v281 = 45;
  LOBYTE(v282) = 0;
  char v284 = 0;
  uint64_t v285 = 0LL;
  char v286 = 0;
  int v287 = 1;
  char v288 = 1;
  __int128 v289 = xmmword_100423D60;
  __int128 v290 = xmmword_100423D70;
  __int128 v291 = v22;
  unint64_t v292 = 0xC059000000000000LL;
  __int128 v293 = xmmword_100423D80;
  int32x2_t v294 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v295 = xmmword_100423CC0;
  uint64_t v297 = 0LL;
  uint64_t v298 = 0LL;
  uint64_t v296 = 0x3FD999999999999ALL;
  __int128 v299 = xmmword_100423CD0;
  int v300 = 5;
  uint64_t v301 = 0x4000000000000000LL;
  int v302 = 10;
  uint64_t v303 = 0x4034000000000000LL;
  int v304 = 3;
  __int128 v305 = xmmword_100423D90;
  sub_10020171C(v478, &xmmword_1007FA6B0, (uint64_t)v277);
  v83[0] = 0x200000003LL;
  v83[1] = 0xC049000000000000LL;
  *(void *)&__int128 __dst = 0xC049000000000000LL;
  sub_10015ED64((uint64_t)v84, (double *)&__dst, 1LL);
  __int128 v85 = xmmword_1004287C0;
  uint64_t v86 = 0x4000000000000000LL;
  int v87 = 20;
  LOBYTE(v8std::ostream::~ostream(v2, v3 + 8) = 0;
  char v90 = 0;
  uint64_t v91 = 0LL;
  char v92 = 0;
  int v93 = 1;
  char v94 = 1;
  __int128 v95 = xmmword_100423D60;
  __int128 v96 = xmmword_100423D70;
  __int128 v97 = v22;
  unint64_t v98 = 0xC059000000000000LL;
  __int128 v99 = xmmword_100423D80;
  int32x2_t v100 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v101 = xmmword_100423CC0;
  uint64_t v103 = 0LL;
  uint64_t v104 = 0LL;
  uint64_t v102 = 0x3FD999999999999ALL;
  __int128 v105 = xmmword_100423CD0;
  int v106 = 5;
  uint64_t v107 = 0x4000000000000000LL;
  int v108 = 10;
  uint64_t v109 = 0x4034000000000000LL;
  int v110 = 3;
  __int128 v111 = xmmword_100423D90;
  sub_10020171C(v479, &xmmword_1007FA398, (uint64_t)v83);
  v54[0] = 0x200000003LL;
  v54[1] = 0xC049000000000000LL;
  *(void *)&__int128 __dst = 0xC049000000000000LL;
  sub_10015ED64((uint64_t)v55, (double *)&__dst, 1LL);
  __int128 v56 = xmmword_1004287C0;
  uint64_t v57 = 0x4000000000000000LL;
  int v58 = 20;
  LOBYTE(v59) = 0;
  char v61 = 0;
  uint64_t v62 = 0LL;
  char v63 = 0;
  int v64 = 1;
  char v65 = 1;
  __int128 v66 = xmmword_100423D60;
  __int128 v67 = xmmword_100423D70;
  __int128 v68 = v22;
  unint64_t v69 = 0xC059000000000000LL;
  __int128 v70 = xmmword_100423D80;
  int32x2_t v71 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v72 = xmmword_100423CC0;
  uint64_t v74 = 0LL;
  uint64_t v75 = 0LL;
  uint64_t v73 = 0x3FD999999999999ALL;
  __int128 v76 = xmmword_100423CD0;
  int v77 = 5;
  uint64_t v78 = 0x4000000000000000LL;
  int v79 = 10;
  uint64_t v80 = 0x4034000000000000LL;
  int v81 = 3;
  __int128 v82 = xmmword_100423D90;
  sub_10020171C(v480, &xmmword_1007FA3B0, (uint64_t)v54);
  sub_100203340((uint64_t)v234, (const void **)v458, 13LL);
  sub_100201830(v481, &qword_1007FA710, v234);
  sub_1002036D0((uint64_t)v235, v481, 1LL);
  int v484 = 2;
  sub_100203904(v485, v235);
  v23[0] = 0x300000008LL;
  v23[1] = 0xC03C000000000000LL;
  v237[0] = -28.0;
  sub_10015ED64((uint64_t)v24, v237, 1LL);
  __int128 v25 = xmmword_100423D50;
  uint64_t v26 = 0x4024000000000000LL;
  int v27 = 45;
  LOBYTE(__p) = 0;
  char v30 = 0;
  uint64_t v31 = 0LL;
  char v32 = 0;
  int v33 = 1;
  char v34 = 1;
  __int128 v35 = xmmword_100423D60;
  __int128 v36 = xmmword_100423D70;
  __int128 v37 = v22;
  unint64_t v38 = 0xC059000000000000LL;
  __int128 v39 = xmmword_100423D80;
  int32x2_t v40 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v41 = xmmword_100423CC0;
  uint64_t v43 = 0LL;
  uint64_t v44 = 0LL;
  uint64_t v42 = 0x3FD999999999999ALL;
  __int128 v45 = xmmword_100423CD0;
  int v46 = 5;
  uint64_t v47 = 0x4000000000000000LL;
  int v48 = 10;
  uint64_t v49 = 0x4034000000000000LL;
  int v50 = 3;
  __int128 v51 = xmmword_100423D90;
  sub_10020171C((char *)&__dst, &xmmword_1007FA6B0, (uint64_t)v23);
  *(void *)&v237[0] = 0x300000008LL;
  v237[1] = -32.0;
  double v236 = -32.0;
  sub_10015ED64((uint64_t)v238, &v236, 1LL);
  __int128 v239 = xmmword_100423D50;
  uint64_t v240 = 0x4024000000000000LL;
  int v241 = 45;
  LOBYTE(v242) = 0;
  v244[0] = 0;
  uint64_t v245 = 0LL;
  char v246 = 0;
  int v247 = 1;
  char v248 = 1;
  __int128 v249 = xmmword_100423D60;
  __int128 v250 = xmmword_100423D70;
  __int128 v251 = v22;
  unint64_t v252 = 0xC059000000000000LL;
  __int128 v253 = xmmword_100423D80;
  int32x2_t v254 = vdup_n_s32(0x3DCCCCCDu);
  __int128 v255 = xmmword_100423CC0;
  uint64_t v257 = 0LL;
  uint64_t v258 = 0LL;
  uint64_t v256 = 0x3FD999999999999ALL;
  __int128 v259 = xmmword_100423CD0;
  int v260 = 5;
  uint64_t v261 = 0x4000000000000000LL;
  int v262 = 10;
  uint64_t v263 = 0x4034000000000000LL;
  int v264 = 3;
  __int128 v265 = xmmword_100423D90;
  sub_10020171C(v273, &xmmword_1007FA6C8, (uint64_t)v237);
  sub_100203340((uint64_t)v52, (const void **)&__dst, 2LL);
  sub_100201830(v274, &qword_1007FA710, v52);
  sub_1002036D0((uint64_t)v53, v274, 1LL);
  int v486 = 7;
  sub_100203904(v487, v53);
  sub_1002039DC((uint64_t)&unk_100800800, &v484, 2LL);
  for (uint64_t n = 0LL; n != -8; n -= 4LL)
    sub_100203218((uint64_t)&v487[n], (void *)v487[n + 1]);
  sub_100203218((uint64_t)v53, v53[1]);
  sub_1002032A0((uint64_t)v276, v276[1]);
  if (v275 < 0) {
    operator delete((void *)v274[0]);
  }
  sub_1002032A0((uint64_t)v52, v52[1]);
  uint64_t v17 = 688LL;
  do
  {
    int v18 = (void **)((char *)&__dst + v17);
    sub_100034A98((uint64_t)(v18 - 38), *(v18 - 37));
    v17 -= 344LL;
  }

  while (v17);
  if (v244[0] && v243 < 0) {
    operator delete(v242);
  }
  sub_100034A98((uint64_t)v238, v238[1]);
  if (v30 && v29 < 0) {
    operator delete(__p);
  }
  sub_100034A98((uint64_t)v24, v24[1]);
  sub_100203218((uint64_t)v235, v235[1]);
  sub_1002032A0((uint64_t)v483, v483[1]);
  if (v482 < 0) {
    operator delete((void *)v481[0]);
  }
  sub_1002032A0((uint64_t)v234, v234[1]);
  for (iuint64_t i = 0LL; ii != -4472; ii -= 344LL)
  {
    __int128 v20 = (void **)&v458[ii];
    if (v480[ii + 120] && v480[ii + 119] < 0) {
      operator delete(v20[528]);
    }
    sub_100034A98((uint64_t)&v480[ii + 40], v20[522]);
    if (v480[ii + 23] < 0) {
      operator delete(v20[516]);
    }
  }

  if (v61 && v60 < 0) {
    operator delete(v59);
  }
  sub_100034A98((uint64_t)v55, v55[1]);
  if (v90 && v89 < 0) {
    operator delete(v88);
  }
  sub_100034A98((uint64_t)v84, v84[1]);
  if (v284 && v283 < 0) {
    operator delete(v282);
  }
  sub_100034A98((uint64_t)v278, v278[1]);
  if (v314 && v313 < 0) {
    operator delete(v312);
  }
  sub_100034A98((uint64_t)v308, v308[1]);
  if (v120 && v119 < 0) {
    operator delete(v118);
  }
  sub_100034A98((uint64_t)v114, v114[1]);
  if (v150 && v149 < 0) {
    operator delete(v148);
  }
  sub_100034A98((uint64_t)v144, v144[1]);
  if (v344 && v343 < 0) {
    operator delete(v342);
  }
  sub_100034A98((uint64_t)v338, v338[1]);
  if (v375 && v374 < 0) {
    operator delete(v373[0]);
  }
  sub_100034A98((uint64_t)v368, v368[1]);
  if (v407 && v406 < 0) {
    operator delete(v405);
  }
  sub_100034A98((uint64_t)&v399, v400);
  if (v181 && v180 < 0) {
    operator delete(v179);
  }
  sub_100034A98((uint64_t)&v174, v175);
  if (v212 && v211 < 0) {
    operator delete(v210);
  }
  sub_100034A98((uint64_t)&v205, v206);
  if (v436[0] && v435 < 0) {
    operator delete(v434);
  }
  sub_100034A98((uint64_t)&v430, *((void **)&v430 + 1));
  __cxa_atexit((void (*)(void *))sub_1001FE060, &unk_100800800, (void *)&_mh_execute_header);
  sub_10020CF58();
  sub_1002122C0();
  objc_autoreleasePoolPop(context);
}

void sub_1002182CC(_Unwind_Exception *a1)
{
  while (1)
  {
    v1 -= 4;
    if (v1 == &STACK[0x15E0]) {
      _Unwind_Resume(a1);
    }
  }

void *sub_1002193B0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B6DB0[a1]);
}

void *sub_1002193C4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B6E08[a1]);
}

void *sub_1002193D8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B6E50[a1]);
}

void *sub_1002193EC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B6E70[a1]);
}

void sub_1002198EC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_100219F30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021A118(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021A200(_Unwind_Exception *a1)
{
  __int128 v4 = v3;

  _Unwind_Resume(a1);
}

void sub_10021A314( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10021A444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021ABD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021AF10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021B024(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021B3C8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  _Unwind_Resume(a1);
}

void sub_10021B64C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  _Unwind_Resume(a1);
}

void sub_10021B794(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021B8C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021B960(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021BD14( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  _Unwind_Resume(a1);
}

void sub_10021BEE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021C010(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021C370(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021C4D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021C818( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  __int128 v20 = *(void **)(v18 - 112);
  if (v20)
  {
    *(void *)(v18 - 104) = v20;
    operator delete(v20);
  }

  _Unwind_Resume(a1);
}

void sub_10021CA84( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10021CB70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021CB84(uint64_t a1)
{
  if (*(_BYTE *)(*(void *)(a1 + 32) + 56LL))
  {
    v5.receiver = *(id *)(a1 + 32);
    v5.super_class = (Class)&OBJC_CLASS___NIServerNearbyPeerSession;
    id v2 = objc_msgSendSuper2(&v5, "resourcesManager");
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    __int128 v4 = (void *)objc_claimAutoreleasedReturnValue([v3 remote]);
    [v4 didUpdateNearbyObjects:*(void *)(a1 + 40)];
  }

void sub_10021CC04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021CD24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021CD3C(uint64_t a1)
{
  if (*(_BYTE *)(*(void *)(a1 + 32) + 56LL))
  {
    v5.receiver = *(id *)(a1 + 32);
    v5.super_class = (Class)&OBJC_CLASS___NIServerNearbyPeerSession;
    id v2 = objc_msgSendSuper2(&v5, "resourcesManager");
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    __int128 v4 = (void *)objc_claimAutoreleasedReturnValue([v3 remote]);
    [v4 didUpdateAlgorithmState:*(void *)(a1 + 40) forObject:*(void *)(a1 + 48)];
  }

void sub_10021CDBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021CF08(_Unwind_Exception *a1)
{
  objc_super v5 = v4;

  _Unwind_Resume(a1);
}

void sub_10021CFA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021D024( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10021D124()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  v10[0] = xmmword_100428828;
  v10[1] = unk_100428838;
  sub_10015EABC((uint64_t)&unk_1007FABB8, (int *)v10, 4LL);
  xmmword_1007FABD0 = xmmword_100423CB0;
  unk_1007FABE0 = xmmword_100423CC0;
  qword_1007FABF8 = 0LL;
  unk_1007FAC00 = 0LL;
  qword_1007FABF0 = 0x3FD999999999999ALL;
  unk_1007FAC08 = xmmword_100423CD0;
  dword_1007FAC18 = 5;
  qword_1007FAC20 = 0x4000000000000000LL;
  dword_1007FAC28 = 5;
  byte_1007FAC30 = 0;
  *(void *)&algn_1007FAC31[3] = 0x30000000ALL;
  xmmword_1007FAC40 = xmmword_100423CE0;
  unk_1007FAC50 = xmmword_100423CF0;
  xmmword_1007FAC60 = xmmword_100423D00;
  qword_1007FAC70 = 0x3FE3333333333333LL;
  dword_1007FAC78 = 3;
  xmmword_1007FAC80 = xmmword_100423D10;
  unk_1007FAC90 = xmmword_100423CF0;
  xmmword_1007FACA0 = xmmword_100423CE0;
  qword_1007FACB0 = 0x3FE3333333333333LL;
  byte_1007FACB8 = 0;
  xmmword_1007FACC0 = xmmword_100423D20;
  unk_1007FACD0 = xmmword_100423D30;
  __asm { FMOV            V0.2D, #1.0 }

  __int128 v8 = _Q0;
  xmmword_1007FACE0 = _Q0;
  qword_1007FACF0 = 0xBFD3333333333333LL;
  xmmword_1007FACF8 = xmmword_100423D40;
  qword_1007FAD08 = 0x3E99999A40000000LL;
  xmmword_1007FAD10 = xmmword_100423CC0;
  qword_1007FAD28 = 0LL;
  unk_1007FAD30 = 0LL;
  qword_1007FAD20 = 0x3FD999999999999ALL;
  xmmword_1007FAD38 = xmmword_100423CD0;
  dword_1007FAD48 = 5;
  qword_1007FAD50 = 0x4000000000000000LL;
  dword_1007FAD58 = 4;
  qword_1007FAD60 = 0x300000008LL;
  qword_1007FAD68 = 0xC04E800000000000LL;
  unint64_t v9 = 0xC04E800000000000LL;
  sub_10015ED64((uint64_t)&unk_1007FAD70, (double *)&v9, 1LL);
  xmmword_1007FAD88 = xmmword_100423D50;
  qword_1007FAD98 = 0x4024000000000000LL;
  dword_1007FADA0 = 45;
  byte_1007FADA8 = 0;
  byte_1007FADC0 = 0;
  qword_1007FADC8 = 0LL;
  byte_1007FADD0 = 0;
  dword_1007FADD4 = 1;
  byte_1007FADD8 = 1;
  xmmword_1007FADE0 = xmmword_100423D60;
  unk_1007FADF0 = xmmword_100423D70;
  xmmword_1007FAE00 = v8;
  qword_1007FAE10 = 0xC059000000000000LL;
  xmmword_1007FAE18 = xmmword_100423D80;
  qword_1007FAE28 = (uint64_t)vdup_n_s32(0x3DCCCCCDu);
  xmmword_1007FAE30 = xmmword_100423CC0;
  qword_1007FAE40 = 0x3FD999999999999ALL;
  qword_1007FAE50 = 0LL;
  qword_1007FAE48 = 0LL;
  xmmword_1007FAE58 = xmmword_100423CD0;
  dword_1007FAE68 = 5;
  qword_1007FAE70 = 0x4000000000000000LL;
  dword_1007FAE78 = 10;
  qword_1007FAE80 = 0x4034000000000000LL;
  dword_1007FAE88 = 3;
  xmmword_1007FAE90 = xmmword_100423D90;
  __cxa_atexit((void (*)(void *))sub_10015CF8C, &unk_1007FABB8, (void *)&_mh_execute_header);
  qword_1007FAEA8 = 0LL;
  unk_1007FAEB0 = 0LL;
  qword_1007FAEA0 = 0LL;
  int32x2_t v6 = operator new(0x40uLL);
  qword_1007FAEA8 = (uint64_t)(v6 + 4);
  unk_1007FAEB0 = v6 + 4;
  *int32x2_t v6 = xmmword_100428848;
  v6[1] = unk_100428858;
  v6[2] = xmmword_100428868;
  v6[3] = unk_100428878;
  qword_1007FAEA0 = (uint64_t)v6;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007FAEA0, (void *)&_mh_execute_header);
  qword_1007FAEC0 = 0LL;
  unk_1007FAEC8 = 0LL;
  qword_1007FAEB8 = 0LL;
  __int128 v7 = operator new(0x10uLL);
  qword_1007FAEC0 = (uint64_t)(v7 + 1);
  unk_1007FAEC8 = v7 + 1;
  *__int128 v7 = xmmword_100428888;
  qword_1007FAEB8 = (uint64_t)v7;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007FAEB8, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_10021D484(_Unwind_Exception *a1)
{
}

uint64_t *sub_10021D4A4(uint64_t *a1, void *a2)
{
  id v3 = a2;
  *a1 = (uint64_t)v3;
  *((_BYTE *)a1 + std::ostream::~ostream(v2, v3 + 8) = 0;
  a1[2] = 0LL;
  __int128 v4 = -[NSUserDefaults initWithSuiteName:]( objc_alloc(&OBJC_CLASS___NSUserDefaults),  "initWithSuiteName:",  @".GlobalPreferences");
  unsigned int v5 = -[NSUserDefaults BOOLForKey:](v4, "BOOLForKey:", @"com.apple.CarKeysTests.enableCertificationLogging");
  *((_BYTE *)a1 + std::ostream::~ostream(v2, v3 + 8) = v5;
  int32x2_t v6 = (os_log_s *)qword_1008000A0;
  BOOL v7 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    if (v7)
    {
      uint64_t v8 = *a1;
      int v13 = 138412290;
      uint64_t v14 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#alisha-cert,Logging enabled (vehicle identifier: %@)",  (uint8_t *)&v13,  0xCu);
    }

    os_log_t v9 = os_log_create("com.apple.certification", "digitalCarKey");
    __int128 v10 = (void *)a1[2];
    a1[2] = (uint64_t)v9;
  }

  else if (v7)
  {
    uint64_t v11 = *a1;
    int v13 = 138412290;
    uint64_t v14 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#alisha-cert,Logging not enabled (vehicle identifier: %@)",  (uint8_t *)&v13,  0xCu);
  }

  return a1;
}

void sub_10021D610(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021D648(uint64_t a1, unsigned __int16 *a2)
{
  if (*(_BYTE *)(a1 + 8))
  {
    uint64_t v26 = a1;
    char v29 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    id v3 = (double *)*((void *)a2 + 11);
    for (uint64_t i = (unsigned __int8 *)*((void *)a2 + 12); v3 != (double *)i; v3 += 2)
    {
      int v5 = *(unsigned __int8 *)v3;
      int32x2_t v6 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
      BOOL v7 = v6;
      if (v5) {
        uint64_t v8 = @"failure";
      }
      else {
        uint64_t v8 = @"success";
      }
      -[NSMutableDictionary setObject:forKey:](v6, "setObject:forKey:", v8, @"responder_status", v26);
      os_log_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v3[1]));
      -[NSMutableDictionary setObject:forKey:](v7, "setObject:forKey:", v9, @"rssi_dBm");

      -[NSMutableArray addObject:](v29, "addObject:", v7);
    }

    int v10 = sub_1002BF768(*a2);
    uint64_t v11 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    int v12 = v11;
    if (v10) {
      int v13 = @"failure";
    }
    else {
      int v13 = @"success";
    }
    -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", v13, @"block_status", v26);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLong:",  *((unsigned int *)a2 + 2)));
    -[NSMutableDictionary setObject:forKey:](v12, "setObject:forKey:", v14, @"uwb_session_id");

    char v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLong:](&OBJC_CLASS___NSNumber, "numberWithUnsignedLong:", a2[12]));
    -[NSMutableDictionary setObject:forKey:](v12, "setObject:forKey:", v15, @"block_index");

    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLong:",  *((unsigned __int8 *)a2 + 84)));
    -[NSMutableDictionary setObject:forKey:](v12, "setObject:forKey:", v16, @"successful_responders");

    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLong:",  (uint64_t)(*((void *)a2 + 12) - *((void *)a2 + 11)) >> 4));
    -[NSMutableDictionary setObject:forKey:](v12, "setObject:forKey:", v17, @"total_responders");

    -[NSMutableDictionary setObject:forKey:](v12, "setObject:forKey:", v29, @"responder_info");
    uint64_t v18 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    -[NSMutableDictionary setObject:forKey:](v18, "setObject:forKey:", @"uwb_ranging_block", @"log_type");
    -[NSMutableDictionary setObject:forKey:](v18, "setObject:forKey:", *v27, @"vehicle_uuid");
    -[NSMutableDictionary setObject:forKey:](v18, "setObject:forKey:", v12, @"payload");
    id v30 = 0LL;
    char v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSJSONSerialization dataWithJSONObject:options:error:]( &OBJC_CLASS___NSJSONSerialization,  "dataWithJSONObject:options:error:",  v18,  3LL,  &v30));
    id v20 = v30;
    if (v20)
    {
      __int128 v21 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_10039E784(v21);
      }
    }

    else
    {
      __int128 v24 = -[NSString initWithData:encoding:](objc_alloc(&OBJC_CLASS___NSString), "initWithData:encoding:", v19, 4LL);
      __int128 v25 = (os_log_s *)v27[2];
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 138412290;
        char v32 = v24;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "\n%@", buf, 0xCu);
      }
    }
  }

  else
  {
    __int128 v22 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      unint64_t v23 = *(NSString **)a1;
      *(_DWORD *)std::string buf = 138412290;
      char v32 = v23;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_INFO,  "#alisha-cert,Skip logging initiator ranging block summary (vehicle identifier: %@)",  buf,  0xCu);
    }
  }

void sub_10021DA04( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_10021DA8C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007FAF50);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_1007FAF50))
  {
    qword_1007FAED0 = 850045863LL;
    unk_1007FAED8 = 0u;
    unk_1007FAEE8 = 0u;
    unk_1007FAEF8 = 0u;
    qword_1007FAF08 = 0LL;
    unk_1007FAF10 = 850045863LL;
    unk_1007FAF18 = 0u;
    unk_1007FAF28 = 0u;
    unk_1007FAF38 = 0u;
    qword_1007FAF48 = 0LL;
    __cxa_atexit((void (*)(void *))sub_10021DB20, &qword_1007FAED0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1007FAF50);
  }

  return &qword_1007FAED0;
}

void sub_10021DB20(std::mutex *a1)
{
}

void sub_10021DB48()
{
  unsigned __int8 v0 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_DEFAULT,  "#ttr,Non-iOS platform. Ignore all event notifications",  v1,  2u);
  }

void sub_10021DBAC()
{
  unsigned __int8 v0 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_DEFAULT,  "#ttr,Non-iOS platform. Ignore all event count resets",  v1,  2u);
  }

uint64_t sub_10021DC10(uint64_t a1)
{
  dispatch_queue_t v2 = dispatch_queue_create("com.apple.nearbyd.NetworkMonitor", 0LL);
  *(void *)a1 = v2;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = a1 + 16;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 40) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(_BYTE *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = 0;
  if (!v2) {
    __assert_rtn("PRNetworkMonitor", "PRNetworkMonitor.mm", 22, "fQueue");
  }
  return a1;
}

void sub_10021DC90(_Unwind_Exception *a1)
{
  sub_10021EAD4(v2, *(void **)(v1 + 16));
  _Unwind_Resume(a1);
}

uint64_t sub_10021DCC4(uint64_t a1)
{
  uint64_t v2 = *(dispatch_queue_s **)a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10021DD4C;
  block[3] = &unk_1007A2398;
  void block[4] = a1;
  dispatch_sync(v2, block);

  sub_10021EAD4(a1 + 8, *(void **)(a1 + 16));
  return a1;
}

void sub_10021DD4C(uint64_t a1)
{
}

void sub_10021DD54(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "stop network monitoring", buf, 2u);
  }

  if (*(void *)(a1 + 32))
  {
    id v3 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "canceling fMonitor", v5, 2u);
    }

    nw_path_monitor_cancel(*(nw_path_monitor_t *)(a1 + 32));
    __int128 v4 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = 0LL;
  }

BOOL sub_10021DE28(dispatch_queue_s **a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  uint64_t v14 = 0LL;
  char v15 = &v14;
  uint64_t v16 = 0x2020000000LL;
  char v17 = 1;
  if (!v7) {
    __assert_rtn("registerListener", "PRNetworkMonitor.mm", 36, "clientQ");
  }
  uint64_t v8 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768LL;
  block[2] = sub_10021DFD0;
  block[3] = &unk_1007B6FB0;
  __int128 v21 = a1;
  uint64_t v22 = a2;
  id v9 = v7;
  id v19 = v9;
  sub_10001E914((uint64_t)v23, a3);
  id v20 = &v14;
  dispatch_sync(v8, block);
  int v10 = *((unsigned __int8 *)v15 + 24);
  uint64_t v11 = v24;
  if (v24 == v23)
  {
    uint64_t v12 = 4LL;
    uint64_t v11 = v23;
    goto LABEL_6;
  }

  if (v24)
  {
    uint64_t v12 = 5LL;
LABEL_6:
    (*(void (**)(void))(*v11 + 8 * v12))();
  }

  _Block_object_dispose(&v14, 8);
  return v10 != 0;
}

void sub_10021DF9C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
  _Block_object_dispose(&a10, 8);
  _Unwind_Resume(a1);
}

void sub_10021DFD0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = sub_10001E9D0(v2 + 8, *(const void ***)(a1 + 56));
  __int128 v4 = (os_log_s *)qword_1008000A0;
  BOOL v5 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
  if (v2 + 16 != v3)
  {
    if (v5)
    {
      int32x2_t v6 = *(uint64_t ***)(a1 + 56);
      *(_DWORD *)std::string buf = 136315138;
      *(void *)&uint8_t buf[4] = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "identifier %s already registered", buf, 0xCu);
    }

    return;
  }

  if (v5)
  {
    id v7 = *(uint64_t ***)(a1 + 56);
    *(_DWORD *)std::string buf = 136315138;
    *(void *)&uint8_t buf[4] = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "registerListener - %s", buf, 0xCu);
  }

  sub_10021EA80(buf, (id *)(a1 + 32), a1 + 64);
  uint64_t v11 = *(const void ***)(a1 + 56);
  uint64_t v8 = sub_10021EB88((uint64_t **)(v2 + 8), v11, (uint64_t)&unk_1004242F8, (__int128 **)&v11);
  sub_10021E1E4((void **)v8 + 7, (void **)buf);
  id v9 = v13;
  if (v13 == &buf[8])
  {
    uint64_t v10 = 4LL;
    id v9 = &buf[8];
  }

  else
  {
    if (!v13) {
      goto LABEL_15;
    }
    uint64_t v10 = 5LL;
  }

  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_15:

  if (*(void *)(v2 + 24) == 1LL) {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = sub_10021E238(v2);
  }
}

void sub_10021E194( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t *a15)
{
  uint64_t v16 = a15;
  if (a15 == &a12)
  {
    uint64_t v17 = 4LL;
    uint64_t v16 = &a12;
  }

  else
  {
    if (!a15) {
      goto LABEL_6;
    }
    uint64_t v17 = 5LL;
  }

  (*(void (**)(void))(*v16 + 8 * v17))();
LABEL_6:

  _Unwind_Resume(a1);
}

void **sub_10021E1E4(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a2 = 0LL;
  uint64_t v4 = (uint64_t)(a2 + 1);
  BOOL v5 = *a1;
  *a1 = v3;
  int32x2_t v6 = a1 + 1;

  sub_10001FA54(v6, v4);
  return a1;
}

BOOL sub_10021E238(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "start network monitoring", buf, 2u);
  }

  nw_path_monitor_t v3 = nw_path_monitor_create();
  uint64_t v4 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v3;

  BOOL v5 = *(nw_path_monitor **)(a1 + 32);
  if (v5)
  {
    update_handler[0] = _NSConcreteStackBlock;
    update_handler[1] = 3221225472LL;
    update_handler[2] = sub_10021E574;
    update_handler[3] = &unk_1007B6FE0;
    update_void handler[4] = a1;
    nw_path_monitor_set_update_handler(v5, update_handler);
    nw_path_monitor_set_queue(*(nw_path_monitor_t *)(a1 + 32), *(dispatch_queue_t *)a1);
    nw_path_monitor_start(*(nw_path_monitor_t *)(a1 + 32));
    uint64_t evaluator_for_endpoint = nw_path_create_evaluator_for_endpoint(0LL, 0LL);
    id v7 = (void *)evaluator_for_endpoint;
    if (evaluator_for_endpoint)
    {
      uint64_t v8 = (void *)nw_path_evaluator_copy_path(evaluator_for_endpoint);
      sub_10021E60C(a1, v8);
    }
  }

  else
  {
    id v9 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10039E7C4(v9);
    }
  }

  return v5 != 0LL;
}

void sub_10021E378(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10021E394(uint64_t a1, uint64_t a2)
{
  return sub_10001E914(a1 + 64, a2 + 64);
}

void *sub_10021E3A0(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 64);
  uint64_t result = *(void **)(a1 + 88);
  if (result == v1)
  {
    uint64_t v3 = 4LL;
    uint64_t result = v1;
  }

  else
  {
    if (!result) {
      return result;
    }
    uint64_t v3 = 5LL;
  }

  return (void *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_10021E3D4(dispatch_queue_s **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  _DWORD v3[2] = sub_10021E42C;
  v3[3] = &unk_1007AF100;
  v3[4] = a1;
  _OWORD v3[5] = a2;
  dispatch_sync(v2, v3);
}

void sub_10021E42C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = sub_10001E9D0(v2 + 8, *(const void ***)(a1 + 40));
  uint64_t v4 = (os_log_s *)qword_1008000A0;
  BOOL v5 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
  if (v2 + 16 == v3)
  {
    if (v5)
    {
      id v7 = *(uint64_t **)(a1 + 40);
      int v8 = 136315138;
      id v9 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "identifier %s already deregistered",  (uint8_t *)&v8,  0xCu);
    }
  }

  else
  {
    if (v5)
    {
      int32x2_t v6 = *(uint64_t **)(a1 + 40);
      int v8 = 136315138;
      id v9 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "deRegisterListener - %s",  (uint8_t *)&v8,  0xCu);
    }

    sub_10021ED08((uint64_t **)(v2 + 8), *(const void ***)(a1 + 40));
    if (!*(void *)(v2 + 24)) {
      sub_10021DD54(v2);
    }
  }

void sub_10021E574(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    sub_10021E60C(*(void *)(a1 + 32), v3);
  }

  else
  {
    uint64_t v4 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v5 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "network path monitor update handler - null nw_path_t",  v5,  2u);
    }
  }
}

void sub_10021E5FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021E60C(uint64_t a1, void *a2)
{
  uint64_t v4 = a2;
  if (!nw_path_is_equal(*(nw_path_t *)(a1 + 40), v4))
  {
    if (nw_path_uses_interface_type(v4, nw_interface_type_wifi))
    {
      BOOL v5 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        int32x2_t v6 = "new path: wifi";
LABEL_16:
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v6, buf, 2u);
      }
    }

    else if (nw_path_uses_interface_type(v4, nw_interface_type_cellular))
    {
      BOOL v5 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        int32x2_t v6 = "new path: cellular";
        goto LABEL_16;
      }
    }

    else if (nw_path_uses_interface_type(v4, nw_interface_type_wired))
    {
      BOOL v5 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        int32x2_t v6 = "new path: wired";
        goto LABEL_16;
      }
    }

    else
    {
      BOOL v7 = nw_path_uses_interface_type(v4, nw_interface_type_loopback);
      BOOL v5 = (os_log_s *)qword_1008000A0;
      BOOL v8 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
      if (v7)
      {
        if (v8)
        {
          *(_WORD *)std::string buf = 0;
          int32x2_t v6 = "new path: loopback";
          goto LABEL_16;
        }
      }

      else if (v8)
      {
        *(_WORD *)std::string buf = 0;
        int32x2_t v6 = "new path: other";
        goto LABEL_16;
      }
    }

    objc_storeStrong((id *)(a1 + 40), a2);
  }

  int v9 = *(unsigned __int8 *)(a1 + 48);
  *(_BYTE *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = (nw_path_get_status(v4) & 0xFFFFFFFD) == 1;
  uint64_t v10 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *(unsigned __int8 *)(a1 + 48);
    *(_DWORD *)std::string buf = 67109376;
    *(_DWORD *)&uint8_t buf[4] = v9;
    __int16 v26 = 1024;
    int v27 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "wasNetworkReachable: %d, fNetworkReachable: %d",  buf,  0xEu);
  }

  if (*(unsigned __int8 *)(a1 + 48) != v9)
  {
    uint64_t v12 = *(void **)(a1 + 8);
    if (v12 != (void *)(a1 + 16))
    {
      while (1)
      {
        int v13 = (dispatch_queue_s *)(id)v12[7];
        sub_10001E914((uint64_t)buf, (uint64_t)(v12 + 8));
        block[0] = _NSConcreteStackBlock;
        block[1] = 3321888768LL;
        block[2] = sub_10021EA00;
        block[3] = &unk_1007B7000;
        void block[4] = a1;
        uint64_t v14 = (uint64_t)v28;
        if (!v28) {
          goto LABEL_25;
        }
        if (v28 != buf) {
          break;
        }
        __int128 v24 = v23;
        (*(void (**)(uint8_t *, _BYTE *))(*(void *)buf + 24LL))(buf, v23);
LABEL_27:
        dispatch_async(v13, block);
        char v15 = v24;
        if (v24 == v23)
        {
          char v15 = v23;
          uint64_t v16 = 4LL;
        }

        else
        {
          if (!v24) {
            goto LABEL_32;
          }
          uint64_t v16 = 5LL;
        }

        (*(void (**)(void))(*v15 + 8 * v16))();
LABEL_32:
        uint64_t v17 = v28;
        if (v28 == buf)
        {
          uint64_t v17 = buf;
          uint64_t v18 = 4LL;
          goto LABEL_36;
        }

        if (v28)
        {
          uint64_t v18 = 5LL;
LABEL_36:
          (*(void (**)(void))(*(void *)v17 + 8 * v18))();
        }

        id v19 = (void *)v12[1];
        if (v19)
        {
          do
          {
            id v20 = v19;
            id v19 = (void *)*v19;
          }

          while (v19);
        }

        else
        {
          do
          {
            id v20 = (void *)v12[2];
            BOOL v21 = *v20 == (void)v12;
            uint64_t v12 = v20;
          }

          while (!v21);
        }

        uint64_t v12 = v20;
        if (v20 == (void *)(a1 + 16)) {
          goto LABEL_43;
        }
      }

      uint64_t v14 = (*(uint64_t (**)(void))(*(void *)v28 + 16LL))();
LABEL_25:
      __int128 v24 = (_BYTE *)v14;
      goto LABEL_27;
    }
  }

void sub_10021E9A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10021EA00(uint64_t a1)
{
  char v3 = *(_BYTE *)(*(void *)(a1 + 32) + 48LL);
  uint64_t v1 = *(void *)(a1 + 64);
  if (!v1) {
    sub_10001EEF0();
  }
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)v1 + 48LL))(v1, &v3);
}

uint64_t sub_10021EA40(uint64_t a1, uint64_t a2)
{
  return sub_10001E914(a1 + 40, a2 + 40);
}

void *sub_10021EA4C(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 40);
  uint64_t result = *(void **)(a1 + 64);
  if (result == v1)
  {
    uint64_t v3 = 4LL;
    uint64_t result = v1;
  }

  else
  {
    if (!result) {
      return result;
    }
    uint64_t v3 = 5LL;
  }

  return (void *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void *sub_10021EA80(void *a1, id *a2, uint64_t a3)
{
  *a1 = *a2;
  sub_10001E914((uint64_t)(a1 + 1), a3);
  return a1;
}

void sub_10021EAC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021EAD4(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10021EAD4(a1, *a2);
    sub_10021EAD4(a1, a2[1]);
    sub_10021EB1C((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_10021EB1C(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 56);
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
  }

  else
  {
    if (!v3) {
      goto LABEL_6;
    }
    uint64_t v4 = 5LL;
  }

  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
}

uint64_t *sub_10021EB88(uint64_t **a1, const void **a2, uint64_t a3, __int128 **a4)
{
  int32x2_t v6 = (uint64_t **)sub_10001E444((uint64_t)a1, &v11, a2);
  BOOL v7 = *v6;
  if (!*v6)
  {
    BOOL v8 = v6;
    sub_10021EC30((uint64_t)a1, a4, (uint64_t)v10);
    sub_10001E548(a1, v11, v8, v10[0]);
    BOOL v7 = v10[0];
    v10[0] = 0LL;
    sub_10021ECC4((uint64_t)v10, 0LL);
  }

  return v7;
}

_BYTE *sub_10021EC30@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int32x2_t v6 = operator new(0x60uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = v6 + 4;
  BOOL v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    uint64_t result = sub_1000063A8(result, *(void **)v8, *((void *)v8 + 1));
  }

  else
  {
    __int128 v9 = *v8;
    v6[6] = *((void *)v8 + 2);
    *(_OWORD *)uint64_t result = v9;
  }

  v6[7] = 0LL;
  v6[11] = 0LL;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_10021ECAC(_Unwind_Exception *a1)
{
}

void sub_10021ECC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_10021EB1C((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

uint64_t sub_10021ED08(uint64_t **a1, const void **a2)
{
  uint64_t v3 = (uint64_t *)sub_10001E9D0((uint64_t)a1, a2);
  uint64_t v4 = v3;
  sub_10001EA5C(a1, v3);
  sub_10021EB1C((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1LL;
}

void *sub_10021ED60@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B77F0)[a1]);
}

void *sub_10021ED74@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B7848)[a1]);
}

void *sub_10021ED88@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B7890)[a1]);
}

void *sub_10021ED9C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B78B0)[a1]);
}

void sub_10021F130(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021F4F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021F980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  sub_100189774((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10021FEB0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20, uint64_t a21, uint64_t a22, void *__p, uint64_t a24, uint64_t a25, char a26)
{
  if (a26 && __p) {
    operator delete(__p);
  }
  if (a10) {
    operator delete(a10);
  }

  _Unwind_Resume(a1);
}

void sub_100220380( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20, char a21)
{
  if (a21)
  {
    if (__p) {
      operator delete(__p);
    }
  }

  _Unwind_Resume(exception_object);
}

void sub_10022061C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  _Unwind_Resume(a1);
}

void sub_1002208D4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_100220AD4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  _Unwind_Resume(a1);
}

void sub_100221210( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20, char a21)
{
  _Unwind_Resume(a1);
}

void sub_100221748( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, uint64_t a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, char a28, uint64_t a29, uint64_t a30, uint64_t a31, char a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36, uint64_t a37, uint64_t a38, uint64_t a39)
{
  sub_100012390((uint64_t)&a13);
  if (a21 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100221A20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100222490(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100222F48( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  _Unwind_Resume(a1);
}

void sub_100223B94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100223D74(void *a1, void *a2, id a3)
{
  id v5 = a1;
  id v6 = a2;
  BOOL v7 = v6;
  if (!v5)
  {
    uint64_t v12 = "dict";
    int v13 = 1728;
    goto LABEL_9;
  }

  if (!v6)
  {
    uint64_t v12 = "dictKey";
    int v13 = 1729;
LABEL_9:
    __assert_rtn("getNSUIntegerFromDictionary", "NIServerCarKeySession.mm", v13, v12);
  }

  __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:v6]);
  if (v9)
  {
    uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSNumber, v8);
    if ((objc_opt_isKindOfClass(v9, v10) & 1) != 0) {
      a3 = [v9 unsignedIntegerValue];
    }
  }

  return a3;
}

void sub_100223E38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10022410C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_100224314( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  _Unwind_Resume(a1);
}

void sub_100224908( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _Unwind_Exception *exception_object, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  _Unwind_Resume(a1);
}

unint64_t sub_100224968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2 = *(_DWORD *)(a1 + 4);
  if (v2 == 1)
  {
    if (!*(_BYTE *)(a1 + 32)) {
      sub_10039F5A4();
    }
    return *(void *)(a1 + 24) / 0x18uLL;
  }

  else if (!v2)
  {
    if (!*(_BYTE *)(a1 + 16)) {
      sub_10039F57C();
    }
    return (unint64_t)(625LL * *(void *)(a1 + 8)) >> 1;
  }

  return a2;
}

void sub_100224B88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _Unwind_Exception *exception_object, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *__p, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26)
  {
    if (__p) {
      operator delete(__p);
    }
  }

  _Unwind_Resume(a1);
}

void sub_100224DF8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, char a20)
{
  if (a20)
  {
    if (__p) {
      operator delete(__p);
    }
  }

  _Unwind_Resume(exception_object);
}

id sub_100224F0C(void *a1, id a2)
{
  id v3 = a1;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:v3]);
  if (v6 && (uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSNumber, v5), (objc_opt_isKindOfClass(v6, v7) & 1) != 0))
  {
    a2 = [v6 intValue];
    uint64_t v8 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 138412546;
      id v12 = v3;
      __int16 v13 = 1024;
      int v14 = (int)a2;
      __int128 v9 = "#ses-carkey,Override %@ exists. New value: %d";
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v9, (uint8_t *)&v11, 0x12u);
    }
  }

  else
  {
    uint64_t v8 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 138412546;
      id v12 = v3;
      __int16 v13 = 1024;
      int v14 = (int)a2;
      __int128 v9 = "#ses-carkey,Override %@ does not exist. Use existing value: %d";
      goto LABEL_7;
    }
  }

  return a2;
}

void sub_10022507C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002252E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100225450(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_100225F54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100226338( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  _Unwind_Resume(a1);
}

void sub_1002265C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100226888( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20, char a21)
{
  if (a21)
  {
    if (__p) {
      operator delete(__p);
    }
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_100226B18(uint64_t a1)
{
  return a1;
}

void sub_100226B40(id *a1)
{
}

void *sub_100226B68(uint64_t a1)
{
  int v2 = operator new(0x10uLL);
  *int v2 = off_1007B7040;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100226BAC(uint64_t a1, void *a2)
{
  *a2 = off_1007B7040;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100226BE0(uint64_t a1)
{
}

void sub_100226BE8(id *a1)
{
}

void sub_100226C10(uint64_t a1, void *a2, uint64_t *a3)
{
  id v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(dispatch_queue_s **)(v4 + 64);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100226D08;
  block[3] = &unk_1007B2E28;
  uint64_t v6 = *a3;
  void block[4] = v4;
  void block[5] = v6;
  int v10 = *((_DWORD *)a3 + 2);
  dispatch_async(v5, block);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

uint64_t sub_100226CC0(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_100226CFC()
{
  return &off_1007B70A0;
}

id sub_100226D08(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "serviceRequestDidUpdateStatus:",  *(void *)(a1 + 40),  *(unsigned int *)(a1 + 48));
}

uint64_t sub_100226D18(uint64_t a1)
{
  return a1;
}

void sub_100226D40(id *a1)
{
}

void *sub_100226D68(uint64_t a1)
{
  int v2 = operator new(0x10uLL);
  *int v2 = off_1007B70C0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100226DAC(uint64_t a1, void *a2)
{
  *a2 = off_1007B70C0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100226DE0(uint64_t a1)
{
}

void sub_100226DE8(id *a1)
{
}

void sub_100226E10(uint64_t a1, void *a2, int *a3)
{
  id v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  int v4 = *a3;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(dispatch_queue_s **)(v5 + 64);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  _DWORD v9[2] = sub_100226F04;
  void v9[3] = &unk_1007B2EE0;
  void v9[4] = v5;
  int v10 = v4;
  dispatch_async(v6, v9);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

uint64_t sub_100226EBC(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_100226EF8()
{
  return &off_1007B7120;
}

id sub_100226F04(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _alishaSessionInvalidatedWithReason:*(unsigned int *)(a1 + 40)];
}

uint64_t sub_100226F14(uint64_t a1)
{
  return a1;
}

void sub_100226F3C(id *a1)
{
}

void *sub_100226F64(uint64_t a1)
{
  int v2 = operator new(0x10uLL);
  *int v2 = off_1007B7140;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100226FA8(uint64_t a1, void *a2)
{
  *a2 = off_1007B7140;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100226FDC(uint64_t a1)
{
}

void sub_100226FE4(id *a1)
{
}

void sub_10022700C(uint64_t a1, void *a2, __int128 *a3)
{
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  __int128 v6 = a3[1];
  __int128 v22 = *a3;
  v23[0] = v6;
  *(_OWORD *)((char *)v23 + 11) = *(__int128 *)((char *)a3 + 27);
  __int128 v25 = 0LL;
  uint64_t v26 = 0LL;
  __int128 v24 = 0LL;
  sub_10018AA10(&v24, *((const void **)a3 + 6), *((void *)a3 + 7), *((void *)a3 + 7) - *((void *)a3 + 6));
  uint64_t v7 = *(void *)((char *)a3 + 77);
  v27[0] = *((void *)a3 + 9);
  *(void *)((char *)v27 + 5) = v7;
  uint64_t v28 = 0LL;
  char v29 = 0LL;
  uint64_t v30 = 0LL;
  sub_10018AA88( &v28,  *((const void **)a3 + 11),  *((void *)a3 + 12),  (uint64_t)(*((void *)a3 + 12) - *((void *)a3 + 11)) >> 4);
  uint64_t v8 = *(void *)(a1 + 8);
  __int128 v9 = *(dispatch_queue_s **)(v8 + 64);
  block[1] = 3321888768LL;
  __int128 v13 = v22;
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_100227294;
  block[3] = &unk_1007B2F98;
  void block[4] = v8;
  v14[0] = v23[0];
  *(_OWORD *)((char *)v14 + 11) = *(_OWORD *)((char *)v23 + 11);
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  char v15 = 0LL;
  sub_10018AA10(&v15, v24, (uint64_t)v25, v25 - (_BYTE *)v24);
  v18[0] = v27[0];
  *(void *)((char *)v18 + 5) = *(void *)((char *)v27 + 5);
  __n128 __p = 0LL;
  id v20 = 0LL;
  uint64_t v21 = 0LL;
  sub_10018AA88(&__p, v28, (uint64_t)v29, (v29 - (_BYTE *)v28) >> 4);
  dispatch_async(v9, block);
  if (__p)
  {
    id v20 = __p;
    operator delete(__p);
  }

  if (v15)
  {
    uint64_t v16 = v15;
    operator delete(v15);
  }

  if (v28)
  {
    char v29 = v28;
    operator delete(v28);
  }

  if (v24)
  {
    __int128 v25 = v24;
    operator delete(v24);
  }

  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

void sub_1002271C4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, void *a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, void *a40, uint64_t a41)
{
  if (__p) {
    operator delete(__p);
  }
  if (a40) {
    operator delete(a40);
  }
  if (a35) {
    operator delete(a35);
  }
  if (v41)
  {
    p_shared_owners = (unint64_t *)&v41->__shared_owners_;
    do
      unint64_t v44 = __ldaxr(p_shared_owners);
    while (__stlxr(v44 - 1, p_shared_owners));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
      std::__shared_weak_count::__release_weak(v41);
    }
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_10022724C(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_100227288()
{
  return &off_1007B71A0;
}

void sub_100227294(uint64_t a1)
{
  int v2 = *(void **)(a1 + 32);
  __int128 v3 = *(_OWORD *)(a1 + 56);
  __int128 v5 = *(_OWORD *)(a1 + 40);
  v6[0] = v3;
  *(_OWORD *)((char *)v6 + 11) = *(_OWORD *)(a1 + 67);
  uint64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  uint64_t v7 = 0LL;
  sub_10018AA10(&v7, *(const void **)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 96) - *(void *)(a1 + 88));
  uint64_t v4 = *(void *)(a1 + 117);
  v10[0] = *(void *)(a1 + 112);
  *(void *)((char *)v10 + 5) = v4;
  __n128 __p = 0LL;
  id v12 = 0LL;
  uint64_t v13 = 0LL;
  sub_10018AA88( &__p,  *(const void **)(a1 + 128),  *(void *)(a1 + 136),  (uint64_t)(*(void *)(a1 + 136) - *(void *)(a1 + 128)) >> 4);
  [v2 _handleInitiatorRangingBlockUpdate:&v5];
  if (__p)
  {
    id v12 = __p;
    operator delete(__p);
  }

  if (v7)
  {
    uint64_t v8 = v7;
    operator delete(v7);
  }

void sub_10022734C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
}

uint64_t sub_100227378(uint64_t a1)
{
  return a1;
}

void sub_1002273A0(id *a1)
{
}

void *sub_1002273C8(uint64_t a1)
{
  int v2 = operator new(0x10uLL);
  *int v2 = off_1007B71C0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_10022740C(uint64_t a1, void *a2)
{
  *a2 = off_1007B71C0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100227440(uint64_t a1)
{
}

void sub_100227448(id *a1)
{
}

void sub_100227470(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = (const void *)a2[1];
  uint64_t v14 = v5;
  char v15 = 0LL;
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  sub_1001896FC(&v15, v4, a2[2], (a2[2] - (uint64_t)v4) >> 1);
  uint64_t v19 = a2[6];
  __int128 v18 = *((_OWORD *)a2 + 2);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(dispatch_queue_s **)(v6 + 64);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768LL;
  block[2] = sub_1002275DC;
  block[3] = &unk_1007B3060;
  void block[4] = v6;
  void block[5] = v14;
  int v10 = 0LL;
  uint64_t v11 = 0LL;
  __n128 __p = 0LL;
  sub_1001896FC(&__p, v15, (uint64_t)v16, (v16 - (_BYTE *)v15) >> 1);
  __int128 v12 = v18;
  uint64_t v13 = v19;
  dispatch_async(v7, block);
  if (__p)
  {
    int v10 = __p;
    operator delete(__p);
  }

  if (v15)
  {
    uint64_t v16 = v15;
    operator delete(v15);
  }

void sub_100227578(_Unwind_Exception *exception_object)
{
  __int128 v3 = *(void **)(v1 - 80);
  if (v3)
  {
    *(void *)(v1 - 72) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_100227594(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1002275D0()
{
  return &off_1007B7220;
}

void sub_1002275DC(uint64_t a1)
{
  int v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  __n128 __p = 0LL;
  uint64_t v5 = 0LL;
  uint64_t v6 = 0LL;
  sub_1001896FC( &__p,  *(const void **)(a1 + 48),  *(void *)(a1 + 56),  (uint64_t)(*(void *)(a1 + 56) - *(void *)(a1 + 48)) >> 1);
  __int128 v7 = *(_OWORD *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 88);
  [v2 _handleSessionStats:&v3];
  if (__p)
  {
    uint64_t v5 = __p;
    operator delete(__p);
  }

void sub_100227650( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10022766C(uint64_t a1)
{
  return a1;
}

void sub_100227694(id *a1)
{
}

void *sub_1002276BC(uint64_t a1)
{
  int v2 = operator new(0x10uLL);
  *int v2 = off_1007B7240;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100227700(uint64_t a1, void *a2)
{
  *a2 = off_1007B7240;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100227734(uint64_t a1)
{
}

void sub_10022773C(id *a1)
{
}

void sub_100227764(uint64_t a1, int *a2)
{
  int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(dispatch_queue_s **)(v3 + 64);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  _DWORD v5[2] = sub_100227814;
  void v5[3] = &unk_1007B2EE0;
  v5[4] = v3;
  int v6 = v2;
  dispatch_async(v4, v5);
}

uint64_t sub_1002277CC(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_100227808()
{
  return &off_1007B72A0;
}

id sub_100227814(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleHealthChanged:*(unsigned int *)(a1 + 40)];
}

uint64_t sub_100227824(uint64_t a1)
{
  return a1;
}

void sub_10022784C(id *a1)
{
}

void *sub_100227874(uint64_t a1)
{
  int v2 = operator new(0x10uLL);
  *int v2 = off_1007B72C0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1002278B8(uint64_t a1, void *a2)
{
  *a2 = off_1007B72C0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1002278EC(uint64_t a1)
{
}

void sub_1002278F4(id *a1)
{
}

void sub_10022791C(uint64_t a1, int *a2, uint64_t *a3)
{
  int v3 = *a2;
  uint64_t v4 = *a3;
  uint64_t v5 = *(void *)(a1 + 8);
  int v6 = *(dispatch_queue_s **)(v5 + 64);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1002279D4;
  block[3] = &unk_1007B2E28;
  void block[4] = v5;
  int v8 = v3;
  void block[5] = v4;
  dispatch_async(v6, block);
}

uint64_t sub_10022798C(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1002279C8()
{
  return &off_1007B7320;
}

id sub_1002279D4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handleTimeoutEvent:*(unsigned int *)(a1 + 48) time:*(double *)(a1 + 40)];
}

uint64_t sub_1002279E8@<X0>(__int16 *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = (char *)operator new(0x20uLL);
  uint64_t result = sub_100227A40((uint64_t)v4, a1);
  *a2 = v4 + 24;
  a2[1] = v4;
  return result;
}

void sub_100227A2C(_Unwind_Exception *a1)
{
}

uint64_t sub_100227A40(uint64_t a1, __int16 *a2)
{
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = off_1007B7340;
  sub_1002B79E4((_WORD *)(a1 + 24), *a2);
  return a1;
}

void sub_100227A78(_Unwind_Exception *a1)
{
}

void sub_100227A8C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1007B7340;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100227A9C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1007B7340;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void *sub_100227AC4@<X0>(char *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x30uLL);
  uint64_t result = sub_100227B1C(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100227B08(_Unwind_Exception *a1)
{
}

void *sub_100227B1C(void *a1, char *a2)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_1007B7390;
  sub_100227BA8((uint64_t)(a1 + 3), *a2);
  return a1;
}

void sub_100227B54(_Unwind_Exception *a1)
{
}

void sub_100227B68(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1007B7390;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100227B78(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1007B7390;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100227B98(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_100227BA8(uint64_t a1, char a2)
{
  *(void *)a1 = &off_1007B73E0;
  int v4 = sub_100224F0C(@"AlishaMinRanMultiplierOverride", (id)3);
  if (v4 <= 0) {
    sub_10039F5F4();
  }
  *(_BYTE *)(a1 + std::ostream::~ostream(v2, v3 + 8) = v4;
  double v5 = 3.0;
  if ((a2 & 1) == 0)
  {
    int v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    int v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:@"AlishaStartTimeOffsetSeconds"]);
    if (v8 && (uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSNumber, v7), (objc_opt_isKindOfClass(v8, v9) & 1) != 0))
    {
      [v8 doubleValue];
      double v5 = v10;
      uint64_t v11 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        int v14 = 138412546;
        char v15 = @"AlishaStartTimeOffsetSeconds";
        __int16 v16 = 2048;
        uint64_t v17 = *(void *)&v5;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#ses-carkey,Override %@ exists. New value: %f",  (uint8_t *)&v14,  0x16u);
      }

      if (v5 <= 0.0) {
        sub_10039F644();
      }
    }

    else
    {
      __int128 v12 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        int v14 = 138412546;
        char v15 = @"AlishaStartTimeOffsetSeconds";
        __int16 v16 = 2048;
        uint64_t v17 = 0x3FB999999999999ALL;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "#ses-carkey,Override %@ does not exist. Use existing value: %f",  (uint8_t *)&v14,  0x16u);
      }

      double v5 = 0.1;
    }
  }

  *(void *)(a1 + 16) = llround(v5 * 1000000.0);
  return a1;
}

void sub_100227DB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

_WORD *sub_100227DE4@<X0>(void *a1@<X8>)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  int v2 = operator new(2uLL);
  *a1 = v2;
  *int v2 = 256;
  uint64_t result = v2 + 1;
  a1[1] = result;
  a1[2] = result;
  return result;
}

void sub_100227E20(void *a1@<X8>)
{
  __int16 v17 = 0;
  int v2 = sub_100288340();
  uint64_t v3 = *((void *)v2 + 406);
  int v4 = (std::__shared_weak_count *)*((void *)v2 + 407);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      unint64_t v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }

  BOOL v7 = sub_100266E04(v3, &v18, (unsigned __int8 *)&v17, 0);
  if (v4)
  {
    int v8 = (unint64_t *)&v4->__shared_owners_;
    do
      unint64_t v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  if (v7)
  {
    BOOL v10 = v18 != 5;
    uint64_t v11 = operator new(1uLL);
    _BYTE *v11 = v10;
    a1[1] = v11 + 1;
    a1[2] = v11 + 1;
    *a1 = v11;
    if (HIBYTE(v17))
    {
      __int128 v12 = v11;
      int v13 = v17;
      int v14 = operator new(2uLL);
      BOOL v15 = v13 != 5;
      __int16 v16 = v14 + 2;
      v14[1] = v15;
      *int v14 = *v12;
      *a1 = v14;
      a1[2] = v14 + 2;
      operator delete(v12);
      a1[1] = v16;
    }
  }

void sub_100227F38( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  __int128 v12 = *(void **)v10;
  if (*(void *)v10)
  {
    *(void *)(v10 + std::ostream::~ostream(v2, v3 + 8) = v12;
    operator delete(v12);
  }

  _Unwind_Resume(exception_object);
}

unint64_t sub_100227F64(uint64_t a1, unsigned int a2)
{
  v49[0] = 0LL;
  v49[1] = 0LL;
  int v48 = (uint64_t *)v49;
  uint64_t v3 = (std::recursive_mutex *)sub_100288340();
  v52[0] = &off_1007B7440;
  v52[1] = &v48;
  uint64_t v53 = v52;
  sub_10028C904(v3, (uint64_t)v52);
  int v4 = v53;
  if (v53 == v52)
  {
    uint64_t v5 = 4LL;
    int v4 = v52;
  }

  else
  {
    if (!v53) {
      goto LABEL_6;
    }
    uint64_t v5 = 5LL;
  }

  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  sub_1000065CC(&v47, "\n");
  unint64_t v6 = v48;
  if (v48 != (uint64_t *)v49)
  {
    do
    {
      unsigned int v7 = *(_DWORD *)((char *)v6 + 26);
      sub_10032AEA4(v7, &v43);
      int v8 = std::string::insert(&v43, 0LL, "    ");
      __int128 v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
      v44.__r_.__value_.__l.__cap_ = v8->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v9;
      v8->__r_.__value_.__l.__size_ = 0LL;
      v8->__r_.__value_.__l.__cap_ = 0LL;
      v8->__r_.__value_.__r.__words[0] = 0LL;
      uint64_t v10 = std::string::append(&v44, ": ");
      __int128 v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
      v45.__r_.__value_.__l.__cap_ = v10->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v11;
      v10->__r_.__value_.__l.__size_ = 0LL;
      v10->__r_.__value_.__l.__cap_ = 0LL;
      v10->__r_.__value_.__r.__words[0] = 0LL;
      std::to_string(&v42, HIWORD(v7));
      if ((v42.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int128 v12 = &v42;
      }
      else {
        __int128 v12 = (std::string *)v42.__r_.__value_.__r.__words[0];
      }
      if ((v42.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::string::size_type size = v42.__r_.__value_.__s.__size_;
      }
      else {
        std::string::size_type size = v42.__r_.__value_.__l.__size_;
      }
      int v14 = std::string::append(&v45, (const std::string::value_type *)v12, size);
      __int128 v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
      v46.__r_.__value_.__l.__cap_ = v14->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v15;
      v14->__r_.__value_.__l.__size_ = 0LL;
      v14->__r_.__value_.__l.__cap_ = 0LL;
      v14->__r_.__value_.__r.__words[0] = 0LL;
      __int16 v16 = std::string::append(&v46, "\n");
      __int128 v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
      int64_t cap = v16->__r_.__value_.__l.__cap_;
      *(_OWORD *)std::string buf = v17;
      v16->__r_.__value_.__l.__size_ = 0LL;
      v16->__r_.__value_.__l.__cap_ = 0LL;
      v16->__r_.__value_.__r.__words[0] = 0LL;
      if (cap >= 0) {
        char v18 = buf;
      }
      else {
        char v18 = *(uint8_t **)buf;
      }
      if (cap >= 0) {
        std::string::size_type v19 = HIBYTE(cap);
      }
      else {
        std::string::size_type v19 = *(void *)&buf[8];
      }
      std::string::append(&v47, (const std::string::value_type *)v18, v19);
      if (SHIBYTE(cap) < 0) {
        operator delete(*(void **)buf);
      }
      id v20 = (uint64_t *)v6[1];
      if (v20)
      {
        do
        {
          uint64_t v21 = v20;
          id v20 = (uint64_t *)*v20;
        }

        while (v20);
      }

      else
      {
        do
        {
          uint64_t v21 = (uint64_t *)v6[2];
          BOOL v22 = *v21 == (void)v6;
          unint64_t v6 = v21;
        }

        while (!v22);
      }

      unint64_t v6 = v21;
    }

    while (v21 != (uint64_t *)v49);
  }

  unint64_t v23 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v24 = &v47;
    if ((v47.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      __int128 v24 = (std::string *)v47.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::string buf = 136315138;
    *(void *)&uint8_t buf[4] = v24;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "#ses-carkey,Preamble use counts: {%s}",  buf,  0xCu);
  }

  uint64_t v25 = 4294965278LL;
  if (a2)
  {
    int v26 = 0;
    unsigned __int8 v27 = 0;
    int v28 = 0;
    unsigned __int8 v29 = 0;
    unsigned int v30 = a2;
    int v31 = 0;
    unsigned __int16 v32 = 0;
    std::string::value_type v33 = 1;
    unsigned int v41 = v30;
    do
    {
      if ((v30 & 1) != 0)
      {
        switch(v33)
        {
          case 9:
            char v34 = 0;
            goto LABEL_49;
          case 10:
            char v34 = 1;
            goto LABEL_49;
          case 11:
            char v34 = 2;
            goto LABEL_49;
          case 12:
            char v34 = 3;
LABEL_49:
            v45.__r_.__value_.__s.__data_[0] = v33;
            *(void *)std::string buf = &v45;
            __int128 v35 = sub_10018BD40(&v48, (unsigned __int8 *)&v45, (uint64_t)&unk_1004242F8, (_BYTE **)buf);
            if (!v31 || *((unsigned __int16 *)v35 + 14) < v32)
            {
              int v31 = 1;
              unsigned __int16 v32 = *((_WORD *)v35 + 14);
              unsigned __int8 v29 = v34;
              int v28 = 1;
              unsigned __int8 v27 = v33;
              int v26 = 1;
            }

            break;
          default:
            break;
        }
      }

      ++v33;
      BOOL v36 = v30 > 1;
      v30 >>= 1;
    }

    while (v36);
    uint64_t v37 = 0LL;
    if (v26 && v28 && v31)
    {
      unint64_t v38 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 67109632;
        *(_DWORD *)&uint8_t buf[4] = v41;
        *(_WORD *)&uint8_t buf[8] = 1024;
        *(_DWORD *)&buf[10] = v27;
        *(_WORD *)&buf[14] = 1024;
        LODWORD(cap) = v32;
        _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "#ses-carkey,Sync code bitmask 0x%x. Preferred sync code index %u. Current use count %u.",  buf,  0x14u);
      }

      uint64_t v25 = 0LL;
      unint64_t v39 = (unint64_t)v27 << 32;
      uint64_t v37 = 0x1000000000000LL;
    }

    else
    {
      unint64_t v39 = 0LL;
      uint64_t v25 = 4294965278LL;
    }
  }

  else
  {
    unsigned __int8 v29 = 0;
    uint64_t v37 = 0LL;
    unint64_t v39 = 0LL;
  }

  sub_100034A98((uint64_t)&v48, v49[0]);
  return v25 | ((unint64_t)v29 << 40) | v37 | v39;
}

void sub_10022840C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, uint64_t a29, void *a30, uint64_t a31, int a32, __int16 a33, char a34, char a35, uint64_t a36, void *a37, uint64_t a38, int a39, __int16 a40, char a41, char a42, uint64_t a43, void *__p, uint64_t a45, int a46, __int16 a47, char a48, char a49, char a50,void *a51)
{
}

uint64_t sub_100228508(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_100228510(uint64_t a1, _BYTE *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!*a2)
  {
    uint64_t v3 = sub_100288340();
    unint64_t v4 = sub_10028AE28((uint64_t)v3);
    BOOL v6 = HIWORD(v4) != 1 || (v4 & 0xFF00) == 0;
    BOOL v7 = v6 || v4 == 0LL;
    if (!v7 && v5 != 0LL)
    {
      __int128 v9 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 v11 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#ses-carkey,Applying additional start time offset for Ch5 coex",  v11,  2u);
      }

      v2 += 50000LL;
    }
  }

  return v2;
}

void *sub_1002285C0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_1007B7440;
  result[1] = v3;
  return result;
}

uint64_t sub_1002285F4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_1007B7440;
  a2[1] = v2;
  return result;
}

void sub_100228610(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100228618(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100228654()
{
}

void sub_100228660(uint64_t ***a1, uint64_t a2)
{
  if (*(_BYTE *)(a2 + 105))
  {
    unsigned __int8 v6 = *(_BYTE *)(a2 + 104);
    if (!sub_10032AD10(v6))
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
        sub_10039F698();
      }
      char v5 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::string buf = 136315650;
        *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/Session/N"
                             "IServerCarKeySession.mm";
        __int16 v8 = 1024;
        int v9 = 192;
        __int16 v10 = 2080;
        __int128 v11 = "operator()";
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "#ses-carkey,%s:%d: assertion failure in %s",  buf,  0x1Cu);
      }

      abort();
    }

    uint64_t v3 = *a1;
    *(void *)std::string buf = &v6;
    unint64_t v4 = sub_10018BD40(v3, &v6, (uint64_t)&unk_1004242F8, (_BYTE **)buf);
    ++*((_WORD *)v4 + 14);
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT))
  {
    sub_10039F66C();
  }

void *sub_1002287C8()
{
  uint64_t result = operator new(0x10uLL);
  void *result = &off_1007B74C0;
  return result;
}

void sub_1002287EC(uint64_t a1, void *a2)
{
  *a2 = &off_1007B74C0;
}

uint64_t sub_100228808(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_100228844()
{
  return &off_1007B7520;
}

void sub_100228850(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1007B7540;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100228860(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1007B7540;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100228880(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void *sub_100228890@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  unint64_t v4 = operator new(0x30uLL);
  uint64_t result = sub_1002288E8(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1002288D4(_Unwind_Exception *a1)
{
}

void *sub_1002288E8(void *a1, void *a2)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_1007B7590;
  sub_10021D644(a1 + 3, *a2);
  return a1;
}

void sub_100228920(_Unwind_Exception *a1)
{
}

void sub_100228934(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1007B7590;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100228944(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1007B7590;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100228964(uint64_t a1)
{
}

void sub_100228990(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1007B75E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002289A0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1007B75E0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_1002289C0(uint64_t a1)
{
  return sub_1002C3ED8(a1 + 24);
}

uint64_t sub_1002289CC(uint64_t a1)
{
  return a1;
}

void sub_1002289F4(id *a1)
{
}

void *sub_100228A1C(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B7630;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100228A60(uint64_t a1, void *a2)
{
  *a2 = off_1007B7630;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100228A94(uint64_t a1)
{
}

void sub_100228A9C(id *a1)
{
}

void sub_100228AC4(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v6 = *(id **)(a1 + 8);
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v6[53] debugOptions]);
  [v6 _ownerDeviceServiceRequestDebugParams:v7];

  +[NIServerCarKeySession _aopJobConfigWithTimeouts](&OBJC_CLASS___NIServerCarKeySession, "_aopJobConfigWithTimeouts");
  sub_1001413F4(a2, 102, (uint64_t)&v21, v23, (uint64_t)v24);
  sub_1001AE660(&v20);
  __int16 v8 = *(void **)(a1 + 8);
  if (v8)
  {
    [v8 _buildAlishaSession:v24];
    if (v21)
    {
      uint64_t v9 = v21 + 8;
      __int16 v10 = v22;
      if (v22)
      {
        p_shared_owners = (unint64_t *)&v22->__shared_owners_;
        do
          unint64_t v12 = __ldxr(p_shared_owners);
        while (__stxr(v12 + 1, p_shared_owners));
        *(_DWORD *)a3 = 0;
        *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v9;
        *(void *)(a3 + 16) = v10;
        do
          unint64_t v13 = __ldxr(p_shared_owners);
        while (__stxr(v13 + 1, p_shared_owners));
        *(_BYTE *)(a3 + 24) = 1;
        do
          unint64_t v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }

      else
      {
        *(_DWORD *)a3 = 0;
        *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v9;
        *(void *)(a3 + 16) = 0LL;
        *(_BYTE *)(a3 + 24) = 1;
      }

      goto LABEL_16;
    }
  }

  else
  {
    uint64_t v21 = 0LL;
    BOOL v22 = 0LL;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_10039F6C4();
  }
  *(_DWORD *)a3 = -1013;
  *(_BYTE *)(a3 + std::ostream::~ostream(v2, v3 + 8) = 0;
  *(_BYTE *)(a3 + 24) = 0;
LABEL_16:
  __int128 v15 = v22;
  if (v22)
  {
    __int16 v16 = (unint64_t *)&v22->__shared_owners_;
    do
      unint64_t v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

  uint64_t v18 = v20;
  uint64_t v20 = 0LL;
  if (v18)
  {
    sub_1001AE69C(v18);
    operator delete(v19);
  }

void sub_100228CD8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
  {
    sub_1001AE69C(a10);
    operator delete(v11);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_100228D0C(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_100228D48()
{
  return &off_1007B7690;
}

uint64_t sub_100228D54(uint64_t a1)
{
  return a1;
}

void sub_100228D7C(id *a1)
{
}

void *sub_100228DA4(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B76B0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100228DE8(uint64_t a1, void *a2)
{
  *a2 = off_1007B76B0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100228E1C(uint64_t a1)
{
}

void sub_100228E24(id *a1)
{
}

id sub_100228E4C(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a3;
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(*(void *)(a1 + 8) + 64LL));
  return _[*(id *)(a1 + 8) _alishaStateChangedFromState:v4 toNewState:v5];
}

uint64_t sub_100228E98(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_100228ED4()
{
  return &off_1007B7710;
}

void sub_100228EE0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1007B7730;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100228EF0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1007B7730;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100228F10(uint64_t a1)
{
  return sub_1001AE9F8(a1 + 24);
}

uint64_t sub_100228F1C(uint64_t a1)
{
  return a1;
}

void sub_100228F44(id *a1)
{
}

void *sub_100228F6C(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B7780;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100228FB0(uint64_t a1, void *a2)
{
  *a2 = off_1007B7780;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100228FE4(uint64_t a1)
{
}

void sub_100228FEC(id *a1)
{
}

id sub_100229014(uint64_t a1, unsigned int *a2, double *a3)
{
  return _[*(id *)(a1 + 8) _handleTimeoutEvent:*a2 time:*a3];
}

uint64_t sub_100229028(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_100229064()
{
  return &off_1007B77E0;
}

  ;
}

void sub_100229088(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
}

void sub_100229098()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_100229114(_Unwind_Exception *a1)
{
}

void sub_10022912C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_1004288D0;
      v1[1] = unk_1004288E0;
      v1[2] = xmmword_1004288F0;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_1002291CC(_Unwind_Exception *a1)
{
}

void sub_1002291E4()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  uint64_t v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007FAF68 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007FAF58 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FAF58, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  uint64_t v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  BOOL v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007FAF80 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007FAF70 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FAF70, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  uint64_t v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  __int128 v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007FAF98 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007FAF88 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FAF88, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  unint64_t v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  __int128 v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007FAFB0 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007FAFA0 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FAFA0, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  unint64_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  std::string::size_type v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007FAFC8 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007FAFB8 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FAFB8, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  uint64_t v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007FAFE0 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007FAFD0 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FAFD0, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  uint64_t v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  unsigned __int8 v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007FAFF8 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007FAFE8 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FAFE8, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  unsigned __int8 v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  int v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007FB010 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007FB000 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB000, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  std::string::value_type v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  __int128 v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007FB028 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007FB018 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB018, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_1002297D8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10022984C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B7A00[a1]);
}

void *sub_100229860@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B7A58[a1]);
}

void *sub_100229874@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B7AA0[a1]);
}

void *sub_100229888@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B7AC0[a1]);
}

void sub_100229908(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002299E0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100229A84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100229B24(id a1)
{
  id v1 = -[NIServerSystemConfigurator _initInternal]( objc_alloc(&OBJC_CLASS___NIServerSystemConfigurator),  "_initInternal");
  __int128 v2 = (void *)qword_1007FB108;
  qword_1007FB108 = (uint64_t)v1;
}

void sub_100229C64(uint64_t a1)
{
  *(_BYTE *)(*(void *)(a1 + 32) + 16LL) = 0;
  uint64_t v2 = objc_claimAutoreleasedReturnValue(+[NSMapTable strongToWeakObjectsMapTable](&OBJC_CLASS___NSMapTable, "strongToWeakObjectsMapTable"));
  uint64_t v3 = *(void *)(a1 + 32);
  __int128 v4 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = v2;

  uint64_t v5 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v6 = *(void *)(a1 + 32);
  BOOL v7 = *(void **)(v6 + 32);
  *(void *)(v6 + 32) = v5;

  __int128 v8 = objc_opt_new(&OBJC_CLASS___ConfiguratorClientInfo);
  uint64_t v9 = *(void *)(a1 + 32);
  __int128 v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  __int128 v11 = objc_opt_new(&OBJC_CLASS___NISystemState);
  uint64_t v12 = *(void *)(a1 + 32);
  unint64_t v13 = *(void **)(v12 + 64);
  *(void *)(v12 + 64) = v11;

  if (+[NIPlatformInfo isInternalBuild](&OBJC_CLASS___NIPlatformInfo, "isInternalBuild")
    || (__int128 v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults")),
        unsigned int v15 = [v14 BOOLForKey:@"EnableStateDump"],
        v14,
        v15))
  {
    __int128 v16 = *(void **)(a1 + 32);
    uint64_t v17 = v16[1];
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    void v18[2] = sub_100229DA8;
    v18[3] = &unk_1007B1E00;
    std::string::size_type v19 = v16;
    os_state_add_handler(v17, v18);
  }

void sub_100229D98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_100229DA8(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _internalPrintableState]);
  uint64_t v2 = sub_100024190(@"System Configurator", v1);

  return v2;
}

void sub_100229DEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100229E54(uint64_t a1)
{
  id v1 = (void *)(a1 + 32);
  if (!*(_BYTE *)(*(void *)(a1 + 32) + 16LL))
  {
    uint64_t v2 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#configurator,Activate", buf, 2u);
    }

    sub_10022C028(v1, buf);
    sub_10000EE54(*v1 + 48LL, (__int128 *)buf);
    uint64_t v3 = *(std::__shared_weak_count **)&buf[8];
    if (*(void *)&buf[8])
    {
      __int128 v4 = (unint64_t *)(*(void *)&buf[8] + 8LL);
      do
        unint64_t v5 = __ldaxr(v4);
      while (__stlxr(v5 - 1, v4));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }

    uint64_t v6 = sub_100288340();
    BOOL v7 = *(std::__shared_weak_count **)(*v1 + 56LL);
    unint64_t v19 = *(void *)(*v1 + 48LL);
    __int128 v20 = v7;
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        unint64_t v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
    }

    sub_10028CA60((uint64_t)v6, &v19);
    __int128 v10 = v20;
    if (v20)
    {
      __int128 v11 = (unint64_t *)&v20->__shared_owners_;
      do
        unint64_t v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }

    unint64_t v13 = sub_100288340();
    __int128 v14 = *(std::__shared_weak_count **)(*v1 + 56LL);
    uint64_t v17 = *(void *)(*v1 + 48LL);
    __int128 v18 = v14;
    if (v14)
    {
      p_shared_weak_owners = (unint64_t *)&v14->__shared_weak_owners_;
      do
        unint64_t v16 = __ldxr(p_shared_weak_owners);
      while (__stxr(v16 + 1, p_shared_weak_owners));
    }

    sub_1002889DC((uint64_t)v13, &v17);
    if (v18) {
      std::__shared_weak_count::__release_weak(v18);
    }
    *(_BYTE *)(*v1 + 16LL) = 1;
  }

void sub_100229FD0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, char a11)
{
  if (a10) {
    std::__shared_weak_count::__release_weak(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10022A0A4(void *a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1[4] + 24) objectForKey:a1[5]]);

  if (v2)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10039F6F0();
    }
  }

  else
  {
    uint64_t v3 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[5];
      unsigned int v5 = [*(id *)(a1[4] + 24) count];
      int v17 = 138412546;
      uint64_t v18 = v4;
      __int16 v19 = 1024;
      unsigned int v20 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#configurator,Add client %@ (%d previous clients)",  (uint8_t *)&v17,  0x12u);
    }

    [*(id *)(a1[4] + 24) setObject:a1[6] forKey:a1[5]];
    uint64_t v6 = *(void **)(a1[4] + 32LL);
    BOOL v7 = objc_opt_new(&OBJC_CLASS___ConfiguratorClientInfo);
    [v6 setObject:v7 forKey:a1[5]];

    __int128 v8 = (void *)a1[6];
    id v9 = [*(id *)(a1[4] + 64) copy];
    [v8 didUpdateSystemState:v9];

    __int128 v11 = (void *)a1[6];
    __int128 v10 = (id *)(a1 + 6);
    id v12 = [*((id *)*(v10 - 2) + 5) carKeyRangingLimitExceeded];
    objc_msgSend( v11,  "didUpdateResourceUsageLimitExceeded:forSessionConfigurationType:",  v12,  objc_opt_class(NICarKeyConfiguration, v13));
    id v14 = *v10;
    id v15 = [*((id *)*(v10 - 2) + 5) acwgRangingLimitExceeded];
    objc_msgSend( v14,  "didUpdateResourceUsageLimitExceeded:forSessionConfigurationType:",  v15,  objc_opt_class(NIAcwgConfiguration, v16));
    objc_msgSend(*v10, "didUpdatePassiveAccessIntent:", objc_msgSend(*((id *)*(v10 - 2) + 5), "passiveAccessIntent"));
  }

void sub_10022A29C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10022A348(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1 + 40) + 32), "objectForKey:"));

    if (v2)
    {
      uint64_t v3 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v4 = *(void *)(a1 + 32);
        unsigned int v5 = [*(id *)(*(void *)(a1 + 40) + 24) count];
        int v8 = 138412546;
        uint64_t v9 = v4;
        __int16 v10 = 1024;
        unsigned int v11 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#configurator,Remove client %@ (%d clients before removal)",  (uint8_t *)&v8,  0x12u);
      }

      uint64_t v7 = *(void *)(a1 + 40);
      uint64_t v6 = (id *)(a1 + 40);
      [*(id *)(v7 + 24) removeObjectForKey:*(v6 - 1)];
      [*((id *)*v6 + 4) removeObjectForKey:*(v6 - 1)];
      [*v6 _updateAggregatedClientInfo];
    }

    else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      sub_10039F750();
    }
  }

void sub_10022A484(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10022A530(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) objectForKey:*(void *)(a1 + 40)]);

  if (v2)
  {
    uint64_t v3 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = *(unsigned __int8 *)(a1 + 48);
      uint64_t v5 = *(void *)(a1 + 40);
      uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:v5]);
      unsigned int v7 = [v6 prewarmUWB];
      unsigned int v8 = [*(id *)(*(void *)(a1 + 32) + 40) prewarmUWB];
      int v19 = 138413058;
      uint64_t v20 = v5;
      __int16 v21 = 1024;
      int v22 = v4;
      __int16 v23 = 1024;
      unsigned int v24 = v7;
      __int16 v25 = 1024;
      unsigned int v26 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#configurator,Client %@ requested prewarm UWB: %d. Previous from this client: %d. Previous aggregated: %d",  (uint8_t *)&v19,  0x1Eu);
    }

    uint64_t v9 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = *(unsigned __int8 *)(a1 + 49);
      uint64_t v11 = *(void *)(a1 + 40);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:v11]);
      unsigned int v13 = [v12 prewarmSecureElementChannel];
      unsigned int v14 = [*(id *)(*(void *)(a1 + 32) + 40) prewarmSecureElementChannel];
      int v19 = 138413058;
      uint64_t v20 = v11;
      __int16 v21 = 1024;
      int v22 = v10;
      __int16 v23 = 1024;
      unsigned int v24 = v13;
      __int16 v25 = 1024;
      unsigned int v26 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#configurator,Client %@ requested prewarm SE channel: %d. Previous from this client: %d. Previous aggregated: %d",  (uint8_t *)&v19,  0x1Eu);
    }

    BOOL v15 = *(_BYTE *)(a1 + 48) != 0;
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:*(void *)(a1 + 40)]);
    [v16 setPrewarmUWB:v15];

    BOOL v17 = *(_BYTE *)(a1 + 49) != 0;
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:*(void *)(a1 + 40)]);
    [v18 setPrewarmSecureElementChannel:v17];

    [*(id *)(a1 + 32) _updateAggregatedClientInfo];
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10039F7B0();
  }

void sub_10022A784(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10022A86C(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) objectForKey:*(void *)(a1 + 40)]);

  if (v2)
  {
    if (objc_msgSend( *(id *)(a1 + 48),  "isSubclassOfClass:",  objc_opt_class(NICarKeyConfiguration, v3)))
    {
      uint64_t v5 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        int v6 = *(unsigned __int8 *)(a1 + 56);
        uint64_t v7 = *(void *)(a1 + 40);
        unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:v7]);
        unsigned int v9 = [v8 carKeyRangingLimitExceeded];
        unsigned int v10 = [*(id *)(*(void *)(a1 + 32) + 40) carKeyRangingLimitExceeded];
        int v24 = 138413058;
        uint64_t v25 = v7;
        __int16 v26 = 1024;
        int v27 = v6;
        __int16 v28 = 1024;
        unsigned int v29 = v9;
        __int16 v30 = 1024;
        unsigned int v31 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#configurator,Client %@ notified CarKey resource usage limit exceeded: %d. Previous from this client: %d. Prev ious aggregated: %d",  (uint8_t *)&v24,  0x1Eu);
      }

      BOOL v11 = *(_BYTE *)(a1 + 56) != 0;
      id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( [*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:*(void *)(a1 + 40)]);
      -[os_log_s setCarKeyRangingLimitExceeded:](v12, "setCarKeyRangingLimitExceeded:", v11);
    }

    else
    {
      unsigned int v13 = objc_msgSend( *(id *)(a1 + 48),  "isSubclassOfClass:",  objc_opt_class(NIAcwgConfiguration, v4));
      unsigned int v14 = (os_log_s *)(id)qword_1008000A0;
      id v12 = v14;
      if (v13)
      {
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          int v15 = *(unsigned __int8 *)(a1 + 56);
          uint64_t v16 = *(void *)(a1 + 40);
          BOOL v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:v16]);
          unsigned int v18 = [v17 acwgRangingLimitExceeded];
          unsigned int v19 = [*(id *)(*(void *)(a1 + 32) + 40) acwgRangingLimitExceeded];
          int v24 = 138413058;
          uint64_t v25 = v16;
          __int16 v26 = 1024;
          int v27 = v15;
          __int16 v28 = 1024;
          unsigned int v29 = v18;
          __int16 v30 = 1024;
          unsigned int v31 = v19;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "#configurator,Client %@ notified ACWG resource usage limit exceeded: %d. Previous from this client: %d. Prev ious aggregated: %d",  (uint8_t *)&v24,  0x1Eu);
        }

        BOOL v20 = *(_BYTE *)(a1 + 56) != 0;
        id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( [*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:*(void *)(a1 + 40)]);
        -[os_log_s setAcwgRangingLimitExceeded:](v12, "setAcwgRangingLimitExceeded:", v20);
      }

      else if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT))
      {
        unsigned __int8 v21 = *(_BYTE *)(a1 + 56);
        int v22 = NSStringFromClass(*(Class *)(a1 + 48));
        __int16 v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
        sub_10039F870(v21, v23, (uint8_t *)&v24, v12);
      }
    }

    [*(id *)(a1 + 32) _updateAggregatedClientInfo];
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10039F810();
  }

void sub_10022AB44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10022AC18(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) objectForKey:*(void *)(a1 + 40)]);

  if (v2)
  {
    uint64_t v3 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      id v5 = (id)objc_claimAutoreleasedReturnValue( +[NIInternalUtils NISystemPassiveAccessIntentToString:]( &OBJC_CLASS___NIInternalUtils,  "NISystemPassiveAccessIntentToString:",  *(unsigned int *)(a1 + 48)));
      int v6 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:*(void *)(a1 + 40)]);
      id v7 = (id)objc_claimAutoreleasedReturnValue( +[NIInternalUtils NISystemPassiveAccessIntentToString:]( NIInternalUtils,  "NISystemPassiveAccessIntentToString:",  [v6 passiveAccessIntent]));
      unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue( +[NIInternalUtils NISystemPassiveAccessIntentToString:]( NIInternalUtils,  "NISystemPassiveAccessIntentToString:",  [*(id *)(*(void *)(a1 + 32) + 40) passiveAccessIntent]));
      int v11 = 138413058;
      uint64_t v12 = v4;
      __int16 v13 = 2112;
      id v14 = v5;
      __int16 v15 = 2112;
      id v16 = v7;
      __int16 v17 = 2112;
      unsigned int v18 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#configurator,Client %@ notified passive access intent: %@. Previous from this client: %@. Previous aggregated: %@",  (uint8_t *)&v11,  0x2Au);
    }

    uint64_t v9 = *(unsigned int *)(a1 + 48);
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) objectForKeyedSubscript:*(void *)(a1 + 40)]);
    [v10 setPassiveAccessIntent:v9];

    [*(id *)(a1 + 32) _updateAggregatedClientInfo];
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10039F8D8();
  }

void sub_10022ADF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10022AEF8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10022AF08(uint64_t a1)
{
}

void sub_10022AF10(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _internalPrintableState]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10022B0D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_10022B118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"    [%@]: %@", a2, a3));
  objc_msgSend(v3, "addObject:");
}

void sub_10022B174( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
}

void sub_10022B5A4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v3 - 128), 8);
  _Unwind_Resume(a1);
}

id sub_10022B5F4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(*(void *)(a1 + 32) + 40), "consumeInfoForAggregation:");
}

void sub_10022B600(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8LL);
    int v9 = *(_DWORD *)(v8 + 24) + 1;
    *(_DWORD *)(v8 + 24) = v9;
    LODWORD(vstd::ostream::~ostream(v2, v3 + 8) = *(_DWORD *)(a1 + 40);
    v10[0] = 67109890;
    v10[1] = v9;
    __int16 v11 = 1024;
    int v12 = v8;
    __int16 v13 = 2112;
    id v14 = v5;
    __int16 v15 = 2112;
    id v16 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#configurator,Client %d of %d - %@: %@",  (uint8_t *)v10,  0x22u);
  }
}

void sub_10022B6FC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = [*(id *)(*(void *)(a1 + 32) + 40) carKeyRangingLimitExceeded];
  objc_msgSend( v5,  "didUpdateResourceUsageLimitExceeded:forSessionConfigurationType:",  v3,  objc_opt_class(NICarKeyConfiguration, v4));
}

void sub_10022B758( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10022B76C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = [*(id *)(*(void *)(a1 + 32) + 40) acwgRangingLimitExceeded];
  objc_msgSend( v5,  "didUpdateResourceUsageLimitExceeded:forSessionConfigurationType:",  v3,  objc_opt_class(NIAcwgConfiguration, v4));
}

void sub_10022B7C8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10022B7DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_msgSend( v3,  "didUpdatePassiveAccessIntent:",  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 40), "passiveAccessIntent"));
}

void sub_10022B824( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10022B8D4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10022BA94( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10022BAC4(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 64) copy];
  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      id v3 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
        sub_10039F998(v3, v4, v5, v6, v7, v8, v9, v10);
      }
      break;
    case 1:
      [*(id *)(*(void *)(a1 + 32) + 64) setUwbPreciseDistanceAvailability:0];
      unint64_t v13 = 0LL;
      __int16 v11 = *(void **)(*(void *)(a1 + 32) + 64LL);
      goto LABEL_8;
    case 2:
      [*(id *)(*(void *)(a1 + 32) + 64) setUwbPreciseDistanceAvailability:0];
      __int16 v11 = *(void **)(*(void *)(a1 + 32) + 64LL);
      unint64_t v12 = (unint64_t)[v11 uwbExtendedDistanceAvailability];
LABEL_5:
      unint64_t v13 = v12 | 2;
      goto LABEL_8;
    case 3:
      switch(*(_DWORD *)(a1 + 44))
      {
        case 0:
          int v24 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
            sub_10039F938(v24, v25, v26, v27, v28, v29, v30, v31);
          }
          break;
        case 1:
        case 7:
          objc_msgSend( *(id *)(*(void *)(a1 + 32) + 64),  "setUwbPreciseDistanceAvailability:",  (unint64_t)objc_msgSend(*(id *)(*(void *)(a1 + 32) + 64), "uwbPreciseDistanceAvailability") | 8);
          __int16 v11 = *(void **)(*(void *)(a1 + 32) + 64LL);
          unint64_t v13 = (unint64_t)[v11 uwbExtendedDistanceAvailability] | 8;
          goto LABEL_8;
        case 2:
          __int128 v32 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
            sub_10039F968(v32, v33, v34, v35, v36, v37, v38, v39);
          }
          break;
        case 3:
          objc_msgSend( *(id *)(*(void *)(a1 + 32) + 64),  "setUwbPreciseDistanceAvailability:",  (unint64_t)objc_msgSend(*(id *)(*(void *)(a1 + 32) + 64), "uwbPreciseDistanceAvailability") | 1);
          __int16 v11 = *(void **)(*(void *)(a1 + 32) + 64LL);
          unint64_t v13 = (unint64_t)[v11 uwbExtendedDistanceAvailability] | 1;
          goto LABEL_8;
        case 4:
          objc_msgSend( *(id *)(*(void *)(a1 + 32) + 64),  "setUwbPreciseDistanceAvailability:",  (unint64_t)objc_msgSend(*(id *)(*(void *)(a1 + 32) + 64), "uwbPreciseDistanceAvailability") | 2);
          __int16 v11 = *(void **)(*(void *)(a1 + 32) + 64LL);
          unint64_t v12 = (unint64_t)[v11 uwbExtendedDistanceAvailability];
          goto LABEL_5;
        case 5:
        case 6:
          [*(id *)(*(void *)(a1 + 32) + 64) setUwbPreciseDistanceAvailability:16];
          __int16 v11 = *(void **)(*(void *)(a1 + 32) + 64LL);
          unint64_t v13 = 16LL;
          goto LABEL_8;
        default:
          goto LABEL_9;
      }

      break;
    case 4:
      objc_msgSend( *(id *)(*(void *)(a1 + 32) + 64),  "setUwbPreciseDistanceAvailability:",  (unint64_t)objc_msgSend(*(id *)(*(void *)(a1 + 32) + 64), "uwbPreciseDistanceAvailability") | 4);
      __int16 v11 = *(void **)(*(void *)(a1 + 32) + 64LL);
      unint64_t v13 = (unint64_t)[v11 uwbExtendedDistanceAvailability] | 4;
LABEL_8:
      [v11 setUwbExtendedDistanceAvailability:v13];
      break;
    default:
      break;
  }

void sub_10022BF10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10022BF40(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v3 = [*(id *)(*(void *)(a1 + 32) + 64) copy];
  [v4 didUpdateSystemState:v3];
}

void sub_10022BF90( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10022C028(void *a1@<X1>, void *a2@<X8>)
{
  id v4 = operator new(0x48uLL);
  sub_10022C088(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_100012538((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_10022C074(_Unwind_Exception *a1)
{
}

void *sub_10022C088(void *a1, void *a2)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_1007A2120;
  sub_100263A1C(a1 + 3, *a2);
  return a1;
}

void sub_10022C0C0(_Unwind_Exception *a1)
{
}

void sub_10022C0D4()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_10022C150(_Unwind_Exception *a1)
{
}

void sub_10022C168()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      id v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_1004295E0;
      v1[1] = *(_OWORD *)algn_1004295F0;
      v1[2] = xmmword_100429600;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_10022C208(_Unwind_Exception *a1)
{
}

void sub_10022C220()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  id v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  id v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007FB040 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007FB030 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB030, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  uint64_t v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007FB058 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007FB048 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB048, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  uint64_t v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  __int16 v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007FB070 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007FB060 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB060, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  unint64_t v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  __int16 v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007FB088 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007FB078 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB078, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  __int16 v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  unsigned int v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007FB0A0 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007FB090 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB090, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  int v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  __int16 v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007FB0B8 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007FB0A8 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB0A8, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  uint64_t v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007FB0D0 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007FB0C0 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB0C0, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  uint64_t v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007FB0E8 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007FB0D8 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB0D8, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  uint64_t v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007FB100 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007FB0F0 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB0F0, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_10022C814( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10022C888(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_10039FABC();
  }
  *(_BYTE *)a2 = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 72) = 0;
  __int128 v4 = (_BYTE *)(a2 + 72);
  *(_BYTE *)(a2 + 80) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  *(_BYTE *)(a2 + 160) = 0;
  *(_WORD *)(a2 + 16std::ostream::~ostream(v2, v3 + 8) = 0;
  *(void *)(a2 + 120) = 0LL;
  *(void *)(a2 + 12std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(_BYTE *)(a2 + 136) = 0;
  if (*(_BYTE *)(a1 + 16))
  {
    double v5 = *(double *)a1;
    __int128 v6 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
      sub_10039FA4C(v6, v5, v7, v8);
    }
    if (!*(_BYTE *)(a1 + 16)) {
      sub_100006080();
    }
    int v9 = *(_DWORD *)(a1 + 8);
    if (v9 == 2)
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
        sub_10039FA20();
      }
    }

    else if (v9 == 1)
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
        sub_10039F9F4();
      }
    }

    else
    {
      if (v9) {
        goto LABEL_17;
      }
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
        sub_10039F9C8();
      }
    }

    *(double *)a2 = v5;
    *(_DWORD *)(a2 + std::ostream::~ostream(v2, v3 + 8) = v9;
    *(_BYTE *)(a2 + 16) = 1;
  }

void sub_10022CC94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10022CCAC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_10039FC1C();
  }
  *(_BYTE *)a2 = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 72) = 0;
  __int128 v4 = (_BYTE *)(a2 + 72);
  *(_BYTE *)(a2 + 80) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  *(void *)(a2 + 120) = 0LL;
  *(_BYTE *)(a2 + 160) = 0;
  *(_WORD *)(a2 + 16std::ostream::~ostream(v2, v3 + 8) = 0;
  *(void *)(a2 + 12std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(_BYTE *)(a2 + 136) = 0;
  if (*(_BYTE *)(a1 + 128))
  {
    double v5 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      if (!*(_BYTE *)(a1 + 128)) {
        sub_100006080();
      }
      sub_10039FBDC((uint64_t *)(a1 + 120), (uint64_t)v40, v5);
    }
  }

  if (*(_BYTE *)(a1 + 16))
  {
    double v6 = *(double *)a1;
    uint64_t v7 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
      sub_10039FB6C(v7, v6, v8, v9);
    }
    if (!*(_BYTE *)(a1 + 16)) {
      sub_100006080();
    }
    int v10 = *(_DWORD *)(a1 + 8);
    if (v10 == 2)
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
        sub_10039FB40();
      }
    }

    else if (v10 == 1)
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
        sub_10039FB14();
      }
    }

    else
    {
      if (v10) {
        goto LABEL_22;
      }
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
        sub_10039FAE8();
      }
    }

    *(double *)a2 = v6;
    *(_DWORD *)(a2 + std::ostream::~ostream(v2, v3 + 8) = v10;
    *(_BYTE *)(a2 + 16) = 1;
  }

void sub_10022D100(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_10022D118(char *__dst, __int128 *a2, __int128 *a3, double a4, double a5, double a6)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v11 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__int128 __dst = v11;
  }

  uint64_t v12 = __dst + 24;
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000063A8(v12, *(void **)a3, *((void *)a3 + 1));
  }

  else
  {
    __int128 v13 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v12 = v13;
  }

  *((double *)__dst + 6) = a4;
  *((double *)__dst + 7) = a5;
  *((double *)__dst + std::ostream::~ostream(v2, v3 + 8) = a6;
  return __dst;
}

void sub_10022D1B4(_Unwind_Exception *exception_object)
{
}

uint64_t sub_10022D1D0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = a2[23];
  if ((v2 & 0x80u) == 0LL) {
    uint64_t v3 = a2[23];
  }
  else {
    uint64_t v3 = *((void *)a2 + 1);
  }
  uint64_t v4 = *(unsigned __int8 *)(a1 + 47);
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0LL) {
    uint64_t v4 = *(void *)(a1 + 32);
  }
  if (v3 != v4) {
    return 0LL;
  }
  uint64_t v8 = *(unsigned __int8 **)(a1 + 24);
  double v6 = (unsigned __int8 *)(a1 + 24);
  uint64_t v7 = v8;
  if (v5 >= 0) {
    uint64_t v9 = v6;
  }
  else {
    uint64_t v9 = v7;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a2, v9, *((void *)a2 + 1)) == 0;
  }
  if (!a2[23]) {
    return 1LL;
  }
  uint64_t v10 = v2 - 1;
  do
  {
    int v12 = *a2++;
    int v11 = v12;
    int v14 = *v9++;
    int v13 = v14;
    BOOL v16 = v10-- != 0;
    uint64_t result = v11 == v13;
  }

  while (v11 == v13 && v16);
  return result;
}

uint64_t sub_10022D270(uint64_t a1, char a2)
{
  uint64_t v2 = *(double **)(a1 + 40);
  uint64_t v3 = *(double **)(a1 + 48);
  if (v2 == v3) {
    return 4LL;
  }
  char v6 = 0;
  do
  {
    int v7 = sub_10022D30C(v2, a2, *(double *)(a1 + 536), *(double *)(a1 + 544), *(double *)(a1 + 552));
    if (v7 == 2) {
      break;
    }
    v6 |= v7 == 3;
    v2 += 9;
  }

  while (v2 != v3);
  if ((v6 & 1) != 0) {
    uint64_t v8 = 3LL;
  }
  else {
    uint64_t v8 = 4LL;
  }
  if (v7 == 2) {
    return 2LL;
  }
  return v8;
}

uint64_t sub_10022D30C(double *a1, char a2, double a3, double a4, double a5)
{
  uint64_t v10 = -[CLLocation initWithLatitude:longitude:]( objc_alloc(&OBJC_CLASS___CLLocation),  "initWithLatitude:longitude:",  a1[6],  a1[7]);
  int v11 = -[CLLocation initWithLatitude:longitude:]( objc_alloc(&OBJC_CLASS___CLLocation),  "initWithLatitude:longitude:",  a3,  a4);
  -[CLLocation distanceFromLocation:](v11, "distanceFromLocation:", v10);
  double v13 = v12;
  double v14 = a1[8] + a5;
  if (v13 >= v14 + 2000.0) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = 3;
  }
  if (v13 < v14 && a5 < 40000.0) {
    uint64_t v17 = 2LL;
  }
  else {
    uint64_t v17 = v15;
  }
  if ((a2 & 1) != 0)
  {
    uint64_t v18 = (os_log_s *)(id)qword_1007FB118;
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
    {
      sub_1000065CC(__p, off_1007B7BA8[v17 - 2]);
      if (v25 >= 0) {
        uint64_t v20 = __p;
      }
      else {
        uint64_t v20 = (void **)__p[0];
      }
      uint64_t v21 = *((void *)a1 + 6);
      uint64_t v22 = *((void *)a1 + 7);
      uint64_t v23 = *((void *)a1 + 8);
      *(_DWORD *)std::string buf = 136382467;
      BOOL v27 = v20;
      __int16 v28 = 2049;
      uint64_t v29 = v21;
      __int16 v30 = 2049;
      uint64_t v31 = v22;
      __int16 v32 = 2049;
      uint64_t v33 = v23;
      __int16 v34 = 2049;
      double v35 = a3;
      __int16 v36 = 2049;
      double v37 = a4;
      __int16 v38 = 2049;
      double v39 = a5;
      __int16 v40 = 2049;
      double v41 = v13;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "regulatory,geof,getLocationStatus,status,%{private}s,site,lat,%{private}.6f,lon,%{private}.6f,radius,%{private}. 1f,loc,lat,%{private}.6f,lon,%{private}.6f,unc,%{private}.1f,distance,%{private}.2f",  buf,  0x52u);
      if (v25 < 0) {
        operator delete(__p[0]);
      }
    }
  }

  return v17;
}

void sub_10022D4EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10022D51C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  *(_OWORD *)a1 = xmmword_100429700;
  *(_OWORD *)(a1 + 16) = xmmword_100429710;
  int v8 = *((_DWORD *)sub_100005150() + 144);
  *(void *)(a1 + 40) = 0LL;
  *(_DWORD *)(a1 + 32) = v8;
  *(void *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  sub_10001E914((uint64_t)v67, a4);
  sub_100160530(a1 + 64, v7, (uint64_t)v67);
  uint64_t v9 = v68;
  if (v68 == v67)
  {
    uint64_t v10 = 4LL;
    uint64_t v9 = v67;
    goto LABEL_5;
  }

  if (v68)
  {
    uint64_t v10 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v9 + 8 * v10))();
  }

  sub_1000065CC(v64, "regulatory,geof,sm");
  v58[0] = (void *)a1;
  int v11 = operator new(0x20uLL);
  void *v11 = &off_1007B7B58;
  v11[1] = 0LL;
  void v11[2] = 0LL;
  void v11[3] = a1;
  v58[1] = v11;
  sub_10022F654(a1 + 280, v64, v58);
  double v12 = (std::__shared_weak_count *)v58[1];
  if (v58[1])
  {
    double v13 = (unint64_t *)((char *)v58[1] + 8);
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

  if (v65 < 0) {
    operator delete((void *)v64[0]);
  }
  id v15 = v7;
  *(void *)(a1 + 424) = v15;
  *(_BYTE *)(a1 + 440) = 0;
  sub_10001E914(a1 + 448, a3);
  sub_10001E914(a1 + 480, a4);
  *(void *)(a1 + 52std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 576) = 0u;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_OWORD *)(a1 + 60std::ostream::~ostream(v2, v3 + 8) = 0u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  *(_OWORD *)(a1 + 656) = 0u;
  *(_OWORD *)(a1 + 672) = 0u;
  *(void *)(a1 + 68std::ostream::~ostream(v2, v3 + 8) = 0LL;
  int v66 = 0;
  __p[0] = &v66;
  BOOL v16 = sub_100160BF8((uint64_t **)(a1 + 288), &v66, (uint64_t)&unk_1004242F8, (_DWORD **)__p);
  v16[5] = (uint64_t *)sub_10022E04C;
  v16[6] = 0LL;
  int v66 = 1;
  __p[0] = &v66;
  uint64_t v17 = sub_100160BF8((uint64_t **)(a1 + 288), &v66, (uint64_t)&unk_1004242F8, (_DWORD **)__p);
  void v17[5] = (uint64_t *)sub_10022E0C4;
  void v17[6] = 0LL;
  int v66 = 2;
  __p[0] = &v66;
  uint64_t v18 = sub_100160BF8((uint64_t **)(a1 + 288), &v66, (uint64_t)&unk_1004242F8, (_DWORD **)__p);
  v18[5] = (uint64_t *)sub_10022E148;
  v18[6] = 0LL;
  objc_storeStrong((id *)(a1 + 384), *(id *)(a1 + 424));
  *(_DWORD *)(a1 + 284) = 0;
  *(_BYTE *)(a1 + 32std::ostream::~ostream(v2, v3 + 8) = 1;
  sub_1001606BC(a1 + 280, 0LL);
  sub_1000065CC(v58, "site01");
  sub_1000065CC(__p, "CN");
  sub_10022D118((char *)__dst, (__int128 *)v58, (__int128 *)__p, 40.5580556, 116.976944, 1000.0);
  sub_10022E4EC((uint64_t *)a1, (uint64_t)__dst);
  if (v63 < 0) {
    operator delete(v62);
  }
  if (v61 < 0) {
    operator delete(__dst[0]);
  }
  if (v57 < 0) {
    operator delete(__p[0]);
  }
  if (v59 < 0) {
    operator delete(v58[0]);
  }
  sub_1000065CC(v58, "site02");
  sub_1000065CC(__p, "CN");
  sub_10022D118((char *)v52, (__int128 *)v58, (__int128 *)__p, 40.3161111, 116.595556, 1000.0);
  sub_10022E4EC((uint64_t *)a1, (uint64_t)v52);
  if (v55 < 0) {
    operator delete(v54);
  }
  if (v53 < 0) {
    operator delete(v52[0]);
  }
  if (v57 < 0) {
    operator delete(__p[0]);
  }
  if (v59 < 0) {
    operator delete(v58[0]);
  }
  sub_1000065CC(v58, "site03");
  sub_1000065CC(__p, "CN");
  sub_10022D118((char *)v48, (__int128 *)v58, (__int128 *)__p, 31.0994444, 121.199722, 1000.0);
  sub_10022E4EC((uint64_t *)a1, (uint64_t)v48);
  if (v51 < 0) {
    operator delete(v50);
  }
  if (v49 < 0) {
    operator delete(v48[0]);
  }
  if (v57 < 0) {
    operator delete(__p[0]);
  }
  if (v59 < 0) {
    operator delete(v58[0]);
  }
  sub_1000065CC(v58, "site04");
  sub_1000065CC(__p, "CN");
  sub_10022D118((char *)v44, (__int128 *)v58, (__int128 *)__p, 31.0869444, 121.163333, 1000.0);
  sub_10022E4EC((uint64_t *)a1, (uint64_t)v44);
  if (v47 < 0) {
    operator delete(v46);
  }
  if (v45 < 0) {
    operator delete(v44[0]);
  }
  if (v57 < 0) {
    operator delete(__p[0]);
  }
  if (v59 < 0) {
    operator delete(v58[0]);
  }
  sub_1000065CC(v58, "site05");
  sub_1000065CC(__p, "CN");
  sub_10022D118((char *)v40, (__int128 *)v58, (__int128 *)__p, 43.4711111, 87.1777778, 1000.0);
  sub_10022E4EC((uint64_t *)a1, (uint64_t)v40);
  if (v43 < 0) {
    operator delete(v42);
  }
  if (v41 < 0) {
    operator delete(v40[0]);
  }
  if (v57 < 0) {
    operator delete(__p[0]);
  }
  if (v59 < 0) {
    operator delete(v58[0]);
  }
  sub_1000065CC(v58, "site06");
  sub_1000065CC(__p, "CN");
  sub_10022D118((char *)v36, (__int128 *)v58, (__int128 *)__p, 37.3786111, 97.7297222, 11000.0);
  sub_10022E4EC((uint64_t *)a1, (uint64_t)v36);
  if (v39 < 0) {
    operator delete(v38);
  }
  if (v37 < 0) {
    operator delete(v36[0]);
  }
  if (v57 < 0) {
    operator delete(__p[0]);
  }
  if (v59 < 0) {
    operator delete(v58[0]);
  }
  sub_1000065CC(v58, "site07");
  sub_1000065CC(__p, "CN");
  sub_10022D118((char *)v32, (__int128 *)v58, (__int128 *)__p, 25.0272222, 102.795833, 1000.0);
  sub_10022E4EC((uint64_t *)a1, (uint64_t)v32);
  if (v35 < 0) {
    operator delete(v34);
  }
  if (v33 < 0) {
    operator delete(v32[0]);
  }
  if (v57 < 0) {
    operator delete(__p[0]);
  }
  if (v59 < 0) {
    operator delete(v58[0]);
  }
  sub_1000065CC(v58, "site08");
  sub_1000065CC(__p, "CN");
  sub_10022D118((char *)v28, (__int128 *)v58, (__int128 *)__p, 42.2086111, 115.245833, 10000.0);
  sub_10022E4EC((uint64_t *)a1, (uint64_t)v28);
  if (v31 < 0) {
    operator delete(v30);
  }
  if (v29 < 0) {
    operator delete(v28[0]);
  }
  if (v57 < 0) {
    operator delete(__p[0]);
  }
  if (v59 < 0) {
    operator delete(v58[0]);
  }
  sub_1000065CC(v58, "site09");
  sub_1000065CC(__p, "CN");
  sub_10022D118((char *)v24, (__int128 *)v58, (__int128 *)__p, 25.6527778, 106.855556, 5000.0);
  sub_10022E4EC((uint64_t *)a1, (uint64_t)v24);
  if (v27 < 0) {
    operator delete(v26);
  }
  if (v25 < 0) {
    operator delete(v24[0]);
  }
  if (v57 < 0) {
    operator delete(__p[0]);
  }
  if (v59 < 0) {
    operator delete(v58[0]);
  }
  sub_1000065CC(v58, "site10");
  sub_1000065CC(__p, "CN");
  sub_10022D118((char *)v20, (__int128 *)v58, (__int128 *)__p, 43.6011111, 89.6825, 4000.0);
  sub_10022E4EC((uint64_t *)a1, (uint64_t)v20);
  if (v23 < 0) {
    operator delete(v22);
  }
  if (v21 < 0) {
    operator delete(v20[0]);
  }
  if (v57 < 0) {
    operator delete(__p[0]);
  }
  if (v59 < 0) {
    operator delete(v58[0]);
  }

  return a1;
}

void sub_10022DD84( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (SLOBYTE(STACK[0x29F]) < 0) {
    operator delete((void *)STACK[0x288]);
  }
  if (SLOBYTE(STACK[0x2B7]) < 0) {
    operator delete((void *)STACK[0x2A0]);
  }
  uint64_t v17 = *(void **)(v10 + 504);
  if (v17 == v14)
  {
    uint64_t v18 = 4LL;
    uint64_t v17 = v14;
  }

  else
  {
    if (!v17) {
      goto LABEL_22;
    }
    uint64_t v18 = 5LL;
  }

  (*(void (**)(void))(*v17 + 8 * v18))();
LABEL_22:
  uint64_t v19 = *(void **)(v10 + 472);
  if (v19 == v13)
  {
    uint64_t v20 = 4LL;
    uint64_t v19 = v13;
  }

  else
  {
    if (!v19) {
      goto LABEL_27;
    }
    uint64_t v20 = 5LL;
  }

  (*(void (**)(void))(*v19 + 8 * v20))();
LABEL_27:

  sub_1001AD090(v12);
  sub_10022E548(v11);
  STACK[0x2A0] = v15;
  sub_1001AD10C((void ***)&STACK[0x2A0]);

  _Unwind_Resume(a1);
}

uint64_t sub_10022E04C(uint64_t a1, int a2)
{
  if (a2 == 7)
  {
    uint64_t result = sub_10022EB74(a1);
    if ((_DWORD)result)
    {
      if (*(_BYTE *)(a1 + 440)) {
        return 2LL;
      }
      else {
        return 1LL;
      }
    }
  }

  else
  {
    if (!a2)
    {
      char v5 = 1;
      uint64_t v3 = *(void *)(a1 + 472);
      if (!v3) {
        sub_10001EEF0();
      }
      (*(void (**)(uint64_t, char *))(*(void *)v3 + 48LL))(v3, &v5);
    }

    return 0LL;
  }

  return result;
}

uint64_t sub_10022E0C4(uint64_t a1, int a2)
{
  uint64_t result = 1LL;
  switch(a2)
  {
    case 0:
      char v5 = 0;
      uint64_t v4 = *(void *)(a1 + 472);
      if (!v4) {
        sub_10001EEF0();
      }
      (*(void (**)(uint64_t, char *))(*(void *)v4 + 48LL))(v4, &v5);
      uint64_t result = 1LL;
      break;
    case 5:
      uint64_t result = 2LL;
      break;
    case 7:
      uint64_t result = sub_10022EB74(a1);
      break;
    case 8:
      uint64_t result = 0LL;
      break;
    default:
      return result;
  }

  return result;
}

uint64_t sub_10022E148(uint64_t a1, int a2)
{
  uint64_t result = 2LL;
  switch(a2)
  {
    case 0:
      sub_100160868(a1 + 64);
      goto LABEL_35;
    case 1:
      sub_1001606B0(a1 + 64);
      goto LABEL_35;
    case 2:
      double v4 = sub_100023CC4();
      char v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
      char v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:@"GeofenceLoggingIntervalOverride"]);

      double v8 = 3600.0;
      if (v6)
      {
        uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSNumber, v7);
        if ((objc_opt_isKindOfClass(v6, v9) & 1) != 0)
        {
          [v6 doubleValue];
          double v8 = v10;
        }
      }

      double v11 = v4 - *(double *)(a1 + 24);
      if (v11 >= v8)
      {
        *(double *)(a1 + 24) = v4;
        uint64_t v12 = (os_log_s *)qword_1007FB118;
        if (os_log_type_enabled((os_log_t)qword_1007FB118, OS_LOG_TYPE_DEBUG)) {
          sub_10039FC48(a1, v12, v13, v14, v15, v16, v17, v18);
        }
      }

      switch(sub_10022D270(a1, v11 >= v8))
      {
        case 1u:
          if (v11 >= v8)
          {
            uint64_t v19 = (os_log_s *)qword_1007FB118;
            if (os_log_type_enabled((os_log_t)qword_1007FB118, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)std::string buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "regulatory,geof,Cannot determine region status",  buf,  2u);
            }
          }

          goto LABEL_34;
        case 2u:
          if (v11 >= v8)
          {
            char v23 = (os_log_s *)qword_1007FB118;
            if (os_log_type_enabled((os_log_t)qword_1007FB118, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)char v31 = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "regulatory,geof,calling setHysteresisEvent DelayedUwbOff from IN",  v31,  2u);
            }
          }

          uint64_t v24 = (uint64_t **)(a1 + 280);
          sub_10022EE10(a1 + 280, 4, *(double *)(a1 + 8));
          int v25 = 3;
          goto LABEL_32;
        case 3u:
          if (v11 >= v8)
          {
            int v26 = (os_log_s *)qword_1007FB118;
            if (os_log_type_enabled((os_log_t)qword_1007FB118, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)__int16 v30 = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "regulatory,geof,calling setHysteresisEvent DelayedUwbOn from NEAR",  v30,  2u);
            }
          }

          uint64_t v24 = (uint64_t **)(a1 + 280);
          sub_10022EE10(a1 + 280, 3, *(double *)a1);
          int v25 = 4;
LABEL_32:
          sub_100160604(v24, v25);
          int v27 = 1;
          goto LABEL_33;
        case 4u:
          if (v11 >= v8)
          {
            __int16 v28 = (os_log_s *)qword_1007FB118;
            if (os_log_type_enabled((os_log_t)qword_1007FB118, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)char v29 = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "geof,calling setHysteresisEvent DelayedUwbOn from FAR",  v29,  2u);
            }
          }

          sub_10022EE10(a1 + 280, 3, *(double *)a1);
          sub_100160604((uint64_t **)(a1 + 280), 4);
          if (sub_100320824(*(_DWORD *)(a1 + 32)))
          {
            sub_1001606B0(a1 + 64);
          }

          else if (sub_10032085C(*(_DWORD *)(a1 + 32)))
          {
            int v27 = 4;
LABEL_33:
            sub_100160874(a1 + 64, v27);
          }

void sub_10022E4CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10022E4EC(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[7];
  uint64_t v3 = a1 + 7;
  unint64_t v5 = *(v3 - 1);
  if (v5 >= v4)
  {
    uint64_t result = sub_10022F1BC(a1 + 5, a2);
  }

  else
  {
    sub_10022F2E0((int)v3, (__n128 *)*(v3 - 1), a2);
    uint64_t result = v5 + 72;
    a1[6] = v5 + 72;
  }

  a1[6] = result;
  return result;
}

void sub_10022E540(_Unwind_Exception *a1)
{
  *(void *)(v1 + 4std::ostream::~ostream(v2, v3 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_10022E548(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 184);
  uint64_t v3 = *(void **)(a1 + 208);
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_100160B00(a1 + 24);
  return a1;
}

void sub_10022E5AC(uint64_t a1)
{
  double v73 = 0.0;
  BOOL v1 = sub_100351204((uint64_t)"GeofenceUwbOnDelay", &v73);
  if (v73 != 0.0 && v1)
  {
    *(double *)a1 = v73;
    uint64_t v3 = (os_log_s *)qword_1007FB118;
    if (os_log_type_enabled((os_log_t)qword_1007FB118, OS_LOG_TYPE_DEBUG)) {
      sub_10039FDF4(a1, v3, v4, v5, v6, v7, v8, v9);
    }
  }

  double v72 = 0.0;
  BOOL v10 = sub_100351204((uint64_t)"GeofenceUwbOffDelay", &v72);
  if (v72 != 0.0 && v10)
  {
    *(double *)(a1 + std::ostream::~ostream(v2, v3 + 8) = v72;
    uint64_t v12 = (os_log_s *)qword_1007FB118;
    if (os_log_type_enabled((os_log_t)qword_1007FB118, OS_LOG_TYPE_DEBUG)) {
      sub_10039FD8C(a1 + 8, v12, v13, v14, v15, v16, v17, v18);
    }
  }

  double v71 = 0.0;
  BOOL v19 = sub_100351204((uint64_t)"GeofenceLocationAgeThreshold", &v71);
  if (v71 != 0.0 && v19)
  {
    *(double *)(a1 + 16) = v71;
    char v21 = (os_log_s *)qword_1007FB118;
    if (os_log_type_enabled((os_log_t)qword_1007FB118, OS_LOG_TYPE_DEBUG)) {
      sub_10039FD24(a1 + 16, v21, v22, v23, v24, v25, v26, v27);
    }
  }

  char v57 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  char v55 = (void *)objc_claimAutoreleasedReturnValue([v57 stringForKey:@"GeofencePlistPath"]);
  __int128 v56 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithContentsOfFile:](&OBJC_CLASS___NSArray, "arrayWithContentsOfFile:"));
  if (v56)
  {
    uint64_t v29 = *(void *)(a1 + 40);
    for (uint64_t i = *(void *)(a1 + 48); i != v29; sub_1001AD190(a1 + 56, i))
      i -= 72LL;
    *(void *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = v29;
    __int16 v30 = (os_log_s *)qword_1007FB118;
    if (os_log_type_enabled((os_log_t)qword_1007FB118, OS_LOG_TYPE_DEBUG)) {
      sub_10039FCE8(v30);
    }
    __int128 v69 = 0u;
    __int128 v70 = 0u;
    __int128 v67 = 0u;
    __int128 v68 = 0u;
    id obj = v56;
    id v31 = [obj countByEnumeratingWithState:&v67 objects:v83 count:16];
    if (v31)
    {
      uint64_t v60 = *(void *)v68;
      do
      {
        for (uint64_t j = 0LL; j != v31; uint64_t j = (char *)j + 1)
        {
          if (*(void *)v68 != v60) {
            objc_enumerationMutation(obj);
          }
          char v33 = *(void **)(*((void *)&v67 + 1) + 8LL * (void)j);
          char v34 = (void *)objc_claimAutoreleasedReturnValue([v33 objectForKey:@"Name"]);
          char v35 = (void *)objc_claimAutoreleasedReturnValue([v33 objectForKey:@"IsoCountry"]);
          __int16 v36 = (void *)objc_claimAutoreleasedReturnValue([v33 objectForKey:@"Latitude"]);
          char v37 = (void *)objc_claimAutoreleasedReturnValue([v33 objectForKey:@"Longitude"]);
          uint64_t v38 = objc_claimAutoreleasedReturnValue([v33 objectForKey:@"Radius"]);
          char v39 = (void *)v38;
          if (v34) {
            BOOL v40 = v35 == 0LL;
          }
          else {
            BOOL v40 = 1;
          }
          if (!v40 && v36 != 0LL && v37 != 0LL && v38 != 0)
          {
            [v36 doubleValue];
            double v45 = v44;
            [v37 doubleValue];
            double v47 = v46;
            [v39 doubleValue];
            double v49 = v48;
            id v50 = v34;
            sub_1000065CC(buf, (char *)[v50 UTF8String]);
            id v51 = v35;
            sub_1000065CC(v61, (char *)[v51 UTF8String]);
            sub_10022D118((char *)__dst, (__int128 *)buf, (__int128 *)v61, v45, v47, v49);
            sub_10022E4EC((uint64_t *)a1, (uint64_t)__dst);
            if (v66 < 0) {
              operator delete(__p);
            }
            if (v64 < 0) {
              operator delete(__dst[0]);
            }
            if (v62 < 0) {
              operator delete(v61[0]);
            }
            if (SHIBYTE(v77) < 0) {
              operator delete(*(void **)buf);
            }
            uint64_t v52 = (os_log_s *)(id)qword_1007FB118;
            if (os_log_type_enabled(v52, OS_LOG_TYPE_DEBUG))
            {
              id v53 = [v50 UTF8String];
              id v54 = [v51 UTF8String];
              *(_DWORD *)std::string buf = 136381699;
              *(void *)&uint8_t buf[4] = v53;
              __int16 v75 = 2080;
              id v76 = v54;
              __int16 v77 = 2049;
              double v78 = v45;
              __int16 v79 = 2049;
              double v80 = v47;
              __int16 v81 = 2049;
              double v82 = v49;
              _os_log_debug_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEBUG,  "regulatory,geof,default,site,name,%{private}s,iso,%s,lat,%{private}.6f,lon,%{private}.6f,radius,%{private}.2f",  buf,  0x34u);
            }
          }
        }

        id v31 = [obj countByEnumeratingWithState:&v67 objects:v83 count:16];
      }

      while (v31);
    }
  }
}

void sub_10022EA90( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, void *a46, uint64_t a47, int a48, __int16 a49, char a50,char a51)
{
}

uint64_t sub_10022EB74(uint64_t a1)
{
  if (sub_100320824(*(_DWORD *)(a1 + 32)))
  {
    uint64_t v2 = *(void *)(a1 + 40);
    uint64_t v3 = *(void *)(a1 + 48);
    if (v2 != v3)
    {
      uint64_t v4 = *(void *)(a1 + 40);
      do
      {
        int v5 = sub_10022D1D0(v4, (unsigned __int8 *)(a1 + 576));
        if ((v5 & 1) != 0) {
          break;
        }
        v4 += 72LL;
      }

      while (v4 != v3);
      uint64_t v6 = (unsigned __int8 *)(a1 + 600);
      do
      {
        unsigned int v7 = sub_10022D1D0(v2, v6);
        if ((v7 & 1) != 0) {
          break;
        }
        v2 += 72LL;
      }

      while (v2 != v3);
      return v5 | v7;
    }

    return 0LL;
  }

  if (!sub_100320890(*(_DWORD *)(a1 + 32)))
  {
    if (!sub_100320900(*(_DWORD *)(a1 + 32)))
    {
      uint64_t v18 = *(void *)(a1 + 40);
      uint64_t v19 = *(void *)(a1 + 48);
      if (v18 != v19)
      {
        uint64_t v20 = *(void *)(a1 + 40);
        do
        {
          int v5 = sub_10022D1D0(v20, (unsigned __int8 *)(a1 + 624));
          if ((v5 & 1) != 0) {
            break;
          }
          v20 += 72LL;
        }

        while (v20 != v19);
        char v21 = (unsigned __int8 *)(a1 + 648);
        do
        {
          unsigned int v7 = sub_10022D1D0(v18, v21);
          if ((v7 & 1) != 0) {
            break;
          }
          v18 += 72LL;
        }

        while (v18 != v19);
        return v5 | v7;
      }

      return 0LL;
    }

    else {
      uint64_t v17 = *(unsigned __int8 *)(a1 + 599);
    }
    uint64_t v23 = *(void *)(a1 + 40);
    uint64_t v24 = *(void *)(a1 + 48);
    if (v17)
    {
      if (v23 == v24)
      {
        uint64_t v8 = 0LL;
      }

      else
      {
        uint64_t v25 = (unsigned __int8 *)(a1 + 576);
        do
        {
          uint64_t v8 = sub_10022D1D0(v23, v25);
          if ((v8 & 1) != 0) {
            break;
          }
          v23 += 72LL;
        }

        while (v23 != v24);
      }

      uint64_t v27 = (os_log_s *)qword_1007FB118;
      if (!os_log_type_enabled((os_log_t)qword_1007FB118, OS_LOG_TYPE_DEFAULT)) {
        return v8;
      }
      __int16 v31 = 0;
      __int16 v28 = "regulatory geof,using fSlot1Iso";
      uint64_t v29 = (uint8_t *)&v31;
    }

    else
    {
      if (v23 == v24)
      {
        uint64_t v8 = 0LL;
      }

      else
      {
        uint64_t v26 = (unsigned __int8 *)(a1 + 672);
        do
        {
          uint64_t v8 = sub_10022D1D0(v23, v26);
          if ((v8 & 1) != 0) {
            break;
          }
          v23 += 72LL;
        }

        while (v23 != v24);
      }

      uint64_t v27 = (os_log_s *)qword_1007FB118;
      if (!os_log_type_enabled((os_log_t)qword_1007FB118, OS_LOG_TYPE_DEFAULT)) {
        return v8;
      }
      __int16 v30 = 0;
      __int16 v28 = "regulatory geof,using fWifiIso";
      uint64_t v29 = (uint8_t *)&v30;
    }

    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, v28, v29, 2u);
    return v8;
  }

  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  if (v9 == v10) {
    return 0LL;
  }
  uint64_t v11 = *(void *)(a1 + 40);
  do
  {
    int v12 = sub_10022D1D0(v11, (unsigned __int8 *)(a1 + 576));
    if ((v12 & 1) != 0) {
      break;
    }
    v11 += 72LL;
  }

  while (v11 != v10);
  uint64_t v13 = v9;
  do
  {
    int v14 = sub_10022D1D0(v13, (unsigned __int8 *)(a1 + 600));
    if ((v14 & 1) != 0) {
      break;
    }
    v13 += 72LL;
  }

  while (v13 != v10);
  uint64_t v15 = (unsigned __int8 *)(a1 + 624);
  do
  {
    unsigned int v16 = sub_10022D1D0(v9, v15);
    if ((v16 & 1) != 0) {
      break;
    }
    v9 += 72LL;
  }

  while (v9 != v10);
  return v12 | v14 | v16;
}

void sub_10022EE10(uint64_t a1, int a2, double a3)
{
  int v12 = a2;
  uint64_t v5 = a1 + 88;
  uint64_t v6 = *(void *)(a1 + 88);
  unsigned int v7 = (uint64_t **)(a1 + 80);
  if (!v6) {
    goto LABEL_11;
  }
  uint64_t v8 = v5;
  do
  {
    int v9 = *(_DWORD *)(v6 + 28);
    BOOL v10 = v9 < a2;
    if (v9 >= a2) {
      uint64_t v11 = (uint64_t *)v6;
    }
    else {
      uint64_t v11 = (uint64_t *)(v6 + 8);
    }
    if (!v10) {
      uint64_t v8 = v6;
    }
    uint64_t v6 = *v11;
  }

  while (*v11);
  if (v8 == v5 || *(_DWORD *)(v8 + 28) > a2)
  {
LABEL_11:
    uint64_t v13 = &v12;
    *((_BYTE *)sub_100160F94(v7, &v12, (uint64_t)&unk_1004242F8, &v13) + 32) = 0;
LABEL_12:
    sub_10022F82C(a1, v12, a3);
    return;
  }

  uint64_t v13 = &v12;
}

uint64_t sub_10022EEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (os_log_s *)qword_1007FB118;
  if (os_log_type_enabled((os_log_t)qword_1007FB118, OS_LOG_TYPE_DEBUG)) {
    sub_10039FE5C(a2, v4, v5, v6, v7, v8, v9, v10);
  }
  *(_BYTE *)(a1 + 440) = a2;
  if ((_DWORD)a2) {
    uint64_t v11 = 5LL;
  }
  else {
    uint64_t v11 = 6LL;
  }
  return sub_1001606BC(a1 + 280, v11);
}

void sub_10022EF50(uint64_t a1, int a2, const std::string *a3)
{
  if (os_log_type_enabled((os_log_t)qword_1007FB118, OS_LOG_TYPE_DEBUG)) {
    sub_10039FEC4();
  }
  switch(a2)
  {
    case 0:
      if (sub_100320824(*(_DWORD *)(a1 + 32))
        || (sub_100320890(*(_DWORD *)(a1 + 32)) & 1) != 0
        || sub_100320900(*(_DWORD *)(a1 + 32)))
      {
        uint64_t v6 = (std::string *)(a1 + 576);
        goto LABEL_16;
      }

      break;
    case 1:
      if (sub_100320824(*(_DWORD *)(a1 + 32)))
      {
        uint64_t v6 = (std::string *)(a1 + 600);
        goto LABEL_16;
      }

      break;
    case 2:
      if (sub_10032085C(*(_DWORD *)(a1 + 32)))
      {
        uint64_t v6 = (std::string *)(a1 + 624);
        goto LABEL_16;
      }

      break;
    case 3:
      if (sub_10032085C(*(_DWORD *)(a1 + 32)))
      {
        uint64_t v6 = (std::string *)(a1 + 648);
        goto LABEL_16;
      }

      break;
    case 4:
      if (sub_100320900(*(_DWORD *)(a1 + 32)))
      {
        uint64_t v6 = (std::string *)(a1 + 672);
LABEL_16:
        std::string::operator=(v6, a3);
      }

      break;
    default:
      break;
  }

  if (*(char *)(a1 + 599) < 0)
  {
    if (*(void *)(a1 + 584)) {
      goto LABEL_37;
    }
  }

  else if (*(_BYTE *)(a1 + 599))
  {
    goto LABEL_37;
  }

  if (*(char *)(a1 + 623) < 0)
  {
    if (*(void *)(a1 + 608)) {
      goto LABEL_37;
    }
  }

  else if (*(_BYTE *)(a1 + 623))
  {
    goto LABEL_37;
  }

  if (*(char *)(a1 + 647) < 0)
  {
    if (*(void *)(a1 + 632)) {
      goto LABEL_37;
    }
  }

  else if (*(_BYTE *)(a1 + 647))
  {
    goto LABEL_37;
  }

  if (*(char *)(a1 + 671) < 0)
  {
    if (!*(void *)(a1 + 656)) {
      goto LABEL_33;
    }
LABEL_37:
    sub_1001606BC(a1 + 280, 7LL);
    return;
  }

  if (*(_BYTE *)(a1 + 671)) {
    goto LABEL_37;
  }
LABEL_33:
  else {
    uint64_t v7 = *(unsigned __int8 *)(a1 + 695);
  }
  if (v7) {
    goto LABEL_37;
  }
}

void sub_10022F0E0(double *a1, double a2, double a3, double a4, double a5)
{
  double v9 = CFAbsoluteTimeGetCurrent() - a5;
  if (v9 < a1[2])
  {
    a1[67] = a2;
    a1[68] = a3;
    a1[69] = a4;
    a1[70] = v9;
    sub_1001606BC((uint64_t)(a1 + 35), 2LL);
    *(_OWORD *)(a1 + 67) = 0u;
    *(_OWORD *)(a1 + 69) = 0u;
  }

void sub_10022F158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (os_log_s *)qword_1007FB118;
  if (os_log_type_enabled((os_log_t)qword_1007FB118, OS_LOG_TYPE_DEBUG)) {
    sub_10039FF44(a2, v4, v5, v6, v7, v8, v9, v10);
  }
  if ((_DWORD)a2 == 1) {
    sub_1001606BC(a1 + 280, 8LL);
  }
}

uint64_t sub_10022F1BC(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = 0x8E38E38E38E38E39LL * ((a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x38E38E38E38E38ELL) {
    sub_10001E11C();
  }
  if (0x1C71C71C71C71C72LL * ((a1[2] - *a1) >> 3) > v4) {
    unint64_t v4 = 0x1C71C71C71C71C72LL * ((a1[2] - *a1) >> 3);
  }
  if (0x8E38E38E38E38E39LL * ((a1[2] - *a1) >> 3) >= 0x1C71C71C71C71C7LL) {
    unint64_t v6 = 0x38E38E38E38E38ELL;
  }
  else {
    unint64_t v6 = v4;
  }
  int v14 = a1 + 2;
  if (v6) {
    uint64_t v7 = (char *)sub_10022F3F4((uint64_t)(a1 + 2), v6);
  }
  else {
    uint64_t v7 = 0LL;
  }
  uint64_t v10 = v7;
  uint64_t v11 = (__n128 *)&v7[72 * v3];
  uint64_t v13 = &v7[72 * v6];
  sub_10022F2E0((_DWORD)a1 + 16, v11, a2);
  int v12 = &v11[4].n128_i8[8];
  sub_10022F380(a1, &v10);
  uint64_t v8 = a1[1];
  sub_10022F584(&v10);
  return v8;
}

void sub_10022F2CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

__n128 sub_10022F2E0(int a1, __n128 *__dst, uint64_t a3)
{
  if (*(char *)(a3 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a3, *(void *)(a3 + 8));
  }

  else
  {
    __n128 v5 = *(__n128 *)a3;
    __dst[1].n128_u64[0] = *(void *)(a3 + 16);
    *__int128 __dst = v5;
  }

  unint64_t v6 = &__dst[1].n128_u8[8];
  if (*(char *)(a3 + 47) < 0)
  {
    sub_1000063A8(v6, *(void **)(a3 + 24), *(void *)(a3 + 32));
  }

  else
  {
    __int128 v7 = *(_OWORD *)(a3 + 24);
    __dst[2].n128_u64[1] = *(void *)(a3 + 40);
    *(_OWORD *)unint64_t v6 = v7;
  }

  __n128 result = *(__n128 *)(a3 + 48);
  __dst[4].n128_u64[0] = *(void *)(a3 + 64);
  __dst[3] = result;
  return result;
}

void sub_10022F364(_Unwind_Exception *exception_object)
{
}

uint64_t sub_10022F380(uint64_t *a1, void *a2)
{
  uint64_t result = sub_10022F43C((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_10022F3F4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x38E38E38E38E38FLL) {
    sub_10001D350();
  }
  return operator new(72 * a2);
}

uint64_t sub_10022F43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&__int128 v17 = a6;
  *((void *)&v17 + 1) = a7;
  __int128 v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  _OWORD v14[2] = &v17;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      __int128 v10 = *(_OWORD *)(a3 - 72);
      *(void *)(v9 - 56) = *(void *)(a3 - 56);
      *(_OWORD *)(v9 - 72) = v10;
      *(void *)(a3 - 64) = 0LL;
      *(void *)(a3 - 56) = 0LL;
      *(void *)(a3 - 72) = 0LL;
      __int128 v11 = *(_OWORD *)(a3 - 48);
      *(void *)(v9 - 32) = *(void *)(a3 - 32);
      *(_OWORD *)(v9 - 4std::ostream::~ostream(v2, v3 + 8) = v11;
      *(void *)(a3 - 40) = 0LL;
      *(void *)(a3 - 32) = 0LL;
      *(void *)(a3 - 4std::ostream::~ostream(v2, v3 + 8) = 0LL;
      __int128 v12 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - std::ostream::~ostream(v2, v3 + 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v12;
      v9 -= 72LL;
      v7 -= 72LL;
      a3 -= 72LL;
    }

    while (a3 != a5);
    *((void *)&v17 + 1) = v9;
  }

  char v15 = 1;
  sub_10022F500((uint64_t)v14);
  return a6;
}

uint64_t sub_10022F500(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_10022F534((uint64_t *)a1);
  }
  return a1;
}

void sub_10022F534(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_1001AD190(v3, v1);
      v1 += 72LL;
    }

    while (v1 != v2);
  }

void **sub_10022F584(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_10022F5B4(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 72;
    sub_1001AD190(v4, i - 72);
  }

void sub_10022F5FC(std::__shared_weak_count *a1)
{
}

uint64_t sub_10022F614(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

uint64_t sub_10022F654(uint64_t a1, const void **a2, void *a3)
{
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = a1 + 16;
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 32) = *a3;
  uint64_t v5 = a3[1];
  *(void *)(a1 + 40) = v5;
  if (v5)
  {
    uint64_t v6 = (unint64_t *)(v5 + 8);
    do
      unint64_t v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }

  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(_BYTE *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = 0;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 8std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 104) = 0LL;
  *(_DWORD *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0LL;
  uint64_t v8 = (void **)(a1 + 120);
  *(void *)(a1 + 12std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(void *)(a1 + 136) = 0LL;
  if ((*((char *)a2 + 23) & 0x80000000) == 0)
  {
    if (*((_BYTE *)a2 + 23)) {
      goto LABEL_6;
    }
LABEL_21:
    __assert_rtn("PRStateMachine", "PRStateMachine.h", 55, "!name.empty()");
  }

  if (!a2[1]) {
    goto LABEL_21;
  }
LABEL_6:
  else {
    size_t v9 = (size_t)a2[1];
  }
  sub_10015CEB8((uint64_t)&v13, v9 + 1);
  if (v14 >= 0) {
    __int128 v10 = &v13;
  }
  else {
    __int128 v10 = (__int128 *)v13;
  }
  if (v9)
  {
    else {
      __int128 v11 = *a2;
    }
    memmove(v10, v11, v9);
  }

  *(_WORD *)((char *)v10 + v9) = 44;
  *(_OWORD *)uint64_t v8 = v13;
  *(void *)(a1 + 136) = v14;
  return a1;
}

void sub_10022F7D8(_Unwind_Exception *a1)
{
  sub_100034A98(v5, *(void **)(v1 + 88));
  sub_100160AB8(v4, *(void **)(v1 + 64));
  sub_100012390(v3);
  sub_100034A98(v2, *(void **)(v1 + 16));
  _Unwind_Resume(a1);
}

void sub_10022F82C(uint64_t a1, int a2, double a3)
{
  int v19 = a2;
  uint64_t v3 = *(dispatch_queue_s **)(a1 + 104);
  if (!v3) {
    sub_100391490();
  }
  if (a3 >= 0.0)
  {
    uint64_t v7 = a1 + 64;
    uint64_t v6 = *(void *)(a1 + 64);
    if (!v6) {
      goto LABEL_15;
    }
    uint64_t v8 = a1 + 64;
    do
    {
      int v9 = *(_DWORD *)(v6 + 32);
      BOOL v10 = v9 < a2;
      if (v9 >= a2) {
        __int128 v11 = (uint64_t *)v6;
      }
      else {
        __int128 v11 = (uint64_t *)(v6 + 8);
      }
      if (!v10) {
        uint64_t v8 = v6;
      }
      uint64_t v6 = *v11;
    }

    while (*v11);
    if (v8 != v7 && *(_DWORD *)(v8 + 32) <= a2 && (__int128 v12 = *(void **)(v8 + 40)) != 0LL)
    {
      __int128 v13 = v12;
    }

    else
    {
LABEL_15:
      dispatch_source_t v14 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0LL, 0LL, v3);
      if (!v14) {
        return;
      }
      __int128 v13 = v14;
      uint64_t v20 = &v19;
      char v15 = sub_100160ED4((uint64_t **)(v7 - 8), &v19, (uint64_t)&unk_1004242F8, &v20);
      objc_storeStrong((id *)v15 + 5, v13);
      dispatch_source_set_timer(v13, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0x1DCD6500uLL);
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472LL;
      void v17[2] = sub_10022F9F0;
      v17[3] = &unk_1007AF260;
      v17[4] = a1;
      int v18 = v19;
      dispatch_source_set_event_handler(v13, v17);
      dispatch_resume(v13);
    }

    dispatch_time_t v16 = dispatch_time(0xFFFFFFFFFFFFFFFELL, (uint64_t)(a3 * 1000000000.0));
    dispatch_source_set_timer(v13, v16, 0xFFFFFFFFFFFFFFFFLL, 0x1DCD6500uLL);
    uint64_t v20 = &v19;
    *((_BYTE *)sub_100160F94((uint64_t **)(a1 + 80), &v19, (uint64_t)&unk_1004242F8, &v20) + 32) = 1;
  }

void sub_10022F9E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t **sub_10022F9F0(uint64_t a1)
{
  uint64_t v1 = (_DWORD *)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1001606BC(v2, *(unsigned int *)(a1 + 40));
  uint64_t v4 = v1;
  uint64_t result = sub_100160F94((uint64_t **)(v2 + 80), v1, (uint64_t)&unk_1004242F8, &v4);
  *((_BYTE *)result + 32) = 0;
  return result;
}

void sub_10022FA48( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_10022FA58()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  qword_1007FB118 = (uint64_t)os_log_create("com.apple.nearbyd", "Regulatory");
  objc_autoreleasePoolPop(v0);
}

void sub_10022FD20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10022FDA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10022FED0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10022FF68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023000C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002300B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10023015C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100230214(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100230348( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1002304CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002305FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100230700(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

CFStringRef sub_1002307E0(uint64_t a1)
{
  if (!a1) {
    return @"Default";
  }
  if (a1 != 10) {
    sub_10039FFAC();
  }
  return @"Large";
}

void sub_100230924(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v6 = a1;
  __n128 __p = 0LL;
  double v45 = 0LL;
  uint64_t v46 = 0LL;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 discoveryToken]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 rawToken]);

  char v43 = v8;
  id v9 = [v8 length];
  BOOL v10 = 0LL;
  if (v9)
  {
    sub_1000353EC((unint64_t *)&__p, (size_t)v9);
    BOOL v10 = __p;
  }

  else if (v45 != __p)
  {
    double v45 = __p;
  }

  objc_msgSend(v8, "getBytes:length:", v10, objc_msgSend(v8, "length"));
  unint64_t v11 = (unint64_t)[v6 relationship] - 1;
  if (v11 >= 8) {
    int v12 = 0;
  }
  else {
    int v12 = dword_1004298A8[v11];
  }
  [v6 distance];
  float v14 = v13;
  float v15 = NINearbyObjectDistanceNotAvailable;
  [v6 direction];
  float32x4_t v40 = v16;
  simd_float3 v39 = NINearbyObjectDirectionNotAvailable;
  if (v14 == v15)
  {
    char v19 = 0;
    int v18 = 0;
  }

  else
  {
    [v6 distance];
    int v18 = v17;
    char v19 = 1;
  }

  uint32x4_t v20 = (uint32x4_t)vceqq_f32(v40, (float32x4_t)v39);
  v20.i32[3] = v20.i32[2];
  if ((vminvq_u32(v20) & 0x80000000) != 0)
  {
    int v24 = 0;
  }

  else
  {
    [v6 direction];
    float v41 = v21;
    [v6 direction];
    simd_float3 v39 = v22;
    [v6 direction];
    double v2 = v41;
    double v3 = v39.f32[1];
    double v4 = v23;
    int v24 = 1;
  }

  objc_msgSend(v6, "signalStrength", *(_OWORD *)&v39);
  if (v25 == *(double *)&NINearbyObjectSignalStrengthNotAvailable)
  {
    uint64_t v28 = 0LL;
    uint64_t v27 = 0LL;
  }

  else
  {
    [v6 signalStrength];
    uint64_t v27 = v26;
    uint64_t v28 = 1LL;
  }

  unsigned int v29 = [v6 remoteTxAntennaMask];
  if (v29 == NINearbyObjectRemoteTxAntennaMaskNotAvailable)
  {
    __int16 v30 = 0;
    unsigned __int16 v31 = 0;
  }

  else
  {
    unsigned __int16 v31 = (unsigned __int16)[v6 remoteTxAntennaMask];
    __int16 v30 = 1;
  }

  [v6 boundedRegionRange];
  uint64_t v42 = v28;
  int v33 = v12;
  if (v32 == *(float *)&NINearbyObjectRegionBoundaryRangeNotAvailable)
  {
    uint64_t v36 = 0LL;
    double v35 = 0.0;
  }

  else
  {
    [v6 boundedRegionRange];
    double v35 = v34;
    uint64_t v36 = 1LL;
  }

  char v37 = (void *)objc_claimAutoreleasedReturnValue([v6 discoveryToken]);
  id v38 = [v37 hash];
  *(void *)a2 = 0LL;
  *(void *)(a2 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(void *)(a2 + 16) = 0LL;
  sub_1001309C0((void *)a2, __p, (uint64_t)v45, v45 - (_BYTE *)__p);
  *(void *)(a2 + 24) = v38;
  *(_DWORD *)(a2 + 32) = v33;
  *(_DWORD *)(a2 + 36) = v18;
  *(_BYTE *)(a2 + 40) = v19;
  *(_DWORD *)(a2 + 4std::ostream::~ostream(v2, v3 + 8) = v24;
  *(double *)(a2 + 56) = v2;
  *(double *)(a2 + 64) = v3;
  *(double *)(a2 + 72) = v4;
  *(_BYTE *)(a2 + 80) = v24;
  *(void *)(a2 + 8std::ostream::~ostream(v2, v3 + 8) = v27;
  *(void *)(a2 + 96) = v42;
  *(_WORD *)(a2 + 104) = v31 | (v30 << 8);
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 12std::ostream::~ostream(v2, v3 + 8) = 0u;
  *(double *)(a2 + 144) = v35;
  *(void *)(a2 + 152) = v36;

  if (__p)
  {
    double v45 = __p;
    operator delete(__p);
  }
}

void sub_100230C24( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100230C9C()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  v10[0] = xmmword_100429838;
  v10[1] = unk_100429848;
  sub_10015EABC((uint64_t)&unk_1007FB120, (int *)v10, 4LL);
  xmmword_1007FB138 = xmmword_100423CB0;
  unk_1007FB148 = xmmword_100423CC0;
  qword_1007FB160 = 0LL;
  unk_1007FB168 = 0LL;
  qword_1007FB158 = 0x3FD999999999999ALL;
  unk_1007FB170 = xmmword_100423CD0;
  dword_1007FB180 = 5;
  qword_1007FB188 = 0x4000000000000000LL;
  dword_1007FB190 = 5;
  byte_1007FB198 = 0;
  unk_1007FB19C = 0x30000000ALL;
  xmmword_1007FB1A8 = xmmword_100423CE0;
  unk_1007FB1B8 = xmmword_100423CF0;
  xmmword_1007FB1C8 = xmmword_100423D00;
  qword_1007FB1D8 = 0x3FE3333333333333LL;
  dword_1007FB1E0 = 3;
  xmmword_1007FB1E8 = xmmword_100423D10;
  unk_1007FB1F8 = xmmword_100423CF0;
  xmmword_1007FB208 = xmmword_100423CE0;
  qword_1007FB218 = 0x3FE3333333333333LL;
  byte_1007FB220 = 0;
  xmmword_1007FB228 = xmmword_100423D20;
  unk_1007FB238 = xmmword_100423D30;
  __asm { FMOV            V0.2D, #1.0 }

  __int128 v8 = _Q0;
  xmmword_1007FB248 = _Q0;
  qword_1007FB258 = 0xBFD3333333333333LL;
  xmmword_1007FB260 = xmmword_100423D40;
  qword_1007FB270 = 0x3E99999A40000000LL;
  xmmword_1007FB278 = xmmword_100423CC0;
  qword_1007FB290 = 0LL;
  unk_1007FB298 = 0LL;
  qword_1007FB288 = 0x3FD999999999999ALL;
  xmmword_1007FB2A0 = xmmword_100423CD0;
  dword_1007FB2B0 = 5;
  qword_1007FB2B8 = 0x4000000000000000LL;
  dword_1007FB2C0 = 4;
  qword_1007FB2C8 = 0x300000008LL;
  qword_1007FB2D0 = 0xC04E800000000000LL;
  unint64_t v9 = 0xC04E800000000000LL;
  sub_10015ED64((uint64_t)&unk_1007FB2D8, (double *)&v9, 1LL);
  xmmword_1007FB2F0 = xmmword_100423D50;
  qword_1007FB300 = 0x4024000000000000LL;
  dword_1007FB308 = 45;
  byte_1007FB310 = 0;
  byte_1007FB328 = 0;
  qword_1007FB330 = 0LL;
  byte_1007FB338 = 0;
  dword_1007FB33C = 1;
  byte_1007FB340 = 1;
  xmmword_1007FB348 = xmmword_100423D60;
  unk_1007FB358 = xmmword_100423D70;
  xmmword_1007FB368 = v8;
  qword_1007FB378 = 0xC059000000000000LL;
  xmmword_1007FB380 = xmmword_100423D80;
  qword_1007FB390 = (uint64_t)vdup_n_s32(0x3DCCCCCDu);
  xmmword_1007FB398 = xmmword_100423CC0;
  qword_1007FB3A8 = 0x3FD999999999999ALL;
  qword_1007FB3B8 = 0LL;
  qword_1007FB3B0 = 0LL;
  xmmword_1007FB3C0 = xmmword_100423CD0;
  dword_1007FB3D0 = 5;
  qword_1007FB3D8 = 0x4000000000000000LL;
  dword_1007FB3E0 = 10;
  qword_1007FB3E8 = 0x4034000000000000LL;
  dword_1007FB3F0 = 3;
  xmmword_1007FB3F8 = xmmword_100423D90;
  __cxa_atexit((void (*)(void *))sub_10015CF8C, &unk_1007FB120, (void *)&_mh_execute_header);
  qword_1007FB410 = 0LL;
  unk_1007FB418 = 0LL;
  qword_1007FB408 = 0LL;
  id v6 = operator new(0x40uLL);
  qword_1007FB410 = (uint64_t)(v6 + 4);
  unk_1007FB418 = v6 + 4;
  *id v6 = xmmword_100429858;
  v6[1] = unk_100429868;
  _OWORD v6[2] = xmmword_100429878;
  v6[3] = unk_100429888;
  qword_1007FB408 = (uint64_t)v6;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007FB408, (void *)&_mh_execute_header);
  qword_1007FB428 = 0LL;
  unk_1007FB430 = 0LL;
  qword_1007FB420 = 0LL;
  uint64_t v7 = operator new(0x10uLL);
  qword_1007FB428 = (uint64_t)(v7 + 1);
  unk_1007FB430 = v7 + 1;
  *uint64_t v7 = xmmword_100429898;
  qword_1007FB420 = (uint64_t)v7;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007FB420, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100230FFC(_Unwind_Exception *a1)
{
}

void sub_10023105C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.NearbyInteraction", "LocalDeviceInteraction");
  double v2 = (void *)qword_1007FB438;
  qword_1007FB438 = (uint64_t)v1;
}

void sub_100231244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002312B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (+[NIPlatformInfo isInternalBuild](&OBJC_CLASS___NIPlatformInfo, "isInternalBuild"))
  {
    double v4 = *(os_log_s **)(a1 + 32);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = 138412290;
      id v7 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "setAsyncLocalDeviceInteractableDiscoveryTokens:completion replied error: %@",  (uint8_t *)&v6,  0xCu);
    }
  }

  uint64_t v5 = *(void *)(a1 + 48);
  if (v5) {
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v3);
  }
  [*(id *)(a1 + 40) invalidate];
}

void sub_100231390(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002314EC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_10023153C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (+[NIPlatformInfo isInternalBuild](&OBJC_CLASS___NIPlatformInfo, "isInternalBuild"))
  {
    id v7 = (os_log_s *)*(id *)(a1 + 32);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 67109378;
      v9[1] = [v5 count];
      __int16 v10 = 2112;
      id v11 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "getAsyncInteractableDiscoveryTokens: replied %d tokens. Server error: %@",  (uint8_t *)v9,  0x12u);
    }
  }

  uint64_t v8 = *(void *)(a1 + 48);
  if (v8) {
    (*(void (**)(uint64_t, id, id))(v8 + 16))(v8, v5, v6);
  }
  [*(id *)(a1 + 40) invalidate];
}

void sub_100231644(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002317B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_100231800(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (+[NIPlatformInfo isInternalBuild](&OBJC_CLASS___NIPlatformInfo, "isInternalBuild"))
  {
    id v7 = (os_log_s *)*(id *)(a1 + 32);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 67109378;
      v9[1] = [v5 count];
      __int16 v10 = 2112;
      id v11 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "getAsyncActivelyInteractingDiscoveryTokens: replied %d tokens. Server error: %@",  (uint8_t *)v9,  0x12u);
    }
  }

  uint64_t v8 = *(void *)(a1 + 48);
  if (v8) {
    (*(void (**)(uint64_t, id, id))(v8 + 16))(v8, v5, v6);
  }
  [*(id *)(a1 + 40) invalidate];
}

void sub_100231908(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100231C70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100231D08(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100231D18(uint64_t a1)
{
}

void sub_100231D20(uint64_t a1, void *a2)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100232070( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, id a30)
{
  char v37 = v36;

  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a17, 8);

  _Unwind_Resume(a1);
}

void sub_1002320FC(uint64_t a1, void *a2)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10023245C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002324F4(uint64_t a1, void *a2)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100232870( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, id a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, id a28)
{
  float v34 = v32;

  _Block_object_dispose(&a17, 8);
  _Block_object_dispose(&a23, 8);

  _Block_object_dispose((const void *)(v33 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100232908(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8LL);
  __int16 v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100232CC0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, id a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, id a28)
{
  float v34 = v32;

  _Block_object_dispose(&a17, 8);
  _Block_object_dispose(&a23, 8);

  _Block_object_dispose((const void *)(v33 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100232D58(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8LL);
  __int16 v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1002330F0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, id a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, id a28)
{
  float v34 = v32;

  _Block_object_dispose(&a17, 8);
  _Block_object_dispose(&a23, 8);

  _Block_object_dispose((const void *)(v33 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100233178(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8LL);
  __int16 v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void *sub_100233210@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B7E08[a1]);
}

void *sub_100233224@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B7E60[a1]);
}

void *sub_100233238@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B7EA8[a1]);
}

void *sub_10023324C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B7EC8[a1]);
}

uint64_t sub_100233260(uint64_t a1)
{
  for (uint64_t i = 0LL; i != -96; i -= 48LL)
  {
    uint64_t v3 = a1 + i;
  }

  return a1;
}

uint64_t sub_1002332BC(uint64_t a1, __int128 *a2, uint64_t *a3, void *a4, void *a5)
{
  *(void *)a1 = off_1007B7D00;
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 850045863LL;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(void *)(a1 + 80) = 0LL;
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8((_BYTE *)(a1 + 88), *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v9 = *a2;
    *(void *)(a1 + 104) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 8std::ostream::~ostream(v2, v3 + 8) = v9;
  }

  uint64_t v10 = *a3;
  *a3 = 0LL;
  uint64_t v11 = a4[1];
  *(void *)(a1 + 120) = *a4;
  *(void *)(a1 + 112) = v10;
  *(void *)(a1 + 12std::ostream::~ostream(v2, v3 + 8) = v11;
  if (v11)
  {
    id v12 = (unint64_t *)(v11 + 8);
    do
      unint64_t v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }

  uint64_t v14 = a5[1];
  *(void *)(a1 + 136) = *a5;
  *(void *)(a1 + 144) = v14;
  if (v14)
  {
    float v15 = (unint64_t *)(v14 + 8);
    do
      unint64_t v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
  }

  int v17 = dispatch_queue_create("com.apple.nearbyd.Rose.ProtobufLogger", 0LL);
  *(void *)(a1 + 152) = v17;
  if (!*(void *)(a1 + 120)) {
    __assert_rtn("Logger", "PRProtobufLogger.cpp", 222, "fTimestampSrc != nullptr");
  }
  if (*(void *)(a1 + 112))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 0x40000000LL;
    block[2] = sub_100233490;
    block[3] = &unk_1007B7D70;
    void block[4] = a1;
    dispatch_async(v17, block);
  }

  return a1;
}

void sub_100233434(_Unwind_Exception *a1)
{
}

uint64_t sub_100233490(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  (*(void (**)(void))(**(void **)(v1 + 112) + 16LL))(*(void *)(v1 + 112));
  uint64_t result = *(void *)(v1 + 112);
  *(void *)(v1 + 112) = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_1002334E0(uint64_t a1)
{
  *(void *)a1 = off_1007B7D00;
  uint64_t v3 = (void **)(a1 + 72);
  double v2 = *(void **)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 112);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  }
  sub_100012390(a1 + 136);
  sub_100012390(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  sub_100012390((uint64_t)v3);
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

void sub_10023358C(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1002334E0(a1);
  operator delete(v1);
}

uint64_t sub_1002335A0(uint64_t a1)
{
  double v2 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  uint64_t v4 = (void **)(a1 + 72);
  uint64_t v3 = *(void **)(a1 + 72);
  if (v3 && (sub_1000B5444(v3) & 1) != 0)
  {
    uint64_t v5 = 1LL;
  }

  else
  {
    int v10 = 0;
    sub_100240704((uint64_t *)(a1 + 136), a1 + 88, (uint64_t)&v10, &v11);
    sub_10000EE54(a1 + 72, &v11);
    id v6 = (std::__shared_weak_count *)*((void *)&v11 + 1);
    if (*((void *)&v11 + 1))
    {
      uint64_t v7 = (unint64_t *)(*((void *)&v11 + 1) + 8LL);
      do
        unint64_t v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }

    uint64_t v5 = sub_1000B5444(*v4);
  }

  std::mutex::unlock(v2);
  return v5;
}

void sub_10023366C(_Unwind_Exception *a1)
{
}

uint64_t sub_100233684(uint64_t a1, const std::string *a2, const std::string *a3)
{
  if (sub_10023381C((uint64_t)v13, *(void *)(a1 + 120)))
  {
    v15 |= 2u;
    id v6 = v14;
    if (!v14)
    {
      id v6 = operator new(0x30uLL);
      sub_1000B4540();
      uint64_t v14 = v6;
    }

    v6[11] |= 2u;
    uint64_t v7 = (_DWORD *)*((void *)v6 + 3);
    if (!v7)
    {
      uint64_t v7 = operator new(0x190uLL);
      sub_10005D930((uint64_t)v7);
      *((void *)v6 + 3) = v7;
    }

    v7[98] |= 1u;
    unint64_t v8 = (_DWORD *)*((void *)v7 + 2);
    if (!v8)
    {
      unint64_t v8 = operator new(0x28uLL);
      sub_10005D934(v8);
      *((void *)v7 + 2) = v8;
    }

    v8[9] |= 1u;
    __int128 v9 = (std::string *)*((void *)v8 + 2);
    if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      __int128 v9 = (std::string *)operator new(0x18uLL);
      v9->__r_.__value_.__r.__words[0] = 0LL;
      v9->__r_.__value_.__l.__size_ = 0LL;
      v9->__r_.__value_.__l.__cap_ = 0LL;
      *((void *)v8 + 2) = v9;
    }

    std::string::operator=(v9, a2);
    v8[9] |= 2u;
    int v10 = (std::string *)*((void *)v8 + 3);
    if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      int v10 = (std::string *)operator new(0x18uLL);
      v10->__r_.__value_.__r.__words[0] = 0LL;
      v10->__r_.__value_.__l.__size_ = 0LL;
      v10->__r_.__value_.__l.__cap_ = 0LL;
      *((void *)v8 + 3) = v10;
    }

    std::string::operator=(v10, a3);
    uint64_t v11 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v13);
  }

  else
  {
    uint64_t v11 = 0LL;
  }

  sub_10010686C(v13);
  return v11;
}

void sub_1002337E4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_10023381C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(__int128 *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(&v8, a2);
  int v3 = v10;
  if (v10)
  {
    *(_DWORD *)(a1 + 60) |= 1u;
    uint64_t v4 = *(_DWORD **)(a1 + 40);
    if (!v4)
    {
      uint64_t v4 = operator new(0x38uLL);
      sub_100105C98();
      *(void *)(a1 + 40) = v4;
    }

    int v5 = v4[13];
    *((_OWORD *)v4 + 1) = v8;
    uint64_t v6 = v9;
    v4[13] = v5 | 7;
    *((void *)v4 + 4) = v6;
  }

  return v3 != 0;
}

void sub_1002338B0(_Unwind_Exception *a1)
{
}

uint64_t sub_1002338C4(uint64_t a1, wireless_diagnostics::google::protobuf::MessageLite *a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  int v5 = *(void **)(a1 + 72);
  if (!v5 || (sub_1000B5444(v5) & 1) == 0)
  {
    uint64_t v9 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      wireless_diagnostics::google::protobuf::MessageLite::SerializeAsString(a2);
      sub_10039FFFC((char *)buf, (uint64_t)__p, v9);
    }

    goto LABEL_8;
  }

  int v6 = sub_1000B5454(*(uint64_t **)(a1 + 72), a2);
  int v7 = sub_1000B56EC(*(void **)(a1 + 72));
  if ((v6 & v7 & 1) == 0)
  {
    unsigned __int8 v10 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = *(void *)(a1 + 72);
      if (*(char *)(v12 + 39) < 0)
      {
        sub_1000063A8(__p, *(void **)(v12 + 16), *(void *)(v12 + 24));
      }

      else
      {
        *(_OWORD *)__n128 __p = *(_OWORD *)(v12 + 16);
        uint64_t v15 = *(void *)(v12 + 32);
      }

      unint64_t v13 = __p;
      if (v15 < 0) {
        unint64_t v13 = (void **)__p[0];
      }
      *(_DWORD *)std::string buf = 67109634;
      int v17 = v6;
      __int16 v18 = 1024;
      int v19 = v7;
      __int16 v20 = 2080;
      float v21 = v13;
      _os_log_error_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "pblogger, logProtobuf: append:%d flush:%d error writing to %s",  buf,  0x18u);
      if (SHIBYTE(v15) < 0) {
        operator delete(__p[0]);
      }
    }

void sub_100233A78(_Unwind_Exception *a1)
{
}

uint64_t sub_100233AA4(uint64_t a1, uint64_t a2, double a3)
{
  if (*(_DWORD *)a2 != 1) {
    return 0LL;
  }
  if (!*(_BYTE *)(a2 + 12)) {
    sub_1003A0060();
  }
  unsigned int v6 = sub_100233DC8(*(unsigned int *)(a2 + 4));
  unsigned int v7 = *(_DWORD *)(a2 + 8) != 0;
  sub_10005D92C(v29);
  if (!sub_10005DC4C(v6))
  {
    int v17 = "::CLP::LogEntry::Nearbyd::AccessoryType_IsValid(value)";
    int v18 = 3308;
    int v19 = "set_accessory";
    goto LABEL_26;
  }

  v32 |= 1u;
  unsigned int v30 = v6;
  if (!sub_10005DC68(v7))
  {
    int v17 = "::CLP::LogEntry::Nearbyd::AccessoryActivity_IsValid(value)";
    int v18 = 3331;
    int v19 = "set_activity";
LABEL_26:
    __assert_rtn(v19, "CLPNearbyd.pb.h", v18, v17);
  }

  v32 |= 2u;
  unsigned int v31 = v7;
  sub_100105C94(v26);
  sub_10005DE30((uint64_t)v23, (uint64_t)v29);
  if (!sub_10023381C((uint64_t)v26, *(void *)(a1 + 120))
    && os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_1003A0088();
  }

  v28 |= 2u;
  uint64_t v8 = v27;
  if (!v27)
  {
    uint64_t v8 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v27 = v8;
  }

  v8[11] |= 2u;
  uint64_t v9 = (_DWORD *)*((void *)v8 + 3);
  if (!v9)
  {
    uint64_t v9 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v9);
    *((void *)v8 + 3) = v9;
  }

  v9[98] |= 0x400u;
  unsigned __int8 v10 = (_DWORD *)*((void *)v9 + 11);
  if (!v10)
  {
    unsigned __int8 v10 = operator new(0x28uLL);
    sub_10005D940(v10);
    *((void *)v9 + 11) = v10;
  }

  v10[9] |= 2u;
  uint64_t v11 = (_DWORD *)*((void *)v10 + 3);
  if (!v11)
  {
    uint64_t v11 = operator new(0x20uLL);
    sub_10005D92C(v11);
    *((void *)v10 + 3) = v11;
  }

  unsigned int v12 = v24;
  if (!sub_10005DC4C(v24))
  {
    __int16 v20 = "::CLP::LogEntry::Nearbyd::AccessoryType_IsValid(value)";
    int v21 = 3308;
    simd_float3 v22 = "set_accessory";
    goto LABEL_29;
  }

  v11[7] |= 1u;
  void v11[4] = v12;
  unsigned int v13 = v25;
  if (!sub_10005DC68(v25))
  {
    __int16 v20 = "::CLP::LogEntry::Nearbyd::AccessoryActivity_IsValid(value)";
    int v21 = 3331;
    simd_float3 v22 = "set_activity";
LABEL_29:
    __assert_rtn(v22, "CLPNearbyd.pb.h", v21, v20);
  }

  v11[7] |= 2u;
  void v11[5] = v13;
  v9[98] |= 0x400u;
  uint64_t v14 = (double *)*((void *)v9 + 11);
  if (!v14)
  {
    uint64_t v14 = (double *)operator new(0x28uLL);
    sub_10005D940(v14);
    *((void *)v9 + 11) = v14;
  }

  sub_10005DE34((uint64_t)v23);
  *((_DWORD *)v14 + 9) |= 1u;
  _OWORD v14[2] = a3;
  uint64_t v15 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v26);
  sub_10010686C(v26);
  sub_10005DE34((uint64_t)v29);
  return v15;
}

void sub_100233D60( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

uint64_t sub_100233DC8(uint64_t result)
{
  switch((int)result)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return result;
    default:
      if ((_DWORD)result == 999) {
        unsigned int v1 = 999;
      }
      else {
        unsigned int v1 = 0;
      }
      if ((_DWORD)result == 998) {
        uint64_t result = 998LL;
      }
      else {
        uint64_t result = v1;
      }
      break;
  }

  return result;
}

uint64_t sub_100233E04(uint64_t a1, int a2, double a3)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A00E0();
  }
  sub_100105C94(v10);
  unsigned int v6 = sub_100233EE4((uint64_t)v10, 1u, *(void *)(a1 + 120));
  int v7 = *((_DWORD *)v6 + 9);
  *((_DWORD *)v6 + 7) = a2;
  *((_DWORD *)v6 + 9) = v7 | 6;
  *((double *)v6 + 2) = a3;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A00B4();
  }
  uint64_t v8 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v10);
  sub_10010686C(v10);
  return v8;
}

void sub_100233ED0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100233EE4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (!sub_10023381C(a1, a3) && os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_1003A0088();
  }
  *(_DWORD *)(a1 + 60) |= 2u;
  int v5 = *(_DWORD **)(a1 + 48);
  if (!v5)
  {
    int v5 = operator new(0x30uLL);
    sub_1000B4540();
    *(void *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = v5;
  }

  v5[11] |= 2u;
  unsigned int v6 = (_DWORD *)*((void *)v5 + 3);
  if (!v6)
  {
    unsigned int v6 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v6);
    *((void *)v5 + 3) = v6;
  }

  v6[98] |= 0x100u;
  int v7 = (_DWORD *)*((void *)v6 + 9);
  if (!v7)
  {
    int v7 = operator new(0x28uLL);
    sub_10005D93C(v7);
    *((void *)v6 + 9) = v7;
  }

  if (!sub_10005DC74(a2)) {
    sub_10038BCAC();
  }
  v7[9] |= 1u;
  v7[6] = a2;
  v6[98] |= 0x100u;
  uint64_t v8 = (void *)*((void *)v6 + 9);
  if (!v8)
  {
    uint64_t v8 = operator new(0x28uLL);
    sub_10005D93C(v8);
    *((void *)v6 + 9) = v8;
  }

  return v8;
}

void sub_100234004(_Unwind_Exception *a1)
{
}

uint64_t sub_10023402C(uint64_t a1, int a2, double a3)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A0138();
  }
  sub_100105C94(v10);
  unsigned int v6 = sub_100233EE4((uint64_t)v10, 2u, *(void *)(a1 + 120));
  int v7 = *((_DWORD *)v6 + 9);
  *((_DWORD *)v6 + 7) = a2;
  *((_DWORD *)v6 + 9) = v7 | 6;
  *((double *)v6 + 2) = a3;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A010C();
  }
  uint64_t v8 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v10);
  sub_10010686C(v10);
  return v8;
}

void sub_1002340F8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10023410C(uint64_t a1, int a2, double a3)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A0190();
  }
  sub_100105C94(v10);
  unsigned int v6 = sub_100233EE4((uint64_t)v10, 5u, *(void *)(a1 + 120));
  int v7 = *((_DWORD *)v6 + 9);
  *((_DWORD *)v6 + 7) = a2;
  *((_DWORD *)v6 + 9) = v7 | 6;
  *((double *)v6 + 2) = a3;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A0164();
  }
  uint64_t v8 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v10);
  sub_10010686C(v10);
  return v8;
}

void sub_1002341D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_1002341EC(uint64_t a1, int a2, unsigned int a3, uint64_t a4)
{
  if (!sub_10023381C(a1, a4) && os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_1003A0088();
  }
  *(_DWORD *)(a1 + 60) |= 2u;
  int v7 = *(_DWORD **)(a1 + 48);
  if (!v7)
  {
    int v7 = operator new(0x30uLL);
    sub_1000B4540();
    *(void *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = v7;
  }

  v7[11] |= 4u;
  uint64_t v8 = (_DWORD *)*((void *)v7 + 4);
  if (!v8)
  {
    uint64_t v8 = operator new(0x30uLL);
    sub_1000A6524();
    *((void *)v7 + 4) = v8;
  }

  v8[11] |= 1u;
  uint64_t v9 = (_DWORD *)*((void *)v8 + 2);
  if (!v9)
  {
    uint64_t v9 = operator new(0x100uLL);
    sub_1000752E4((uint64_t)v9);
    *((void *)v8 + 2) = v9;
  }

  if (!sub_1000755E4(a2)) {
    sub_10038BDEC();
  }
  v9[63] |= 1u;
  void v9[4] = a2;
  if ((sub_1000755F4(a3) & 1) == 0) {
    sub_10038BDC4();
  }
  v9[63] |= 2u;
  void v9[5] = a3;
  v8[11] |= 1u;
  unsigned __int8 v10 = (void *)*((void *)v8 + 2);
  if (!v10)
  {
    unsigned __int8 v10 = operator new(0x100uLL);
    sub_1000752E4((uint64_t)v10);
    *((void *)v8 + 2) = v10;
  }

  return v10;
}

void sub_100234330(_Unwind_Exception *a1)
{
}

uint64_t sub_100234358(unsigned int *a1, unsigned int a2)
{
  uint64_t v4 = sub_10007560C(a2);
  if ((v4 & 1) != 0)
  {
    *a1 = a2;
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_1003A01BC();
  }

  return v4;
}

uint64_t sub_1002343C8(uint64_t a1, const std::string *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A0248();
  }
  sub_100105C94(v9);
  uint64_t v4 = sub_1002341EC((uint64_t)v9, 1, 0, *(void *)(a1 + 120));
  v4[63] |= 4u;
  int v5 = (_DWORD *)*((void *)v4 + 3);
  if (!v5)
  {
    int v5 = operator new(0x20uLL);
    sub_1000752F0(v5);
    *((void *)v4 + 3) = v5;
  }

  v5[7] |= 1u;
  unsigned int v6 = (std::string *)*((void *)v5 + 2);
  if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    unsigned int v6 = (std::string *)operator new(0x18uLL);
    v6->__r_.__value_.__r.__words[0] = 0LL;
    v6->__r_.__value_.__l.__size_ = 0LL;
    v6->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v5 + 2) = v6;
  }

  std::string::operator=(v6, a2);
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A021C();
  }
  uint64_t v7 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v9);
  sub_10010686C(v9);
  return v7;
}

void sub_1002344E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100234510(unsigned int *a1, unsigned int a2)
{
  uint64_t v4 = sub_100075648(a2);
  if ((v4 & 1) != 0)
  {
    *a1 = a2;
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_1003A0274();
  }

  return v4;
}

BOOL sub_100234580(unsigned int *a1, unsigned int a2)
{
  BOOL v4 = sub_10005DC68(a2);
  if (v4)
  {
    *a1 = a2;
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_1003A02D4();
  }

  return v4;
}

uint64_t sub_1002345F0(uint64_t a1, unsigned int a2, int a3)
{
  uint64_t v6 = sub_10007560C(a2);
  if ((v6 & 1) != 0)
  {
    if ((sub_10007560C(a2) & 1) == 0) {
      sub_10038C1FC();
    }
    int v7 = *(_DWORD *)(a1 + 32);
    *(_DWORD *)(a1 + 24) = a2;
    *(_DWORD *)(a1 + 32) = v7 | 3;
    uint64_t v8 = *(_DWORD **)(a1 + 16);
    if (!v8)
    {
      uint64_t v8 = operator new(0x28uLL);
      sub_1000752E8((uint64_t)v8);
      *(void *)(a1 + 16) = v8;
    }

    v8[8] |= 2u;
    v8[6] = a3;
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_1003A01BC();
  }

  return v6;
}

void sub_1002346AC(_Unwind_Exception *a1)
{
}

uint64_t sub_1002346C0(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A0360();
  }
  sub_100105C94(v18);
  BOOL v4 = sub_1002341EC((uint64_t)v18, 2, 1u, *(void *)(a1 + 120));
  v4[63] |= 8u;
  int v5 = (_DWORD *)*((void *)v4 + 4);
  if (!v5)
  {
    int v5 = operator new(0x48uLL);
    sub_1000752F4(v5);
    *((void *)v4 + 4) = v5;
  }

  else {
    std::string __p = *(std::string *)a2;
  }
  v5[17] |= 1u;
  uint64_t v6 = (std::string *)*((void *)v5 + 2);
  if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    uint64_t v6 = (std::string *)operator new(0x18uLL);
    v6->__r_.__value_.__r.__words[0] = 0LL;
    v6->__r_.__value_.__l.__size_ = 0LL;
    v6->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v5 + 2) = v6;
  }

  std::string::operator=(v6, &__p);
  int v7 = v5[17];
  v5[6] = __rev16(*(unsigned __int16 *)(a2 + 24));
  int v8 = *(unsigned __int16 *)(a2 + 26);
  int v9 = v7 | 6;
  v5[17] = v7 | 6;
  v5[7] = v8;
  if (*(_BYTE *)(a2 + 96))
  {
    uint8_t v5[8] = *(unsigned __int16 *)(a2 + 34);
    v5[9] = *(unsigned __int16 *)(a2 + 36);
    v5[17] = v7 | 0x3E;
    unsigned __int8 v10 = (std::string *)*((void *)v5 + 5);
    if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      unsigned __int8 v10 = (std::string *)operator new(0x18uLL);
      v10->__r_.__value_.__r.__words[0] = 0LL;
      v10->__r_.__value_.__l.__size_ = 0LL;
      v10->__r_.__value_.__l.__cap_ = 0LL;
      *((void *)v5 + 5) = v10;
    }

    std::string::operator=(v10, (const std::string *)(a2 + 40));
    int v11 = v5[17];
    v5[12] = *(unsigned __int16 *)(a2 + 64);
    int v12 = *(unsigned __int8 *)(a2 + 66);
    v5[17] = v11 | 0xC0;
    v5[13] = v12;
    int v13 = *(_DWORD *)(a2 + 68);
    int v9 = v11 | 0x1C0;
    v5[17] = v11 | 0x1C0;
    v5[14] = v13;
  }

  uint64_t v14 = *(void *)(a2 + 104);
  if ((v14 & 0xFF00000000LL) != 0)
  {
    v5[17] = v9 | 0x200;
    v5[15] = v14;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A0334();
  }
  uint64_t v15 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v18);
  sub_10010686C(v18);
  return v15;
}

void sub_1002348C4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
}

BOOL sub_10023490C(uint64_t a1, unsigned int a2)
{
  BOOL result = sub_10005DC68(a2);
  if (!result) {
    sub_10038C10C();
  }
  *(_DWORD *)(a1 + 88) |= 2u;
  *(_DWORD *)(a1 + 24) = a2;
  return result;
}

uint64_t sub_10023494C(uint64_t a1, unsigned __int8 *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A03B8();
  }
  sub_100105C94(v24);
  BOOL v4 = sub_1002341EC((uint64_t)v24, 1, 0x1Au, *(void *)(a1 + 120));
  v4[63] |= 0x8000000u;
  int v5 = (_DWORD *)*((void *)v4 + 28);
  if (!v5)
  {
    int v5 = operator new(0x60uLL);
    sub_100075324((uint64_t)v5);
    *((void *)v4 + 2std::ostream::~ostream(v2, v3 + 8) = v5;
  }

  if (!a2[1]
    || !a2[345]
    || !a2[347]
    || !a2[350]
    || !a2[354]
    || !a2[357]
    || !a2[3]
    || !a2[5]
    || !a2[360]
    || !a2[370]
    || !a2[373]
    || !a2[375]
    || !a2[7]
    || !a2[78]
    || !a2[24])
  {
    int v21 = (os_log_s *)qword_1008000A0;
    uint64_t v20 = 0LL;
    if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_40;
    }
    LOWORD(v23[0]) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "pblogger, Test NMI range enable params not available",  (uint8_t *)v23,  2u);
LABEL_39:
    uint64_t v20 = 0LL;
    goto LABEL_40;
  }

  if (!sub_100234580(v23, *a2)) {
    goto LABEL_39;
  }
  sub_10023490C((uint64_t)v5, v23[0]);
  if (!a2[354]) {
    goto LABEL_41;
  }
  int v6 = *((unsigned __int16 *)a2 + 176);
  int v7 = v5[22];
  v5[22] = v7 | 4;
  v5[7] = v6;
  if (!a2[345]) {
    goto LABEL_41;
  }
  int v8 = a2[344];
  v5[22] = v7 | 0xC;
  uint8_t v5[8] = v8;
  if (!a2[347]) {
    goto LABEL_41;
  }
  int v9 = a2[346];
  v5[22] = v7 | 0x1C;
  v5[9] = v9;
  if (!a2[350]) {
    goto LABEL_41;
  }
  int v10 = *((unsigned __int16 *)a2 + 174);
  v5[22] = v7 | 0x3C;
  v5[10] = v10;
  if (!a2[357]) {
    goto LABEL_41;
  }
  v5[11] = a2[356];
  int v11 = a2[370];
  v5[22] = v7 | 0xFC;
  v5[12] = v11;
  if (!a2[3]) {
    goto LABEL_41;
  }
  int v12 = a2[2];
  v5[22] = v7 | 0x1FC;
  v5[13] = v12;
  if (!a2[5]) {
    goto LABEL_41;
  }
  int v13 = a2[4];
  v5[22] = v7 | 0x3FC;
  v5[14] = v13;
  if (!a2[360]) {
    goto LABEL_41;
  }
  int v14 = *((unsigned __int16 *)a2 + 179);
  v5[22] = v7 | 0x7FC;
  v5[15] = v14;
  if (!a2[373]) {
    goto LABEL_41;
  }
  int v15 = a2[372];
  v5[22] = v7 | 0xFFC;
  uint8_t v5[16] = v15;
  if (!a2[375]) {
    goto LABEL_41;
  }
  int v16 = a2[374];
  v5[22] = v7 | 0x1FFC;
  v5[17] = v16;
  if (!a2[7]
    || (int v17 = a2[6], v5[22] = v7 | 0x3FFC, v5[18] = v17, !a2[78])
    || (int v18 = *((unsigned __int16 *)a2 + 38), v5[22] = v7 | 0x7FFC, v5[19] = v18, !a2[24]))
  {
LABEL_41:
    sub_100006080();
  }

  char v19 = a2[22] & 1;
  v5[22] = v7 | 0xFFFC;
  *((_BYTE *)v5 + sub_10005DE34(v14 - 80) = v19;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A038C();
  }
  uint64_t v20 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v24);
LABEL_40:
  sub_10010686C(v24);
  return v20;
}

void sub_100234C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100234C88(uint64_t a1, unsigned __int8 *a2, uint64_t a3, char a4, char a5)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A0470();
  }
  sub_100105C94(v109);
  int v10 = sub_1002341EC((uint64_t)v109, 3, 0xDu, *(void *)(a1 + 120));
  v10[63] |= 0x8000u;
  int v11 = (int *)*((void *)v10 + 16);
  if (!v11)
  {
    int v11 = (int *)operator new(0x1E0uLL);
    sub_1000752FC((uint64_t)v11);
    *((void *)v10 + 16) = v11;
  }

  v11[117] |= 1u;
  int v12 = (_DWORD *)*((void *)v11 + 2);
  if (!v12)
  {
    int v12 = operator new(0x28uLL);
    sub_1000752EC((uint64_t)v12);
    *((void *)v11 + 2) = v12;
  }

  if ((sub_1002345F0((uint64_t)v12, *((unsigned __int16 *)a2 + 48), *((unsigned __int16 *)a2 + 49)) & 1) == 0
    || (sub_100234510(&v108, a2[100]) & 1) == 0)
  {
    uint64_t v39 = 0LL;
    goto LABEL_33;
  }

  unsigned int v13 = v108;
  if ((sub_100075648(v108) & 1) == 0) {
    __assert_rtn( "set_session_type",  "CLPRoseCommunicationEvent.pb.h",  10992,  "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseSessionType_IsValid(value)");
  }
  int v14 = v11[117];
  uint8_t v11[8] = v13;
  *((void *)v11 + 21) = *((void *)a2 + 13);
  v11[9] = *((unsigned __int16 *)a2 + 56);
  int v15 = a2[114];
  v14 |= 0x100001Au;
  v11[117] = v14;
  v11[12] = v15;
  __str.__r_.__value_.__s.__size_ = 8;
  __str.__r_.__value_.__r.__words[0] = *(void *)(a2 + 115);
  __str.__r_.__value_.__s.__data_[8] = 0;
  v11[117] = v14 | 0x20;
  int v16 = (std::string *)*((void *)v11 + 5);
  if (v16 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v16 = (std::string *)operator new(0x18uLL);
    v16->__r_.__value_.__r.__words[0] = 0LL;
    v16->__r_.__value_.__l.__size_ = 0LL;
    v16->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v11 + 5) = v16;
  }

  std::string::operator=(v16, &__str);
  int v17 = v11[117];
  if (!v12[6])
  {
    uint64_t v18 = *((void *)a2 + 16);
    int v19 = v17 | 0x10000;
    v11[117] = v17 | 0x10000;
    *((void *)v11 + 12) = v18;
    if (a2[528])
    {
      uint64_t v20 = *((void *)a2 + 65);
      v11[118] |= 4u;
      *((void *)v11 + 31) = v20;
    }

    if (a2[544])
    {
      uint64_t v21 = *((void *)a2 + 67);
      v11[118] |= 8u;
      *((void *)v11 + 32) = v21;
    }

    simd_float3 v22 = (uint64_t *)*((void *)a2 + 17);
    float v23 = (uint64_t *)*((void *)a2 + 18);
    if (v22 != v23)
    {
      char v105 = a5;
      uint64_t v106 = a1;
      unsigned int v24 = v22 + 5;
      int v25 = 1;
      do
      {
        uint64_t v26 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 67109120;
          int v111 = v25;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "pblogger, Logger::logRangeResult: aoaHypothesis %d",  buf,  8u);
          ++v25;
        }

        int v27 = v11[51];
        uint64_t v28 = v11[50];
        if ((int)v28 >= v27)
        {
          if (v27 == v11[52])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v11 + 48),  v27 + 1);
            int v27 = v11[51];
          }

          v11[51] = v27 + 1;
          unsigned int v30 = sub_1000A609C();
          uint64_t v31 = *((void *)v11 + 24);
          uint64_t v32 = v11[50];
          v11[50] = v32 + 1;
          *(void *)(v31 + 8 * v32) = v30;
        }

        else
        {
          uint64_t v29 = *((void *)v11 + 24);
          v11[50] = v28 + 1;
          unsigned int v30 = *(_DWORD **)(v29 + 8 * v28);
        }

        uint64_t v33 = v24 - 5;
        int v34 = v30[19];
        *((_OWORD *)v30 + 1) = *(_OWORD *)(v24 - 5);
        uint64_t v35 = *(v24 - 3);
        int v36 = v34 | 7;
        v30[19] = v34 | 7;
        *((void *)v30 + 4) = v35;
        if (*((_BYTE *)v24 - 8))
        {
          uint64_t v37 = *(v24 - 2);
          int v36 = v34 | 0x17;
          v30[19] = v34 | 0x17;
          *((void *)v30 + 6) = v37;
        }

        if (*((_BYTE *)v24 + 8))
        {
          uint64_t v38 = *v24;
          v30[19] = v36 | 0x20;
          *((void *)v30 + 7) = v38;
        }

        v24 += 7;
      }

      while (v33 + 7 != v23);
      int v19 = v11[117];
      a1 = v106;
      a5 = v105;
    }

    int v41 = v19 | 0x600;
    v11[117] = v19 | 0x600;
    *((_OWORD *)v11 + 4) = *((_OWORD *)a2 + 10);
    if (a2[184])
    {
      uint64_t v42 = *((void *)a2 + 22);
      v11[118] |= 0x2000000u;
      *((void *)v11 + 49) = v42;
    }

    if (a2[200])
    {
      uint64_t v43 = *((void *)a2 + 24);
      int v41 = v19 | 0x20000600;
      v11[117] = v19 | 0x20000600;
      *((void *)v11 + 27) = v43;
    }

    if (a2[216])
    {
      uint64_t v44 = *((void *)a2 + 26);
      v41 |= 0x40000000u;
      v11[117] = v41;
      *((void *)v11 + 2std::ostream::~ostream(v2, v3 + 8) = v44;
    }

    if (a2[232])
    {
      uint64_t v45 = *((void *)a2 + 28);
      v41 |= 0x80000000;
      v11[117] = v41;
      *((void *)v11 + 29) = v45;
    }

    int v46 = v41 | 0x180000;
    v11[117] = v41 | 0x180000;
    *(_OWORD *)(v11 + 30) = *((_OWORD *)a2 + 15);
    if (a2[264])
    {
      uint64_t v47 = *((void *)a2 + 32);
      int v46 = v41 | 0x580000;
      v11[117] = v41 | 0x580000;
      *((void *)v11 + 19) = v47;
    }

    if (a2[280])
    {
      uint64_t v48 = *((void *)a2 + 34);
      v46 |= 0x800000u;
      v11[117] = v46;
      *((void *)v11 + 20) = v48;
    }

    int v49 = v11[118];
    v11[75] = *((_DWORD *)a2 + 73);
    uint64_t v50 = *((void *)a2 + 37);
    int v17 = v46 | 0x8000000;
    v11[117] = v46 | 0x8000000;
    *((void *)v11 + 23) = v50;
    int v51 = a2[312];
    int v52 = v49 | 0x4001;
    v11[118] = v49 | 0x4001;
    v11[60] = v51;
    if (a2[328])
    {
      uint64_t v53 = *((void *)a2 + 40);
      int v52 = v49 | 0x4011;
      v11[118] = v49 | 0x4011;
      *((void *)v11 + 33) = v53;
    }

    if (a2[344])
    {
      uint64_t v54 = *((void *)a2 + 42);
      v52 |= 0x20u;
      v11[118] = v52;
      *((void *)v11 + 34) = v54;
    }

    if (a2[360])
    {
      uint64_t v55 = *((void *)a2 + 44);
      v52 |= 0x40u;
      v11[118] = v52;
      *((void *)v11 + 35) = v55;
    }

    if (a2[392])
    {
      uint64_t v56 = *((void *)a2 + 48);
      v52 |= 0x200000u;
      v11[118] = v52;
      *((void *)v11 + 44) = v56;
    }

    if (a2[408])
    {
      uint64_t v57 = *((void *)a2 + 50);
      v52 |= 0x400000u;
      v11[118] = v52;
      *((void *)v11 + 45) = v57;
    }

    if (a2[424])
    {
      uint64_t v58 = *((void *)a2 + 52);
      v52 |= 0x800000u;
      v11[118] = v52;
      *((void *)v11 + 46) = v58;
    }

    if (a2[440])
    {
      uint64_t v59 = *((void *)a2 + 54);
      v11[118] = v52 | 0x1000000;
      *((void *)v11 + 4std::ostream::~ostream(v2, v3 + 8) = v59;
    }
  }

  if (a2[16])
  {
    uint64_t v60 = *((void *)a2 + 1);
    v17 |= 0x2000000u;
    v11[117] = v17;
    *((void *)v11 + 22) = v60;
  }

  int v61 = *((unsigned __int16 *)a2 + 144);
  v11[117] = v17 | 0x4000000;
  v11[35] = v61;
  unsigned int v62 = a2[368] != 5;
  if (!sub_10005DC68(v62))
  {
    __int128 v99 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseRFChannel_IsValid(value)";
    int v100 = 11748;
    __int128 v101 = "set_rf_channel";
    goto LABEL_130;
  }

  v11[118] |= 2u;
  v11[61] = v62;
  if (*(unsigned __int16 *)(a2 + 369) >= 0x100u)
  {
    int v63 = *(_WORD *)(a2 + 369);
    if (sub_100075664(v63))
    {
      if (!sub_100075664(v63)) {
        __assert_rtn( "set_nb_band",  "CLPRoseCommunicationEvent.pb.h",  12429,  "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseNbBand_IsValid(value)");
      }
      v11[118] |= 0x80000000;
      v11[104] = v63;
    }

    else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      sub_1003A0410();
    }
  }

  int v64 = *((_DWORD *)a2 + 93);
  if ((v64 & 0xFF0000) != 0)
  {
    v11[119] |= 1u;
    v11[105] = (unsigned __int16)v64;
  }

  int v65 = v11[118];
  v11[85] = *((unsigned __int16 *)a2 + 188);
  v11[86] = *((unsigned __int16 *)a2 + 189);
  int v66 = *((unsigned __int16 *)a2 + 190);
  int v67 = v65 | 0xE0000;
  v11[118] = v65 | 0xE0000;
  v11[87] = v66;
  unsigned int v68 = *((unsigned __int16 *)a2 + 224);
  if (v68 >= 0x100)
  {
    int v67 = v65 | 0x40E0000;
    v11[118] = v65 | 0x40E0000;
    v11[95] = v68;
  }

  unsigned int v69 = *((unsigned __int16 *)a2 + 225);
  if (v69 >= 0x100)
  {
    v67 |= 0x8000000u;
    v11[118] = v67;
    v11[100] = v69;
  }

  int v70 = *(_DWORD *)(a2 + 454);
  if ((v70 & 0xFF0000) != 0)
  {
    v67 |= 0x20000000u;
    v11[118] = v67;
    v11[102] = (__int16)v70;
  }

  int v71 = *(_DWORD *)(a2 + 458);
  if ((v71 & 0xFF0000) != 0)
  {
    v67 |= 0x40000000u;
    v11[118] = v67;
    v11[103] = (__int16)v71;
  }

  int v72 = *((_DWORD *)a2 + 10);
  if (v72 == 1)
  {
    if (sub_100075674(2))
    {
      int v73 = 2;
      goto LABEL_85;
    }

    goto LABEL_129;
  }

  if (v72) {
    goto LABEL_86;
  }
  if (!sub_100075674(1))
  {
LABEL_129:
    __int128 v99 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseRangeResultEventSource_IsValid(value)";
    int v100 = 11881;
    __int128 v101 = "set_source";
LABEL_130:
    __assert_rtn(v101, "CLPRoseCommunicationEvent.pb.h", v100, v99);
  }

  int v73 = 1;
LABEL_85:
  int v67 = v11[118] | 0x80;
  v11[118] = v67;
  v11[72] = v73;
LABEL_86:
  v11[73] = *((unsigned __int16 *)a2 + 28);
  *((_BYTE *)v11 + 296) = a2[4];
  *((_BYTE *)v11 + 297) = a4;
  *((_BYTE *)v11 + 29std::ostream::~ostream(v2, v3 + 8) = a5;
  uint64_t v74 = *((void *)a2 + 6);
  v11[118] = v67 | 0x1F00;
  *((void *)v11 + 3std::ostream::~ostream(v2, v3 + 8) = v74;
  if (*(_BYTE *)(a3 + 36))
  {
    v11[118] = v67 | 0x3F00;
    __int16 v75 = (_DWORD *)*((void *)v11 + 39);
    if (!v75)
    {
      __int16 v75 = operator new(0x38uLL);
      sub_1000752F8((uint64_t)v75);
      *((void *)v11 + 39) = v75;
    }

    unsigned int v76 = *(_DWORD *)a3;
    if (sub_100075684(*(_DWORD *)a3))
    {
      v75[13] |= 1u;
      v75[4] = v76;
      unsigned int v77 = *(_DWORD *)(a3 + 4);
      if (sub_100075684(v77))
      {
        v75[13] |= 2u;
        v75[5] = v77;
        unsigned int v78 = *(_DWORD *)(a3 + 8);
        if (sub_100075684(v78))
        {
          v75[13] |= 4u;
          v75[6] = v78;
          unsigned int v79 = *(_DWORD *)(a3 + 12);
          if (sub_10005DC74(v79))
          {
            v75[13] |= 8u;
            v75[7] = v79;
            unsigned int v80 = *(_DWORD *)(a3 + 16);
            if (sub_10005DC74(v80))
            {
              v75[13] |= 0x10u;
              v75[8] = v80;
              unsigned int v81 = *(_DWORD *)(a3 + 20);
              if (sub_10005DC74(v81))
              {
                v75[13] |= 0x20u;
                v75[9] = v81;
                unsigned int v82 = *(_DWORD *)(a3 + 24);
                if (sub_10005DC68(v82))
                {
                  v75[13] |= 0x40u;
                  v75[10] = v82;
                  unsigned int v83 = *(_DWORD *)(a3 + 28);
                  if (sub_10005DC68(v83))
                  {
                    v75[13] |= 0x80u;
                    v75[11] = v83;
                    goto LABEL_98;
                  }

                  uint64_t v102 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckRSSIsResult_IsValid(value)";
                  int v103 = 10927;
                  uint64_t v104 = "set_check_rssis_result";
                }

                else
                {
                  uint64_t v102 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckTimestampsResult_IsValid(value)";
                  int v103 = 10904;
                  uint64_t v104 = "set_check_timestamps_result";
                }
              }

              else
              {
                uint64_t v102 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckFPSNRsOkForSensorFusionResult_IsValid(value)";
                int v103 = 10881;
                uint64_t v104 = "set_check_fp_snrs_ok_for_sensor_fusion_result";
              }
            }

            else
            {
              uint64_t v102 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckToaCirResult_IsValid(value)";
              int v103 = 10858;
              uint64_t v104 = "set_check_toa_cir_result";
            }
          }

          else
          {
            uint64_t v102 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckAoaCirResult_IsValid(value)";
            int v103 = 10835;
            uint64_t v104 = "set_check_aoa_cir_result";
          }
        }

        else
        {
          uint64_t v102 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckFPIndicesResult_IsValid(value)";
          int v103 = 10812;
          uint64_t v104 = "set_check_fp_indices_result";
        }
      }

      else
      {
        uint64_t v102 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckFPSNRsResult_IsValid(value)";
        int v103 = 10789;
        uint64_t v104 = "set_check_fp_snrs_result";
      }
    }

    else
    {
      uint64_t v102 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::ME_CheckPDOAResult_IsValid(value)";
      int v103 = 10766;
      uint64_t v104 = "set_check_pdoa_result";
    }

    __assert_rtn(v104, "CLPRoseCommunicationEvent.pb.h", v103, v102);
  }

void sub_1002357C8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20, uint64_t a21, char a22)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  sub_10010686C(&a22);
  _Unwind_Resume(a1);
}

std::string *sub_100235848(uint64_t a1, std::string *__str)
{
  *(_DWORD *)(a1 + 468) |= 0x20u;
  BOOL v4 = *(std::string **)(a1 + 40);
  if (v4 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    BOOL v4 = (std::string *)operator new(0x18uLL);
    v4->__r_.__value_.__l.__size_ = 0LL;
    v4->__r_.__value_.__l.__cap_ = 0LL;
    v4->__r_.__value_.__r.__words[0] = 0LL;
    *(void *)(a1 + 40) = v4;
  }

  return std::string::operator=(v4, __str);
}

uint64_t sub_1002358A0(uint64_t a1, __int128 *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A05D4();
  }
  int v3 = &v83;
  __int128 v83 = *a2;
  BOOL v4 = (__int16 *)*((void *)a2 + 3);
  uint64_t v84 = *((void *)a2 + 2);
  __int128 v85 = 0LL;
  int v86 = 0LL;
  uint64_t v87 = 0LL;
  sub_1001306E8( &v85,  v4,  *((__int16 **)a2 + 4),  0x86BCA1AF286BCA1BLL * ((uint64_t)(*((void *)a2 + 4) - (void)v4) >> 3));
  uint64_t v88 = 0LL;
  int v89 = 0LL;
  uint64_t v90 = 0LL;
  sub_100130D1C( &v88,  *((void *)a2 + 6),  *((void *)a2 + 7),  (uint64_t)(*((void *)a2 + 7) - *((void *)a2 + 6)) >> 5);
  sub_100105C94(v79);
  int v5 = sub_1002341EC((uint64_t)v79, 3, 0xFu, *(void *)(a1 + 120));
  v5[63] |= 0x20000u;
  int v6 = (int *)*((void *)v5 + 18);
  if (!v6)
  {
    int v6 = (int *)operator new(0x68uLL);
    sub_100075304((uint64_t)v6);
    *((void *)v5 + 1std::ostream::~ostream(v2, v3 + 8) = v6;
  }

  v6[24] |= 1u;
  int v7 = (_DWORD *)*((void *)v6 + 2);
  if (!v7)
  {
    int v7 = operator new(0x28uLL);
    sub_1000752E8((uint64_t)v7);
    *((void *)v6 + 2) = v7;
  }

  int v8 = (unsigned __int16)v83;
  v7[8] |= 2u;
  v7[6] = v8;
  if ((sub_100234510(&v78, BYTE2(v83)) & 1) != 0)
  {
    unsigned int v9 = v78;
    if ((sub_100075648(v78) & 1) == 0) {
      __assert_rtn( "set_session_type",  "CLPRoseCommunicationEvent.pb.h",  13320,  "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseSessionType_IsValid(value)");
    }
    int v10 = v6[24];
    int v11 = WORD2(v83);
    v6[6] = v9;
    v6[7] = v11;
    v6[22] = BYTE6(v83);
    __str.__r_.__value_.__s.__size_ = 8;
    __str.__r_.__value_.__r.__words[0] = *(void *)((char *)&v83 + 7);
    __str.__r_.__value_.__s.__data_[8] = 0;
    v6[24] = v10 | 0x1E;
    int v12 = (std::string *)*((void *)v6 + 4);
    if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      int v12 = (std::string *)operator new(0x18uLL);
      v12->__r_.__value_.__r.__words[0] = 0LL;
      v12->__r_.__value_.__l.__size_ = 0LL;
      v12->__r_.__value_.__l.__cap_ = 0LL;
      *((void *)v6 + 4) = v12;
    }

    std::string::operator=(v12, &__str);
    unsigned int v13 = v85;
    int v71 = v86;
    if (v85 == v86)
    {
LABEL_82:
      uint64_t v56 = v88;
      for (uint64_t i = v89; v56 != (void **)i; v56 += 4)
      {
        int v58 = v6[19];
        uint64_t v59 = v6[18];
        if ((int)v59 >= v58)
        {
          if (v58 == v6[20])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v6 + 16),  v58 + 1);
            int v58 = v6[19];
          }

          v6[19] = v58 + 1;
          int v61 = sub_1000A611C();
          uint64_t v62 = *((void *)v6 + 8);
          uint64_t v63 = v6[18];
          v6[18] = v63 + 1;
          *(void *)(v62 + 8 * v63) = v61;
        }

        else
        {
          uint64_t v60 = *((void *)v6 + 8);
          v6[18] = v59 + 1;
          int v61 = *(void **)(v60 + 8 * v59);
        }

        int v64 = *((_DWORD *)v61 + 9);
        *((_DWORD *)v61 + 4) = *(unsigned __int16 *)v56;
        int v65 = *((unsigned __int16 *)v56 + 1);
        *((_DWORD *)v61 + 9) = v64 | 3;
        *((_DWORD *)v61 + 5) = v65;
        sub_10024065C(&__dst, v56[1], (_BYTE *)v56[2] - (_BYTE *)v56[1]);
        *((_DWORD *)v61 + 9) |= 4u;
        int v66 = (std::string *)v61[3];
        if (v66 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        {
          int v66 = (std::string *)operator new(0x18uLL);
          v66->__r_.__value_.__r.__words[0] = 0LL;
          v66->__r_.__value_.__l.__size_ = 0LL;
          v66->__r_.__value_.__l.__cap_ = 0LL;
          v61[3] = v66;
        }

        std::string::operator=(v66, &__dst);
      }

      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
        sub_1003A049C();
      }
      uint64_t v67 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v79);
      goto LABEL_104;
    }

void sub_10023621C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, int a28, __int16 a29, char a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, void *__p, uint64_t a42, int a43, __int16 a44, char a45, char a46)
{
}

uint64_t sub_100236320(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A062C();
  }
  sub_100105C94(v41);
  BOOL v4 = sub_1002341EC((uint64_t)v41, 3, 0x11u, *(void *)(a1 + 120));
  v4[63] |= 0x80000u;
  int v5 = (int *)*((void *)v4 + 20);
  if (!v5)
  {
    int v5 = (int *)operator new(0x88uLL);
    sub_10007530C((uint64_t)v5);
    *((void *)v4 + 20) = v5;
  }

  int v6 = v5[33];
  *((void *)v5 + 2) = *(void *)a2;
  v5[6] = *(unsigned __int16 *)(a2 + 8);
  v5[7] = *(unsigned __int8 *)(a2 + 10);
  v5[33] = v6 | 0xF;
  int v7 = (_DWORD *)*((void *)v5 + 4);
  if (!v7)
  {
    int v7 = operator new(0x28uLL);
    sub_1000752E8((uint64_t)v7);
    *((void *)v5 + 4) = v7;
  }

  int v8 = *(unsigned __int16 *)(a2 + 12);
  v7[8] |= 2u;
  v7[6] = v8;
  int v9 = *(unsigned __int16 *)(a2 + 14);
  int v10 = v5[33];
  v5[33] = v10 | 0x10;
  v5[18] = v9;
  v5[19] = *(_DWORD *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  v5[33] = v10 | 0x230;
  *((void *)v5 + 5) = v11;
  int v12 = (__int16 *)(a2 + 32);
  unsigned int v13 = (__int16 *)(a2 + 64);
  do
  {
    int v14 = v5[15];
    uint64_t v15 = v5[14];
    if ((int)v15 >= v14)
    {
      if (v14 == v5[16])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 12),  v14 + 1);
        int v14 = v5[15];
      }

      v5[15] = v14 + 1;
      int v17 = sub_1000A60DC();
      uint64_t v18 = *((void *)v5 + 6);
      uint64_t v19 = v5[14];
      v5[14] = v19 + 1;
      *(void *)(v18 + 8 * v19) = v17;
    }

    else
    {
      uint64_t v16 = *((void *)v5 + 6);
      v5[14] = v15 + 1;
      int v17 = *(_DWORD **)(v16 + 8 * v15);
    }

    int v20 = v17[7];
    v17[4] = *v12;
    int v21 = v12[1];
    v17[7] = v20 | 3;
    void v17[5] = v21;
    v12 += 2;
  }

  while (v12 != v13);
  simd_float3 v22 = (__int16 *)(a2 + 96);
  do
  {
    int v23 = v5[23];
    uint64_t v24 = v5[22];
    if ((int)v24 >= v23)
    {
      if (v23 == v5[24])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 20),  v23 + 1);
        int v23 = v5[23];
      }

      v5[23] = v23 + 1;
      int v26 = sub_1000A60DC();
      uint64_t v27 = *((void *)v5 + 10);
      uint64_t v28 = v5[22];
      v5[22] = v28 + 1;
      *(void *)(v27 + 8 * v2std::ostream::~ostream(v2, v3 + 8) = v26;
    }

    else
    {
      uint64_t v25 = *((void *)v5 + 10);
      v5[22] = v24 + 1;
      int v26 = *(_DWORD **)(v25 + 8 * v24);
    }

    int v29 = v26[7];
    v26[4] = *v13;
    int v30 = v13[1];
    void v26[7] = v29 | 3;
    void v26[5] = v30;
    v13 += 2;
  }

  while (v13 != v22);
  do
  {
    int v31 = v5[29];
    uint64_t v32 = v5[28];
    if ((int)v32 >= v31)
    {
      if (v31 == v5[30])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 26),  v31 + 1);
        int v31 = v5[29];
      }

      v5[29] = v31 + 1;
      int v34 = sub_1000A60DC();
      uint64_t v35 = *((void *)v5 + 13);
      uint64_t v36 = v5[28];
      v5[28] = v36 + 1;
      *(void *)(v35 + 8 * v36) = v34;
    }

    else
    {
      uint64_t v33 = *((void *)v5 + 13);
      v5[28] = v32 + 1;
      int v34 = *(_DWORD **)(v33 + 8 * v32);
    }

    int v37 = v34[7];
    v34[4] = *v22;
    int v38 = v22[1];
    v34[7] = v37 | 3;
    void v34[5] = v38;
    v22 += 2;
  }

  while (v22 != (__int16 *)(a2 + 128));
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A0600();
  }
  uint64_t v39 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v41);
  sub_10010686C(v41);
  return v39;
}

void sub_100236644( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100236688(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A0684();
  }
  sub_100105C94(v23);
  BOOL v4 = sub_1002341EC((uint64_t)v23, 3, 0x12u, *(void *)(a1 + 120));
  v4[63] |= 0x100000u;
  int v5 = (int *)*((void *)v4 + 21);
  if (!v5)
  {
    int v5 = (int *)operator new(0x68uLL);
    sub_100075310((uint64_t)v5);
    *((void *)v4 + 21) = v5;
  }

  int v6 = v5[24];
  *((void *)v5 + 2) = *(void *)a2;
  v5[6] = *(unsigned __int16 *)(a2 + 8);
  v5[7] = *(unsigned __int8 *)(a2 + 10);
  v5[24] = v6 | 0xF;
  int v7 = (_DWORD *)*((void *)v5 + 4);
  if (!v7)
  {
    int v7 = operator new(0x28uLL);
    sub_1000752E8((uint64_t)v7);
    *((void *)v5 + 4) = v7;
  }

  int v8 = *(unsigned __int16 *)(a2 + 12);
  v7[8] |= 2u;
  v7[6] = v8;
  int v9 = v5[24];
  v5[10] = *(unsigned __int16 *)(a2 + 14);
  v5[11] = *(unsigned __int8 *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  v5[24] = v9 | 0x70;
  *((void *)v5 + 6) = v10;
  v5[22] = *(_DWORD *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  v5[24] = v9 | 0x2F0;
  *((void *)v5 + 7) = v11;
  int v12 = (__int16 *)(a2 + 48);
  do
  {
    int v13 = v5[19];
    uint64_t v14 = v5[18];
    if ((int)v14 >= v13)
    {
      if (v13 == v5[20])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 16),  v13 + 1);
        int v13 = v5[19];
      }

      v5[19] = v13 + 1;
      uint64_t v16 = sub_1000A60DC();
      uint64_t v17 = *((void *)v5 + 8);
      uint64_t v18 = v5[18];
      v5[18] = v18 + 1;
      *(void *)(v17 + 8 * v1std::ostream::~ostream(v2, v3 + 8) = v16;
    }

    else
    {
      uint64_t v15 = *((void *)v5 + 8);
      v5[18] = v14 + 1;
      uint64_t v16 = *(_DWORD **)(v15 + 8 * v14);
    }

    int v19 = v16[7];
    void v16[4] = *v12;
    int v20 = v12[1];
    v16[7] = v19 | 3;
    v16[5] = v20;
    v12 += 2;
  }

  while (v12 != (__int16 *)(a2 + 80));
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A0658();
  }
  uint64_t v21 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v23);
  sub_10010686C(v23);
  return v21;
}

void sub_100236894( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1002368D0(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A06DC();
  }
  sub_100105C94(v51);
  BOOL v4 = sub_1002341EC((uint64_t)v51, 3, 0x19u, *(void *)(a1 + 120));
  v4[63] |= 0x4000000u;
  int v5 = (int *)*((void *)v4 + 27);
  if (!v5)
  {
    int v5 = (int *)operator new(0x50uLL);
    sub_100075314((uint64_t)v5);
    *((void *)v4 + 27) = v5;
  }

  int v6 = v5[19];
  *((void *)v5 + 2) = *(void *)a2;
  v5[6] = *(unsigned __int16 *)(a2 + 8);
  v5[7] = *(unsigned __int8 *)(a2 + 10);
  v5[11] = *(unsigned __int16 *)(a2 + 14);
  v5[10] = *(unsigned __int8 *)(a2 + 11);
  v5[19] = v6 | 0x3F;
  int v7 = (_DWORD *)*((void *)v5 + 4);
  if (!v7)
  {
    int v7 = operator new(0x28uLL);
    sub_1000752E8((uint64_t)v7);
    *((void *)v5 + 4) = v7;
  }

  int v8 = *(unsigned __int16 *)(a2 + 12);
  v7[8] |= 2u;
  v7[6] = v8;
  int v9 = v5[15];
  uint64_t v10 = v5[14];
  if ((int)v10 >= v9)
  {
    if (v9 == v5[16])
    {
      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 12),  v9 + 1);
      int v9 = v5[15];
    }

    v5[15] = v9 + 1;
    int v12 = sub_1000A619C();
    uint64_t v13 = *((void *)v5 + 6);
    uint64_t v14 = v5[14];
    v5[14] = v14 + 1;
    *(void *)(v13 + 8 * v14) = v12;
  }

  else
  {
    uint64_t v11 = *((void *)v5 + 6);
    v5[14] = v10 + 1;
    int v12 = *(_DWORD **)(v11 + 8 * v10);
  }

  int v15 = sub_100138DA8(a2, 0);
  v12[15] |= 1u;
  void v12[4] = v15;
  int v16 = sub_100138DD0(a2, 0);
  v12[15] |= 2u;
  void v12[5] = v16;
  int v17 = sub_100138DF8(a2, 0);
  v12[15] |= 4u;
  v12[6] = v17;
  int v18 = sub_100138E20(a2, 0);
  v12[15] |= 8u;
  v12[7] = v18;
  uint64_t v19 = sub_100138E48(a2, 0);
  for (uint64_t i = 0LL; i != 32; i += 4LL)
  {
    int v21 = v12[11];
    uint64_t v22 = (int)v12[10];
    if ((int)v22 >= v21)
    {
      if (v21 == v12[12])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v12 + 8),  v21 + 1);
        int v21 = v12[11];
      }

      v12[11] = v21 + 1;
      uint64_t v24 = sub_1000A60DC();
      uint64_t v25 = *((void *)v12 + 4);
      uint64_t v26 = (int)v12[10];
      v12[10] = v26 + 1;
      *(void *)(v25 + 8 * v26) = v24;
    }

    else
    {
      uint64_t v23 = *((void *)v12 + 4);
      v12[10] = v22 + 1;
      uint64_t v24 = *(_DWORD **)(v23 + 8 * v22);
    }

    int v27 = v24[7];
    v24[4] = *(__int16 *)(v19 + i);
    int v28 = *(__int16 *)(v19 + i + 2);
    v24[7] = v27 | 3;
    v24[5] = v28;
  }

  int v29 = v5[15];
  uint64_t v30 = v5[14];
  if ((int)v30 >= v29)
  {
    if (v29 == v5[16])
    {
      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 12),  v29 + 1);
      int v29 = v5[15];
    }

    v5[15] = v29 + 1;
    uint64_t v32 = sub_1000A619C();
    uint64_t v33 = *((void *)v5 + 6);
    uint64_t v34 = v5[14];
    v5[14] = v34 + 1;
    *(void *)(v33 + 8 * v34) = v32;
  }

  else
  {
    uint64_t v31 = *((void *)v5 + 6);
    v5[14] = v30 + 1;
    uint64_t v32 = *(_DWORD **)(v31 + 8 * v30);
  }

  int v35 = sub_100138DA8(a2, 1);
  v32[15] |= 1u;
  v32[4] = v35;
  int v36 = sub_100138DD0(a2, 1);
  v32[15] |= 2u;
  v32[5] = v36;
  int v37 = sub_100138DF8(a2, 1);
  v32[15] |= 4u;
  v32[6] = v37;
  int v38 = sub_100138E20(a2, 1);
  v32[15] |= 8u;
  v32[7] = v38;
  uint64_t v39 = sub_100138E48(a2, 1);
  for (uint64_t j = 0LL; j != 32; j += 4LL)
  {
    int v41 = v32[11];
    uint64_t v42 = (int)v32[10];
    if ((int)v42 >= v41)
    {
      if (v41 == v32[12])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v32 + 8),  v41 + 1);
        int v41 = v32[11];
      }

      v32[11] = v41 + 1;
      uint64_t v44 = sub_1000A60DC();
      uint64_t v45 = *((void *)v32 + 4);
      uint64_t v46 = (int)v32[10];
      v32[10] = v46 + 1;
      *(void *)(v45 + 8 * v46) = v44;
    }

    else
    {
      uint64_t v43 = *((void *)v32 + 4);
      v32[10] = v42 + 1;
      uint64_t v44 = *(_DWORD **)(v43 + 8 * v42);
    }

    int v47 = v44[7];
    v44[4] = *(__int16 *)(v39 + j);
    int v48 = *(__int16 *)(v39 + j + 2);
    v44[7] = v47 | 3;
    v44[5] = v48;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A06B0();
  }
  uint64_t v49 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v51);
  sub_10010686C(v51);
  return v49;
}

void sub_100236D1C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100236D74(int *a1)
{
  int v2 = a1[15];
  uint64_t v3 = a1[14];
  if ((int)v3 >= v2)
  {
    if (v2 == a1[16])
    {
      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 12),  v2 + 1);
      int v2 = a1[15];
    }

    a1[15] = v2 + 1;
    BOOL result = sub_1000A619C();
    uint64_t v6 = *((void *)a1 + 6);
    uint64_t v7 = a1[14];
    a1[14] = v7 + 1;
    *(void *)(v6 + 8 * v7) = result;
  }

  else
  {
    uint64_t v4 = *((void *)a1 + 6);
    a1[14] = v3 + 1;
    return *(void **)(v4 + 8 * v3);
  }

  return result;
}

uint64_t sub_100236DF0(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A0760();
  }
  sub_100105C94(v16);
  uint64_t v4 = sub_1002341EC((uint64_t)v16, 3, 0x10u, *(void *)(a1 + 120));
  v4[63] |= 0x40000u;
  int v5 = (char *)*((void *)v4 + 19);
  if (!v5)
  {
    int v5 = (char *)operator new(0x138uLL);
    sub_100075308((uint64_t)v5);
    *((void *)v4 + 19) = v5;
  }

  *((_DWORD *)v5 + 75) |= 1u;
  uint64_t v6 = (_DWORD *)*((void *)v5 + 2);
  if (!v6)
  {
    uint64_t v6 = operator new(0x28uLL);
    sub_1000752E8((uint64_t)v6);
    *((void *)v5 + 2) = v6;
  }

  int v7 = *(unsigned __int16 *)(a2 + 16);
  v6[8] |= 2u;
  v6[6] = v7;
  if ((sub_100234510(&v15, *(unsigned __int8 *)(a2 + 18)) & 1) != 0)
  {
    __p.__r_.__value_.__s.__size_ = 8;
    __p.__r_.__value_.__r.__words[0] = *(void *)(a2 + 23);
    __p.__r_.__value_.__s.__data_[8] = 0;
    unsigned int v8 = v15;
    if ((sub_100075648(v15) & 1) == 0) {
      __assert_rtn( "set_session_type",  "CLPRoseCommunicationEvent.pb.h",  13549,  "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseSessionType_IsValid(value)");
    }
    int v9 = *((_DWORD *)v5 + 75);
    *((_DWORD *)v5 + 6) = v8;
    *((_DWORD *)v5 + 7) = *(unsigned __int16 *)(a2 + 20);
    *((_DWORD *)v5 + 30) = *(unsigned __int8 *)(a2 + 22);
    *((_DWORD *)v5 + 75) = v9 | 0x1E;
    uint64_t v10 = (std::string *)*((void *)v5 + 4);
    if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      uint64_t v10 = (std::string *)operator new(0x18uLL);
      v10->__r_.__value_.__r.__words[0] = 0LL;
      v10->__r_.__value_.__l.__size_ = 0LL;
      v10->__r_.__value_.__l.__cap_ = 0LL;
      *((void *)v5 + 4) = v10;
    }

    std::string::operator=(v10, &__p);
    *(_OWORD *)(v5 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(v5 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(v5 + sub_100012390(v1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(v5 + 8std::ostream::~ostream(v2, v3 + 8) = *(_OWORD *)(a2 + 88);
    *((_OWORD *)v5 + 14) = *(_OWORD *)(a2 + 104);
    *((_OWORD *)v5 + 15) = *(_OWORD *)(a2 + 120);
    *((_OWORD *)v5 + 16) = *(_OWORD *)(a2 + 136);
    *((_OWORD *)v5 + memset(&__p[7], 0, 17) = *(_OWORD *)(a2 + 152);
    *((void *)v5 + 14) = *(void *)(a2 + 168);
    *((_OWORD *)v5 + std::ostream::~ostream(v2, v3 + 8) = *(_OWORD *)(a2 + 176);
    *((_OWORD *)v5 + 9) = *(_OWORD *)(a2 + 192);
    *((_OWORD *)v5 + 10) = *(_OWORD *)(a2 + 208);
    *((_OWORD *)v5 + 11) = *(_OWORD *)(a2 + 224);
    *((_OWORD *)v5 + 12) = *(_OWORD *)(a2 + 240);
    *((void *)v5 + 26) = *(void *)(a2 + 256);
    *((void *)v5 + 27) = *(void *)a2;
    int v11 = *(unsigned __int16 *)(a2 + 8);
    *(int8x8_t *)(v5 + 300) = vorr_s8(*(int8x8_t *)(v5 + 300), (int8x8_t)0xFFFFFDFE0LL);
    *((_DWORD *)v5 + 31) = v11;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
      sub_1003A0708();
    }
    uint64_t v12 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v16);
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A0734();
    }
    uint64_t v12 = 0LL;
  }

  sub_10010686C(v16);
  return v12;
}

void sub_100237090( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
}

uint64_t sub_1002370E0(uint64_t a1, unsigned __int8 *a2)
{
  if (*((_DWORD *)a2 + 6)) {
    sub_1003A080C();
  }
  if (!a2[208]) {
    sub_1003A078C();
  }
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A07E0();
  }
  sub_100105C94(v43);
  uint64_t v4 = sub_1002341EC((uint64_t)v43, 3, 0x13u, *(void *)(a1 + 120));
  v4[63] |= 0x200000u;
  int v5 = (_DWORD *)*((void *)v4 + 22);
  if (!v5)
  {
    int v5 = operator new(0xF0uLL);
    sub_100075318((uint64_t)v5);
    *((void *)v4 + 22) = v5;
  }

  if (a2[40])
  {
    uint64_t v6 = *((void *)a2 + 4);
    int v7 = v5[58] | 1;
    v5[58] = v7;
    *((void *)v5 + 2) = v6;
  }

  else
  {
    int v7 = v5[58];
  }

  int v8 = *((unsigned __int16 *)a2 + 25);
  v5[58] = v7 | 2;
  v5[6] = v8;
  if ((sub_100234358(&v42, *((unsigned __int16 *)a2 + 24)) & 1) == 0)
  {
    uint64_t v37 = 0LL;
    goto LABEL_22;
  }

  unsigned int v9 = v42;
  if (!sub_10007560C(v42))
  {
    uint64_t v39 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseErrorCode_IsValid(value)";
    int v40 = 15224;
    int v41 = "set_error_code";
    goto LABEL_27;
  }

  int v10 = v5[58];
  v5[7] = v9;
  v5[10] = *((unsigned __int16 *)a2 + 29);
  *((void *)v5 + 4) = *((void *)a2 + 8);
  uint64_t v11 = *((void *)a2 + 9);
  int v12 = v10 | 0x3C;
  v5[58] = v12;
  *((void *)v5 + 6) = v11;
  if (a2[1])
  {
    unsigned int v13 = *a2 != 5;
    if (sub_10005DC68(v13))
    {
      int v12 = v5[58] | 0x40;
      v5[58] = v12;
      v5[11] = v13;
      goto LABEL_15;
    }

    uint64_t v39 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseRFChannel_IsValid(value)";
    int v40 = 15313;
    int v41 = "set_rf_channel";
LABEL_27:
    __assert_rtn(v41, "CLPRoseCommunicationEvent.pb.h", v40, v39);
  }

void sub_10023754C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

uint64_t sub_10023757C(uint64_t a1, unsigned __int8 *a2)
{
  if (*((_DWORD *)a2 + 6) != 1) {
    sub_1003A088C();
  }
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A0860();
  }
  sub_100105C94(v21);
  uint64_t v4 = sub_1002341EC((uint64_t)v21, 3, 0x14u, *(void *)(a1 + 120));
  v4[63] |= 0x400000u;
  int v5 = (_DWORD *)*((void *)v4 + 23);
  if (!v5)
  {
    int v5 = operator new(0x48uLL);
    sub_10007531C((uint64_t)v5);
    *((void *)v4 + 23) = v5;
  }

  if (a2[40])
  {
    uint64_t v6 = *((void *)a2 + 4);
    int v7 = v5[17] | 1;
    v5[17] = v7;
    *((void *)v5 + 2) = v6;
  }

  else
  {
    int v7 = v5[17];
  }

  int v8 = *((unsigned __int16 *)a2 + 25);
  v5[17] = v7 | 2;
  v5[6] = v8;
  if ((sub_100234358(&v20, *((unsigned __int16 *)a2 + 24)) & 1) == 0)
  {
    uint64_t v15 = 0LL;
    goto LABEL_20;
  }

  unsigned int v9 = v20;
  if (!sub_10007560C(v20))
  {
    int v17 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseErrorCode_IsValid(value)";
    int v18 = 16220;
    int v19 = "set_error_code";
    goto LABEL_24;
  }

  int v10 = v5[17];
  v5[7] = v9;
  v5[10] = *((unsigned __int16 *)a2 + 29);
  *((void *)v5 + 4) = *((void *)a2 + 8);
  uint64_t v11 = *((void *)a2 + 9);
  int v12 = v10 | 0x3C;
  v5[17] = v12;
  *((void *)v5 + 6) = v11;
  if (a2[1])
  {
    unsigned int v13 = *a2 != 5;
    if (sub_10005DC68(v13))
    {
      int v12 = v5[17] | 0x40;
      v5[17] = v12;
      v5[11] = v13;
      goto LABEL_14;
    }

    int v17 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseRFChannel_IsValid(value)";
    int v18 = 16309;
    int v19 = "set_rf_channel";
LABEL_24:
    __assert_rtn(v19, "CLPRoseCommunicationEvent.pb.h", v18, v17);
  }

void sub_100237778( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

uint64_t sub_1002377A4(uint64_t a1, uint64_t *a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A08E0();
  }
  sub_100105C94(v49);
  uint64_t v4 = sub_1002341EC((uint64_t)v49, 3, 0x1Cu, *(void *)(a1 + 120));
  v4[63] |= 0x20000000u;
  int v5 = (int *)*((void *)v4 + 30);
  if (!v5)
  {
    int v5 = (int *)operator new(0xA8uLL);
    sub_100075320((uint64_t)v5);
    *((void *)v4 + 30) = v5;
  }

  uint64_t v6 = *a2;
  int v7 = v5[40];
  int v8 = v7 | 1;
  v5[40] = v7 | 1;
  *((void *)v5 + 2) = v6;
  if (*((_BYTE *)a2 + 104))
  {
    uint64_t v9 = a2[12];
    int v8 = v7 | 3;
    v5[40] = v7 | 3;
    *((void *)v5 + 3) = v9;
  }

  int v10 = *((unsigned __int16 *)a2 + 4);
  v5[40] = v8 | 4;
  uint8_t v5[8] = v10;
  unsigned int v11 = v48;
  if ((sub_10007560C(v48) & 1) == 0) {
    __assert_rtn( "set_error_code",  "CLPRoseCommunicationEvent.pb.h",  16473,  "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseErrorCode_IsValid(value)");
  }
  int v12 = v5[40];
  v5[9] = v11;
  v5[40] = v12 | 0x18;
  unsigned int v13 = (_DWORD *)*((void *)v5 + 5);
  if (!v13)
  {
    unsigned int v13 = operator new(0x28uLL);
    sub_1000752E8((uint64_t)v13);
    *((void *)v5 + 5) = v13;
  }

  int v14 = *((unsigned __int16 *)a2 + 9);
  v13[8] |= 2u;
  void v13[6] = v14;
  if ((sub_100234510(&v47, *((unsigned __int8 *)a2 + 20)) & 1) == 0)
  {
LABEL_30:
    uint64_t v41 = 0LL;
    goto LABEL_31;
  }

  unsigned int v15 = v47;
  if ((sub_100075648(v47) & 1) == 0) {
    __assert_rtn( "set_session_type",  "CLPRoseCommunicationEvent.pb.h",  16534,  "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseSessionType_IsValid(value)");
  }
  int v16 = v5[40];
  v5[12] = v15;
  *((void *)v5 + 7) = a2[3];
  int v17 = *((unsigned __int16 *)a2 + 20);
  v5[40] = v16 | 0xE0;
  v5[13] = v17;
  __p.__r_.__value_.__s.__size_ = 8;
  __p.__r_.__value_.__r.__words[0] = a2[4];
  __p.__r_.__value_.__s.__data_[8] = 0;
  v5[40] = v16 | 0x1E0;
  int v18 = (std::string *)*((void *)v5 + 8);
  if (v18 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v18 = (std::string *)operator new(0x18uLL);
    v18->__r_.__value_.__r.__words[0] = 0LL;
    v18->__r_.__value_.__l.__size_ = 0LL;
    v18->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v5 + std::ostream::~ostream(v2, v3 + 8) = v18;
  }

  std::string::operator=(v18, &__p);
  int v19 = v5[40];
  v5[22] = *((unsigned __int16 *)a2 + 21);
  LOWORD(v20) = *((_WORD *)a2 + 22);
  double v21 = (double)v20 * 250.0;
  *((double *)v5 + 9) = v21;
  LOBYTE(v21) = *((_BYTE *)a2 + 46);
  double v22 = (double)*(unint64_t *)&v21 * 250.0;
  *((double *)v5 + 10) = v22;
  LOBYTE(v22) = *((_BYTE *)a2 + 47);
  v5[40] = v19 | 0x1E00;
  *((double *)v5 + 12) = (double)*(unint64_t *)&v22 * 250.0;
  unsigned int v23 = sub_100237C6C(*((unsigned __int8 *)a2 + 48));
  if (!sub_10005E4A4(v23))
  {
    uint64_t v43 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RosePreamble_IsValid(value)";
    int v44 = 16759;
    uint64_t v45 = "set_tx_preamble";
    goto LABEL_38;
  }

  v5[40] |= 0x2000u;
  v5[23] = v23;
  unsigned int v24 = sub_100237C6C(*((unsigned __int8 *)a2 + 49));
  if (!sub_10005E4A4(v24))
  {
    uint64_t v43 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RosePreamble_IsValid(value)";
    int v44 = 16782;
    uint64_t v45 = "set_rx_preamble";
    goto LABEL_38;
  }

  int v25 = v5[40];
  v5[26] = v24;
  int v26 = *((unsigned __int8 *)a2 + 50);
  v5[40] = v25 | 0xC000;
  v5[27] = v26;
  unsigned int v27 = *((unsigned __int8 *)a2 + 51);
  if ((sub_1000756A8(v27) & 1) == 0)
  {
    uint64_t v43 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RxStatus_IsValid(value)";
    int v44 = 16827;
    uint64_t v45 = "set_poll_rx_status";
LABEL_38:
    __assert_rtn(v45, "CLPRoseCommunicationEvent.pb.h", v44, v43);
  }

  int v28 = v5[40];
  v5[30] = v27;
  *((void *)v5 + 14) = a2[7];
  v5[31] = *((unsigned __int8 *)a2 + 64);
  int v29 = *((unsigned __int8 *)a2 + 65);
  v5[40] = v28 | 0xF0000;
  v5[38] = v29;
  int v30 = (unsigned __int8 *)a2[9];
  for (uint64_t i = (unsigned __int8 *)a2[10]; v30 != i; v30 += 16)
  {
    int v32 = v5[35];
    uint64_t v33 = v5[34];
    if ((int)v33 >= v32)
    {
      if (v32 == v5[36])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v5 + 32),  v32 + 1);
        int v32 = v5[35];
      }

      v5[35] = v32 + 1;
      int v35 = sub_1000A61DC();
      uint64_t v36 = *((void *)v5 + 16);
      uint64_t v37 = v5[34];
      v5[34] = v37 + 1;
      *(void *)(v36 + 8 * v37) = v35;
    }

    else
    {
      uint64_t v34 = *((void *)v5 + 16);
      v5[34] = v33 + 1;
      int v35 = *(_DWORD **)(v34 + 8 * v33);
    }

    unsigned int v38 = *v30;
    if ((sub_1000756A8(v38) & 1) == 0) {
      __assert_rtn( "set_rx_status",  "CLPRoseCommunicationEvent.pb.h",  16358,  "::CLP::LogEntry::Rose::RoseCommunicationEvent::RxStatus_IsValid(value)");
    }
    int v39 = v35[8];
    v35[6] = v38;
    uint64_t v40 = *((void *)v30 + 1);
    v35[8] = v39 | 3;
    *((void *)v35 + 2) = v40;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A08B4();
  }
  uint64_t v41 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v49);
LABEL_31:
  sub_10010686C(v49);
  return v41;
}

void sub_100237C0C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
}

uint64_t sub_100237C6C(int a1)
{
  uint64_t result = 0LL;
  switch(a1)
  {
    case 0:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
      sub_1003A090C();
    case 10:
      uint64_t result = 1LL;
      break;
    case 11:
      uint64_t result = 2LL;
      break;
    case 12:
      uint64_t result = 3LL;
      break;
    default:
      return result;
  }

  return result;
}

uint64_t sub_100237CBC(uint64_t a1, void *a2)
{
  if (sub_10023381C((uint64_t)v9, *(void *)(a1 + 120)))
  {
    v11 |= 2u;
    uint64_t v4 = v10;
    if (!v10)
    {
      uint64_t v4 = operator new(0x30uLL);
      sub_1000B4540();
      int v10 = v4;
    }

    v4[11] |= 4u;
    int v5 = (_DWORD *)*((void *)v4 + 4);
    if (!v5)
    {
      int v5 = operator new(0x30uLL);
      sub_1000A6524();
      *((void *)v4 + 4) = v5;
    }

    v5[11] |= 4u;
    uint64_t v6 = (void *)*((void *)v5 + 4);
    if (!v6)
    {
      uint64_t v6 = operator new(0x20uLL);
      sub_1000B6424(v6);
      *((void *)v5 + 4) = v6;
    }

    sub_100237E0C((uint64_t)v6, a2);
    uint64_t v7 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v9);
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A0088();
    }
    uint64_t v7 = 0LL;
  }

  sub_10010686C(v9);
  return v7;
}

void sub_100237DD4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

double sub_100237E0C(uint64_t a1, void *a2)
{
  *(_DWORD *)(a1 + 28) |= 1u;
  uint64_t v3 = *(_DWORD **)(a1 + 16);
  if (!v3)
  {
    uint64_t v3 = operator new(0x50uLL);
    sub_1000B642C((uint64_t)v3);
    *(void *)(a1 + 16) = v3;
  }

  int v5 = v3[19];
  uint64_t v6 = a2[1];
  *((void *)v3 + 2) = *a2;
  *((void *)v3 + 6) = v6;
  v3[19] = v5 | 0x19;
  uint64_t v7 = (_DWORD *)*((void *)v3 + 5);
  if (!v7)
  {
    uint64_t v7 = operator new(0x30uLL);
    sub_1000B6438((uint64_t)v7);
    *((void *)v3 + 5) = v7;
  }

  int v8 = (void *)a2[2];
  int v9 = v7[11];
  *((void *)v7 + 2) = *v8;
  *((void *)v7 + 3) = v8[1];
  uint64_t v10 = v8[2];
  v7[11] = v9 | 7;
  *((void *)v7 + 4) = v10;
  v3[19] |= 4u;
  int v11 = (_DWORD *)*((void *)v3 + 4);
  if (!v11)
  {
    int v11 = operator new(0x30uLL);
    sub_1000B6434((uint64_t)v11);
    *((void *)v3 + 4) = v11;
  }

  int v12 = (void *)a2[5];
  int v13 = v11[11];
  *((void *)v11 + 2) = *v12;
  *((void *)v11 + 3) = v12[1];
  uint64_t v14 = v12[2];
  v11[11] = v13 | 7;
  *((void *)v11 + 4) = v14;
  v3[19] |= 2u;
  unsigned int v15 = (_DWORD *)*((void *)v3 + 3);
  if (!v15)
  {
    unsigned int v15 = operator new(0x38uLL);
    sub_1000B6430((uint64_t)v15);
    *((void *)v3 + 3) = v15;
  }

  v15[13] |= 1u;
  int v16 = (_DWORD *)*((void *)v15 + 2);
  if (!v16)
  {
    int v16 = operator new(0x38uLL);
    sub_1000B6428((uint64_t)v16);
    *((void *)v15 + 2) = v16;
  }

  int v17 = (void *)a2[8];
  int v18 = v16[13];
  *((void *)v16 + 2) = *v17;
  *((void *)v16 + 3) = v17[1];
  *((void *)v16 + 4) = v17[2];
  uint64_t v19 = v17[3];
  v16[13] = v18 | 0xF;
  *((void *)v16 + 5) = v19;
  v3[19] |= 0x20u;
  unint64_t v20 = (_DWORD *)*((void *)v3 + 7);
  if (!v20)
  {
    unint64_t v20 = operator new(0x30uLL);
    sub_1000B643C((uint64_t)v20);
    *((void *)v3 + 7) = v20;
  }

  double v21 = (void *)a2[11];
  int v22 = v20[11];
  *((void *)v20 + 2) = *v21;
  *((void *)v20 + 3) = v21[1];
  uint64_t v23 = v21[2];
  v20[11] = v22 | 7;
  *((void *)v20 + 4) = v23;
  v3[19] |= 0x40u;
  unsigned int v24 = (_DWORD *)*((void *)v3 + 8);
  if (!v24)
  {
    unsigned int v24 = operator new(0x30uLL);
    sub_1000B6440((uint64_t)v24);
    *((void *)v3 + std::ostream::~ostream(v2, v3 + 8) = v24;
  }

  uint64_t v25 = a2[14];
  int v26 = v24[11];
  *((void *)v24 + 2) = *(void *)v25;
  *((void *)v24 + 3) = *(void *)(v25 + 8);
  double result = *(double *)(v25 + 16);
  v24[11] = v26 | 7;
  *((double *)v24 + 4) = result;
  return result;
}

void sub_10023802C(_Unwind_Exception *a1)
{
}

void sub_100238060()
{
}

uint64_t sub_100238068(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A0934(a3, v6);
  }
  sub_100105C94(v16);
  if (sub_10023381C((uint64_t)v16, *(void *)(a1 + 120)))
  {
    v18 |= 2u;
    uint64_t v7 = v17;
    if (!v17)
    {
      uint64_t v7 = operator new(0x30uLL);
      sub_1000B4540();
      int v17 = v7;
    }

    v7[11] |= 4u;
    int v8 = (_DWORD *)*((void *)v7 + 4);
    if (!v8)
    {
      int v8 = operator new(0x30uLL);
      sub_1000A6524();
      *((void *)v7 + 4) = v8;
    }

    v8[11] |= 2u;
    int v9 = (_DWORD *)*((void *)v8 + 3);
    if (!v9)
    {
      int v9 = operator new(0x20uLL);
      sub_10010A53C(v9);
      *((void *)v8 + 3) = v9;
    }

    v9[7] |= 1u;
    uint64_t v10 = (void *)*((void *)v9 + 2);
    if (!v10)
    {
      uint64_t v10 = operator new(0x28uLL);
      sub_10010A540(v10);
      *((void *)v9 + 2) = v10;
    }

    *((_DWORD *)v10 + 9) |= 1u;
    int v11 = (_DWORD *)v10[2];
    if (v11)
    {
      v9[7] |= 1u;
    }

    else
    {
      int v11 = operator new(0x40uLL);
      sub_10010A544((uint64_t)v11);
      _OWORD v10[2] = v11;
      uint64_t v10 = (void *)*((void *)v9 + 2);
      v9[7] |= 1u;
      if (!v10)
      {
        uint64_t v10 = operator new(0x28uLL);
        sub_10010A540(v10);
        *((void *)v9 + 2) = v10;
      }
    }

    *((_DWORD *)v10 + 9) |= 2u;
    int v13 = (void *)v10[3];
    if (!v13)
    {
      int v13 = operator new(0x48uLL);
      sub_10010A548((uint64_t)v13);
      void v10[3] = v13;
    }

    v11[15] |= 2u;
    uint64_t v14 = (void *)*((void *)v11 + 3);
    if (!v14)
    {
      uint64_t v14 = operator new(0x20uLL);
      sub_1000B6424(v14);
      *((void *)v11 + 3) = v14;
    }

    sub_100237E0C((uint64_t)v14, a2);
    sub_1002382F0((uint64_t)v13, (uint64_t)a3);
    uint64_t v12 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v16);
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A0088();
    }
    uint64_t v12 = 0LL;
  }

  sub_10010686C(v16);
  return v12;
}

void sub_100238294( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

double sub_1002382F0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 68) |= 4u;
  uint64_t v3 = *(char **)(a1 + 48);
  if (!v3)
  {
    uint64_t v3 = (char *)operator new(0x98uLL);
    sub_10010A564((uint64_t)v3);
    *(void *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = v3;
  }

  int v5 = *((_DWORD *)v3 + 37);
  *((void *)v3 + 2) = *(void *)a2;
  int v6 = v5 | 3;
  *((_DWORD *)v3 + 37) = v6;
  uint64_t v7 = *(void **)(a2 + 16);
  *((void *)v3 + 3) = *(void *)(a2 + 8);
  if (v7 != (void *)(a2 + 24))
  {
    do
    {
      int v8 = *((unsigned __int16 *)v7 + 13);
      int v9 = *((_DWORD *)v3 + 10);
      if (v9 == *((_DWORD *)v3 + 11))
      {
        sub_10005C1F0((uint64_t)(v3 + 32), v9 + 1);
        int v9 = *((_DWORD *)v3 + 10);
      }

      uint64_t v10 = *((void *)v3 + 4);
      *((_DWORD *)v3 + 10) = v9 + 1;
      *(_DWORD *)(v10 + 4LL * v9) = v8;
      int v11 = (void *)v7[1];
      if (v11)
      {
        do
        {
          uint64_t v12 = v11;
          int v11 = (void *)*v11;
        }

        while (v11);
      }

      else
      {
        do
        {
          uint64_t v12 = (void *)v7[2];
          BOOL v13 = *v12 == (void)v7;
          uint64_t v7 = v12;
        }

        while (!v13);
      }

      uint64_t v7 = v12;
    }

    while (v12 != (void *)(a2 + 24));
    int v6 = *((_DWORD *)v3 + 37);
  }

  uint64_t v14 = *(void *)(a2 + 48);
  *((void *)v3 + 6) = *(void *)(a2 + 40);
  uint64_t v15 = *(void *)(a2 + 72);
  *((void *)v3 + 10) = v14;
  *((void *)v3 + 11) = v15;
  *(int8x16_t *)(v3 + 56) = vextq_s8(*(int8x16_t *)(a2 + 56), *(int8x16_t *)(a2 + 56), 8uLL);
  uint64_t v16 = *(void *)(a2 + 88);
  *((void *)v3 + 9) = *(void *)(a2 + 80);
  uint64_t v17 = *(void *)(a2 + 112);
  uint64_t v18 = *(void *)(a2 + 120);
  *((void *)v3 + 12) = v16;
  *((void *)v3 + 13) = v17;
  uint64_t v19 = *(void *)(a2 + 104);
  *((void *)v3 + 14) = *(void *)(a2 + 96);
  *((void *)v3 + 15) = v18;
  double result = *(double *)(a2 + 128);
  *((_DWORD *)v3 + 37) = v6 | 0x7FF8;
  *((void *)v3 + 16) = v19;
  *((double *)v3 + memset(&__p[7], 0, 17) = result;
  return result;
}

void sub_100238424(_Unwind_Exception *a1)
{
}

uint64_t sub_100238438(uint64_t a1, uint64_t *a2, uint64_t a3, int **a4, uint64_t a5)
{
  if (sub_10023381C((uint64_t)v24, *(void *)(a1 + 120)))
  {
    v26 |= 2u;
    uint64_t v10 = v25;
    if (!v25)
    {
      uint64_t v10 = operator new(0x30uLL);
      sub_1000B4540();
      uint64_t v25 = v10;
    }

    v10[11] |= 4u;
    int v11 = (_DWORD *)*((void *)v10 + 4);
    if (!v11)
    {
      int v11 = operator new(0x30uLL);
      sub_1000A6524();
      *((void *)v10 + 4) = v11;
    }

    v11[11] |= 2u;
    uint64_t v12 = (_DWORD *)*((void *)v11 + 3);
    if (!v12)
    {
      uint64_t v12 = operator new(0x20uLL);
      sub_10010A53C(v12);
      *((void *)v11 + 3) = v12;
    }

    v12[7] |= 1u;
    BOOL v13 = (void *)*((void *)v12 + 2);
    if (!v13)
    {
      BOOL v13 = operator new(0x28uLL);
      sub_10010A540(v13);
      *((void *)v12 + 2) = v13;
    }

    *((_DWORD *)v13 + 9) |= 1u;
    uint64_t v14 = (int *)v13[2];
    if (v14)
    {
      v12[7] |= 1u;
    }

    else
    {
      uint64_t v14 = (int *)operator new(0x40uLL);
      sub_10010A544((uint64_t)v14);
      v13[2] = v14;
      BOOL v13 = (void *)*((void *)v12 + 2);
      v12[7] |= 1u;
      if (!v13)
      {
        BOOL v13 = operator new(0x28uLL);
        sub_10010A540(v13);
        *((void *)v12 + 2) = v13;
      }
    }

    *((_DWORD *)v13 + 9) |= 2u;
    uint64_t v16 = (_DWORD *)v13[3];
    if (!v16)
    {
      uint64_t v16 = operator new(0x48uLL);
      sub_10010A548((uint64_t)v16);
      v13[3] = v16;
    }

    sub_100238704(v14, a2);
    sub_1002382F0((uint64_t)v16, a3);
    sub_100238A14((uint64_t)v16, a4);
    v16[17] |= 8u;
    uint64_t v17 = (_DWORD *)*((void *)v16 + 7);
    if (!v17)
    {
      uint64_t v17 = operator new(0x30uLL);
      sub_10010A568((uint64_t)v17);
      *((void *)v16 + 7) = v17;
    }

    char v18 = *(_BYTE *)(a5 + 8);
    int v19 = v17[10];
    int v20 = v19 | 1;
    v17[10] = v19 | 1;
    *((_BYTE *)v17 + 32) = v18;
    if (*(_BYTE *)(a5 + 24))
    {
      uint64_t v21 = *(void *)(a5 + 16);
      int v20 = v19 | 3;
      v17[10] = v19 | 3;
      *((void *)v17 + 2) = v21;
    }

    if (*(_BYTE *)(a5 + 40))
    {
      uint64_t v22 = *(void *)(a5 + 32);
      v17[10] = v20 | 4;
      *((void *)v17 + 3) = v22;
    }

    uint64_t v15 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v24);
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A0088();
    }
    uint64_t v15 = 0LL;
  }

  sub_10010686C(v24);
  return v15;
}

void sub_1002386A0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100238704(int *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    int v31 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8);
    do
    {
      int v5 = a1[11];
      uint64_t v6 = a1[10];
      if ((int)v6 >= v5)
      {
        if (v5 == a1[12])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v31, v5 + 1);
          int v5 = a1[11];
        }

        a1[11] = v5 + 1;
        int v8 = sub_100118BAC();
        uint64_t v9 = *((void *)a1 + 4);
        uint64_t v10 = a1[10];
        a1[10] = v10 + 1;
        *(void *)(v9 + 8 * sub_1000316D8(v11, v10) = v8;
      }

      else
      {
        uint64_t v7 = *((void *)a1 + 4);
        a1[10] = v6 + 1;
        int v8 = *(_DWORD **)(v7 + 8 * v6);
      }

      int v11 = v8[35];
      *((void *)v8 + 2) = *(void *)(v2 + 40);
      *((void *)v8 + 3) = *(void *)v2;
      v8[20] = *(unsigned __int16 *)(v2 + 8);
      int v12 = *(unsigned __int8 *)(v2 + 10);
      v8[35] = v11 | 0x303;
      v8[21] = v12;
      sub_10024065C(&__str, *(void **)(v2 + 16), *(void *)(v2 + 24) - *(void *)(v2 + 16));
      v8[35] |= 0x400u;
      BOOL v13 = (std::string *)*((void *)v8 + 11);
      if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        BOOL v13 = (std::string *)operator new(0x18uLL);
        v13->__r_.__value_.__r.__words[0] = 0LL;
        v13->__r_.__value_.__l.__size_ = 0LL;
        v13->__r_.__value_.__l.__cap_ = 0LL;
        *((void *)v8 + 11) = v13;
      }

      std::string::operator=(v13, &__str);
      double v14 = sub_100026A20(*(double *)(v2 + 64));
      v8[35] |= 0x10u;
      *((double *)v8 + 6) = v14;
      double v15 = sub_100026A20(*(double *)(v2 + 80));
      v8[35] |= 0x20u;
      *((double *)v8 + 7) = v15;
      double v16 = sub_100026A20(*(double *)(v2 + 72));
      v8[35] |= 4u;
      *((double *)v8 + 4) = v16;
      double v17 = sub_100026A20(*(double *)(v2 + 88));
      v8[35] |= 8u;
      *((double *)v8 + 5) = v17;
      double v18 = sub_100026A20(*(double *)(v2 + 96));
      int v19 = v8[35];
      *((double *)v8 + 12) = v18;
      v8[35] = v19 | 0x8C0;
      *((_OWORD *)v8 + 4) = *(_OWORD *)(v2 + 48);
      if (*(_BYTE *)(v2 + 112))
      {
        uint64_t v20 = *(void *)(v2 + 104);
        v8[35] = v19 | 0x18C0;
        *((void *)v8 + 13) = v20;
      }

      uint64_t v22 = *(uint64_t **)(v2 + 120);
      uint64_t v21 = *(uint64_t **)(v2 + 128);
      if (v22 != v21)
      {
        int v23 = v8[30];
        do
        {
          uint64_t v24 = *v22;
          if (v23 == v8[31])
          {
            sub_10005C268((uint64_t)(v8 + 28), v23 + 1);
            int v23 = v8[30];
          }

          uint64_t v25 = *((void *)v8 + 14);
          v8[30] = v23 + 1;
          *(void *)(v25 + 8LL * v23) = v24;
          ++v22;
          ++v23;
        }

        while (v22 != v21);
      }

      if (sub_10005DC68(*(unsigned __int8 *)(v2 + 144)))
      {
        unsigned int v26 = *(unsigned __int8 *)(v2 + 144) != 5;
        if (!sub_10005DC68(v26))
        {
          int v28 = 4721;
          int v29 = "::CLP::LogEntry::Rose::RoseCommunicationEvent::RoseRFChannel_IsValid(value)";
          int v30 = "set_rf_channel";
          goto LABEL_29;
        }

        v8[35] |= 0x4000u;
        v8[32] = v26;
      }

      if (sub_10005DC68(*(unsigned __int8 *)(v2 + 145)))
      {
        unsigned int v27 = *(unsigned __int8 *)(v2 + 145);
        if (!sub_10005DC68(v27))
        {
          int v28 = 4744;
          int v30 = "set_channel_usage_type";
          int v29 = "::CLP::LogEntry::Rose::RangeAndAoaSolution_SensorFusion_ChannelUsageType_IsValid(value)";
LABEL_29:
          __assert_rtn(v30, "CLPRangeAndAoaSolution.pb.h", v28, v29);
        }

        v8[35] |= 0x8000u;
        v8[33] = v27;
      }

      v2 += 152LL;
    }

    while (v2 != v3);
  }

void sub_1002389F0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100238A14(uint64_t result, int **a2)
{
  uint64_t v2 = *a2;
  unsigned int v48 = a2[1];
  if (*a2 != v48)
  {
    uint64_t v3 = result;
    uint64_t v46 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 24);
    uint64_t v47 = result;
    do
    {
      int v4 = *(_DWORD *)(v3 + 36);
      uint64_t v5 = *(int *)(v3 + 32);
      if ((int)v5 >= v4)
      {
        if (v4 == *(_DWORD *)(v3 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v46, v4 + 1);
          int v4 = *(_DWORD *)(v3 + 36);
        }

        *(_DWORD *)(v3 + 36) = v4 + 1;
        uint64_t v7 = sub_100118BEC();
        uint64_t v8 = *(void *)(v3 + 24);
        uint64_t v9 = *(int *)(v3 + 32);
        *(_DWORD *)(v3 + 32) = v9 + 1;
        *(void *)(v8 + 8 * v9) = v7;
      }

      else
      {
        uint64_t v6 = *(void *)(v3 + 24);
        *(_DWORD *)(v3 + 32) = v5 + 1;
        uint64_t v7 = *(_DWORD **)(v6 + 8 * v5);
      }

      int v10 = *v2;
      v7[23] |= 1u;
      v7[6] = v10;
      unsigned int v11 = *((unsigned __int8 *)v2 + 432);
      if (!sub_10005E4A4(v11)) {
        sub_10038C79C();
      }
      uint64_t v12 = *((void *)v2 + 56);
      *((void *)v7 + 4) = *((void *)v2 + 55);
      int v13 = v7[23];
      v7[7] = v11;
      *((void *)v7 + 6) = v12;
      uint64_t v14 = *((void *)v2 + 57);
      v7[23] = v13 | 0x3C;
      *((void *)v7 + 5) = v14;
      LODWORD(v14) = v2[116];
      v7[23] = v13 | 0x7C;
      int v15 = v2[117];
      v7[14] = v14;
      v7[15] = v15;
      v7[23] = v13 | 0x1FC;
      double v16 = (_DWORD *)*((void *)v7 + 8);
      if (!v16)
      {
        double v16 = operator new(0x38uLL);
        sub_10010A54C((uint64_t)v16);
        *((void *)v7 + std::ostream::~ostream(v2, v3 + 8) = v16;
      }

      v16[12] |= 1u;
      double v17 = (double *)*((void *)v16 + 2);
      if (!v17)
      {
        double v17 = (double *)operator new(0x30uLL);
        sub_10010A550((uint64_t)v17);
        *((void *)v16 + 2) = v17;
      }

      double v18 = sub_1002405E4((uint64_t)(v2 + 2), 0);
      *((_DWORD *)v17 + 11) |= 1u;
      void v17[2] = v18;
      double v19 = sub_1002405E4((uint64_t)(v2 + 2), 1u);
      *((_DWORD *)v17 + 11) |= 2u;
      v17[3] = v19;
      double v20 = sub_1002405E4((uint64_t)(v2 + 2), 2u);
      *((_DWORD *)v17 + 11) |= 4u;
      v17[4] = v20;
      v16[12] |= 2u;
      uint64_t v21 = (double *)*((void *)v16 + 3);
      if (!v21)
      {
        uint64_t v21 = (double *)operator new(0x30uLL);
        sub_10010A554((uint64_t)v21);
        *((void *)v16 + 3) = v21;
      }

      double v22 = sub_1002405E4((uint64_t)(v2 + 2), 3u);
      *((_DWORD *)v21 + 11) |= 1u;
      v21[2] = v22;
      double v23 = sub_1002405E4((uint64_t)(v2 + 2), 4u);
      *((_DWORD *)v21 + 11) |= 2u;
      void v21[3] = v23;
      double v24 = sub_1002405E4((uint64_t)(v2 + 2), 5u);
      *((_DWORD *)v21 + 11) |= 4u;
      v21[4] = v24;
      v16[12] |= 4u;
      uint64_t v25 = (int *)*((void *)v16 + 4);
      if (!v25)
      {
        uint64_t v25 = (int *)operator new(0x38uLL);
        sub_10010A558((uint64_t)v25);
        *((void *)v16 + 4) = v25;
      }

      int v26 = 0;
      v25[13] |= 3u;
      *((void *)v25 + 2) = 0x600000006LL;
      do
      {
        int v27 = v25[9];
        uint64_t v28 = v25[8];
        if ((int)v28 >= v27)
        {
          if (v27 == v25[10])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v25 + 6),  v27 + 1);
            int v27 = v25[9];
          }

          v25[9] = v27 + 1;
          int v30 = sub_100118C2C();
          uint64_t v31 = *((void *)v25 + 3);
          uint64_t v32 = v25[8];
          v25[8] = v32 + 1;
          *(void *)(v31 + 8 * v32) = v30;
        }

        else
        {
          uint64_t v29 = *((void *)v25 + 3);
          v25[8] = v28 + 1;
          int v30 = *(void **)(v29 + 8 * v28);
        }

        for (int i = 0; i != 6; ++i)
        {
          double v34 = sub_10024061C((uint64_t)(v2 + 24), v26, i);
          int v35 = *((_DWORD *)v30 + 6);
          if (v35 == *((_DWORD *)v30 + 7))
          {
            sub_10005C268((uint64_t)(v30 + 2), v35 + 1);
            int v35 = *((_DWORD *)v30 + 6);
          }

          uint64_t v36 = v30[2];
          *((_DWORD *)v30 + 6) = v35 + 1;
          *(double *)(v36 + 8LL * v35) = v34;
        }

        ++v26;
      }

      while (v26 != 6);
      int v37 = v2[106] - 1;
      else {
        int v38 = dword_100429AA4[v37];
      }
      double result = sub_10010A5E8(v38);
      if ((result & 1) == 0) {
        sub_10038C774();
      }
      v16[12] |= 8u;
      v16[10] = v38;
      if (*((_BYTE *)v2 + 576))
      {
        v7[23] |= 0x200u;
        int v39 = (_DWORD *)*((void *)v7 + 9);
        if (!v39)
        {
          int v39 = operator new(0x30uLL);
          double result = sub_10010A55C((uint64_t)v39);
          *((void *)v7 + 9) = v39;
          if (!*((_BYTE *)v2 + 576)) {
            goto LABEL_42;
          }
        }

        int v40 = v39[11];
        uint64_t v42 = *((void *)v2 + 61);
        uint64_t v41 = *((void *)v2 + 62);
        *((void *)v39 + 2) = *((void *)v2 + 60);
        *((void *)v39 + 3) = v41;
        v39[11] = v40 | 7;
        *((void *)v39 + 4) = v42;
        v7[23] |= 0x400u;
        uint64_t v43 = (_DWORD *)*((void *)v7 + 10);
        if (!v43)
        {
          uint64_t v43 = operator new(0x60uLL);
          double result = sub_10010A560((uint64_t)v43);
          *((void *)v7 + 10) = v43;
          if (!*((_BYTE *)v2 + 576)) {
LABEL_42:
          }
            sub_100006080();
        }

        int v44 = v43[23];
        *((void *)v43 + 2) = *((void *)v2 + 63);
        *((void *)v43 + 3) = *((void *)v2 + 64);
        *((void *)v43 + 4) = *((void *)v2 + 65);
        *((void *)v43 + 5) = *((void *)v2 + 66);
        *((void *)v43 + 6) = *((void *)v2 + 67);
        *((void *)v43 + 7) = *((void *)v2 + 68);
        *((void *)v43 + std::ostream::~ostream(v2, v3 + 8) = *((void *)v2 + 69);
        *((void *)v43 + 9) = *((void *)v2 + 70);
        uint64_t v45 = *((void *)v2 + 71);
        v43[23] = v44 | 0x1FF;
        *((void *)v43 + 10) = v45;
      }

      v2 += 146;
      uint64_t v3 = v47;
    }

    while (v2 != v48);
  }

  return result;
}

void sub_100238E98(_Unwind_Exception *a1)
{
}

uint64_t sub_100238ED0(uint64_t a1, uint64_t *a2, int **a3)
{
  if (sub_10023381C((uint64_t)v14, *(void *)(a1 + 120)))
  {
    v16 |= 2u;
    uint64_t v6 = v15;
    if (!v15)
    {
      uint64_t v6 = operator new(0x30uLL);
      sub_1000B4540();
      int v15 = v6;
    }

    v6[11] |= 4u;
    uint64_t v7 = (_DWORD *)*((void *)v6 + 4);
    if (!v7)
    {
      uint64_t v7 = operator new(0x30uLL);
      sub_1000A6524();
      *((void *)v6 + 4) = v7;
    }

    v7[11] |= 2u;
    uint64_t v8 = (_DWORD *)*((void *)v7 + 3);
    if (!v8)
    {
      uint64_t v8 = operator new(0x20uLL);
      sub_10010A53C(v8);
      *((void *)v7 + 3) = v8;
    }

    v8[7] |= 1u;
    uint64_t v9 = (void *)*((void *)v8 + 2);
    if (!v9)
    {
      uint64_t v9 = operator new(0x28uLL);
      sub_10010A540(v9);
      *((void *)v8 + 2) = v9;
    }

    *((_DWORD *)v9 + 9) |= 1u;
    int v10 = (int *)v9[2];
    if (v10)
    {
      v8[7] |= 1u;
    }

    else
    {
      int v10 = (int *)operator new(0x40uLL);
      sub_10010A544((uint64_t)v10);
      _DWORD v9[2] = v10;
      uint64_t v9 = (void *)*((void *)v8 + 2);
      v8[7] |= 1u;
      if (!v9)
      {
        uint64_t v9 = operator new(0x28uLL);
        sub_10010A540(v9);
        *((void *)v8 + 2) = v9;
      }
    }

    *((_DWORD *)v9 + 9) |= 2u;
    uint64_t v12 = (void *)v9[3];
    if (!v12)
    {
      uint64_t v12 = operator new(0x48uLL);
      sub_10010A548((uint64_t)v12);
      void v9[3] = v12;
    }

    sub_100238704(v10, a2);
    sub_100238A14((uint64_t)v12, a3);
    uint64_t v11 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v14);
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A0088();
    }
    uint64_t v11 = 0LL;
  }

  sub_10010686C(v14);
  return v11;
}

void sub_1002390B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100239108(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A09D8();
  }
  sub_100105C94(v9);
  if (sub_10023381C((uint64_t)v9, *(void *)(a1 + 120)))
  {
    v11 |= 2u;
    int v4 = v10;
    if (!v10)
    {
      int v4 = operator new(0x30uLL);
      sub_1000B4540();
      int v10 = v4;
    }

    v4[11] |= 2u;
    uint64_t v5 = (_DWORD *)*((void *)v4 + 3);
    if (!v5)
    {
      uint64_t v5 = operator new(0x190uLL);
      sub_10005D930((uint64_t)v5);
      *((void *)v4 + 3) = v5;
    }

    unsigned int v6 = sub_100239288(a2);
    if (!sub_10005DC30(v6)) {
      __assert_rtn("set_device_type", "CLPNearbyd.pb.h", 5953, "::CLP::LogEntry::Nearbyd::DeviceType_IsValid(value)");
    }
    v5[98] |= 0x20u;
    v5[96] = v6;
    uint64_t v7 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v9);
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A0088();
    }
    uint64_t v7 = 0LL;
  }

  sub_10010686C(v9);
  return v7;
}

void sub_100239254( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100239288(uint64_t a1)
{
  uint64_t result = 0LL;
  if ((int)a1 <= 99)
  {
    switch((int)a1)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
        uint64_t result = a1;
        break;
      case 7:
        uint64_t result = 12LL;
        break;
      case 8:
        uint64_t result = 13LL;
        break;
      case 9:
        uint64_t result = 14LL;
        break;
      case 10:
        uint64_t result = 15LL;
        break;
      case 11:
        uint64_t result = 20LL;
        break;
      case 12:
        uint64_t result = 21LL;
        break;
      case 13:
        uint64_t result = 22LL;
        break;
      case 14:
        uint64_t result = 23LL;
        break;
      case 15:
        uint64_t result = 30LL;
        break;
      case 16:
        uint64_t result = 31LL;
        break;
      case 17:
        uint64_t result = 32LL;
        break;
      case 18:
        uint64_t result = 33LL;
        break;
      case 19:
        uint64_t result = 39LL;
        break;
      case 20:
        uint64_t result = 40LL;
        break;
      case 21:
        uint64_t result = 41LL;
        break;
      case 22:
        uint64_t result = 42LL;
        break;
      case 23:
        uint64_t result = 47LL;
        break;
      default:
        return result;
    }
  }

  else if ((int)a1 > 199)
  {
    if ((_DWORD)a1 == 999) {
      int v3 = 101;
    }
    else {
      int v3 = 0;
    }
    if ((_DWORD)a1 == 997) {
      unsigned int v4 = 100;
    }
    else {
      unsigned int v4 = v3;
    }
    if ((_DWORD)a1 == 201) {
      int v5 = 29;
    }
    else {
      int v5 = 0;
    }
    if ((_DWORD)a1 == 200) {
      unsigned int v6 = 11;
    }
    else {
      unsigned int v6 = v5;
    }
    else {
      return v4;
    }
  }

  else
  {
    switch((int)a1)
    {
      case 'd':
        uint64_t result = 7LL;
        break;
      case 'e':
        uint64_t result = 8LL;
        break;
      case 'f':
        uint64_t result = 9LL;
        break;
      case 'g':
        uint64_t result = 10LL;
        break;
      case 'h':
        uint64_t result = 16LL;
        break;
      case 'i':
        uint64_t result = 17LL;
        break;
      case 'j':
        uint64_t result = 18LL;
        break;
      case 'k':
        uint64_t result = 19LL;
        break;
      case 'l':
        uint64_t result = 24LL;
        break;
      case 'm':
        uint64_t result = 25LL;
        break;
      case 'n':
        uint64_t result = 26LL;
        break;
      case 'o':
        uint64_t result = 27LL;
        break;
      case 'p':
        uint64_t result = 28LL;
        break;
      case 'q':
        uint64_t result = 34LL;
        break;
      case 'r':
        uint64_t result = 35LL;
        break;
      case 's':
        uint64_t result = 36LL;
        break;
      case 't':
        uint64_t result = 37LL;
        break;
      case 'u':
        uint64_t result = 38LL;
        break;
      case 'v':
        uint64_t result = 43LL;
        break;
      case 'w':
        uint64_t result = 44LL;
        break;
      case 'x':
        uint64_t result = 45LL;
        break;
      case 'y':
        uint64_t result = 46LL;
        break;
      default:
        return result;
    }
  }

  return result;
}

uint64_t sub_100239464(uint64_t a1, uint64_t a2)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A0A04();
  }
  sub_100105C94(v10);
  if (sub_10023381C((uint64_t)v10, *(void *)(a1 + 120)))
  {
    v12 |= 2u;
    unsigned int v4 = v11;
    if (!v11)
    {
      unsigned int v4 = operator new(0x30uLL);
      sub_1000B4540();
      int v11 = v4;
    }

    v4[11] |= 2u;
    int v5 = (_DWORD *)*((void *)v4 + 3);
    if (!v5)
    {
      int v5 = operator new(0x190uLL);
      sub_10005D930((uint64_t)v5);
      *((void *)v4 + 3) = v5;
    }

    v5[98] |= 0x40u;
    unsigned int v6 = (char *)*((void *)v5 + 7);
    if (!v6)
    {
      unsigned int v6 = (char *)operator new(0x30uLL);
      sub_10005D938((uint64_t)v6);
      *((void *)v5 + 7) = v6;
    }

    int v7 = *((_DWORD *)v6 + 10);
    v6[24] = *(_BYTE *)a2;
    *((_DWORD *)v6 + 10) = v7 | 0x7FA;
    *(void *)(v6 + 26) = *(void *)(a2 + 4);
    uint64_t v8 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v10);
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A0088();
    }
    uint64_t v8 = 0LL;
  }

  sub_10010686C(v10);
  return v8;
}

void sub_1002395B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1002395E8(uint64_t a1, const std::string *a2, uint64_t *a3, double a4)
{
  if (!v27) {
    return 0LL;
  }
  sub_1001067C8(v23, v26);
  v25 |= 2u;
  uint64_t v8 = v24;
  if (!v24)
  {
    uint64_t v8 = operator new(0x30uLL);
    sub_1000B4540();
    double v24 = v8;
  }

  v8[11] |= 2u;
  uint64_t v9 = (_DWORD *)*((void *)v8 + 3);
  if (!v9)
  {
    uint64_t v9 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v9);
    *((void *)v8 + 3) = v9;
  }

  v9[98] |= 0x10000u;
  int v10 = (int *)*((void *)v9 + 17);
  if (!v10)
  {
    int v10 = (int *)operator new(0x40uLL);
    sub_1000CDDD4((uint64_t)v10);
    *((void *)v9 + memset(&__p[7], 0, 17) = v10;
  }

  int v11 = v10[15];
  *((double *)v10 + 2) = a4;
  v10[15] = v11 | 3;
  int v12 = (std::string *)*((void *)v10 + 3);
  if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v12 = (std::string *)operator new(0x18uLL);
    v12->__r_.__value_.__r.__words[0] = 0LL;
    v12->__r_.__value_.__l.__size_ = 0LL;
    v12->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v10 + 3) = v12;
  }

  std::string::operator=(v12, a2);
  uint64_t v13 = *a3;
  uint64_t v14 = a3[1];
  if (*a3 != v14)
  {
    do
    {
      int v15 = v10[11];
      uint64_t v16 = v10[10];
      if ((int)v16 >= v15)
      {
        if (v15 == v10[12])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v10 + 8),  v15 + 1);
          int v15 = v10[11];
        }

        v10[11] = v15 + 1;
        double v18 = sub_1001057A4();
        uint64_t v19 = *((void *)v10 + 4);
        uint64_t v20 = v10[10];
        v10[10] = v20 + 1;
        *(void *)(v19 + 8 * v20) = v18;
      }

      else
      {
        uint64_t v17 = *((void *)v10 + 4);
        v10[10] = v16 + 1;
        double v18 = *(void **)(v17 + 8 * v16);
      }

      sub_100239890((uint64_t)v18, v13);
      v13 += 160LL;
    }

    while (v13 != v14);
  }

  uint64_t v21 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v23);
  sub_10010686C(v23);
  if (v27) {
    sub_10010686C(v26);
  }
  return v21;
}

void sub_1002397C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100239814@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  if (sub_10023381C((uint64_t)v6, a1))
  {
    sub_1001067C8(a2, v6);
    char v4 = 1;
  }

  else
  {
    char v4 = 0;
    *a2 = 0;
  }

  a2[64] = v4;
  return sub_10010686C(v6);
}

void sub_10023987C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

double sub_100239890(uint64_t a1, uint64_t a2)
{
  char v4 = *(const std::string::value_type **)a2;
  std::string::size_type v5 = *(void *)(a2 + 8) - *(void *)a2;
  *(_DWORD *)(a1 + 84) |= 1u;
  unsigned int v6 = *(std::string **)(a1 + 16);
  if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    unsigned int v6 = (std::string *)operator new(0x18uLL);
    v6->__r_.__value_.__l.__size_ = 0LL;
    v6->__r_.__value_.__l.__cap_ = 0LL;
    v6->__r_.__value_.__r.__words[0] = 0LL;
    *(void *)(a1 + 16) = v6;
  }

  std::string::assign(v6, v4, v5);
  uint64_t v7 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 84) |= 2u;
  *(void *)(a1 + 24) = v7;
  if (!sub_10005E4A4(0)) {
    sub_10038C47C();
  }
  *(_DWORD *)(a1 + 84) |= 4u;
  *(_DWORD *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = 0;
  else {
    unsigned int v8 = *(_DWORD *)(a2 + 32);
  }
  if (!sub_10005E4A4(v8)) {
    sub_10038C47C();
  }
  int v10 = *(_DWORD *)(a1 + 84);
  int v11 = v10 | 4;
  *(_DWORD *)(a1 + 84) = v10 | 4;
  *(_DWORD *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = v8;
  if (*(_BYTE *)(a2 + 40))
  {
    double result = *(float *)(a2 + 36);
    int v11 = v10 | 0xC;
    *(_DWORD *)(a1 + 84) = v10 | 0xC;
    *(double *)(a1 + 32) = result;
  }

  if (*(_BYTE *)(a2 + 80))
  {
    *(_DWORD *)(a1 + 84) = v11 | 0x10;
    int v12 = *(_DWORD **)(a1 + 40);
    if (!v12)
    {
      int v12 = operator new(0x38uLL);
      sub_1000CDD18((uint64_t)v12);
      *(void *)(a1 + 40) = v12;
    }

    int v13 = v12[12];
    *((_OWORD *)v12 + 1) = *(_OWORD *)(a2 + 56);
    double result = *(double *)(a2 + 72);
    v12[12] = v13 | 0xE;
    *((double *)v12 + 4) = result;
    if (*(_DWORD *)(a2 + 48) == 1)
    {
      if (!sub_10005DC68(1u)) {
        sub_10038C454();
      }
      v12[12] |= 1u;
      v12[10] = 1;
    }
  }

  if (*(_BYTE *)(a2 + 96))
  {
    double result = *(double *)(a2 + 88);
    *(_DWORD *)(a1 + 84) |= 0x20u;
    *(double *)(a1 + 56) = result;
  }

  if (*(_BYTE *)(a2 + 105))
  {
    int v14 = *(unsigned __int8 *)(a2 + 104);
    *(_DWORD *)(a1 + 84) |= 0x40u;
    *(_DWORD *)(a1 + 52) = v14;
  }

  if (*(_BYTE *)(a2 + 120))
  {
    double result = *(double *)(a2 + 112);
    *(_DWORD *)(a1 + 84) |= 0x80u;
    *(double *)(a1 + 64) = result;
  }

  if (*(_BYTE *)(a2 + 152))
  {
    double result = *(double *)(a2 + 144);
    *(_DWORD *)(a1 + 84) |= 0x100u;
    *(double *)(a1 + sub_100012390(v1 + 72) = result;
  }

  return result;
}

void sub_100239A68(_Unwind_Exception *a1)
{
}

uint64_t sub_100239A7C(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, float a6, double a7)
{
  if (!v24) {
    return 0LL;
  }
  sub_1001067C8(v20, v23);
  v22 |= 2u;
  int v14 = v21;
  if (!v21)
  {
    int v14 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v21 = v14;
  }

  v14[11] |= 2u;
  int v15 = (_DWORD *)*((void *)v14 + 3);
  if (!v15)
  {
    int v15 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v15);
    *((void *)v14 + 3) = v15;
  }

  v15[98] |= 0x1000u;
  uint64_t v16 = (_DWORD *)*((void *)v15 + 13);
  if (!v16)
  {
    uint64_t v16 = operator new(0x40uLL);
    sub_10005D944((uint64_t)v16);
    *((void *)v15 + 13) = v16;
  }

  int v17 = v16[14];
  *((void *)v16 + 2) = a2;
  *((float *)v16 + 6) = a6;
  *((double *)v16 + 4) = a7;
  v16[7] = a3;
  void v16[12] = a4;
  v16[14] = v17 | 0x3F;
  *((void *)v16 + 5) = a5;
  uint64_t v18 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v20);
  sub_10010686C(v20);
  if (v24) {
    sub_10010686C(v23);
  }
  return v18;
}

void sub_100239BC8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100239C18(uint64_t a1, const std::string *a2, uint64_t a3)
{
  if (!v21) {
    return 0LL;
  }
  sub_1001067C8(v17, v20);
  v19 |= 2u;
  unsigned int v6 = v18;
  if (!v18)
  {
    unsigned int v6 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v18 = v6;
  }

  v6[11] |= 2u;
  uint64_t v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    uint64_t v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[98] |= 0x20000u;
  unsigned int v8 = (_DWORD *)*((void *)v7 + 18);
  if (!v8)
  {
    unsigned int v8 = operator new(0x50uLL);
    sub_1000CDD44(v8);
    *((void *)v7 + 1std::ostream::~ostream(v2, v3 + 8) = v8;
  }

  sub_10015B6F8(&__p, *(char **)(a3 + 48), *(char **)(a3 + 56), *(void *)(a3 + 56) - *(void *)(a3 + 48));
  int v9 = v8[19];
  *((_OWORD *)v8 + 1) = *(_OWORD *)a3;
  v8[19] = v9 | 7;
  int v10 = (std::string *)*((void *)v8 + 4);
  if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v10 = (std::string *)operator new(0x18uLL);
    v10->__r_.__value_.__r.__words[0] = 0LL;
    v10->__r_.__value_.__l.__size_ = 0LL;
    v10->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v8 + 4) = v10;
  }

  std::string::operator=(v10, &__p);
  v8[19] |= 0x40u;
  int v11 = (std::string *)*((void *)v8 + 7);
  if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v11 = (std::string *)operator new(0x18uLL);
    v11->__r_.__value_.__r.__words[0] = 0LL;
    v11->__r_.__value_.__l.__size_ = 0LL;
    v11->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v8 + 7) = v11;
  }

  std::string::operator=(v11, (const std::string *)(a3 + 24));
  int v12 = v8[19];
  v8[11] = *(_DWORD *)(a3 + 16);
  *((void *)v8 + 6) = *(void *)(a3 + 72);
  v8[19] = v12 | 0xB0;
  int v13 = (std::string *)*((void *)v8 + 8);
  if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v13 = (std::string *)operator new(0x18uLL);
    v13->__r_.__value_.__r.__words[0] = 0LL;
    v13->__r_.__value_.__l.__size_ = 0LL;
    v13->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v8 + std::ostream::~ostream(v2, v3 + 8) = v13;
  }

  std::string::operator=(v13, a2);
  uint64_t v14 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v17);
  sub_10010686C(v17);
  if (v21) {
    sub_10010686C(v20);
  }
  return v14;
}

void sub_100239E00( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
  if (a31) {
    sub_10010686C(&a23);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100239E68(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  if (!v20) {
    return 0LL;
  }
  sub_1001067C8(v16, v19);
  v18 |= 2u;
  unsigned int v8 = v17;
  if (!v17)
  {
    unsigned int v8 = operator new(0x30uLL);
    sub_1000B4540();
    int v17 = v8;
  }

  v8[11] |= 2u;
  int v9 = (_DWORD *)*((void *)v8 + 3);
  if (!v9)
  {
    int v9 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v9);
    *((void *)v8 + 3) = v9;
  }

  v9[98] |= 0x2000u;
  int v10 = (_DWORD *)*((void *)v9 + 14);
  if (!v10)
  {
    int v10 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v10);
    *((void *)v9 + 14) = v10;
  }

  v10[37] |= 1u;
  int v11 = (double *)*((void *)v10 + 2);
  if (!v11)
  {
    int v11 = (double *)operator new(0x30uLL);
    sub_1000CDD1C((uint64_t)v11);
    *((void *)v10 + 2) = v11;
  }

  int v12 = *((_DWORD *)v11 + 11);
  void v11[2] = a4;
  *((void *)v11 + 4) = a2;
  *((_DWORD *)v11 + 11) = v12 | 7;
  int v13 = (void *)*((void *)v11 + 3);
  if (!v13)
  {
    int v13 = operator new(0x58uLL);
    sub_1000CDD14((uint64_t)v13);
    *((void *)v11 + 3) = v13;
  }

  sub_100239890((uint64_t)v13, a3);
  uint64_t v14 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v16);
  sub_10010686C(v16);
  if (v20) {
    sub_10010686C(v19);
  }
  return v14;
}

void sub_100239FE0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023A04C( uint64_t a1, const std::string *a2, std::string **a3, uint64_t a4, const std::string *a5, uint64_t a6)
{
  if (!v71) {
    return 0LL;
  }
  sub_1001067C8(v67, v70);
  v69 |= 2u;
  int v12 = v68;
  if (!v68)
  {
    int v12 = operator new(0x30uLL);
    sub_1000B4540();
    unsigned int v68 = v12;
  }

  v12[11] |= 2u;
  int v13 = (_DWORD *)*((void *)v12 + 3);
  if (!v13)
  {
    int v13 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v13);
    *((void *)v12 + 3) = v13;
  }

  v13[98] |= 0x2000u;
  uint64_t v14 = (_DWORD *)*((void *)v13 + 14);
  if (!v14)
  {
    uint64_t v14 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v14);
    *((void *)v13 + 14) = v14;
  }

  v14[37] |= 2u;
  int v15 = (int *)*((void *)v14 + 3);
  if (!v15)
  {
    int v15 = (int *)operator new(0x80uLL);
    sub_1000CDD64((uint64_t)v15);
    *((void *)v14 + 3) = v15;
  }

  v15[30] |= 1u;
  uint64_t v16 = (std::string *)*((void *)v15 + 2);
  if (v16 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    uint64_t v16 = (std::string *)operator new(0x18uLL);
    v16->__r_.__value_.__r.__words[0] = 0LL;
    v16->__r_.__value_.__l.__size_ = 0LL;
    v16->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v15 + 2) = v16;
  }

  std::string::operator=(v16, a2);
  v15[30] |= 0x80u;
  int v17 = (std::string *)*((void *)v15 + 11);
  if (v17 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v17 = (std::string *)operator new(0x18uLL);
    v17->__r_.__value_.__r.__words[0] = 0LL;
    v17->__r_.__value_.__l.__size_ = 0LL;
    v17->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v15 + 11) = v17;
  }

  std::string::operator=(v17, a5);
  uint64_t v66 = a1;
  uint64_t v18 = a6;
  char v20 = *a3;
  int v19 = a3[1];
  if (*a3 != v19)
  {
    do
    {
      int v21 = v15[9];
      uint64_t v22 = v15[8];
      if ((int)v22 >= v21)
      {
        if (v21 == v15[10])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v15 + 6),  v21 + 1);
          int v21 = v15[9];
        }

        v15[9] = v21 + 1;
        char v24 = sub_1001056A4();
        uint64_t v25 = *((void *)v15 + 3);
        uint64_t v26 = v15[8];
        v15[8] = v26 + 1;
        *(void *)(v25 + 8 * v26) = v24;
      }

      else
      {
        uint64_t v23 = *((void *)v15 + 3);
        v15[8] = v22 + 1;
        char v24 = *(void **)(v23 + 8 * v22);
      }

      sub_10023A7C8((uint64_t)v24, v20);
      v20 += 2;
    }

    while (v20 != v19);
  }

  v15[30] |= 0x20u;
  char v27 = (int *)*((void *)v15 + 9);
  if (!v27)
  {
    char v27 = (int *)operator new(0x30uLL);
    sub_1000CDD4C((uint64_t)v27);
    *((void *)v15 + 9) = v27;
  }

  uint64_t v28 = *(void **)a4;
  if (*(void *)a4 != a4 + 8)
  {
    while (1)
    {
      int v29 = v27[7];
      uint64_t v30 = v27[6];
      if ((int)v30 >= v29)
      {
        if (v29 == v27[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v27 + 4),  v29 + 1);
          int v29 = v27[7];
        }

        void v27[7] = v29 + 1;
        uint64_t v32 = sub_100105664();
        uint64_t v33 = *((void *)v27 + 2);
        uint64_t v34 = v27[6];
        v27[6] = v34 + 1;
        *(void *)(v33 + 8 * v34) = v32;
      }

      else
      {
        uint64_t v31 = *((void *)v27 + 2);
        v27[6] = v30 + 1;
        uint64_t v32 = *(_DWORD **)(v31 + 8 * v30);
      }

      switch(*((_DWORD *)v28 + 7))
      {
        case 1:
          if (!sub_100075684(1u)) {
            goto LABEL_78;
          }
          int v35 = 1;
          goto LABEL_40;
        case 2:
          if (!sub_100075684(2u)) {
            goto LABEL_78;
          }
          int v35 = 2;
          goto LABEL_40;
        case 3:
          if (!sub_100075684(3u)) {
            goto LABEL_78;
          }
          int v35 = 3;
          goto LABEL_40;
        case 4:
          if (!sub_100075684(4u)) {
            goto LABEL_78;
          }
          int v35 = 4;
          goto LABEL_40;
        case 5:
          if (!sub_100075684(0))
          {
LABEL_78:
            int v63 = 13050;
            int v64 = "set_technology";
            int v65 = "::CLP::LogEntry::Nearbyd::NI::RangingTechnology_IsValid(value)";
            goto LABEL_80;
          }

          int v35 = 0;
LABEL_40:
          v32[7] |= 1u;
          v32[4] = v35;
LABEL_41:
          int v36 = *((_DWORD *)v28 + 8);
          switch(v36)
          {
            case 3:
              if (!sub_10005E4A4(3u))
              {
LABEL_79:
                int v63 = 13073;
                int v64 = "set_filter";
                int v65 = "::CLP::LogEntry::Nearbyd::NI::FilterType_IsValid(value)";
LABEL_80:
                __assert_rtn(v64, "NearbyInteractionTypes.pb.h", v63, v65);
              }

              goto LABEL_49;
            case 2:
              BOOL v37 = sub_10005E4A4(2u);
LABEL_46:
              if (!v37) {
                goto LABEL_79;
              }
LABEL_49:
              v32[7] |= 2u;
              v32[5] = v36;
              break;
            case 1:
              BOOL v37 = sub_10005E4A4(1u);
              goto LABEL_46;
          }

          int v38 = (void *)v28[1];
          if (v38)
          {
            do
            {
              int v39 = v38;
              int v38 = (void *)*v38;
            }

            while (v38);
          }

          else
          {
            do
            {
              int v39 = (void *)v28[2];
              BOOL v40 = *v39 == (void)v28;
              uint64_t v28 = v39;
            }

            while (!v40);
          }

          uint64_t v28 = v39;
          if (v39 == (void *)(a4 + 8)) {
            goto LABEL_56;
          }
          break;
        default:
          goto LABEL_41;
      }
    }
  }

void sub_10023A6FC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

BOOL sub_10023A7C8(uint64_t a1, std::string *__str)
{
  *(_DWORD *)(a1 + 56) |= 1u;
  char v4 = *(std::string **)(a1 + 16);
  if (v4 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    char v4 = (std::string *)operator new(0x18uLL);
    v4->__r_.__value_.__l.__size_ = 0LL;
    v4->__r_.__value_.__l.__cap_ = 0LL;
    v4->__r_.__value_.__r.__words[0] = 0LL;
    *(void *)(a1 + 16) = v4;
  }

  std::string::operator=(v4, __str);
  double v5 = *(float *)&__str[1].__r_.__value_.__l.__data_;
  int v6 = *(_DWORD *)(a1 + 56);
  *(_DWORD *)(a1 + 56) = v6 | 2;
  *(double *)(a1 + 24) = v5;
  unsigned int v7 = __str[1].__r_.__value_.__r.__words[1];
  uint64_t v8 = SHIDWORD(__str[1].__r_.__value_.__r.__words[0]);
  *(_DWORD *)(a1 + 56) = v6 | 0x22;
  *(void *)(a1 + 40) = v8;
  if (v7 - 1 >= 3) {
    unsigned int v9 = 0;
  }
  else {
    unsigned int v9 = v7;
  }
  if (!sub_10005E4A4(v9)) {
    sub_10038C42C();
  }
  int v10 = *(_DWORD *)(a1 + 56);
  *(_DWORD *)(a1 + 32) = v9;
  *(_WORD *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = __str[1].__r_.__value_.__r.__words[2];
  *(_DWORD *)(a1 + 56) = v10 | 0x4C;
  int v11 = HIDWORD(__str[1].__r_.__value_.__r.__words[1]) - 2;
  else {
    unsigned int v12 = dword_100429AC8[v11];
  }
  BOOL result = sub_1000CE0B0(v12);
  if (!result) {
    sub_10038C404();
  }
  *(_DWORD *)(a1 + 56) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v12;
  return result;
}

uint64_t sub_10023A8D8(uint64_t a1, const std::string *a2)
{
  if (!v15) {
    return 0LL;
  }
  sub_1001067C8(v11, v14);
  v13 |= 2u;
  char v4 = v12;
  if (!v12)
  {
    char v4 = operator new(0x30uLL);
    sub_1000B4540();
    unsigned int v12 = v4;
  }

  v4[11] |= 2u;
  double v5 = (_DWORD *)*((void *)v4 + 3);
  if (!v5)
  {
    double v5 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v5);
    *((void *)v4 + 3) = v5;
  }

  v5[98] |= 0x2000u;
  int v6 = (_DWORD *)*((void *)v5 + 14);
  if (!v6)
  {
    int v6 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v6);
    *((void *)v5 + 14) = v6;
  }

  v6[37] |= 0x10u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 6);
  if (!v7)
  {
    unsigned int v7 = operator new(0x20uLL);
    sub_1000CDD68(v7);
    *((void *)v6 + 6) = v7;
  }

  v7[7] |= 1u;
  uint64_t v8 = (std::string *)*((void *)v7 + 2);
  if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    uint64_t v8 = (std::string *)operator new(0x18uLL);
    v8->__r_.__value_.__r.__words[0] = 0LL;
    v8->__r_.__value_.__l.__size_ = 0LL;
    v8->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v7 + 2) = v8;
  }

  std::string::operator=(v8, a2);
  uint64_t v9 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v11);
  sub_10010686C(v11);
  if (v15) {
    sub_10010686C(v14);
  }
  return v9;
}

void sub_10023AA38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023AA8C(uint64_t a1, uint64_t a2, int a3, std::string **a4, unsigned int a5, double a6)
{
  if (!v32) {
    return 0LL;
  }
  sub_1001067C8(v28, v31);
  v30 |= 2u;
  unsigned int v12 = v29;
  if (!v29)
  {
    unsigned int v12 = operator new(0x30uLL);
    sub_1000B4540();
    int v29 = v12;
  }

  v12[11] |= 2u;
  int v13 = (_DWORD *)*((void *)v12 + 3);
  if (!v13)
  {
    int v13 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v13);
    *((void *)v12 + 3) = v13;
  }

  v13[98] |= 0x2000u;
  uint64_t v14 = (_DWORD *)*((void *)v13 + 14);
  if (!v14)
  {
    uint64_t v14 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v14);
    *((void *)v13 + 14) = v14;
  }

  v14[37] |= 0x1000u;
  char v15 = (double *)*((void *)v14 + 14);
  if (!v15)
  {
    char v15 = (double *)operator new(0x50uLL);
    sub_1000CDD6C((uint64_t)v15);
    *((void *)v14 + 14) = v15;
  }

  int v16 = *((_DWORD *)v15 + 18);
  v15[2] = a6;
  *((_DWORD *)v15 + 1std::ostream::~ostream(v2, v3 + 8) = v16 | 7;
  *((void *)v15 + 3) = a2;
  *((void *)v15 + 4) = a3;
  int v17 = *a4;
  uint64_t v18 = a4[1];
  if (*a4 != v18)
  {
    do
    {
      int v19 = *((_DWORD *)v15 + 13);
      uint64_t v20 = *((int *)v15 + 12);
      if ((int)v20 >= v19)
      {
        if (v19 == *((_DWORD *)v15 + 14))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v15 + 5),  v19 + 1);
          int v19 = *((_DWORD *)v15 + 13);
        }

        *((_DWORD *)v15 + 13) = v19 + 1;
        uint64_t v22 = sub_1001056A4();
        uint64_t v23 = *((void *)v15 + 5);
        uint64_t v24 = *((int *)v15 + 12);
        *((_DWORD *)v15 + 12) = v24 + 1;
        *(void *)(v23 + 8 * v24) = v22;
      }

      else
      {
        uint64_t v21 = *((void *)v15 + 5);
        *((_DWORD *)v15 + 12) = v20 + 1;
        uint64_t v22 = *(void **)(v21 + 8 * v20);
      }

      sub_10023A7C8((uint64_t)v22, v17);
      v17 += 2;
    }

    while (v17 != v18);
  }

  if (a5 >= 5) {
    unsigned int v25 = 1;
  }
  else {
    unsigned int v25 = dword_100429AE0[a5];
  }
  if (!sub_100075684(v25)) {
    __assert_rtn( "set_intent_predictor_type",  "NearbyInteractionTypes.pb.h",  14566,  "::CLP::LogEntry::Nearbyd::NI::IntentPredictorType_IsValid(value)");
  }
  *((_DWORD *)v15 + 18) |= 0x10u;
  *((_DWORD *)v15 + 16) = v25;
  uint64_t v26 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v28);
  sub_10010686C(v28);
  if (v32) {
    sub_10010686C(v31);
  }
  return v26;
}

void sub_10023ACD0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023AD34(uint64_t a1, uint64_t a2)
{
  if (!v14) {
    return 0LL;
  }
  sub_1001067C8(v10, v13);
  v12 |= 2u;
  char v4 = v11;
  if (!v11)
  {
    char v4 = operator new(0x30uLL);
    sub_1000B4540();
    int v11 = v4;
  }

  v4[11] |= 2u;
  double v5 = (_DWORD *)*((void *)v4 + 3);
  if (!v5)
  {
    double v5 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v5);
    *((void *)v4 + 3) = v5;
  }

  v5[98] |= 0x2000u;
  int v6 = (_DWORD *)*((void *)v5 + 14);
  if (!v6)
  {
    int v6 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v6);
    *((void *)v5 + 14) = v6;
  }

  v6[37] |= 0x2000u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 15);
  if (!v7)
  {
    unsigned int v7 = operator new(0x20uLL);
    sub_1000CDD70(v7);
    *((void *)v6 + 15) = v7;
  }

  v7[7] |= 1u;
  *((void *)v7 + 2) = a2;
  uint64_t v8 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v10);
  sub_10010686C(v10);
  if (v14) {
    sub_10010686C(v13);
  }
  return v8;
}

void sub_10023AE68( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023AEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6)
{
  if (!v25) {
    return 0LL;
  }
  sub_1001067C8(v21, v24);
  v23 |= 2u;
  int v12 = v22;
  if (!v22)
  {
    int v12 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v22 = v12;
  }

  v12[11] |= 2u;
  int v13 = (_DWORD *)*((void *)v12 + 3);
  if (!v13)
  {
    int v13 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v13);
    *((void *)v12 + 3) = v13;
  }

  v13[98] |= 0x2000u;
  char v14 = (_DWORD *)*((void *)v13 + 14);
  if (!v14)
  {
    char v14 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v14);
    *((void *)v13 + 14) = v14;
  }

  v14[37] |= 0x200u;
  char v15 = (double *)*((void *)v14 + 11);
  if (!v15)
  {
    char v15 = (double *)operator new(0x40uLL);
    sub_1000CDD2C((uint64_t)v15);
    *((void *)v14 + 11) = v15;
  }

  int v16 = *((_DWORD *)v15 + 14);
  v15[2] = a6;
  *((_DWORD *)v15 + 14) = v16 | 9;
  int v17 = (void *)*((void *)v15 + 5);
  if (!v17)
  {
    int v17 = operator new(0x58uLL);
    sub_1000CDD14((uint64_t)v17);
    *((void *)v15 + 5) = v17;
  }

  sub_100239890((uint64_t)v17, a4);
  int v18 = *((_DWORD *)v15 + 14);
  *((void *)v15 + 3) = a2;
  *((void *)v15 + 4) = a3;
  *((_DWORD *)v15 + 14) = v18 | 0x16;
  *((_BYTE *)v15 + 4std::ostream::~ostream(v2, v3 + 8) = a5;
  uint64_t v19 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v21);
  sub_10010686C(v21);
  if (v25) {
    sub_10010686C(v24);
  }
  return v19;
}

void sub_10023B05C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023B0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  if (!v22) {
    return 0LL;
  }
  sub_1001067C8(v18, v21);
  v20 |= 2u;
  int v10 = v19;
  if (!v19)
  {
    int v10 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v19 = v10;
  }

  v10[11] |= 2u;
  int v11 = (_DWORD *)*((void *)v10 + 3);
  if (!v11)
  {
    int v11 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v11);
    *((void *)v10 + 3) = v11;
  }

  v11[98] |= 0x2000u;
  int v12 = (_DWORD *)*((void *)v11 + 14);
  if (!v12)
  {
    int v12 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v12);
    *((void *)v11 + 14) = v12;
  }

  v12[37] |= 0x80u;
  int v13 = (double *)*((void *)v12 + 9);
  if (!v13)
  {
    int v13 = (double *)operator new(0x38uLL);
    sub_1000CDD28((uint64_t)v13);
    *((void *)v12 + 9) = v13;
  }

  int v14 = *((_DWORD *)v13 + 13);
  v13[2] = a5;
  *((_DWORD *)v13 + 13) = v14 | 9;
  char v15 = (void *)*((void *)v13 + 5);
  if (!v15)
  {
    char v15 = operator new(0x58uLL);
    sub_1000CDD14((uint64_t)v15);
    *((void *)v13 + 5) = v15;
  }

  sub_100239890((uint64_t)v15, a4);
  *((_DWORD *)v13 + 13) |= 6u;
  *((void *)v13 + 3) = a2;
  *((void *)v13 + 4) = a3;
  uint64_t v16 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v18);
  sub_10010686C(v18);
  if (v22) {
    sub_10010686C(v21);
  }
  return v16;
}

void sub_10023B254( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023B2B8(uint64_t a1, const std::string *a2, uint64_t a3, double a4)
{
  if (!v21) {
    return 0LL;
  }
  sub_1001067C8(v17, v20);
  v19 |= 2u;
  uint64_t v8 = v18;
  if (!v18)
  {
    uint64_t v8 = operator new(0x30uLL);
    sub_1000B4540();
    int v18 = v8;
  }

  v8[11] |= 2u;
  uint64_t v9 = (_DWORD *)*((void *)v8 + 3);
  if (!v9)
  {
    uint64_t v9 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v9);
    *((void *)v8 + 3) = v9;
  }

  v9[98] |= 0x2000u;
  int v10 = (_DWORD *)*((void *)v9 + 14);
  if (!v10)
  {
    int v10 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v10);
    *((void *)v9 + 14) = v10;
  }

  v10[37] |= 0x8000u;
  int v11 = (_DWORD *)*((void *)v10 + 17);
  if (!v11)
  {
    int v11 = operator new(0x30uLL);
    sub_1000CDD40(v11);
    *((void *)v10 + memset(&__p[7], 0, 17) = v11;
  }

  v11[11] |= 1u;
  int v12 = (std::string *)*((void *)v11 + 2);
  if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v12 = (std::string *)operator new(0x18uLL);
    v12->__r_.__value_.__r.__words[0] = 0LL;
    v12->__r_.__value_.__l.__size_ = 0LL;
    v12->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v11 + 2) = v12;
  }

  std::string::operator=(v12, a2);
  int v13 = v11[11];
  *((double *)v11 + 3) = a4;
  v11[11] = v13 | 6;
  int v14 = (void *)*((void *)v11 + 4);
  if (!v14)
  {
    int v14 = operator new(0x58uLL);
    sub_1000CDD14((uint64_t)v14);
    *((void *)v11 + 4) = v14;
  }

  sub_100239890((uint64_t)v14, a3);
  uint64_t v15 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v17);
  sub_10010686C(v17);
  if (v21) {
    sub_10010686C(v20);
  }
  return v15;
}

void sub_10023B468( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023B4D4( uint64_t a1, const std::string *a2, uint64_t a3, std::string *a4, std::string *a5, uint64_t a6, char a7, double a8)
{
  if (!v32) {
    return 0LL;
  }
  sub_1001067C8(v28, v31);
  v30 |= 2u;
  uint64_t v16 = v29;
  if (!v29)
  {
    uint64_t v16 = operator new(0x30uLL);
    sub_1000B4540();
    int v29 = v16;
  }

  v16[11] |= 2u;
  int v17 = (_DWORD *)*((void *)v16 + 3);
  if (!v17)
  {
    int v17 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v17);
    *((void *)v16 + 3) = v17;
  }

  v17[98] |= 0x2000u;
  int v18 = (_DWORD *)*((void *)v17 + 14);
  if (!v18)
  {
    int v18 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v18);
    *((void *)v17 + 14) = v18;
  }

  v18[37] |= 4u;
  int v19 = (_DWORD *)*((void *)v18 + 4);
  if (!v19)
  {
    int v19 = operator new(0x48uLL);
    sub_1000CDD24((uint64_t)v19);
    *((void *)v18 + 4) = v19;
  }

  if (a2[1].__r_.__value_.__s.__data_[0])
  {
    v19[17] |= 0x40u;
    int v20 = (std::string *)*((void *)v19 + 7);
    if (v20 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      int v20 = (std::string *)operator new(0x18uLL);
      v20->__r_.__value_.__r.__words[0] = 0LL;
      v20->__r_.__value_.__l.__size_ = 0LL;
      v20->__r_.__value_.__l.__cap_ = 0LL;
      *((void *)v19 + 7) = v20;
    }

    std::string::operator=(v20, a2);
  }

  int v21 = v19[17];
  *((double *)v19 + 2) = a8;
  v19[17] = v21 | 3;
  char v22 = (void *)*((void *)v19 + 3);
  if (!v22)
  {
    char v22 = operator new(0x58uLL);
    sub_1000CDD14((uint64_t)v22);
    *((void *)v19 + 3) = v22;
  }

  sub_100239890((uint64_t)v22, a3);
  if (a4[2].__r_.__value_.__s.__data_[0])
  {
    v19[17] |= 4u;
    int v23 = (void *)*((void *)v19 + 4);
    if (!v23)
    {
      int v23 = operator new(0x40uLL);
      sub_1000CDD10((uint64_t)v23);
      *((void *)v19 + 4) = v23;
      if (!a4[2].__r_.__value_.__s.__data_[0]) {
        sub_100006080();
      }
    }

    sub_10023A7C8((uint64_t)v23, a4);
  }

  if (a5[2].__r_.__value_.__s.__data_[0])
  {
    v19[17] |= 8u;
    uint64_t v24 = (void *)*((void *)v19 + 5);
    if (!v24)
    {
      uint64_t v24 = operator new(0x40uLL);
      sub_1000CDD10((uint64_t)v24);
      *((void *)v19 + 5) = v24;
      if (!a5[2].__r_.__value_.__s.__data_[0]) {
        sub_100006080();
      }
    }

    sub_10023A7C8((uint64_t)v24, a5);
  }

  int v25 = v19[17];
  if ((a6 & 0xFF00000000LL) != 0)
  {
    v25 |= 0x10u;
    v19[17] = v25;
    _BYTE v19[12] = a6;
  }

  v19[17] = v25 | 0x20;
  *((_BYTE *)v19 + 52) = a7;
  uint64_t v26 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v28);
  sub_10010686C(v28);
  if (v32) {
    sub_10010686C(v31);
  }
  return v26;
}

void sub_10023B768( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25)
{
  if (a25) {
    sub_10010686C(&a17);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023B7F4(uint64_t a1, uint64_t a2, double a3)
{
  if (!v18) {
    return 0LL;
  }
  sub_1001067C8(v14, v17);
  v16 |= 2u;
  int v6 = v15;
  if (!v15)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v15 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[98] |= 0x2000u;
  uint64_t v8 = (_DWORD *)*((void *)v7 + 14);
  if (!v8)
  {
    uint64_t v8 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v8);
    *((void *)v7 + 14) = v8;
  }

  v8[37] |= 8u;
  uint64_t v9 = (double *)*((void *)v8 + 5);
  if (!v9)
  {
    uint64_t v9 = (double *)operator new(0x28uLL);
    sub_1000CDD20(v9);
    *((void *)v8 + 5) = v9;
  }

  int v10 = *((_DWORD *)v9 + 9);
  _DWORD v9[2] = a3;
  *((_DWORD *)v9 + 9) = v10 | 3;
  int v11 = (void *)*((void *)v9 + 3);
  if (!v11)
  {
    int v11 = operator new(0x58uLL);
    sub_1000CDD14((uint64_t)v11);
    *((void *)v9 + 3) = v11;
  }

  sub_100239890((uint64_t)v11, a2);
  uint64_t v12 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v14);
  sub_10010686C(v14);
  if (v18) {
    sub_10010686C(v17);
  }
  return v12;
}

void sub_10023B964( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023B9C8(uint64_t a1, uint64_t a2, const std::string *a3)
{
  if (!v18) {
    return 0LL;
  }
  sub_1001067C8(v14, v17);
  v16 |= 2u;
  int v6 = v15;
  if (!v15)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v15 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[98] |= 0x2000u;
  uint64_t v8 = (_DWORD *)*((void *)v7 + 14);
  if (!v8)
  {
    uint64_t v8 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v8);
    *((void *)v7 + 14) = v8;
  }

  v8[37] |= 0x20u;
  uint64_t v9 = (_DWORD *)*((void *)v8 + 7);
  if (!v9)
  {
    uint64_t v9 = operator new(0x28uLL);
    sub_1000CDD74(v9);
    *((void *)v8 + 7) = v9;
  }

  int v10 = v9[9];
  *((void *)v9 + 3) = a2;
  v9[9] = v10 | 3;
  int v11 = (std::string *)*((void *)v9 + 2);
  if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v11 = (std::string *)operator new(0x18uLL);
    v11->__r_.__value_.__r.__words[0] = 0LL;
    v11->__r_.__value_.__l.__size_ = 0LL;
    v11->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v9 + 2) = v11;
  }

  std::string::operator=(v11, a3);
  uint64_t v12 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v14);
  sub_10010686C(v14);
  if (v18) {
    sub_10010686C(v17);
  }
  return v12;
}

void sub_10023BB38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023BB8C(uint64_t a1, uint64_t a2, const std::string *a3)
{
  if (!v18) {
    return 0LL;
  }
  sub_1001067C8(v14, v17);
  v16 |= 2u;
  int v6 = v15;
  if (!v15)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v15 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[98] |= 0x2000u;
  uint64_t v8 = (_DWORD *)*((void *)v7 + 14);
  if (!v8)
  {
    uint64_t v8 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v8);
    *((void *)v7 + 14) = v8;
  }

  v8[37] |= 0x40u;
  uint64_t v9 = (_DWORD *)*((void *)v8 + 8);
  if (!v9)
  {
    uint64_t v9 = operator new(0x28uLL);
    sub_1000CDD78(v9);
    *((void *)v8 + std::ostream::~ostream(v2, v3 + 8) = v9;
  }

  int v10 = v9[9];
  *((void *)v9 + 3) = a2;
  v9[9] = v10 | 3;
  int v11 = (std::string *)*((void *)v9 + 2);
  if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v11 = (std::string *)operator new(0x18uLL);
    v11->__r_.__value_.__r.__words[0] = 0LL;
    v11->__r_.__value_.__l.__size_ = 0LL;
    v11->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v9 + 2) = v11;
  }

  std::string::operator=(v11, a3);
  uint64_t v12 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v14);
  sub_10010686C(v14);
  if (v18) {
    sub_10010686C(v17);
  }
  return v12;
}

void sub_10023BCFC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023BD50(uint64_t a1, const std::string *a2, int a3, double a4)
{
  if (!v25) {
    return 0LL;
  }
  sub_1001067C8(v21, v24);
  v23 |= 2u;
  uint64_t v8 = v22;
  if (!v22)
  {
    uint64_t v8 = operator new(0x30uLL);
    sub_1000B4540();
    char v22 = v8;
  }

  v8[11] |= 2u;
  uint64_t v9 = (_DWORD *)*((void *)v8 + 3);
  if (!v9)
  {
    uint64_t v9 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v9);
    *((void *)v8 + 3) = v9;
  }

  v9[98] |= 0x2000u;
  int v10 = (_DWORD *)*((void *)v9 + 14);
  if (!v10)
  {
    int v10 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v10);
    *((void *)v9 + 14) = v10;
  }

  v10[37] |= 0x100u;
  int v11 = (_DWORD *)*((void *)v10 + 10);
  if (!v11)
  {
    int v11 = operator new(0x30uLL);
    sub_1000CDD30((uint64_t)v11);
    *((void *)v10 + 10) = v11;
  }

  int v12 = v11[10];
  *((double *)v11 + 2) = a4;
  v11[10] = v12 | 5;
  int v13 = (std::string *)*((void *)v11 + 3);
  if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v13 = (std::string *)operator new(0x18uLL);
    v13->__r_.__value_.__r.__words[0] = 0LL;
    v13->__r_.__value_.__l.__size_ = 0LL;
    v13->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v11 + 3) = v13;
  }

  std::string::operator=(v13, a2);
  if (a3 == 1) {
    uint64_t v14 = 1LL;
  }
  else {
    uint64_t v14 = 2 * (a3 == 2);
  }
  if (!sub_10005E498(v14)) {
    __assert_rtn( "set_source",  "NearbyInteractionTypes.pb.h",  11743,  "::CLP::LogEntry::Nearbyd::NI::TruthTag_Source_IsValid(value)");
  }
  v11[10] |= 2u;
  uint8_t v11[8] = v14;
  uint64_t v15 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) != 0) {
      a2 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    }
    uint64_t v16 = sub_1000D818C();
    uint64_t v17 = wireless_diagnostics::google::protobuf::internal::NameOfEnum(v16, v14);
    else {
      uint64_t v18 = *(void *)v17;
    }
    *(_DWORD *)uint8_t buf = 136315394;
    char v27 = a2;
    __int16 v28 = 2080;
    uint64_t v29 = v18;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "pblogger, Log truth tagging label: [%s], source: [%s]",  buf,  0x16u);
  }

  uint64_t v19 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v21);
  sub_10010686C(v21);
  if (v25) {
    sub_10010686C(v24);
  }
  return v19;
}

void sub_10023BFE4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

BOOL sub_10023C050(uint64_t a1)
{
  unsigned int v1 = *(void **)(a1 + 72);
  return v1 && (sub_1000B5444(v1) & 1) != 0;
}

uint64_t sub_10023C07C(uint64_t a1, uint64_t a2)
{
  if (!*(_BYTE *)(a2 + 24)) {
    return 0LL;
  }
  sub_100239814(*(void *)(a1 + 120), v74);
  if (!v75) {
    return 0LL;
  }
  sub_1001067C8(v71, v74);
  v73 |= 2u;
  char v4 = v72;
  if (!v72)
  {
    char v4 = operator new(0x30uLL);
    sub_1000B4540();
    int v72 = v4;
  }

  v4[11] |= 2u;
  double v5 = (_DWORD *)*((void *)v4 + 3);
  if (!v5)
  {
    double v5 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v5);
    *((void *)v4 + 3) = v5;
  }

  v5[98] |= 0x2000u;
  int v6 = (_DWORD *)*((void *)v5 + 14);
  if (!v6)
  {
    int v6 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v6);
    *((void *)v5 + 14) = v6;
  }

  v6[37] |= 0x4000u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 16);
  if (!v7)
  {
    unsigned int v7 = operator new(0x50uLL);
    sub_1000CDD3C((uint64_t)v7);
    *((void *)v6 + 16) = v7;
  }

  if (!*(_BYTE *)(a2 + 24)) {
    sub_100006080();
  }
  int v8 = v7[18];
  *((void *)v7 + 2) = *(void *)(a2 + 16);
  *((void *)v7 + 3) = *(unsigned __int16 *)(a2 + 36);
  uint64_t v9 = *(void *)(a2 + 40);
  v7[18] = v8 | 7;
  *((void *)v7 + 4) = v9;
  if (*(_BYTE *)(a2 + 600))
  {
    __int128 v10 = *(_OWORD *)(a2 + 96);
    __int128 v79 = *(_OWORD *)(a2 + 80);
    __int128 v80 = v10;
    __int128 v11 = *(_OWORD *)(a2 + 64);
    __int128 v77 = *(_OWORD *)(a2 + 48);
    __int128 v78 = v11;
    int v12 = *(const void **)(a2 + 120);
    uint64_t v81 = *(void *)(a2 + 112);
    std::string v82 = 0LL;
    uint64_t v13 = *(void *)(a2 + 128);
    __int128 v83 = 0LL;
    uint64_t v84 = 0LL;
    sub_10011B560(&v82, v12, v13, (v13 - (uint64_t)v12) >> 3);
    __int128 v14 = *(_OWORD *)(a2 + 160);
    __int128 v85 = *(_OWORD *)(a2 + 144);
    __int128 v86 = v14;
    uint64_t v15 = *(const void **)(a2 + 184);
    uint64_t v87 = *(void *)(a2 + 176);
    std::string __p = 0LL;
    int v89 = 0LL;
    uint64_t v90 = 0LL;
    sub_10011B618( &__p,  v15,  *(void *)(a2 + 192),  0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*(void *)(a2 + 192) - (void)v15) >> 3));
    memcpy(v91, (const void *)(a2 + 208), sizeof(v91));
    int v16 = v7[18];
    uint8_t v7[16] = v91[222];
    v7[18] = v16 | 0x18;
    uint64_t v17 = (_DWORD *)*((void *)v7 + 5);
    if (!v17)
    {
      uint64_t v17 = operator new(0x1E0uLL);
      sub_1000752FC((uint64_t)v17);
      *((void *)v7 + 5) = v17;
    }

    int v18 = v17[117];
    *((_OWORD *)v17 + 4) = *(_OWORD *)v91;
    uint64_t v19 = v87;
    v17[117] = v18 | 0x10600;
    *((void *)v17 + 12) = v19;
    int v20 = v17[118];
    v17[85] = *(unsigned __int16 *)&v91[216];
    v17[86] = *(unsigned __int16 *)&v91[218];
    int v21 = *(unsigned __int16 *)&v91[220];
    v17[118] = v20 | 0xE0000;
    v17[87] = v21;
    if (!v91[232]) {
      goto LABEL_40;
    }
    if (v91[248] && v91[264] && v91[280])
    {
      uint64_t v22 = *(void *)&v91[224];
      v17[118] = v20 | 0x2E0000;
      *((void *)v17 + 44) = v22;
      if (!v91[248]) {
        sub_100006080();
      }
      uint64_t v23 = *(void *)&v91[240];
      v17[118] = v20 | 0x6E0000;
      *((void *)v17 + 45) = v23;
      if (!v91[264]) {
        sub_100006080();
      }
      uint64_t v24 = *(void *)&v91[256];
      v17[118] = v20 | 0xEE0000;
      *((void *)v17 + 46) = v24;
      if (!v91[280]) {
        sub_100006080();
      }
      v17[118] = v20 | 0x1EE0000;
      uint64_t v25 = v81;
      *((void *)v17 + 4std::ostream::~ostream(v2, v3 + 8) = *(void *)&v91[272];
      *(void *)__s = v25;
      sub_1000065CC(&__str, __s);
      sub_100235848((uint64_t)v17, &__str);
      uint64_t v26 = (int *)sub_10023C79C((uint64_t)v7);
      if (*(_BYTE *)(a2 + 1312))
      {
        char v27 = v26;
        uint64_t v69 = *(void *)(a2 + 1304);
        __int128 v28 = *(_OWORD *)(a2 + 1288);
        v68[4] = *(_OWORD *)(a2 + 1272);
        v68[5] = v28;
        __int128 v29 = *(_OWORD *)(a2 + 1256);
        void v68[2] = *(_OWORD *)(a2 + 1240);
        v68[3] = v29;
        __int128 v30 = *(_OWORD *)(a2 + 1224);
        v68[0] = *(_OWORD *)(a2 + 1208);
        v68[1] = v30;
        int v31 = BYTE11(v68[0]);
        v26[19] |= 8u;
        v26[10] = v31;
        char v32 = sub_100236D74(v26);
        int v33 = sub_100138DA8((uint64_t)v68, 0);
        v32[15] |= 1u;
        v32[4] = v33;
        int v34 = sub_100138DD0((uint64_t)v68, 0);
        v32[15] |= 2u;
        v32[5] = v34;
        int v35 = sub_100138DF8((uint64_t)v68, 0);
        v32[15] |= 4u;
        v32[6] = v35;
        int v36 = sub_100138E20((uint64_t)v68, 0);
        v32[15] |= 8u;
        v32[7] = v36;
        BOOL v37 = (_OWORD *)sub_100138E48((uint64_t)v68, 0);
        uint64_t v38 = 0LL;
        __int128 v39 = v37[1];
        v67[0] = *v37;
        v67[1] = v39;
        do
        {
          int v40 = v32[11];
          uint64_t v41 = (int)v32[10];
          if ((int)v41 >= v40)
          {
            if (v40 == v32[12])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v32 + 8),  v40 + 1);
              int v40 = v32[11];
            }

            v32[11] = v40 + 1;
            uint64_t v43 = sub_1000A60DC();
            uint64_t v44 = *((void *)v32 + 4);
            uint64_t v45 = (int)v32[10];
            v32[10] = v45 + 1;
            *(void *)(v44 + 8 * v45) = v43;
          }

          else
          {
            uint64_t v42 = *((void *)v32 + 4);
            v32[10] = v41 + 1;
            uint64_t v43 = *(_DWORD **)(v42 + 8 * v41);
          }

          int v46 = *(__int16 *)((char *)v67 + v38);
          int v47 = *(__int16 *)((char *)v67 + v38 + 2);
          v43[7] |= 3u;
          v43[4] = v46;
          void v43[5] = v47;
          v38 += 4LL;
        }

        while (v38 != 32);
        unsigned int v48 = sub_100236D74(v27);
        int v49 = sub_100138DA8((uint64_t)v68, 1);
        v48[15] |= 1u;
        v48[4] = v49;
        int v50 = sub_100138DD0((uint64_t)v68, 1);
        v48[15] |= 2u;
        v48[5] = v50;
        int v51 = sub_100138DF8((uint64_t)v68, 1);
        v48[15] |= 4u;
        v48[6] = v51;
        int v52 = sub_100138E20((uint64_t)v68, 1);
        v48[15] |= 8u;
        v48[7] = v52;
        int v53 = (_OWORD *)sub_100138E48((uint64_t)v68, 1);
        uint64_t v54 = 0LL;
        __int128 v55 = v53[1];
        v66[0] = *v53;
        v66[1] = v55;
        do
        {
          int v56 = v48[11];
          uint64_t v57 = (int)v48[10];
          if ((int)v57 >= v56)
          {
            if (v56 == v48[12])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v48 + 8),  v56 + 1);
              int v56 = v48[11];
            }

            v48[11] = v56 + 1;
            uint64_t v59 = sub_1000A60DC();
            uint64_t v60 = *((void *)v48 + 4);
            uint64_t v61 = (int)v48[10];
            v48[10] = v61 + 1;
            *(void *)(v60 + 8 * v61) = v59;
          }

          else
          {
            uint64_t v58 = *((void *)v48 + 4);
            v48[10] = v57 + 1;
            uint64_t v59 = *(_DWORD **)(v58 + 8 * v57);
          }

          int v62 = *(__int16 *)((char *)v66 + v54);
          int v63 = *(__int16 *)((char *)v66 + v54 + 2);
          v59[7] |= 3u;
          v59[4] = v62;
          v59[5] = v63;
          v54 += 4LL;
        }

        while (v54 != 32);
        uint64_t v64 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v71);
      }

      else
      {
        uint64_t v64 = 0LL;
      }
    }

    else
    {
LABEL_40:
      uint64_t v64 = 0LL;
    }

    if (__p)
    {
      int v89 = __p;
      operator delete(__p);
    }

    if (v82)
    {
      __int128 v83 = v82;
      operator delete(v82);
    }
  }

  else
  {
    uint64_t v64 = 0LL;
  }

  sub_10010686C(v71);
  if (v75) {
    sub_10010686C(v74);
  }
  return v64;
}

void sub_10023C6C0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, void *__p, uint64_t a31, int a32, __int16 a33, char a34, char a35, char a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, char a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  sub_10011B2B0(&a54);
  sub_10010686C(&a36);
  if (a52) {
    sub_10010686C(&a44);
  }
  _Unwind_Resume(a1);
}

void *sub_10023C79C(uint64_t a1)
{
  *(_DWORD *)(a1 + 72) |= 0x20u;
  unsigned int v1 = *(void **)(a1 + 48);
  if (!v1)
  {
    unsigned int v1 = operator new(0x50uLL);
    sub_100075314((uint64_t)v1);
    *(void *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = v1;
  }

  return v1;
}

void sub_10023C7E4(_Unwind_Exception *a1)
{
}

uint64_t sub_10023C7F8( uint64_t a1, int a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  if (!v37) {
    return 0LL;
  }
  sub_1001067C8(v33, v36);
  v35 |= 2u;
  int v18 = v34;
  if (!v34)
  {
    int v18 = operator new(0x30uLL);
    sub_1000B4540();
    int v34 = v18;
  }

  v18[11] |= 2u;
  uint64_t v19 = (_DWORD *)*((void *)v18 + 3);
  if (!v19)
  {
    uint64_t v19 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v19);
    *((void *)v18 + 3) = v19;
  }

  v19[98] |= 0x2000u;
  int v20 = (_DWORD *)*((void *)v19 + 14);
  if (!v20)
  {
    int v20 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v20);
    *((void *)v19 + 14) = v20;
  }

  v20[37] |= 0x800u;
  int v21 = (_DWORD *)*((void *)v20 + 13);
  if (!v21)
  {
    int v21 = operator new(0x68uLL);
    sub_1000CDD34((uint64_t)v21);
    *((void *)v20 + 13) = v21;
  }

  v21[24] |= 1u;
  v21[22] = a2;
  uint64_t v23 = *a8;
  uint64_t v22 = a8[1];
  uint64_t v24 = v22 - *a8;
  if (v24 == 88)
  {
    if (v22 != v23)
    {
      unint64_t v25 = 0LL;
      int v26 = v21[10];
      do
      {
        uint64_t v27 = *(void *)(v23 + 8 * v25);
        if (v26 == v21[11])
        {
          sub_10005C268((uint64_t)(v21 + 8), v26 + 1);
          int v26 = v21[10];
          uint64_t v23 = *a8;
          uint64_t v22 = a8[1];
        }

        uint64_t v28 = *((void *)v21 + 4);
        _BYTE v21[10] = v26 + 1;
        *(void *)(v28 + 8LL * v26) = v27;
        ++v25;
        ++v26;
      }

      while (v25 < (v22 - v23) >> 3);
    }
  }

  else
  {
    __int128 v30 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A0A30(v24 >> 3, v30);
    }
  }

  int v31 = v21[24];
  *((double *)v21 + 6) = a3;
  *((double *)v21 + 7) = a4;
  *((double *)v21 + std::ostream::~ostream(v2, v3 + 8) = a5;
  v21[24] = v31 | 0x1F0;
  *((void *)v21 + 9) = a9;
  *((void *)v21 + 10) = a10;
  uint64_t v29 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v33);
  sub_10010686C(v33);
  if (v37) {
    sub_10010686C(v36);
  }
  return v29;
}

void sub_10023CA20( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023CA80(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  if (!v23) {
    return 0LL;
  }
  sub_1001067C8(v19, v22);
  v21 |= 2u;
  int v8 = v20;
  if (!v20)
  {
    int v8 = operator new(0x30uLL);
    sub_1000B4540();
    int v20 = v8;
  }

  v8[11] |= 2u;
  uint64_t v9 = (_DWORD *)*((void *)v8 + 3);
  if (!v9)
  {
    uint64_t v9 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v9);
    *((void *)v8 + 3) = v9;
  }

  v9[98] |= 0x2000u;
  __int128 v10 = (_DWORD *)*((void *)v9 + 14);
  if (!v10)
  {
    __int128 v10 = operator new(0x98uLL);
    sub_1000CDD0C((uint64_t)v10);
    *((void *)v9 + 14) = v10;
  }

  v10[37] |= 0x400u;
  __int128 v11 = (_DWORD *)*((void *)v10 + 12);
  if (!v11)
  {
    __int128 v11 = operator new(0x30uLL);
    sub_1000CDD38((uint64_t)v11);
    *((void *)v10 + 12) = v11;
  }

  int v12 = v11[11];
  v11[11] = v12 | 1;
  *((_BYTE *)v11 + 16) = a2;
  if ((a3 & 0xFF00000000LL) != 0)
  {
    v11[11] = v12 | 3;
    void v11[5] = a3;
  }

  if (*(_BYTE *)(a4 + 24))
  {
    if (*(void *)(a4 + 8) - *(void *)a4 != 88LL) {
      __assert_rtn( "logRangeBiasEstimatorConfig",  "PRProtobufLogger.cpp",  2469,  "kDimOutputSingleAntennaRangeBiasModel == biasCorrectionValuesSingleAntenna.value().size()");
    }
    for (uint64_t i = 0LL; i != 88; i += 8LL)
    {
      if (!*(_BYTE *)(a4 + 24)) {
        sub_100006080();
      }
      uint64_t v14 = *(void *)(*(void *)a4 + i);
      int v15 = v11[8];
      if (v15 == v11[9])
      {
        sub_10005C268((uint64_t)(v11 + 6), v15 + 1);
        int v15 = v11[8];
      }

      uint64_t v16 = *((void *)v11 + 3);
      uint8_t v11[8] = v15 + 1;
      *(void *)(v16 + 8LL * v15) = v14;
    }
  }

  uint64_t v17 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v19);
  sub_10010686C(v19);
  if (v23) {
    sub_10010686C(v22);
  }
  return v17;
}

void sub_10023CC7C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023CCE0()
{
  return 0LL;
}

uint64_t sub_10023CCE8()
{
  return 0LL;
}

uint64_t sub_10023CCF0()
{
  return 0LL;
}

uint64_t sub_10023CCF8()
{
  return 0LL;
}

uint64_t sub_10023CD00()
{
  return 0LL;
}

uint64_t sub_10023CD08()
{
  return 0LL;
}

uint64_t sub_10023CD10()
{
  return 0LL;
}

uint64_t sub_10023CD18()
{
  return 0LL;
}

uint64_t sub_10023CD20()
{
  return 0LL;
}

uint64_t sub_10023CD28()
{
  return 0LL;
}

uint64_t sub_10023CD30()
{
  return 0LL;
}

uint64_t sub_10023CD38()
{
  return 0LL;
}

uint64_t sub_10023CD40(uint64_t a1, const std::string *a2, uint64_t a3)
{
  if (!v34) {
    return 0LL;
  }
  sub_1001067C8(v30, v33);
  v32 |= 2u;
  int v6 = v31;
  if (!v31)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    int v31 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[98] |= 0x8000u;
  int v8 = (void *)*((void *)v7 + 16);
  if (!v8)
  {
    int v8 = operator new(0x40uLL);
    sub_1000CDD88(v8);
    *((void *)v7 + 16) = v8;
  }

  int v9 = *((_DWORD *)v8 + 15);
  void v8[2] = *(void *)a3;
  *((_DWORD *)v8 + 15) = v9 | 3;
  __int128 v10 = (std::string *)v8[3];
  if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    __int128 v10 = (std::string *)operator new(0x18uLL);
    v10->__r_.__value_.__r.__words[0] = 0LL;
    v10->__r_.__value_.__l.__size_ = 0LL;
    v10->__r_.__value_.__l.__cap_ = 0LL;
    void v8[3] = v10;
  }

  std::string::operator=(v10, a2);
  *((_DWORD *)v8 + 15) |= 4u;
  __int128 v11 = (int *)v8[4];
  if (!v11)
  {
    __int128 v11 = (int *)operator new(0x30uLL);
    sub_10004AF40((uint64_t)v11);
    v8[4] = v11;
  }

  for (uint64_t i = 0LL; i != 4; ++i)
  {
    int v13 = v11[7];
    uint64_t v14 = v11[6];
    if ((int)v14 >= v13)
    {
      if (v13 == v11[8])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v11 + 4),  v13 + 1);
        int v13 = v11[7];
      }

      v11[7] = v13 + 1;
      uint64_t v16 = sub_10005C320();
      uint64_t v17 = *((void *)v11 + 2);
      uint64_t v18 = v11[6];
      v11[6] = v18 + 1;
      *(void *)(v17 + 8 * v1std::ostream::~ostream(v2, v3 + 8) = v16;
    }

    else
    {
      uint64_t v15 = *((void *)v11 + 2);
      v11[6] = v14 + 1;
      uint64_t v16 = *(void **)(v15 + 8 * v14);
    }

    int v19 = 0;
    int v20 = *((_DWORD *)v16 + 6);
    do
    {
      float v21 = *(float *)(a3 + 16 + 16 * i + 4LL * (v19 & 3));
      if (v20 == *((_DWORD *)v16 + 7))
      {
        sub_10005C268((uint64_t)(v16 + 2), v20 + 1);
        int v20 = *((_DWORD *)v16 + 6);
      }

      uint64_t v22 = v16[2];
      *((_DWORD *)v16 + 6) = v20 + 1;
      *(double *)(v22 + 8LL * v20) = v21;
      ++v19;
      ++v20;
    }

    while (v19 != 4);
  }

  unsigned int v23 = *(_DWORD *)(a3 + 80);
  if (v23 < 3) {
    unsigned int v24 = v23 + 1;
  }
  else {
    unsigned int v24 = 0;
  }
  if (!sub_10005E4A4(v24)) {
    __assert_rtn( "set_vio_tracking_state",  "NearbyInteractionTypes.pb.h",  16714,  "::CLP::LogEntry::Nearbyd::NI::VIOTrackingState_IsValid(value)");
  }
  int v25 = *((_DWORD *)v8 + 15);
  int v26 = v25 | 8;
  *((_DWORD *)v8 + 15) = v25 | 8;
  *((_DWORD *)v8 + 12) = v24;
  if (*(_BYTE *)(a3 + 96))
  {
    uint64_t v27 = *(void *)(a3 + 88);
    int v26 = v25 | 0x18;
    *((_DWORD *)v8 + 15) = v25 | 0x18;
    void v8[5] = v27;
  }

  *((_WORD *)v8 + 26) = *(_WORD *)(a3 + 84);
  *((_DWORD *)v8 + 15) = v26 | 0x60;
  uint64_t v28 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v30);
  sub_10010686C(v30);
  if (v34) {
    sub_10010686C(v33);
  }
  return v28;
}

void sub_10023D014( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25)
{
  if (a25) {
    sub_10010686C(&a17);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023D080(uint64_t a1, const std::string *a2, void *a3)
{
  if (!v34) {
    return 0LL;
  }
  sub_1001067C8(v30, v33);
  v32 |= 2u;
  int v6 = v31;
  if (!v31)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    int v31 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[98] |= 0x20000000u;
  int v8 = (_DWORD *)*((void *)v7 + 30);
  if (!v8)
  {
    int v8 = operator new(0x28uLL);
    sub_1000CDDAC(v8);
    *((void *)v7 + 30) = v8;
  }

  v8[9] |= 1u;
  int v9 = (std::string *)*((void *)v8 + 2);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v9 = (std::string *)operator new(0x18uLL);
    v9->__r_.__value_.__r.__words[0] = 0LL;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v8 + 2) = v9;
  }

  std::string::operator=(v9, a2);
  v8[9] |= 2u;
  __int128 v10 = (_DWORD *)*((void *)v8 + 3);
  if (!v10)
  {
    __int128 v10 = operator new(0x50uLL);
    sub_1000B642C((uint64_t)v10);
    *((void *)v8 + 3) = v10;
  }

  int v11 = v10[19];
  *((void *)v10 + 2) = *a3;
  v10[19] = v11 | 9;
  int v12 = (_DWORD *)*((void *)v10 + 5);
  if (!v12)
  {
    int v12 = operator new(0x30uLL);
    sub_1000B6438((uint64_t)v12);
    *((void *)v10 + 5) = v12;
  }

  int v13 = v12[11];
  *((void *)v12 + 2) = a3[1];
  *((void *)v12 + 3) = a3[2];
  uint64_t v14 = a3[3];
  v12[11] = v13 | 7;
  *((void *)v12 + 4) = v14;
  v10[19] |= 4u;
  uint64_t v15 = (_DWORD *)*((void *)v10 + 4);
  if (!v15)
  {
    uint64_t v15 = operator new(0x30uLL);
    sub_1000B6434((uint64_t)v15);
    *((void *)v10 + 4) = v15;
  }

  int v16 = v15[11];
  *((void *)v15 + 2) = a3[4];
  *((void *)v15 + 3) = a3[5];
  uint64_t v17 = a3[6];
  v15[11] = v16 | 7;
  *((void *)v15 + 4) = v17;
  v10[19] |= 2u;
  uint64_t v18 = (_DWORD *)*((void *)v10 + 3);
  if (!v18)
  {
    uint64_t v18 = operator new(0x38uLL);
    sub_1000B6430((uint64_t)v18);
    *((void *)v10 + 3) = v18;
  }

  v18[13] |= 1u;
  int v19 = (_DWORD *)*((void *)v18 + 2);
  if (!v19)
  {
    int v19 = operator new(0x38uLL);
    sub_1000B6428((uint64_t)v19);
    *((void *)v18 + 2) = v19;
  }

  int v20 = v19[13];
  *((void *)v19 + 2) = a3[7];
  *((void *)v19 + 3) = a3[8];
  *((void *)v19 + 4) = a3[9];
  uint64_t v21 = a3[10];
  v19[13] = v20 | 0xF;
  *((void *)v19 + 5) = v21;
  v10[19] |= 0x20u;
  uint64_t v22 = (_DWORD *)*((void *)v10 + 7);
  if (!v22)
  {
    uint64_t v22 = operator new(0x30uLL);
    sub_1000B643C((uint64_t)v22);
    *((void *)v10 + 7) = v22;
  }

  int v23 = v22[11];
  *((void *)v22 + 2) = a3[11];
  *((void *)v22 + 3) = a3[12];
  uint64_t v24 = a3[13];
  v22[11] = v23 | 7;
  *((void *)v22 + 4) = v24;
  v10[19] |= 2u;
  int v25 = (_DWORD *)*((void *)v10 + 3);
  if (!v25)
  {
    int v25 = operator new(0x38uLL);
    sub_1000B6430((uint64_t)v25);
    *((void *)v10 + 3) = v25;
  }

  int v26 = v25[13];
  *((void *)v25 + 3) = a3[14];
  *((void *)v25 + 4) = a3[15];
  uint64_t v27 = a3[16];
  v25[13] = v26 | 0xE;
  *((void *)v25 + 5) = v27;
  uint64_t v28 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v30);
  sub_10010686C(v30);
  if (v34) {
    sub_10010686C(v33);
  }
  return v28;
}

void sub_10023D3A4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023D430(uint64_t a1, const std::string *a2, uint64_t a3)
{
  if (!v17) {
    return 0LL;
  }
  sub_1001067C8(v13, v16);
  v15 |= 2u;
  int v6 = v14;
  if (!v14)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v14 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[98] |= 0x100000u;
  int v8 = (_DWORD *)*((void *)v7 + 21);
  if (!v8)
  {
    int v8 = operator new(0x38uLL);
    sub_1000CDD8C(v8);
    *((void *)v7 + 21) = v8;
  }

  int v9 = v8[13];
  *((_OWORD *)v8 + 1) = *(_OWORD *)a3;
  *((void *)v8 + 4) = *(void *)(a3 + 16);
  v8[13] = v9 | 0xF;
  __int128 v10 = (std::string *)*((void *)v8 + 5);
  if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    __int128 v10 = (std::string *)operator new(0x18uLL);
    v10->__r_.__value_.__r.__words[0] = 0LL;
    v10->__r_.__value_.__l.__size_ = 0LL;
    v10->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v8 + 5) = v10;
  }

  std::string::operator=(v10, a2);
  uint64_t v11 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v13);
  sub_10010686C(v13);
  if (v17) {
    sub_10010686C(v16);
  }
  return v11;
}

void sub_10023D584( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023D5D4(uint64_t a1, const std::string *a2, uint64_t *a3)
{
  if (!v26) {
    return 0LL;
  }
  sub_1001067C8(v22, v25);
  v24 |= 2u;
  int v6 = v23;
  if (!v23)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    int v23 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[99] |= 0x100u;
  int v8 = (int *)*((void *)v7 + 41);
  if (!v8)
  {
    int v8 = (int *)operator new(0x38uLL);
    sub_1000CDDA8((uint64_t)v8);
    *((void *)v7 + 41) = v8;
  }

  uint64_t v9 = *a3;
  uint64_t v10 = a3[1];
  if (*a3 != v10)
  {
    do
    {
      int v11 = v8[7];
      uint64_t v12 = v8[6];
      if ((int)v12 >= v11)
      {
        if (v11 == v8[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v8 + 4),  v11 + 1);
          int v11 = v8[7];
        }

        v8[7] = v11 + 1;
        uint64_t v14 = (char *)sub_100105764();
        uint64_t v15 = *((void *)v8 + 2);
        uint64_t v16 = v8[6];
        v8[6] = v16 + 1;
        *(void *)(v15 + 8 * v16) = v14;
      }

      else
      {
        uint64_t v13 = *((void *)v8 + 2);
        v8[6] = v12 + 1;
        uint64_t v14 = *(char **)(v13 + 8 * v12);
      }

      int v17 = *((_DWORD *)v14 + 16);
      *((_DWORD *)v14 + 5) = *(_DWORD *)(v9 + 4);
      *(_OWORD *)(v14 + 24) = *(_OWORD *)(v9 + 8);
      *(_OWORD *)(v14 + 40) = *(_OWORD *)(v9 + 24);
      *((_WORD *)v14 + 2std::ostream::~ostream(v2, v3 + 8) = *(_WORD *)(v9 + 40);
      *((_DWORD *)v14 + 16) = v17 | 0xFE;
      switch(*(_DWORD *)v9)
      {
        case 1:
          if (!sub_1000CE0BC(2u)) {
            goto LABEL_36;
          }
          int v18 = 2;
          break;
        case 2:
          if (!sub_1000CE0BC(3u)) {
            goto LABEL_36;
          }
          int v18 = 3;
          break;
        case 3:
          if (!sub_1000CE0BC(4u)) {
            goto LABEL_36;
          }
          int v18 = 4;
          break;
        case 4:
          if (!sub_1000CE0BC(5u)) {
            goto LABEL_36;
          }
          int v18 = 5;
          break;
        case 5:
          if (!sub_1000CE0BC(6u)) {
            goto LABEL_36;
          }
          int v18 = 6;
          break;
        case 6:
          if (!sub_1000CE0BC(7u)) {
            goto LABEL_36;
          }
          int v18 = 7;
          break;
        default:
          if (!sub_1000CE0BC(1u)) {
LABEL_36:
          }
            __assert_rtn( "set_satellite_system",  "NearbyInteractionTypes.pb.h",  18243,  "::CLP::LogEntry::Nearbyd::NI::SatelliteSystem_IsValid(value)");
          int v18 = 1;
          break;
      }

      *((_DWORD *)v14 + 16) |= 1u;
      *((_DWORD *)v14 + 4) = v18;
      v9 += 48LL;
    }

    while (v9 != v10);
  }

  v8[13] |= 2u;
  int v19 = (std::string *)*((void *)v8 + 5);
  if (v19 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v19 = (std::string *)operator new(0x18uLL);
    v19->__r_.__value_.__r.__words[0] = 0LL;
    v19->__r_.__value_.__l.__size_ = 0LL;
    v19->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v8 + 5) = v19;
  }

  std::string::operator=(v19, a2);
  uint64_t v20 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v22);
  sub_10010686C(v22);
  if (v26) {
    sub_10010686C(v25);
  }
  return v20;
}

void sub_10023D8B0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023D908(uint64_t a1, const std::string *a2, uint64_t a3)
{
  if (!v19) {
    return 0LL;
  }
  sub_1001067C8(v15, v18);
  v17 |= 2u;
  int v6 = v16;
  if (!v16)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v16 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[98] |= 0x400000u;
  int v8 = (_DWORD *)*((void *)v7 + 23);
  if (!v8)
  {
    int v8 = operator new(0x58uLL);
    sub_1000CDD94((uint64_t)v8);
    *((void *)v7 + 23) = v8;
  }

  int v9 = v8[20];
  v8[20] = v9 | 3;
  *((_OWORD *)v8 + 1) = *(_OWORD *)a3;
  v8[12] = *(_DWORD *)(a3 + 16);
  *((_OWORD *)v8 + 2) = *(_OWORD *)(a3 + 24);
  uint64_t v10 = *(void *)(a3 + 40);
  v8[20] = v9 | 0x3F;
  *((void *)v8 + 7) = v10;
  int v11 = *(_DWORD *)(a3 + 48);
  v8[20] = v9 | 0x7F;
  v8[13] = v11;
  v8[18] = *(_DWORD *)(a3 + 52);
  v8[20] = v9 | 0x1FF;
  uint64_t v12 = (std::string *)*((void *)v8 + 8);
  if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    uint64_t v12 = (std::string *)operator new(0x18uLL);
    v12->__r_.__value_.__r.__words[0] = 0LL;
    v12->__r_.__value_.__l.__size_ = 0LL;
    v12->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v8 + std::ostream::~ostream(v2, v3 + 8) = v12;
  }

  std::string::operator=(v12, a2);
  uint64_t v13 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v15);
  sub_10010686C(v15);
  if (v19) {
    sub_10010686C(v18);
  }
  return v13;
}

void sub_10023DA94( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023DAE4(uint64_t a1, const std::string *a2, uint64_t a3)
{
  if (!v17) {
    return 0LL;
  }
  sub_1001067C8(v13, v16);
  v15 |= 2u;
  int v6 = v14;
  if (!v14)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v14 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[98] |= 0x200000u;
  int v8 = (_DWORD *)*((void *)v7 + 22);
  if (!v8)
  {
    int v8 = operator new(0x30uLL);
    sub_1000CDD90((uint64_t)v8);
    *((void *)v7 + 22) = v8;
  }

  int v9 = v8[10];
  *((void *)v8 + 2) = *(void *)a3;
  *((_BYTE *)v8 + 32) = *(_BYTE *)(a3 + 8);
  v8[10] = v9 | 7;
  uint64_t v10 = (std::string *)*((void *)v8 + 3);
  if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    uint64_t v10 = (std::string *)operator new(0x18uLL);
    v10->__r_.__value_.__r.__words[0] = 0LL;
    v10->__r_.__value_.__l.__size_ = 0LL;
    v10->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v8 + 3) = v10;
  }

  std::string::operator=(v10, a2);
  uint64_t v11 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v13);
  sub_10010686C(v13);
  if (v17) {
    sub_10010686C(v16);
  }
  return v11;
}

void sub_10023DC38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023DC88(uint64_t a1, const std::string *a2, uint64_t a3, int a4)
{
  if (!v26) {
    return 0LL;
  }
  sub_1001067C8(v22, v25);
  v24 |= 2u;
  int v8 = v23;
  if (!v23)
  {
    int v8 = operator new(0x30uLL);
    sub_1000B4540();
    int v23 = v8;
  }

  v8[11] |= 2u;
  int v9 = (_DWORD *)*((void *)v8 + 3);
  if (v9)
  {
    if (a4) {
      goto LABEL_6;
    }
LABEL_10:
    v9[98] |= 0x1000000u;
    uint64_t v10 = (char *)*((void *)v9 + 25);
    if (!v10)
    {
      uint64_t v10 = (char *)operator new(0x90uLL);
      sub_1000CDDA0((uint64_t)v10);
      *((void *)v9 + 25) = v10;
    }

    goto LABEL_12;
  }

  int v9 = operator new(0x190uLL);
  sub_10005D930((uint64_t)v9);
  *((void *)v8 + 3) = v9;
  if (!a4) {
    goto LABEL_10;
  }
LABEL_6:
  v9[99] |= 8u;
  uint64_t v10 = (char *)*((void *)v9 + 36);
  if (!v10)
  {
    uint64_t v10 = (char *)operator new(0x90uLL);
    sub_1000CDDA0((uint64_t)v10);
    *((void *)v9 + 36) = v10;
  }

void sub_10023E190( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023E1F4(uint64_t a1, const std::string *a2, _OWORD *a3)
{
  if (!v17) {
    return 0LL;
  }
  sub_1001067C8(v13, v16);
  v15 |= 2u;
  int v6 = v14;
  if (!v14)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v14 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[98] |= 0x2000000u;
  int v8 = (_DWORD *)*((void *)v7 + 26);
  if (!v8)
  {
    int v8 = operator new(0x40uLL);
    sub_1000CDDA4((uint64_t)v8);
    *((void *)v7 + 26) = v8;
  }

  int v9 = v8[15];
  *((_OWORD *)v8 + 1) = *a3;
  *((_OWORD *)v8 + 2) = a3[1];
  v8[15] = v9 | 0x1F;
  uint64_t v10 = (std::string *)*((void *)v8 + 6);
  if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    uint64_t v10 = (std::string *)operator new(0x18uLL);
    v10->__r_.__value_.__r.__words[0] = 0LL;
    v10->__r_.__value_.__l.__size_ = 0LL;
    v10->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v8 + 6) = v10;
  }

  std::string::operator=(v10, a2);
  uint64_t v11 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v13);
  sub_10010686C(v13);
  if (v17) {
    sub_10010686C(v16);
  }
  return v11;
}

void sub_10023E348( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023E398(uint64_t a1, const std::string *a2, uint64_t a3)
{
  if (!v19) {
    return 0LL;
  }
  sub_1001067C8(v15, v18);
  v17 |= 2u;
  int v6 = v16;
  if (!v16)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    int v16 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[98] |= 0x800000u;
  int v8 = (_DWORD *)*((void *)v7 + 24);
  if (!v8)
  {
    int v8 = operator new(0x40uLL);
    sub_1000CDD98((uint64_t)v8);
    *((void *)v7 + 24) = v8;
  }

  int v9 = v8[14];
  *((_OWORD *)v8 + 1) = *(_OWORD *)a3;
  v8[8] = *(_DWORD *)(a3 + 16);
  *((_WORD *)v8 + 1std::ostream::~ostream(v2, v3 + 8) = *(_WORD *)(a3 + 20);
  int v10 = v9 | 0xFF;
  v8[14] = v10;
  int v11 = *(_DWORD *)(a3 + 24);
  if (!v11)
  {
    if (!sub_10005E498(0)) {
      goto LABEL_23;
    }
    int v10 = v8[14] | 0x100;
    v8[14] = v10;
    v8[12] = 0;
    int v11 = *(_DWORD *)(a3 + 24);
  }

  if (v11 == 1)
  {
    if (!sub_10005E498(1u)) {
      goto LABEL_23;
    }
    int v10 = v8[14] | 0x100;
    v8[14] = v10;
    v8[12] = 1;
    int v11 = *(_DWORD *)(a3 + 24);
  }

  if (v11 == 2)
  {
    if (sub_10005E498(2u))
    {
      int v10 = v8[14] | 0x100;
      v8[14] = v10;
      v8[12] = 2;
      goto LABEL_17;
    }

void sub_10023E59C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023E5EC(uint64_t a1, const std::string *a2, double a3)
{
  if (!v16) {
    return 0LL;
  }
  sub_1001067C8(v12, v15);
  v14 |= 2u;
  int v6 = v13;
  if (!v13)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v13 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[99] |= 0x20u;
  int v8 = (_DWORD *)*((void *)v7 + 38);
  if (!v8)
  {
    int v8 = operator new(0x28uLL);
    sub_1000CDDB0(v8);
    *((void *)v7 + 3std::ostream::~ostream(v2, v3 + 8) = v8;
  }

  v8[9] |= 2u;
  int v9 = (std::string *)*((void *)v8 + 3);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v9 = (std::string *)operator new(0x18uLL);
    v9->__r_.__value_.__r.__words[0] = 0LL;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v8 + 3) = v9;
  }

  std::string::operator=(v9, a2);
  v8[9] |= 1u;
  *((double *)v8 + 2) = a3;
  uint64_t v10 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v12);
  sub_10010686C(v12);
  if (v16) {
    sub_10010686C(v15);
  }
  return v10;
}

void sub_10023E740( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023E78C(uint64_t a1, const std::string *a2, uint64_t *a3)
{
  if (!v33) {
    return 0LL;
  }
  sub_1001067C8(v29, v32);
  v31 |= 2u;
  int v6 = v30;
  if (!v30)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    __int128 v30 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[98] |= 0x10000000u;
  int v8 = (_DWORD *)*((void *)v7 + 29);
  if (!v8)
  {
    int v8 = operator new(0x68uLL);
    sub_10005D958((uint64_t)v8);
    *((void *)v7 + 29) = v8;
  }

  v8[24] |= 8u;
  int v9 = (std::string *)*((void *)v8 + 5);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v9 = (std::string *)operator new(0x18uLL);
    v9->__r_.__value_.__r.__words[0] = 0LL;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v8 + 5) = v9;
  }

  std::string::operator=(v9, a2);
  if (*((_BYTE *)a3 + 16))
  {
    v8[24] |= 0x40u;
    uint64_t v10 = (_DWORD *)*((void *)v8 + 8);
    if (!v10)
    {
      uint64_t v10 = operator new(0x28uLL);
      sub_10005D94C((uint64_t)v10);
      *((void *)v8 + std::ostream::~ostream(v2, v3 + 8) = v10;
      if (!*((_BYTE *)a3 + 16)) {
        sub_100006080();
      }
    }

    uint64_t v11 = *a3;
    v10[8] |= 2u;
    *((void *)v10 + 2) = v11;
    int v12 = *((_DWORD *)a3 + 2);
    if (v12)
    {
      if (v12 == 1)
      {
        if (sub_10005E4A4(2u))
        {
          int v13 = 2;
          goto LABEL_23;
        }
      }

      else
      {
        if (v12 != 2) {
          goto LABEL_24;
        }
        if (sub_10005E4A4(3u))
        {
          int v13 = 3;
LABEL_23:
          v10[8] |= 1u;
          void v10[6] = v13;
          goto LABEL_24;
        }
      }
    }

    else if (sub_10005E4A4(1u))
    {
      int v13 = 1;
      goto LABEL_23;
    }

    __assert_rtn( "set_category",  "CLPNearbyd.pb.h",  4657,  "::CLP::LogEntry::Nearbyd::NearbydEntry_FindeeBoundedDisplacementCategory_IsValid(value)");
  }

void sub_10023EB84( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023EBF8(uint64_t a1, const std::string *a2, uint64_t *a3)
{
  if (!v25) {
    return 0LL;
  }
  sub_1001067C8(v21, v24);
  v23 |= 2u;
  int v6 = v22;
  if (!v22)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    int v22 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[99] |= 0x10u;
  int v8 = (_DWORD *)*((void *)v7 + 37);
  if (!v8)
  {
    int v8 = operator new(0x78uLL);
    sub_10005D95C((uint64_t)v8);
    *((void *)v7 + 37) = v8;
  }

  uint64_t v9 = *a3;
  int v10 = v8[29];
  int v11 = v10 | 1;
  v8[29] = v10 | 1;
  *((void *)v8 + 2) = v9;
  if (*((_BYTE *)a3 + 32))
  {
    uint64_t v12 = a3[3];
    int v11 = v10 | 3;
    v8[29] = v10 | 3;
    *((void *)v8 + 3) = v12;
  }

  if (*((_BYTE *)a3 + 48))
  {
    uint64_t v13 = a3[5];
    v11 |= 4u;
    v8[29] = v11;
    *((void *)v8 + 4) = v13;
  }

  if (*((_BYTE *)a3 + 64))
  {
    uint64_t v14 = a3[7];
    v11 |= 8u;
    v8[29] = v11;
    *((void *)v8 + 5) = v14;
  }

  if (*((_BYTE *)a3 + 80))
  {
    uint64_t v15 = a3[9];
    v11 |= 0x10u;
    v8[29] = v11;
    *((void *)v8 + 6) = v15;
  }

  if (*((_BYTE *)a3 + 96))
  {
    uint64_t v16 = a3[11];
    v11 |= 0x20u;
    v8[29] = v11;
    *((void *)v8 + 7) = v16;
  }

  if (*((_BYTE *)a3 + 112))
  {
    uint64_t v17 = a3[13];
    v11 |= 0x40u;
    v8[29] = v11;
    *((void *)v8 + std::ostream::~ostream(v2, v3 + 8) = v17;
  }

  if (*((_BYTE *)a3 + 152))
  {
    *((_OWORD *)v8 + 5) = *(_OWORD *)(a3 + 15);
    v11 |= 0xF00u;
    v8[29] = v11;
    *((_OWORD *)v8 + 6) = *(_OWORD *)(a3 + 17);
  }

  v8[29] = v11 | 0x80;
  int v18 = (std::string *)*((void *)v8 + 9);
  if (v18 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v18 = (std::string *)operator new(0x18uLL);
    v18->__r_.__value_.__r.__words[0] = 0LL;
    v18->__r_.__value_.__l.__size_ = 0LL;
    v18->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v8 + 9) = v18;
  }

  std::string::operator=(v18, a2);
  uint64_t v19 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v21);
  sub_10010686C(v21);
  if (v25) {
    sub_10010686C(v24);
  }
  return v19;
}

void sub_10023EDFC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023EE48(uint64_t a1, const std::string *a2, uint64_t a3)
{
  if (!v18) {
    return 0LL;
  }
  sub_1001067C8(v14, v17);
  v16 |= 2u;
  int v6 = v15;
  if (!v15)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v15 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[99] |= 0x40u;
  int v8 = (_DWORD *)*((void *)v7 + 39);
  if (!v8)
  {
    int v8 = operator new(0x30uLL);
    sub_1000CDDCC(v8);
    *((void *)v7 + 39) = v8;
  }

  v8[11] |= 1u;
  uint64_t v9 = (std::string *)*((void *)v8 + 2);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    uint64_t v9 = (std::string *)operator new(0x18uLL);
    v9->__r_.__value_.__r.__words[0] = 0LL;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v8 + 2) = v9;
  }

  std::string::operator=(v9, a2);
  int v10 = v8[11];
  *((void *)v8 + 3) = *(void *)a3;
  v8[8] = *(unsigned __int16 *)(a3 + 8);
  int v11 = *(unsigned __int8 *)(a3 + 10);
  v8[11] = v10 | 0xE;
  v8[9] = v11;
  uint64_t v12 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v14);
  sub_10010686C(v14);
  if (v18) {
    sub_10010686C(v17);
  }
  return v12;
}

void sub_10023EFB0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023EFFC(uint64_t a1, const std::string *a2, float32x2_t *a3)
{
  if (!v36) {
    return 0LL;
  }
  sub_1001067C8(v32, v35);
  v34 |= 2u;
  int v6 = v33;
  if (!v33)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    char v33 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[99] |= 4u;
  int v8 = (_DWORD *)*((void *)v7 + 35);
  if (!v8)
  {
    int v8 = operator new(0x70uLL);
    sub_1000CDDBC((uint64_t)v8);
    *((void *)v7 + 35) = v8;
  }

  v8[26] |= 1u;
  uint64_t v9 = (std::string *)*((void *)v8 + 2);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    uint64_t v9 = (std::string *)operator new(0x18uLL);
    v9->__r_.__value_.__r.__words[0] = 0LL;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v8 + 2) = v9;
  }

  std::string::operator=(v9, a2);
  v8[26] |= 2u;
  int v10 = (_DWORD *)*((void *)v8 + 3);
  if (!v10)
  {
    int v10 = operator new(0x20uLL);
    sub_1000CDDB8(v10);
    *((void *)v8 + 3) = v10;
  }

  if (!a3->i32[0])
  {
    if (sub_10005E498(1u))
    {
      int v11 = v10[7] | 1;
      v10[7] = v11;
      int v12 = 1;
      goto LABEL_19;
    }

void sub_10023F558( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023F5B4(uint64_t a1, const std::string *a2, int a3)
{
  if (!v17) {
    return 0LL;
  }
  sub_1001067C8(v13, v16);
  v15 |= 2u;
  int v6 = v14;
  if (!v14)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    __int8 v14 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[98] |= 0x80000000;
  int v8 = (_DWORD *)*((void *)v7 + 32);
  if (!v8)
  {
    int v8 = operator new(0x28uLL);
    sub_1000CDDC0((uint64_t)v8);
    *((void *)v7 + 32) = v8;
  }

  v8[8] |= 1u;
  uint64_t v9 = (std::string *)*((void *)v8 + 2);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    uint64_t v9 = (std::string *)operator new(0x18uLL);
    v9->__r_.__value_.__r.__words[0] = 0LL;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v8 + 2) = v9;
  }

  std::string::operator=(v9, a2);
  else {
    unsigned int v10 = 1;
  }
  if (!sub_1000CE0B0(v10)) {
    __assert_rtn( "set_algorithm_container",  "NearbyInteractionTypes.pb.h",  19637,  "::CLP::LogEntry::Nearbyd::NI::AlgorithmContainer_IsValid(value)");
  }
  v8[8] |= 2u;
  v8[6] = v10;
  uint64_t v11 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v13);
  sub_10010686C(v13);
  if (v17) {
    sub_10010686C(v16);
  }
  return v11;
}

void sub_10023F748( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023F794(uint64_t a1, const std::string *a2)
{
  if (!v14) {
    return 0LL;
  }
  sub_1001067C8(v10, v13);
  v12 |= 2u;
  char v4 = v11;
  if (!v11)
  {
    char v4 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v11 = v4;
  }

  v4[11] |= 2u;
  double v5 = (_DWORD *)*((void *)v4 + 3);
  if (!v5)
  {
    double v5 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v5);
    *((void *)v4 + 3) = v5;
  }

  v5[99] |= 1u;
  int v6 = (_DWORD *)*((void *)v5 + 33);
  if (!v6)
  {
    int v6 = operator new(0x20uLL);
    sub_1000CDDC4(v6);
    *((void *)v5 + 33) = v6;
  }

  v6[7] |= 1u;
  unsigned int v7 = (std::string *)*((void *)v6 + 2);
  if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    unsigned int v7 = (std::string *)operator new(0x18uLL);
    v7->__r_.__value_.__r.__words[0] = 0LL;
    v7->__r_.__value_.__l.__size_ = 0LL;
    v7->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v6 + 2) = v7;
  }

  std::string::operator=(v7, a2);
  uint64_t v8 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v10);
  sub_10010686C(v10);
  if (v14) {
    sub_10010686C(v13);
  }
  return v8;
}

void sub_10023F8CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023F918(uint64_t a1, const std::string *a2, double a3, double a4, double a5)
{
  if (!v21) {
    return 0LL;
  }
  sub_1001067C8(v17, v20);
  v19 |= 2u;
  unsigned int v10 = v18;
  if (!v18)
  {
    unsigned int v10 = operator new(0x30uLL);
    sub_1000B4540();
    float32x2_t v18 = v10;
  }

  v10[11] |= 2u;
  uint64_t v11 = (_DWORD *)*((void *)v10 + 3);
  if (!v11)
  {
    uint64_t v11 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v11);
    *((void *)v10 + 3) = v11;
  }

  v11[99] |= 2u;
  int v12 = (_DWORD *)*((void *)v11 + 34);
  if (!v12)
  {
    int v12 = operator new(0x38uLL);
    sub_1000CDDC8(v12);
    *((void *)v11 + 34) = v12;
  }

  v12[13] |= 1u;
  uint64_t v13 = (std::string *)*((void *)v12 + 2);
  if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    uint64_t v13 = (std::string *)operator new(0x18uLL);
    v13->__r_.__value_.__r.__words[0] = 0LL;
    v13->__r_.__value_.__l.__size_ = 0LL;
    v13->__r_.__value_.__l.__cap_ = 0LL;
    *((void *)v12 + 2) = v13;
  }

  std::string::operator=(v13, a2);
  int v14 = v12[13];
  *((double *)v12 + 4) = a4;
  *((double *)v12 + 5) = a5;
  v12[13] = v14 | 0xE;
  *((double *)v12 + 3) = a3;
  uint64_t v15 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v17);
  sub_10010686C(v17);
  if (v21) {
    sub_10010686C(v20);
  }
  return v15;
}

void sub_10023FA80( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023FACC(uint64_t a1, const std::string *a2, float32x2_t *a3)
{
  if (!v23) {
    return 0LL;
  }
  sub_1001067C8(v19, v22);
  v21 |= 2u;
  int v6 = v20;
  if (!v20)
  {
    int v6 = operator new(0x30uLL);
    sub_1000B4540();
    float32x2_t v20 = v6;
  }

  v6[11] |= 2u;
  unsigned int v7 = (_DWORD *)*((void *)v6 + 3);
  if (!v7)
  {
    unsigned int v7 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v7);
    *((void *)v6 + 3) = v7;
  }

  v7[98] |= 0x40000000u;
  uint64_t v8 = (float32x2_t *)*((void *)v7 + 31);
  if (!v8)
  {
    uint64_t v8 = (float32x2_t *)operator new(0x78uLL);
    sub_1000CDDB4((uint64_t)v8);
    *((void *)v7 + 31) = v8;
  }

  v8[14].i32[0] |= 1u;
  uint64_t v9 = (std::string *)v8[2];
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    uint64_t v9 = (std::string *)operator new(0x18uLL);
    v9->__r_.__value_.__r.__words[0] = 0LL;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    void v8[2] = (float32x2_t)v9;
  }

  std::string::operator=(v9, a2);
  __int32 v10 = v8[14].i32[0];
  void v8[3] = *a3;
  *(double *)&v8[4] = a3[2].f32[0];
  float32x2_t v11 = a3[1];
  int v12 = v10 | 0xE;
  v8[14].i32[0] = v10 | 0xE;
  void v8[5] = v11;
  if (a3[4].i8[4])
  {
    int v12 = v10 | 0x3E;
    v8[14].i32[0] = v10 | 0x3E;
    *(float64x2_t *)v8[6].f32 = vcvtq_f64_f32(a3[3]);
  }

  if (a3[22].i8[2])
  {
    __int32 v13 = a3[22].u16[0];
    v12 |= 0x40u;
    v8[14].i32[0] = v12;
    v8[8].i32[0] = v13;
  }

  if (a3[22].i8[5])
  {
    __int32 v14 = a3[22].u8[4];
    v12 |= 0x80u;
    v8[14].i32[0] = v12;
    v8[8].i32[1] = v14;
  }

  if (a3[9].i8[0])
  {
    float32x2_t v15 = a3[8];
    v12 |= 0x100u;
    v8[14].i32[0] = v12;
    v8[9] = v15;
  }

  if (a3[22].i8[7])
  {
    __int32 v16 = a3[22].u8[6];
    v8[14].i32[0] = v12 | 0x200;
    v8[13].i32[0] = v16;
  }

  uint64_t v17 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v19);
  sub_10010686C(v19);
  if (v23) {
    sub_10010686C(v22);
  }
  return v17;
}

void sub_10023FCB4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_10010686C(&a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10023FD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v19 |= 1u;
  int v6 = v17;
  if (!v17)
  {
    int v6 = operator new(0x38uLL);
    sub_100105C98();
    uint64_t v17 = v6;
  }

  int v7 = v6[13];
  *((_OWORD *)v6 + 1) = *(_OWORD *)a2;
  uint64_t v8 = *(void *)(a2 + 16);
  v6[13] = v7 | 7;
  *((void *)v6 + 4) = v8;
  v19 |= 2u;
  uint64_t v9 = v18;
  if (!v18)
  {
    uint64_t v9 = operator new(0x30uLL);
    sub_1000B4540();
    float32x2_t v18 = v9;
  }

  v9[11] |= 2u;
  __int32 v10 = (_DWORD *)*((void *)v9 + 3);
  if (!v10)
  {
    __int32 v10 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v10);
    *((void *)v9 + 3) = v10;
  }

  v10[99] |= 0x200u;
  float32x2_t v11 = (char *)*((void *)v10 + 42);
  if (!v11)
  {
    float32x2_t v11 = (char *)operator new(0x80uLL);
    sub_1000CDDD8((uint64_t)v11);
    *((void *)v10 + 42) = v11;
  }

  int v12 = *((_DWORD *)v11 + 31);
  *((void *)v11 + 2) = *(void *)a3;
  *((_DWORD *)v11 + 6) = *(_DWORD *)(a3 + 8);
  *((_DWORD *)v11 + 7) = *(_DWORD *)(a3 + 12);
  *((_DWORD *)v11 + std::ostream::~ostream(v2, v3 + 8) = *(_DWORD *)(a3 + 16);
  *((_DWORD *)v11 + 9) = *(_DWORD *)(a3 + 20);
  *((_DWORD *)v11 + 10) = *(_DWORD *)(a3 + 24);
  *((_DWORD *)v11 + 11) = *(_DWORD *)(a3 + 28);
  *((_OWORD *)v11 + 3) = *(_OWORD *)(a3 + 32);
  *((void *)v11 + std::ostream::~ostream(v2, v3 + 8) = *(void *)(a3 + 48);
  *((void *)v11 + 9) = *(void *)(a3 + 56);
  *((_OWORD *)v11 + 5) = *(_OWORD *)(a3 + 64);
  *((_DWORD *)v11 + 24) = *(_DWORD *)(a3 + 80);
  *((_DWORD *)v11 + 25) = *(_DWORD *)(a3 + 84);
  *((_DWORD *)v11 + 26) = *(_DWORD *)(a3 + 88);
  *((_DWORD *)v11 + 31) = v12 | 0x3FFFF;
  *(void *)(v11 + 10std::ostream::~ostream(v2, v3 + 8) = *(void *)(a3 + 92);
  unsigned int v13 = *(unsigned __int8 *)(a3 + 100);
  if (!sub_10005E498(v13)) {
    __assert_rtn( "set_displacing_state",  "NearbyInteractionTypes.pb.h",  20631,  "::CLP::LogEntry::Nearbyd::NI::DisplacingState_IsValid(value)");
  }
  *((_DWORD *)v11 + 31) |= 0x40000u;
  *((_DWORD *)v11 + 29) = v13;
  uint64_t v14 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v16);
  sub_10010686C(v16);
  return v14;
}

void sub_10023FEDC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10023FF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v19 |= 1u;
  int v6 = v17;
  if (!v17)
  {
    int v6 = operator new(0x38uLL);
    sub_100105C98();
    uint64_t v17 = v6;
  }

  int v7 = v6[13];
  *((_OWORD *)v6 + 1) = *(_OWORD *)a2;
  uint64_t v8 = *(void *)(a2 + 16);
  v6[13] = v7 | 7;
  *((void *)v6 + 4) = v8;
  v19 |= 2u;
  uint64_t v9 = v18;
  if (!v18)
  {
    uint64_t v9 = operator new(0x30uLL);
    sub_1000B4540();
    float32x2_t v18 = v9;
  }

  v9[11] |= 2u;
  __int32 v10 = (_DWORD *)*((void *)v9 + 3);
  if (!v10)
  {
    __int32 v10 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v10);
    *((void *)v9 + 3) = v10;
  }

  v10[99] |= 0x400u;
  float32x2_t v11 = (_DWORD *)*((void *)v10 + 43);
  if (!v11)
  {
    float32x2_t v11 = operator new(0x30uLL);
    sub_1000CDDDC((uint64_t)v11);
    *((void *)v10 + 43) = v11;
  }

  int v12 = v11[10];
  *((void *)v11 + 2) = *(void *)a3;
  v11[6] = *(unsigned __int16 *)(a3 + 8);
  int v13 = *(char *)(a3 + 10);
  v11[10] = v12 | 0xF;
  v11[7] = v13;
  uint8_t v11[8] = -128;
  uint64_t v14 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v16);
  sub_10010686C(v16);
  return v14;
}

void sub_100240058( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100240098(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  v21 |= 1u;
  int v6 = v19;
  if (!v19)
  {
    int v6 = operator new(0x38uLL);
    sub_100105C98();
    int v19 = v6;
  }

  int v7 = v6[13];
  *((_OWORD *)v6 + 1) = *(_OWORD *)a2;
  uint64_t v8 = *(void *)(a2 + 16);
  v6[13] = v7 | 7;
  *((void *)v6 + 4) = v8;
  v21 |= 2u;
  uint64_t v9 = v20;
  if (!v20)
  {
    uint64_t v9 = operator new(0x30uLL);
    sub_1000B4540();
    float32x2_t v20 = v9;
  }

  v9[11] |= 2u;
  __int32 v10 = (_DWORD *)*((void *)v9 + 3);
  if (!v10)
  {
    __int32 v10 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v10);
    *((void *)v9 + 3) = v10;
  }

  v10[99] |= 0x800u;
  float32x2_t v11 = (_DWORD *)*((void *)v10 + 44);
  if (!v11)
  {
    float32x2_t v11 = operator new(0x28uLL);
    sub_1000CDDE4((uint64_t)v11);
    *((void *)v10 + 44) = v11;
  }

  int v12 = v11[8];
  v11[6] = *a3;
  uint8_t v11[8] = v12 | 3;
  int v13 = (_DWORD *)*((void *)v11 + 2);
  if (!v13)
  {
    int v13 = operator new(0x48uLL);
    sub_1000CDDE0((uint64_t)v13);
    *((void *)v11 + 2) = v13;
  }

  int v14 = v13[17];
  *((_OWORD *)v13 + 1) = *(_OWORD *)(a3 + 1);
  *((_OWORD *)v13 + 2) = *(_OWORD *)(a3 + 9);
  *((void *)v13 + 6) = *(void *)(a3 + 17);
  v13[14] = *((char *)a3 + 42);
  int v15 = *((char *)a3 + 43);
  v13[17] = v14 | 0x7F;
  v13[15] = v15;
  uint64_t v16 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v18);
  sub_10010686C(v18);
  return v16;
}

void sub_100240210( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100240258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v20 |= 1u;
  int v6 = v18;
  if (!v18)
  {
    int v6 = operator new(0x38uLL);
    sub_100105C98();
    float32x2_t v18 = v6;
  }

  int v7 = v6[13];
  *((_OWORD *)v6 + 1) = *(_OWORD *)a2;
  uint64_t v8 = *(void *)(a2 + 16);
  v6[13] = v7 | 7;
  *((void *)v6 + 4) = v8;
  v20 |= 2u;
  uint64_t v9 = v19;
  if (!v19)
  {
    uint64_t v9 = operator new(0x30uLL);
    sub_1000B4540();
    int v19 = v9;
  }

  v9[11] |= 2u;
  __int32 v10 = (_DWORD *)*((void *)v9 + 3);
  if (!v10)
  {
    __int32 v10 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v10);
    *((void *)v9 + 3) = v10;
  }

  v10[99] |= 0x1000u;
  float32x2_t v11 = (_DWORD *)*((void *)v10 + 45);
  if (!v11)
  {
    float32x2_t v11 = operator new(0x30uLL);
    sub_1000CDDEC((uint64_t)v11);
    *((void *)v10 + 45) = v11;
  }

  int v12 = v11[10];
  uint8_t v11[8] = *(unsigned __int16 *)(a3 + 8);
  *((void *)v11 + 2) = *(void *)a3;
  v11[10] = v12 | 7;
  int v13 = (char *)*((void *)v11 + 3);
  if (!v13)
  {
    int v13 = (char *)operator new(0x38uLL);
    sub_1000CDDE8((uint64_t)v13);
    *((void *)v11 + 3) = v13;
  }

  int v14 = *((_DWORD *)v13 + 12);
  *((_OWORD *)v13 + 1) = *(_OWORD *)(a3 + 10);
  *((void *)v13 + 4) = *(void *)(a3 + 26);
  v13[40] = *(_BYTE *)(a3 + 34);
  *(_WORD *)(v13 + 41) = *(_WORD *)(a3 + 35);
  *((_DWORD *)v13 + 12) = v14 | 0x3F;
  uint64_t v15 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v17);
  sub_10010686C(v17);
  return v15;
}

void sub_1002403D0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100240418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v18 |= 1u;
  int v6 = v16;
  if (!v16)
  {
    int v6 = operator new(0x38uLL);
    sub_100105C98();
    uint64_t v16 = v6;
  }

  int v7 = v6[13];
  *((_OWORD *)v6 + 1) = *(_OWORD *)a2;
  uint64_t v8 = *(void *)(a2 + 16);
  v6[13] = v7 | 7;
  *((void *)v6 + 4) = v8;
  v18 |= 2u;
  uint64_t v9 = v17;
  if (!v17)
  {
    uint64_t v9 = operator new(0x30uLL);
    sub_1000B4540();
    uint64_t v17 = v9;
  }

  v9[11] |= 2u;
  __int32 v10 = (_DWORD *)*((void *)v9 + 3);
  if (!v10)
  {
    __int32 v10 = operator new(0x190uLL);
    sub_10005D930((uint64_t)v10);
    *((void *)v9 + 3) = v10;
  }

  v10[99] |= 0x4000u;
  float32x2_t v11 = (char *)*((void *)v10 + 47);
  if (!v11)
  {
    float32x2_t v11 = (char *)operator new(0x38uLL);
    sub_1000CDDF0((uint64_t)v11);
    *((void *)v10 + 47) = v11;
  }

  int v12 = *((_DWORD *)v11 + 12);
  *((_DWORD *)v11 + 10) = *(unsigned __int16 *)(a3 + 8);
  *((void *)v11 + 2) = *(void *)a3;
  *((_DWORD *)v11 + 12) = v12 | 0xF;
  *(_OWORD *)(v11 + 24) = *(_OWORD *)(a3 + 10);
  uint64_t v13 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v15);
  sub_10010686C(v15);
  return v13;
}

void sub_100240550( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100240590(void *a1, char **a2)
{
  char v4 = sub_1000065CC(a1, *a2);
  sub_1000065CC(v4 + 3, a2[1]);
  return a1;
}

void sub_1002405C8(_Unwind_Exception *exception_object)
{
}

double sub_1002405E4(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!v2) {
    sub_1003A0AEC();
  }
  if ((a2 & 0x80000000) != 0) {
    sub_1003A0B14();
  }
  return *(double *)(v2 + 8LL * a2);
}

double sub_10024061C(uint64_t a1, int a2, int a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (!v3) {
    sub_1003A0B64();
  }
  unsigned int v4 = a2 + *(_DWORD *)(a1 + 20) * a3;
  if ((v4 & 0x80000000) != 0) {
    sub_1003A0B8C();
  }
  return *(double *)(v3 + 8LL * v4);
}

void *sub_10024065C(void *__dst, void *__src, size_t __len)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8LL) {
    sub_100006434();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8LL) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    int v6 = operator new(v7 + 1);
    __dst[1] = __len;
    __dst[2] = v8 | 0x8000000000000000LL;
    *std::string __dst = v6;
  }

  else
  {
    *((_BYTE *)__dst + 23) = __len;
    int v6 = __dst;
    if (!__len) {
      goto LABEL_9;
    }
  }

  memmove(v6, __src, __len);
LABEL_9:
  *((_BYTE *)v6 + __len) = 0;
  return __dst;
}

void *sub_100240704@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  size_t v8 = operator new(0x58uLL);
  BOOL result = sub_100240774(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;
  return result;
}

void sub_100240760(_Unwind_Exception *a1)
{
}

void *sub_100240774(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_1007B7DC8;
  sub_100240814((uint64_t)&v6, (uint64_t)(a1 + 3), a2, a3, a4);
  return a1;
}

void sub_1002407C4(_Unwind_Exception *a1)
{
}

void sub_1002407D8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1007B7DC8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002407E8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1007B7DC8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100240808(uint64_t a1)
{
  return sub_1000B5440(a1 + 24);
}

void sub_100240814(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  double v5 = (std::__shared_weak_count *)a3[1];
  uint64_t v11 = *a3;
  int v12 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }

  sub_1000B5394(a2, &v11, a4, a5);
  size_t v8 = v12;
  if (v12)
  {
    uint64_t v9 = (unint64_t *)&v12->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

void sub_1002408A0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1002408B4()
{
  unsigned __int8 v0 = std::string::insert(&v45, 0LL, "reverseLUT_A");
  __int128 v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = v0->__r_.__value_.__l.__cap_;
  *(_OWORD *)int v46 = v1;
  v0->__r_.__value_.__l.__size_ = 0LL;
  v0->__r_.__value_.__l.__cap_ = 0LL;
  v0->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v2 = std::string::append((std::string *)v46, ".bin");
  __int128 v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  qword_1007FB458 = v2->__r_.__value_.__l.__cap_;
  xmmword_1007FB448 = v3;
  v2->__r_.__value_.__l.__size_ = 0LL;
  v2->__r_.__value_.__l.__cap_ = 0LL;
  v2->__r_.__value_.__r.__words[0] = 0LL;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB448, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v45);
  unsigned int v4 = std::string::insert(&v45, 0LL, "reverseLUT_A");
  __int128 v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = v4->__r_.__value_.__l.__cap_;
  *(_OWORD *)int v46 = v5;
  v4->__r_.__value_.__l.__size_ = 0LL;
  v4->__r_.__value_.__l.__cap_ = 0LL;
  v4->__r_.__value_.__r.__words[0] = 0LL;
  char v6 = std::string::append((std::string *)v46, ".bin");
  __int128 v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  qword_1007FB470 = v6->__r_.__value_.__l.__cap_;
  xmmword_1007FB460 = v7;
  v6->__r_.__value_.__l.__size_ = 0LL;
  v6->__r_.__value_.__l.__cap_ = 0LL;
  v6->__r_.__value_.__r.__words[0] = 0LL;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB460, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v45);
  size_t v8 = std::string::insert(&v45, 0LL, "reverseLUT_A");
  __int128 v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = v8->__r_.__value_.__l.__cap_;
  *(_OWORD *)int v46 = v9;
  v8->__r_.__value_.__l.__size_ = 0LL;
  v8->__r_.__value_.__l.__cap_ = 0LL;
  v8->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v10 = std::string::append((std::string *)v46, ".bin");
  __int128 v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  qword_1007FB488 = v10->__r_.__value_.__l.__cap_;
  xmmword_1007FB478 = v11;
  v10->__r_.__value_.__l.__size_ = 0LL;
  v10->__r_.__value_.__l.__cap_ = 0LL;
  v10->__r_.__value_.__r.__words[0] = 0LL;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB478, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v45);
  int v12 = std::string::insert(&v45, 0LL, "reverseLUT_A");
  __int128 v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = v12->__r_.__value_.__l.__cap_;
  *(_OWORD *)int v46 = v13;
  v12->__r_.__value_.__l.__size_ = 0LL;
  v12->__r_.__value_.__l.__cap_ = 0LL;
  v12->__r_.__value_.__r.__words[0] = 0LL;
  int v14 = std::string::append((std::string *)v46, ".bin");
  __int128 v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  qword_1007FB4A0 = v14->__r_.__value_.__l.__cap_;
  xmmword_1007FB490 = v15;
  v14->__r_.__value_.__l.__size_ = 0LL;
  v14->__r_.__value_.__l.__cap_ = 0LL;
  v14->__r_.__value_.__r.__words[0] = 0LL;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB490, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v45);
  uint64_t v16 = std::string::insert(&v45, 0LL, "reverseLUT_A");
  __int128 v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = v16->__r_.__value_.__l.__cap_;
  *(_OWORD *)int v46 = v17;
  v16->__r_.__value_.__l.__size_ = 0LL;
  v16->__r_.__value_.__l.__cap_ = 0LL;
  v16->__r_.__value_.__r.__words[0] = 0LL;
  int v18 = std::string::append((std::string *)v46, ".bin");
  __int128 v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  qword_1007FB4B8 = v18->__r_.__value_.__l.__cap_;
  xmmword_1007FB4A8 = v19;
  v18->__r_.__value_.__l.__size_ = 0LL;
  v18->__r_.__value_.__l.__cap_ = 0LL;
  v18->__r_.__value_.__r.__words[0] = 0LL;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB4A8, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v45);
  int v20 = std::string::insert(&v45, 0LL, "reverseLUT_A");
  __int128 v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = v20->__r_.__value_.__l.__cap_;
  *(_OWORD *)int v46 = v21;
  v20->__r_.__value_.__l.__size_ = 0LL;
  v20->__r_.__value_.__l.__cap_ = 0LL;
  v20->__r_.__value_.__r.__words[0] = 0LL;
  float32x2_t v22 = std::string::append((std::string *)v46, ".bin");
  __int128 v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  qword_1007FB4D0 = v22->__r_.__value_.__l.__cap_;
  xmmword_1007FB4C0 = v23;
  v22->__r_.__value_.__l.__size_ = 0LL;
  v22->__r_.__value_.__l.__cap_ = 0LL;
  v22->__r_.__value_.__r.__words[0] = 0LL;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB4C0, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v45);
  float32x2_t v24 = std::string::insert(&v45, 0LL, "reverseLUT_A");
  __int128 v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = v24->__r_.__value_.__l.__cap_;
  *(_OWORD *)int v46 = v25;
  v24->__r_.__value_.__l.__size_ = 0LL;
  v24->__r_.__value_.__l.__cap_ = 0LL;
  v24->__r_.__value_.__r.__words[0] = 0LL;
  __int32 v26 = std::string::append((std::string *)v46, ".bin");
  __int128 v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  qword_1007FB4E8 = v26->__r_.__value_.__l.__cap_;
  xmmword_1007FB4D8 = v27;
  v26->__r_.__value_.__l.__size_ = 0LL;
  v26->__r_.__value_.__l.__cap_ = 0LL;
  v26->__r_.__value_.__r.__words[0] = 0LL;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB4D8, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v45);
  uint64_t v28 = std::string::insert(&v45, 0LL, "reverseLUT_A");
  __int128 v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = v28->__r_.__value_.__l.__cap_;
  *(_OWORD *)int v46 = v29;
  v28->__r_.__value_.__l.__size_ = 0LL;
  v28->__r_.__value_.__l.__cap_ = 0LL;
  v28->__r_.__value_.__r.__words[0] = 0LL;
  int v30 = std::string::append((std::string *)v46, ".bin");
  __int128 v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  qword_1007FB500 = v30->__r_.__value_.__l.__cap_;
  xmmword_1007FB4F0 = v31;
  v30->__r_.__value_.__l.__size_ = 0LL;
  v30->__r_.__value_.__l.__cap_ = 0LL;
  v30->__r_.__value_.__r.__words[0] = 0LL;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB4F0, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v45);
  int v32 = std::string::insert(&v45, 0LL, "reverseLUT_A");
  __int128 v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  *(void *)&v46[16] = v32->__r_.__value_.__l.__cap_;
  *(_OWORD *)int v46 = v33;
  v32->__r_.__value_.__l.__size_ = 0LL;
  v32->__r_.__value_.__l.__cap_ = 0LL;
  v32->__r_.__value_.__r.__words[0] = 0LL;
  int v34 = std::string::append((std::string *)v46, ".bin");
  __int128 v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
  qword_1007FB518 = v34->__r_.__value_.__l.__cap_;
  xmmword_1007FB508 = v35;
  v34->__r_.__value_.__l.__size_ = 0LL;
  v34->__r_.__value_.__l.__cap_ = 0LL;
  v34->__r_.__value_.__r.__words[0] = 0LL;
  if ((v46[23] & 0x80000000) != 0) {
    operator delete(*(void **)v46);
  }
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FB508, (void *)&_mh_execute_header);
  *(_OWORD *)int v46 = xmmword_100429964;
  *(_OWORD *)&v46[16] = unk_100429974;
  sub_10015EABC((uint64_t)&unk_1007FB520, (int *)v46, 4LL);
  xmmword_1007FB538 = xmmword_100423CB0;
  unk_1007FB548 = xmmword_100423CC0;
  qword_1007FB560 = 0LL;
  unk_1007FB568 = 0LL;
  qword_1007FB558 = 0x3FD999999999999ALL;
  unk_1007FB570 = xmmword_100423CD0;
  dword_1007FB580 = 5;
  qword_1007FB588 = 0x4000000000000000LL;
  dword_1007FB590 = 5;
  byte_1007FB598 = 0;
  unk_1007FB59C = 0x30000000ALL;
  xmmword_1007FB5A8 = xmmword_100423CE0;
  unk_1007FB5B8 = xmmword_100423CF0;
  xmmword_1007FB5C8 = xmmword_100423D00;
  qword_1007FB5D8 = 0x3FE3333333333333LL;
  dword_1007FB5E0 = 3;
  xmmword_1007FB5E8 = xmmword_100423D10;
  unk_1007FB5F8 = xmmword_100423CF0;
  xmmword_1007FB608 = xmmword_100423CE0;
  qword_1007FB618 = 0x3FE3333333333333LL;
  byte_1007FB620 = 0;
  xmmword_1007FB628 = xmmword_100423D20;
  unk_1007FB638 = xmmword_100423D30;
  __asm { FMOV            V0.2D, #1.0 }

  __int128 v44 = _Q0;
  xmmword_1007FB648 = _Q0;
  qword_1007FB658 = 0xBFD3333333333333LL;
  xmmword_1007FB660 = xmmword_100423D40;
  qword_1007FB670 = 0x3E99999A40000000LL;
  xmmword_1007FB678 = xmmword_100423CC0;
  qword_1007FB690 = 0LL;
  unk_1007FB698 = 0LL;
  qword_1007FB688 = 0x3FD999999999999ALL;
  xmmword_1007FB6A0 = xmmword_100423CD0;
  dword_1007FB6B0 = 5;
  qword_1007FB6B8 = 0x4000000000000000LL;
  dword_1007FB6C0 = 4;
  qword_1007FB6C8 = 0x300000008LL;
  qword_1007FB6D0 = 0xC04E800000000000LL;
  v45.__r_.__value_.__r.__words[0] = 0xC04E800000000000LL;
  sub_10015ED64((uint64_t)&unk_1007FB6D8, (double *)&v45, 1LL);
  xmmword_1007FB6F0 = xmmword_100423D50;
  qword_1007FB700 = 0x4024000000000000LL;
  dword_1007FB708 = 45;
  byte_1007FB710 = 0;
  byte_1007FB728 = 0;
  qword_1007FB730 = 0LL;
  byte_1007FB738 = 0;
  dword_1007FB73C = 1;
  byte_1007FB740 = 1;
  xmmword_1007FB748 = xmmword_100423D60;
  unk_1007FB758 = xmmword_100423D70;
  xmmword_1007FB768 = v44;
  qword_1007FB778 = 0xC059000000000000LL;
  xmmword_1007FB780 = xmmword_100423D80;
  qword_1007FB790 = (uint64_t)vdup_n_s32(0x3DCCCCCDu);
  xmmword_1007FB798 = xmmword_100423CC0;
  qword_1007FB7A8 = 0x3FD999999999999ALL;
  qword_1007FB7B8 = 0LL;
  qword_1007FB7B0 = 0LL;
  xmmword_1007FB7C0 = xmmword_100423CD0;
  dword_1007FB7D0 = 5;
  qword_1007FB7D8 = 0x4000000000000000LL;
  dword_1007FB7E0 = 10;
  qword_1007FB7E8 = 0x4034000000000000LL;
  dword_1007FB7F0 = 3;
  xmmword_1007FB7F8 = xmmword_100423D90;
  __cxa_atexit((void (*)(void *))sub_10015CF8C, &unk_1007FB520, (void *)&_mh_execute_header);
  qword_1007FB810 = 0LL;
  unk_1007FB818 = 0LL;
  qword_1007FB808 = 0LL;
  uint64_t v41 = operator new(0x40uLL);
  qword_1007FB810 = (uint64_t)(v41 + 4);
  unk_1007FB818 = v41 + 4;
  _OWORD *v41 = xmmword_100429988;
  v41[1] = unk_100429998;
  _OWORD v41[2] = xmmword_1004299A8;
  v41[3] = unk_1004299B8;
  qword_1007FB808 = (uint64_t)v41;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007FB808, (void *)&_mh_execute_header);
  qword_1007FB828 = 0LL;
  unk_1007FB830 = 0LL;
  qword_1007FB820 = 0LL;
  uint64_t v42 = operator new(0x10uLL);
  qword_1007FB828 = (uint64_t)(v42 + 1);
  unk_1007FB830 = v42 + 1;
  _OWORD *v42 = xmmword_1004299C8;
  qword_1007FB820 = (uint64_t)v42;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007FB820, (void *)&_mh_execute_header);
  *(void *)int v46 = "AntennaMask_1_NN_V5_Model_DeviceType_201.mlmodelc/fp16_model.espresso";
  *(void *)&v46[8] = "net";
  sub_100240590(&qword_1007FB838, (char **)v46);
  v45.__r_.__value_.__r.__words[0] = (std::string::size_type)"AntennaMask_2_NN_V5_Model_DeviceType_201.mlmodelc/fp16_model.espresso";
  v45.__r_.__value_.__l.__size_ = (std::string::size_type)"net";
  sub_100240590(qword_1007FB868, &v45.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))sub_100233260, &qword_1007FB838, (void *)&_mh_execute_header);
  *(void *)int v46 = "AntennaMask_1_NN_V5_ScalingModel_DeviceType_201";
  *(void *)&v46[8] = "mlmodelc";
  sub_100240590(&qword_1007FB898, (char **)v46);
  v45.__r_.__value_.__r.__words[0] = (std::string::size_type)"AntennaMask_2_NN_V5_ScalingModel_DeviceType_201";
  v45.__r_.__value_.__l.__size_ = (std::string::size_type)"mlmodelc";
  sub_100240590(qword_1007FB8C8, &v45.__r_.__value_.__l.__data_);
  __cxa_atexit((void (*)(void *))sub_100233260, &qword_1007FB898, (void *)&_mh_execute_header);
  sub_1000065CC(qword_1007FB8F8, "input_1");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007FB8F8, (void *)&_mh_execute_header);
  sub_1000065CC(qword_1007FB910, "Identity");
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007FB910, (void *)&_mh_execute_header);
}

void sub_1002412D8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, void *__p, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (byte_1007FB8C7 < 0) {
    sub_1003A0BDC();
  }
  if (byte_1007FB8AF < 0) {
    operator delete((void *)qword_1007FB898);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1002413C4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B8168)[a1]);
}

void *sub_1002413D8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B81C0)[a1]);
}

void *sub_1002413EC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B8208)[a1]);
}

void *sub_100241400@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B8228)[a1]);
}

void sub_10024153C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100241C40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100241FE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100242088(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002421B4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100242364( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1002423C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100242444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002424AC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100242C94( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_100242DF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002432EC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, uint64_t a25, char a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, char a34, uint64_t a35, uint64_t a36, uint64_t a37, char a38, uint64_t a39, uint64_t a40, uint64_t a41, char a42, uint64_t a43, uint64_t a44, uint64_t a45)
{
  sub_100012390((uint64_t)&a15);
  if (a23 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

LABEL_132:
  return result;
}

          qword_1007F4620 = *(void *)(a1 + 536);
          int v117 = *(_OWORD *)(a1 + 488);
          uint64_t v118 = *(_OWORD *)(a1 + 520);
          xmmword_1007F4600 = *(_OWORD *)(a1 + 504);
          unk_1007F4610 = v118;
          xmmword_1007F45E0 = *(_OWORD *)(a1 + 472);
          unk_1007F45F0 = v117;
          char v119 = operator new(0x260uLL);
          sub_10030BF40(v119, &xmmword_1007F45E0, &v142);
LABEL_133:
          char v120 = *v137;
          *uint64_t v137 = (uint64_t)v119;
          if (!v120)
          {
LABEL_135:
            *(double *)(a1 + 160) = a9;
            goto LABEL_143;
          }

        sub_100364A70((uint64_t *)&v14, v6);
        goto LABEL_154;
      case 21:
        sub_100364794((uint64_t *)&v16, byte_1004AD570);
        sub_100364900((uint64_t *)&v15, byte_1004C1738);
        char v6 = &unk_1004C186C;
        goto LABEL_132;
      case 22:
        sub_100364794((uint64_t *)&v16, byte_1004C1AFA);
        sub_100364900((uint64_t *)&v15, byte_1004D5CC2);
        char v6 = &unk_1004D5DF6;
        goto LABEL_132;
      default:
        goto LABEL_154;
    }
  }

  if (a1 <= 199)
  {
    switch(a1)
    {
      case 'd':
        if (!a3)
        {
          __int128 v5 = &unk_1006CDB27;
LABEL_59:
          sub_100364BE0((uint64_t *)&v16, v5);
          goto LABEL_154;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 969;
        break;
      case 'e':
        if (!a3)
        {
          __int128 v5 = &unk_1006CEFCF;
          goto LABEL_59;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 974;
        break;
      case 'f':
        if (!a3)
        {
          __int128 v5 = &unk_1006D0477;
          goto LABEL_59;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 979;
        break;
      case 'g':
        if (!a3)
        {
          __int128 v5 = &unk_1006D191F;
          goto LABEL_59;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 984;
        break;
      case 'h':
        if (!a3)
        {
          __int128 v5 = &unk_1006D2DC7;
          goto LABEL_59;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 989;
        break;
      case 'i':
        if (!a3)
        {
          __int128 v5 = &unk_1006D426F;
          goto LABEL_59;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 994;
        break;
      case 'j':
        if (!a3)
        {
          __int128 v5 = &unk_1006D5717;
          goto LABEL_59;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 999;
        break;
      case 'k':
        if (!a3)
        {
          __int128 v5 = &unk_1006D6BBF;
          goto LABEL_59;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 1004;
        break;
      case 'l':
        if (!a3)
        {
          __int128 v11 = &unk_1006D8067;
          goto LABEL_66;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 1009;
        break;
      case 'm':
        if (!a3)
        {
          __int128 v11 = &unk_1006D90EF;
          goto LABEL_66;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 1014;
        break;
      case 'n':
        if (!a3)
        {
          __int128 v11 = &unk_1006DA177;
          goto LABEL_66;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 1019;
        break;
      case 'o':
        if (!a3)
        {
          __int128 v11 = &unk_1006DB1FF;
LABEL_66:
          sub_100364D4C((uint64_t *)&v16, v11);
          goto LABEL_154;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 1024;
        break;
      case 'p':
        if (!a3)
        {
          __int128 v11 = &unk_1006DC287;
          goto LABEL_66;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 1029;
        break;
      case 'q':
        if (!a3)
        {
          sub_100364EB8((uint64_t *)&v16, byte_1004FEB98);
          sub_100365024((uint64_t *)&v15, byte_100508C80);
          unint64_t v10 = &unk_100508D1C;
          goto LABEL_114;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 1034;
        break;
      case 'r':
        if (!a3)
        {
          sub_100364EB8((uint64_t *)&v16, byte_100508E66);
          sub_100365024((uint64_t *)&v15, byte_100512F4E);
          unint64_t v10 = &unk_100512FEA;
          goto LABEL_114;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 1043;
        break;
      case 's':
        if (!a3)
        {
          sub_100364EB8((uint64_t *)&v16, byte_100513134);
          sub_100365024((uint64_t *)&v15, byte_10051D21C);
          unint64_t v10 = &unk_10051D2B8;
          goto LABEL_114;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 1052;
        break;
      case 't':
        if (!a3)
        {
          sub_100364EB8((uint64_t *)&v16, byte_10051D402);
          sub_100365024((uint64_t *)&v15, byte_1005274EA);
          unint64_t v10 = &unk_100527586;
LABEL_114:
          sub_100365164((uint64_t *)&v14, v10);
          goto LABEL_154;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 1061;
        break;
      case 'u':
        if (!a3)
        {
          sub_100364EB8((uint64_t *)&v16, byte_1005276D0);
          sub_100365024((uint64_t *)&v15, byte_1005317B8);
          unint64_t v10 = &unk_100531854;
          goto LABEL_114;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 1070;
        break;
      case 'v':
        if (!a3)
        {
          sub_100364EB8((uint64_t *)&v16, byte_10053199E);
          sub_100365024((uint64_t *)&v15, byte_10053BA86);
          unint64_t v10 = &unk_10053BB22;
          goto LABEL_114;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 1079;
        break;
      case 'w':
        if (!a3)
        {
          sub_100364EB8((uint64_t *)&v16, byte_10053BC6C);
          sub_100365024((uint64_t *)&v15, byte_100545D54);
          unint64_t v10 = &unk_100545DF0;
          goto LABEL_114;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 1088;
        break;
      case 'x':
        if (!a3)
        {
          sub_100364EB8((uint64_t *)&v16, byte_100545F3A);
          sub_100365024((uint64_t *)&v15, byte_100550022);
          unint64_t v10 = &unk_1005500BE;
          goto LABEL_114;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 1097;
        break;
      case 'y':
        if (!a3)
        {
          sub_100364EB8((uint64_t *)&v16, byte_100550208);
          sub_100365024((uint64_t *)&v15, byte_10055A2F0);
          unint64_t v10 = &unk_10055A38C;
          goto LABEL_114;
        }

        size_t v8 = "accessoryType == AccessoryType::NO_ACCESSORY";
        __int128 v9 = 1106;
        break;
      default:
        goto LABEL_154;
    }

void sub_100244B3C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1002450D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100245314(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002454D4(_Unwind_Exception *a1)
{
  __int128 v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1002457C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100245BDC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_100245E58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100245ED4(uint64_t a1)
{
  return a1;
}

void sub_100245EFC(id *a1)
{
}

void *sub_100245F24(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B7EF8;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100245F68(uint64_t a1, void *a2)
{
  *a2 = off_1007B7EF8;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100245F9C(uint64_t a1)
{
}

void sub_100245FA4(id *a1)
{
}

void sub_100245FCC(uint64_t a1, void *a2, uint64_t *a3)
{
  __int128 v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  uint64_t v4 = *a3;
  int v10 = *((_DWORD *)a3 + 2);
  uint64_t v5 = *(void *)(a1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_1002460BC;
  block[3] = &unk_1007B2E28;
  char v6 = *(dispatch_queue_s **)(v5 + 56);
  block[1] = 3221225472LL;
  void block[4] = v5;
  void block[5] = v4;
  dispatch_async(v6, block);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

uint64_t sub_100246074(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1002460B0()
{
  return &off_1007B7F58;
}

id sub_1002460BC(uint64_t a1)
{
  return objc_msgSend( *(id *)(a1 + 32),  "serviceRequestDidUpdateStatus:",  *(void *)(a1 + 40),  *(unsigned int *)(a1 + 48));
}

uint64_t sub_1002460CC(uint64_t a1)
{
  return a1;
}

void sub_1002460F4(id *a1)
{
}

void *sub_10024611C(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B7F78;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100246160(uint64_t a1, void *a2)
{
  *a2 = off_1007B7F78;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100246194(uint64_t a1)
{
}

void sub_10024619C(id *a1)
{
}

void sub_1002461C4(uint64_t a1, void *a2, __int128 *a3)
{
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  __int128 v6 = a3[1];
  __int128 v25 = *a3;
  __int128 v26 = v6;
  __int128 v27 = a3[2];
  sub_1001376C0(v28, (uint64_t)(a3 + 3));
  sub_1001317DC(v29, (uint64_t)(a3 + 38));
  sub_100137714(v32, (__n128 *)((char *)a3 + 760));
  memcpy(v36, a3 + 55, sizeof(v36));
  __int128 v7 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v12[0]) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#peer-nba,Registering solutionsCallback.",  (uint8_t *)v12,  2u);
  }

  v12[1] = 3321888768LL;
  __int128 v13 = v25;
  uint64_t v8 = *(void *)(a1 + 8);
  __int128 v9 = *(dispatch_queue_s **)(v8 + 56);
  v12[0] = _NSConcreteStackBlock;
  v12[2] = sub_100246540;
  v12[3] = &unk_1007B3B10;
  void v12[4] = v8;
  __int128 v14 = v26;
  __int128 v15 = v27;
  sub_1001376C0(v16, (uint64_t)v28);
  sub_1001317DC(v17, (uint64_t)v29);
  sub_100137714(v20, v32);
  memcpy(v24, v36, sizeof(v24));
  dispatch_async(v9, v12);
  if (v23 && __p)
  {
    float32x2_t v22 = __p;
    operator delete(__p);
  }

  if (v19) {
    sub_100034A98((uint64_t)v18, v18[1]);
  }
  sub_100124BFC((uint64_t)v16);
  if (v35 && v33)
  {
    int v34 = v33;
    operator delete(v33);
  }

  if (v31) {
    sub_100034A98((uint64_t)v30, v30[1]);
  }
  sub_100124BFC((uint64_t)v28);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

void sub_100246424( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (LOBYTE(STACK[0x318])) {
    sub_1003A109C((uint64_t)&a9);
  }
  sub_100124BFC(v11);
  if (LOBYTE(STACK[0x948]))
  {
    __int128 v13 = (void *)STACK[0x920];
    if (STACK[0x920])
    {
      STACK[0x928] = (unint64_t)v13;
      operator delete(v13);
    }
  }

  if (LOBYTE(STACK[0x8D0])) {
    sub_100034A98((uint64_t)&STACK[0x850], (void *)STACK[0x858]);
  }
  sub_100124BFC(v10);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1002464F8(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_100246534()
{
  return &off_1007B7FD8;
}

id sub_100246540(uint64_t a1)
{
  return [*(id *)(a1 + 32) didReceiveNewSolution:a1 + 40];
}

uint64_t sub_100246550(uint64_t a1)
{
  return a1;
}

void sub_100246578(id *a1)
{
}

void *sub_1002465A0(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B7FF8;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1002465E4(uint64_t a1, void *a2)
{
  *a2 = off_1007B7FF8;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100246618(uint64_t a1)
{
}

void sub_100246620(id *a1)
{
}

void sub_100246648(uint64_t a1, void *a2, __int16 *a3)
{
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  __int16 v16 = *a3;
  int v18 = 0LL;
  uint64_t v19 = 0LL;
  __int128 v17 = 0LL;
  sub_1001309C0(&v17, *((const void **)a3 + 1), *((void *)a3 + 2), *((void *)a3 + 2) - *((void *)a3 + 1));
  __int128 v20 = *((_OWORD *)a3 + 2);
  uint64_t v6 = *(void *)(a1 + 8);
  __int128 v7 = *(dispatch_queue_s **)(v6 + 56);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768LL;
  block[2] = sub_100246814;
  block[3] = &unk_1007B3BD8;
  void block[4] = v6;
  __int16 v11 = v16;
  std::string __p = 0LL;
  __int128 v13 = 0LL;
  uint64_t v14 = 0LL;
  sub_1001309C0(&__p, v17, (uint64_t)v18, v18 - (_BYTE *)v17);
  __int128 v15 = v20;
  dispatch_async(v7, block);
  if (__p)
  {
    __int128 v13 = __p;
    operator delete(__p);
  }

  if (v17)
  {
    int v18 = v17;
    operator delete(v17);
  }

  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

void sub_100246774(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *(void **)(v2 - 72);
  if (v4)
  {
    *(void *)(v2 - 64) = v4;
    operator delete(v4);
  }

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_1002467CC(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_100246808()
{
  return &off_1007B8058;
}

id sub_100246814(uint64_t a1)
{
  return [*(id *)(a1 + 32) didReceiveRemoteData:a1 + 40];
}

uint64_t sub_100246824(uint64_t a1)
{
  return a1;
}

void sub_10024684C(id *a1)
{
}

void *sub_100246874(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B8078;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_1002468B8(uint64_t a1, void *a2)
{
  *a2 = off_1007B8078;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_1002468EC(uint64_t a1)
{
}

void sub_1002468F4(id *a1)
{
}

void sub_10024691C(uint64_t a1, void *a2, int *a3)
{
  __int128 v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  int v4 = *a3;
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(dispatch_queue_s **)(v5 + 56);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  _DWORD v9[2] = sub_100246A08;
  void v9[3] = &unk_1007B2EE0;
  void v9[4] = v5;
  int v10 = v4;
  dispatch_async(v6, v9);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

uint64_t sub_1002469C0(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1002469FC()
{
  return &off_1007B80D8;
}

id sub_100246A08(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _nbammsSessionInvalidatedWithReason:*(unsigned int *)(a1 + 40)];
}

uint64_t sub_100246A18(uint64_t a1)
{
  return a1;
}

void sub_100246A40(id *a1)
{
}

void *sub_100246A68(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  *uint64_t v2 = off_1007B80F8;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id sub_100246AAC(uint64_t a1, void *a2)
{
  *a2 = off_1007B80F8;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void sub_100246AE0(uint64_t a1)
{
}

void sub_100246AE8(id *a1)
{
}

void sub_100246B10(uint64_t a1, void *a2, __int128 *a3)
{
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  __int128 v6 = a3[1];
  __int128 v25 = *a3;
  __int128 v26 = v6;
  __int128 v27 = a3[2];
  sub_1001376C0(v28, (uint64_t)(a3 + 3));
  sub_1001317DC(v29, (uint64_t)(a3 + 38));
  sub_100137714(v32, (__n128 *)((char *)a3 + 760));
  memcpy(v36, a3 + 55, sizeof(v36));
  __int128 v7 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v12[0]) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#peer-nba,Registering unsuccessfulRangingCallback.",  (uint8_t *)v12,  2u);
  }

  v12[1] = 3321888768LL;
  __int128 v13 = v25;
  uint64_t v8 = *(void *)(a1 + 8);
  unint64_t v9 = *(dispatch_queue_s **)(v8 + 56);
  v12[0] = _NSConcreteStackBlock;
  v12[2] = sub_100246E8C;
  v12[3] = &unk_1007B3B10;
  void v12[4] = v8;
  __int128 v14 = v26;
  __int128 v15 = v27;
  sub_1001376C0(v16, (uint64_t)v28);
  sub_1001317DC(v17, (uint64_t)v29);
  sub_100137714(v20, v32);
  memcpy(v24, v36, sizeof(v24));
  dispatch_async(v9, v12);
  if (v23 && __p)
  {
    float32x2_t v22 = __p;
    operator delete(__p);
  }

  if (v19) {
    sub_100034A98((uint64_t)v18, v18[1]);
  }
  sub_100124BFC((uint64_t)v16);
  if (v35 && v33)
  {
    int v34 = v33;
    operator delete(v33);
  }

  if (v31) {
    sub_100034A98((uint64_t)v30, v30[1]);
  }
  sub_100124BFC((uint64_t)v28);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

void sub_100246D70( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (LOBYTE(STACK[0x318])) {
    sub_1003A109C((uint64_t)&a9);
  }
  sub_100124BFC(v11);
  if (LOBYTE(STACK[0x948]))
  {
    __int128 v13 = (void *)STACK[0x920];
    if (STACK[0x920])
    {
      STACK[0x928] = (unint64_t)v13;
      operator delete(v13);
    }
  }

  if (LOBYTE(STACK[0x8D0])) {
    sub_100034A98((uint64_t)&STACK[0x850], (void *)STACK[0x858]);
  }
  sub_100124BFC(v10);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  _Unwind_Resume(a1);
}

uint64_t sub_100246E44(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_100246E80()
{
  return &off_1007B8158;
}

id sub_100246E8C(uint64_t a1)
{
  return [*(id *)(a1 + 32) didReceiveUnsuccessfulSolution:a1 + 40];
}

void sub_100246E9C()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  v10[0] = xmmword_100429AF8;
  v10[1] = unk_100429B08;
  sub_10015EABC((uint64_t)&unk_1007FB928, (int *)v10, 4LL);
  xmmword_1007FB940 = xmmword_100423CB0;
  *(_OWORD *)algn_1007FB950 = xmmword_100423CC0;
  qword_1007FB968 = 0LL;
  unk_1007FB970 = 0LL;
  qword_1007FB960 = 0x3FD999999999999ALL;
  unk_1007FB978 = xmmword_100423CD0;
  dword_1007FB988 = 5;
  qword_1007FB990 = 0x4000000000000000LL;
  dword_1007FB998 = 5;
  byte_1007FB9A0 = 0;
  *(void *)&algn_1007FB9A1[3] = 0x30000000ALL;
  xmmword_1007FB9B0 = xmmword_100423CE0;
  unk_1007FB9C0 = xmmword_100423CF0;
  xmmword_1007FB9D0 = xmmword_100423D00;
  qword_1007FB9E0 = 0x3FE3333333333333LL;
  dword_1007FB9E8 = 3;
  xmmword_1007FB9F0 = xmmword_100423D10;
  unk_1007FBA00 = xmmword_100423CF0;
  xmmword_1007FBA10 = xmmword_100423CE0;
  qword_1007FBA20 = 0x3FE3333333333333LL;
  byte_1007FBA28 = 0;
  xmmword_1007FBA30 = xmmword_100423D20;
  unk_1007FBA40 = xmmword_100423D30;
  __asm { FMOV            V0.2D, #1.0 }

  __int128 v8 = _Q0;
  xmmword_1007FBA50 = _Q0;
  qword_1007FBA60 = 0xBFD3333333333333LL;
  xmmword_1007FBA68 = xmmword_100423D40;
  qword_1007FBA78 = 0x3E99999A40000000LL;
  xmmword_1007FBA80 = xmmword_100423CC0;
  qword_1007FBA98 = 0LL;
  unk_1007FBAA0 = 0LL;
  qword_1007FBA90 = 0x3FD999999999999ALL;
  xmmword_1007FBAA8 = xmmword_100423CD0;
  dword_1007FBAB8 = 5;
  qword_1007FBAC0 = 0x4000000000000000LL;
  dword_1007FBAC8 = 4;
  qword_1007FBAD0 = 0x300000008LL;
  qword_1007FBAD8 = 0xC04E800000000000LL;
  unint64_t v9 = 0xC04E800000000000LL;
  sub_10015ED64((uint64_t)&unk_1007FBAE0, (double *)&v9, 1LL);
  xmmword_1007FBAF8 = xmmword_100423D50;
  qword_1007FBB08 = 0x4024000000000000LL;
  dword_1007FBB10 = 45;
  byte_1007FBB18 = 0;
  byte_1007FBB30 = 0;
  qword_1007FBB38 = 0LL;
  byte_1007FBB40 = 0;
  dword_1007FBB44 = 1;
  byte_1007FBB48 = 1;
  xmmword_1007FBB50 = xmmword_100423D60;
  unk_1007FBB60 = xmmword_100423D70;
  xmmword_1007FBB70 = v8;
  qword_1007FBB80 = 0xC059000000000000LL;
  xmmword_1007FBB88 = xmmword_100423D80;
  qword_1007FBB98 = (uint64_t)vdup_n_s32(0x3DCCCCCDu);
  xmmword_1007FBBA0 = xmmword_100423CC0;
  qword_1007FBBB0 = 0x3FD999999999999ALL;
  qword_1007FBBC0 = 0LL;
  qword_1007FBBB8 = 0LL;
  xmmword_1007FBBC8 = xmmword_100423CD0;
  dword_1007FBBD8 = 5;
  qword_1007FBBE0 = 0x4000000000000000LL;
  dword_1007FBBE8 = 10;
  qword_1007FBBF0 = 0x4034000000000000LL;
  dword_1007FBBF8 = 3;
  xmmword_1007FBC00 = xmmword_100423D90;
  __cxa_atexit((void (*)(void *))sub_10015CF8C, &unk_1007FB928, (void *)&_mh_execute_header);
  qword_1007FBC18 = 0LL;
  unk_1007FBC20 = 0LL;
  qword_1007FBC10 = 0LL;
  __int128 v6 = operator new(0x40uLL);
  qword_1007FBC18 = (uint64_t)(v6 + 4);
  unk_1007FBC20 = v6 + 4;
  *__int128 v6 = xmmword_100429B18;
  v6[1] = unk_100429B28;
  _OWORD v6[2] = xmmword_100429B38;
  v6[3] = unk_100429B48;
  qword_1007FBC10 = (uint64_t)v6;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007FBC10, (void *)&_mh_execute_header);
  qword_1007FBC30 = 0LL;
  unk_1007FBC38 = 0LL;
  qword_1007FBC28 = 0LL;
  __int128 v7 = operator new(0x10uLL);
  qword_1007FBC30 = (uint64_t)(v7 + 1);
  unk_1007FBC38 = v7 + 1;
  *__int128 v7 = xmmword_100429B58;
  qword_1007FBC28 = (uint64_t)v7;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007FBC28, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_1002471FC(_Unwind_Exception *a1)
{
}

void sub_100247300(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100247420(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100247540(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002475A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002475F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100247714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002477F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100247888( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100247AC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100247C40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100247D58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_100247E38@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B86F8[a1]);
}

void *sub_100247E4C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B8750[a1]);
}

void *sub_100247E60@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B8798[a1]);
}

void *sub_100247E74@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B87B8[a1]);
}

uint64_t sub_100247E88(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = v2;
    operator delete(v2);
  }

  return a1;
}

uint64_t sub_100247EB8(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (*(void *)a1)
  {
    *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = v2;
    operator delete(v2);
  }

  return a1;
}

void sub_100247FB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100248194(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100248394(id a1)
{
  id v1 = -[NIServerNearbyAccessoryRangingService _initInternal]( objc_alloc(&OBJC_CLASS___NIServerNearbyAccessoryRangingService),  "_initInternal");
  uint64_t v2 = (void *)qword_1007FBF70;
  qword_1007FBF70 = (uint64_t)v1;
}

uint64_t sub_100248514(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100248524(uint64_t a1)
{
}

void sub_10024852C(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1 + 40) + 16), "objectForKey:"));

    if (!v2)
    {
      __int128 v3 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v4 = *(void *)(a1 + 48);
        uint64_t v5 = *(void *)(a1 + 32);
        unsigned int v6 = [*(id *)(*(void *)(a1 + 40) + 16) count];
        *(_DWORD *)uint8_t buf = 138412802;
        *(void *)std::string v82 = v5;
        *(_WORD *)&v82[8] = 2112;
        *(void *)&v82[10] = v4;
        *(_WORD *)&v82[18] = 1024;
        *(_DWORD *)&v82[20] = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#accessory-service,Add client %@ for process %@ (%d previous clients)",  buf,  0x1Cu);
      }

      id v7 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) accessoryConfigData]);
      id v8 = [v7 bytes];

      unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) accessoryConfigData]);
      id v10 = [v9 length];
      std::string __p = 0LL;
      int v73 = 0LL;
      uint64_t v74 = 0LL;
      sub_100030B3C(&__p, v8, (uint64_t)v10 + (void)v8, (size_t)v10);

      size_t v11 = v73 - (_BYTE *)__p;
      if ((unint64_t)(v73 - (_BYTE *)__p) > 0x13)
      {
        uint64_t v12 = 0LL;
        unsigned int v13 = *(unsigned __int16 *)__p;
        BOOL v14 = !*((_WORD *)__p + 1) && v13 == 1;
        BOOL v15 = *((_WORD *)__p + 1) && v13 == 1;
        unsigned int v16 = *((unsigned __int16 *)__p + 8);
        uint64_t v17 = *((unsigned __int16 *)__p + 9);
        do
        {
          if (__PAIR64__(v17, v16) == __PAIR64__( (unsigned __int16)word_10042A0F8[v12 + 1],  (unsigned __int16)word_10042A0F8[v12]))
          {
            int v18 = 1;
            goto LABEL_17;
          }

          v12 += 2LL;
        }

        while (v12 != 6);
        int v18 = 0;
LABEL_17:
        BOOL v19 = v16 == 1 && v17 > 2;
        int v20 = v19;
        int v21 = v16 <= 1 ? v20 : 1;
        int v22 = v13 > 1 || v14;
        if (((v22 | v15) & 1) != 0 && ((v18 | v21) & 1) != 0)
        {
          if (v18)
          {
          }

          else if (v21)
          {
            size_t v11 = 39LL;
          }

          else
          {
            size_t v11 = 0LL;
          }

          *(_DWORD *)uint8_t buf = 0;
          *(_DWORD *)&v82[12] = 0;
          *(_DWORD *)&v82[31] = 0;
          *(void *)&v82[1] = 0LL;
          *(_WORD *)&v82[9] = 0;
          memcpy(buf, __p, v11);
          if (v82[0] <= 0x14u
            && ((1 << v82[0]) & 0x100401) != 0
            && v82[28] <= 1u
            && v82[33] < 2u
            && v82[34] <= 8u
            && ((1 << v82[34]) & 0x10D) != 0)
          {
            uint64_t v89 = *(void *)v82;
            int v88 = *(_DWORD *)buf;
            int v90 = *(_DWORD *)&v82[8];
            int v91 = *(_DWORD *)&v82[12];
            *(_OWORD *)unsigned int v92 = *(_OWORD *)&v82[16];
            *(_DWORD *)&v92[15] = *(_DWORD *)&v82[31];
            char v93 = 1;
            goto LABEL_50;
          }
        }
      }

void sub_100248DCC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100248F7C(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1 + 40) + 24), "objectForKey:"));
    if (v2)
    {
      __int128 v3 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v4 = *(void *)(a1 + 32);
        uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v2 processName]);
        unsigned int v6 = [v2 uwbSessionId];
        unsigned int v7 = [*(id *)(*(void *)(a1 + 40) + 16) count];
        int v12 = 138413058;
        uint64_t v13 = v4;
        __int16 v14 = 2112;
        BOOL v15 = v5;
        __int16 v16 = 1024;
        unsigned int v17 = v6;
        __int16 v18 = 1024;
        unsigned int v19 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#accessory-service,Remove client %@ for process %@ tracking UWB session ID %u (%d clients before removal)",  (uint8_t *)&v12,  0x22u);
      }

      [*(id *)(*(void *)(a1 + 40) + 16) removeObjectForKey:*(void *)(a1 + 32)];
      [*(id *)(*(void *)(a1 + 40) + 24) removeObjectForKey:*(void *)(a1 + 32)];
      id v8 = *(void **)(*(void *)(a1 + 40) + 32LL);
      unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  [v2 uwbSessionId]));
      id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:v9]);
      size_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 interestedClients]);
      [v11 removeObject:*(void *)(a1 + 32)];

      objc_msgSend(*(id *)(a1 + 40), "_updateUwbSessionState:", objc_msgSend(v2, "uwbSessionId"));
      [*(id *)(a1 + 40) _cleanupExcessiveDetachedSessions];
    }
  }

void sub_100249140(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100249220(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = a1 + 40;
    __int128 v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)(a1 + 40) + 16), "objectForKey:"));
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)v2 + 24) objectForKey:*(void *)(a1 + 32)]);
    uint64_t v5 = v4;
    if (v3) {
      BOOL v6 = v4 == 0LL;
    }
    else {
      BOOL v6 = 1;
    }
    if (!v6 && *(unsigned __int8 *)(a1 + 48) != [v4 isRunning])
    {
      unsigned int v7 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v8 = *(void *)(a1 + 32);
        unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v5 processName]);
        unsigned int v10 = [v5 uwbSessionId];
        unsigned int v11 = [v5 isRunning];
        int v12 = *(unsigned __int8 *)(a1 + 48);
        int v17 = 138413314;
        uint64_t v18 = v8;
        __int16 v19 = 2112;
        int v20 = v9;
        __int16 v21 = 1024;
        unsigned int v22 = v10;
        __int16 v23 = 1024;
        unsigned int v24 = v11;
        __int16 v25 = 1024;
        int v26 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#accessory-service,Client %@ for process %@ UWB session ID %u, was running: %d, is now running: %d",  (uint8_t *)&v17,  0x28u);
      }

      [v5 setIsRunning:*(unsigned __int8 *)(a1 + 48)];
      objc_msgSend(*(id *)(a1 + 40), "_updateUwbSessionState:", objc_msgSend(v5, "uwbSessionId"));
      if ([v5 isRunning])
      {
        uint64_t v13 = *(void **)(*(void *)(a1 + 40) + 32LL);
        __int16 v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  [v5 uwbSessionId]));
        BOOL v15 = (void *)objc_claimAutoreleasedReturnValue([v13 objectForKeyedSubscript:v14]);
        __int16 v16 = (void *)objc_claimAutoreleasedReturnValue([v15 shareableConfigData]);

        if (v16) {
          [v3 serviceDidGenerateShareableConfigurationData:v16];
        }
      }
    }
  }

void sub_100249430(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100249548(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _internalPrintableState]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100249734( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, id a26)
{
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_100249768(uint64_t a1, void *a2, void *a3)
{
  id v33 = a2;
  id v5 = a3;
  sub_1000065CC(__p, "Unspecified");
  if (*((_BYTE *)[v5 parsedAccessoryConfigData] + 39))
  {
    BOOL v6 = [v5 parsedAccessoryConfigData];
    if (!v6[39]) {
      sub_100006080();
    }
    int v7 = v6[4];
    uint64_t v8 = "UserInteractive";
    unint64_t v9 = "Unknown";
    if (v7 == 10) {
      unint64_t v9 = "Background";
    }
    if (v7 != 20) {
      uint64_t v8 = v9;
    }
    if (v6[4]) {
      unsigned int v10 = (char *)v8;
    }
    else {
      unsigned int v10 = "Automatic";
    }
    sub_1000065CC(&v34, v10);
    if (SHIBYTE(v37) < 0) {
      operator delete(__p[0]);
    }
    *(_OWORD *)std::string __p = v34;
    uint64_t v37 = v35;
    unsigned int v11 = [v5 parsedAccessoryConfigData];
    if (!v11[39] || (v32 = *(_DWORD *)v11, int v12 = [v5 parsedAccessoryConfigData], !v12[39])) {
      sub_100006080();
    }
    uint64_t v31 = HIWORD(v32);
    unsigned int v29 = *((_DWORD *)v12 + 4);
    uint64_t v30 = HIWORD(v29);
  }

  else
  {
    uint64_t v30 = 0LL;
    uint64_t v31 = 0LL;
    LOWORD(v32) = 0;
    LOWORD(v29) = 0;
  }

  uint64_t v13 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  __int16 v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"    [%@]", v33));
  [v13 addObject:v14];

  BOOL v15 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  __int16 v16 = (void *)objc_claimAutoreleasedReturnValue([v5 processName]);
  id v17 = [v5 uwbSessionId];
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v5 niConfiguration]);
  __int16 v19 = (void *)objc_claimAutoreleasedReturnValue([v18 accessoryDiscoveryToken]);
  int v20 = (void *)objc_claimAutoreleasedReturnValue([v19 descriptionInternal]);
  __int16 v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"        Process: %@. UWB session ID: %u. Token: %@. Running: %d",  v16,  v17,  v20,  [v5 isRunning]));
  [v15 addObject:v21];

  unsigned int v22 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  if (v37 >= 0) {
    __int16 v23 = __p;
  }
  else {
    __int16 v23 = (void **)__p[0];
  }
  unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue([v5 niConfiguration]);
  __int16 v25 = (void *)objc_claimAutoreleasedReturnValue([v24 accessoryConfigData]);
  id v26 = sub_100023D80(v25, 0);
  __int128 v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
  uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"        Versions: [accessory %d.%d, UWB %d.%d]. Rate: %s. Blob: %@",  (unsigned __int16)v32,  v31,  (unsigned __int16)v29,  v30,  v23,  v27));
  [v22 addObject:v28];

  if (SHIBYTE(v37) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100249A5C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20, uint64_t a21, uint64_t a22, void *__p, uint64_t a24, int a25, __int16 a26, char a27, char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100249AE8(uint64_t a1, void *a2, void *a3)
{
  id v51 = a2;
  id v5 = a3;
  sub_100247E4C(*((_DWORD *)[v5 serviceRequest] + 1), __p);
  if (v55 >= 0) {
    BOOL v6 = __p;
  }
  else {
    BOOL v6 = (void **)__p[0];
  }
  int v52 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableString stringWithUTF8String:](&OBJC_CLASS___NSMutableString, "stringWithUTF8String:", v6));
  if (v55 < 0) {
    operator delete(__p[0]);
  }
  if (*(void *)[v5 rangingSession])
  {
    id v7 = [v5 rangingSession];
    if (*(_BYTE *)(*(void *)v7 + 682LL)) {
      uint64_t v8 = *(unsigned __int16 *)(*(void *)v7 + 680LL);
    }
    else {
      uint64_t v8 = 0LL;
    }
    int v53 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Ticket [%d]",  v8));
  }

  else
  {
    int v53 = @"None";
  }

  if (*((_DWORD *)[v5 serviceRequest] + 1) == 6)
  {
    unint64_t v9 = [v5 serviceRequest];
    if (v9[433]) {
      unsigned __int8 v10 = v9[432];
    }
    else {
      unsigned __int8 v10 = -1;
    }
    unsigned int v11 = (unsigned __int8 *)[v5 serviceRequest];
    int v12 = v11[435];
    unsigned int v13 = v11[434];
    __int16 v14 = [v5 serviceRequest];
    if (v12) {
      uint64_t v15 = v13;
    }
    else {
      uint64_t v15 = 0LL;
    }
    if (v14[437]) {
      unsigned __int8 v16 = v14[436];
    }
    else {
      unsigned __int8 v16 = 0;
    }
    objc_msgSend(v52, "appendFormat:", @" [type %d][cap %d to %d]", v10, v15, v16);
  }

  else if (*((_DWORD *)[v5 serviceRequest] + 1) == 5)
  {
    id v17 = [v5 serviceRequest];
    if (*((_BYTE *)v17 + 424)) {
      uint64_t v18 = v17[52];
    }
    else {
      uint64_t v18 = 0LL;
    }
    objc_msgSend(v52, "appendFormat:", @" [peer-addr %llu]", v18);
  }

  __int16 v19 = (unsigned __int8 *)[v5 serviceRequest];
  int v20 = v19[372];
  int v21 = *((unsigned __int16 *)v19 + 185);
  unsigned int v22 = (unsigned __int8 *)[v5 serviceRequest];
  int v23 = v22[376];
  int v24 = *((unsigned __int16 *)v22 + 187);
  __int16 v25 = [v5 serviceRequest];
  if (v20) {
    int v26 = v21;
  }
  else {
    int v26 = 0;
  }
  if (v23) {
    int v27 = v24;
  }
  else {
    int v27 = 0;
  }
  int v49 = v27;
  int v50 = v26;
  if (v25[380]) {
    int v28 = *((unsigned __int16 *)v25 + 189);
  }
  else {
    int v28 = 0;
  }
  unsigned int v29 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"    [%@]", v51));
  [v29 addObject:v30];

  uint64_t v31 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  unsigned int v32 = (void *)objc_claimAutoreleasedReturnValue([v5 processName]);
  id v33 = (void *)objc_claimAutoreleasedReturnValue([v5 interestedClients]);
  id v34 = [v33 count];
  id v35 = [v5 persistWhileDetached];
  double v36 = *(double *)(a1 + 40);
  [v5 initTime];
  double v38 = v37;
  double v39 = *(double *)(a1 + 40);
  [v5 timeOfLatestSessionLifecycleChange];
  uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"        Process: %@. Clients: %d. Persist-detached: %d. Ranging: %@. Age: total %.2f s, in-state %.2f s",  v32,  v34,  v35,  v53,  v36 - v38,  v39 - v40));
  [v31 addObject:v41];

  uint64_t v42 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  int v43 = *((unsigned __int8 *)[v5 serviceRequest] + 1);
  if (v43 == 100)
  {
    uint64_t v44 = "Unspecified";
  }

  else if (v43 == 1)
  {
    uint64_t v44 = "Responder";
  }

  else
  {
    uint64_t v44 = "Initiator";
  }

  uint64_t v45 = __p;
  sub_1000065CC(__p, v44);
  if (v55 < 0) {
    uint64_t v45 = (void **)__p[0];
  }
  int v46 = [v5 serviceRequest];
  if (*((_BYTE *)v46 + 408)) {
    uint64_t v47 = v46[50];
  }
  else {
    uint64_t v47 = 0LL;
  }
  uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"        Role: %s. Mode: %@. Local-addr: %llu. Interval: %d ms. Job cfg options: 0x%X. Job timeouts: disc %d, reacq %d, track %d, job %d",  v45,  v52,  v47,  (v49 * v50 * v28) / 0x4B0uLL,  *((unsigned int *)[v5 serviceRequest] + 17),  *((unsigned __int16 *)objc_msgSend(v5, "serviceRequest") + 36),  *((unsigned __int16 *)objc_msgSend(v5, "serviceRequest") + 37),  *((unsigned __int16 *)objc_msgSend(v5, "serviceRequest") + 38),  *((unsigned __int16 *)objc_msgSend(v5, "serviceRequest") + 39)));
  [v42 addObject:v48];

  if (v55 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100249F44( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20, void *a21, void *a22, void *__p, uint64_t a24, int a25, __int16 a26, char a27, char a28)
{
  _Unwind_Resume(a1);
}

void sub_10024A17C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_10024A19C(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _internalPrintableState]);
  uint64_t v2 = sub_100024190(@"Accessory Ranging Service", v1);

  return v2;
}

void sub_10024A1E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024A6C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10024A794(uint64_t result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(result + 52) = *(_BYTE *)(a2 + 52);
  *(_DWORD *)(result + 4std::ostream::~ostream(v2, v3 + 8) = v2;
  return result;
}

void sub_10024A7AC(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  id v12 = a2;
  id v7 = a3;
  uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8LL);
  if (!*(_BYTE *)(v8 + 52)) {
    sub_100006080();
  }
  unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(v8 + 48)));
  unsigned int v10 = [v12 isEqualToNumber:v9];

  if (v10)
  {
    uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 8LL);
    if (*(_BYTE *)(v11 + 52)) {
      *(_BYTE *)(v11 + 52) = 0;
    }
    *a4 = 1;
  }
}

void sub_10024A864( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10024A888(uint64_t a1, _BYTE *a2, _BYTE *a3)
{
  int v3 = *(unsigned __int8 *)(a1 + 37);
  int v4 = *(unsigned __int8 *)(a1 + 38);
  *a2 = 0;
  *a3 = 0;
  if (v3 == 1)
  {
    id v7 = sub_100005150();
    if (sub_100355260((uint64_t)v7))
    {
      *a2 = 1;
    }

    else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      sub_1003A12E8();
    }

    if (v4 == 3)
    {
      if (+[NIPlatformInfo isInternalBuild](&OBJC_CLASS___NIPlatformInfo, "isInternalBuild"))
      {
        *a2 = 0;
        *a3 = 1;
      }
    }
  }

void sub_10024A92C(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  id v17 = a2;
  id v7 = a3;
  uint64_t v8 = *(void **)(a1 + 32);
  unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v7 processName]);
  LOBYTE(vstd::ostream::~ostream(v2, v3 + 8) = [v8 isEqualToString:v9];

  if ((v8 & 1) != 0)
  {
    if (*(_BYTE *)(a1 + 64))
    {
      if (*((_DWORD *)[v7 serviceRequest] + 1) != 6) {
        goto LABEL_26;
      }
      unsigned int v10 = *((unsigned __int16 *)[v7 serviceRequest] + 216);
      if (v10 < 0x100) {
        goto LABEL_26;
      }
      if (*(_BYTE *)(a1 + 65))
      {
      }

      else if ((_BYTE)v10 && *(_BYTE *)(a1 + 66))
      {
        goto LABEL_26;
      }
    }

    else if (*((_DWORD *)[v7 serviceRequest] + 1) != 5)
    {
      goto LABEL_26;
    }

    if (*((_BYTE *)[v7 accessoryConfigData] + 39))
    {
      uint64_t v11 = *(unsigned __int16 **)(a1 + 56);
      if (!*((_BYTE *)v11 + 39)
        || (id v12 = (unsigned __int16 *)[v7 accessoryConfigData], !*((_BYTE *)v12 + 39)))
      {
        sub_100006080();
      }

      if (*v11 == *v12
        && v11[1] == v12[1]
        && *((unsigned __int8 *)v11 + 4) == *((unsigned __int8 *)v12 + 4)
        && v11[8] == v12[8]
        && v11[9] == v12[9]
        && *((unsigned __int8 *)v11 + 32) == *((unsigned __int8 *)v12 + 32)
        && *((unsigned __int8 *)v11 + 37) == *((unsigned __int8 *)v12 + 37))
      {
        int v13 = *((unsigned __int8 *)v11 + 38);
        int v14 = *((unsigned __int8 *)v12 + 38);
        if (!*(_BYTE *)(a1 + 64) && v13 == v14)
        {
          int v13 = *(unsigned __int16 *)((char *)v11 + 33);
          int v14 = *(unsigned __int16 *)((char *)v12 + 33);
        }

        if (v13 == v14)
        {
          unsigned int v15 = [v17 unsignedIntValue];
          uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8LL);
          *(_DWORD *)(v16 + 4std::ostream::~ostream(v2, v3 + 8) = v15;
          *(_BYTE *)(v16 + 52) = 1;
          *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 1;
          *a4 = 1;
        }
      }
    }
  }

void sub_10024AB10( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

LABEL_195:
                      goto LABEL_196;
                    }
                  }

                  void *v112 = (32 * (v104 & 0x7F)) | (2 * (v98 & 0x7F)) | ((_WORD)v105 << 12) | 1;
LABEL_196:
                  unsigned int v96 = 0;
                  unsigned int v95 = 1LL;
                  if ((v102 & 1) == 0)
                  {
                    uint64_t v64 = v145;
                    goto LABEL_198;
                  }
                }

                if (v107)
                {
                  *(_DWORD *)uint8_t buf = 67109120;
                  *(_DWORD *)&uint8_t buf[4] = v95;
                  _os_log_impl( (void *)&_mh_execute_header,  v106,  OS_LOG_TYPE_DEFAULT,  "#accessory-service,Prep session objects: Subrating config %d is empty",  buf,  8u);
                }

                goto LABEL_195;
              }

LABEL_198:
              __int128 v115 = sub_10024C5CC((uint64_t)[v149 backgroundMode]);
              else {
                uint64_t v116 = 0;
              }
              *((void *)a5 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
              *((void *)a5 + 9) = 0LL;
              *(void *)((char *)a5 + 7std::ostream::~ostream(v2, v3 + 8) = 0LL;
              *((void *)a5 + 12) = 0LL;
              *((void *)a5 + 13) = 0LL;
              *((void *)a5 + 11) = 0LL;
              int v117 = *((unsigned __int8 *)a5 + 112);
              *(_BYTE *)a5 = 0;
              *((_BYTE *)a5 + 40) = 0;
              *((void *)a5 + 6) = 250000LL;
              *((_BYTE *)a5 + 56) = 1;
              *((_DWORD *)a5 + 15) = v115;
              *((_WORD *)a5 + 43) = v116;
              if (!v117) {
                *((_BYTE *)a5 + 112) = 1;
              }
              if (*((_BYTE *)a4 + 355))
              {
                if (!v148) {
                  goto LABEL_207;
                }
                if (*((_BYTE *)a4 + 435))
                {
                  if (*((_BYTE *)a4 + 437))
                  {
LABEL_207:
                    LODWORD(__p[0]) = 131073;
                    uint64_t v118 = *v135;
                    else {
                      char v119 = 9;
                    }
                    char v120 = sub_10024C904(*((unsigned __int8 *)a4 + 354));
                    uint64_t v121 = [v10 uwbSessionId];
                    if (v133) {
                      char v122 = 200;
                    }
                    else {
                      char v122 = 100;
                    }
                    if ((_DWORD)v144) {
                      int v123 = 3;
                    }
                    else {
                      int v123 = 2;
                    }
                    if (HIDWORD(v144)) {
                      int v123 = 8;
                    }
                    char v124 = v148;
                    if (v148)
                    {
                      if (!*((_BYTE *)a4 + 437) || !*((_BYTE *)a4 + 435)) {
                        sub_100006080();
                      }
                      char v124 = *((_BYTE *)a4 + 436);
                      __int128 v125 = *((_BYTE *)a4 + 434);
                    }

                    else
                    {
                      __int128 v125 = 0;
                    }

                    sub_10024C6F4( v135,  &v151,  v119,  v120,  v121,  v136,  v137,  (int)v59,  (uint64_t)buf,  v166 != 0,  (uint64_t)&v170,  v28,  v122,  v148,  v123,  v124,  v125);
                    sub_10024CA58((__int16 *)buf, __p);
                    *int v147 = (id)objc_claimAutoreleasedReturnValue( +[NSData dataWithBytes:length:]( &OBJC_CLASS___NSData,  "dataWithBytes:length:",  __p[0],  (char *)__p[1] - (char *)__p[0]));
                    if (__p[0])
                    {
                      __p[1] = __p[0];
                      operator delete(__p[0]);
                    }

LABEL_238:
}

void sub_10024BE10( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void *a22, void *a23, void *a24, void *a25, void *a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, void *a32, void *a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, void *__p, uint64_t a40, int a41, __int16 a42, char a43, char a44, char a45)
{
  if (a44 < 0) {
    operator delete(__p);
  }
  sub_100012390((uint64_t)&a45);

  _Unwind_Resume(a1);
}

uint64_t sub_10024C008(int a1, char a2)
{
  uint64_t v2 = 0LL;
  if (a1 && (a2 & 1) == 0)
  {
    int v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    int v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:@"AccessoryCoordinateScheduling"]);

    if (v4 && (uint64_t v6 = objc_opt_class(&OBJC_CLASS___NSNumber, v5), (objc_opt_isKindOfClass(v4, v6) & 1) != 0)) {
      uint64_t v2 = (uint64_t)[v4 BOOLValue];
    }
    else {
      uint64_t v2 = 1LL;
    }
  }

  return v2;
}

void sub_10024C09C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10024C0B8(uint64_t *a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 4);
  std::mutex::lock((std::mutex *)(a1 + 4));
  uint64_t v3 = *((int *)a1 + 6);
  *((_DWORD *)a1 + 6) = v3 + 1;
  uint64_t v4 = *a1;
  uint64_t v5 = *(unsigned __int16 *)(v4 + 2 * v3);
  std::mutex::unlock(v2);
  return v5;
}

void sub_10024C110(_OWORD *a1@<X8>)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKey:@"NIAccessorySubratingOverrides_Subrate"]);

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:@"NIAccessorySubratingOverrides_DistanceThreshold"]);

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:@"NIAccessorySubratingOverrides_Hysteresis"]);

  if (v3
    && v5
    && v7
    && (uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSArray, v8), (objc_opt_isKindOfClass(v3, v9) & 1) != 0)
    && (uint64_t v11 = objc_opt_class(&OBJC_CLASS___NSArray, v10), (objc_opt_isKindOfClass(v5, v11) & 1) != 0)
    && (uint64_t v13 = objc_opt_class(&OBJC_CLASS___NSArray, v12), (objc_opt_isKindOfClass(v7, v13) & 1) != 0)
    && (id v14 = [v3 count], v14 == objc_msgSend(v5, "count"))
    && (id v15 = [v3 count], v15 == objc_msgSend(v7, "count")))
  {
    uint64_t v16 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v29) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "#accessory-service,Prep session objects: Overriding subrating parameters",  (uint8_t *)&v29,  2u);
    }

    id v17 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      int v29 = 138412290;
      uint64_t v30 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "#accessory-service,Prep session objects: Overrides for subrate: %@",  (uint8_t *)&v29,  0xCu);
    }

    uint64_t v18 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      int v29 = 138412290;
      uint64_t v30 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "#accessory-service,Prep session objects: Overrides for distance threshold: %@",  (uint8_t *)&v29,  0xCu);
    }

    __int16 v19 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      int v29 = 138412290;
      uint64_t v30 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "#accessory-service,Prep session objects: Overrides for hysteresis: %@",  (uint8_t *)&v29,  0xCu);
    }

    for (uint64_t i = 0LL; i != 48; i += 24LL)
    {
      int v21 = (char *)a1 + i;
      char *v21 = 0;
      *((void *)v21 + 1) = 0LL;
      *((void *)v21 + 2) = 0LL;
    }

    unint64_t v22 = 0LL;
    char v23 = 1;
    do
    {
      char v24 = v23;
      __int16 v25 = (void *)objc_claimAutoreleasedReturnValue([v3 objectAtIndex:v22]);
      *((_BYTE *)a1 + 24 * v22) = [v25 intValue];

      int v26 = (void *)objc_claimAutoreleasedReturnValue([v5 objectAtIndex:v22]);
      *((double *)a1 + 3 * v22 + 1) = (double)(int)[v26 intValue];

      int v27 = (void *)objc_claimAutoreleasedReturnValue([v7 objectAtIndex:v22]);
      *((double *)a1 + 3 * v22 + 2) = (double)(int)[v27 intValue];

      char v23 = 0;
      unint64_t v22 = 1LL;
    }

    while ((v24 & 1) != 0);
  }

  else
  {
    int v28 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v29) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "#accessory-service,Prep session objects: Using default subrating parameters",  (uint8_t *)&v29,  2u);
    }

    *a1 = xmmword_10042A108;
    a1[1] = unk_10042A118;
    a1[2] = xmmword_10042A128;
  }
}

void sub_10024C4C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10024C544(uint64_t a1, unsigned int a2, unsigned int a3, __int16 a4)
{
  uint64_t v4 = 0LL;
  if (a2 && a3)
  {
    uint64_t v5 = 0LL;
    for (char i = 1; ; char i = 0)
    {
      char v7 = i;
      uint64_t v8 = a1 + 2 * v5;
      __int16 v11 = *(_WORD *)(v8 + 19);
      uint64_t v10 = (_WORD *)(v8 + 19);
      char v9 = v11;
      if ((v11 & 1) == 0) {
        break;
      }
      uint64_t v5 = 1LL;
      if ((v7 & 1) == 0) {
        return ((v9 & 1) == 0) & v10;
      }
    }

    if ((i & 1) != 0 || (unsigned int v12 = *(unsigned __int16 *)(a1 + 19), ((v12 >> 1) & 0xF) < a2) && ((v12 >> 5) & 0x7F) < a3)
    {
      *uint64_t v10 = (2 * (a2 & 0xF)) & 0x1F | (32 * (a3 & 0x7F)) | (a4 << 12) | 1;
      LOBYTE(sub_1000316D8(v11, v10) = 1;
    }

    else
    {
      LOBYTE(sub_1000316D8(v11, v10) = 0;
    }

    return ((v9 & 1) == 0) & v10;
  }

  return v4;
}

uint64_t sub_10024C5CC(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  [v2 doubleForKey:@"AccessoryResponderUncertaintySecondsOverride"];
  double v4 = v3;
  if (v3 <= 0.0)
  {
    else {
      uint64_t v6 = 10000000LL;
    }
  }

  else
  {
    uint64_t v5 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 134217984;
      double v9 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#accessory-service,Uncertainty window override: %.3f seconds",  (uint8_t *)&v8,  0xCu);
    }

    uint64_t v6 = (v4 * 1000.0 * 1000.0);
  }

  return v6;
}

void sub_10024C6DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

std::string::const_reference sub_10024C6F4@<X0>( unsigned __int16 *a1@<X0>, const std::string *a2@<X1>, char a3@<W2>, char a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t a11, __int16 a12, __int16 a13, char a14, char a15, char a16, char a17)
{
  std::string::size_type size = a2->__r_.__value_.__s.__size_;
  if ((size & 0x80u) != 0LL) {
    std::string::size_type size = a2->__r_.__value_.__l.__size_;
  }
  if (size != 2) {
    sub_1003A1490();
  }
  uint64_t v20 = 0LL;
  int v21 = *a1;
  unsigned int v22 = a1[1];
  while (v21 != (unsigned __int16)word_10042A0F8[v20] || v22 != (unsigned __int16)word_10042A0F8[v20 + 1])
  {
    v20 += 2LL;
    if (v20 == 6) {
      sub_1003A1468();
    }
  }

  __int16 v32 = a6;
  double v33 = 0.0;
  if (v33 > 65535.0) {
    sub_1003A1418();
  }
  if (v21 != 1 || v22 >= 3) {
    sub_1003A1440();
  }
  __int16 v27 = a7;
  int v28 = a8 * a7 * (int)v33;
  *(_WORD *)a9 = 1;
  if (a10) {
    char v29 = 3;
  }
  else {
    char v29 = 2;
  }
  *(_WORD *)(a9 + 2) = v22;
  *(_BYTE *)(a9 + 4) = 0x1D1917u >> (8 * v22);
  *(_BYTE *)(a9 + 5) = *std::string::at(a2, 0LL);
  std::string::const_reference result = std::string::at(a2, 1uLL);
  *(_BYTE *)(a9 + 6) = *result;
  *(_DWORD *)(a9 + 7) = a5;
  *(_BYTE *)(a9 + 11) = a4;
  *(_BYTE *)(a9 + 12) = a3;
  *(_WORD *)(a9 + 13) = v27;
  *(_WORD *)(a9 + 15) = v32;
  *(_WORD *)(a9 + memset(&__p[7], 0, 17) = v28;
  *(_BYTE *)(a9 + 19) = v29;
  *(_WORD *)(a9 + 26) = a12;
  *(_WORD *)(a9 + 2std::ostream::~ostream(v2, v3 + 8) = a13;
  *(_BYTE *)(a9 + 30) = a14;
  *(_BYTE *)(a9 + 31) = a15;
  *(_BYTE *)(a9 + 32) = a16;
  *(_BYTE *)(a9 + 33) = a17;
  *(_DWORD *)(a9 + 20) = *(_DWORD *)a11;
  *(_WORD *)(a9 + 24) = *(_WORD *)(a11 + 4);
  return result;
}

uint64_t sub_10024C904(uint64_t a1)
{
  uint64_t result = 9LL;
  switch((int)a1)
  {
    case 0:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
      char v5 = a1;
      double v3 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT))
      {
        sub_10032AEA4(v5, &v6);
        sub_1003A14B8();
      }

      double v4 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)uint8_t buf = 136315650;
        int v8 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/Session/NIServerNearbyAcc"
             "essoryRangingService.mm";
        __int16 v9 = 1024;
        int v10 = 1705;
        __int16 v11 = 2080;
        unsigned int v12 = "AppleToFiRaPreamble";
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "#accessory-service,%s:%d: assertion failure in %s",  buf,  0x1Cu);
      }

      abort();
    case 10:
    case 11:
    case 12:
      uint64_t result = a1;
      break;
    default:
      return result;
  }

  return result;
}

void sub_10024CA40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_10024CA58@<X0>(__int16 *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = 0LL;
  int v3 = (unsigned __int16)*a1;
  uint64_t v4 = a1[1];
  while (v3 != (unsigned __int16)word_10042A0F8[v2] || (unsigned __int16)word_10042A0F8[v2 + 1] != (unsigned __int16)v4)
  {
    v2 += 2LL;
    if (v2 == 6) {
      sub_1003A150C();
    }
  }

  size_t v5 = qword_10042A4E0[v4];
  *a2 = 0LL;
  a2[1] = 0LL;
  a2[2] = 0LL;
  return sub_100030B3C(a2, a1, (uint64_t)a1 + v5, v5);
}

void sub_10024D3B4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20, void *a21, void *a22, void *a23, void *a24, void *a25, void *a26, void *a27, void *a28, void *a29, void *a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, void *a44, uint64_t a45, char a46)
{
  _Block_object_dispose(&a46, 8);
  _Unwind_Resume(a1);
}

void sub_10024D590(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKeyedSubscript:v3]);

  if (!v4)
  {
    size_t v5 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A1610((uint64_t)v3, v5, v6);
    }
    *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
  }
}

void sub_10024D618(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024DAAC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33)
{
  sub_100012390((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_10024DF74( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10024DFF0(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  size_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) objectForKeyedSubscript:a2]);
  unsigned int v6 = [v5 isRunning];

  if (v6)
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
    *a3 = 1;
  }

void sub_10024E054(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10024E064(id a1, NIServerNearbyAccessoryRangingServiceClient *a2)
{
}

void sub_10024E224( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_10024E27C(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 interestedClients]);
  id v7 = [v6 count];

  if (!v7) {
    [*(id *)(a1 + 32) addObject:v8];
  }
}

void sub_10024E2EC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10024E748( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, void *__p, uint64_t a27, int a28, __int16 a29, char a30, char a31)
{
  _Unwind_Resume(a1);
}

void sub_10024E7C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = (void *)*((void *)WeakRetained + 4);
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 40)));
    unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:v5]);

    if (v6 && *(void *)[v6 rangingSession])
    {
      int v7 = sub_100272BA0(*(void *)[v6 rangingSession], (__int128 *)objc_msgSend(v6, "startOptions"));
      if (v7)
      {
        id v8 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        {
          sub_100275DD0(v7, v12);
          sub_1003A1768();
        }

        uint64_t v9 = *(unsigned int *)(a1 + 40);
        v10[0] = _NSConcreteStackBlock;
        v10[1] = 3221225472LL;
        _OWORD v10[2] = sub_10024E97C;
        void v10[3] = &unk_1007B83E8;
        void v10[4] = *(void *)(a1 + 44);
        int v11 = *(_DWORD *)(a1 + 52);
        [v3 _relayToClientsOfUWBSessionId:v9 blockToRelay:v10];
      }
    }

    else
    {
    }
  }
}

void sub_10024E93C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10024E97C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "serviceRequestDidUpdateStatus:", *(void *)(a1 + 32), *(unsigned int *)(a1 + 40));
}

id sub_10024E98C(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "serviceRequestDidUpdateStatus:", *(void *)(a1 + 32), *(unsigned int *)(a1 + 40));
}

void sub_10024EA6C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

BOOL sub_10024EA94(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 uwbSessionId] == *(_DWORD *)(a1 + 32);
}

void sub_10024EAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) objectForKey:a2]);
  (*(void (**)(uint64_t))(v2 + 16))(v2);
}

void sub_10024EB10( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

uint64_t sub_10024EB6C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  sub_1001896FC( (void *)a1,  *(const void **)a2,  *(void *)(a2 + 8),  (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 1);
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 850045863LL;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + sub_100012390(v1 + 72) = 0u;
  *(void *)(a1 + 8std::ostream::~ostream(v2, v3 + 8) = 0LL;
  if (*(void *)(a1 + 8) == *(void *)a1) {
    __assert_rtn( "AccessoryRangingIntervalPicker",  "NIServerNearbyAccessoryRangingService.mm",  207,  "fRangingIntervalOptionsMsec.size() > 0");
  }
  return a1;
}

void sub_10024EC08(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + std::ostream::~ostream(v2, v3 + 8) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(a1);
}

__n128 sub_10024EC2C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 39) == *(unsigned __int8 *)(a2 + 39))
  {
    if (*(_BYTE *)(a1 + 39))
    {
      __n128 result = *(__n128 *)a2;
      __int128 v3 = *(_OWORD *)(a2 + 16);
      *(void *)(a1 + 31) = *(void *)(a2 + 31);
      *(__n128 *)a1 = result;
      *(_OWORD *)(a1 + 16) = v3;
    }
  }

  else if (*(_BYTE *)(a1 + 39))
  {
    *(_BYTE *)(a1 + 39) = 0;
  }

  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v4 = *(void *)(a2 + 4);
    *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
    *(void *)(a1 + 4) = v4;
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    __n128 result = *(__n128 *)(a2 + 20);
    *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
    *(__n128 *)(a1 + 20) = result;
    *(_BYTE *)(a1 + 39) = 1;
  }

  return result;
}

void sub_10024EC9C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1007B8488;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10024ECAC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1007B8488;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_10024ECCC(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_10024ECDC(uint64_t a1)
{
  return a1;
}

void sub_10024ED04(id *a1)
{
}

void *sub_10024ED2C(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  *uint64_t v2 = off_1007B84D8;
  v2[1] = *(id *)(a1 + 8);
  *((_DWORD *)v2 + 4) = *(_DWORD *)(a1 + 16);
  return v2;
}

id sub_10024ED78(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1007B84D8;
  id result = *(id *)(a1 + 8);
  *(void *)(a2 + std::ostream::~ostream(v2, v3 + 8) = result;
  *(_DWORD *)(a2 + 16) = *(_DWORD *)(a1 + 16);
  return result;
}

void sub_10024EDB8(uint64_t a1)
{
}

void sub_10024EDC0(id *a1)
{
}

void sub_10024EDE8(uint64_t a1, void *a2, uint64_t *a3)
{
  __int128 v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  uint64_t v4 = *(void *)(a1 + 8);
  id v5 = *(dispatch_queue_s **)(v4 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10024EEE8;
  block[3] = &unk_1007B8540;
  void block[4] = v4;
  int v9 = *(_DWORD *)(a1 + 16);
  uint64_t v10 = *a3;
  int v11 = *((_DWORD *)a3 + 2);
  dispatch_async(v5, block);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

uint64_t sub_10024EEA0(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_10024EEDC()
{
  return &off_1007B8560;
}

id sub_10024EEE8(uint64_t a1)
{
  return _objc_msgSend( *(id *)(a1 + 32),  "_serviceRequestForUWBSessionID:didUpdateStatus:",  *(unsigned int *)(a1 + 40),  *(void *)(a1 + 44),  *(unsigned int *)(a1 + 52));
}

uint64_t sub_10024EF00(uint64_t a1)
{
  return a1;
}

void sub_10024EF28(id *a1)
{
}

void *sub_10024EF50(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  *uint64_t v2 = off_1007B8580;
  v2[1] = *(id *)(a1 + 8);
  *((_DWORD *)v2 + 4) = *(_DWORD *)(a1 + 16);
  return v2;
}

id sub_10024EF9C(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1007B8580;
  id result = *(id *)(a1 + 8);
  *(void *)(a2 + std::ostream::~ostream(v2, v3 + 8) = result;
  *(_DWORD *)(a2 + 16) = *(_DWORD *)(a1 + 16);
  return result;
}

void sub_10024EFDC(uint64_t a1)
{
}

void sub_10024EFE4(id *a1)
{
}

void sub_10024F00C(uint64_t a1, void *a2, int *a3)
{
  __int128 v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  int v4 = *a3;
  uint64_t v5 = *(void *)(a1 + 8);
  unsigned int v6 = *(dispatch_queue_s **)(v5 + 8);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  _DWORD v9[2] = sub_10024F100;
  void v9[3] = &unk_1007B14E0;
  void v9[4] = v5;
  int v10 = *(_DWORD *)(a1 + 16);
  int v11 = v4;
  dispatch_async(v6, v9);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

uint64_t sub_10024F0B8(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_10024F0F4()
{
  return &off_1007B8600;
}

id sub_10024F100(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_10024F15C;
  v4[3] = &unk_1007B85E0;
  uint64_t v2 = *(unsigned int *)(a1 + 40);
  int v5 = *(_DWORD *)(a1 + 44);
  return [v1 _relayToClientsOfUWBSessionId:v2 blockToRelay:v4];
}

id sub_10024F15C(uint64_t a1, void *a2)
{
  return _[a2 serviceDidInvalidateWithReason:*(unsigned int *)(a1 + 32)];
}

uint64_t sub_10024F168(uint64_t a1)
{
  return a1;
}

void sub_10024F190(id *a1)
{
}

void *sub_10024F1B8(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  *uint64_t v2 = off_1007B8620;
  v2[1] = *(id *)(a1 + 8);
  *((_DWORD *)v2 + 4) = *(_DWORD *)(a1 + 16);
  return v2;
}

id sub_10024F204(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1007B8620;
  id result = *(id *)(a1 + 8);
  *(void *)(a2 + std::ostream::~ostream(v2, v3 + 8) = result;
  *(_DWORD *)(a2 + 16) = *(_DWORD *)(a1 + 16);
  return result;
}

void sub_10024F244(uint64_t a1)
{
}

void sub_10024F24C(id *a1)
{
}

void sub_10024F274(uint64_t a1, void *a2, __int128 *a3)
{
  int v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0LL;
  a2[1] = 0LL;
  __int128 v6 = a3[1];
  __int128 v25 = *a3;
  __int128 v26 = v6;
  __int128 v27 = a3[2];
  sub_1001376C0(v28, (uint64_t)(a3 + 3));
  sub_1001317DC(v29, (uint64_t)(a3 + 38));
  sub_100137714(v32, (__n128 *)((char *)a3 + 760));
  memcpy(v36, a3 + 55, sizeof(v36));
  uint64_t v7 = *(void *)(a1 + 8);
  unint64_t v8 = *(dispatch_queue_s **)(v7 + 8);
  v11[1] = 3321888768LL;
  __int128 v14 = v27;
  __int128 v13 = v26;
  v11[0] = _NSConcreteStackBlock;
  void v11[2] = sub_10024F5B4;
  void v11[3] = &unk_1007B86B8;
  void v11[4] = v7;
  int v24 = *(_DWORD *)(a1 + 16);
  __int128 v12 = v25;
  sub_1001376C0(v15, (uint64_t)v28);
  sub_1001317DC(v16, (uint64_t)v29);
  sub_100137714(v19, v32);
  memcpy(v23, v36, sizeof(v23));
  dispatch_async(v8, v11);
  if (v22 && __p)
  {
    int v21 = __p;
    operator delete(__p);
  }

  if (v18) {
    sub_100034A98((uint64_t)v17, v17[1]);
  }
  sub_100124BFC((uint64_t)v15);
  if (v35 && v33)
  {
    id v34 = v33;
    operator delete(v33);
  }

  if (v31) {
    sub_100034A98((uint64_t)v30, v30[1]);
  }
  sub_100124BFC((uint64_t)v28);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

void sub_10024F498( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (LOBYTE(STACK[0x318])) {
    sub_10039E190((uint64_t)&a9);
  }
  sub_100124BFC(v11);
  if (LOBYTE(STACK[0x948]))
  {
    __int128 v13 = (void *)STACK[0x920];
    if (STACK[0x920])
    {
      STACK[0x928] = (unint64_t)v13;
      operator delete(v13);
    }
  }

  if (LOBYTE(STACK[0x8D0])) {
    sub_100034A98((uint64_t)&STACK[0x850], (void *)STACK[0x858]);
  }
  sub_100124BFC(v10);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  _Unwind_Resume(a1);
}

uint64_t sub_10024F56C(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_10024F5A8()
{
  return &off_1007B86E8;
}

uint64_t sub_10024F5B4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(unsigned int *)(a1 + 1496);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3321888768LL;
  _OWORD v6[2] = sub_10024F738;
  v6[3] = &unk_1007B8680;
  __int128 v4 = *(_OWORD *)(a1 + 56);
  __int128 v7 = *(_OWORD *)(a1 + 40);
  __int128 v8 = v4;
  __int128 v9 = *(_OWORD *)(a1 + 72);
  sub_1001376C0(v10, a1 + 88);
  sub_1001317DC(v11, a1 + 648);
  sub_100137714(v14, (__n128 *)(a1 + 800));
  memcpy(v18, (const void *)(a1 + 920), sizeof(v18));
  [v2 _relayToClientsOfUWBSessionId:v3 blockToRelay:v6];
  if (v17 && __p)
  {
    uint64_t v16 = __p;
    operator delete(__p);
  }

  if (v13) {
    sub_100034A98((uint64_t)v12, v12[1]);
  }
  return sub_100124BFC((uint64_t)v10);
}

void sub_10024F6F4(_Unwind_Exception *a1)
{
}

id sub_10024F738(uint64_t a1, void *a2)
{
  return _[a2 serviceDidReceiveNewSolution:a1 + 32];
}

void *sub_10024F744(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 32);
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 32) = v4;
  sub_1001376C0((_BYTE *)(a1 + 80), a2 + 80);
  sub_1001317DC((_BYTE *)(a1 + 640), a2 + 640);
  sub_100137714((__n128 *)(a1 + 792), (__n128 *)(a2 + 792));
  return memcpy((void *)(a1 + 912), (const void *)(a2 + 912), 0x239uLL);
}

void sub_10024F7B0(_Unwind_Exception *a1)
{
  if (*(_BYTE *)(v2 + 784)) {
    sub_1003A17EC(v2);
  }
  sub_100124BFC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10024F7DC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 904))
  {
    uint64_t v2 = *(void **)(a1 + 864);
    if (v2)
    {
      *(void *)(a1 + 8sub_100012390(v1 + 72) = v2;
      operator delete(v2);
    }
  }

  if (*(_BYTE *)(a1 + 784)) {
    sub_100034A98(a1 + 656, *(void **)(a1 + 664));
  }
  return sub_100124BFC(a1 + 80);
}

void sub_10024F828()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_10024F8A4(_Unwind_Exception *a1)
{
}

void sub_10024F8BC()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10042A0C8;
      v1[1] = unk_10042A0D8;
      v1[2] = xmmword_10042A0E8;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_10024F95C(_Unwind_Exception *a1)
{
}

void sub_10024F974()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v41);
  uint64_t v1 = std::string::insert(&v41, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v3 = std::string::append(&v42, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007FBC50 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007FBC40 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FBC40, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v41);
  __int128 v5 = std::string::insert(&v41, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  __int128 v7 = std::string::append(&v42, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007FBC68 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007FBC58 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FBC58, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v41);
  __int128 v9 = std::string::insert(&v41, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v11 = std::string::append(&v42, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007FBC80 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007FBC70 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FBC70, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v41);
  char v13 = std::string::insert(&v41, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v15 = std::string::append(&v42, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007FBC98 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007FBC88 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FBC88, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v41);
  char v17 = std::string::insert(&v41, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  __int16 v19 = std::string::append(&v42, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007FBCB0 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007FBCA0 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FBCA0, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v41);
  int v21 = std::string::insert(&v41, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  char v23 = std::string::append(&v42, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007FBCC8 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007FBCB8 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FBCB8, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v41);
  __int128 v25 = std::string::insert(&v41, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  __int128 v27 = std::string::append(&v42, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007FBCE0 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007FBCD0 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FBCD0, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v41);
  char v29 = std::string::insert(&v41, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  char v31 = std::string::append(&v42, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007FBCF8 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007FBCE8 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FBCE8, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v41);
  double v33 = std::string::insert(&v41, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  char v35 = std::string::append(&v42, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007FBD10 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007FBD00 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FBD00, (void *)&_mh_execute_header);
  qword_1007FBD20 = 0LL;
  unk_1007FBD28 = 0LL;
  qword_1007FBD18 = 0LL;
  double v37 = operator new(6uLL);
  qword_1007FBD20 = (uint64_t)(v37 + 3);
  unk_1007FBD28 = v37 + 3;
  *(_DWORD *)double v37 = 12976308;
  v37[2] = 162;
  qword_1007FBD18 = (uint64_t)v37;
  __cxa_atexit((void (*)(void *))sub_100247E88, &qword_1007FBD18, (void *)&_mh_execute_header);
  qword_1007FBD38 = 0LL;
  unk_1007FBD40 = 0LL;
  qword_1007FBD30 = 0LL;
  double v38 = operator new(0xCuLL);
  qword_1007FBD38 = (uint64_t)(v38 + 3);
  unk_1007FBD40 = v38 + 3;
  *(void *)double v38 = 0x4C8045C04A40480LL;
  void v38[2] = 82576440;
  qword_1007FBD30 = (uint64_t)v38;
  __cxa_atexit((void (*)(void *))sub_100247E88, &qword_1007FBD30, (void *)&_mh_execute_header);
  qword_1007FBD50 = 0LL;
  unk_1007FBD58 = 0LL;
  qword_1007FBD48 = 0LL;
  double v39 = operator new(0xCuLL);
  qword_1007FBD50 = (uint64_t)(v39 + 3);
  unk_1007FBD58 = v39 + 3;
  *(void *)double v39 = 0x1F801C201E601D4LL;
  v39[2] = 27132336;
  qword_1007FBD48 = (uint64_t)v39;
  __cxa_atexit((void (*)(void *))sub_100247E88, &qword_1007FBD48, (void *)&_mh_execute_header);
  qword_1007FBD68 = 0LL;
  unk_1007FBD70 = 0LL;
  qword_1007FBD60 = 0LL;
  double v40 = operator new(0xCuLL);
  qword_1007FBD68 = (uint64_t)(v40 + 3);
  unk_1007FBD70 = v40 + 3;
  *(void *)double v40 = 0x8DC087008B80894LL;
  v40[2] = 150997068;
  qword_1007FBD60 = (uint64_t)v40;
  __cxa_atexit((void (*)(void *))sub_100247E88, &qword_1007FBD60, (void *)&_mh_execute_header);
  qword_1007FBD80 = 0LL;
  unk_1007FBD88 = 0LL;
  qword_1007FBD78 = 0LL;
  sub_1001896FC( &qword_1007FBD78,  (const void *)qword_1007FBD18,  qword_1007FBD20,  (qword_1007FBD20 - qword_1007FBD18) >> 1);
  __cxa_atexit((void (*)(void *))sub_100247E88, &qword_1007FBD78, (void *)&_mh_execute_header);
  sub_10024EB6C((uint64_t)&unk_1007FBD90, (uint64_t)&qword_1007FBD18);
  __cxa_atexit((void (*)(void *))sub_100247EB8, &unk_1007FBD90, (void *)&_mh_execute_header);
  sub_10024EB6C((uint64_t)&unk_1007FBDF0, (uint64_t)&qword_1007FBD30);
  __cxa_atexit((void (*)(void *))sub_100247EB8, &unk_1007FBDF0, (void *)&_mh_execute_header);
  sub_10024EB6C((uint64_t)&unk_1007FBE50, (uint64_t)&qword_1007FBD48);
  __cxa_atexit((void (*)(void *))sub_100247EB8, &unk_1007FBE50, (void *)&_mh_execute_header);
  sub_10024EB6C((uint64_t)&unk_1007FBEB0, (uint64_t)&qword_1007FBD60);
  __cxa_atexit((void (*)(void *))sub_100247EB8, &unk_1007FBEB0, (void *)&_mh_execute_header);
  sub_10024EB6C((uint64_t)qword_1007FBF10, (uint64_t)&qword_1007FBD78);
  __cxa_atexit((void (*)(void *))sub_100247EB8, qword_1007FBF10, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_1002501A8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10025021C(uint64_t a1)
{
  *(_BYTE *)a1 = 0;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 40) = 0LL;
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(_BYTE *)(a1 + 24) = 0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A17F8();
  }
  sub_10025027C(a1);
  return a1;
}

void sub_10025027C(uint64_t a1)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A18A8();
  }
  LOBYTE(v4) = 0;
  *((void *)&v4 + 1) = 0LL;
  double v5 = 0.0;
  if (sub_1003205E8(&v3, (char *)&v4 + 8, &v5))
  {
    LOBYTE(v4) = 1;
    if (*(_BYTE *)a1 && vabdd_f64(*(double *)(a1 + 8) - *(double *)(a1 + 16), *((double *)&v4 + 1) - v5) <= 0.000001)
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
        sub_1003A187C();
      }
      *(_OWORD *)(a1 + 24) = v4;
      *(double *)(a1 + 40) = v5;
    }

    else
    {
      __int128 v2 = (_OWORD *)(a1 + 24);
      if (*(_BYTE *)(a1 + 24)
        && vabdd_f64(*(double *)(a1 + 32) - *(double *)(a1 + 40), *((double *)&v4 + 1) - v5) <= 0.000001)
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
          sub_1003A1850();
        }
        *(_OWORD *)a1 = *v2;
        *(void *)(a1 + 16) = *(void *)(a1 + 40);
        *__int128 v2 = v4;
        *(double *)(a1 + 40) = v5;
      }

      else
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
          sub_1003A1824();
        }
        *(_OWORD *)a1 = v4;
        *(double *)(a1 + 16) = v5;
        *(_BYTE *)(a1 + 24) = 0;
      }
    }

    sub_100250908((unsigned __int8 *)a1);
  }

uint64_t sub_100250408(uint64_t a1, double a2)
{
  __int128 v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A1938(v4, v5, v6, v7, v8, v9, v10, v11);
  }
  sub_10025027C(a1);
  if (*(_BYTE *)a1 && *(_BYTE *)(a1 + 24))
  {
    double v12 = *(double *)(a1 + 8);
    if (v12 <= a2 && (double v13 = *(double *)(a1 + 32), v13 >= a2))
    {
      __int128 v22 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
      {
        int v23 = 134218496;
        double v24 = v12;
        __int16 v25 = 2048;
        double v26 = a2;
        __int16 v27 = 2048;
        double v28 = v13;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "getMachContinuousTimeSec: Order OK: startAbs %.9f targetAbs %.9f endAbs %.9f",  (uint8_t *)&v23,  0x20u);
        double v13 = *(double *)(a1 + 32);
        __int128 v22 = (os_log_s *)qword_1008000A0;
      }

      double v15 = *(double *)(a1 + 40) - v13 + a2;
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG)) {
        sub_1003A18D4();
      }
    }

    else
    {
      uint64_t v14 = qword_1008000A0;
      double v15 = 0.0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        double v16 = *(double *)(a1 + 32);
        int v23 = 134218496;
        double v24 = v12;
        __int16 v25 = 2048;
        double v26 = a2;
        __int16 v27 = 2048;
        double v28 = v16;
        char v17 = "getMachContinuousTimeSec: Order not OK: startAbs %.9f targetAbs %.9f endAbs %.9f";
        __int128 v18 = (os_log_s *)v14;
        uint32_t v19 = 32;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v17, (uint8_t *)&v23, v19);
      }
    }
  }

  else
  {
    uint64_t v20 = qword_1008000A0;
    double v15 = 0.0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v23) = 0;
      char v17 = "getMachContinuousTimeSec: start/end times not valid";
      __int128 v18 = (os_log_s *)v20;
      uint32_t v19 = 2;
      goto LABEL_11;
    }
  }

  return *(void *)&v15;
}

uint64_t sub_10025061C(uint64_t a1, double a2)
{
  __int128 v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A1A04(v4, v5, v6, v7, v8, v9, v10, v11);
  }
  sub_10025027C(a1);
  if (*(_BYTE *)a1 && *(_BYTE *)(a1 + 24))
  {
    double v12 = *(double *)(a1 + 16);
    if (v12 <= a2 && (double v13 = *(double *)(a1 + 40), v13 >= a2))
    {
      __int128 v22 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
      {
        int v23 = 134218496;
        double v24 = v12;
        __int16 v25 = 2048;
        double v26 = a2;
        __int16 v27 = 2048;
        double v28 = v13;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "getMachAbsoluteTimeSec: Order OK: startCont %.9f targetCont %.9f endCont %.9f",  (uint8_t *)&v23,  0x20u);
        double v13 = *(double *)(a1 + 40);
        __int128 v22 = (os_log_s *)qword_1008000A0;
      }

      double v15 = a2 - (v13 - *(double *)(a1 + 32));
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG)) {
        sub_1003A19A0();
      }
    }

    else
    {
      uint64_t v14 = qword_1008000A0;
      double v15 = 0.0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        double v16 = *(double *)(a1 + 40);
        int v23 = 134218496;
        double v24 = v12;
        __int16 v25 = 2048;
        double v26 = a2;
        __int16 v27 = 2048;
        double v28 = v16;
        char v17 = "getMachAbsoluteTimeSec: Order not OK: startCont %.9f targetCont %.9f endCont %.9f";
        __int128 v18 = (os_log_s *)v14;
        uint32_t v19 = 32;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v17, (uint8_t *)&v23, v19);
      }
    }
  }

  else
  {
    uint64_t v20 = qword_1008000A0;
    double v15 = 0.0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v23) = 0;
      char v17 = "getMachAbsoluteTimeSec: start/end times not valid";
      __int128 v18 = (os_log_s *)v20;
      uint32_t v19 = 2;
      goto LABEL_11;
    }
  }

  return *(void *)&v15;
}

uint64_t sub_100250830(double a1)
{
  __int128 v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A1B08(v2, v3, v4, v5, v6, v7, v8, v9);
  }
  if ((sub_1003205E8(&v14, v13, &v12) & 1) != 0)
  {
    double v10 = v14 - (v12 - a1);
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
      sub_1003A1A6C();
    }
  }

  else
  {
    double v10 = 0.0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A1AD0();
    }
  }

  return *(void *)&v10;
}

void sub_100250908(unsigned __int8 *a1)
{
  int v2 = *a1;
  uint64_t v3 = (os_log_s *)qword_1008000A0;
  BOOL v4 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG);
  if (v2)
  {
    if (v4)
    {
      uint64_t v20 = *((void *)a1 + 1);
      int v22 = 134217984;
      uint64_t v23 = v20;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "PRMachTimeConverter: startAbs: %.9f",  (uint8_t *)&v22,  0xCu);
      uint64_t v3 = (os_log_s *)qword_1008000A0;
    }

    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
      sub_1003A1C30((uint64_t)a1, v3, v5, v6, v7, v8, v9, v10);
    }
  }

  else if (v4)
  {
    sub_1003A1C04();
  }

  int v11 = a1[24];
  double v12 = (os_log_s *)qword_1008000A0;
  BOOL v13 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG);
  if (v11)
  {
    if (v13)
    {
      uint64_t v21 = *((void *)a1 + 4);
      int v22 = 134217984;
      uint64_t v23 = v21;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "PRMachTimeConverter: endAbs: %.9f",  (uint8_t *)&v22,  0xCu);
      double v12 = (os_log_s *)qword_1008000A0;
    }

    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
      sub_1003A1B9C((uint64_t)a1, v12, v14, v15, v16, v17, v18, v19);
    }
  }

  else if (v13)
  {
    sub_1003A1B70();
  }

void sub_100250A98( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void *sub_100250AA8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B88F0[a1]);
}

void *sub_100250ABC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B8948[a1]);
}

void *sub_100250AD0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B8990[a1]);
}

void *sub_100250AE4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B89B0[a1]);
}

void sub_100250C70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100251180(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1002512E8(_Unwind_Exception *a1)
{
  BOOL v4 = v3;

  _Unwind_Resume(a1);
}

void sub_100251414(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100251558( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  double v12 = v11;

  _Unwind_Resume(a1);
}

id sub_100251588(const char *a1)
{
  uint64_t v1 = NSStringFromSelector(a1);
  int v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"'%@': method not supported for this configuration",  v2));

  NSErrorUserInfoKey v7 = NSLocalizedDescriptionKey;
  uint64_t v8 = v3;
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v8,  &v7,  1LL));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"com.apple.NearbyInteraction",  -5889LL,  v4));

  return v5;
}

void sub_100251678(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100251710( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  double v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1002517A4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  double v12 = v11;

  _Unwind_Resume(a1);
}

void sub_100251838( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  double v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1002518CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  double v12 = v11;

  _Unwind_Resume(a1);
}

void sub_100251960( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  double v12 = v11;

  _Unwind_Resume(a1);
}

void sub_100251B34( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100251C3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100251D40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100251E4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100251F2C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10025204C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100252128(void *a1)
{
  id v1 = a1;
  int v2 = v1;
  if (v1)
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v1 rawToken]);
    id v4 = sub_1002521A0((uint64_t)v3);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  return v5;
}

void sub_100252184(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002521A0(uint64_t a1)
{
  int v2 = (void *)OPACKDecodeData(a1, 8LL, v14);
  if (v2 && (uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSDictionary, v1), (objc_opt_isKindOfClass(v2, v3) & 1) != 0))
  {
    id v4 = v2;
  }

  else
  {
    uint64_t v5 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A1D64(v5, v6, v7, v8, v9, v10, v11, v12);
    }
    id v4 = 0LL;
  }

  return v4;
}

void sub_100252230(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100252240(void *a1)
{
  id v1 = a1;
  int v2 = v1;
  if (v1)
  {
    Data = (void *)OPACKEncoderCreateData(v1, 8LL, v15);
    id v4 = Data;
    if (Data)
    {
      id v5 = Data;
    }

    else
    {
      uint64_t v6 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_1003A1D98(v6, v7, v8, v9, v10, v11, v12, v13);
      }
    }
  }

  else
  {
    id v4 = 0LL;
  }

  return v4;
}

void sub_1002522D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1002522E0(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v4)
  {
    if (v3)
    {
      id v6 = sub_1002521A0((uint64_t)v4);
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      id v8 = [v7 mutableCopy];
      [v8 addEntriesFromDictionary:v3];
      id v9 = sub_100252240(v8);
      id v10 = (id)objc_claimAutoreleasedReturnValue(v9);
    }

    else
    {
      id v10 = v4;
    }
  }

  else
  {
    id v10 = 0LL;
  }

  return v10;
}

void sub_10025237C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

CFStringRef sub_1002523A8(uint64_t a1)
{
  id v1 = @"NISessionPauseSourceInvalid";
  if (a1 == 1) {
    id v1 = @"NISessionPauseSourceUser";
  }
  if (a1 == 2) {
    return @"NISessionPauseSourceInterruption";
  }
  else {
    return v1;
  }
}

void *sub_1002523D4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B8AD0)[a1]);
}

void *sub_1002523E8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B8B28)[a1]);
}

void *sub_1002523FC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B8B70)[a1]);
}

void *sub_100252410@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B8B90)[a1]);
}

uint64_t sub_100252424(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  *(void *)a1 = &off_1007B89E0;
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = off_1007B8A40;
  *(void *)(a1 + 16) = dispatch_queue_create("com.apple.nearbyd.coexmanager", 0LL);
  id v6 = v5;
  *(void *)(a1 + 24) = v6;
  mach_service = xpc_connection_create_mach_service( "com.apple.WirelessCoexManager",  *(dispatch_queue_t *)(a1 + 16),  0LL);
  *(void *)(a1 + 32) = mach_service;
  *(_WORD *)(a1 + 40) = 10;
  *(_BYTE *)(a1 + 50) = 0;
  *(_WORD *)(a1 + 52) = 0;
  *(_BYTE *)(a1 + 54) = 0;
  *(_BYTE *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 42) = 0;
  *(_DWORD *)(a1 + 45) = 0;
  *(void *)(a1 + 64) = a3;
  *(_BYTE *)(a1 + sub_100012390(v1 + 72) = 0;
  *(void *)(a1 + 82) = 0LL;
  *(void *)(a1 + 74) = 0LL;
  *(_WORD *)(a1 + 90) = 0;
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472LL;
  handler[2] = sub_100252574;
  handler[3] = &unk_1007B5708;
  void handler[4] = a1;
  xpc_connection_set_event_handler(mach_service, handler);
  xpc_connection_resume(*(xpc_connection_t *)(a1 + 32));
  sub_10025278C(a1);
  v9[0] = 0;
  memset(&v9[2], 0, 14);
  sub_1002528A4(a1, v9);

  return a1;
}

void sub_100252540(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100252574(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  if (v3 == &_xpc_error_connection_invalid && os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_1003A1DCC();
  }
  sub_1002525FC(v4, v3);
}

void sub_1002525EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002525FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_type_t type = xpc_get_type(v3);
  if (type == (xpc_type_t)&_xpc_type_dictionary)
  {
    sub_100252B80(a1, v3);
  }

  else if (type == (xpc_type_t)&_xpc_type_error)
  {
    if (v3 == &_xpc_error_connection_interrupted)
    {
      sub_10025278C(a1);
      sub_1002528A4(a1, (BOOL *)(a1 + 72));
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_1003A1DF8();
      }
    }

    else
    {
      id v8 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        string = xpc_dictionary_get_string(v3, _xpc_error_key_description);
        sub_1003A1E24((uint64_t)string, (uint64_t)&v10, v8);
      }
    }
  }

  else
  {
    id v5 = xpc_copy_description(v3);
    id v6 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A1E60((uint64_t)v5, v6, v7);
    }
    free(v5);
  }
}

void sub_100252764(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10025278C(uint64_t a1)
{
  xpc_object_t v2 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_uint64(v2, "kWCMRegisterProcess_ProcessId", 0x1DuLL);
  keys[0] = "kMessageId";
  keys[1] = "kMessageArgs";
  values[0] = xpc_uint64_create(1uLL);
  id v3 = v2;
  values[1] = v3;
  sub_1002539F0(a1, (const char *const *)keys, values, 2);
  for (uint64_t i = 1LL; i != -1; --i)
}

void sub_100252868(_Unwind_Exception *a1)
{
  for (uint64_t i = 8LL; i != -8; i -= 8LL)

  _Unwind_Resume(a1);
}

void sub_1002528A4(uint64_t a1, BOOL *a2)
{
  *(_OWORD *)(a1 + sub_100012390(v1 + 72) = *(_OWORD *)a2;
  xpc_object_t v4 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_BOOL(v4, "kWCMRCU1PowerOn", *a2);
  xpc_dictionary_set_uint64(v4, "kWCMRCU1ChannelNum", *((unsigned __int16 *)a2 + 1));
  xpc_dictionary_set_uint64(v4, "kWCMRCU1OnDuration", *((unsigned __int16 *)a2 + 2));
  xpc_dictionary_set_uint64(v4, "kWCMRCU1CycleLength", *((unsigned __int16 *)a2 + 3));
  xpc_dictionary_set_uint64(v4, "kWCMRCU1NumerOfCycles", *((unsigned __int16 *)a2 + 4));
  xpc_dictionary_set_uint64(v4, "kWCMRCU1FrameFormat", *((unsigned __int16 *)a2 + 5));
  xpc_dictionary_set_uint64(v4, "kWCMRCU1UseCaseNum", *((unsigned __int16 *)a2 + 6));
  xpc_dictionary_set_uint64(v4, "kWCMRCU1SideChBandMask", *((unsigned __int16 *)a2 + 7));
  keys[0] = "kMessageId";
  keys[1] = "kMessageArgs";
  values[0] = xpc_uint64_create(0x320uLL);
  id v5 = v4;
  values[1] = v5;
  sub_1002539F0(a1, (const char *const *)keys, values, 2);
  id v6 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v7 = *a2;
    int v8 = *((unsigned __int16 *)a2 + 1);
    int v9 = *((unsigned __int16 *)a2 + 2);
    int v10 = *((unsigned __int16 *)a2 + 3);
    int v11 = *((unsigned __int16 *)a2 + 4);
    int v12 = *((unsigned __int16 *)a2 + 5);
    int v13 = *((unsigned __int16 *)a2 + 6);
    int v14 = *((unsigned __int16 *)a2 + 7);
    v16[0] = 67110912;
    v16[1] = v7;
    __int16 v17 = 1024;
    int v18 = v8;
    __int16 v19 = 1024;
    int v20 = v9;
    __int16 v21 = 1024;
    int v22 = v10;
    __int16 v23 = 1024;
    int v24 = v11;
    __int16 v25 = 1024;
    int v26 = v12;
    __int16 v27 = 1024;
    int v28 = v13;
    __int16 v29 = 1024;
    int v30 = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#coex,sendStatusUpdateMessage-Send message to UCM: State(%x), Channel(%x), OnDuration(%x), CycleLength(%x), Number OfCycles(%x), Frame(%x), Priority(%x), R2NbBandMask(%x)",  (uint8_t *)v16,  0x32u);
  }

  for (uint64_t i = 1LL; i != -1; --i)
}

void sub_100252AD0(_Unwind_Exception *a1)
{
  for (uint64_t i = 8LL; i != -8; i -= 8LL)

  _Unwind_Resume(a1);
}

id *sub_100252B10(id *a1)
{
  return a1;
}

id *sub_100252B4C(uint64_t a1)
{
  return sub_100252B10((id *)(a1 - 8));
}

void sub_100252B54(id *a1)
{
  id v1 = sub_100252B10(a1);
  operator delete(v1);
}

void sub_100252B68(uint64_t a1)
{
  id v1 = sub_100252B10((id *)(a1 - 8));
  operator delete(v1);
}

void sub_100252B80(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_object_t v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#coex,processIncomingMessage-Received message from UCM",  buf,  2u);
  }

  char v51 = 0;
  sub_100252FEC(v3, &v51, (uint64_t)buf);
  if (buf[26])
  {
    if (buf[18])
    {
      if (*(unsigned __int16 *)&buf[16] != *(unsigned __int16 *)(a1 + 40))
      {
        *(_WORD *)(a1 + 40) = *(_WORD *)&buf[16];
        if (*(void *)(a1 + 64))
        {
          id v5 = *(dispatch_queue_s **)(a1 + 24);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_1002536F8;
          block[3] = &unk_1007A2398;
          void block[4] = a1;
          dispatch_async(v5, block);
        }
      }
    }

    id v6 = (_WORD *)(a1 + 54);
    int v7 = *(unsigned __int16 *)(a1 + 54);
    int v8 = *(unsigned __int8 *)(a1 + 42);
    int v9 = *(unsigned __int8 *)(a1 + 43);
    unsigned int v10 = *(unsigned __int8 *)(a1 + 45);
    if (buf[1])
    {
      unsigned int v11 = *(unsigned __int16 *)buf;
      *(_WORD *)(a1 + 42) = *(_WORD *)buf;
      unsigned int v12 = v11 >> 8;
      int v13 = v11;
    }

    else
    {
      int v13 = *(unsigned __int8 *)(a1 + 42);
      unsigned int v12 = *(unsigned __int8 *)(a1 + 43);
    }

    int v14 = *(unsigned __int8 *)(a1 + 44);
    unsigned int v15 = *(unsigned __int8 *)(a1 + 47);
    if (buf[3])
    {
      unsigned int v16 = *(unsigned __int16 *)&buf[2];
      *(_WORD *)(a1 + 44) = *(_WORD *)&buf[2];
      unsigned int v17 = v16 >> 8;
      int v18 = v16;
    }

    else
    {
      int v18 = *(unsigned __int8 *)(a1 + 44);
      unsigned int v17 = v10;
    }

    int v19 = *(unsigned __int8 *)(a1 + 46);
    if (buf[5])
    {
      unsigned int v20 = *(unsigned __int16 *)&buf[4];
      *(_WORD *)(a1 + 46) = *(_WORD *)&buf[4];
      unsigned int v21 = v20 >> 8;
      int v22 = v20;
    }

    else
    {
      int v22 = *(unsigned __int8 *)(a1 + 46);
      unsigned int v21 = v15;
    }

    int v23 = *(unsigned __int8 *)(a1 + 50);
    unsigned int v24 = *(unsigned __int8 *)(a1 + 53);
    __int16 v25 = (_WORD *)(a1 + 48);
    int v26 = *(unsigned __int16 *)(a1 + 48);
    if (buf[8])
    {
      *__int16 v25 = *(_WORD *)&buf[6];
      *(_BYTE *)(a1 + 50) = buf[8];
    }

    int v27 = *(unsigned __int8 *)(a1 + 52);
    if (buf[11])
    {
      unsigned int v28 = *(unsigned __int16 *)&buf[10];
      *(_WORD *)(a1 + 52) = *(_WORD *)&buf[10];
      unsigned int v29 = v28 >> 8;
      int v30 = v28;
    }

    else
    {
      int v30 = *(unsigned __int8 *)(a1 + 52);
      unsigned int v29 = v24;
    }

    int v31 = *(unsigned __int8 *)(a1 + 56);
    if (buf[14])
    {
      *id v6 = *(_WORD *)&buf[12];
      *(_BYTE *)(a1 + 56) = buf[14];
    }

    if (v9 && v12)
    {
      if (v13 != v8) {
        goto LABEL_54;
      }
    }

    else if ((v9 != 0) != (v12 != 0))
    {
      goto LABEL_54;
    }

    if (v10 && v17)
    {
      if (v18 != v14) {
        goto LABEL_54;
      }
    }

    else if ((v10 != 0) != (v17 != 0))
    {
      goto LABEL_54;
    }

    if (v15 && v21)
    {
      if (v22 != v19) {
        goto LABEL_54;
      }
    }

    else if ((v15 != 0) != (v21 != 0))
    {
      goto LABEL_54;
    }

    if (v23 && *(_BYTE *)(a1 + 50))
    {
    }

    else if ((v23 != 0) != (*(_BYTE *)(a1 + 50) != 0))
    {
      goto LABEL_54;
    }

    if (v24 && v29)
    {
      if (v30 != v27) {
        goto LABEL_54;
      }
    }

    else if ((v24 != 0) != (v29 != 0))
    {
      goto LABEL_54;
    }

    if (v31 && *(_BYTE *)(a1 + 56))
    {
      int v32 = (unsigned __int16)*v6;
    }

    else
    {
      int v32 = v31 != 0;
      int v7 = *(unsigned __int8 *)(a1 + 56) != 0;
    }

    if (v32 == v7)
    {
LABEL_55:
      if (v51 && *((_DWORD *)sub_100005150() + 186) == 1)
      {
        int v35 = *(unsigned __int16 *)&buf[20];
        if (*(unsigned __int16 *)&buf[20] >= 3u)
        {
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
            sub_1003A1ECC();
          }
        }

        else
        {
          if (*(_DWORD *)(a1 + 88) != *(unsigned __int16 *)&buf[20] && *(void *)(a1 + 64))
          {
            __int128 v36 = *(dispatch_queue_s **)(a1 + 24);
            v41[0] = _NSConcreteStackBlock;
            v41[1] = 3221225472LL;
            _OWORD v41[2] = sub_10025375C;
            v41[3] = &unk_1007AF260;
            v41[4] = a1;
            int v42 = *(unsigned __int16 *)&buf[20];
            dispatch_async(v36, v41);
            *(_DWORD *)(a1 + 8std::ostream::~ostream(v2, v3 + 8) = v35;
          }

          if (v35 == 2 && *(void *)(a1 + 64))
          {
            double v37 = *(dispatch_queue_s **)(a1 + 24);
            v38[0] = _NSConcreteStackBlock;
            v38[1] = 3221225472LL;
            void v38[2] = sub_100253850;
            v38[3] = &unk_1007B8A60;
            v38[4] = a1;
            int v39 = 2;
            *(_OWORD *)double v40 = *(_OWORD *)buf;
            *(_OWORD *)&v40[12] = *(_OWORD *)&buf[12];
            dispatch_async(v37, v38);
          }
        }
      }

      goto LABEL_66;
    }

void sub_100252FD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100252FEC(void *a1@<X1>, _BYTE *a2@<X2>, uint64_t a3@<X8>)
{
  id v5 = a1;
  *a2 = 0;
  if (xpc_dictionary_get_uint64(v5, "kMessageId") == 1500)
  {
    xpc_object_t value = xpc_dictionary_get_value(v5, "kMessageArgs");
    int v7 = (void *)objc_claimAutoreleasedReturnValue(value);
    int v8 = v7;
    if (v7 && xpc_get_type(v7) == (xpc_type_t)&_xpc_type_dictionary)
    {
      unsigned int v64 = *((_DWORD *)sub_100005150() + 144);
      __int16 v10 = sub_100253970(v8, "kWCMHToRCU1BTPowerStatus");
      __int16 v11 = sub_100253970(v8, "kWCMHToRCU1CellularStatus");
      __int16 v12 = sub_100253970(v8, "kWCMHToRCU1wiFiPowerStatus");
      xpc_object_t v13 = xpc_dictionary_get_value(v8, "kWCMHToRCU1BTBandStatus");
      int v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
      unsigned int v15 = v14;
      if (v14 && xpc_get_type(v14) == (xpc_type_t)&_xpc_type_uint64)
      {
        uint64_t v16 = xpc_uint64_get_value(v15);
        BOOL v63 = v16 < 0x3E8;
        if (v16 >= 0x3E8) {
          unsigned __int16 v17 = 0;
        }
        else {
          unsigned __int16 v17 = v16;
        }
        unsigned __int16 v61 = v17;
      }

      else
      {
        unsigned __int16 v61 = 0;
        BOOL v63 = 0;
      }

      __int16 v62 = sub_100253970(v8, "kWCMHToRCU1Cellularband");
      xpc_object_t v18 = xpc_dictionary_get_value(v8, "kWCMHToRCU15GStatus");
      int v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
      unsigned int v20 = v19;
      if (v19 && xpc_get_type(v19) == (xpc_type_t)&_xpc_type_uint64 && (uint64_t v21 = xpc_uint64_get_value(v20), v21 <= 3))
      {
        char v55 = 1;
        char v56 = 0;
        unsigned __int8 v60 = v21;
      }

      else
      {
        unsigned __int8 v60 = 0;
        char v55 = 0;
        char v56 = 1;
      }

      xpc_object_t v22 = xpc_dictionary_get_value(v8, "kWCMHToRCU1DutyCycle");
      int v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
      __int16 v25 = v23;
      if (v23 && xpc_get_type(v23) == (xpc_type_t)&_xpc_type_uint64)
      {
        char v26 = 0;
        char v54 = 1;
        uint64_t v58 = xpc_uint64_get_value(v25);
        uint64_t v59 = v58 >> 8;
      }

      else
      {
        char v54 = 0;
        char v26 = 1;
        LOBYTE(v5std::ostream::~ostream(v2, v3 + 8) = 0;
        LOWORD(v59) = v24;
      }

      char v53 = v26;
      if (sub_10032085C(v64))
      {
        xpc_object_t v27 = xpc_dictionary_get_value(v8, "kWCMHToRCU1ChannelsToTriggerGPIOBlanking");
        unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue(v27);

        if (v28) {
          *a2 = 1;
        }
        unsigned __int16 uint64 = xpc_dictionary_get_uint64(v8, "kWCMHToRCU1ChannelsToTriggerGPIOBlanking");
        unsigned __int16 v30 = xpc_dictionary_get_uint64(v8, "kWCMHToRCU1SideChannelsToTriggerGPIOBlanking_ChBegin");
        unsigned __int16 v57 = xpc_dictionary_get_uint64(v8, "kWCMHToRCU1SideChannelsToTriggerGPIOBlanking_ChEnd");
      }

      else
      {
        unsigned __int16 v57 = 0;
        unsigned __int16 v30 = 0;
        unsigned __int16 uint64 = 0;
      }

      int v31 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
      {
        unsigned __int16 v49 = v30;
        unsigned __int16 v50 = uint64;
        __int16 v52 = v12;
        if ((_BYTE)v10) {
          int v32 = "Y";
        }
        else {
          int v32 = "N";
        }
        if ((v10 & 0xFF00) == 0) {
          int v32 = "-";
        }
        char v48 = v32;
        __int16 v51 = v10;
        if (v63)
        {
          std::to_string(&v67, v61);
          if ((v67.__r_.__value_.__s.__size_ & 0x80u) == 0) {
            double v33 = &v67;
          }
          else {
            double v33 = (std::string *)v67.__r_.__value_.__r.__words[0];
          }
        }

        else
        {
          double v33 = (std::string *)"-";
        }

        if ((_BYTE)v11) {
          uint64_t v34 = "Y";
        }
        else {
          uint64_t v34 = "N";
        }
        if ((v11 & 0xFF00) != 0) {
          int v35 = v34;
        }
        else {
          int v35 = "-";
        }
        if ((_BYTE)v62) {
          __int128 v36 = "Y";
        }
        else {
          __int128 v36 = "N";
        }
        if ((v62 & 0xFF00) != 0) {
          double v37 = v36;
        }
        else {
          double v37 = "-";
        }
        if ((_BYTE)v12) {
          double v38 = "Y";
        }
        else {
          double v38 = "N";
        }
        if ((v12 & 0xFF00) != 0) {
          int v39 = v38;
        }
        else {
          int v39 = "-";
        }
        double v40 = (std::string *)"-";
        if ((v56 & 1) == 0)
        {
          std::string v41 = v35;
          int v42 = v39;
          __int128 v43 = v37;
          int v44 = v33;
          double v40 = &v66;
          std::to_string(&v66, v60);
          if ((v66.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            double v40 = (std::string *)v66.__r_.__value_.__r.__words[0];
          }
          double v33 = v44;
          double v37 = v43;
          int v39 = v42;
          int v35 = v41;
        }

        if ((v53 & 1) != 0)
        {
          *(_DWORD *)uint8_t buf = 136316674;
          *(void *)uint64_t v69 = v48;
          *(_WORD *)&v69[8] = 2080;
          __int16 v70 = v33;
          __int16 v71 = 2080;
          int v72 = v35;
          __int16 v73 = 2080;
          uint64_t v74 = v37;
          __int16 v75 = 2080;
          unsigned int v76 = v39;
          __int16 v77 = 2080;
          __int128 v78 = v40;
          __int16 v79 = 2080;
          char v80 = "-";
          _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "#coex,parseIncomingEvent-Received msg from UCM: BT [Power: %s, Band: %s], Cellular [Power: %s, Band: %s], Wi Fi [Power: %s, Channel: %s], R1DutyCycleNeeded: %s",  buf,  0x48u);
        }

        else
        {
          char v45 = v33;
          std::to_string(&v65, v58 | ((unint64_t)v59 << 8));
          if ((v65.__r_.__value_.__s.__size_ & 0x80u) == 0) {
            char v46 = &v65;
          }
          else {
            char v46 = (std::string *)v65.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)uint8_t buf = 136316674;
          *(void *)uint64_t v69 = v48;
          *(_WORD *)&v69[8] = 2080;
          __int16 v70 = v45;
          __int16 v71 = 2080;
          int v72 = v35;
          __int16 v73 = 2080;
          uint64_t v74 = v37;
          __int16 v75 = 2080;
          unsigned int v76 = v39;
          __int16 v77 = 2080;
          __int128 v78 = v40;
          __int16 v79 = 2080;
          char v80 = (const char *)v46;
          _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "#coex,parseIncomingEvent-Received msg from UCM: BT [Power: %s, Band: %s], Cellular [Power: %s, Band: %s], Wi Fi [Power: %s, Channel: %s], R1DutyCycleNeeded: %s",  buf,  0x48u);
        }

        __int16 v10 = v51;
        __int16 v12 = v52;
        unsigned __int16 v30 = v49;
        unsigned __int16 uint64 = v50;
      }

      if (sub_10032085C(v64))
      {
        char v47 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint8_t buf = 67109632;
          *(_DWORD *)uint64_t v69 = uint64;
          *(_WORD *)&v69[4] = 1024;
          *(_DWORD *)&v69[6] = v30;
          LOWORD(v70) = 1024;
          *(_DWORD *)((char *)&v70 + 2) = v57;
          _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "#coex,parseIncomingEvent-Recevied msg from UCM: R2GpioBlanking:ChannelsToTriggerGPIOBlanking(%d), NbChannelB egIndex(%d), NbChannelEndIndex(%d)",  buf,  0x14u);
        }
      }

      *(_WORD *)a3 = v10;
      *(_WORD *)(a3 + 2) = v11;
      *(_WORD *)(a3 + 4) = v12;
      *(_WORD *)(a3 + 6) = v61;
      *(_BYTE *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v63;
      *(_WORD *)(a3 + 10) = v62;
      *(_WORD *)(a3 + 12) = v60;
      *(_BYTE *)(a3 + 14) = v55;
      *(_WORD *)(a3 + 16) = v58 | (unsigned __int16)((_WORD)v59 << 8);
      *(_BYTE *)(a3 + 1std::ostream::~ostream(v2, v3 + 8) = v54;
      *(_WORD *)(a3 + 20) = uint64;
      *(_WORD *)(a3 + 22) = v30;
      char v9 = 1;
      *(_WORD *)(a3 + 24) = v57;
    }

    else
    {
      char v9 = 0;
      *(_BYTE *)a3 = 0;
    }

    *(_BYTE *)(a3 + 26) = v9;
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A1EF8();
    }
    *(_BYTE *)a3 = 0;
    *(_BYTE *)(a3 + 26) = 0;
  }
}

void sub_100253650( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, int a24, uint64_t a25, uint64_t a26, uint64_t a27, void *__p, uint64_t a29, int a30, __int16 a31, char a32, char a33, void *a34, uint64_t a35, int a36, __int16 a37, char a38, char a39)
{
  _Unwind_Resume(a1);
}

void sub_1002536F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  double rep = (double)std::chrono::steady_clock::now().__d_.__rep_;
  __int16 v3 = *(_WORD *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 64);
  *(double *)&__int128 v5 = rep;
  DWORD2(v5) = 1;
  WORD6(v5) = v3;
  BYTE14(v5) = 1;
  int v6 = 0;
  char v7 = 0;
  char v8 = 0;
  char v9 = 0;
  char v10 = 0;
  sub_10012B018(v4, &v5);
}

void sub_10025375C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v3.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
  int v4 = *(_DWORD *)(a1 + 40);
  __int128 v5 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint8_t buf = 67109120;
    int v14 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#coex,R2ChannelToTriggerGpioBlankingChanged changed %d",  buf,  8u);
  }

  uint64_t v6 = *(void *)(v2 + 64);
  *(double *)&__int128 v7 = (double)v3.__d_.__rep_;
  DWORD2(v7) = 2;
  BYTE12(v7) = 0;
  BYTE14(v7) = 0;
  int v8 = v4;
  char v9 = 0;
  char v10 = 0;
  char v11 = 0;
  char v12 = 0;
  sub_10012B018(v6, &v7);
}

void sub_100253850(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v3.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
  if (!*(_BYTE *)(a1 + 70)) {
    sub_100006080();
  }
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep rep = v3.__d_.__rep_;
  int v5 = *(_DWORD *)(a1 + 40);
  int v6 = *(unsigned __int16 *)(a1 + 66);
  int v7 = *(unsigned __int16 *)(a1 + 68);
  int v8 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint8_t buf = 67109376;
    int v17 = v6;
    __int16 v18 = 1024;
    int v19 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#coex,R2NbChannelIdxToTriggerGpioBlankingChanged changed begin: %d, end: %d",  buf,  0xEu);
  }

  uint64_t v9 = *(void *)(v2 + 64);
  *(double *)&__int128 v10 = (double)rep;
  DWORD2(sub_1000316D8(v11, v10) = 3;
  BYTE12(sub_1000316D8(v11, v10) = 0;
  BYTE14(sub_1000316D8(v11, v10) = 0;
  int v11 = v5;
  __int16 v12 = v6;
  char v13 = 1;
  __int16 v14 = v7;
  char v15 = 1;
  sub_10012B018(v9, &v10);
}

uint64_t sub_100253970(void *a1, const char *a2)
{
  xpc_object_t value = xpc_dictionary_get_value(a1, a2);
  std::chrono::steady_clock::time_point v3 = (void *)objc_claimAutoreleasedReturnValue(value);
  int v4 = v3;
  if (v3 && xpc_get_type(v3) == (xpc_type_t)&_xpc_type_BOOL)
  {
    BOOL v5 = xpc_BOOL_get_value(v4);
    int v6 = 1;
  }

  else
  {
    BOOL v5 = 0;
    int v6 = 0;
  }

  return v5 | (v6 << 8);
}

void sub_1002539DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002539F0(uint64_t a1, const char *const *keys, xpc_object_t *values, int a4)
{
  id v5 = xpc_dictionary_create(keys, values, a4);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), v5);
}

void sub_100253A3C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100253A50(uint64_t a1)
{
  keys = "kMessageId";
  xpc_object_t values = xpc_uint64_create(0x321uLL);
  sub_1002539F0(a1, (const char *const *)&keys, &values, 1);
}

void sub_100253AD4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
}

uint64_t sub_100253AF0(uint64_t a1)
{
  return 1LL;
}

BOOL sub_100253B08(uint64_t a1, int *a2)
{
  int v5 = *a2;
  if (*a2 == 2)
  {
    char v18 = 0;
    uint64_t v20 = 0LL;
    int v21 = 0;
    if (*((_BYTE *)a2 + 19))
    {
      int v7 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        if (!*((_BYTE *)a2 + 19)) {
          sub_100006080();
        }
        int v8 = *((unsigned __int8 *)a2 + 18);
        *(_DWORD *)uint8_t buf = 67109120;
        int v23 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#coex,RangingStatusUpdate-channel,%d",  buf,  8u);
      }

      if (!*((_BYTE *)a2 + 19)) {
        sub_100006080();
      }
      if (*((_BYTE *)a2 + 18) == 5) {
        __int16 v9 = 5;
      }
      else {
        __int16 v9 = 9;
      }
    }

    else
    {
      __int16 v9 = *(_WORD *)(a1 + 74);
    }

    __int16 v19 = v9;
    BOOL v2 = *((_BYTE *)a2 + 16) != 0;
    if (*((_BYTE *)a2 + 16))
    {
      if (*((unsigned __int16 *)a2 + 6) | *((unsigned __int16 *)a2 + 5))
      {
        __int128 v10 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          if (!*((_BYTE *)a2 + 16)) {
            sub_100006080();
          }
          int v11 = *((unsigned __int16 *)a2 + 2);
          int v12 = *((unsigned __int16 *)a2 + 3);
          int v13 = *((unsigned __int16 *)a2 + 4);
          int v14 = *((unsigned __int16 *)a2 + 6);
          int v15 = *((unsigned __int16 *)a2 + 5);
          int v16 = *((unsigned __int16 *)a2 + 7);
          *(_DWORD *)uint8_t buf = 67110400;
          int v23 = v11;
          __int16 v24 = 1024;
          int v25 = v12;
          __int16 v26 = 1024;
          int v27 = v13;
          __int16 v28 = 1024;
          int v29 = v14;
          __int16 v30 = 1024;
          int v31 = v15;
          __int16 v32 = 1024;
          int v33 = v16;
          _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#coex,RangingStatusUpdate-onDuration(%d), cycleLength(%d), numberCycles(%d), frameConfigMask(%d), priorityMa sk(%d), nbBandMask(%d)",  buf,  0x26u);
        }

        char v18 = 1;
        if (!*((_BYTE *)a2 + 16)) {
          sub_100006080();
        }
        uint64_t v20 = *(void *)(a2 + 1);
        int v21 = a2[3];
      }

      sub_1002528A4(a1, (BOOL *)&v18);
    }
  }

  else if (v5 == 1)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A1F50();
    }
    if (!*((_BYTE *)a2 + 19)) {
      return 0;
    }
    if (*((_BYTE *)a2 + 18) == 5) {
      __int16 v6 = 5;
    }
    else {
      __int16 v6 = 9;
    }
    *(_WORD *)(a1 + 74) = v6;
    sub_1002528A4(a1, (BOOL *)(a1 + 72));
    return 1;
  }

  else if (!v5)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A1F24();
    }
    return 0;
  }

  return v2;
}

void sub_100253DB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100253DD4(uint64_t a1)
{
  uint64_t v5 = 0LL;
  __int16 v6 = &v5;
  uint64_t v7 = 0x4012000000LL;
  int v8 = sub_100253E90;
  __int16 v9 = nullsub_110;
  char v11 = 0;
  __int16 v12 = 0;
  char v13 = 0;
  char v14 = 0;
  v10[0] = 0LL;
  *(void *)((char *)v10 + 7) = 0LL;
  uint64_t v1 = *(dispatch_queue_s **)(a1 + 16);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_100253EA0;
  v4[3] = &unk_1007B2170;
  void v4[4] = &v5;
  void v4[5] = a1;
  dispatch_sync(v1, v4);
  uint64_t v2 = v6[6];
  _Block_object_dispose(&v5, 8);
  return v2;
}

__n128 sub_100253E90(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[3] = result;
  return result;
}

__n128 sub_100253EA0(uint64_t a1)
{
  __n128 result = *(__n128 *)(*(void *)(a1 + 40) + 42LL);
  *(__n128 *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 48LL) = result;
  return result;
}

uint64_t sub_100253EB4()
{
  return 0LL;
}

uint64_t sub_100253EBC()
{
  return 0LL;
}

uint64_t sub_100253EC4()
{
  return 1LL;
}

uint64_t sub_100253ECC()
{
  return 1LL;
}

std::string *sub_100253ED4(std::string *a1)
{
  a1->__r_.__value_.__s.__data_[0] = 0;
  a1[1].__r_.__value_.__s.__data_[0] = 0;
  a1[1].__r_.__value_.__s.__data_[8] = 0;
  uint64_t v2 = (std::string *)((char *)a1 + 32);
  a1[2].__r_.__value_.__s.__data_[8] = 0;
  std::chrono::steady_clock::time_point v3 = (void *)objc_claimAutoreleasedReturnValue( [@"/System/Library/NearbyInteractionBundles" stringByAppendingPathComponent:@"SpatialGesturesResources.bundle"]);
  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle bundleWithPath:](&OBJC_CLASS___NSBundle, "bundleWithPath:", v3));
  id v24 = (id)objc_claimAutoreleasedReturnValue([v4 pathForResource:@"model.espresso" ofType:@"net"]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( [@"/System/Library/NearbyInteractionBundles" stringByAppendingPathComponent:@"MotionBasedSpatialGesturesResources.bundle"]);
  __int16 v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle bundleWithPath:](&OBJC_CLASS___NSBundle, "bundleWithPath:", v5));
  id v25 = (id)objc_claimAutoreleasedReturnValue([v6 pathForResource:@"model.espresso" ofType:@"net"]);
  __ec.__val_ = 0;
  __ec.__cat_ = std::system_category();
  __int16 v28 = (char *)[@"/System/Library/NearbyInteractionBundles" UTF8String];
  sub_100254554(&v29.__pn_, &v28);
  std::__fs::filesystem::__status(&v29, &__ec);
  if (v33[0])
  {
    __ec.__val_ = 0;
    __ec.__cat_ = std::system_category();
    int v7 = v33[0];
  }

  else
  {
    int v7 = 0;
  }

  if (v7 == 255 || !v7)
  {
    int v8 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1003A202C( (uint64_t)[@"/System/Library/NearbyInteractionBundles" UTF8String],  (uint64_t)&v29,  v8);
    }

    goto LABEL_11;
  }

  id v10 = v3;
  __int16 v28 = (char *)[v10 UTF8String];
  sub_100254554(&v29.__pn_, &v28);
  std::__fs::filesystem::__status(&v29, &__ec);
  if (v33[0])
  {
    __ec.__val_ = 0;
    __ec.__cat_ = std::system_category();
    uint64_t v11 = v33[0];
  }

  else
  {
    uint64_t v11 = 0LL;
  }

  if (v11) {
    BOOL v12 = v11 == 255;
  }
  else {
    BOOL v12 = 1;
  }
  int v13 = !v12;
  int v23 = v13;
  if ((_DWORD)v11 == 255 || !(_DWORD)v11)
  {
    char v14 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_1003A1FF4((uint64_t)[v10 UTF8String], (uint64_t)v33, v14);
    }
  }

  id v15 = v5;
  __int16 v26 = (char *)[v15 UTF8String];
  sub_100254554(&v29.__pn_, &v26);
  std::__fs::filesystem::__status(&v29, &__ec);
  if ((_BYTE)v28)
  {
    __ec.__val_ = 0;
    __ec.__cat_ = std::system_category();
    uint64_t v16 = v28;
  }

  else
  {
    uint64_t v16 = 0LL;
  }

  if (v16) {
    BOOL v17 = v16 == 255;
  }
  else {
    BOOL v17 = 1;
  }
  int v18 = !v17;
  if ((_DWORD)v16 != 255 && (_DWORD)v16)
  {
    if (!(_DWORD)v11 || (_DWORD)v11 == 255) {
      goto LABEL_49;
    }
    sub_1000065CC(&v29, (char *)[v24 UTF8String]);
    char v30 = 1;
    sub_1000065CC(&v31, (char *)[v25 UTF8String]);
    v32[0] = 1;
    sub_100201D14((uint64_t)a1, (__n128 *)&v29);
    sub_100201D14((uint64_t)v2, &v31);
    for (uint64_t i = 0LL; i != -64; i -= 32LL)
    {
      xpc_object_t v22 = (void **)((char *)&v29.__pn_.__r_.__value_.__l.__data_ + i);
    }
  }

  else
  {
    __int16 v19 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_1003A1FBC((uint64_t)[v15 UTF8String], (uint64_t)&v29, v19);
    }

    if (((v23 | v18) & 1) != 0)
    {
      if ((_DWORD)v11 != 255 && (_DWORD)v11)
      {
        __int16 v28 = (char *)[v24 UTF8String];
        sub_100254448(a1, &v28);
        goto LABEL_11;
      }

void sub_100254368( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23)
{
  if (a2) {
    sub_10000DE88(exception_object);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_100254448(std::string *a1, std::string::value_type **a2)
{
  std::chrono::steady_clock::time_point v3 = *a2;
  if (a1[1].__r_.__value_.__s.__data_[0])
  {
    std::string::assign(a1, v3);
  }

  else
  {
    sub_1000065CC(a1, v3);
    a1[1].__r_.__value_.__s.__data_[0] = 1;
  }

  return a1;
}

uint64_t sub_100254488(uint64_t a1)
{
  for (uint64_t i = 0LL; i != -64; i -= 32LL)
  {
    uint64_t v3 = a1 + i;
  }

  return a1;
}

uint64_t sub_1002544D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = 0;
  uint64_t v5 = 0LL;
  do
  {
    char v6 = v4;
    uint64_t result = sub_100201F04(a2 + 32 * v5, (__int128 *)(a1 + 32 * v5));
    char v4 = 1;
    uint64_t v5 = 1LL;
  }

  while ((v6 & 1) == 0);
  return result;
}

void sub_100254538(_Unwind_Exception *exception_object)
{
  if ((v3 & 1) == 0) {
    sub_1003A2064(v2, v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_100254554(std::string *this, char **a2)
{
  *(_OWORD *)&this->__r_.__value_.__l.__data_ = 0uLL;
  this->__r_.__value_.__l.__cap_ = 0LL;
  char v3 = *a2;
  char v4 = v3 - 1;
  while (*++v4)
    ;
  sub_10015B584(this, v3, v4);
  return this;
}

void sub_100254594(_Unwind_Exception *exception_object)
{
}

void sub_1002545B0(unsigned __int8 *a1)
{
  uint64_t v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    char v3 = a1 + 8;
    int v4 = *a1;
    int v5 = a1[1];
    int v6 = *((unsigned __int16 *)a1 + 16);
    int v7 = a1 + 40;
    int v8 = *((_DWORD *)a1 + 16);
    int v9 = *((_DWORD *)a1 + 17);
    int v10 = *((_DWORD *)a1 + 18);
    int v11 = *((_DWORD *)a1 + 19);
    v12[0] = 67176707;
    v12[1] = v4;
    __int16 v13 = 1025;
    int v14 = v5;
    __int16 v15 = 2081;
    uint64_t v16 = v3;
    __int16 v17 = 1025;
    int v18 = v6;
    __int16 v19 = 2081;
    uint64_t v20 = v7;
    __int16 v21 = 1025;
    int v22 = v8;
    __int16 v23 = 1025;
    int v24 = v9;
    __int16 v25 = 1025;
    int v26 = v10;
    __int16 v27 = 1025;
    int v28 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#fu,endian,%{private}d,headerVersion,%{private}d,type,%{private}s,version,%{private}d,copyright,%{private}s,timest amp,%{private}u,expiration,%{private}u,dataSizeBytes,%{private}u,crc,%{private}u",  (uint8_t *)v12,  0x40u);
  }

unint64_t sub_1002546CC(uint64_t *a1)
{
  if ((v7[(unint64_t)*(v6[0] - 3) + 16] & 5) != 0)
  {
    uint64_t v1 = 0LL;
    unint64_t v2 = 0LL;
  }

  else
  {
    std::istream::tellg(v4, v6);
    unint64_t v2 = v5 & 0xFFFFFFFFFFFFFF00LL;
    uint64_t v1 = v5;
  }

  std::filebuf::~filebuf(v7);
  std::ios::~ios(&v8);
  return v2 | v1;
}

void sub_1002547C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26)
{
}

BOOL sub_1002547E4(const char *a1)
{
  if (a1[23] < 0) {
    a1 = *(const char **)a1;
  }
  return stat(a1, &v2) >= 0;
}

void sub_10025481C(const char *a1)
{
  if (a1[23] < 0) {
    a1 = *(const char **)a1;
  }
  if ((stat(a1, &v1) & 0x80000000) == 0) {
    CFAbsoluteTimeGetCurrent();
  }
}

BOOL sub_100254894(FILE *__stream, uint64_t a2)
{
  if (!__stream)
  {
    uint64_t v8 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A20A8(v8, v9, v10, v11, v12, v13, v14, v15);
    }
    return 0LL;
  }

  size_t v3 = fread(&__ptr, 1uLL, 0xB2uLL, __stream);
  if (v3 != 178)
  {
    uint64_t v16 = v3;
    __int16 v17 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A2210(v16, v17, v18);
    }
    return 0LL;
  }

  int v4 = __ptr;
  *(_BYTE *)a2 = __ptr;
  if ((v4 - 1) >= 2)
  {
    __int16 v19 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A21A8(a2, v19, v20, v21, v22, v23, v24, v25);
    }
    return 0LL;
  }

  int v5 = v52;
  *(_BYTE *)(a2 + 1) = v52;
  uint64_t v6 = a2 + 1;
  if (!v5)
  {
    int v26 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A20D8(v6, v26, v27, v28, v29, v30, v31, v32);
    }
    return 0LL;
  }

  char v50 = 0;
  *(_OWORD *)__s = *(_OWORD *)v53;
  *(_OWORD *)&__s[14] = *(_OWORD *)&v53[14];
  std::string::assign((std::string *)(a2 + 8), __s);
  if (*(_BYTE *)a2 == 2) {
    unsigned int v7 = bswap32(v54) >> 16;
  }
  else {
    unsigned int v7 = v54;
  }
  *(_WORD *)(a2 + 32) = v7;
  uint64_t v35 = a2 + 32;
  BOOL v33 = v7 != 0;
  if (v7)
  {
    char v48 = 0;
    v47[4] = v59;
    void v47[5] = v60;
    v47[6] = v61;
    v47[7] = v62;
    v47[0] = v55;
    v47[1] = v56;
    v47[2] = v57;
    v47[3] = v58;
    std::string::assign((std::string *)(a2 + 40), (const std::string::value_type *)v47);
    if (*(_BYTE *)a2 == 2)
    {
      unsigned int v36 = bswap32(v63);
      unsigned int v37 = bswap32(v64);
      unsigned int v38 = bswap32(v65);
      unsigned int v39 = bswap32(v66);
    }

    else
    {
      unsigned int v36 = v63;
      unsigned int v37 = v64;
      unsigned int v38 = v65;
      unsigned int v39 = v66;
    }

    *(_DWORD *)(a2 + 64) = v36;
    *(_DWORD *)(a2 + 6std::ostream::~ostream(v2, v3 + 8) = v37;
    *(_DWORD *)(a2 + sub_100012390(v1 + 72) = v38;
    *(_DWORD *)(a2 + 76) = v39;
  }

  else
  {
    double v40 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A2140(v35, v40, v41, v42, v43, v44, v45, v46);
    }
  }

  return v33;
}

BOOL sub_100254B00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (stat((const char *)a1, &v14) < 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A2358();
    }
    return 0LL;
  }

  unint64_t v4 = sub_1002546CC((uint64_t *)v3);
  if (!v5)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A2288();
    }
    return 0LL;
  }

  __darwin_ino64_t v6 = v4;
  if (v4 <= 0xB1)
  {
    unsigned int v7 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      else {
        uint64_t v13 = *(void *)v3;
      }
      v14.st_dev = 136315650;
      *(void *)&v14.st_mode = v13;
      WORD2(v14.st_ino) = 2048;
      *(__darwin_ino64_t *)((char *)&v14.st_ino + 6) = v6;
      HIWORD(v14.st_gid) = 1024;
      v14.st_rdev = 178;
      _os_log_error_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "#fu,getHeader,failed,file,%s,fileTooSmall,size,%lu,expected,%d",  (uint8_t *)&v14,  0x1Cu);
    }
  }

  else {
    uint64_t v8 = *(const char **)v3;
  }
  uint64_t v9 = fopen(v8, "rb");
  uint64_t v10 = v9;
  if (!v9)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A22F0();
    }
    return 0LL;
  }

  BOOL v11 = sub_100254894(v9, a2);
  fclose(v10);
  return v11;
}

BOOL sub_100254CF8(uint64_t *a1, int *a2)
{
  uint64_t v3 = v13;
  if (v13)
  {
    unint64_t v4 = v11[0];
    *(_DWORD *)((char *)&v11[1] + (unint64_t)*(v11[0] - 3)) &= ~0x1000u;
    char v10 = 0;
    int v5 = -1;
    *a2 = -1;
    if ((v12[(void)*(v4 - 3) + 16] & 2) == 0)
    {
      unint64_t v6 = -174LL;
      while (1)
      {
        std::istream::read(v11, &v10, 1LL);
        unsigned int v7 = v11[0];
        if (v6 >= 4)
        {
          char v8 = v10;
        }

        else
        {
          char v8 = 0;
          char v10 = 0;
        }

        int v5 = dword_10042A540[(v8 ^ *a2)] ^ (*a2 >> 8);
        *a2 = v5;
        ++v6;
        if ((v12[(void)*(v7 - 3) + 16] & 2) != 0) {
          goto LABEL_13;
        }
      }

      int v5 = *a2;
    }

void sub_100254EA8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

uint64_t sub_100254EC4(uint64_t a1)
{
  *(_WORD *)char v10 = 0;
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  std::string __p = 0LL;
  uint64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  BOOL v11 = 0LL;
  __int16 v14 = 0;
  __int128 v18 = xmmword_100423B50;
  if (!sub_100254B00(a1, (uint64_t)v10))
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A243C();
    }
    goto LABEL_11;
  }

  sub_1002545B0(v10);
  sub_1000065CC(buf, "isCrcOkay");
  BOOL v2 = sub_100254CF8((uint64_t *)a1, &v9);
  BOOL v3 = v2;
  if (SHIBYTE(v23) < 0)
  {
    operator delete(*(void **)buf);
    if (!v3) {
      goto LABEL_11;
    }
  }

  else if (!v2)
  {
    goto LABEL_11;
  }

  int v4 = v9;
  if (HIDWORD(v18) == v9)
  {
    uint64_t v5 = 1LL;
    goto LABEL_12;
  }

  unint64_t v6 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    else {
      uint64_t v8 = *(void *)a1;
    }
    *(_DWORD *)uint8_t buf = 136315650;
    *(void *)&uint8_t buf[4] = v8;
    __int16 v20 = 1024;
    int v21 = HIDWORD(v18);
    __int16 v22 = 1024;
    int v23 = v4;
    _os_log_error_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "#fu,isCrcOkay,file,%s,crcMismatch,onFile,%08x,calculated,%08x",  buf,  0x18u);
  }

void sub_10025507C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_1002550B4(uint64_t a1@<X8>)
{
  *(void *)(v1 - std::ostream::~ostream(v2, v3 + 8) = a1;
}

void sub_1002550CC(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

void sub_100255118(id a1)
{
  id v1 = -[NIServerKeychainManager _initInternal](objc_alloc(&OBJC_CLASS___NIServerKeychainManager), "_initInternal");
  BOOL v2 = (void *)qword_1007FBF80;
  qword_1007FBF80 = (uint64_t)v1;

  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  unsigned int v4 = [v3 BOOLForKey:@"KMUnitTestOverride"];

  if (v4)
  {
    [(id)qword_1007FBF80 _unitTest1];
    [(id)qword_1007FBF80 _unitTest2];
    _[(id)qword_1007FBF80 _unitTest3];
  }

void sub_1002551A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100255280(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _shouldLog])
  {
    BOOL v2 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      int v4 = *(unsigned __int8 *)(a1 + 56);
      int v5 = *(unsigned __int8 *)(a1 + 57);
      *(_DWORD *)uint8_t buf = 138478339;
      uint64_t v29 = v3;
      __int16 v30 = 1024;
      int v31 = v4;
      __int16 v32 = 1024;
      int v33 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#ni-km,Write: %{private}@, %d, %d",  buf,  0x18u);
    }
  }

  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable( kCFAllocatorDefault,  0LL,  &kCFTypeDictionaryKeyCallBacks,  &kCFTypeDictionaryValueCallBacks);
  unsigned int v7 = (__CFDictionary *)CFAutorelease(Mutable);
  uint64_t v8 = v7;
  if (*(_BYTE *)(a1 + 57)) {
    CFBooleanRef v9 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v9 = kCFBooleanFalse;
  }
  key = (void *)kSecUseSystemKeychain;
  CFDictionaryAddValue(v7, kSecUseSystemKeychain, v9);
  CFDictionaryAddValue(v8, kSecClass, kSecClassGenericPassword);
  char v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) data]);
  CFDictionaryAddValue(v8, kSecValueData, v10);

  CFDictionaryAddValue(v8, kSecUseDataProtectionKeychain, kCFBooleanTrue);
  BOOL v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) account]);
  CFDictionaryAddValue(v8, kSecAttrAccount, v11);

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) service]);
  CFDictionaryAddValue(v8, kSecAttrService, v12);

  CFDictionaryAddValue(v8, kSecAttrAccessGroup, @"com.apple.nearbyd");
  if (*(_BYTE *)(a1 + 56)) {
    CFBooleanRef v13 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v13 = kCFBooleanFalse;
  }
  CFDictionaryAddValue(v8, kSecAttrSynchronizable, v13);
  __int16 v14 = (const void **)&kSecAttrAccessibleAfterFirstUnlock;
  if (!*(_BYTE *)(a1 + 56)) {
    __int16 v14 = (const void **)&kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly;
  }
  CFDictionaryAddValue(v8, kSecAttrAccessible, *v14);
  OSStatus v15 = SecItemAdd(v8, 0LL);
  if ([*(id *)(a1 + 32) _shouldLog])
  {
    uint64_t v16 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint8_t buf = 67174657;
      LODWORD(v29) = v15;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#ni-km,Write status: %{private}d.", buf, 8u);
    }
  }

  if (v15 == -25299)
  {
    CFMutableDictionaryRef v17 = CFDictionaryCreateMutable( kCFAllocatorDefault,  0LL,  &kCFTypeDictionaryKeyCallBacks,  &kCFTypeDictionaryValueCallBacks);
    __int128 v18 = (__CFDictionary *)CFAutorelease(v17);
    __int16 v19 = v18;
    if (*(_BYTE *)(a1 + 57)) {
      CFBooleanRef v20 = kCFBooleanTrue;
    }
    else {
      CFBooleanRef v20 = kCFBooleanFalse;
    }
    CFDictionaryAddValue(v18, key, v20);
    CFDictionaryAddValue(v19, kSecClass, kSecClassGenericPassword);
    CFDictionaryAddValue(v19, kSecUseDataProtectionKeychain, kCFBooleanTrue);
    int v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) account]);
    CFDictionaryAddValue(v19, kSecAttrAccount, v21);

    __int16 v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) service]);
    CFDictionaryAddValue(v19, kSecAttrService, v22);

    CFDictionaryAddValue(v19, kSecAttrAccessGroup, @"com.apple.nearbyd");
    if (*(_BYTE *)(a1 + 56)) {
      CFBooleanRef v23 = kCFBooleanTrue;
    }
    else {
      CFBooleanRef v23 = kCFBooleanFalse;
    }
    CFDictionaryAddValue(v19, kSecAttrSynchronizable, v23);
    CFDictionaryRemoveAllValues(v8);
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) data]);
    CFDictionaryAddValue(v8, kSecValueData, v24);

    OSStatus v25 = SecItemUpdate(v19, v8);
    if ([*(id *)(a1 + 32) _shouldLog])
    {
      int v26 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint8_t buf = 67174657;
        LODWORD(v29) = v25;
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "#ni-km,Update status: %{private}d.",  buf,  8u);
      }
    }

    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v25 == 0;
  }

  else if (v15)
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 0;
  }

  else
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 1;
  }

void sub_100255734(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100255874(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100255884(uint64_t a1)
{
}

void sub_10025588C(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _internalReadItemWithService:*(void *)(a1 + 40) account:*(void *)(a1 + 48) synchronizable:*(unsigned __int8 *)(a1 + 64) systemKeychain:*(unsigned __int8 *)(a1 + 65)]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 56) + 8LL);
  int v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1002559D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002559E4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _shouldLog])
  {
    uint64_t v2 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      int v4 = *(unsigned __int8 *)(a1 + 56);
      int v5 = *(unsigned __int8 *)(a1 + 57);
      *(_DWORD *)uint8_t buf = 138478339;
      *(void *)uint64_t v27 = v3;
      *(_WORD *)&uint8_t v27[8] = 1024;
      int v28 = v4;
      __int16 v29 = 1024;
      int v30 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#ni-km,Read all: %{private}@, %d, %d",  buf,  0x18u);
    }
  }

  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable( kCFAllocatorDefault,  0LL,  &kCFTypeDictionaryKeyCallBacks,  &kCFTypeDictionaryValueCallBacks);
  unsigned int v7 = (__CFDictionary *)CFAutorelease(Mutable);
  uint64_t v8 = v7;
  CFTypeRef result = 0LL;
  if (*(_BYTE *)(a1 + 57)) {
    CFBooleanRef v9 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v9 = kCFBooleanFalse;
  }
  CFDictionaryAddValue(v7, kSecUseSystemKeychain, v9);
  CFDictionaryAddValue(v8, kSecClass, kSecClassGenericPassword);
  CFDictionaryAddValue(v8, kSecUseDataProtectionKeychain, kCFBooleanTrue);
  CFDictionaryAddValue(v8, kSecAttrService, *(const void **)(a1 + 40));
  CFDictionaryAddValue(v8, kSecAttrAccessGroup, @"com.apple.nearbyd");
  if (*(_BYTE *)(a1 + 56)) {
    CFBooleanRef v10 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v10 = kCFBooleanFalse;
  }
  CFDictionaryAddValue(v8, kSecAttrSynchronizable, v10);
  CFDictionaryAddValue(v8, kSecMatchLimit, kSecMatchLimitAll);
  CFDictionaryAddValue(v8, kSecReturnData, kCFBooleanTrue);
  CFDictionaryAddValue(v8, kSecReturnAttributes, kCFBooleanTrue);
  OSStatus v11 = SecItemCopyMatching(v8, &result);
  if (result)
  {
    CFTypeID TypeID = CFArrayGetTypeID();
    CFTypeID v13 = CFGetTypeID(result);
    __int16 v14 = (void *)result;
    if (TypeID != v13)
    {
      __int16 v14 = 0LL;
      CFRelease(result);
    }

    if ([*(id *)(a1 + 32) _shouldLog])
    {
      OSStatus v15 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v16 = [v14 count];
        *(_DWORD *)uint8_t buf = 67174913;
        *(_DWORD *)uint64_t v27 = v11;
        *(_WORD *)&v27[4] = 1025;
        *(_DWORD *)&v27[6] = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "#ni-km,Read all status: %{private}d. Num results: %{private}d",  buf,  0xEu);
      }
    }

    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472LL;
    v21[2] = sub_100255DB4;
    void v21[3] = &unk_1007B8C28;
    CFMutableDictionaryRef v17 = *(void **)(a1 + 40);
    v21[4] = *(void *)(a1 + 32);
    id v18 = v17;
    __int16 v24 = *(_WORD *)(a1 + 56);
    uint64_t v19 = *(void *)(a1 + 48);
    id v22 = v18;
    uint64_t v23 = v19;
    [v14 enumerateObjectsUsingBlock:v21];
  }

  else if ([*(id *)(a1 + 32) _shouldLog])
  {
    CFBooleanRef v20 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint8_t buf = 67174657;
      *(_DWORD *)uint64_t v27 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "#ni-km,Read all status: %{private}d. No results",  buf,  8u);
    }
  }

void sub_100255D80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100255DB4(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 objectForKey:kSecAttrAccount]);
  if (v3)
  {
    int v5 = v3;
    int v4 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _internalReadItemWithService:*(void *)(a1 + 40) account:v3 synchronizable:*(unsigned __int8 *)(a1 + 56) systemKeychain:*(unsigned __int8 *)(a1 + 57)]);
    if (v4) {
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObject:v4];
    }

    uint64_t v3 = v5;
  }
}

void sub_100255E38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100255F48(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _shouldLog])
  {
    uint64_t v2 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      uint64_t v4 = *(void *)(a1 + 48);
      int v5 = *(unsigned __int8 *)(a1 + 64);
      int v6 = *(unsigned __int8 *)(a1 + 65);
      int v16 = 138478595;
      uint64_t v17 = v3;
      __int16 v18 = 2113;
      uint64_t v19 = v4;
      __int16 v20 = 1024;
      int v21 = v5;
      __int16 v22 = 1024;
      int v23 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#ni-km,Delete: %{private}@, %{private}@, %d, %d",  (uint8_t *)&v16,  0x22u);
    }
  }

  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable( kCFAllocatorDefault,  0LL,  &kCFTypeDictionaryKeyCallBacks,  &kCFTypeDictionaryValueCallBacks);
  uint64_t v8 = (__CFDictionary *)CFAutorelease(Mutable);
  CFBooleanRef v9 = v8;
  if (*(_BYTE *)(a1 + 65)) {
    CFBooleanRef v10 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v10 = kCFBooleanFalse;
  }
  CFDictionaryAddValue(v8, kSecUseSystemKeychain, v10);
  CFDictionaryAddValue(v9, kSecClass, kSecClassGenericPassword);
  CFDictionaryAddValue(v9, kSecUseDataProtectionKeychain, kCFBooleanTrue);
  CFDictionaryAddValue(v9, kSecAttrAccount, *(const void **)(a1 + 48));
  CFDictionaryAddValue(v9, kSecAttrService, *(const void **)(a1 + 40));
  CFDictionaryAddValue(v9, kSecAttrAccessGroup, @"com.apple.nearbyd");
  if (*(_BYTE *)(a1 + 64)) {
    CFBooleanRef v11 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v11 = kCFBooleanFalse;
  }
  CFDictionaryAddValue(v9, kSecAttrSynchronizable, v11);
  OSStatus v12 = SecItemDelete(v9);
  if ([*(id *)(a1 + 32) _shouldLog])
  {
    CFTypeID v13 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      int v16 = 67174657;
      LODWORD(vmemset(&__p[7], 0, 17) = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "#ni-km,Delete status: %{private}d.",  (uint8_t *)&v16,  8u);
    }
  }

  if (v12) {
    BOOL v14 = v12 == -25300;
  }
  else {
    BOOL v14 = 1;
  }
  char v15 = v14;
  *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = v15;
}

void sub_100256278(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _shouldLog])
  {
    uint64_t v2 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 40);
      int v4 = *(unsigned __int8 *)(a1 + 56);
      int v5 = *(unsigned __int8 *)(a1 + 57);
      int v15 = 138478339;
      uint64_t v16 = v3;
      __int16 v17 = 1024;
      int v18 = v4;
      __int16 v19 = 1024;
      int v20 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#ni-km,Delete all: %{private}@, %d, %d",  (uint8_t *)&v15,  0x18u);
    }
  }

  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable( kCFAllocatorDefault,  0LL,  &kCFTypeDictionaryKeyCallBacks,  &kCFTypeDictionaryValueCallBacks);
  unsigned int v7 = (__CFDictionary *)CFAutorelease(Mutable);
  uint64_t v8 = v7;
  if (*(_BYTE *)(a1 + 57)) {
    CFBooleanRef v9 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v9 = kCFBooleanFalse;
  }
  CFDictionaryAddValue(v7, kSecUseSystemKeychain, v9);
  CFDictionaryAddValue(v8, kSecClass, kSecClassGenericPassword);
  CFDictionaryAddValue(v8, kSecUseDataProtectionKeychain, kCFBooleanTrue);
  CFDictionaryAddValue(v8, kSecAttrService, *(const void **)(a1 + 40));
  CFDictionaryAddValue(v8, kSecAttrAccessGroup, @"com.apple.nearbyd");
  if (*(_BYTE *)(a1 + 56)) {
    CFBooleanRef v10 = kCFBooleanTrue;
  }
  else {
    CFBooleanRef v10 = kCFBooleanFalse;
  }
  CFDictionaryAddValue(v8, kSecAttrSynchronizable, v10);
  OSStatus v11 = SecItemDelete(v8);
  if ([*(id *)(a1 + 32) _shouldLog])
  {
    OSStatus v12 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      int v15 = 67174657;
      LODWORD(v16) = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "#ni-km,Delete all status: %{private}d.",  (uint8_t *)&v15,  8u);
    }
  }

  if (v11) {
    BOOL v13 = v11 == -25300;
  }
  else {
    BOOL v13 = 1;
  }
  char v14 = v13;
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v14;
}

void sub_100256574(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002568D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100257AB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100258E1C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Block_object_dispose((const void *)(v19 - 160), 8);
  _Unwind_Resume(a1);
}

id sub_100258F50(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  id result = [*(id *)(a1 + 32) containsObject:a2];
  if ((result & 1) == 0)
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 0;
    *a4 = 1;
  }

  return result;
}

id sub_100258F94(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  id result = [*(id *)(a1 + 32) containsObject:a2];
  if ((result & 1) == 0)
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 0;
    *a4 = 1;
  }

  return result;
}

id sub_100258FD8(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  id result = [*(id *)(a1 + 32) containsObject:a2];
  if ((result & 1) == 0)
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 0;
    *a4 = 1;
  }

  return result;
}

id sub_10025901C(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  id result = [*(id *)(a1 + 32) containsObject:a2];
  if ((result & 1) == 0)
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 0;
    *a4 = 1;
  }

  return result;
}

id sub_100259060(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  id result = [*(id *)(a1 + 32) containsObject:a2];
  if ((result & 1) == 0)
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 0;
    *a4 = 1;
  }

  return result;
}

void sub_10025A094(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10025A138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10025A260(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10025A38C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10025A4B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10025A524(uint64_t a1)
{
  *(void *)a1 = sub_1001A8438();
  *(void *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(_WORD *)(a1 + 32) = -1;
  *(_BYTE *)(a1 + 34) = -1;
  *(_BYTE *)(a1 + 36) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 44) = 1;
  *(_WORD *)(a1 + 4std::ostream::~ostream(v2, v3 + 8) = 0;
  *(void *)(a1 + 64) = 0LL;
  *(_BYTE *)(a1 + 50) = 0;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + sub_100012390(v1 + 72) = 0LL;
  *(void *)(a1 + 8std::ostream::~ostream(v2, v3 + 8) = 0LL;
  *(void *)(a1 + sub_10005DE34(v14 - 80) = a1 + 88;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 104) = a1 + 112;
  *(void *)(a1 + 136) = 0LL;
  *(void *)(a1 + 12std::ostream::~ostream(v2, v3 + 8) = a1 + 136;
  *(void *)(a1 + 120) = 0LL;
  *(void *)(a1 + 144) = 0LL;
  *(void *)(a1 + 152) = 850045863LL;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + sub_10012E628(v47 - 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 201) = 0u;
  uint64_t v6 = a1;
  sub_10025A7E4((uint64_t)&v6, 5u, 1, 0);
  sub_10025A7E4((uint64_t)&v6, 9u, 1, 0);
  sub_10025A7E4((uint64_t)&v6, 5u, 2, 0);
  sub_10025A7E4((uint64_t)&v6, 9u, 2, 0);
  sub_10025A7E4((uint64_t)&v6, 5u, 0, 1);
  sub_10025A7E4((uint64_t)&v6, 9u, 0, 1);
  sub_10025A7E4((uint64_t)&v6, 5u, 3, 0);
  sub_10025A7E4((uint64_t)&v6, 9u, 3, 0);
  LOWORD(v5) = 5;
  sub_10025D3F0((uint64_t **)(a1 + 80), (unsigned __int8 *)&v5, &v5);
  LOWORD(v5) = 9;
  sub_10025D3F0((uint64_t **)(a1 + 80), (unsigned __int8 *)&v5, &v5);
  uint64_t v5 = a1;
  sub_10025D1F8((uint64_t)&v5, 1, 0);
  sub_10025D1F8((uint64_t)&v5, 2, 0);
  sub_10025D1F8((uint64_t)&v5, 0, 1);
  sub_10025D1F8((uint64_t)&v5, 3, 0);
  *(_WORD *)int v4 = 1;
  sub_10025D3F0((uint64_t **)(a1 + 128), v4, v4);
  uint64_t v2 = (os_log_s *)qword_1007FBF90;
  if (os_log_type_enabled((os_log_t)qword_1007FBF90, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "regulatory,settings,init", v4, 2u);
  }

  return a1;
}

void sub_10025A780(_Unwind_Exception *a1)
{
}

uint64_t **sub_10025A7E4(uint64_t a1, unsigned int a2, int a3, char a4)
{
  unsigned __int8 v19 = a2;
  uint64_t v6 = *(void *)(*(void *)a1 + 64LL);
  unsigned int v7 = (uint64_t **)(*(void *)a1 + 56LL);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v8 = *(void *)a1 + 64LL;
  do
  {
    unsigned int v9 = *(unsigned __int8 *)(v6 + 32);
    BOOL v10 = v9 >= a2;
    if (v9 >= a2) {
      OSStatus v11 = (uint64_t *)v6;
    }
    else {
      OSStatus v11 = (uint64_t *)(v6 + 8);
    }
    if (v10) {
      uint64_t v8 = v6;
    }
    uint64_t v6 = *v11;
  }

  while (*v11);
  if (v8 == *(void *)a1 + 64LL || *(unsigned __int8 *)(v8 + 32) > a2)
  {
LABEL_12:
    v15[0] = 0LL;
    v15[1] = 0LL;
    char v14 = v15;
    LOBYTE(v16) = a2;
    v18[0] = 0LL;
    v18[1] = 0LL;
    __int16 v17 = v18;
    sub_10025D008((uint64_t)v7, (unsigned __int8 *)&v16, (uint64_t)&v16);
    sub_100034A98((uint64_t)&v17, v18[0]);
    sub_100034A98((uint64_t)&v14, v15[0]);
  }

  uint64_t v16 = &v19;
  OSStatus v12 = sub_10025D324(v7, &v19, (uint64_t)&unk_1004242F8, &v16);
  LODWORD(v16) = a3;
  BYTE4(v16) = a4;
  return sub_10025D138(v12 + 5, (int *)&v16, (uint64_t)&v16);
}

void sub_10025A8E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
}

BOOL sub_10025A910(uint64_t a1, int a2)
{
  unsigned __int8 v23 = a2;
  sub_10025ABFC(a1, a2, &v22);
  *(void *)uint8_t buf = &v23;
  uint64_t v3 = sub_10025D324((uint64_t **)(a1 + 104), &v23, (uint64_t)&unk_1004242F8, (_BYTE **)buf)[5];
  *(void *)uint8_t buf = &v23;
  uint64_t v4 = sub_10025D324((uint64_t **)(a1 + 104), &v23, (uint64_t)&unk_1004242F8, (_BYTE **)buf) + 6;
  if (v3 == (uint64_t *)v4)
  {
    int v5 = 1;
  }

  else
  {
    do
    {
      int v5 = *((_BYTE *)v3 + 32) != 0;
      if (!*((_BYTE *)v3 + 32)) {
        break;
      }
      uint64_t v6 = (uint64_t *)v3[1];
      if (v6)
      {
        do
        {
          unsigned int v7 = v6;
          uint64_t v6 = (uint64_t *)*v6;
        }

        while (v6);
      }

      else
      {
        do
        {
          unsigned int v7 = (uint64_t *)v3[2];
          BOOL v8 = *v7 == (void)v3;
          uint64_t v3 = v7;
        }

        while (!v8);
      }

      uint64_t v3 = v7;
    }

    while (v7 != (uint64_t *)v4);
  }

  unsigned int v9 = (uint64_t **)(a1 + 128);
  *(void *)uint8_t buf = &v23;
  int v10 = *((unsigned __int8 *)sub_10025D4A8(v9, &v23, (uint64_t)&unk_1004242F8, (unsigned __int8 **)buf) + 26);
  if (v10 != v5)
  {
    OSStatus v11 = (os_log_s *)qword_1007FBF90;
    if (os_log_type_enabled((os_log_t)qword_1007FBF90, OS_LOG_TYPE_DEFAULT))
    {
      OSStatus v12 = &v22;
      if ((v22.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        OSStatus v12 = (std::stringbuf::string_type *)v22.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)uint8_t buf = 136315138;
      *(void *)&uint8_t buf[4] = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%s", buf, 0xCu);
    }

    BOOL v13 = (os_log_s *)(id)qword_1007FBF90;
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      sub_10032B9D0(v23, __p);
      int v14 = v21;
      int v15 = (void **)__p[0];
      __int16 v24 = &v23;
      uint64_t v16 = sub_10025D4A8(v9, &v23, (uint64_t)&unk_1004242F8, &v24);
      __int16 v17 = __p;
      int v18 = *((unsigned __int8 *)v16 + 26);
      if (v14 < 0) {
        __int16 v17 = v15;
      }
      *(_DWORD *)uint8_t buf = 136315650;
      *(void *)&uint8_t buf[4] = v17;
      __int16 v26 = 1024;
      int v27 = v18;
      __int16 v28 = 1024;
      int v29 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "regulatory,settings,ch,%s,current,%d,newChannelPreference,%d",  buf,  0x18u);
      if (v21 < 0) {
        operator delete(__p[0]);
      }
    }

    *(void *)uint8_t buf = &v23;
    *((_BYTE *)sub_10025D4A8(v9, &v23, (uint64_t)&unk_1004242F8, (unsigned __int8 **)buf) + 26) = v5;
  }

  return v10 != v5;
}

void sub_10025ABB4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }

  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10025ABFC@<X0>(uint64_t a1@<X0>, int a2@<W1>, std::stringbuf::string_type *a3@<X8>)
{
  unsigned __int8 v34 = a2;
  sub_100045754((uint64_t)v30);
  uint64_t v6 = sub_100046B94(&v31, (uint64_t)"regulatory,settings,NBChannelPref,", 34LL);
  sub_10032B9D0(a2, __p);
  if ((v29 & 0x80u) == 0) {
    unsigned int v7 = __p;
  }
  else {
    unsigned int v7 = (void **)__p[0];
  }
  if ((v29 & 0x80u) == 0) {
    uint64_t v8 = v29;
  }
  else {
    uint64_t v8 = (uint64_t)__p[1];
  }
  unsigned int v9 = sub_100046B94(v6, (uint64_t)v7, v8);
  sub_100046B94(v9, (uint64_t)",", 1LL);
  int v10 = sub_100046B94(&v31, (uint64_t)"Airplane,", 9LL);
  OSStatus v11 = (uint64_t **)(a1 + 104);
  __p[0] = &v34;
  OSStatus v12 = sub_10025D324(v11, &v34, (uint64_t)&unk_1004242F8, (_BYTE **)__p);
  __p[0] = &dword_10042A954;
  BOOL v13 = sub_100160F94(v12 + 5, &dword_10042A954, (uint64_t)&unk_1004242F8, (_DWORD **)__p);
  int v14 = (void *)std::ostream::operator<<(v10, *((unsigned __int8 *)v13 + 32));
  sub_100046B94(v14, (uint64_t)",", 1LL);
  int v15 = sub_100046B94(&v31, (uint64_t)"RegulatoryArea,", 15LL);
  __p[0] = &v34;
  uint64_t v16 = sub_10025D324(v11, &v34, (uint64_t)&unk_1004242F8, (_BYTE **)__p);
  __p[0] = &unk_10042A960;
  __int16 v17 = sub_100160F94(v16 + 5, (int *)&unk_10042A960, (uint64_t)&unk_1004242F8, (_DWORD **)__p);
  int v18 = (void *)std::ostream::operator<<(v15, *((unsigned __int8 *)v17 + 32));
  sub_100046B94(v18, (uint64_t)",", 1LL);
  unsigned __int8 v19 = sub_100046B94(&v31, (uint64_t)"Switch,", 7LL);
  __p[0] = &v34;
  int v20 = sub_10025D324(v11, &v34, (uint64_t)&unk_1004242F8, (_BYTE **)__p);
  __p[0] = &dword_10042A958;
  char v21 = sub_100160F94(v20 + 5, &dword_10042A958, (uint64_t)&unk_1004242F8, (_DWORD **)__p);
  std::stringbuf::string_type v22 = (void *)std::ostream::operator<<(v19, *((unsigned __int8 *)v21 + 32));
  sub_100046B94(v22, (uint64_t)",", 1LL);
  unsigned __int8 v23 = sub_100046B94(&v31, (uint64_t)"RestrictedRegion,", 17LL);
  __p[0] = &v34;
  __int16 v24 = sub_10025D324(v11, &v34, (uint64_t)&unk_1004242F8, (_BYTE **)__p);
  __p[0] = &dword_10042A95C;
  OSStatus v25 = sub_100160F94(v24 + 5, &dword_10042A95C, (uint64_t)&unk_1004242F8, (_DWORD **)__p);
  std::ostream::operator<<(v23, *((unsigned __int8 *)v25 + 32));
  std::stringbuf::str(a3, &v32);
  *(void *)((char *)v30
  uint64_t v31 = v26;
  std::streambuf::~streambuf(&v32);
  return std::ios::~ios(&v33);
}

void sub_10025AF10( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
}

BOOL sub_10025AF40(uint64_t a1, int a2)
{
  unsigned __int8 v20 = a2;
  sub_10025B200(a1, a2, &__p);
  *(void *)uint8_t buf = &v20;
  uint64_t v3 = sub_10025D324((uint64_t **)(a1 + 56), &v20, (uint64_t)&unk_1004242F8, (_BYTE **)buf)[5];
  *(void *)uint8_t buf = &v20;
  uint64_t v4 = sub_10025D324((uint64_t **)(a1 + 56), &v20, (uint64_t)&unk_1004242F8, (_BYTE **)buf) + 6;
  if (v3 == (uint64_t *)v4)
  {
    int v5 = 1;
  }

  else
  {
    do
    {
      int v5 = *((_BYTE *)v3 + 32) != 0;
      if (!*((_BYTE *)v3 + 32)) {
        break;
      }
      uint64_t v6 = (uint64_t *)v3[1];
      if (v6)
      {
        do
        {
          unsigned int v7 = v6;
          uint64_t v6 = (uint64_t *)*v6;
        }

        while (v6);
      }

      else
      {
        do
        {
          unsigned int v7 = (uint64_t *)v3[2];
          BOOL v8 = *v7 == (void)v3;
          uint64_t v3 = v7;
        }

        while (!v8);
      }

      uint64_t v3 = v7;
    }

    while (v7 != (uint64_t *)v4);
  }

  unsigned int v9 = (uint64_t **)(a1 + 80);
  *(void *)uint8_t buf = &v20;
  int v10 = *((unsigned __int8 *)sub_10025D4A8(v9, &v20, (uint64_t)&unk_1004242F8, (unsigned __int8 **)buf) + 26);
  if (v10 != v5)
  {
    OSStatus v11 = (os_log_s *)qword_1007FBF90;
    if (os_log_type_enabled((os_log_t)qword_1007FBF90, OS_LOG_TYPE_DEFAULT))
    {
      p_p = &__p;
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)uint8_t buf = 136315138;
      *(void *)&uint8_t buf[4] = p_p;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%s", buf, 0xCu);
    }

    BOOL v13 = (os_log_s *)(id)qword_1007FBF90;
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = v20;
      char v21 = &v20;
      int v15 = sub_10025D4A8(v9, &v20, (uint64_t)&unk_1004242F8, &v21);
      uint64_t v16 = "CH9";
      int v17 = *((unsigned __int8 *)v15 + 26);
      *(_DWORD *)uint8_t buf = 136315650;
      if (v14 == 5) {
        uint64_t v16 = "CH5";
      }
      *(void *)&uint8_t buf[4] = v16;
      __int16 v23 = 1024;
      int v24 = v17;
      __int16 v25 = 1024;
      int v26 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "regulatory,settings,ch,%s,current,%d,newChannelPreference,%d",  buf,  0x18u);
    }

    *(void *)uint8_t buf = &v20;
    *((_BYTE *)sub_10025D4A8(v9, &v20, (uint64_t)&unk_1004242F8, (unsigned __int8 **)buf) + 26) = v5;
  }

  return v10 != v5;
}

void sub_10025B1D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10025B200@<X0>(uint64_t a1@<X0>, int a2@<W1>, std::stringbuf::string_type *a3@<X8>)
{
  unsigned __int8 v34 = a2;
  sub_100045754((uint64_t)v30);
  uint64_t v6 = sub_100046B94(&v31, (uint64_t)"regulatory,settings,UWBChannelPref,", 35LL);
  sub_10032BA04(a2, __p);
  if ((v29 & 0x80u) == 0) {
    unsigned int v7 = __p;
  }
  else {
    unsigned int v7 = (void **)__p[0];
  }
  if ((v29 & 0x80u) == 0) {
    uint64_t v8 = v29;
  }
  else {
    uint64_t v8 = (uint64_t)__p[1];
  }
  unsigned int v9 = sub_100046B94(v6, (uint64_t)v7, v8);
  sub_100046B94(v9, (uint64_t)",", 1LL);
  int v10 = sub_100046B94(&v31, (uint64_t)"Airplane,", 9LL);
  OSStatus v11 = (uint64_t **)(a1 + 56);
  __p[0] = &v34;
  OSStatus v12 = sub_10025D324(v11, &v34, (uint64_t)&unk_1004242F8, (_BYTE **)__p);
  __p[0] = &dword_10042A954;
  BOOL v13 = sub_100160F94(v12 + 5, &dword_10042A954, (uint64_t)&unk_1004242F8, (_DWORD **)__p);
  int v14 = (void *)std::ostream::operator<<(v10, *((unsigned __int8 *)v13 + 32));
  sub_100046B94(v14, (uint64_t)",", 1LL);
  int v15 = sub_100046B94(&v31, (uint64_t)"RegulatoryArea,", 15LL);
  __p[0] = &v34;
  uint64_t v16 = sub_10025D324(v11, &v34, (uint64_t)&unk_1004242F8, (_BYTE **)__p);
  __p[0] = &unk_10042A960;
  int v17 = sub_100160F94(v16 + 5, (int *)&unk_10042A960, (uint64_t)&unk_1004242F8, (_DWORD **)__p);
  int v18 = (void *)std::ostream::operator<<(v15, *((unsigned __int8 *)v17 + 32));
  sub_100046B94(v18, (uint64_t)",", 1LL);
  unsigned __int8 v19 = sub_100046B94(&v31, (uint64_t)"Switch,", 7LL);
  __p[0] = &v34;
  unsigned __int8 v20 = sub_10025D324(v11, &v34, (uint64_t)&unk_1004242F8, (_BYTE **)__p);
  __p[0] = &dword_10042A958;
  char v21 = sub_100160F94(v20 + 5, &dword_10042A958, (uint64_t)&unk_1004242F8, (_DWORD **)__p);
  std::stringbuf::string_type v22 = (void *)std::ostream::operator<<(v19, *((unsigned __int8 *)v21 + 32));
  sub_100046B94(v22, (uint64_t)",", 1LL);
  __int16 v23 = sub_100046B94(&v31, (uint64_t)"RestrictedRegion,", 17LL);
  __p[0] = &v34;
  int v24 = sub_10025D324(v11, &v34, (uint64_t)&unk_1004242F8, (_BYTE **)__p);
  __p[0] = &dword_10042A95C;
  __int16 v25 = sub_100160F94(v24 + 5, &dword_10042A95C, (uint64_t)&unk_1004242F8, (_DWORD **)__p);
  std::ostream::operator<<(v23, *((unsigned __int8 *)v25 + 32));
  std::stringbuf::str(a3, &v32);
  *(void *)((char *)v30
  uint64_t v31 = v26;
  std::streambuf::~streambuf(&v32);
  return std::ios::~ios(&v33);
}

void sub_10025B514( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
}

uint64_t sub_10025B544(uint64_t a1)
{
  BOOL v2 = sub_10025AF40(a1, 5);
  int v3 = v2 | sub_10025AF40(a1, 9);
  if (sub_10025A910(a1, 1)) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  return v4 | v3;
}

uint64_t sub_10025B598(uint64_t a1, int a2)
{
  int v4 = (std::mutex *)(a1 + 152);
  std::mutex::lock((std::mutex *)(a1 + 152));
  int v5 = (os_log_s *)qword_1007FBF90;
  if (os_log_type_enabled((os_log_t)qword_1007FBF90, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint8_t buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "regulatory,settings,setAirplaneMode,%d",  buf,  8u);
  }

  *(_BYTE *)(a1 + 49) = a2;
  *(void *)uint8_t buf = &unk_10042A950;
  uint64_t v6 = sub_10025D324((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_10042A950, (uint64_t)&unk_1004242F8, (_BYTE **)buf);
  *(void *)uint8_t buf = &dword_10042A954;
  *((_BYTE *)sub_100160F94(v6 + 5, &dword_10042A954, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 32) = a2 ^ 1;
  char v7 = *(_BYTE *)(a1 + 49);
  *(void *)uint8_t buf = &unk_10042A951;
  uint64_t v8 = sub_10025D324((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_10042A951, (uint64_t)&unk_1004242F8, (_BYTE **)buf);
  *(void *)uint8_t buf = &dword_10042A954;
  *((_BYTE *)sub_100160F94(v8 + 5, &dword_10042A954, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 32) = v7 ^ 1;
  char v9 = *(_BYTE *)(a1 + 49);
  *(void *)uint8_t buf = byte_10042A952;
  int v10 = sub_10025D324((uint64_t **)(a1 + 104), byte_10042A952, (uint64_t)&unk_1004242F8, (_BYTE **)buf);
  *(void *)uint8_t buf = &dword_10042A954;
  *((_BYTE *)sub_100160F94(v10 + 5, &dword_10042A954, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 32) = v9 ^ 1;
  unsigned int v11 = sub_10025B544(a1);
  int v12 = v11 & 1;
  int v13 = (v11 >> 8) & 1;
  if (!*(_BYTE *)(a1 + 216))
  {
    int v14 = (os_log_s *)qword_1007FBF90;
    if (os_log_type_enabled((os_log_t)qword_1007FBF90, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint8_t buf = 67109888;
      *(_DWORD *)&uint8_t buf[4] = v12;
      __int16 v18 = 1024;
      int v19 = 0;
      __int16 v20 = 1024;
      int v21 = v13;
      __int16 v22 = 1024;
      int v23 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "regulatory,settings,setAirplaneMode,ignoreUpdates,isUWBChannelSettingChanged,%d,isUWBPowerTableChanged,%d, isNBC hannelSettingChanged,%d,isNBPowerTableChanged,%d",  buf,  0x1Au);
    }
  }

  if (v12) {
    int v15 = *(unsigned __int8 *)(a1 + 216);
  }
  else {
    int v15 = 0;
  }
  std::mutex::unlock(v4);
  return v15 | (v13 << 16);
}

void sub_10025B7E4(_Unwind_Exception *a1)
{
}

uint64_t sub_10025B7FC(uint64_t a1, int a2)
{
  int v4 = (std::mutex *)(a1 + 152);
  std::mutex::lock((std::mutex *)(a1 + 152));
  if (*(unsigned __int8 *)(a1 + 50) != a2)
  {
    int v5 = (os_log_s *)qword_1007FBF90;
    if (os_log_type_enabled((os_log_t)qword_1007FBF90, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint8_t buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "regulatory,settings,isRestrictedRegion,%d",  buf,  8u);
    }
  }

  *(_BYTE *)(a1 + 50) = a2;
  *(void *)uint8_t buf = &unk_10042A950;
  uint64_t v6 = sub_10025D324((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_10042A950, (uint64_t)&unk_1004242F8, (_BYTE **)buf);
  *(void *)uint8_t buf = &dword_10042A95C;
  *((_BYTE *)sub_100160F94(v6 + 5, &dword_10042A95C, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 32) = a2;
  char v7 = *(_BYTE *)(a1 + 50);
  *(void *)uint8_t buf = &unk_10042A951;
  uint64_t v8 = sub_10025D324((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_10042A951, (uint64_t)&unk_1004242F8, (_BYTE **)buf);
  *(void *)uint8_t buf = &dword_10042A95C;
  *((_BYTE *)sub_100160F94(v8 + 5, &dword_10042A95C, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 32) = v7;
  char v9 = *(_BYTE *)(a1 + 50);
  *(void *)uint8_t buf = byte_10042A952;
  int v10 = sub_10025D324((uint64_t **)(a1 + 104), byte_10042A952, (uint64_t)&unk_1004242F8, (_BYTE **)buf);
  *(void *)uint8_t buf = &dword_10042A95C;
  *((_BYTE *)sub_100160F94(v10 + 5, &dword_10042A95C, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 32) = v9;
  int v11 = sub_10025B544(a1) & 1;
  if (!*(_BYTE *)(a1 + 216))
  {
    int v12 = (os_log_s *)qword_1007FBF90;
    if (os_log_type_enabled((os_log_t)qword_1007FBF90, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint8_t buf = 67109376;
      *(_DWORD *)&uint8_t buf[4] = v11;
      __int16 v16 = 1024;
      int v17 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "regulatory,settings,setInRestrictedRegion,ignoreUpdates,isChannelSettingChanged,%d,isPowerTableChanged,%d",  buf,  0xEu);
    }
  }

  if (v11) {
    uint64_t v13 = *(unsigned __int8 *)(a1 + 216);
  }
  else {
    uint64_t v13 = 0LL;
  }
  std::mutex::unlock(v4);
  return v13;
}

void sub_10025BA3C(_Unwind_Exception *a1)
{
}

uint64_t sub_10025BA54(uint64_t a1, const std::string *a2)
{
  BOOL v2 = a2;
  int v4 = (std::string *)(a1 + 8);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 31);
  if ((v5 & 0x80u) == 0LL) {
    uint64_t v6 = *(unsigned __int8 *)(a1 + 31);
  }
  else {
    uint64_t v6 = *(void *)(a1 + 16);
  }
  std::string::size_type size = a2->__r_.__value_.__s.__size_;
  int v8 = (char)size;
  if ((size & 0x80u) != 0LL) {
    std::string::size_type size = a2->__r_.__value_.__l.__size_;
  }
  if (v6 != size) {
    goto LABEL_16;
  }
  if (v8 < 0) {
    a2 = (const std::string *)a2->__r_.__value_.__r.__words[0];
  }
  if ((v5 & 0x80) != 0)
  {
    if (memcmp(v4->__r_.__value_.__l.__data_, a2, *(void *)(a1 + 16))) {
      goto LABEL_16;
    }
LABEL_21:
    int v13 = 0;
    int v14 = 0;
    int v15 = 0;
    int v16 = 0;
    return (v15 << 16) | (v16 << 24) | (v13 << 8) | v14;
  }

  if (!*(_BYTE *)(a1 + 31)) {
    goto LABEL_21;
  }
  char v9 = (unsigned __int8 *)(a1 + 8);
  while (*v9 == a2->__r_.__value_.__s.__data_[0])
  {
    ++v9;
    a2 = (const std::string *)((char *)a2 + 1);
    if (!--v5) {
      goto LABEL_21;
    }
  }

void sub_10025C144( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, char a25)
{
  std::mutex::unlock(a10);
  sub_1001A951C(v26 - 160);
  _Unwind_Resume(a1);
}

BOOL sub_10025C1DC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 80);
  BOOL v2 = (void *)(a1 + 88);
  if (v1 == (void *)(a1 + 88)) {
    return 0LL;
  }
  do
  {
    BOOL result = *((_BYTE *)v1 + 26) != 0;
    if (*((_BYTE *)v1 + 26)) {
      break;
    }
    int v4 = (void *)v1[1];
    if (v4)
    {
      do
      {
        uint64_t v5 = v4;
        int v4 = (void *)*v4;
      }

      while (v4);
    }

    else
    {
      do
      {
        uint64_t v5 = (void *)v1[2];
        BOOL v6 = *v5 == (void)v1;
        uint64_t v1 = v5;
      }

      while (!v6);
    }

    uint64_t v1 = v5;
  }

  while (v5 != v2);
  return result;
}

BOOL sub_10025C240(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 128);
  BOOL v2 = (void *)(a1 + 136);
  if (v1 == (void *)(a1 + 136)) {
    return 0LL;
  }
  do
  {
    BOOL result = *((_BYTE *)v1 + 26) != 0;
    if (*((_BYTE *)v1 + 26)) {
      break;
    }
    int v4 = (void *)v1[1];
    if (v4)
    {
      do
      {
        uint64_t v5 = v4;
        int v4 = (void *)*v4;
      }

      while (v4);
    }

    else
    {
      do
      {
        uint64_t v5 = (void *)v1[2];
        BOOL v6 = *v5 == (void)v1;
        uint64_t v1 = v5;
      }

      while (!v6);
    }

    uint64_t v1 = v5;
  }

  while (v5 != v2);
  return result;
}

uint64_t sub_10025C2A4(uint64_t a1)
{
  BOOL v2 = (std::mutex *)(a1 + 152);
  std::mutex::lock((std::mutex *)(a1 + 152));
  if (*(char *)(a1 + 31) < 0)
  {
    **(_BYTE **)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0;
    *(void *)(a1 + 16) = 0LL;
  }

  else
  {
    *(_BYTE *)(a1 + std::ostream::~ostream(v2, v3 + 8) = 0;
    *(_BYTE *)(a1 + 31) = 0;
  }

  *(void *)uint8_t buf = &unk_10042A950;
  int v3 = sub_10025D324((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_10042A950, (uint64_t)&unk_1004242F8, (_BYTE **)buf);
  *(void *)uint8_t buf = &unk_10042A960;
  *((_BYTE *)sub_100160F94(v3 + 5, (int *)&unk_10042A960, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 32) = 0;
  *(void *)uint8_t buf = &unk_10042A951;
  int v4 = sub_10025D324((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_10042A951, (uint64_t)&unk_1004242F8, (_BYTE **)buf);
  *(void *)uint8_t buf = &unk_10042A960;
  *((_BYTE *)sub_100160F94(v4 + 5, (int *)&unk_10042A960, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 32) = 0;
  *(void *)uint8_t buf = byte_10042A952;
  uint64_t v5 = sub_10025D324((uint64_t **)(a1 + 104), byte_10042A952, (uint64_t)&unk_1004242F8, (_BYTE **)buf);
  *(void *)uint8_t buf = &unk_10042A960;
  *((_BYTE *)sub_100160F94(v5 + 5, (int *)&unk_10042A960, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 32) = 0;
  unsigned int v6 = sub_10025B544(a1);
  if (*(_BYTE *)(a1 + 216))
  {
    BOOL v7 = 1;
  }

  else
  {
    int v8 = (os_log_s *)qword_1007FBF90;
    if (os_log_type_enabled((os_log_t)qword_1007FBF90, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint8_t buf = 67109376;
      *(_DWORD *)&uint8_t buf[4] = v6 & 1;
      __int16 v12 = 1024;
      int v13 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "regulatory,settings,clearIsoCountry,isChannelSettingChanged,%d,isPowerTableChanged,%d",  buf,  0xEu);
    }

    BOOL v7 = *(_BYTE *)(a1 + 216) != 0;
  }

  BOOL v9 = (v6 & 1) != 0 && v7;
  std::mutex::unlock(v2);
  return v9 & 0xFFFEFFFF | (((v6 >> 8) & 1) << 16);
}

void sub_10025C4B4(_Unwind_Exception *a1)
{
}

uint64_t sub_10025C4CC(uint64_t a1)
{
  if (sub_10025C1DC(a1)) {
    return 1LL;
  }
  std::stringbuf::string_type __p = 0LL;
  BOOL v35 = 0LL;
  BOOL v36 = 0LL;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v4 = a1 + 64;
  uint64_t v3 = v5;
  if (!v5) {
    goto LABEL_52;
  }
  uint64_t v6 = v4;
  do
  {
    unsigned int v7 = *(unsigned __int8 *)(v3 + 32);
    BOOL v8 = v7 >= 9;
    if (v7 >= 9) {
      BOOL v9 = (uint64_t *)v3;
    }
    else {
      BOOL v9 = (uint64_t *)(v3 + 8);
    }
    if (v8) {
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v9;
  }

  while (*v9);
  if (v6 == v4 || *(unsigned __int8 *)(v6 + 32) >= 0xAu) {
LABEL_52:
  }
    __assert_rtn("uwbState", "PRRegulatorySettings.mm", 391, "ch9Preferences != fUWBChannelPref.end()");
  sub_10025D568((uint64_t *)&v32, v6 + 40);
  int v10 = v32;
  if (v32 != v33)
  {
    do
    {
      if (!*((_BYTE *)v10 + 32))
      {
        int v11 = v35;
        if (v35 >= v36)
        {
          int v13 = (char *)__p;
          uint64_t v14 = (v35 - (_BYTE *)__p) >> 2;
          unint64_t v15 = v14 + 1;
          uint64_t v16 = v36 - (_BYTE *)__p;
          if ((v36 - (_BYTE *)__p) >> 1 > v15) {
            unint64_t v15 = v16 >> 1;
          }
          else {
            unint64_t v17 = v15;
          }
          if (v17)
          {
            BOOL v18 = (char *)sub_100031724((uint64_t)&v36, v17);
            int v13 = (char *)__p;
            int v11 = v35;
          }

          else
          {
            BOOL v18 = 0LL;
          }

          BOOL v19 = &v18[4 * v14];
          *(_DWORD *)BOOL v19 = *((_DWORD *)v10 + 7);
          __int16 v12 = v19 + 4;
          while (v11 != v13)
          {
            int v20 = *((_DWORD *)v11 - 1);
            v11 -= 4;
            *((_DWORD *)v19 - 1) = v20;
            v19 -= 4;
          }

          std::stringbuf::string_type __p = v19;
          BOOL v35 = v12;
          BOOL v36 = &v18[4 * v17];
          if (v13) {
            operator delete(v13);
          }
        }

        else
        {
          *(_DWORD *)BOOL v35 = *((_DWORD *)v10 + 7);
          __int16 v12 = v11 + 4;
        }

        BOOL v35 = v12;
      }

      int v21 = v10[1];
      if (v21)
      {
        do
        {
          __int16 v22 = (void **)v21;
          int v21 = (void *)*v21;
        }

        while (v21);
      }

      else
      {
        do
        {
          __int16 v22 = (void **)v10[2];
          BOOL v25 = *v22 == v10;
          int v10 = v22;
        }

        while (!v25);
      }

      int v10 = v22;
    }

    while (v22 != v33);
  }

  int v23 = (unsigned int *)__p;
  int v24 = (char *)__p + 4;
  BOOL v25 = __p == v35 || v24 == v35;
  if (!v25)
  {
    int v26 = *(_DWORD *)__p;
    int v27 = (char *)__p + 4;
    do
    {
      int v29 = *(_DWORD *)v27;
      v27 += 4;
      int v28 = v29;
      BOOL v30 = v26 < v29;
      if (v26 <= v29) {
        int v26 = v28;
      }
      if (v30) {
        int v23 = (unsigned int *)v24;
      }
      int v24 = v27;
    }

    while (v27 != v35);
  }

  uint64_t v31 = *v23;
  sub_100034A98((uint64_t)&v32, v33[0]);
  if (__p)
  {
    BOOL v35 = (char *)__p;
    operator delete(__p);
  }

  return v31 << 32;
}

void sub_10025C6FC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10025C734(uint64_t a1)
{
  if (sub_10025C240(a1)) {
    return 1LL;
  }
  std::stringbuf::string_type __p = 0LL;
  char v33 = 0LL;
  unsigned __int8 v34 = 0LL;
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v4 = a1 + 112;
  uint64_t v3 = v5;
  if (!v5) {
    goto LABEL_51;
  }
  uint64_t v6 = v4;
  do
  {
    if (*(_BYTE *)(v3 + 32)) {
      unsigned int v7 = (uint64_t *)v3;
    }
    else {
      unsigned int v7 = (uint64_t *)(v3 + 8);
    }
    if (*(_BYTE *)(v3 + 32)) {
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v7;
  }

  while (*v7);
  if (v6 == v4 || *(unsigned __int8 *)(v6 + 32) >= 2u) {
LABEL_51:
  }
    __assert_rtn("nbState", "PRRegulatorySettings.mm", 430, "unii3Preferences != fNBChannelPref.end()");
  sub_10025D568((uint64_t *)&v30, v6 + 40);
  BOOL v8 = v30;
  if (v30 != v31)
  {
    do
    {
      if (!*((_BYTE *)v8 + 32))
      {
        BOOL v9 = v33;
        if (v33 >= v34)
        {
          int v11 = (char *)__p;
          uint64_t v12 = (v33 - (_BYTE *)__p) >> 2;
          unint64_t v13 = v12 + 1;
          uint64_t v14 = v34 - (_BYTE *)__p;
          if ((v34 - (_BYTE *)__p) >> 1 > v13) {
            unint64_t v13 = v14 >> 1;
          }
          else {
            unint64_t v15 = v13;
          }
          if (v15)
          {
            uint64_t v16 = (char *)sub_100031724((uint64_t)&v34, v15);
            int v11 = (char *)__p;
            BOOL v9 = v33;
          }

          else
          {
            uint64_t v16 = 0LL;
          }

          unint64_t v17 = &v16[4 * v12];
          *(_DWORD *)unint64_t v17 = *((_DWORD *)v8 + 7);
          int v10 = v17 + 4;
          while (v9 != v11)
          {
            int v18 = *((_DWORD *)v9 - 1);
            v9 -= 4;
            *((_DWORD *)v17 - 1) = v18;
            v17 -= 4;
          }

          std::stringbuf::string_type __p = v17;
          char v33 = v10;
          unsigned __int8 v34 = &v16[4 * v15];
          if (v11) {
            operator delete(v11);
          }
        }

        else
        {
          *(_DWORD *)char v33 = *((_DWORD *)v8 + 7);
          int v10 = v9 + 4;
        }

        char v33 = v10;
      }

      BOOL v19 = v8[1];
      if (v19)
      {
        do
        {
          int v20 = (void **)v19;
          BOOL v19 = (void *)*v19;
        }

        while (v19);
      }

      else
      {
        do
        {
          int v20 = (void **)v8[2];
          BOOL v23 = *v20 == v8;
          BOOL v8 = v20;
        }

        while (!v23);
      }

      BOOL v8 = v20;
    }

    while (v20 != v31);
  }

  int v21 = (unsigned int *)__p;
  __int16 v22 = (char *)__p + 4;
  BOOL v23 = __p == v33 || v22 == v33;
  if (!v23)
  {
    int v24 = *(_DWORD *)__p;
    BOOL v25 = (char *)__p + 4;
    do
    {
      int v27 = *(_DWORD *)v25;
      v25 += 4;
      int v26 = v27;
      BOOL v28 = v24 < v27;
      if (v24 <= v27) {
        int v24 = v26;
      }
      if (v28) {
        int v21 = (unsigned int *)v22;
      }
      __int16 v22 = v25;
    }

    while (v25 != v33);
  }

  uint64_t v29 = *v21;
  sub_100034A98((uint64_t)&v30, v31[0]);
  if (__p)
  {
    char v33 = (char *)__p;
    operator delete(__p);
  }

  return v29 << 32;
}

void sub_10025C964( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10025C99C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (std::mutex *)(a1 + 152);
  std::mutex::lock((std::mutex *)(a1 + 152));
  *(void *)(a2 + 32) = 0LL;
  *(_BYTE *)(a2 + 4) = 0;
  *(_BYTE *)(a2 + std::ostream::~ostream(v2, v3 + 8) = 0;
  *(_BYTE *)(a2 + 12) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 20) = 0;
  *(_BYTE *)(a2 + 24) = 0;
  *(void *)(a2 + 40) = 0LL;
  *(void *)(a2 + 4std::ostream::~ostream(v2, v3 + 8) = 0LL;
  if (!*(_BYTE *)(a1 + 216))
  {
    uint64_t v5 = (os_log_s *)qword_1007FBF90;
    if (os_log_type_enabled((os_log_t)qword_1007FBF90, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint8_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "regulatory,settings,getRegulatorySettingsLocked",  buf,  2u);
    }
  }

  *(_BYTE *)(a1 + 216) = 1;
  if (sub_100351480())
  {
    uint64_t v6 = (os_log_s *)qword_1007FBF90;
    if (os_log_type_enabled((os_log_t)qword_1007FBF90, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "PRRegulatorySettings: bypassing regulatory compliance requirements via defaults write.",  v10,  2u);
    }

    *(_WORD *)a2 = 257;
    *(_BYTE *)(a2 + 4) = 1;
    *(_BYTE *)(a2 + std::ostream::~ostream(v2, v3 + 8) = 0;
    *(_BYTE *)(a2 + 12) = 0;
    *(_BYTE *)(a2 + 16) = 1;
    *(_BYTE *)(a2 + 20) = 0;
    *(_BYTE *)(a2 + 24) = 0;
    std::string::assign((std::string *)(a2 + 32), "US");
    int v7 = 0;
    *(_BYTE *)(a2 + 56) = 0;
    *(_WORD *)(a2 + 5std::ostream::~ostream(v2, v3 + 8) = 0;
  }

  else
  {
    *(_BYTE *)a2 = sub_10025C1DC(a1);
    *(_BYTE *)(a2 + 1) = sub_10025C240(a1);
    *(void *)(a2 + 4) = sub_10025C4CC(a1);
    *(_DWORD *)(a2 + 12) = v8;
    *(void *)(a2 + 16) = sub_10025C734(a1);
    *(_DWORD *)(a2 + 24) = v9;
    std::string::operator=((std::string *)(a2 + 32), (const std::string *)(a1 + 8));
    *(_BYTE *)(a2 + 56) = *(_BYTE *)(a1 + 32);
    *(_WORD *)(a2 + 5std::ostream::~ostream(v2, v3 + 8) = *(unsigned __int8 *)(a1 + 36);
    int v7 = *(unsigned __int8 *)(a1 + 44);
    if (*(_BYTE *)(a1 + 44)) {
      int v7 = *(_DWORD *)(a1 + 40);
    }
  }

  *(_DWORD *)(a2 + 60) = v7;
  std::mutex::unlock(v4);
}

void sub_10025CB50(_Unwind_Exception *a1)
{
}

NSMutableArray *sub_10025CB7C(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 152);
  std::mutex::lock((std::mutex *)(a1 + 152));
  uint64_t v3 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  uint64_t v4 = (void *)(a1 + 8);
  uint64_t v5 = &v32;
  sub_10034D81C(*(_BYTE *)(a1 + 32), &v32);
  if ((v32.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    uint64_t v5 = (std::stringbuf::string_type *)v32.__r_.__value_.__r.__words[0];
  }
  sub_10034D88C(*(_BYTE *)(a1 + 33), v30);
  int v6 = v31;
  int v7 = (void **)v30[0];
  sub_10034D854(*(_BYTE *)(a1 + 34), __p);
  int v8 = v30;
  if (v6 < 0) {
    int v8 = v7;
  }
  if (v29 >= 0) {
    int v9 = __p;
  }
  else {
    int v9 = (void **)__p[0];
  }
  int v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Country: %s. UWB-reg group: %s. NB-reg group: %s. NB-SAR group: %s. Rose ready: %d",  v4,  v5,  v8,  v9,  *(unsigned __int8 *)(a1 + 216)));
  -[NSMutableArray addObject:](v3, "addObject:", v10);

  if (v29 < 0) {
    operator delete(__p[0]);
  }
  if (v31 < 0) {
    operator delete(v30[0]);
  }
  if (*(_BYTE *)(a1 + 44)) {
    uint64_t v11 = *(unsigned int *)(a1 + 40);
  }
  else {
    uint64_t v11 = 0LL;
  }
  uint64_t v12 = *(unsigned __int8 *)(a1 + 36);
  sub_100320A4C(v11, &v32);
  if ((v32.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    unint64_t v13 = &v32;
  }
  else {
    unint64_t v13 = (std::stringbuf::string_type *)v32.__r_.__value_.__r.__words[0];
  }
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Accessory: %d (%s). Switch: %d. Airplane mode: %d. Region allowed: %d",  v12,  v13,  *(unsigned __int8 *)(a1 + 48),  *(unsigned __int8 *)(a1 + 49),  *(unsigned __int8 *)(a1 + 50)));
  -[NSMutableArray addObject:](v3, "addObject:", v14);

  LOBYTE(__p[0]) = 5;
  v32.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
  uint64_t v15 = *((unsigned __int8 *)sub_10025D4A8( (uint64_t **)(a1 + 80),  (unsigned __int8 *)__p,  (uint64_t)&unk_1004242F8,  (unsigned __int8 **)&v32)
        + 26);
  unsigned __int8 v27 = 9;
  v32.__r_.__value_.__r.__words[0] = (std::string::size_type)&v27;
  uint64_t v16 = *((unsigned __int8 *)sub_10025D4A8( (uint64_t **)(a1 + 80),  &v27,  (uint64_t)&unk_1004242F8,  (unsigned __int8 **)&v32)
        + 26);
  unsigned __int8 v26 = 1;
  v32.__r_.__value_.__r.__words[0] = (std::string::size_type)&v26;
  unint64_t v17 = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Channel state: CH5 %d, CH9 %d, UNII-3 %d. Preference strings:",  v15,  v16,  *((unsigned __int8 *)sub_10025D4A8( (uint64_t **)(a1 + 128),  &v26,  (uint64_t)&unk_1004242F8,  (unsigned __int8 **)&v32)
          + 26));
  int v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
  -[NSMutableArray addObject:](v3, "addObject:", v18);

  sub_10025B200(a1, 5, &v32);
  if ((v32.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    BOOL v19 = &v32;
  }
  else {
    BOOL v19 = (std::stringbuf::string_type *)v32.__r_.__value_.__r.__words[0];
  }
  int v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"    %s", v19));
  -[NSMutableArray addObject:](v3, "addObject:", v20);

  sub_10025B200(a1, 9, &v32);
  if ((v32.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    int v21 = &v32;
  }
  else {
    int v21 = (std::stringbuf::string_type *)v32.__r_.__value_.__r.__words[0];
  }
  __int16 v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"    %s", v21));
  -[NSMutableArray addObject:](v3, "addObject:", v22);

  sub_10025ABFC(a1, 1, &v32);
  if ((v32.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    BOOL v23 = &v32;
  }
  else {
    BOOL v23 = (std::stringbuf::string_type *)v32.__r_.__value_.__r.__words[0];
  }
  int v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"    %s", v23));
  -[NSMutableArray addObject:](v3, "addObject:", v24);

  std::mutex::unlock(v2);
  return v3;
}

void sub_10025CF44( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, void *a22, uint64_t a23, int a24, __int16 a25, char a26, char a27, void *__p, uint64_t a29, int a30, __int16 a31, char a32, char a33)
{
  if (a33 < 0) {
    operator delete(__p);
  }

  std::mutex::unlock(v33);
  _Unwind_Resume(a1);
}

uint64_t *sub_10025D008(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t **)(a1 + 8);
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    unsigned int v6 = *a2;
    while (1)
    {
      while (1)
      {
        int v7 = (uint64_t **)v4;
        unsigned int v8 = *((unsigned __int8 *)v4 + 32);
        if (v6 >= v8) {
          break;
        }
        uint64_t v4 = *v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_10;
        }
      }

      if (v8 >= v6) {
        break;
      }
      uint64_t v4 = v7[1];
      if (!v4)
      {
        uint64_t v5 = v7 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    int v7 = (uint64_t **)(a1 + 8);
LABEL_10:
    sub_10025D0B8(a1, a3, (uint64_t)&v10);
    sub_10001E548((uint64_t **)a1, (uint64_t)v7, v5, v10);
    return v10;
  }

  return (uint64_t *)v7;
}

_BYTE *sub_10025D0B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  BOOL result = operator new(0x40uLL);
  *(void *)a3 = result;
  *(void *)(a3 + std::ostream::~ostream(v2, v3 + 8) = v5;
  result[32] = *(_BYTE *)a2;
  int v7 = (void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 16);
  *((void *)result + 5) = *(void *)(a2 + 8);
  *((void *)result + 6) = v8;
  int v9 = result + 48;
  uint64_t v10 = *(void *)(a2 + 24);
  *((void *)result + 7) = v10;
  if (v10)
  {
    *(void *)(v8 + 16) = v9;
    *(void *)(a2 + std::ostream::~ostream(v2, v3 + 8) = v7;
    *int v7 = 0LL;
    *(void *)(a2 + 24) = 0LL;
  }

  else
  {
    *((void *)result + 5) = v9;
  }

  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

uint64_t **sub_10025D138(uint64_t **a1, int *a2, uint64_t a3)
{
  unsigned int v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (uint64_t **)v5;
        int v9 = *((_DWORD *)v5 + 7);
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        unsigned int v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        unsigned int v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    uint64_t v8 = a1 + 1;
LABEL_10:
    uint64_t v10 = operator new(0x28uLL);
    v10[7] = *(_DWORD *)a3;
    *((_BYTE *)v10 + 32) = *(_BYTE *)(a3 + 4);
    sub_10001E548(a1, (uint64_t)v8, v6, (uint64_t *)v10);
    return (uint64_t **)v10;
  }

  return v8;
}

uint64_t **sub_10025D1F8(uint64_t a1, int a2, char a3)
{
  unsigned __int8 v16 = 1;
  uint64_t v5 = *(void *)(*(void *)a1 + 112LL);
  unsigned int v6 = (uint64_t **)(*(void *)a1 + 104LL);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v7 = *(void *)a1 + 112LL;
  do
  {
    if (*(_BYTE *)(v5 + 32)) {
      uint64_t v8 = (uint64_t *)v5;
    }
    else {
      uint64_t v8 = (uint64_t *)(v5 + 8);
    }
    if (*(_BYTE *)(v5 + 32)) {
      uint64_t v7 = v5;
    }
    uint64_t v5 = *v8;
  }

  while (*v8);
  if (v7 == *(void *)a1 + 112LL || *(unsigned __int8 *)(v7 + 32) >= 2u)
  {
LABEL_11:
    v12[0] = 0LL;
    v12[1] = 0LL;
    uint64_t v11 = v12;
    LOBYTE(v13) = 1;
    v15[0] = 0LL;
    v15[1] = 0LL;
    uint64_t v14 = v15;
    sub_10025D008((uint64_t)v6, (unsigned __int8 *)&v13, (uint64_t)&v13);
    sub_100034A98((uint64_t)&v14, v15[0]);
    sub_100034A98((uint64_t)&v11, v12[0]);
  }

  unint64_t v13 = &v16;
  int v9 = sub_10025D324(v6, &v16, (uint64_t)&unk_1004242F8, &v13);
  LODWORD(v13) = a2;
  BYTE4(v13) = a3;
  return sub_10025D138(v9 + 5, (int *)&v13, (uint64_t)&v13);
}

void sub_10025D300( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
}

uint64_t **sub_10025D324(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, _BYTE **a4)
{
  uint64_t v7 = a1 + 1;
  unsigned int v6 = a1[1];
  if (v6)
  {
    unsigned int v8 = *a2;
    while (1)
    {
      while (1)
      {
        int v9 = (uint64_t **)v6;
        unsigned int v10 = *((unsigned __int8 *)v6 + 32);
        if (v8 >= v10) {
          break;
        }
        unsigned int v6 = *v9;
        uint64_t v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }

      if (v10 >= v8) {
        break;
      }
      unsigned int v6 = v9[1];
      if (!v6)
      {
        uint64_t v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    int v9 = a1 + 1;
LABEL_10:
    uint64_t v11 = operator new(0x40uLL);
    v11[32] = **a4;
    *((void *)v11 + 7) = 0LL;
    *((void *)v11 + 6) = 0LL;
    *((void *)v11 + 5) = v11 + 48;
    sub_10001E548(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }

  return v9;
}

uint64_t **sub_10025D3F0(uint64_t **a1, unsigned __int8 *a2, _WORD *a3)
{
  unsigned int v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    unsigned int v7 = *a2;
    while (1)
    {
      while (1)
      {
        unsigned int v8 = (uint64_t **)v5;
        unsigned int v9 = *((unsigned __int8 *)v5 + 25);
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        unsigned int v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        unsigned int v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    unsigned int v8 = a1 + 1;
LABEL_10:
    unsigned int v10 = (char *)operator new(0x20uLL);
    *(_WORD *)(v10 + 25) = *a3;
    sub_10001E548(a1, (uint64_t)v8, v6, (uint64_t *)v10);
    return (uint64_t **)v10;
  }

  return v8;
}

uint64_t **sub_10025D4A8(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, unsigned __int8 **a4)
{
  unsigned int v7 = a1 + 1;
  unsigned int v6 = a1[1];
  if (v6)
  {
    unsigned int v8 = *a2;
    while (1)
    {
      while (1)
      {
        unsigned int v9 = (uint64_t **)v6;
        unsigned int v10 = *((unsigned __int8 *)v6 + 25);
        if (v8 >= v10) {
          break;
        }
        unsigned int v6 = *v9;
        unsigned int v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }

      if (v10 >= v8) {
        break;
      }
      unsigned int v6 = v9[1];
      if (!v6)
      {
        unsigned int v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    unsigned int v9 = a1 + 1;
LABEL_10:
    uint64_t v11 = (char *)operator new(0x20uLL);
    *(_WORD *)(v11 + 25) = **a4;
    sub_10001E548(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }

  return v9;
}

uint64_t *sub_10025D568(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_10025D5BC(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_10025D5A4(_Unwind_Exception *a1)
{
}

uint64_t *sub_10025D5BC(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    unsigned int v6 = result + 1;
    do
    {
      BOOL result = sub_10015EB38(v5, v6, v4 + 7, (uint64_t *)(v4 + 7));
      unsigned int v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          unsigned int v8 = v7;
          unsigned int v7 = *(int **)v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          unsigned int v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          uint64_t v4 = v8;
        }

        while (!v9);
      }

      uint64_t v4 = v8;
    }

    while (v8 != a3);
  }

  return result;
}

void sub_10025D640()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  qword_1007FBF90 = (uint64_t)os_log_create("com.apple.nearbyd", "Regulatory");
  objc_autoreleasePoolPop(v0);
}

void sub_10025D700(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10025D99C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, id a25)
{
  _Block_object_dispose(&a20, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10025DA00(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10025DA10(uint64_t a1)
{
}

void sub_10025DA18(uint64_t a1, void *a2)
{
}

uint64_t sub_10025DA28(uint64_t result)
{
  return result;
}

void sub_10025DA70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void **sub_10025DAB0(void **a1)
{
  uint64_t v3 = a1;
  sub_10025EFB0(&v3);
  return a1;
}

uint64_t sub_10025DAE4(uint64_t a1)
{
  return a1;
}

dispatch_queue_t *sub_10025DB0C(dispatch_queue_t *a1)
{
  *a1 = dispatch_queue_create("com.apple.nearbyd.ota.queue", 0LL);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[BGSystemTaskScheduler sharedScheduler](&OBJC_CLASS___BGSystemTaskScheduler, "sharedScheduler"));
  [v2 deregisterTaskWithIdentifier:@"com.apple.nearbyd.ota.task"];

  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[BGSystemTaskScheduler sharedScheduler](&OBJC_CLASS___BGSystemTaskScheduler, "sharedScheduler"));
  dispatch_queue_t v4 = *a1;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _OWORD v6[2] = sub_10025DC08;
  v6[3] = &unk_1007B8CC0;
  void v6[4] = a1;
  [v3 registerForTaskWithIdentifier:@"com.apple.nearbyd.ota.task" usingQueue:v4 launchHandler:v6];

  dispatch_async(*a1, &stru_1007B8CE0);
  sub_10025DEA8(a1);
  return a1;
}

void sub_10025DBE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10025DC08(uint64_t a1, void *a2)
{
}

void sub_10025DC10(dispatch_queue_t *a1, void *a2)
{
  id v3 = a2;
  dispatch_queue_t v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#ota,start to query ota files", buf, 2u);
  }

  *(void *)uint8_t buf = 0LL;
  int v18 = buf;
  uint64_t v19 = 0x2020000000LL;
  char v20 = 0;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  _DWORD v16[2] = sub_10025E340;
  v16[3] = &unk_1007B8D08;
  void v16[4] = buf;
  [v3 setExpirationHandler:v16];
  uint64_t v6 = qword_1007FC088;
  if ((_UNKNOWN *)qword_1007FC088 != &unk_1007FC090)
  {
    *(void *)&__int128 v5 = 136315138LL;
    __int128 v15 = v5;
    while (1)
    {
      int v7 = v18[24];
      unsigned int v8 = (os_log_s *)qword_1008000A0;
      BOOL v9 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
      if (v7) {
        break;
      }
      if (v9)
      {
        uint64_t v10 = v6 + 32;
        *(_DWORD *)int v21 = v15;
        uint64_t v22 = v10;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#ota,query %s", v21, 0xCu);
      }

      sub_10025E354(a1, v6 + 32, (void *)(v6 + 56));
      uint64_t v11 = *(void **)(v6 + 8);
      if (v11)
      {
        do
        {
          uint64_t v12 = v11;
          uint64_t v11 = (void *)*v11;
        }

        while (v11);
      }

      else
      {
        do
        {
          uint64_t v12 = *(void **)(v6 + 16);
          BOOL v13 = *v12 == v6;
          uint64_t v6 = (uint64_t)v12;
        }

        while (!v13);
      }

      uint64_t v6 = (uint64_t)v12;
      if (v12 == (void *)&unk_1007FC090) {
        goto LABEL_19;
      }
    }

    if (v9)
    {
      *(_WORD *)int v21 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#ota,task expiration, terminate file query",  v21,  2u);
    }
  }

void sub_10025DE80( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  _Unwind_Resume(a1);
}

void sub_10025DEA8(dispatch_queue_s **a1)
{
  uint64_t v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#ota,query configurable parameters on startup",  buf,  2u);
  }

  id v3 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10025E040;
  block[3] = &unk_1007A2398;
  void block[4] = a1;
  dispatch_async(v3, block);
}

id *sub_10025DF50(id *a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[BGSystemTaskScheduler sharedScheduler](&OBJC_CLASS___BGSystemTaskScheduler, "sharedScheduler"));
  unsigned int v3 = [v2 deregisterTaskWithIdentifier:@"com.apple.nearbyd.ota.task"];

  dispatch_queue_t v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#ota,deregister %d in destructor",  (uint8_t *)v6,  8u);
  }

  return a1;
}

void sub_10025E030(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_10000DE88(a1);
}

void sub_10025E040(uint64_t a1)
{
}

void sub_10025E048(dispatch_queue_t *a1)
{
  uint64_t v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#ota,query all files", v7, 2u);
  }

  dispatch_assert_queue_V2(*a1);
  unsigned int v3 = (void *)qword_1007FC088;
  if ((_UNKNOWN *)qword_1007FC088 != &unk_1007FC090)
  {
    do
    {
      sub_10025E354(a1, (uint64_t)(v3 + 4), v3 + 7);
      dispatch_queue_t v4 = (void *)v3[1];
      if (v4)
      {
        do
        {
          __int128 v5 = v4;
          dispatch_queue_t v4 = (void *)*v4;
        }

        while (v4);
      }

      else
      {
        do
        {
          __int128 v5 = (void *)v3[2];
          BOOL v6 = *v5 == (void)v3;
          unsigned int v3 = v5;
        }

        while (!v6);
      }

      unsigned int v3 = v5;
    }

    while (v5 != (void *)&unk_1007FC090);
  }

void sub_10025E124(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[BGSystemTaskScheduler sharedScheduler](&OBJC_CLASS___BGSystemTaskScheduler, "sharedScheduler"));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 taskRequestForIdentifier:@"com.apple.nearbyd.ota.task"]);

  if (!v2)
  {
    id v4 = [[BGRepeatingSystemTaskRequest alloc] initWithIdentifier:@"com.apple.nearbyd.ota.task"];
    [v4 setInterval:86400.0];
    [v4 setMinDurationBetweenInstances:69120.0];
    [v4 setPriority:2];
    [v4 setPreventsDeviceSleep:1];
    [v4 setShouldWakeDevice:0];
    __int128 v5 = (void *)objc_claimAutoreleasedReturnValue(+[BGSystemTaskScheduler sharedScheduler](&OBJC_CLASS___BGSystemTaskScheduler, "sharedScheduler"));
    id v13 = 0LL;
    unsigned __int8 v6 = [v5 submitTaskRequest:v4 error:&v13];
    id v7 = v13;

    uint64_t v8 = qword_1008000A0;
    BOOL v9 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
    if ((v6 & 1) != 0)
    {
      if (v9)
      {
        *(_WORD *)uint8_t buf = 0;
        uint64_t v10 = "#ota,submitted ota query task successfully";
        uint64_t v11 = (os_log_s *)v8;
        uint32_t v12 = 2;
LABEL_9:
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, buf, v12);
      }
    }

    else if (v9)
    {
      *(_DWORD *)uint8_t buf = 138412290;
      id v15 = v7;
      uint64_t v10 = "#ota,failed to submit task with error: %@";
      uint64_t v11 = (os_log_s *)v8;
      uint32_t v12 = 12;
      goto LABEL_9;
    }

    return;
  }

  unsigned int v3 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#ota,task already submitted, return", buf, 2u);
  }

void sub_10025E30C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10025E340(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = 1;
  return result;
}

void sub_10025E354(dispatch_queue_t *a1, uint64_t a2, void *a3)
{
  __int128 v5 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    else {
      uint64_t v6 = *(void *)a2;
    }
    *(_DWORD *)cf = 136315138;
    *(void *)&cf[4] = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#ota,query file %s", cf, 0xCu);
  }

  else {
    uint64_t v7 = *(void *)a2;
  }
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v7,  +[NSString defaultCStringEncoding](&OBJC_CLASS___NSString, "defaultCStringEncoding")));
  BOOL v9 = (const __CFDictionary *)CLCopyNearbyAssetSettingsOfAccessoryFile();
  uint64_t v10 = v9;
  if (v9)
  {
    CFTypeID v11 = CFGetTypeID(v9);
    if (v11 == CFDictionaryGetTypeID())
    {
      *(void *)cf = 0LL;
      else {
        uint32_t v12 = *(const char **)a2;
      }
      CFStringRef v13 = CFStringCreateWithCString(kCFAllocatorDefault, v12, 0x8000100u);
      if (CFDictionaryGetValueIfPresent(v10, v13, (const void **)cf))
      {
        if (*(void *)cf)
        {
          CFTypeID v14 = CFGetTypeID(*(CFTypeRef *)cf);
          CFTypeID TypeID = CFDataGetTypeID();
          if (v14 == TypeID) {
            sub_10025E56C(TypeID, *(void **)cf, (uint64_t *)a2, a3);
          }
        }
      }

      if (v13) {
        CFRelease(v13);
      }
LABEL_23:
      CFRelease(v10);
      goto LABEL_24;
    }
  }

  unsigned __int8 v16 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)cf = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#ota,empty file content", cf, 2u);
  }

  if (v10) {
    goto LABEL_23;
  }
LABEL_24:
}

void sub_10025E548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10025E56C(uint64_t a1, void *a2, uint64_t *a3, void *a4)
{
  id v50 = a2;
  __int128 v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization propertyListWithData:options:format:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "propertyListWithData:options:format:error:"));
  id v51 = 0LL;
  if (v51)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A2690();
    }
  }

  else
  {
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSDictionary, v6);
    if ((objc_opt_isKindOfClass(v5, v7) & 1) != 0)
    {
      uint64_t v9 = a4[1];
      if (*a4 != v9)
      {
        uint64_t v10 = *a4 + 24LL;
        *(void *)&__int128 v8 = 136315906LL;
        __int128 v49 = v8;
        do
        {
          CFTypeID v11 = (void *)(v10 - 24);
          uint32_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v11, v49));
          uint64_t v13 = v10;
          CFTypeID v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v13));
          id v15 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:v12]);
          BOOL v16 = v15 == 0LL;

          if (!v16)
          {
            switch(*(_BYTE *)(v10 + 24))
            {
              case 0:
                unint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:v12]);
                id v18 = [v17 integerValue];

                id v19 = v14;
                char v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSUserDefaults standardUserDefaults]( &OBJC_CLASS___NSUserDefaults,  "standardUserDefaults"));
                [v20 setInteger:v18 forKey:v19];
                int v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSUserDefaults standardUserDefaults]( &OBJC_CLASS___NSUserDefaults,  "standardUserDefaults"));
                [v21 synchronize];

                uint64_t v22 = qword_1008000A0;
                if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
                {
                  else {
                    BOOL v23 = (uint64_t *)*a3;
                  }
                  *(_DWORD *)uint8_t buf = v49;
                  int v54 = v23;
                  __int16 v55 = 2112;
                  BOOL v56 = v12;
                  __int16 v57 = 2112;
                  id v58 = v19;
                  __int16 v59 = 1024;
                  LODWORD(v60) = (_DWORD)v18;
                  int v24 = (os_log_s *)v22;
                  BOOL v25 = "#ota,%s integer override. Config file key: %@. Defaults key: %@. Value: %d";
                  goto LABEL_34;
                }

                break;
              case 1:
                unsigned __int8 v26 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:v12]);
                [v26 doubleValue];
                double v28 = v27;

                id v29 = v14;
                BOOL v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSUserDefaults standardUserDefaults]( &OBJC_CLASS___NSUserDefaults,  "standardUserDefaults"));
                [v30 setDouble:v29 forKey:v28];
                char v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSUserDefaults standardUserDefaults]( &OBJC_CLASS___NSUserDefaults,  "standardUserDefaults"));
                [v31 synchronize];

                uint64_t v32 = qword_1008000A0;
                if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
                {
                  else {
                    char v33 = (uint64_t *)*a3;
                  }
                  *(_DWORD *)uint8_t buf = v49;
                  int v54 = v33;
                  __int16 v55 = 2112;
                  BOOL v56 = v12;
                  __int16 v57 = 2112;
                  id v58 = v29;
                  __int16 v59 = 2048;
                  double v60 = v28;
                  int v24 = (os_log_s *)v32;
                  BOOL v25 = "#ota,%s double override. Config file key: %@. Defaults key: %@. Value: %f";
                  uint32_t v34 = 42;
                  goto LABEL_35;
                }

                break;
              case 2:
                id v35 = (id)objc_claimAutoreleasedReturnValue([v5 objectForKey:v12]);
                id v36 = v14;
                int v37 = (void *)objc_claimAutoreleasedReturnValue( +[NSUserDefaults standardUserDefaults]( &OBJC_CLASS___NSUserDefaults,  "standardUserDefaults"));
                [v37 setObject:v35 forKey:v36];
                int v38 = (void *)objc_claimAutoreleasedReturnValue( +[NSUserDefaults standardUserDefaults]( &OBJC_CLASS___NSUserDefaults,  "standardUserDefaults"));
                [v38 synchronize];

                int v39 = (os_log_s *)qword_1008000A0;
                if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
                {
                  else {
                    double v40 = (uint64_t *)*a3;
                  }
                  *(_DWORD *)uint8_t buf = v49;
                  int v54 = v40;
                  __int16 v55 = 2112;
                  BOOL v56 = v12;
                  __int16 v57 = 2112;
                  id v58 = v36;
                  __int16 v59 = 2112;
                  double v60 = *(double *)&v35;
                  _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "#ota,%s dict override. Config file key: %@. Defaults key: %@. Value: %@",  buf,  0x2Au);
                }

                break;
              case 3:
                uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:v12]);
                id v42 = [v41 BOOLValue];

                id v43 = v14;
                BOOL v44 = (void *)objc_claimAutoreleasedReturnValue( +[NSUserDefaults standardUserDefaults]( &OBJC_CLASS___NSUserDefaults,  "standardUserDefaults"));
                [v44 setBool:v42 forKey:v43];
                uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue( +[NSUserDefaults standardUserDefaults]( &OBJC_CLASS___NSUserDefaults,  "standardUserDefaults"));
                [v45 synchronize];

                uint64_t v46 = qword_1008000A0;
                if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
                {
                  else {
                    char v47 = (uint64_t *)*a3;
                  }
                  *(_DWORD *)uint8_t buf = v49;
                  int v54 = v47;
                  __int16 v55 = 2112;
                  BOOL v56 = v12;
                  __int16 v57 = 2112;
                  id v58 = v43;
                  __int16 v59 = 1024;
                  LODWORD(v60) = (_DWORD)v42;
                  int v24 = (os_log_s *)v46;
                  BOOL v25 = "#ota,%s BOOL override. Config file key: %@. Defaults key: %@. Value: %d";
LABEL_34:
                  uint32_t v34 = 38;
LABEL_35:
                  _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, v25, buf, v34);
                }

                break;
              default:
                break;
            }
          }

          uint64_t v48 = v10 + 32;
          v10 += 56LL;
        }

        while (v48 != v9);
      }
    }

    else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT))
    {
      sub_1003A261C();
    }
  }
}

void sub_10025EB18( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

char *sub_10025EC28(char *__dst, __int128 *a2, __int128 *a3, char a4)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v7 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v7;
  }

  __int128 v8 = __dst + 24;
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000063A8(v8, *(void **)a3, *((void *)a3 + 1));
  }

  else
  {
    __int128 v9 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)__int128 v8 = v9;
  }

  __dst[48] = a4;
  return __dst;
}

void sub_10025ECB0(_Unwind_Exception *exception_object)
{
}

void *sub_10025ECCC(void *__dst, __int128 *a2, __int128 **a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v5 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v5;
  }

  __dst[3] = 0LL;
  __dst[4] = 0LL;
  __dst[5] = 0LL;
  sub_10025ED68(__dst + 3, *a3, a3[1], 0x6DB6DB6DB6DB6DB7LL * (((char *)a3[1] - (char *)*a3) >> 3));
  return __dst;
}

void sub_10025ED4C(_Unwind_Exception *exception_object)
{
}

void *sub_10025ED68(void *result, __int128 *a2, __int128 *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_10011B690(result, a4);
    BOOL result = sub_10025EDEC((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }

  return result;
}

void sub_10025EDCC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + _Block_object_dispose(va, 8) = v10;
  sub_10025EFB0(&a9);
  _Unwind_Resume(a1);
}

void *sub_10025EDEC(uint64_t a1, __int128 *a2, __int128 *a3, void *__dst)
{
  id v4 = __dst;
  CFTypeID v11 = __dst;
  uint32_t v12 = (char *)__dst;
  v9[0] = a1;
  v9[1] = &v11;
  _DWORD v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    int v7 = a1;
    do
    {
      sub_10025EE94(v7, v4, v6);
      uint64_t v6 = (__int128 *)((char *)v6 + 56);
      id v4 = v12 + 56;
      v12 += 56;
    }

    while (v6 != a3);
  }

  char v10 = 1;
  sub_10025EF2C((uint64_t)v9);
  return v4;
}

void sub_10025EE80( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

_BYTE *sub_10025EE94(int a1, void *__dst, __int128 *a3)
{
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a3, *((void *)a3 + 1));
  }

  else
  {
    __int128 v5 = *a3;
    __dst[2] = *((void *)a3 + 2);
    *(_OWORD *)std::string __dst = v5;
  }

  BOOL result = __dst + 3;
  if (*((char *)a3 + 47) < 0)
  {
    BOOL result = sub_1000063A8(result, *((void **)a3 + 3), *((void *)a3 + 4));
  }

  else
  {
    __int128 v7 = *(__int128 *)((char *)a3 + 24);
    __dst[5] = *((void *)a3 + 5);
    *(_OWORD *)BOOL result = v7;
  }

  *((_BYTE *)__dst + 4_Block_object_dispose(va, 8) = *((_BYTE *)a3 + 48);
  return result;
}

void sub_10025EF10(_Unwind_Exception *exception_object)
{
}

uint64_t sub_10025EF2C(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_10025EF60((uint64_t *)a1);
  }
  return a1;
}

void sub_10025EF60(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 56LL;
      sub_1001AD190(v5, v3);
    }

    while (v3 != v4);
  }

void sub_10025EFB0(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 56LL;
        sub_1001AD190((uint64_t)(v1 + 2), v4);
      }

      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }

    v1[1] = v2;
    operator delete(v5);
  }

void *sub_10025F034(uint64_t a1, __int128 *a2, __int128 *a3, void *__dst)
{
  uint64_t v4 = __dst;
  CFTypeID v11 = __dst;
  uint32_t v12 = (char *)__dst;
  v9[0] = a1;
  v9[1] = &v11;
  _DWORD v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    int v7 = a1;
    do
    {
      sub_10025F0DC(v7, v4, v6);
      uint64_t v6 = (__int128 *)((char *)v6 + 56);
      uint64_t v4 = v12 + 56;
      v12 += 56;
    }

    while (v6 != a3);
  }

  char v10 = 1;
  sub_10025EF2C((uint64_t)v9);
  return v4;
}

void sub_10025F0C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

_BYTE *sub_10025F0DC(int a1, void *__dst, __int128 *a3)
{
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a3, *((void *)a3 + 1));
  }

  else
  {
    __int128 v5 = *a3;
    __dst[2] = *((void *)a3 + 2);
    *(_OWORD *)std::string __dst = v5;
  }

  BOOL result = __dst + 3;
  if (*((char *)a3 + 47) < 0)
  {
    BOOL result = sub_1000063A8(result, *((void **)a3 + 3), *((void *)a3 + 4));
  }

  else
  {
    __int128 v7 = *(__int128 *)((char *)a3 + 24);
    __dst[5] = *((void *)a3 + 5);
    *(_OWORD *)BOOL result = v7;
  }

  *((_BYTE *)__dst + 4_Block_object_dispose(va, 8) = *((_BYTE *)a3 + 48);
  return result;
}

void sub_10025F158(_Unwind_Exception *exception_object)
{
}

uint64_t sub_10025F174(uint64_t a1, const void **a2, uint64_t a3)
{
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 48 * a3;
    do
    {
      sub_10025F1F4((uint64_t **)a1, v4, a2, (__int128 *)a2);
      a2 += 6;
      v6 -= 48LL;
    }

    while (v6);
  }

  return a1;
}

void sub_10025F1DC(_Unwind_Exception *a1)
{
}

uint64_t *sub_10025F1F4(uint64_t **a1, uint64_t *a2, const void **a3, __int128 *a4)
{
  uint64_t v6 = sub_1002025F4(a1, a2, &v12, &v11, a3);
  __int128 v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    __int128 v8 = (uint64_t **)v6;
    sub_10025F288((uint64_t)a1, a4, (uint64_t)v10);
    sub_10001E548(a1, (uint64_t)v12, v8, v10[0]);
    __int128 v7 = v10[0];
    v10[0] = 0LL;
    sub_10025F388((uint64_t)v10, 0LL);
  }

  return v7;
}

void *sub_10025F288@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose(va, 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  BOOL result = sub_10025F2F0(v6 + 4, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_10025F2D8(_Unwind_Exception *a1)
{
}

void *sub_10025F2F0(void *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v4;
  }

  __dst[3] = 0LL;
  __dst[4] = 0LL;
  __dst[5] = 0LL;
  sub_10025ED68( __dst + 3,  *((__int128 **)a2 + 3),  *((__int128 **)a2 + 4),  0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*((void *)a2 + 4) - *((void *)a2 + 3)) >> 3));
  return __dst;
}

void sub_10025F36C(_Unwind_Exception *exception_object)
{
}

void sub_10025F388(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_10025F3CC((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

void sub_10025F3CC(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 24);
  sub_10025EFB0(&v2);
}

void sub_10025F410(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10025F410(a1, *a2);
    sub_10025F410(a1, a2[1]);
    sub_10025F3CC((uint64_t)(a2 + 4));
    operator delete(a2);
  }

uint64_t sub_10025F458()
{
  qword_1007FC040 = 0LL;
  qword_1007FC048 = 0LL;
  qword_1007FC050 = 0LL;
  char v271 = &qword_1007FC040;
  char v272 = 0;
  qword_1007FC040 = (uint64_t)operator new(0xEA8uLL);
  qword_1007FC048 = qword_1007FC040;
  qword_1007FC050 = qword_1007FC040 + 3752;
  qword_1007FC048 = (uint64_t)sub_10025F034((uint64_t)&qword_1007FC050, __dst, &v340, (void *)qword_1007FC040);
  uint64_t v0 = 469LL;
  do
  {
    uint64_t v1 = (void **)((char *)__dst + v0 * 8);
    if (SHIBYTE((&v271)[v0]) < 0) {
      operator delete(*(v1 - 4));
    }
    v0 -= 7LL;
  }

  while (v0 * 8);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v10 < 0) {
    operator delete(v9[0]);
  }
  if (v12 < 0) {
    operator delete(v11[0]);
  }
  if (v14 < 0) {
    operator delete(v13[0]);
  }
  if (v16 < 0) {
    operator delete(v15[0]);
  }
  if (v18 < 0) {
    operator delete(v17[0]);
  }
  if (v20 < 0) {
    operator delete(v19[0]);
  }
  if (v22 < 0) {
    operator delete(v21[0]);
  }
  if (v24 < 0) {
    operator delete(v23[0]);
  }
  if (v26 < 0) {
    operator delete(v25[0]);
  }
  if (v28 < 0) {
    operator delete(v27[0]);
  }
  if (v30 < 0) {
    operator delete(v29[0]);
  }
  if (v32 < 0) {
    operator delete(v31[0]);
  }
  if (v34 < 0) {
    operator delete(v33[0]);
  }
  if (v36 < 0) {
    operator delete(v35[0]);
  }
  if (v38 < 0) {
    operator delete(v37[0]);
  }
  if (v40 < 0) {
    operator delete(v39[0]);
  }
  if (v42 < 0) {
    operator delete(v41[0]);
  }
  if (v44 < 0) {
    operator delete(v43[0]);
  }
  if (v46 < 0) {
    operator delete(v45[0]);
  }
  if (v48 < 0) {
    operator delete(v47[0]);
  }
  if (v50 < 0) {
    operator delete(v49[0]);
  }
  if (v52 < 0) {
    operator delete(v51[0]);
  }
  if (v54 < 0) {
    operator delete(v53[0]);
  }
  if (v56 < 0) {
    operator delete(v55[0]);
  }
  if (v58 < 0) {
    operator delete(v57[0]);
  }
  if (v60 < 0) {
    operator delete(v59[0]);
  }
  if (v62 < 0) {
    operator delete(v61[0]);
  }
  if (v64 < 0) {
    operator delete(v63[0]);
  }
  if (v66 < 0) {
    operator delete(v65[0]);
  }
  if (v68 < 0) {
    operator delete(v67[0]);
  }
  if (v70 < 0) {
    operator delete(v69[0]);
  }
  if (v72 < 0) {
    operator delete(v71[0]);
  }
  if (v74 < 0) {
    operator delete(v73[0]);
  }
  if (v76 < 0) {
    operator delete(v75[0]);
  }
  if (v78 < 0) {
    operator delete(v77[0]);
  }
  if (v80 < 0) {
    operator delete(v79[0]);
  }
  if (v82 < 0) {
    operator delete(v81[0]);
  }
  if (v84 < 0) {
    operator delete(v83[0]);
  }
  if (v86 < 0) {
    operator delete(v85[0]);
  }
  if (v88 < 0) {
    operator delete(v87[0]);
  }
  if (v90 < 0) {
    operator delete(v89[0]);
  }
  if (v92 < 0) {
    operator delete(v91[0]);
  }
  if (v94 < 0) {
    operator delete(v93[0]);
  }
  if (v96 < 0) {
    operator delete(v95[0]);
  }
  if (v98 < 0) {
    operator delete(v97[0]);
  }
  if (v100 < 0) {
    operator delete(v99[0]);
  }
  if (v102 < 0) {
    operator delete(v101[0]);
  }
  if (v104 < 0) {
    operator delete(v103[0]);
  }
  if (v106 < 0) {
    operator delete(v105[0]);
  }
  if (v108 < 0) {
    operator delete(v107[0]);
  }
  if (v110 < 0) {
    operator delete(v109[0]);
  }
  if (v112 < 0) {
    operator delete(v111[0]);
  }
  if (v114 < 0) {
    operator delete(v113[0]);
  }
  if (v116 < 0) {
    operator delete(v115[0]);
  }
  if (v118 < 0) {
    operator delete(v117[0]);
  }
  if (v120 < 0) {
    operator delete(v119[0]);
  }
  if (v122 < 0) {
    operator delete(v121[0]);
  }
  if (v124 < 0) {
    operator delete(v123[0]);
  }
  if (v126 < 0) {
    operator delete(v125[0]);
  }
  if (v128 < 0) {
    operator delete(v127[0]);
  }
  if (v130 < 0) {
    operator delete(v129[0]);
  }
  if (v132 < 0) {
    operator delete(v131[0]);
  }
  if (v134 < 0) {
    operator delete(v133[0]);
  }
  if (v136 < 0) {
    operator delete(v135[0]);
  }
  if (v138 < 0) {
    operator delete(v137[0]);
  }
  if (v140 < 0) {
    operator delete(v139[0]);
  }
  if (v142 < 0) {
    operator delete(v141[0]);
  }
  if (v144 < 0) {
    operator delete(v143[0]);
  }
  if (v146 < 0) {
    operator delete(v145[0]);
  }
  if (v148 < 0) {
    operator delete(v147[0]);
  }
  if (v150 < 0) {
    operator delete(v149[0]);
  }
  if (v152 < 0) {
    operator delete(v151[0]);
  }
  if (v154 < 0) {
    operator delete(v153[0]);
  }
  if (v156 < 0) {
    operator delete(v155[0]);
  }
  if (v158 < 0) {
    operator delete(v157[0]);
  }
  if (v160 < 0) {
    operator delete(v159[0]);
  }
  if (v162 < 0) {
    operator delete(v161[0]);
  }
  if (v164 < 0) {
    operator delete(v163[0]);
  }
  if (v166 < 0) {
    operator delete(v165[0]);
  }
  if (v168 < 0) {
    operator delete(v167[0]);
  }
  if (v170 < 0) {
    operator delete(v169[0]);
  }
  if (v172 < 0) {
    operator delete(v171[0]);
  }
  if (v174 < 0) {
    operator delete(v173[0]);
  }
  if (v176 < 0) {
    operator delete(v175[0]);
  }
  if (v178 < 0) {
    operator delete(v177[0]);
  }
  if (v180 < 0) {
    operator delete(v179[0]);
  }
  if (v182 < 0) {
    operator delete(v181[0]);
  }
  if (v184 < 0) {
    operator delete(v183[0]);
  }
  if (v186 < 0) {
    operator delete(v185[0]);
  }
  if (v188 < 0) {
    operator delete(v187[0]);
  }
  if (v190 < 0) {
    operator delete(v189[0]);
  }
  if (v192 < 0) {
    operator delete(v191[0]);
  }
  if (v194 < 0) {
    operator delete(v193[0]);
  }
  if (v196 < 0) {
    operator delete(v195[0]);
  }
  if (v198 < 0) {
    operator delete(v197[0]);
  }
  if (v200 < 0) {
    operator delete(v199[0]);
  }
  if (v202 < 0) {
    operator delete(v201[0]);
  }
  if (v204 < 0) {
    operator delete(v203[0]);
  }
  if (v206 < 0) {
    operator delete(v205[0]);
  }
  if (v208 < 0) {
    operator delete(v207[0]);
  }
  if (v210 < 0) {
    operator delete(v209[0]);
  }
  if (v212 < 0) {
    operator delete(v211[0]);
  }
  if (v214 < 0) {
    operator delete(v213[0]);
  }
  if (v216 < 0) {
    operator delete(v215[0]);
  }
  if (v218 < 0) {
    operator delete(v217[0]);
  }
  if (v220 < 0) {
    operator delete(v219[0]);
  }
  if (v222 < 0) {
    operator delete(v221[0]);
  }
  if (v224 < 0) {
    operator delete(v223[0]);
  }
  if (v226 < 0) {
    operator delete(v225[0]);
  }
  if (v228 < 0) {
    operator delete(v227[0]);
  }
  if (v230 < 0) {
    operator delete(v229[0]);
  }
  if (v232 < 0) {
    operator delete(v231[0]);
  }
  if (v234 < 0) {
    operator delete(v233[0]);
  }
  if (v236 < 0) {
    operator delete(v235[0]);
  }
  if (v238 < 0) {
    operator delete(v237[0]);
  }
  if (v240 < 0) {
    operator delete(v239[0]);
  }
  if (v242 < 0) {
    operator delete(v241[0]);
  }
  if (v244 < 0) {
    operator delete(v243[0]);
  }
  if (v246 < 0) {
    operator delete(v245[0]);
  }
  if (v248 < 0) {
    operator delete(v247[0]);
  }
  if (v250 < 0) {
    operator delete(v249[0]);
  }
  if (v252 < 0) {
    operator delete(v251[0]);
  }
  if (v254 < 0) {
    operator delete(v253[0]);
  }
  if (v256 < 0) {
    operator delete(v255[0]);
  }
  if (v258 < 0) {
    operator delete(v257[0]);
  }
  if (v260 < 0) {
    operator delete(v259[0]);
  }
  if (v262 < 0) {
    operator delete(v261[0]);
  }
  if (v264 < 0) {
    operator delete(v263[0]);
  }
  if (v266 < 0) {
    operator delete(v265[0]);
  }
  if (v268 < 0) {
    operator delete(v267[0]);
  }
  if (v270 < 0) {
    operator delete(v269[0]);
  }
  return __cxa_atexit((void (*)(void *))sub_10025DAB0, &qword_1007FC040, (void *)&_mh_execute_header);
}

void sub_100260D74( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20, void *a21, uint64_t a22, int a23, __int16 a24, char a25, char a26, void *a27, uint64_t a28, int a29, __int16 a30, char a31, char a32, void *a33, uint64_t a34, int a35, __int16 a36, char a37, char a38, void *a39, uint64_t a40, int a41, __int16 a42, char a43, char a44, void *a45, uint64_t a46, int a47, __int16 a48, char a49, char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,void *a63)
{
  qword_1007FC048 = v93;
  sub_10025EFB0((void ***)&STACK[0xC90]);
  for (uint64_t i = 3696LL; i != -56; i -= 56LL)
    sub_1001A951C((uint64_t)&STACK[0xCA0] + i);
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  if (a38 < 0) {
    operator delete(a33);
  }
  if (a44 < 0) {
    operator delete(a39);
  }
  if (a50 < 0) {
    operator delete(a45);
  }
  if (a56 < 0) {
    operator delete(a51);
  }
  if (a62 < 0) {
    operator delete(a57);
  }
  if (a68 < 0) {
    operator delete(a63);
  }
  if (a72 < 0) {
    operator delete(a69);
  }
  if (a74 < 0) {
    operator delete(a73);
  }
  if (a76 < 0) {
    operator delete(a75);
  }
  if (a78 < 0) {
    operator delete(a77);
  }
  if (a80 < 0) {
    operator delete(a79);
  }
  if (a82 < 0) {
    operator delete(a81);
  }
  if (a84 < 0) {
    operator delete(a83);
  }
  if (a86 < 0) {
    operator delete(a85);
  }
  if (a88 < 0) {
    operator delete(a87);
  }
  if (a90 < 0) {
    operator delete(a89);
  }
  if (a92 < 0) {
    operator delete(a91);
  }
  if (SLOBYTE(STACK[0x20F]) < 0) {
    operator delete(a93);
  }
  if (SLOBYTE(STACK[0x227]) < 0) {
    operator delete((void *)STACK[0x210]);
  }
  if (SLOBYTE(STACK[0x23F]) < 0) {
    operator delete((void *)STACK[0x228]);
  }
  if (SLOBYTE(STACK[0x257]) < 0) {
    operator delete((void *)STACK[0x240]);
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete((void *)STACK[0x258]);
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete((void *)STACK[0x270]);
  }
  if (SLOBYTE(STACK[0x29F]) < 0) {
    operator delete((void *)STACK[0x288]);
  }
  if (SLOBYTE(STACK[0x2B7]) < 0) {
    operator delete((void *)STACK[0x2A0]);
  }
  if (SLOBYTE(STACK[0x2CF]) < 0) {
    operator delete((void *)STACK[0x2B8]);
  }
  if (SLOBYTE(STACK[0x2E7]) < 0) {
    operator delete((void *)STACK[0x2D0]);
  }
  if (SLOBYTE(STACK[0x2FF]) < 0) {
    operator delete((void *)STACK[0x2E8]);
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete((void *)STACK[0x300]);
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete((void *)STACK[0x318]);
  }
  if (SLOBYTE(STACK[0x347]) < 0) {
    operator delete((void *)STACK[0x330]);
  }
  if (SLOBYTE(STACK[0x35F]) < 0) {
    operator delete((void *)STACK[0x348]);
  }
  if (SLOBYTE(STACK[0x377]) < 0) {
    operator delete((void *)STACK[0x360]);
  }
  if (SLOBYTE(STACK[0x38F]) < 0) {
    operator delete((void *)STACK[0x378]);
  }
  if (SLOBYTE(STACK[0x3A7]) < 0) {
    operator delete((void *)STACK[0x390]);
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete((void *)STACK[0x3A8]);
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete((void *)STACK[0x3C0]);
  }
  if (SLOBYTE(STACK[0x3EF]) < 0) {
    operator delete((void *)STACK[0x3D8]);
  }
  if (SLOBYTE(STACK[0x407]) < 0) {
    operator delete((void *)STACK[0x3F0]);
  }
  if (SLOBYTE(STACK[0x41F]) < 0) {
    operator delete((void *)STACK[0x408]);
  }
  if (SLOBYTE(STACK[0x437]) < 0) {
    operator delete((void *)STACK[0x420]);
  }
  if (SLOBYTE(STACK[0x44F]) < 0) {
    operator delete((void *)STACK[0x438]);
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete((void *)STACK[0x450]);
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete((void *)STACK[0x468]);
  }
  if (SLOBYTE(STACK[0x497]) < 0) {
    operator delete((void *)STACK[0x480]);
  }
  if (SLOBYTE(STACK[0x4AF]) < 0) {
    operator delete((void *)STACK[0x498]);
  }
  if (SLOBYTE(STACK[0x4C7]) < 0) {
    operator delete((void *)STACK[0x4B0]);
  }
  if (SLOBYTE(STACK[0x4DF]) < 0) {
    operator delete((void *)STACK[0x4C8]);
  }
  if (SLOBYTE(STACK[0x4F7]) < 0) {
    operator delete((void *)STACK[0x4E0]);
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete((void *)STACK[0x4F8]);
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete((void *)STACK[0x510]);
  }
  if (SLOBYTE(STACK[0x53F]) < 0) {
    operator delete((void *)STACK[0x528]);
  }
  if (SLOBYTE(STACK[0x557]) < 0) {
    operator delete((void *)STACK[0x540]);
  }
  if (SLOBYTE(STACK[0x56F]) < 0) {
    operator delete((void *)STACK[0x558]);
  }
  if (SLOBYTE(STACK[0x587]) < 0) {
    operator delete((void *)STACK[0x570]);
  }
  if (SLOBYTE(STACK[0x59F]) < 0) {
    operator delete((void *)STACK[0x588]);
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete((void *)STACK[0x5A0]);
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete((void *)STACK[0x5B8]);
  }
  if (SLOBYTE(STACK[0x5E7]) < 0) {
    operator delete((void *)STACK[0x5D0]);
  }
  if (SLOBYTE(STACK[0x5FF]) < 0) {
    operator delete((void *)STACK[0x5E8]);
  }
  if (SLOBYTE(STACK[0x617]) < 0) {
    operator delete((void *)STACK[0x600]);
  }
  if (SLOBYTE(STACK[0x62F]) < 0) {
    operator delete((void *)STACK[0x618]);
  }
  if (SLOBYTE(STACK[0x647]) < 0) {
    operator delete((void *)STACK[0x630]);
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete((void *)STACK[0x648]);
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete((void *)STACK[0x660]);
  }
  if (SLOBYTE(STACK[0x68F]) < 0) {
    operator delete((void *)STACK[0x678]);
  }
  if (SLOBYTE(STACK[0x6A7]) < 0) {
    operator delete((void *)STACK[0x690]);
  }
  if (SLOBYTE(STACK[0x6BF]) < 0) {
    operator delete((void *)STACK[0x6A8]);
  }
  if (SLOBYTE(STACK[0x6D7]) < 0) {
    operator delete((void *)STACK[0x6C0]);
  }
  if (SLOBYTE(STACK[0x6EF]) < 0) {
    operator delete((void *)STACK[0x6D8]);
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete((void *)STACK[0x6F0]);
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete((void *)STACK[0x708]);
  }
  if (SLOBYTE(STACK[0x737]) < 0) {
    operator delete((void *)STACK[0x720]);
  }
  if (SLOBYTE(STACK[0x74F]) < 0) {
    operator delete((void *)STACK[0x738]);
  }
  if (SLOBYTE(STACK[0x767]) < 0) {
    operator delete((void *)STACK[0x750]);
  }
  if (SLOBYTE(STACK[0x77F]) < 0) {
    operator delete((void *)STACK[0x768]);
  }
  if (SLOBYTE(STACK[0x797]) < 0) {
    operator delete((void *)STACK[0x780]);
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete((void *)STACK[0x798]);
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete((void *)STACK[0x7B0]);
  }
  if (SLOBYTE(STACK[0x7DF]) < 0) {
    operator delete((void *)STACK[0x7C8]);
  }
  if (SLOBYTE(STACK[0x7F7]) < 0) {
    operator delete((void *)STACK[0x7E0]);
  }
  if (SLOBYTE(STACK[0x80F]) < 0) {
    operator delete((void *)STACK[0x7F8]);
  }
  if (SLOBYTE(STACK[0x827]) < 0) {
    operator delete((void *)STACK[0x810]);
  }
  if (SLOBYTE(STACK[0x83F]) < 0) {
    operator delete((void *)STACK[0x828]);
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete((void *)STACK[0x840]);
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete((void *)STACK[0x858]);
  }
  if (SLOBYTE(STACK[0x887]) < 0) {
    operator delete((void *)STACK[0x870]);
  }
  if (SLOBYTE(STACK[0x89F]) < 0) {
    operator delete((void *)STACK[0x888]);
  }
  if (SLOBYTE(STACK[0x8B7]) < 0) {
    operator delete((void *)STACK[0x8A0]);
  }
  if (SLOBYTE(STACK[0x8CF]) < 0) {
    operator delete((void *)STACK[0x8B8]);
  }
  if (SLOBYTE(STACK[0x8E7]) < 0) {
    operator delete((void *)STACK[0x8D0]);
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete((void *)STACK[0x8E8]);
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete((void *)STACK[0x900]);
  }
  if (SLOBYTE(STACK[0x92F]) < 0) {
    operator delete((void *)STACK[0x918]);
  }
  if (SLOBYTE(STACK[0x947]) < 0) {
    operator delete((void *)STACK[0x930]);
  }
  if (SLOBYTE(STACK[0x95F]) < 0) {
    operator delete((void *)STACK[0x948]);
  }
  if (SLOBYTE(STACK[0x977]) < 0) {
    operator delete((void *)STACK[0x960]);
  }
  if (SLOBYTE(STACK[0x98F]) < 0) {
    operator delete((void *)STACK[0x978]);
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete((void *)STACK[0x990]);
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete((void *)STACK[0x9A8]);
  }
  if (SLOBYTE(STACK[0x9D7]) < 0) {
    operator delete((void *)STACK[0x9C0]);
  }
  if (SLOBYTE(STACK[0x9EF]) < 0) {
    operator delete((void *)STACK[0x9D8]);
  }
  if (SLOBYTE(STACK[0xA07]) < 0) {
    operator delete((void *)STACK[0x9F0]);
  }
  if (SLOBYTE(STACK[0xA1F]) < 0) {
    operator delete((void *)STACK[0xA08]);
  }
  if (SLOBYTE(STACK[0xA37]) < 0) {
    operator delete((void *)STACK[0xA20]);
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete((void *)STACK[0xA38]);
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete((void *)STACK[0xA50]);
  }
  if (SLOBYTE(STACK[0xA7F]) < 0) {
    operator delete((void *)STACK[0xA68]);
  }
  if (SLOBYTE(STACK[0xA97]) < 0) {
    operator delete((void *)STACK[0xA80]);
  }
  if (SLOBYTE(STACK[0xAAF]) < 0) {
    operator delete((void *)STACK[0xA98]);
  }
  if (SLOBYTE(STACK[0xAC7]) < 0) {
    operator delete((void *)STACK[0xAB0]);
  }
  if (SLOBYTE(STACK[0xADF]) < 0) {
    operator delete((void *)STACK[0xAC8]);
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete((void *)STACK[0xAE0]);
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete((void *)STACK[0xAF8]);
  }
  if (SLOBYTE(STACK[0xB27]) < 0) {
    operator delete((void *)STACK[0xB10]);
  }
  if (SLOBYTE(STACK[0xB3F]) < 0) {
    operator delete((void *)STACK[0xB28]);
  }
  if (SLOBYTE(STACK[0xB57]) < 0) {
    operator delete((void *)STACK[0xB40]);
  }
  if (SLOBYTE(STACK[0xB6F]) < 0) {
    operator delete((void *)STACK[0xB58]);
  }
  if (SLOBYTE(STACK[0xB87]) < 0) {
    operator delete((void *)STACK[0xB70]);
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete((void *)STACK[0xB88]);
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete((void *)STACK[0xBA0]);
  }
  if (SLOBYTE(STACK[0xBCF]) < 0) {
    operator delete((void *)STACK[0xBB8]);
  }
  if (SLOBYTE(STACK[0xBE7]) < 0) {
    operator delete((void *)STACK[0xBD0]);
  }
  if (SLOBYTE(STACK[0xBFF]) < 0) {
    operator delete((void *)STACK[0xBE8]);
  }
  if (SLOBYTE(STACK[0xC17]) < 0) {
    operator delete((void *)STACK[0xC00]);
  }
  if (SLOBYTE(STACK[0xC2F]) < 0) {
    operator delete((void *)STACK[0xC18]);
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete((void *)STACK[0xC30]);
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete((void *)STACK[0xC48]);
  }
  if (SLOBYTE(STACK[0xC77]) < 0) {
    operator delete((void *)STACK[0xC60]);
  }
  if (SLOBYTE(STACK[0xC8F]) < 0) {
    operator delete((void *)STACK[0xC78]);
  }
  _Unwind_Resume(a1);
}

void sub_1002616D8()
{
}

void sub_1002616E4()
{
}

void sub_1002616F4()
{
}

void sub_100261700()
{
}

void sub_100261710()
{
}

void sub_10026171C()
{
}

void sub_10026172C()
{
}

void sub_100261738()
{
}

void sub_100261748()
{
}

void sub_100261754()
{
}

void sub_100261764()
{
}

void sub_100261770()
{
}

void sub_100261780()
{
}

void sub_10026178C()
{
}

void sub_10026179C()
{
}

void sub_1002617A8()
{
}

void sub_1002617B8()
{
}

void sub_1002617C4()
{
}

void sub_1002617D4()
{
}

void sub_1002617E0()
{
}

void sub_1002617F0()
{
}

void sub_1002617FC()
{
}

void sub_10026180C()
{
}

void sub_100261818()
{
}

void sub_100261828()
{
}

void sub_100261834()
{
}

void sub_100261844()
{
}

void sub_100261850()
{
}

void sub_100261860()
{
}

void sub_10026186C()
{
}

void sub_10026187C()
{
}

void sub_100261888()
{
}

void sub_100261898()
{
}

void sub_1002618A4()
{
}

void sub_1002618B4()
{
}

void sub_1002618C0()
{
}

void sub_1002618D0()
{
}

void sub_1002618DC()
{
}

void sub_1002618EC()
{
}

void sub_1002618F8()
{
}

void sub_100261908()
{
}

void sub_100261914()
{
}

void sub_100261924()
{
}

void sub_100261930()
{
}

void sub_100261940()
{
}

void sub_10026194C()
{
}

void sub_10026195C()
{
}

void sub_100261968()
{
}

void sub_100261978()
{
}

void sub_100261984()
{
}

void sub_100261994()
{
}

void sub_1002619A0()
{
}

void sub_1002619B0()
{
}

void sub_1002619BC()
{
}

void sub_1002619CC()
{
}

void sub_1002619D8()
{
}

void sub_1002619E8()
{
}

void sub_1002619F4()
{
}

void sub_100261A04()
{
}

void sub_100261A10()
{
}

void sub_100261A20()
{
}

void sub_100261A2C()
{
}

void sub_100261A3C()
{
}

void sub_100261A48()
{
}

void sub_100261A58()
{
}

void sub_100261A64()
{
}

void sub_100261A74()
{
}

void sub_100261A80()
{
}

void sub_100261A90()
{
}

void sub_100261A9C()
{
}

void sub_100261AAC()
{
}

void sub_100261AB8()
{
}

void sub_100261AC8()
{
}

void sub_100261AD4()
{
}

void sub_100261AE4()
{
}

void sub_100261AF0()
{
}

void sub_100261B00()
{
}

void sub_100261B0C()
{
}

void sub_100261B1C()
{
}

void sub_100261B28()
{
}

void sub_100261B38()
{
}

void sub_100261B44()
{
}

void sub_100261B54()
{
}

void sub_100261B60()
{
}

void sub_100261B70()
{
}

void sub_100261B7C()
{
}

void sub_100261B8C()
{
}

void sub_100261B98()
{
}

void sub_100261BA8()
{
}

void sub_100261BB4()
{
}

void sub_100261BC4()
{
}

void sub_100261BD0()
{
}

void sub_100261BE0()
{
}

void sub_100261BEC()
{
}

void sub_100261BFC()
{
}

void sub_100261C08()
{
}

void sub_100261C18()
{
}

void sub_100261C24()
{
}

void sub_100261C34()
{
}

void sub_100261C40()
{
}

void sub_100261C50()
{
}

void sub_100261C5C()
{
}

void sub_100261C6C()
{
}

void sub_100261C78()
{
}

void sub_100261C88()
{
}

void sub_100261C94()
{
}

void sub_100261CA4()
{
}

void sub_100261CB0()
{
}

void sub_100261CC0()
{
}

void sub_100261CCC()
{
}

void sub_100261CDC()
{
}

void sub_100261CE8()
{
}

void sub_100261CF8()
{
}

void sub_100261D04()
{
}

void sub_100261D14()
{
}

void sub_100261D20()
{
}

void sub_100261D30()
{
}

void sub_100261D3C()
{
}

void sub_100261D4C()
{
}

void sub_100261D58()
{
}

void sub_100261D68()
{
}

void sub_100261D74()
{
}

void sub_100261D80()
{
}

void sub_100261D90()
{
}

void sub_100261DA0()
{
}

void sub_100261DA8()
{
  uint64_t v0 = objc_autoreleasePoolPush();
  sub_1000065CC(&xmmword_1007FBF98, "ALO.plist");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FBF98, (void *)&_mh_execute_header);
  sub_1000065CC(v38, "RDL");
  sub_1000065CC(v36, "AlishaRangingDurationLimitOverrideSeconds");
  sub_10025EC28((char *)__dst, (__int128 *)v38, (__int128 *)v36, 0);
  sub_1000065CC(v34, "TA");
  sub_1000065CC(v32, "AlishaTimeoutAOverrideSeconds");
  sub_10025EC28(v42, (__int128 *)v34, (__int128 *)v32, 0);
  sub_1000065CC(v30, "TB");
  sub_1000065CC(v28, "AlishaTimeoutBOverrideSeconds");
  sub_10025EC28((char *)v44, (__int128 *)v30, (__int128 *)v28, 0);
  sub_1000065CC(v26, "TRFP");
  sub_1000065CC(v24, "AlishaTimeoutRefirePeriodOverrideSeconds");
  sub_10025EC28((char *)&v46, (__int128 *)v26, (__int128 *)v24, 0);
  sub_1000065CC(v22, "MTRF");
  sub_1000065CC(v20, "AlishaMaxTimeoutRefiresOverride");
  sub_10025EC28(v48, (__int128 *)v22, (__int128 *)v20, 0);
  sub_1000065CC(v16, "MRM");
  sub_1000065CC(v14, "AlishaMinRanMultiplierOverride");
  sub_10025EC28((char *)v49, (__int128 *)v16, (__int128 *)v14, 0);
  sub_1000065CC(v12, "STO");
  sub_1000065CC(__p, "AlishaStartTimeOffsetSeconds");
  sub_10025EC28(v50, (__int128 *)v12, (__int128 *)__p, 1);
  qword_1007FBFB0 = 0LL;
  qword_1007FBFB8 = 0LL;
  qword_1007FBFC0 = 0LL;
  char v18 = &qword_1007FBFB0;
  char v19 = 0;
  qword_1007FBFB0 = (uint64_t)operator new(0x188uLL);
  qword_1007FBFB8 = qword_1007FBFB0;
  qword_1007FBFC0 = qword_1007FBFB0 + 392;
  qword_1007FBFB8 = (uint64_t)sub_10025F034((uint64_t)&qword_1007FBFC0, __dst, &v51, (void *)qword_1007FBFB0);
  uint64_t v1 = 49LL;
  do
  {
    uint64_t v2 = (void **)((char *)__dst + v1 * 8);
    if (SHIBYTE(v38[v1 + 1]) < 0) {
      operator delete(*(v2 - 4));
    }
    v1 -= 7LL;
  }

  while (v1 * 8);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v15 < 0) {
    operator delete(v14[0]);
  }
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  if (v21 < 0) {
    operator delete(v20[0]);
  }
  if (v23 < 0) {
    operator delete(v22[0]);
  }
  if (v25 < 0) {
    operator delete(v24[0]);
  }
  if (v27 < 0) {
    operator delete(v26[0]);
  }
  if (v29 < 0) {
    operator delete(v28[0]);
  }
  if (v31 < 0) {
    operator delete(v30[0]);
  }
  if (v33 < 0) {
    operator delete(v32[0]);
  }
  if (v35 < 0) {
    operator delete(v34[0]);
  }
  if (v37 < 0) {
    operator delete(v36[0]);
  }
  if (v39 < 0) {
    operator delete(v38[0]);
  }
  __cxa_atexit((void (*)(void *))sub_10025DAB0, &qword_1007FBFB0, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FBFC8, "GLO.plist");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FBFC8, (void *)&_mh_execute_header);
  sub_1000065CC(v38, "DSBR");
  sub_1000065CC(v36, "DisableSleepBetweenRangingCycles");
  sub_10025EC28((char *)__dst, (__int128 *)v38, (__int128 *)v36, 0);
  sub_1000065CC(v34, "DSLP");
  sub_1000065CC(v32, "AllowRoseDeepSleep");
  sub_10025EC28(v42, (__int128 *)v34, (__int128 *)v32, 3);
  qword_1007FBFE0 = 0LL;
  qword_1007FBFE8 = 0LL;
  qword_1007FBFF0 = 0LL;
  v30[0] = &qword_1007FBFE0;
  LOBYTE(v30[1]) = 0;
  qword_1007FBFE0 = (uint64_t)operator new(0x70uLL);
  qword_1007FBFE8 = qword_1007FBFE0;
  qword_1007FBFF0 = qword_1007FBFE0 + 112;
  uint64_t v3 = 0LL;
  qword_1007FBFE8 = (uint64_t)sub_10025F034((uint64_t)&qword_1007FBFF0, __dst, v44, (void *)qword_1007FBFE0);
  do
  {
    char v4 = (void **)((char *)__dst + v3 * 8);
    if (SHIBYTE(v43[v3]) < 0) {
      operator delete(v4[10]);
    }
    v3 -= 7LL;
  }

  while (v3 != -14);
  if (v33 < 0) {
    operator delete(v32[0]);
  }
  if (v35 < 0) {
    operator delete(v34[0]);
  }
  if (v37 < 0) {
    operator delete(v36[0]);
  }
  if (v39 < 0) {
    operator delete(v38[0]);
  }
  __cxa_atexit((void (*)(void *))sub_10025DAB0, &qword_1007FBFE0, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FBFF8, "BTO.plist");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FBFF8, (void *)&_mh_execute_header);
  sub_1000065CC(v38, "SMAM");
  sub_1000065CC(v36, "BtThresholdScannerModelAdvertiserModel");
  sub_10025EC28((char *)__dst, (__int128 *)v38, (__int128 *)v36, 2);
  sub_1000065CC(v34, "SCAM");
  sub_1000065CC(v32, "BtThresholdScannerClassAdvertiserModel");
  sub_10025EC28(v42, (__int128 *)v34, (__int128 *)v32, 2);
  sub_1000065CC(v30, "AM");
  sub_1000065CC(v28, "BtThresholdAdvertiserModel");
  sub_10025EC28((char *)v44, (__int128 *)v30, (__int128 *)v28, 2);
  sub_1000065CC(v26, "SMAC");
  sub_1000065CC(v24, "BtThresholdScannerModelAdvertiserClass");
  sub_10025EC28((char *)&v46, (__int128 *)v26, (__int128 *)v24, 2);
  sub_1000065CC(v22, "SM");
  sub_1000065CC(v20, "BtThresholdScannerModel");
  sub_10025EC28(v48, (__int128 *)v22, (__int128 *)v20, 2);
  qword_1007FC010 = 0LL;
  qword_1007FC018 = 0LL;
  qword_1007FC020 = 0LL;
  v16[0] = &qword_1007FC010;
  LOBYTE(v16[1]) = 0;
  qword_1007FC010 = (uint64_t)operator new(0x118uLL);
  qword_1007FC018 = qword_1007FC010;
  qword_1007FC020 = qword_1007FC010 + 280;
  qword_1007FC018 = (uint64_t)sub_10025F034((uint64_t)&qword_1007FC020, __dst, v49, (void *)qword_1007FC010);
  uint64_t v5 = 35LL;
  do
  {
    char v6 = (void **)((char *)__dst + v5 * 8);
    if (SHIBYTE(v38[v5 + 1]) < 0) {
      operator delete(*(v6 - 4));
    }
    v5 -= 7LL;
  }

  while (v5 * 8);
  if (v21 < 0) {
    operator delete(v20[0]);
  }
  if (v23 < 0) {
    operator delete(v22[0]);
  }
  if (v25 < 0) {
    operator delete(v24[0]);
  }
  if (v27 < 0) {
    operator delete(v26[0]);
  }
  if (v29 < 0) {
    operator delete(v28[0]);
  }
  if (v31 < 0) {
    operator delete(v30[0]);
  }
  if (v33 < 0) {
    operator delete(v32[0]);
  }
  if (v35 < 0) {
    operator delete(v34[0]);
  }
  if (v37 < 0) {
    operator delete(v36[0]);
  }
  if (v39 < 0) {
    operator delete(v38[0]);
  }
  __cxa_atexit((void (*)(void *))sub_10025DAB0, &qword_1007FC010, (void *)&_mh_execute_header);
  sub_1000065CC(&xmmword_1007FC028, "FO.plist");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FC028, (void *)&_mh_execute_header);
  sub_10025F458();
  sub_1000065CC(&xmmword_1007FC058, "NIACO.plist");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FC058, (void *)&_mh_execute_header);
  sub_1000065CC(v38, "TOBFTR");
  sub_1000065CC(v36, "NIBackgroundAccessoryTimeoutSecondsOverride_InactivityBeforeTracking");
  sub_10025EC28((char *)__dst, (__int128 *)v38, (__int128 *)v36, 0);
  sub_1000065CC(v34, "TOAFTR");
  sub_1000065CC(v32, "NIBackgroundAccessoryTimeoutSecondsOverride_InactivityAfterTracking");
  sub_10025EC28(v42, (__int128 *)v34, (__int128 *)v32, 0);
  sub_1000065CC(v30, "TOTJ");
  sub_1000065CC(v28, "NIBackgroundAccessoryTimeoutSecondsOverride_TotalJobTime");
  sub_10025EC28((char *)v44, (__int128 *)v30, (__int128 *)v28, 0);
  qword_1007FC070 = 0LL;
  qword_1007FC078 = 0LL;
  qword_1007FC080 = 0LL;
  v26[0] = &qword_1007FC070;
  LOBYTE(v26[1]) = 0;
  qword_1007FC070 = (uint64_t)operator new(0xA8uLL);
  qword_1007FC078 = qword_1007FC070;
  qword_1007FC080 = qword_1007FC070 + 168;
  uint64_t v7 = 0LL;
  qword_1007FC078 = (uint64_t)sub_10025F034((uint64_t)&qword_1007FC080, __dst, &v46, (void *)qword_1007FC070);
  do
  {
    char v8 = (void **)((char *)__dst + v7 * 8);
    if (SHIBYTE(v45[v7 + 1]) < 0) {
      operator delete(v8[17]);
    }
    v7 -= 7LL;
  }

  while (v7 != -21);
  if (v29 < 0) {
    operator delete(v28[0]);
  }
  if (v31 < 0) {
    operator delete(v30[0]);
  }
  if (v33 < 0) {
    operator delete(v32[0]);
  }
  if (v35 < 0) {
    operator delete(v34[0]);
  }
  if (v37 < 0) {
    operator delete(v36[0]);
  }
  if (v39 < 0) {
    operator delete(v38[0]);
  }
  __cxa_atexit((void (*)(void *))sub_10025DAB0, &qword_1007FC070, (void *)&_mh_execute_header);
  sub_10025ECCC(__dst, &xmmword_1007FBF98, (__int128 **)&qword_1007FBFB0);
  sub_10025ECCC(&v41, &xmmword_1007FBFC8, (__int128 **)&qword_1007FBFE0);
  sub_10025ECCC(v43, &xmmword_1007FBFF8, (__int128 **)&qword_1007FC010);
  sub_10025ECCC(v45, &xmmword_1007FC028, (__int128 **)&qword_1007FC040);
  sub_10025ECCC(v47, &xmmword_1007FC058, (__int128 **)&qword_1007FC070);
  sub_10025F174((uint64_t)&qword_1007FC088, (const void **)__dst, 5LL);
  for (uint64_t i = 0LL; i != -30; i -= 6LL)
  {
    v38[0] = &v47[i + 3];
    sub_10025EFB0((void ***)v38);
    if (SHIBYTE(v47[i + 2]) < 0) {
      operator delete((void *)v47[i]);
    }
  }

  __cxa_atexit((void (*)(void *))sub_10025DAE4, &qword_1007FC088, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_10026287C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *a23, uint64_t a24, uint64_t a25, void *a26, uint64_t a27, uint64_t a28, void *a29, uint64_t a30, uint64_t a31, void *a32, uint64_t a33, uint64_t a34, void *__p, uint64_t a36, uint64_t a37, void *a38, uint64_t a39, uint64_t a40, void *a41, uint64_t a42, uint64_t a43, void *a44, uint64_t a45, uint64_t a46, void *a47, uint64_t a48, uint64_t a49, void *a50,uint64_t a51,uint64_t a52,void *a53)
{
}

void sub_100263030(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10026317C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10026326C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100263320( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100263544(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100263704(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10026382C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_10026393C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B8E00[a1]);
}

void *sub_100263950@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B8E58[a1]);
}

void *sub_100263964@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B8EA0[a1]);
}

void *sub_100263978@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B8EC0[a1]);
}

uint64_t sub_10026398C(uint64_t a1, void *a2)
{
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = off_1007B8D38;
  objc_initWeak((id *)(a1 + 24), a2);
  *(void *)(a1 + 32) = 0LL;
  *(_DWORD *)(a1 + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0;
  return a1;
}

uint64_t sub_1002639C8(uint64_t a1, void *a2)
{
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = off_1007B8D38;
  id v3 = a2;
  *(void *)(a1 + 24) = 0LL;
  objc_initWeak((id *)(a1 + 32), v3);

  *(_DWORD *)(a1 + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 1;
  return a1;
}

uint64_t sub_100263A20(uint64_t a1)
{
  *(void *)a1 = off_1007B8D38;
  uint64_t v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "~PRRangingManagerClient()", v5, 2u);
  }

  objc_destroyWeak((id *)(a1 + 32));
  objc_destroyWeak((id *)(a1 + 24));
  id v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  return a1;
}

void sub_100263AB8(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100263A20(a1);
  operator delete(v1);
}

void sub_100263ACC(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3)
  {
    if (v3 == 1)
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      objc_msgSend(WeakRetained, "serviceRequestDidUpdateStatus:", *(void *)a2, *(unsigned int *)(a2 + 8));
LABEL_4:
    }
  }

  else
  {
    char v4 = (id *)(a1 + 24);
    id v10 = objc_loadWeakRetained((id *)(a1 + 24));
    char v5 = objc_opt_respondsToSelector(v10, "rangingRequestDidUpdateStatus:");

    if ((v5 & 1) != 0 && (*(_DWORD *)(a2 + 4) - 1) <= 3)
    {
      id v6 = objc_loadWeakRetained(v4);
      int v7 = *(_DWORD *)(a2 + 4) - 1;
      else {
        uint64_t v8 = qword_10042AA28[v7];
      }
      id WeakRetained = v6;
      [v6 rangingRequestDidUpdateStatus:v8];
      goto LABEL_4;
    }
  }

void sub_100263BAC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100263BC8(uint64_t a1, double *a2)
{
  int v3 = *(_DWORD *)(a1 + 40);
  if (!v3)
  {
    if (*((_DWORD *)a2 + 8) == 5) {
      return;
    }
    char v4 = (id *)(a1 + 24);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 24));
    char v5 = objc_opt_respondsToSelector(WeakRetained, "didReceiveNewSolutions:");

    if ((v5 & 1) == 0) {
      return;
    }
    id v51 = objc_loadWeakRetained(v4);
    id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    if (*((_BYTE *)a2 + 928))
    {
      BOOL v7 = *((_BYTE *)a2 + 888) != 0;
      BOOL v8 = *((_BYTE *)a2 + 904) != 0;
      if (*((_BYTE *)a2 + 904)) {
        double v9 = a2[112];
      }
      else {
        double v9 = 0.0;
      }
      BOOL v10 = *((_BYTE *)a2 + 920) != 0;
      if (*((_BYTE *)a2 + 920)) {
        double v11 = a2[114];
      }
      else {
        double v11 = 0.0;
      }
    }

    else
    {
      BOOL v10 = 0;
      BOOL v8 = 0;
      BOOL v7 = 0;
      double v11 = 0.0;
      double v9 = 0.0;
    }

    int v12 = *((_DWORD *)a2 + 8);
    if (v12 == 4)
    {
      if (!*((_BYTE *)a2 + 600))
      {
        __int128 v46 = "solution.raw_rose_measurement.has_value()";
        int v47 = 239;
        goto LABEL_65;
      }

      if (!*((_BYTE *)a2 + 752)) {
        __assert_rtn( "toXPCCompatibleType",  "PRRangingManagerClient.mm",  241,  "solution.sensor_fusion_solution.has_value()");
      }
      if (*((_BYTE *)a2 + 592)) {
        double v13 = a2[73];
      }
      else {
        double v13 = 0.0;
      }
      if (*((_BYTE *)a2 + 576)) {
        double v14 = a2[71];
      }
      else {
        double v14 = 10.0;
      }
      int v15 = *((unsigned __int8 *)a2 + 80);
      if (*((_BYTE *)a2 + 80)) {
        double v16 = a2[9];
      }
      else {
        double v16 = 0.0;
      }
      uint64_t v17 = sub_100264614(*((unsigned __int8 *)a2 + 360), *((unsigned __int8 *)a2 + 416));
      int v18 = *((unsigned __int8 *)a2 + 24);
      double v19 = a2[2];
      id v20 = objc_alloc(&OBJC_CLASS___PRRoseSolution);
      if (v18) {
        double v21 = v19;
      }
      else {
        double v21 = 0.0;
      }
      LOBYTE(v5sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = v15 != 0;
      LOBYTE(v49) = v10;
      BYTE1(v4_Block_object_dispose(va, 8) = v8;
      LOBYTE(v4_Block_object_dispose(va, 8) = v7;
      id v22 = objc_msgSend( v20,  "initWithVariant:macAddr:machAbsTime_sec:machContTimeValid:machContTime_sec:range_m:rangeUnc_m:azValid:elVa lid:az_deg:el_deg:azUnc_deg:elUnc_deg:fovConfidence:soiRssiValid:soiRssi_dBm:antennaType:prevSolutionIsBad :trackScoreValid:trackScore:sweepAngleValid:sweepAngle_deg:multipathProbabilityValid:multipathProbability:",  0,  *((void *)a2 + 5),  *((unsigned __int8 *)a2 + 24),  1,  1,  1,  *a2,  v21,  a2[44],  v14,  a2[83],  a2[82],  a2[86],  a2[85],  *(void *)&v13,  *((void *)a2 + 27),  v17,  v48,  *(void *)&v9,  v49,  *(void *)&v11,  v50,  *(void *)&v16);
      -[NSMutableArray addObject:](v6, "addObject:", v22);

      int v12 = *((_DWORD *)a2 + 8);
    }

    if ((v12 | 2) == 3)
    {
      if (!*((_BYTE *)a2 + 600))
      {
        __int128 v46 = "solution.raw_rose_measurement.has_value()";
        int v47 = 297;
        goto LABEL_65;
      }

      if (*((_BYTE *)a2 + 576)) {
        double v23 = a2[71];
      }
      else {
        double v23 = 10.0;
      }
      if (*((_BYTE *)a2 + 592)) {
        double v24 = a2[73];
      }
      else {
        double v24 = 0.0;
      }
      int v25 = *((unsigned __int8 *)a2 + 80);
      if (*((_BYTE *)a2 + 80)) {
        double v26 = a2[9];
      }
      else {
        double v26 = 0.0;
      }
      uint64_t v27 = sub_100264614(*((unsigned __int8 *)a2 + 360), *((unsigned __int8 *)a2 + 416));
      int v28 = *((unsigned __int8 *)a2 + 24);
      double v29 = a2[2];
      id v30 = objc_alloc(&OBJC_CLASS___PRRoseSolution);
      if (v28) {
        double v31 = v29;
      }
      else {
        double v31 = 0.0;
      }
      LOBYTE(v5sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = v25 != 0;
      LOBYTE(v49) = v10;
      BYTE1(v4_Block_object_dispose(va, 8) = v8;
      LOBYTE(v4_Block_object_dispose(va, 8) = v7;
      id v32 = objc_msgSend( v30,  "initWithVariant:macAddr:machAbsTime_sec:machContTimeValid:machContTime_sec:range_m:rangeUnc_m:azValid:elVa lid:az_deg:el_deg:azUnc_deg:elUnc_deg:fovConfidence:soiRssiValid:soiRssi_dBm:antennaType:prevSolutionIsBad :trackScoreValid:trackScore:sweepAngleValid:sweepAngle_deg:multipathProbabilityValid:multipathProbability:",  0,  *((void *)a2 + 5),  *((unsigned __int8 *)a2 + 24),  0,  0,  1,  *a2,  v31,  a2[44],  v23,  0.0,  0.0,  0.0,  0.0,  *(void *)&v24,  *((void *)a2 + 27),  v27,  v48,  *(void *)&v9,  v49,  *(void *)&v11,  v50,  *(void *)&v26);
      -[NSMutableArray addObject:](v6, "addObject:", v32);

      int v12 = *((_DWORD *)a2 + 8);
    }

    char v33 = v51;
    if ((v12 & 0xFFFFFFFE) != 2)
    {
LABEL_60:
      [v33 didReceiveNewSolutions:v6];

      goto LABEL_4;
    }

    if (*((_BYTE *)a2 + 752))
    {
      int v34 = *((unsigned __int8 *)a2 + 600);
      if (*((_BYTE *)a2 + 600))
      {
        uint64_t v35 = *((void *)a2 + 27);
        double v36 = a2[73];
        uint64_t v37 = *((unsigned __int8 *)a2 + 592);
        uint64_t v38 = sub_100264614(*((unsigned __int8 *)a2 + 360), *((unsigned __int8 *)a2 + 416));
        if (!v37) {
          double v36 = 0.0;
        }
        BOOL v39 = *((_BYTE *)a2 + 80) != 0;
        if (*((_BYTE *)a2 + 80)) {
          double v40 = a2[9];
        }
        else {
          double v40 = 0.0;
        }
      }

      else
      {
        uint64_t v38 = 0LL;
        BOOL v39 = 0;
        uint64_t v35 = 0LL;
        double v36 = 0.0;
        double v40 = 0.0;
      }

      int v41 = *((unsigned __int8 *)a2 + 24);
      double v42 = a2[2];
      id v43 = objc_alloc(&OBJC_CLASS___PRRoseSolution);
      if (v41) {
        double v44 = v42;
      }
      else {
        double v44 = 0.0;
      }
      LOBYTE(v5sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = v39;
      LOBYTE(v49) = v10;
      BYTE1(v4_Block_object_dispose(va, 8) = v8;
      LOBYTE(v4_Block_object_dispose(va, 8) = v7;
      id v45 = objc_msgSend( v43,  "initWithVariant:macAddr:machAbsTime_sec:machContTimeValid:machContTime_sec:range_m:rangeUnc_m:azValid:elVa lid:az_deg:el_deg:azUnc_deg:elUnc_deg:fovConfidence:soiRssiValid:soiRssi_dBm:antennaType:prevSolutionIsBad :trackScoreValid:trackScore:sweepAngleValid:sweepAngle_deg:multipathProbabilityValid:multipathProbability:",  1,  *((void *)a2 + 5),  *((unsigned __int8 *)a2 + 24),  1,  1,  v34 != 0,  *a2,  v44,  a2[81],  a2[84],  a2[83],  a2[82],  a2[86],  a2[85],  *(void *)&v36,  v35,  v38,  v48,  *(void *)&v9,  v49,  *(void *)&v11,  v50,  *(void *)&v40);
      -[NSMutableArray addObject:](v6, "addObject:", v45);

      char v33 = v51;
      goto LABEL_60;
    }

    __int128 v46 = "solution.sensor_fusion_solution.has_value()";
    int v47 = 359;
LABEL_65:
    __assert_rtn("toXPCCompatibleType", "PRRangingManagerClient.mm", v47, v46);
  }

  if (v3 == 1)
  {
    id v51 = objc_loadWeakRetained((id *)(a1 + 32));
    [v51 didReceiveNewSolution:a2];
LABEL_4:
  }

void sub_1002640A0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
  _Unwind_Resume(a1);
}

void sub_100264100(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3)
  {
    if (v3 == 1)
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      [WeakRetained didReceiveSessionStartNotification:a2];
      char v5 = WeakRetained;
LABEL_4:
    }
  }

  else if (!*(_DWORD *)a2)
  {
    id v6 = (id *)(a1 + 24);
    id v7 = objc_loadWeakRetained((id *)(a1 + 24));
    char v8 = objc_opt_respondsToSelector(v7, "didReceiveSessionStartNotification:");

    if ((v8 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 16)) {
        sub_100006080();
      }
      double v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  *(void *)(a2 + 8)));
      uint64_t v11 = objc_claimAutoreleasedReturnValue( +[PRSessionStartNotification createWithBluetoothConnectionEventCounterValue:]( &OBJC_CLASS___PRSessionStartNotification,  "createWithBluetoothConnectionEventCounterValue:",  v9));

      id v10 = objc_loadWeakRetained(v6);
      [v10 didReceiveSessionStartNotification:v11];

      char v5 = (void *)v11;
      goto LABEL_4;
    }
  }

void sub_1002641FC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_100264224(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 40) == 1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained didReceiveRemoteData:a2];
  }

void sub_10026427C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10026429C(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 40) == 1)
  {
    int v3 = (id *)(a1 + 32);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    char v4 = objc_opt_respondsToSelector(WeakRetained, "didReceiveAopSensorFusionUpdate:withBtConnHandle:");

    if ((v4 & 1) != 0)
    {
      id v6 = objc_loadWeakRetained(v3);
      [v6 didReceiveAopSensorFusionUpdate:**(unsigned int **)(a2 + 8) withBtConnHandle:*(unsigned __int16 *)(*(void *)(a2 + 8) + 4)];
    }
  }

void sub_100264334( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
}

void sub_100264350(uint64_t a1, uint64_t *a2)
{
  char v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_1003A27BC((uint64_t)a2, v4);
  }
  int v5 = *(_DWORD *)(a1 + 40);
  if (v5)
  {
    if (v5 != 1) {
      return;
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained didFailWithErrorCode:*a2 errorString:a2 + 1];
  }

  else
  {
    id v7 = (id *)(a1 + 24);
    id v8 = objc_loadWeakRetained((id *)(a1 + 24));
    char v9 = objc_opt_respondsToSelector(v8, "didFailWithError:");

    if ((v9 & 1) == 0) {
      return;
    }
    id WeakRetained = objc_loadWeakRetained(v7);
    uint64_t v10 = *a2;
    uint64_t v13 = a2[1];
    int v12 = a2 + 1;
    uint64_t v11 = (void *)v13;
    double v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%s", v11));
    NSErrorUserInfoKey v18 = NSLocalizedDescriptionKey;
    double v19 = v14;
    int v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v19,  &v18,  1LL));
    id v16 = PRErrorWithCodeAndUserInfo(v10, v15);
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

    [WeakRetained didFailWithError:v17];
  }
}

void sub_1002644C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100264510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(a1 + 40);
  if (v5)
  {
    if (v5 == 1)
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      [WeakRetained rangingServiceDidUpdateState:a2 cause:a3];
LABEL_13:
    }
  }

  else
  {
    id v6 = (id *)(a1 + 24);
    id v12 = objc_loadWeakRetained((id *)(a1 + 24));
    char v7 = objc_opt_respondsToSelector(v12, "rangingServiceDidUpdateState:cause:");

    if ((v7 & 1) != 0)
    {
      id v8 = objc_loadWeakRetained(v6);
      else {
        uint64_t v9 = qword_10042AA48[(int)a2];
      }
      else {
        uint64_t v10 = qword_10042AA68[(int)a3];
      }
      id WeakRetained = v8;
      [v8 rangingServiceDidUpdateState:v9 cause:v10];
      goto LABEL_13;
    }
  }

void sub_1002645F8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

uint64_t sub_100264614(int a1, int a2)
{
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)&qword_1007FC180);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_1007FC180))
  {
    dword_1007FC178 = *((_DWORD *)sub_100005150() + 144);
    __cxa_guard_release(&qword_1007FC180);
  }

  if (a2 == 5) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  sub_100149238((uint64_t)v8, dword_1007FC178, v5, 0);
  unsigned int v6 = sub_100149BB0((uint64_t)v8, a1) - 1;
  if (v6 >= 4) {
    return 2LL;
  }
  else {
    return qword_10042AAA8[v6];
  }
}

void sub_1002646CC(_Unwind_Exception *a1)
{
}

void sub_1002646E4()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_100264760(_Unwind_Exception *a1)
{
}

void sub_100264778()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10042A980;
      v1[1] = *(_OWORD *)algn_10042A990;
      v1[2] = xmmword_10042A9A0;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_100264818(_Unwind_Exception *a1)
{
}

void sub_100264830()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  uint64_t v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  int v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007FC0B0 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007FC0A0 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FC0A0, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  unsigned int v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  char v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007FC0C8 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007FC0B8 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FC0B8, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  uint64_t v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007FC0E0 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007FC0D0 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FC0D0, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  uint64_t v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  int v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007FC0F8 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007FC0E8 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FC0E8, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  uint64_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  double v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007FC110 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007FC100 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FC100, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  double v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  double v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007FC128 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007FC118 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FC118, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  int v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007FC140 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007FC130 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FC130, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  double v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  double v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007FC158 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007FC148 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FC148, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  char v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007FC170 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007FC160 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007FC160, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100264E24( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_100264F1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100264F78( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  __int128 v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)&OBJC_CLASS___PRSystemSettingsMonitor;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

id sub_100265180(uint64_t a1, uint64_t a2, void *a3)
{
  return _[a3 airplaneModeStatusChanged];
}

id sub_100265188(uint64_t a1)
{
  return _[*(id *)(a1 + 32) airplaneModeStatusChanged];
}

void sub_1002652F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

CFStringRef sub_100265310(uint64_t a1)
{
  uint64_t v1 = @"PRAirplaneModeOff";
  if (a1 == 1) {
    uint64_t v1 = @"PRAirplaneModeOn";
  }
  if (a1) {
    return v1;
  }
  else {
    return @"PRAirplaneModeStatusUnknown";
  }
}

void sub_100265494()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  qword_1007FC188 = (uint64_t)os_log_create("com.apple.nearbyd", "Regulatory");
  objc_autoreleasePoolPop(v0);
}

uint64_t sub_1002654D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + _Block_object_dispose(va, 8) = v6;
  __int128 v8 = (void (__cdecl ***)(std::ofstream *__hidden))(a1 + 8);
  uint64_t v9 = (void (__cdecl ***)(std::ofstream *__hidden))(a1 + 424);
  uint64_t v10 = a1 + 16;
  *(void *)(a1 + 8 + *(void *)(v6 - sub_100034A98(v28, *(void **)(v27 + 24)) = v7;
  uint64_t v11 = (std::ios_base *)(a1 + 8 + *(void *)(*(void *)(a1 + 8) - 24LL));
  std::ios_base::init(v11, (void *)(a1 + 16));
  v11[1].__vftable = 0LL;
  v11[1].__fmtflags_ = -1;
  std::filebuf::basic_filebuf(v10);
  else {
    __int128 v12 = *(const char **)a2;
  }
  gzFile v13 = gzopen(v12, "rb");
  *(void *)a1 = v13;
  if (!v13)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A28F0();
    }
    exceptiouint64_t n = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::operator+<char>(&v17, "Could not open file ", a2);
    std::runtime_error::runtime_error(exception, &v17);
  }

  std::ofstream::open(v8);
  if (!*(void *)(a1 + 136))
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A2968();
    }
    gzclose(*(gzFile *)a1);
    *(void *)a1 = 0LL;
    __int128 v16 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::operator+<char>(&v17, "Could not open file ", a3);
    std::runtime_error::runtime_error(v16, &v17);
  }

  return a1;
}

void sub_1002656D4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_100265748(v15);
      _Unwind_Resume(a1);
    }
  }

  else if (!v17)
  {
    goto LABEL_6;
  }

  __cxa_free_exception(v16);
  goto LABEL_6;
}

void *sub_100265748(void *a1)
{
  return a1;
}

uint64_t sub_1002657A0(uint64_t a1)
{
  uint64_t v2 = *(gzFile_s **)a1;
  if (v2) {
    gzclose(v2);
  }
  std::filebuf::~filebuf(a1 + 16);
  std::ios::~ios(a1 + 424);
  return a1;
}

BOOL sub_100265814(uint64_t a1, uint64_t a2)
{
  if (file && v11[16])
  {
    sub_100024264(buf, 0x4000uLL);
    while (2)
    {
      int v2 = gzeof(file);
      BOOL v3 = v2 != 0;
      if (v2)
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
          sub_1003A29CC();
        }
      }

      else
      {
        int v4 = gzread(file, buf[0], 0x4000u);
        if (v4)
        {
          uint64_t v5 = 0LL;
          uint64_t v6 = v4;
          uint64_t v7 = v4;
          do
          {
            std::ostream::write(v11, (char *)buf[0] + v5, 1LL);
            if ((*((_BYTE *)&v11[4] + *(void *)(v11[0] - 24LL)) & 5) != 0)
            {
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
                sub_1003A2B20();
              }
              goto LABEL_15;
            }

            ++v5;
          }

          while (v7 != v5);
          if (v7 == v6) {
            continue;
          }
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
            sub_1003A2ABC();
          }
        }

        else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
        {
          sub_1003A2A58();
        }
      }

      break;
    }

void sub_100265A0C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, char a12)
{
  if (a2 == 1)
  {
    __int128 v14 = __cxa_begin_catch(a1);
    int v15 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A2B84((uint64_t)v14, v15);
    }
    __cxa_end_catch();
    JUMPOUT(0x100265970LL);
  }

  _Unwind_Resume(a1);
}

void sub_100265B4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100265BC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100265C88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100265DE8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100265E00(uint64_t a1, void *a2)
{
  int v2 = *(void **)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue([a2 shortDescription]);
  [v2 appendFormat:@"\n    [%@] ", v3];
}

void sub_100265E48( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100265F64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10026606C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002662F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10026653C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100266624(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100266750(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_100266954@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B8F08[a1]);
}

void *sub_100266968@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B8F60[a1]);
}

void *sub_10026697C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B8FA8[a1]);
}

void *sub_100266990@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B8FC8[a1]);
}

void *sub_1002669A4(void *result, uint64_t a2, uint64_t a3)
{
  void *result = a2;
  result[1] = a3;
  return result;
}

void sub_1002669AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(**(void **)(a1 + 8) + 96LL))(&v13);
  v29[0] = 0;
  char v34 = 0;
  if ((_DWORD)v13)
  {
    int v4 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A2C0C(v4, v5, v6, v7, v8, v9, v10, v11);
    }
  }

  else
  {
    sub_100266BF4((void *)a1, (uint64_t)&v13, (uint64_t)v21);
    sub_100267564((uint64_t)v29);
    v29[0] = v21[0];
    memset(v30, 0, sizeof(v30));
    sub_1001DF3F4(v30, v22, (uint64_t)v23, (v23 - (_BYTE *)v22) >> 3);
    memset(v31, 0, sizeof(v31));
    sub_1001DF46C(v31, v24, (uint64_t)v25, (v25 - (_BYTE *)v24) >> 3);
    memset(v32, 0, sizeof(v32));
    sub_1001DF4E4(v32, __p, (uint64_t)v27, (v27 - (_BYTE *)__p) >> 3);
    v33[0] = v28[0];
    *(_DWORD *)((char *)v33 + 7) = *(_DWORD *)((char *)v28 + 7);
    char v34 = 1;
    if (__p)
    {
      uint64_t v27 = __p;
      operator delete(__p);
    }

    if (v24)
    {
      int v25 = v24;
      operator delete(v24);
    }

    if (v22)
    {
      double v23 = v22;
      operator delete(v22);
    }
  }

  int v12 = v13;
  sub_1001DF2C8(v20, (uint64_t)v29);
  *(_DWORD *)a2 = v12;
  sub_1001DF2C8((_BYTE *)(a2 + 8), (uint64_t)v20);
  sub_1001DF55C((uint64_t)v20);
  sub_1001DF55C((uint64_t)v29);
  if (v18)
  {
    double v19 = v18;
    operator delete(v18);
  }

  if (v16)
  {
    int v17 = v16;
    operator delete(v16);
  }

  if (v14)
  {
    int v15 = v14;
    operator delete(v14);
  }

void sub_100266B7C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33)
{
  uint64_t v35 = *(void **)(v33 - 112);
  if (v35)
  {
    *(void *)(v33 - 104) = v35;
    operator delete(v35);
  }

  __int128 v36 = *(void **)(v33 - 136);
  if (v36)
  {
    *(void *)(v33 - 12_Block_object_dispose(va, 8) = v36;
    operator delete(v36);
  }

  sub_100266DA4(&a33);
  sub_1001DF55C(v33 - 144);
  sub_100266DA4(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_100266BF4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "regulatory,produceRoseConfig", buf, 2u);
  }

  uint64_t v7 = (*(uint64_t (**)(void))(*(void *)*a1 + 32LL))(*a1);
  buf[0] = 0;
  char v17 = 0;
  if (BYTE6(v7))
  {
    char v17 = 1;
    *(void *)uint8_t buf = v7 & 0xFFFFFFFFFFFFLL;
  }

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  unsigned int v9 = [v8 BOOLForKey:@"DisableCoex"];

  __int16 v15 = v9 == 0;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[PRGlobalDebugSettings sharedSettings](&OBJC_CLASS___PRGlobalDebugSettings, "sharedSettings"));
  id v11 = [v10 integerForKey:PRDebugConfigArgDebugLevel];

  if (!v11)
  {
    int v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    id v11 = [v12 integerForKey:@"RoseDebugLevelOverride"];
  }

  if (v11) {
    char v13 = (char)v11;
  }
  else {
    char v13 = 1;
  }
  return sub_100267470(a3, v13, a2 + 8, a2 + 32, a2 + 56, &v15, (uint64_t *)buf);
}

void sub_100266D84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_100266DA4(void *a1)
{
  int v2 = (void *)a1[7];
  if (v2)
  {
    a1[8] = v2;
    operator delete(v2);
  }

  id v3 = (void *)a1[4];
  if (v3)
  {
    a1[5] = v3;
    operator delete(v3);
  }

  int v4 = (void *)a1[1];
  if (v4)
  {
    a1[2] = v4;
    operator delete(v4);
  }

  return a1;
}

uint64_t sub_100266DF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 48LL))(*(void *)(a1 + 8));
}

BOOL sub_100266E04(uint64_t a1, char *a2, unsigned __int8 *a3, __int16 a4)
{
  (*(void (**)(void **__return_ptr))(**(void **)(a1 + 8) + 48LL))(&v47);
  uint64_t v8 = (unsigned __int8 *)v47;
  uint64_t v7 = v48;
  if (v48 != v47)
  {
    double v44 = a2;
    double v42 = a3;
    int v9 = 0;
    int v10 = 0;
    id v43 = (unsigned __int8 *)v47;
    do
    {
      int v11 = *v8;
      if (v11 == 9)
      {
        char v13 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint8_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "[PRConfigurationManager] RF channel 9 ALLOWED.",  buf,  2u);
        }

        int v10 = 1;
      }

      else if (v11 == 5)
      {
        int v12 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint8_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "[PRConfigurationManager] RF channel 5 ALLOWED.",  buf,  2u);
        }

        int v9 = 1;
      }

      ++v8;
    }

    while (v8 != v7);
    if (((v9 | v10) & 1) == 0)
    {
      BOOL v39 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
        sub_1003A2CAC(v39);
      }
      double v40 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)uint8_t buf = 136315650;
        *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/PRConfigurationManager.mm";
        __int16 v54 = 1024;
        int v55 = 124;
        __int16 v56 = 2080;
        __int16 v57 = "getPreferredChannels";
        _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", buf, 0x1Cu);
      }

      abort();
    }

    __int128 v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    uint64_t v15 = objc_claimAutoreleasedReturnValue([v14 objectForKey:@"PreferredUWBChannelOverride"]);
    uint64_t v8 = v43;
    char v17 = a2;
    __int128 v18 = (void *)v15;
    if ((a4 & 0xFF00) != 0)
    {
    }

    else if (v15)
    {
      uint64_t v29 = objc_opt_class(&OBJC_CLASS___NSNumber, v16);
      if ((objc_opt_isKindOfClass(v18, v29) & 1) != 0)
      {
        int v30 = [v18 integerValue];
        if (v30 == sub_10032BC40(5, 1))
        {
          double v31 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)uint8_t buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "[PRConfigurationManager] Ch5 set as preferred in default write. Override preference for channel 9.",  buf,  2u);
          }

void sub_1002673A0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *__p, uint64_t a24, int a25, __int16 a26, char a27, char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }

  if (a16) {
    operator delete(a16);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100267408(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 56LL))(*(void *)(a1 + 8));
}

void *sub_100267418@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unsigned __int16 v3 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 64LL))(*(void *)(a1 + 8));
  if (v3 > 0xFFu) {
    return sub_10034D81C(v3, a2);
  }
  else {
    return sub_1000065CC(a2, "");
  }
}

uint64_t sub_100267470(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, _WORD *a6, uint64_t *a7)
{
  *(_BYTE *)a1 = a2;
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  sub_1001DF3F4( (void *)(a1 + 8),  *(const void **)a3,  *(void *)(a3 + 8),  (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3);
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0LL;
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;
  sub_1001DF46C( (void *)(a1 + 32),  *(const void **)a4,  *(void *)(a4 + 8),  (uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 3);
  *(void *)(a1 + 56) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + sub_100012390(v1 + 72) = 0LL;
  sub_1001DF4E4( (void *)(a1 + 56),  *(const void **)a5,  *(void *)(a5 + 8),  (uint64_t)(*(void *)(a5 + 8) - *(void *)a5) >> 3);
  *(_WORD *)(a1 + sub_10005DE34(v14 - 80) = *a6;
  uint64_t v12 = *a7;
  *(_BYTE *)(a1 + 9sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = *((_BYTE *)a7 + 8);
  *(void *)(a1 + 82) = v12;
  return a1;
}

void sub_100267530(_Unwind_Exception *exception_object)
{
  uint64_t v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = v5;
    operator delete(v5);
  }

  uint64_t v6 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 16) = v6;
    operator delete(v6);
  }

  _Unwind_Resume(exception_object);
}

void sub_100267564(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 96))
  {
    int v2 = *(void **)(a1 + 56);
    if (v2)
    {
      *(void *)(a1 + 64) = v2;
      operator delete(v2);
    }

    unsigned __int16 v3 = *(void **)(a1 + 32);
    if (v3)
    {
      *(void *)(a1 + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = v3;
      operator delete(v3);
    }

    int v4 = *(void **)(a1 + 8);
    if (v4)
    {
      *(void *)(a1 + 16) = v4;
      operator delete(v4);
    }

    *(_BYTE *)(a1 + 96) = 0;
  }

void sub_10026766C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100267790(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateLocationAuthorized];
}

void sub_100267AB8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100267C04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100267CAC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = a2;
  *(void *)a1 = v9;
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(_OWORD *)(a1 + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = xmmword_10042AAE0;
  *(_BYTE *)(a1 + 32) = 0;
  *(int64x2_t *)(a1 + 56) = vdupq_n_s64(0xC08F400000000000LL);
  *(void *)(a1 + sub_100012390(v1 + 72) = 0xC08F400000000000LL;
  *(_BYTE *)(a1 + sub_10005DE34(v14 - 80) = 0;
  *(void *)(a1 + 8_Block_object_dispose(va, 8) = 0LL;
  sub_10001E914(a1 + 96, a3);
  sub_10001E914(a1 + 128, a4);
  sub_10001E914(a1 + 160, a5);
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 20_Block_object_dispose(va, 8) = 0u;
  sub_100156484(a1 + 224, *(void **)a1);
  *(void *)(a1 + 392) = 0LL;
  *(_WORD *)(a1 + 40sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0;
  int v10 = *(dispatch_queue_s **)a1;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  _DWORD v12[2] = sub_100267EB4;
  void v12[3] = &unk_1007A2398;
  void v12[4] = a1;
  dispatch_async(v10, v12);

  return a1;
}

void sub_100267DD4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void **a14)
{
  double v21 = v17;

  a14 = v21;
  sub_1001AD33C(&a14);
  uint64_t v23 = *(void **)(v14 + 184);
  if (v23 == v19)
  {
    uint64_t v24 = v19;
    uint64_t v25 = 4LL;
  }

  else
  {
    if (!v23) {
      goto LABEL_6;
    }
    uint64_t v25 = 5LL;
    uint64_t v24 = *(void **)(v14 + 184);
  }

  (*(void (**)(void))(*v24 + 8 * v25))();
LABEL_6:
  uint64_t v26 = *(void **)(v14 + 152);
  if (v26 == v18)
  {
    uint64_t v27 = 4LL;
    uint64_t v26 = v18;
  }

  else
  {
    if (!v26) {
      goto LABEL_11;
    }
    uint64_t v27 = 5LL;
  }

  (*(void (**)(void))(*v26 + 8 * v27))();
LABEL_11:
  uint64_t v28 = *(void **)(v14 + 120);
  if (v28 == v16)
  {
    uint64_t v29 = 4LL;
    uint64_t v28 = v16;
  }

  else
  {
    if (!v28) {
      goto LABEL_16;
    }
    uint64_t v29 = 5LL;
  }

  (*(void (**)(void))(*v28 + 8 * v29))();
LABEL_16:

  _Unwind_Resume(a1);
}

id sub_100267EB4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  int v2 = -[PRCoreLocationClient initWithQueue:](objc_alloc(&OBJC_CLASS___PRCoreLocationClient), "initWithQueue:", *v1);
  unsigned __int16 v3 = (void *)v1[27];
  v1[27] = v2;

  int v4 = (void *)v1[27];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_100267F68;
  void v8[3] = &unk_1007B24F0;
  v8[4] = v1;
  [v4 setRegulatoryLocationAuthorized:v8];
  uint64_t v5 = (void *)v1[27];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_100267FE4;
  v7[3] = &unk_1007B8FE8;
  v7[4] = v1;
  return [v5 setRegulatoryLocationHandler:v7];
}

uint64_t sub_100267F68(uint64_t a1, uint64_t a2)
{
  return sub_100267F70(*(void *)(a1 + 32), a2);
}

uint64_t sub_100267F70(uint64_t a1, uint64_t a2)
{
  int v4 = (os_log_s *)qword_1007FC190;
  if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_DEBUG)) {
    sub_1003A302C(a2, v4, v5, v6, v7, v8, v9, v10);
  }
  uint64_t result = *(void *)(a1 + 152);
  if (result)
  {
    char v12 = a2;
    return (*(uint64_t (**)(uint64_t, char *))(*(void *)result + 48LL))(result, &v12);
  }

  return result;
}

void sub_100267FE4(uint64_t a1, int a2, double a3, double a4, double a5, double a6, double a7)
{
}

void sub_100267FEC(uint64_t a1, int a2, double a3, double a4, double a5, double a6, double a7)
{
  double v18 = a4;
  double v19 = a3;
  double v16 = a6;
  double v17 = a5;
  uint64_t v10 = sub_1001A8438();
  unsigned int v11 = a2 & ~sub_100351358((uint64_t)v10, &v19, &v18, &v17, &v16);
  double v13 = v18;
  double v12 = v19;
  double v14 = v16;
  double v15 = v17;
  *(double *)(a1 + 4_Block_object_dispose(va, 8) = v19;
  *(double *)(a1 + 56) = v13;
  *(double *)(a1 + 64) = v15;
  *(double *)(a1 + sub_100012390(v1 + 72) = v14;
  *(_BYTE *)(a1 + sub_10005DE34(v14 - 80) = 0;
  *(void *)(a1 + 8_Block_object_dispose(va, 8) = 0LL;
  sub_100268FA4(a1 + 160, v12, v13, v14, a7);
  sub_100268260(a1, v11, v19, v18, v16, a7);
}

void sub_100268084(uint64_t a1)
{
}

uint64_t sub_10026808C(dispatch_queue_s **a1)
{
  if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_DEBUG)) {
    sub_1003A3094();
  }
  int v2 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100268114;
  block[3] = &unk_1007A2398;
  void block[4] = a1;
  dispatch_async(v2, block);
  return 1LL;
}

id sub_100268114(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 216LL);
  if (result) {
    return [result startMonitoring];
  }
  return result;
}

uint64_t sub_100268128(dispatch_queue_s **a1)
{
  if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_DEBUG)) {
    sub_1003A30C0();
  }
  int v2 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1002681B0;
  block[3] = &unk_1007A2398;
  void block[4] = a1;
  dispatch_async(v2, block);
  return 1LL;
}

id sub_1002681B0(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 216LL);
  if (result) {
    return _[result upgradeToBestAccuracyMonitoring];
  }
  return result;
}

uint64_t sub_1002681C4(dispatch_queue_s **a1)
{
  if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_DEBUG)) {
    sub_1003A30EC();
  }
  int v2 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10026824C;
  block[3] = &unk_1007A2398;
  void block[4] = a1;
  dispatch_async(v2, block);
  return 1LL;
}

id sub_10026824C(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 216LL);
  if (result) {
    return _[result dowgradeToBystanderMonitoring];
  }
  return result;
}

void sub_100268260(uint64_t a1, int a2, double a3, double a4, double a5, double a6)
{
  double v21 = a4;
  double v22 = a3;
  double v12 = sub_100023CC4();
  if (!*(_BYTE *)(a1 + 32)) {
    goto LABEL_4;
  }
  double v13 = *(double *)(a1 + 40);
  if (v12 <= v13) {
    sub_1003A3118();
  }
  if (v12 - v13 >= 600.0)
  {
LABEL_4:
    double v14 = (os_log_s *)qword_1007FC190;
    if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint8_t buf = 134284801;
      double v24 = a3;
      __int16 v25 = 2049;
      double v26 = a4;
      __int16 v27 = 2049;
      double v28 = a5;
      __int16 v29 = 1025;
      int v30 = a2;
      __int16 v31 = 2049;
      double v32 = a6;
      __int16 v33 = 2048;
      uint64_t v34 = 0x4082C00000000000LL;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "regulatory,geo,loc,checkRegulatoryIso,lat,%{private}.6f,lon,%{private}.6f,unc,%{private}.2f,isLastKnownLocation, %{private}d,ts,%{private}.2f,checkInterval,%.2f",  buf,  0x3Au);
    }

    *(double *)(a1 + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = v12;
    *(_BYTE *)(a1 + 32) = 1;
    if (sub_100156A58(a1 + 224)) {
      char v15 = sub_1001564D8(a1 + 224, &v22, &v21);
    }
    else {
      char v15 = 1;
    }
    sub_100268494(a1);
    id v16 = objc_msgSend([GEOLocation alloc], "initWithGEOCoordinate:", v22, v21);
    [v16 setHorizontalAccuracy:a5];
    uint64_t v17 = *(void *)a1;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    void v18[2] = sub_100268754;
    v18[3] = &unk_1007B9030;
    void v18[4] = a1;
    char v19 = v15;
    *(double *)&void v18[5] = v22;
    *(double *)&v18[6] = v21;
    char v20 = a2;
    *(double *)&v18[7] = a6;
    +[GEOGeographicMetadataRequester fetchPossibleTerritoriesForLocation:responseQueue:responseBlock:]( &OBJC_CLASS___GEOGeographicMetadataRequester,  "fetchPossibleTerritoriesForLocation:responseQueue:responseBlock:",  v16,  v17,  v18);
  }

void sub_10026847C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100268494(uint64_t a1)
{
  int v1 = *(unsigned __int16 *)(a1 + 400);
  if (v1 == 0xFFFF)
  {
    if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_FAULT)) {
      sub_1003A3140();
    }
    uint64_t v8 = (os_log_s *)qword_1007FC190;
    if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type __p = 136315650;
      *(void *)&__p[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/Ranging/Monitors/PRLocationMonitor.mm";
      __int16 v11 = 1024;
      int v12 = 432;
      __int16 v13 = 2080;
      double v14 = "_acquireAssertion";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", __p, 0x1Cu);
    }

    abort();
  }

  *(_WORD *)(a1 + 40sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = v1 + 1;
  unsigned __int16 v3 = (os_log_s *)qword_1007FC190;
  if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_INFO))
  {
    int v4 = *(unsigned __int16 *)(a1 + 400);
    *(_DWORD *)std::stringbuf::string_type __p = 67109120;
    *(_DWORD *)&__p[4] = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "regulatory,geo,loc,checkRegulatoryIso,refCountForAcquiringAssertion,%d",  __p,  8u);
  }

  if (*(_WORD *)(a1 + 400) == 1)
  {
    uint64_t v5 = (os_log_s *)qword_1007FC190;
    if (*(void *)(a1 + 392))
    {
      if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_FAULT)) {
        sub_1003A316C();
      }
      uint64_t v9 = (os_log_s *)qword_1007FC190;
      if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::stringbuf::string_type __p = 136315650;
        *(void *)&__p[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/Ranging/Monitors/PRLocationMonitor.mm";
        __int16 v11 = 1024;
        int v12 = 438;
        __int16 v13 = 2080;
        double v14 = "_acquireAssertion";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", __p, 0x1Cu);
      }

      abort();
    }

    if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type __p = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "regulatory,geo,loc,checkRegulatoryIso,acquireAssertion",  __p,  2u);
    }

    uint64_t v6 = operator new(0x28uLL);
    sub_1000065CC(__p, "com.apple.nearbyd.locationMonitorAssertion");
    sub_100361848(v6);
    uint64_t v7 = (uint64_t *)(a1 + 392);
    if (SBYTE3(v14) < 0) {
      operator delete(*(void **)__p);
    }
    sub_1001AC5F4(v7, (uint64_t)v6);
  }

void sub_100268720( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  operator delete(v14);
  _Unwind_Resume(a1);
}

void sub_100268754(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v30 = 0LL;
  __int16 v31 = &v30;
  uint64_t v32 = 0x2020000000LL;
  char v33 = 1;
  uint64_t v26 = 0LL;
  __int16 v27 = &v26;
  uint64_t v28 = 0x2020000000LL;
  char v29 = 1;
  sub_100268A94(v7);
  uint64_t v8 = (os_log_s *)qword_1007FC190;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_ERROR)) {
      sub_1003A31FC((uint64_t)v6, v8);
    }
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_DEBUG)) {
      sub_1003A3198((uint64_t)v5, v8, v9, v10, v11, v12, v13, v14);
    }
    *((_BYTE *)v31 + 24) = 0;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472LL;
    v25[2] = sub_100268CBC;
    v25[3] = &unk_1007B9010;
    v25[4] = &v30;
    void v25[5] = &v26;
    [v5 enumerateObjectsUsingBlock:v25];
  }

  char v15 = (os_log_s *)qword_1007FC190;
  if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_DEBUG))
  {
    int v18 = *((unsigned __int8 *)v27 + 24);
    int v19 = *(unsigned __int8 *)(a1 + 64);
    int v20 = *((unsigned __int8 *)v31 + 24);
    *(_DWORD *)uint8_t buf = 67175425;
    *(_DWORD *)uint64_t v35 = v18;
    *(_WORD *)&v35[4] = 1025;
    *(_DWORD *)&v35[6] = v19;
    LOWORD(v36) = 1025;
    *(_DWORD *)((char *)&v36 + 2) = v6 == 0LL;
    HIWORD(v36) = 1025;
    *(_DWORD *)int v37 = v20;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "regulatory,geo,loc,checkRegulatoryIso,tileMapCoversRegion,%{private}d,tileMapUnrestricted,%{private}d,geoServicesA vailable,%{private}d,geoServicesUnrestricted,%{private}d",  buf,  0x1Au);
  }

  memset(&__str, 0, sizeof(__str));
  if (*((_BYTE *)v27 + 24) && *(_BYTE *)(a1 + 64) || !v6 && *((_BYTE *)v31 + 24)) {
    id v16 = off_1007F4758;
  }
  else {
    id v16 = off_1007F4750;
  }
  std::string::assign(&__str, *v16);
  std::string::operator=((std::string *)(v7 + 8), &__str);
  if (*(void *)(v7 + 120))
  {
    uint64_t v17 = (os_log_s *)qword_1007FC190;
    if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v21 = v7 + 8;
      uint64_t v22 = *(void *)(a1 + 40);
      uint64_t v23 = *(void *)(a1 + 48);
      *(_DWORD *)uint8_t buf = 136315651;
      *(void *)uint64_t v35 = v21;
      *(_WORD *)&v35[8] = 2049;
      uint64_t v36 = v22;
      *(_WORD *)int v37 = 2049;
      *(void *)&v37[2] = v23;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "regulatory,geo,loc,fOnRegulatoryRegion,%s,ll,%{private}.6f,%{private}.6f",  buf,  0x20u);
    }

    sub_100268F64(v7 + 96, v7 + 8, *(_BYTE *)(a1 + 65), *(double *)(a1 + 56));
  }

  _Block_object_dispose(&v26, 8);
  _Block_object_dispose(&v30, 8);
}

void sub_100268A48( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  _Unwind_Resume(a1);
}

void sub_100268A94(uint64_t a1)
{
  if (!*(_WORD *)(a1 + 400))
  {
    if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_FAULT)) {
      sub_1003A326C();
    }
    id v6 = (os_log_s *)qword_1007FC190;
    if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_INFO))
    {
      int v7 = 136315650;
      uint64_t v8 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/Ranging/Monitors/PRLocationMonitor.mm";
      __int16 v9 = 1024;
      int v10 = 445;
      __int16 v11 = 2080;
      uint64_t v12 = "_releaseAssertion";
LABEL_18:
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "%s:%d: assertion failure in %s",  (uint8_t *)&v7,  0x1Cu);
    }

void sub_100268CBC(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5 = a2;
  *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 1;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 iso3166CountryCode2]);

  if (!v6) {
    goto LABEL_26;
  }
  int v7 = (void *)objc_claimAutoreleasedReturnValue([v5 iso3166CountryCode2]);
  if ([v7 isEqualToString:@"IR"])
  {
  }

  else
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 iso3166CountryCode2]);
    unsigned int v9 = [v8 isEqualToString:@"KP"];

    if (!v9) {
      goto LABEL_6;
    }
  }

  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 0;
LABEL_6:
  if ([v5 isCoastalWaters] == (id)1)
  {
    int v10 = (void *)objc_claimAutoreleasedReturnValue([v5 iso3166CountryCode2]);
    if ([v10 isEqualToString:@"US"])
    {

LABEL_10:
      *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 0;
      *a3 = 1;
      goto LABEL_26;
    }

    __int16 v11 = (void *)objc_claimAutoreleasedReturnValue([v5 iso3166CountryCode2]);
    unsigned int v12 = [v11 isEqualToString:@"KO"];

    if (v12) {
      goto LABEL_10;
    }
  }

  id v13 = objc_claimAutoreleasedReturnValue([v5 iso3166CountryCode2]);
  sub_1000065CC(&v23, (char *)[v13 UTF8String]);

  __int16 v21 = 0;
  *(_OWORD *)int v19 = 0u;
  __int128 v20 = 0u;
  *(_OWORD *)int v18 = 0u;
  char v22 = -1;
  uint64_t v14 = sub_1001A8438();
  else {
    std::string __p = v23;
  }
  BOOL v15 = sub_10034F45C((uint64_t)v14, &__p, (std::string *)v18);
  BOOL v16 = v15;
  if (((char)__p.__r_.__value_.__s.__size_ & 0x80000000) == 0)
  {
    if (!v15) {
      goto LABEL_20;
    }
LABEL_18:
    if (!(v21 | HIBYTE(v21)))
    {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 0;
      *a3 = 1;
    }

    goto LABEL_20;
  }

  operator delete(__p.__r_.__value_.__l.__data_);
  if (v16) {
    goto LABEL_18;
  }
LABEL_20:
  if (SHIBYTE(v20) < 0) {
    operator delete(v19[1]);
  }
  if (SHIBYTE(v19[0]) < 0) {
    operator delete(v18[0]);
  }
LABEL_26:
}

void sub_100268EF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100268F64(uint64_t a1, uint64_t a2, char a3, double a4)
{
  char v7 = a3;
  double v6 = a4;
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4) {
    sub_10001EEF0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, double *))(*(void *)v4 + 48LL))(v4, a2, &v7, &v6);
}

uint64_t sub_100268FA4(uint64_t a1, double a2, double a3, double a4, double a5)
{
  double v10 = a2;
  double v8 = a4;
  double v9 = a3;
  double v7 = a5;
  uint64_t v5 = *(void *)(a1 + 24);
  if (!v5) {
    sub_10001EEF0();
  }
  return (*(uint64_t (**)(uint64_t, double *, double *, double *, double *))(*(void *)v5 + 48LL))( v5,  &v10,  &v9,  &v8,  &v7);
}

void sub_100268FF0()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  qword_1007FC190 = (uint64_t)os_log_create("com.apple.nearbyd", "Regulatory");
  objc_autoreleasePoolPop(v0);
}

void *sub_100269030@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B9240)[a1]);
}

void *sub_100269044@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B9298)[a1]);
}

void *sub_100269058@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B92E0)[a1]);
}

void *sub_10026906C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B9300)[a1]);
}

uint64_t sub_100269080(uint64_t a1)
{
  return a1;
}

void sub_100269198(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002691B4(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = &off_1007B9060;
  *(_DWORD *)(a1 + 24) = a2;
  id v9 = v7;
  *(void *)(a1 + 32) = v9;
  double v10 = (dispatch_queue_s *)v8;
  *(void *)(a1 + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = v10;
  *(void *)(a1 + 56) = 0LL;
  dispatch_assert_queue_V2(v10);
  __int16 v11 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    sub_100269030(*(_DWORD *)(a1 + 24), __p);
    if (v16 >= 0) {
      unsigned int v12 = __p;
    }
    else {
      unsigned int v12 = (void **)__p[0];
    }
    uint64_t v13 = *(void *)(a1 + 32);
    *(_DWORD *)uint8_t buf = 136315394;
    int v18 = v12;
    __int16 v19 = 2112;
    uint64_t v20 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#rlm,Created RangingLimitInputProvider for '%s' with sessionIdentifier %@",  buf,  0x16u);
    if (v16 < 0) {
      operator delete(__p[0]);
    }
  }

  return a1;
}

void sub_100269304(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  id v7 = *(std::__shared_weak_count **)(v1 + 16);
  if (v7) {
    std::__shared_weak_count::__release_weak(v7);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_100269354(uint64_t a1)
{
  return 0LL;
}

uint64_t sub_100269370(uint64_t a1)
{
  return 0LL;
}

void sub_10026938C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 48))
  {
    int v2 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      sub_100269030(*(_DWORD *)(a1 + 24), __p);
      sub_1003A32C4();
    }
  }

  else
  {
    *(_BYTE *)(a1 + 4_Block_object_dispose(va, 8) = 1;
    int v3 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      sub_100269030(*(_DWORD *)(a1 + 24), __p);
      uint64_t v4 = SHIBYTE(v9) >= 0 ? __p : (void **)__p[0];
      uint64_t v5 = *(void *)(a1 + 32);
      *(_DWORD *)uint8_t buf = 136315394;
      uint64_t v14 = v4;
      __int16 v15 = 2112;
      uint64_t v16 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#rlm,indicateRangingStarted for '%s' with sessionIdentifier %@",  buf,  0x16u);
      if (SHIBYTE(v9) < 0) {
        operator delete(__p[0]);
      }
    }

    sub_100269560();
    int v6 = *(_DWORD *)(a1 + 24);
    __p[0] = _NSConcreteStackBlock;
    __p[1] = (void *)3221225472LL;
    id v9 = sub_10026B8F8;
    double v10 = &unk_1007AF260;
    __int16 v11 = &qword_1007FC1B0;
    int v12 = v6;
    dispatch_sync((dispatch_queue_t)qword_1007FC1B0, __p);
    uint64_t v7 = objc_claimAutoreleasedReturnValue(+[NSDate now](&OBJC_CLASS___NSDate, "now"));
    int v2 = *(os_log_s **)(a1 + 56);
    *(void *)(a1 + 56) = v7;
  }
}

void sub_100269544(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_100269560()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007FC248);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_1007FC248))
  {
    sub_10026A180((uint64_t)&qword_1007FC1B0);
    __cxa_atexit((void (*)(void *))sub_10026AB78, &qword_1007FC1B0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1007FC248);
  }

  return &qword_1007FC1B0;
}

void sub_1002695D8(_Unwind_Exception *a1)
{
}

void sub_1002695F0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 48))
  {
    *(_BYTE *)(a1 + 4_Block_object_dispose(va, 8) = 0;
    int v2 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      sub_100269030(*(_DWORD *)(a1 + 24), __p);
      int v3 = __p[23] >= 0 ? __p : *(_BYTE **)__p;
      uint64_t v4 = *(void *)(a1 + 32);
      *(_DWORD *)int v12 = 136315394;
      *(void *)&void v12[4] = v3;
      __int16 v13 = 2112;
      uint64_t v14 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#rlm,indicateRangingStopped for '%s' with sessionIdentifier %@",  v12,  0x16u);
      if ((__p[23] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
    }

    sub_100269560();
    int v5 = *(_DWORD *)(a1 + 24);
    *(void *)std::string __p = _NSConcreteStackBlock;
    *(void *)&__p[8] = 3221225472LL;
    *(void *)&__p[16] = sub_10026BB1C;
    uint64_t v17 = &unk_1007AF260;
    int v18 = &qword_1007FC1B0;
    int v19 = v5;
    dispatch_sync((dispatch_queue_t)qword_1007FC1B0, __p);
    int v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](&OBJC_CLASS___NSDate, "now"));
    [v6 timeIntervalSinceDate:*(void *)(a1 + 56)];
    id v8 = v7;

    id v9 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      sub_100269030(*(_DWORD *)(a1 + 24), v12);
      if (v15 >= 0) {
        double v10 = v12;
      }
      else {
        double v10 = *(_BYTE **)v12;
      }
      uint64_t v11 = *(void *)(a1 + 32);
      *(_DWORD *)std::string __p = 136315650;
      *(void *)&__p[4] = v10;
      *(_WORD *)&_BYTE __p[12] = 2112;
      *(void *)&__p[14] = v11;
      *(_WORD *)&__p[22] = 2048;
      uint64_t v17 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#rlm,ranging complete [%s, %@] = %.1f secs",  __p,  0x20u);
      if (v15 < 0) {
        operator delete(*(void **)v12);
      }
    }
  }

  else
  {
    id v9 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      sub_100269030(*(_DWORD *)(a1 + 24), __p);
      sub_1003A3308();
    }
  }
}

void sub_100269850(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100269874(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v2 + 1;
  int v3 = (os_log_s *)(id)qword_1008000A0;
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG);
  if (v2)
  {
    if (v4)
    {
      sub_100269030(*(_DWORD *)a1, v5);
      sub_1003A3394();
    }
  }

  else
  {
    if (v4)
    {
      sub_100269030(*(_DWORD *)a1, v5);
      sub_1003A334C();
    }

    *(double *)(a1 + 32) = sub_100023CC4();
  }

void sub_100269954(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double sub_100269970(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!v2)
  {
    id v9 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT))
    {
      sub_100269030(*(_DWORD *)a1, __p);
      sub_1003A33DC();
    }

    double v10 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      uint64_t v14 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/RangingLimitManager/NIServ"
            "erRangingLimitManager.mm";
      __int16 v15 = 1024;
      *(_DWORD *)uint64_t v16 = 334;
      *(_WORD *)&void v16[4] = 2080;
      *(void *)&void v16[6] = "indicateRangingStopped";
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "#rlm,%s:%d: assertion failure in %s",  buf,  0x1Cu);
    }

    abort();
  }

  *(_DWORD *)(a1 + 16) = v2 - 1;
  double v3 = sub_100023CC4();
  double v4 = v3 - *(double *)(a1 + 32);
  *(double *)(a1 + 24) = *(double *)(a1 + 24) + v4;
  *(double *)(a1 + 32) = v3;
  *(double *)(a1 + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = v3;
  int v5 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    sub_100269030(*(_DWORD *)a1, __p);
    if (v12 >= 0) {
      int v6 = __p;
    }
    else {
      int v6 = (void **)__p[0];
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(_DWORD *)uint8_t buf = 136315650;
    uint64_t v14 = (const char *)v6;
    __int16 v15 = 2048;
    *(void *)uint64_t v16 = v7;
    *(_WORD *)&void v16[8] = 2048;
    *(double *)&v16[10] = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#rlm,RangingDurationTracker(%s): overall = %.0f secs, current_delta = %.0f secs",  buf,  0x20u);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }

  return v4;
}

void sub_100269B60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100269B7C(uint64_t a1)
{
  int v2 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    sub_100269030(*(_DWORD *)a1, __p);
    double v3 = v7 >= 0 ? __p : (void **)__p[0];
    uint64_t v4 = *(void *)(a1 + 24);
    *(_DWORD *)uint8_t buf = 136315394;
    id v9 = v3;
    __int16 v10 = 2048;
    uint64_t v11 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#rlm,RangingDurationTracker(%s): periodicReset: rangingDuratiouint64_t n = %.0f -> 0 secs",  buf,  0x16u);
    if (v7 < 0) {
      operator delete(__p[0]);
    }
  }

  if (*(_DWORD *)(a1 + 16)) {
    double v5 = sub_100023CC4();
  }
  else {
    double v5 = 0.0;
  }
  *(double *)(a1 + 32) = v5;
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0LL;
}

void sub_100269C94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100269CAC(uint64_t a1, uint64_t a2, void *a3, double a4)
{
  id v7 = a3;
  sub_10026BF34((uint64_t *)a1, a2);
  id v8 = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = 0LL;
  *(double *)(a1 + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = a4;
  if (!*(void *)(a2 + 16))
  {
    std::string v23 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_1003A3424(v23);
    }
    double v24 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string __p = 136315650;
      *(void *)&__p[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/RangingLimi"
                           "tManager/NIServerRangingLimitManager.mm";
      __int16 v26 = 1024;
      int v27 = 396;
      __int16 v28 = 2080;
      char v29 = "RangingBudgetTracker";
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_INFO,  "#rlm,%s:%d: assertion failure in %s",  __p,  0x1Cu);
    }

    abort();
  }

  id v9 = v8;
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = objc_opt_new(&OBJC_CLASS___NSMutableString);
  sub_100269030(*(_DWORD *)(v10 + 28), __p);
  if (SBYTE3(v29) >= 0) {
    char v12 = __p;
  }
  else {
    char v12 = *(_BYTE **)__p;
  }
  __int16 v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v12));
  -[NSMutableString appendString:](v11, "appendString:", v13);

  if (SBYTE3(v29) < 0) {
    operator delete(*(void **)__p);
  }
  uint64_t v14 = *(void **)(v10 + 8);
  if (v14)
  {
    do
    {
      __int16 v15 = v14;
      uint64_t v14 = (void *)*v14;
    }

    while (v14);
  }

  else
  {
    do
    {
      __int16 v15 = *(void **)(v10 + 16);
      BOOL v16 = *v15 == v10;
      uint64_t v10 = (uint64_t)v15;
    }

    while (!v16);
  }

  if (v15 != (void *)(a1 + 8))
  {
    do
    {
      sub_100269030(*((_DWORD *)v15 + 7), __p);
      if (SBYTE3(v29) >= 0) {
        uint64_t v17 = __p;
      }
      else {
        uint64_t v17 = *(_BYTE **)__p;
      }
      int v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @" | %s", v17));
      -[NSMutableString appendString:](v11, "appendString:", v18);

      if (SBYTE3(v29) < 0) {
        operator delete(*(void **)__p);
      }
      int v19 = (void *)v15[1];
      if (v19)
      {
        do
        {
          uint64_t v20 = v19;
          int v19 = (void *)*v19;
        }

        while (v19);
      }

      else
      {
        do
        {
          uint64_t v20 = (void *)v15[2];
          BOOL v16 = *v20 == (void)v15;
          __int16 v15 = v20;
        }

        while (!v16);
      }

      __int16 v15 = v20;
    }

    while (v20 != (void *)(a1 + 8));
  }

  __int16 v21 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v11;

  *(void *)(a1 + 4_Block_object_dispose(va, 8) = *(void *)(a1 + 40);
  return a1;
}

void sub_100269F54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }

  sub_100034A98(v16, *(void **)(v16 + 8));
  _Unwind_Resume(a1);
}

void sub_100269FD8(uint64_t a1, double a2)
{
  double v4 = *(double *)(a1 + 48);
  *(double *)(a1 + 4_Block_object_dispose(va, 8) = v4 - a2;
  double v5 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 48);
    int v8 = 138412802;
    uint64_t v9 = v6;
    __int16 v10 = 2048;
    double v11 = v4;
    __int16 v12 = 2048;
    uint64_t v13 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#rlm,RangingBudgetTracker(%@): budget changed: %.0f -> %.0f secs",  (uint8_t *)&v8,  0x20u);
  }

double sub_10026A0B4(uint64_t a1)
{
  int v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v3 = *(void *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 32);
    int v7 = 138412802;
    uint64_t v8 = v5;
    __int16 v9 = 2048;
    uint64_t v10 = v3;
    __int16 v11 = 2048;
    uint64_t v12 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#rlm,RangingBudgetTracker(%@): periodicReset: budgetRemaining = %.0f -> %.0f secs",  (uint8_t *)&v7,  0x20u);
  }

  double result = *(double *)(a1 + 40);
  *(double *)(a1 + 4_Block_object_dispose(va, 8) = result;
  return result;
}

uint64_t sub_10026A180(uint64_t a1)
{
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 16) = a1 + 24;
  int v55 = (uint64_t **)(a1 + 16);
  *(void *)(a1 + 32) = 0LL;
  *(void *)a1 = 0LL;
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = a1 + 48;
  char v52 = (void *)(a1 + 48);
  uint64_t v53 = (uint64_t **)(a1 + 40);
  *(void *)(a1 + sub_100012390(v1 + 72) = 0LL;
  *(void *)(a1 + 64) = a1 + 72;
  __int16 v54 = (uint64_t **)(a1 + 64);
  *(void *)(a1 + 56) = 0LL;
  *(void *)(a1 + sub_10005DE34(v14 - 80) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 8_Block_object_dispose(va, 8) = a1 + 96;
  int v2 = (uint64_t **)(a1 + 88);
  *(void *)(a1 + 12_Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 12sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = a1 + 128;
  uint64_t v3 = (uint64_t **)(a1 + 120);
  *(void *)(a1 + 136) = 0LL;
  *(void *)(a1 + 144) = 0LL;
  dispatch_queue_attr_t v4 = dispatch_queue_attr_make_with_qos_class(0LL, QOS_CLASS_USER_INITIATED, 0);
  __int16 v51 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v4);
  dispatch_queue_t v5 = dispatch_queue_create("com.apple.nearbyd.rangingLimitManager", v51);
  id v6 = *(id *)a1;
  *(void *)a1 = v5;

  uint64_t v7 = qword_1007FC198;
  if ((_UNKNOWN *)qword_1007FC198 != &unk_1007FC1A0)
  {
    do
    {
      uint64_t v8 = operator new(0x48uLL);
      v8[1] = 0LL;
      void v8[2] = 0LL;
      *uint64_t v8 = off_1007B9160;
      int v9 = *(_DWORD *)(v7 + 32);
      id v10 = *(id *)a1;
      *((_DWORD *)v8 + 6) = v9;
      v8[4] = v10;
      *((_DWORD *)v8 + 1sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0;
      v8[7] = 0LL;
      v8[8] = 0LL;
      v8[6] = 0LL;
      *(void *)uint8_t buf = v8 + 3;
      *(void *)&uint8_t buf[8] = v8;
      __int16 v56 = (_DWORD *)(v7 + 32);
      __int16 v11 = sub_10026C128(v55, (int *)(v7 + 32), (uint64_t)&unk_1004242F8, &v56);
      sub_10000EE54((uint64_t)(v11 + 5), (__int128 *)buf);
      uint64_t v12 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        uint64_t v13 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }

      *(void *)uint8_t buf = v7 + 32;
      *((_BYTE *)sub_100160F94(v54, (int *)(v7 + 32), (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 32) = 0;
      *(void *)uint8_t buf = v7 + 32;
      *((_BYTE *)sub_100160F94(v2, (int *)(v7 + 32), (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 32) = 0;
      *(void *)uint8_t buf = v7 + 32;
      __int16 v15 = sub_10026C28C(v3, (int *)(v7 + 32), (uint64_t)&unk_1004242F8, (_DWORD **)buf);
      uint64_t v16 = v15;
      if (*((_BYTE *)v15 + 48))
      {

        *((_BYTE *)v16 + 4_Block_object_dispose(va, 8) = 0;
      }

      uint64_t v17 = *(void **)(v7 + 8);
      if (v17)
      {
        do
        {
          int v18 = v17;
          uint64_t v17 = (void *)*v17;
        }

        while (v17);
      }

      else
      {
        do
        {
          int v18 = *(void **)(v7 + 16);
          BOOL v19 = *v18 == v7;
          uint64_t v7 = (uint64_t)v18;
        }

        while (!v19);
      }

      uint64_t v7 = (uint64_t)v18;
    }

    while (v18 != (void *)&unk_1007FC1A0);
  }

  if (sub_1002B5554(@"DigitalKeyCombinedRangingBudgetEnabled", (id)1))
  {
    *(void *)&uint8_t buf[8] = 0LL;
    *(void *)&uint8_t buf[16] = 0LL;
    *(void *)uint8_t buf = &buf[8];
    LODWORD(v56) = 8;
    sub_10026C350((uint64_t **)buf, (int *)&v56, &v56);
    LODWORD(v56) = 5;
    sub_10026C350((uint64_t **)buf, (int *)&v56, &v56);
    double v61 = sub_1002B56A8(@"DigitalKeyRangingBudgetSeconds", 86400.0);
    sub_10026C408((uint64_t)buf, &v61, (void **)a1, &v56);
    LODWORD(v5_Block_object_dispose(va, 8) = 8;
    double v61 = COERCE_DOUBLE(&v58);
    uint64_t v20 = sub_10026C128(v53, (int *)&v58, (uint64_t)&unk_1004242F8, (_DWORD **)&v61);
    sub_100018E60(v20 + 5, (uint64_t *)&v56);
    LODWORD(v5_Block_object_dispose(va, 8) = 5;
    double v61 = COERCE_DOUBLE(&v58);
    __int16 v21 = sub_10026C128(v53, (int *)&v58, (uint64_t)&unk_1004242F8, (_DWORD **)&v61);
    sub_100018E60(v21 + 5, (uint64_t *)&v56);
    char v22 = v57;
    if (v57)
    {
      p_shared_owners = (unint64_t *)&v57->__shared_owners_;
      do
        unint64_t v24 = __ldaxr(p_shared_owners);
      while (__stlxr(v24 - 1, p_shared_owners));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }

    sub_100034A98((uint64_t)buf, *(void **)&buf[8]);
    goto LABEL_22;
  }

  LODWORD(v5_Block_object_dispose(va, 8) = 5;
  sub_10026C5E0((uint64_t)buf, (int *)&v58, 1LL);
  double v61 = sub_1002B56A8(@"AlishaRangingBudgetSeconds", 86400.0);
  sub_10026C65C(buf, &v61, (void **)a1, &v56);
  sub_100034A98((uint64_t)buf, *(void **)&buf[8]);
  LODWORD(v6sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = 5;
  *(void *)uint8_t buf = &v61;
  __int16 v26 = sub_10026C128(v53, (int *)&v61, (uint64_t)&unk_1004242F8, (_DWORD **)buf);
  sub_100018E60(v26 + 5, (uint64_t *)&v56);
  int v59 = 8;
  sub_10026C5E0((uint64_t)buf, &v59, 1LL);
  double v58 = sub_1002B56A8(@"LyonRangingBudgetSeconds", 86400.0);
  sub_10026C65C(buf, &v58, (void **)a1, &v61);
  sub_100034A98((uint64_t)buf, *(void **)&buf[8]);
  LODWORD(v5_Block_object_dispose(va, 8) = 8;
  *(void *)uint8_t buf = &v58;
  int v27 = sub_10026C128(v53, (int *)&v58, (uint64_t)&unk_1004242F8, (_DWORD **)buf);
  sub_100018E60(v27 + 5, (uint64_t *)&v61);
  __int16 v28 = v62;
  __int16 v25 = v52;
  if (v62)
  {
    char v29 = (unint64_t *)&v62->__shared_owners_;
    do
      unint64_t v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
      __int16 v25 = v52;
    }
  }

  __int16 v31 = v57;
  if (v57)
  {
    uint64_t v32 = (unint64_t *)&v57->__shared_owners_;
    do
      unint64_t v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
LABEL_22:
      __int16 v25 = v52;
    }
  }

  uint64_t v34 = qword_1007FC198;
  if ((_UNKNOWN *)qword_1007FC198 != &unk_1007FC1A0)
  {
    do
    {
      if (!*v25) {
        goto LABEL_50;
      }
      int v35 = *(_DWORD *)(v34 + 32);
      uint64_t v36 = v25;
      uint64_t v37 = *v25;
      do
      {
        int v38 = *(_DWORD *)(v37 + 32);
        BOOL v39 = v38 < v35;
        if (v38 >= v35) {
          double v40 = (uint64_t *)v37;
        }
        else {
          double v40 = (uint64_t *)(v37 + 8);
        }
        if (!v39) {
          uint64_t v36 = (void *)v37;
        }
        uint64_t v37 = *v40;
      }

      while (*v40);
      if (v36 == v25 || v35 < *((_DWORD *)v36 + 8))
      {
LABEL_50:
        uint64_t v49 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v49, OS_LOG_TYPE_FAULT))
        {
          sub_100269030(*(_DWORD *)(v34 + 32), &v56);
          sub_1003A3464();
        }

        uint64_t v50 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)uint8_t buf = 136315650;
          *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/Ranging"
                               "LimitManager/NIServerRangingLimitManager.mm";
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&uint8_t buf[14] = 506;
          *(_WORD *)&buf[18] = 2080;
          *(void *)&buf[20] = "RangingLimitManager";
          _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_INFO,  "#rlm,%s:%d: assertion failure in %s",  buf,  0x1Cu);
        }

        abort();
      }

      int v41 = *(void **)(v34 + 8);
      if (v41)
      {
        do
        {
          double v42 = v41;
          int v41 = (void *)*v41;
        }

        while (v41);
      }

      else
      {
        do
        {
          double v42 = *(void **)(v34 + 16);
          BOOL v19 = *v42 == v34;
          uint64_t v34 = (uint64_t)v42;
        }

        while (!v19);
      }

      uint64_t v34 = (uint64_t)v42;
    }

    while (v42 != (void *)&unk_1007FC1A0);
  }

  sub_10026A9DC(a1);
  id v43 = objc_opt_new(&OBJC_CLASS___RangingLimitSystemConfiguratorClient);
  double v44 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = v43;

  id v45 = (void *)objc_claimAutoreleasedReturnValue( +[NIServerSystemConfigurator sharedInstance]( &OBJC_CLASS___NIServerSystemConfigurator,  "sharedInstance"));
  [v45 addClient:*(void *)(a1 + 144) identifier:@"RangingLimitManager"];

  uint64_t v46 = objc_claimAutoreleasedReturnValue(+[NSDate now](&OBJC_CLASS___NSDate, "now"));
  int v47 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v46;

  return a1;
}

void sub_10026A8BC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_10026C0D8(v16, *(void **)(v14 + 128));
  sub_100034A98(v15, *(void **)(v14 + 96));
  sub_100034A98(a13, *(void **)(v14 + 72));
  sub_10026C090(a12, *(void **)(v14 + 48));
  sub_10026C090(a14, *(void **)(v14 + 24));

  _Unwind_Resume(a1);
}

id sub_10026A9DC(uint64_t a1)
{
  int v2 = -[NSBackgroundActivityScheduler initWithIdentifier:]( objc_alloc(&OBJC_CLASS___NSBackgroundActivityScheduler),  "initWithIdentifier:",  @"com.apple.nearbyd.rangingBudget.xpcActivity");
  uint64_t v3 = *(void **)(a1 + 8);
  *(void *)(a1 + _Block_object_dispose(va, 8) = v2;

  [*(id *)(a1 + 8) invalidate];
  [*(id *)(a1 + 8) setQualityOfService:17];
  objc_msgSend( *(id *)(a1 + 8),  "setInterval:",  sub_1002B56A8(@"DigitalKeyRangingDurationResetPeriodSeconds", 86400.0));
  objc_msgSend( *(id *)(a1 + 8),  "setTolerance:",  sub_1002B56A8(@"DigitalKeyRangingDurationResetPeriodToleranceSeconds", 300.0));
  [*(id *)(a1 + 8) setRepeats:1];
  return _[*(id *)(a1 + 8) scheduleWithBlock:&stru_1007B90B0];
}

uint64_t sub_10026AA80(uint64_t a1)
{
  int v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)dispatch_queue_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#rlm,~RangingLimitManager()", v5, 2u);
  }

  [*(id *)(a1 + 8) invalidate];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[NIServerSystemConfigurator sharedInstance]( &OBJC_CLASS___NIServerSystemConfigurator,  "sharedInstance"));
  [v3 removeClientWithIdentifier:@"RangingLimitManager"];

  sub_10026C0D8(a1 + 120, *(void **)(a1 + 128));
  sub_100034A98(a1 + 88, *(void **)(a1 + 96));
  sub_100034A98(a1 + 64, *(void **)(a1 + 72));
  sub_10026C090(a1 + 40, *(void **)(a1 + 48));
  sub_10026C090(a1 + 16, *(void **)(a1 + 24));

  return a1;
}

void sub_10026AB7C(id a1, id a2)
{
  id v2 = a2;
  sub_100269560();
  uint64_t v3 = (dispatch_queue_s *)qword_1007FC1B0;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10026AC10;
  block[3] = &unk_1007B2198;
  id v6 = v2;
  id v4 = v2;
  dispatch_async(v3, block);
}

void sub_10026AC00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10026AC10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10026AC48(uint64_t a1)
{
  id v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#rlm,Periodic Reset Handler: reset ranging budgets",  buf,  2u);
  }

  uint64_t v3 = qword_1007FC198;
  if ((_UNKNOWN *)qword_1007FC198 != &unk_1007FC1A0)
  {
    do
    {
      *(void *)uint8_t buf = v3 + 32;
      id v4 = sub_10026C128((uint64_t **)(a1 + 16), (int *)(v3 + 32), (uint64_t)&unk_1004242F8, (_DWORD **)buf);
      sub_100269B7C((uint64_t)v4[5]);
      *(void *)uint8_t buf = v3 + 32;
      dispatch_queue_t v5 = sub_10026C128((uint64_t **)(a1 + 40), (int *)(v3 + 32), (uint64_t)&unk_1004242F8, (_DWORD **)buf);
      sub_10026A0B4((uint64_t)v5[5]);
      *(void *)uint8_t buf = v3 + 32;
      *((_BYTE *)sub_100160F94((uint64_t **)(a1 + 64), (int *)(v3 + 32), (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 32) = 0;
      *(void *)uint8_t buf = v3 + 32;
      id v6 = sub_10026C28C((uint64_t **)(a1 + 120), (int *)(v3 + 32), (uint64_t)&unk_1004242F8, (_DWORD **)buf);
      if (*((_BYTE *)v6 + 48))
      {
        uint64_t v7 = v6;

        *((_BYTE *)v7 + 4_Block_object_dispose(va, 8) = 0;
      }

      uint64_t v8 = *(void **)(v3 + 8);
      if (v8)
      {
        do
        {
          int v9 = v8;
          uint64_t v8 = (void *)*v8;
        }

        while (v8);
      }

      else
      {
        do
        {
          int v9 = *(void **)(v3 + 16);
          BOOL v10 = *v9 == v3;
          uint64_t v3 = (uint64_t)v9;
        }

        while (!v10);
      }

      uint64_t v3 = (uint64_t)v9;
    }

    while (v9 != (void *)&unk_1007FC1A0);
  }

  sub_10026B568((dispatch_queue_t *)a1);
  uint64_t v11 = objc_claimAutoreleasedReturnValue(+[NSDate now](&OBJC_CLASS___NSDate, "now"));
  uint64_t v12 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v11;
}

void sub_10026AE10(int a1@<W1>, void *a2@<X2>, void *a3@<X3>, _OWORD *a4@<X8>)
{
  int v9 = a1;
  id v8 = a2;
  uint64_t v7 = a3;
  dispatch_assert_queue_V2(v7);
  sub_10026C7C0(&v9, &v8, (void **)&v7, &v6);
  *a4 = v6;
}

void sub_10026AE84( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
}

uint64_t sub_10026AEA8(dispatch_queue_s **a1, int a2)
{
  uint64_t v7 = 0LL;
  id v8 = &v7;
  uint64_t v9 = 0x2020000000LL;
  id v2 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10026AF38;
  block[3] = &unk_1007B5900;
  int v6 = a2;
  void block[4] = &v7;
  void block[5] = a1;
  dispatch_sync(v2, block);
  uint64_t v3 = *((unsigned __int8 *)v8 + 24);
  _Block_object_dispose(&v7, 8);
  return v3;
}

uint64_t sub_10026AF38(uint64_t a1)
{
  id v2 = (int *)(a1 + 48);
  uint64_t result = sub_10026B090(*(void *)(a1 + 40) + 64LL, (int *)(a1 + 48));
  if ((unsigned __int16)result <= 0xFFu)
  {
    id v4 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT))
    {
      sub_100269030(*v2, v6);
      sub_1003A34AC();
    }

    dispatch_queue_t v5 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      id v8 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/RangingLimitManager/NIServe"
           "rRangingLimitManager.mm";
      __int16 v9 = 1024;
      int v10 = 580;
      __int16 v11 = 2080;
      uint64_t v12 = "limitExceeded_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "#rlm,%s:%d: assertion failure in %s", buf, 0x1Cu);
    }

    abort();
  }

  *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result;
  return result;
}

void sub_10026B078(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10026B090(uint64_t a1, int *a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v2 = a1 + 8;
  uint64_t v3 = v4;
  if (!v4) {
    goto LABEL_11;
  }
  int v5 = *a2;
  uint64_t v6 = v2;
  do
  {
    int v7 = *(_DWORD *)(v3 + 28);
    BOOL v8 = v7 < v5;
    if (v7 >= v5) {
      __int16 v9 = (uint64_t *)v3;
    }
    else {
      __int16 v9 = (uint64_t *)(v3 + 8);
    }
    if (!v8) {
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v9;
  }

  while (*v9);
  if (v6 != v2 && v5 >= *(_DWORD *)(v6 + 28))
  {
    int v10 = *(unsigned __int8 *)(v6 + 32);
    int v11 = 1;
  }

  else
  {
LABEL_11:
    int v10 = 0;
    int v11 = 0;
  }

  return v10 | (v11 << 8);
}

void sub_10026B0EC(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#rlm,Periodic Reset Handler: sending analytics",  buf,  2u);
  }

  LODWORD(__p[0]) = 8;
  *(void *)uint8_t buf = __p;
  uint64_t v3 = sub_10026C128((uint64_t **)(a1 + 40), (int *)__p, (uint64_t)&unk_1004242F8, (_DWORD **)buf)[5];
  dispatch_assert_queue_V2((dispatch_queue_t)v3[3]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  (*((double *)v3 + 5) - *((double *)v3 + 6)) / 60.0));
  LODWORD(__p[0]) = 8;
  *(void *)uint8_t buf = __p;
  int v5 = sub_10026C28C((uint64_t **)(a1 + 120), (int *)__p, (uint64_t)&unk_1004242F8, (_DWORD **)buf);
  int v6 = *((unsigned __int8 *)v5 + 48);
  if (*((_BYTE *)v5 + 48))
  {
    int v7 = v5[5];
    BOOL v8 = *(void **)(a1 + 112);
    __int16 v9 = v7;
    id v10 = v8;
    [v9 timeIntervalSinceDate:v10];
    uint64_t v12 = (_UNKNOWN **)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v11 / 3600.0));

    uint64_t v13 = v9;
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSCalendar currentCalendar](&OBJC_CLASS___NSCalendar, "currentCalendar"));
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 components:32 fromDate:v13]);
    uint64_t v16 = (_UNKNOWN **)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v15 hour]));
  }

  else
  {
    uint64_t v13 = 0LL;
    uint64_t v16 = &off_1007D25C8;
    uint64_t v12 = &off_1007D25E0;
  }

  uint64_t v17 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    sub_1000065CC(__p, "HomeKey");
    int v18 = v27 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)uint8_t buf = 136315906;
    *(void *)&uint8_t buf[4] = v18;
    __int16 v29 = 2112;
    unint64_t v30 = v4;
    __int16 v31 = 2112;
    uint64_t v32 = v16;
    __int16 v33 = 2112;
    uint64_t v34 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "#rlm,budget reset [%s]: spent = %@ mins, exhausted_hour = %@, hours_to_exhaust = %@",  buf,  0x2Au);
    if (v27 < 0) {
      operator delete(__p[0]);
    }
  }

  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472LL;
  v22[2] = sub_10026B4D8;
  void v22[3] = &unk_1007B90D8;
  id v19 = v4;
  id v23 = v19;
  uint64_t v20 = v16;
  id v24 = v20;
  __int16 v21 = v12;
  id v25 = v21;
  AnalyticsSendEventLazy(@"com.apple.lyon.BudgetReset", v22);

  if (v6) {
}
  }

void sub_10026B434(_Unwind_Exception *a1)
{
  if (v6) {
  _Unwind_Resume(a1);
  }
}

id sub_10026B4D8(uint64_t a1)
{
  __int128 v1 = *(_OWORD *)(a1 + 32);
  v3[0] = @"budgetSpentMins";
  v3[1] = @"exhaustedLocalHour";
  __int128 v4 = v1;
  _DWORD v3[2] = @"hoursTookToExhaustBudget";
  uint64_t v5 = *(void *)(a1 + 48);
  return (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v4,  v3,  3LL));
}

void sub_10026B568(dispatch_queue_t *a1)
{
  uint64_t v2 = qword_1007FC198;
  if ((_UNKNOWN *)qword_1007FC198 != &unk_1007FC1A0)
  {
    uint64_t v3 = (uint64_t **)(a1 + 5);
    __int128 v4 = (uint64_t **)(a1 + 8);
    uint64_t v5 = (uint64_t **)(a1 + 11);
    id v23 = (uint64_t **)(a1 + 15);
    do
    {
      __p[0] = (void *)(v2 + 32);
      int v6 = sub_10026C128(v3, (int *)(v2 + 32), (uint64_t)&unk_1004242F8, (_DWORD **)__p)[5];
      dispatch_assert_queue_V2((dispatch_queue_t)v6[3]);
      LOBYTE(v6) = *((double *)v6 + 6) <= 0.0;
      __p[0] = (void *)(v2 + 32);
      *((_BYTE *)sub_100160F94(v4, (int *)(v2 + 32), (uint64_t)&unk_1004242F8, (_DWORD **)__p) + 32) = (_BYTE)v6;
      __p[0] = (void *)(v2 + 32);
      int v7 = *((unsigned __int8 *)sub_100160F94(v4, (int *)(v2 + 32), (uint64_t)&unk_1004242F8, (_DWORD **)__p) + 32);
      __p[0] = (void *)(v2 + 32);
      if (v7 != *((unsigned __int8 *)sub_100160F94(v5, (int *)(v2 + 32), (uint64_t)&unk_1004242F8, (_DWORD **)__p) + 32))
      {
        BOOL v8 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          sub_100269030(*(_DWORD *)(v2 + 32), __p);
          int v9 = v25;
          id v10 = (void **)__p[0];
          __int16 v26 = (_DWORD *)(v2 + 32);
          double v11 = sub_100160F94(v4, (int *)(v2 + 32), (uint64_t)&unk_1004242F8, &v26);
          uint64_t v12 = __p;
          if (v9 < 0) {
            uint64_t v12 = v10;
          }
          BOOL v13 = *((_BYTE *)v11 + 32) == 0;
          *(_DWORD *)uint8_t buf = 136315394;
          uint64_t v14 = @"Limit Exceeded";
          if (v13) {
            uint64_t v14 = @"Limit Available";
          }
          __int16 v28 = v12;
          __int16 v29 = 2112;
          unint64_t v30 = v14;
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#rlm,Ranging limit reached status changed for '%s': %@",  buf,  0x16u);
          if (v25 < 0) {
            operator delete(__p[0]);
          }
        }

        __p[0] = (void *)(v2 + 32);
        int v15 = *((unsigned __int8 *)sub_100160F94(v4, (int *)(v2 + 32), (uint64_t)&unk_1004242F8, (_DWORD **)__p) + 32);
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[NIServerSystemConfigurator sharedInstance]( &OBJC_CLASS___NIServerSystemConfigurator,  "sharedInstance"));
        [v16 clientWithIdentifier:@"RangingLimitManager" notifiedResourceUsageLimitExceeded:v15 != 0 forSessionConfigurationType:NSClassFromString(*(NSString **)(v2 + 40))];

        __p[0] = (void *)(v2 + 32);
        char v17 = *((_BYTE *)sub_100160F94(v4, (int *)(v2 + 32), (uint64_t)&unk_1004242F8, (_DWORD **)__p) + 32);
        __p[0] = (void *)(v2 + 32);
        *((_BYTE *)sub_100160F94(v5, (int *)(v2 + 32), (uint64_t)&unk_1004242F8, (_DWORD **)__p) + 32) = v17;
        if (v15)
        {
          uint64_t v18 = objc_claimAutoreleasedReturnValue(+[NSDate now](&OBJC_CLASS___NSDate, "now"));
          __p[0] = (void *)(v2 + 32);
          id v19 = sub_10026C28C(v23, (int *)(v2 + 32), (uint64_t)&unk_1004242F8, (_DWORD **)__p);
          if (*((_BYTE *)v19 + 48))
          {
            uint64_t v20 = v19[5];
            v19[5] = (uint64_t *)v18;
          }

          else
          {
            v19[5] = (uint64_t *)v18;
            *((_BYTE *)v19 + 4_Block_object_dispose(va, 8) = 1;
          }
        }
      }

      __int16 v21 = *(void **)(v2 + 8);
      if (v21)
      {
        do
        {
          char v22 = v21;
          __int16 v21 = (void *)*v21;
        }

        while (v21);
      }

      else
      {
        do
        {
          char v22 = *(void **)(v2 + 16);
          BOOL v13 = *v22 == v2;
          uint64_t v2 = (uint64_t)v22;
        }

        while (!v13);
      }

      uint64_t v2 = (uint64_t)v22;
    }

    while (v22 != (void *)&unk_1007FC1A0);
  }

void sub_10026B8C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10026B8F8(uint64_t a1)
{
  __int128 v1 = (int *)(a1 + 40);
  sub_10026BAA4(*(void *)(a1 + 32) + 16LL, (int *)(a1 + 40), (uint64_t)&v8);
  if (!v10)
  {
    uint64_t v5 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT))
    {
      sub_100269030(*v1, v7);
      sub_1003A34AC();
    }

    int v6 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      uint64_t v12 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/RangingLimitManager/NIServ"
            "erRangingLimitManager.mm";
      __int16 v13 = 1024;
      int v14 = 675;
      __int16 v15 = 2080;
      uint64_t v16 = "indicateRangingStarted_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "#rlm,%s:%d: assertion failure in %s", buf, 0x1Cu);
    }

    abort();
  }

  sub_100269874(v8);
  if (v10)
  {
    uint64_t v2 = v9;
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        unint64_t v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }

void sub_10026BA74( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, char a14)
{
  if (a14) {
    sub_100012390((uint64_t)&a12);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10026BAA4@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t result = a1 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_11;
  }
  int v6 = *a2;
  uint64_t v7 = result;
  do
  {
    int v8 = *(_DWORD *)(v4 + 32);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      char v10 = (uint64_t *)v4;
    }
    else {
      char v10 = (uint64_t *)(v4 + 8);
    }
    if (!v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }

  while (*v10);
  if (v7 != result && v6 >= *(_DWORD *)(v7 + 32))
  {
    uint64_t v13 = *(void *)(v7 + 40);
    uint64_t v12 = *(void *)(v7 + 48);
    *(void *)a3 = v13;
    *(void *)(a3 + _Block_object_dispose(va, 8) = v12;
    if (v12)
    {
      int v14 = (unint64_t *)(v12 + 8);
      do
        unint64_t v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
    }

    char v11 = 1;
  }

  else
  {
LABEL_11:
    char v11 = 0;
    *(_BYTE *)a3 = 0;
  }

  *(_BYTE *)(a3 + 16) = v11;
  return result;
}

void sub_10026BB1C(uint64_t a1)
{
  __int128 v1 = *(dispatch_queue_t **)(a1 + 32);
  uint64_t v2 = (int *)(a1 + 40);
  sub_10026BAA4((uint64_t)(v1 + 2), (int *)(a1 + 40), (uint64_t)&v17);
  if (!v19)
  {
    char v10 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT))
    {
      sub_100269030(*v2, &v14);
      sub_1003A34AC();
    }

    char v11 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      char v22 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/RangingLimitManager/NIServ"
            "erRangingLimitManager.mm";
      __int16 v23 = 1024;
      int v24 = 686;
      __int16 v25 = 2080;
      __int16 v26 = "indicateRangingStopped_block_invoke";
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "#rlm,%s:%d: assertion failure in %s",  buf,  0x1Cu);
    }

    abort();
  }

  sub_10026BAA4((uint64_t)(v1 + 5), v2, (uint64_t)&v14);
  if (!v16)
  {
    uint64_t v12 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v12, OS_LOG_TYPE_FAULT))
    {
      sub_100269030(*v2, v20);
      sub_1003A34AC();
    }

    uint64_t v13 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      char v22 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/RangingLimitManager/NIServ"
            "erRangingLimitManager.mm";
      __int16 v23 = 1024;
      int v24 = 690;
      __int16 v25 = 2080;
      __int16 v26 = "indicateRangingStopped_block_invoke";
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "#rlm,%s:%d: assertion failure in %s",  buf,  0x1Cu);
    }

    abort();
  }

  if (!v19 || (double v3 = sub_100269970(v17), !v16)) {
    sub_100006080();
  }
  sub_100269FD8(v14, v3);
  sub_10026B568(v1);
  if (v16)
  {
    uint64_t v4 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        unint64_t v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }

  if (v19)
  {
    uint64_t v7 = v18;
    if (v18)
    {
      int v8 = (unint64_t *)&v18->__shared_owners_;
      do
        unint64_t v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }

void sub_10026BDD4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, char a17)
{
  if (a17) {
    sub_100012390((uint64_t)&a13);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10026BE30(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  return a1;
}

void sub_10026BE74(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
  operator delete((void *)a1);
}

uint64_t sub_10026BEB8(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 16 * a3;
    do
    {
      sub_100201C84((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 4;
      v6 -= 16LL;
    }

    while (v6);
  }

  return a1;
}

void sub_10026BF1C(_Unwind_Exception *a1)
{
}

uint64_t *sub_10026BF34(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_10026BF88(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_10026BF70(_Unwind_Exception *a1)
{
}

uint64_t *sub_10026BF88(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = sub_10026C00C(v5, v6, v4 + 7, v4 + 7);
      uint64_t v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          int v8 = v7;
          uint64_t v7 = *(int **)v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          int v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          uint64_t v4 = v8;
        }

        while (!v9);
      }

      uint64_t v4 = v8;
    }

    while (v8 != a3);
  }

  return result;
}

uint64_t *sub_10026C00C(uint64_t **a1, uint64_t *a2, int *a3, _DWORD *a4)
{
  uint64_t v6 = sub_10015EBBC(a1, a2, &v11, &v10, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    int v8 = (uint64_t **)v6;
    uint64_t v7 = (uint64_t *)operator new(0x20uLL);
    *((_DWORD *)v7 + 7) = *a4;
    sub_10001E548(a1, (uint64_t)v11, v8, v7);
  }

  return v7;
}

void sub_10026C090(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10026C090(a1, *a2);
    sub_10026C090(a1, a2[1]);
    sub_100012390((uint64_t)(a2 + 5));
    operator delete(a2);
  }

void sub_10026C0D8(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10026C0D8(a1, *a2);
    sub_10026C0D8(a1, a2[1]);
    if (*((_BYTE *)a2 + 48)) {

    }
    operator delete(a2);
  }

uint64_t **sub_10026C128(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t v7 = a1 + 1;
  uint64_t v6 = a1[1];
  int v8 = a1 + 1;
  BOOL v9 = a1 + 1;
  if (v6)
  {
    int v10 = *a2;
    while (1)
    {
      while (1)
      {
        BOOL v9 = (uint64_t **)v6;
        int v11 = *((_DWORD *)v6 + 8);
        if (v10 >= v11) {
          break;
        }
        uint64_t v6 = *v9;
        int v8 = v9;
        if (!*v9) {
          goto LABEL_9;
        }
      }

      if (v11 >= v10) {
        break;
      }
      uint64_t v6 = v9[1];
      if (!v6)
      {
        int v8 = v9 + 1;
        goto LABEL_9;
      }
    }
  }

  else
  {
LABEL_9:
    uint64_t v12 = operator new(0x38uLL);
    v14[1] = v7;
    void v12[8] = **a4;
    *((void *)v12 + 5) = 0LL;
    *((void *)v12 + 6) = 0LL;
    char v15 = 1;
    sub_10001E548(a1, (uint64_t)v9, v8, (uint64_t *)v12);
    v14[0] = 0LL;
    sub_10026C20C((uint64_t)v14, 0LL);
    return (uint64_t **)v12;
  }

  return v9;
}

void sub_10026C20C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_100012390((uint64_t)v2 + 40);
    }
    operator delete(v2);
  }

void sub_10026C250(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1007B9160;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10026C260(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1007B9160;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_10026C280(uint64_t a1)
{
}

uint64_t **sub_10026C28C(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t v7 = a1 + 1;
  uint64_t v6 = a1[1];
  if (v6)
  {
    int v8 = *a2;
    while (1)
    {
      while (1)
      {
        BOOL v9 = (uint64_t **)v6;
        int v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10) {
          break;
        }
        uint64_t v6 = *v9;
        uint64_t v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }

      if (v10 >= v8) {
        break;
      }
      uint64_t v6 = v9[1];
      if (!v6)
      {
        uint64_t v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    BOOL v9 = a1 + 1;
LABEL_10:
    int v11 = operator new(0x38uLL);
    uint8_t v11[8] = **a4;
    *((_BYTE *)v11 + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0;
    *((_BYTE *)v11 + 4_Block_object_dispose(va, 8) = 0;
    sub_10001E548(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }

  return v9;
}

uint64_t **sub_10026C350(uint64_t **a1, int *a2, _DWORD *a3)
{
  uint64_t v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        int v8 = (uint64_t **)v5;
        int v9 = *((_DWORD *)v5 + 7);
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    int v8 = a1 + 1;
LABEL_10:
    int v10 = (uint64_t *)operator new(0x20uLL);
    *((_DWORD *)v10 + 7) = *a3;
    sub_10001E548(a1, (uint64_t)v8, v6, v10);
    return (uint64_t **)v10;
  }

  return v8;
}

void *sub_10026C408@<X0>(uint64_t a1@<X1>, double *a2@<X2>, void **a3@<X3>, void *a4@<X8>)
{
  int v8 = operator new(0x50uLL);
  uint64_t result = sub_10026C478(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;
  return result;
}

void sub_10026C464(_Unwind_Exception *a1)
{
}

void *sub_10026C478(void *a1, uint64_t a2, double *a3, void **a4)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_1007B91B0;
  sub_10026C534((uint64_t)&v6, (uint64_t)(a1 + 3), a2, a3, a4);
  return a1;
}

void sub_10026C4C8(_Unwind_Exception *a1)
{
}

void sub_10026C4DC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1007B91B0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10026C4EC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1007B91B0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_10026C50C(uint64_t a1)
{
}

void sub_10026C534(uint64_t a1, uint64_t a2, uint64_t a3, double *a4, void **a5)
{
}

void sub_10026C594( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

void sub_10026C5AC(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10026C5E0(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 4 * a3;
    do
    {
      sub_10026C00C((uint64_t **)a1, v4, a2, a2);
      ++a2;
      v6 -= 4LL;
    }

    while (v6);
  }

  return a1;
}

void sub_10026C644(_Unwind_Exception *a1)
{
}

void *sub_10026C65C@<X0>(void *a1@<X1>, double *a2@<X2>, void **a3@<X3>, void *a4@<X8>)
{
  int v8 = operator new(0x50uLL);
  uint64_t result = sub_10026C6CC(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;
  return result;
}

void sub_10026C6B8(_Unwind_Exception *a1)
{
}

void *sub_10026C6CC(void *a1, void *a2, double *a3, void **a4)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_1007B91B0;
  sub_10026C730((uint64_t)&v6, (uint64_t)(a1 + 3), a2, a3, a4);
  return a1;
}

void sub_10026C71C(_Unwind_Exception *a1)
{
}

void sub_10026C730(uint64_t a1, uint64_t a2, void *a3, double *a4, void **a5)
{
  uint64_t v5 = a3 + 1;
  char v6 = (void *)a3[1];
  int v7 = (void **)*a3;
  int v8 = v6;
  if (a3[2])
  {
    _DWORD v6[2] = &v8;
    *a3 = v5;
    *uint64_t v5 = 0LL;
    a3[2] = 0LL;
  }

  else
  {
    int v7 = &v8;
  }

  sub_100269CAC(a2, (uint64_t)&v7, *a5, *a4);
  sub_100034A98((uint64_t)&v7, v8);
}

void sub_10026C7A8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

void sub_10026C7C0(int *a1@<X1>, void **a2@<X2>, void **a3@<X3>, void *a4@<X8>)
{
  int v8 = operator new(0x58uLL);
  sub_10026C838(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;
  sub_100012538((uint64_t)a4, v8 + 4, (uint64_t)(v8 + 3));
}

void sub_10026C824(_Unwind_Exception *a1)
{
}

void *sub_10026C838(void *a1, int *a2, void **a3, void **a4)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_1007B9200;
  sub_1002691B4((uint64_t)(a1 + 3), *a2, *a3, *a4);
  return a1;
}

void sub_10026C878(_Unwind_Exception *a1)
{
}

void sub_10026C88C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1007B9200;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10026C89C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1007B9200;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_10026C8BC(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

  ;
}

void sub_10026C8F0(float a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(float *)a4 = a1;
  *(void *)(a4 + 4) = v4;
  *(_WORD *)(a4 + 12) = 2112;
  *(void *)(a4 + 14) = v5;
}

void sub_10026C908(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
}

void sub_10026C918()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  v2[0] = 8;
  double v3 = @"NIAcwgConfiguration";
  int v4 = 5;
  uint64_t v5 = @"NICarKeyConfiguration";
  sub_10026BEB8((uint64_t)&qword_1007FC198, v2, 2LL);
  for (uint64_t i = 6LL; i != -2; i -= 4LL)

  __cxa_atexit((void (*)(void *))sub_100269080, &qword_1007FC198, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_10026C9F4(_Unwind_Exception *a1)
{
  for (uint64_t i = 24LL; i != -8; i -= 16LL)

  _Unwind_Resume(a1);
}

uint64_t sub_10026CA20(uint64_t a1)
{
  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 4) = 0;
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  *(_DWORD *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0u;
  *(void *)(a1 + 56) = 0LL;
  *(_OWORD *)(a1 + 64) = xmmword_10042AC60;
  *(_DWORD *)(a1 + sub_10005DE34(v14 - 80) = 0;
  *(_BYTE *)(a1 + 84) = 0;
  *(_BYTE *)(a1 + 8_Block_object_dispose(va, 8) = 0;
  LODWORD(v3[0]) = -1;
  *((void *)&v3[0] + sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = 0LL;
  sub_1001E0FB4(a1 + 96, (int *)v3, 1LL);
  _DWORD v3[2] = xmmword_10042ACC8;
  void v3[3] = unk_10042ACD8;
  v3[4] = xmmword_10042ACE8;
  _OWORD v3[5] = unk_10042ACF8;
  v3[0] = xmmword_10042ACA8;
  v3[1] = unk_10042ACB8;
  sub_10026DAF4(a1 + 120, (int *)v3, 6LL);
  *(void *)(a1 + 16sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0LL;
  *(void *)(a1 + 152) = 0LL;
  *(void *)(a1 + 144) = a1 + 152;
  return a1;
}

void sub_10026CB10(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_10000DE88(a1);
}

void sub_10026CB20(uint64_t a1, int a2, void *a3, uint64_t a4, double a5)
{
  id v9 = a3;
  *(double *)(a1 + 24) = a5;
  *(_DWORD *)a1 = a4;
  *(_BYTE *)(a1 + 4) = BYTE4(a4);
  id v10 = v9;
  sub_10026CBAC(a1, v9);
  sub_10026CD70((uint64_t **)a1, a2, a5);
}

void sub_10026CB98( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10026CBAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = v3;
  if (v3 && [v3 count])
  {
    char v15 = v4;
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 sortedArrayUsingComparator:&stru_1007B9340]);
    id v6 = [v5 count];
    else {
      uint64_t v7 = (uint64_t)v6;
    }
    int v8 = operator new(0x18uLL);
    void v8[2] = 0x500000004LL;
    *(_OWORD *)int v8 = xmmword_10042AD08;
    if (v7)
    {
      uint64_t v9 = 0LL;
      id v10 = (uint64_t **)(a1 + 144);
      do
      {
        int v11 = (void *)objc_claimAutoreleasedReturnValue([v5 objectAtIndexedSubscript:v9]);
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 name]);

        int v13 = *((_DWORD *)v8 + v9);
        id v14 = v12;
        sub_1000065CC(__p, (char *)[v14 UTF8String]);
        uint64_t v18 = __p;
        *((_DWORD *)sub_10026DB70(v10, (const void **)__p, (uint64_t)&unk_1004242F8, (_OWORD **)&v18) + 14) = v13;
        if (v17 < 0) {
          operator delete(__p[0]);
        }

        ++v9;
      }

      while (v7 != v9);
    }

    operator delete(v8);

    int v4 = v15;
  }
}

void sub_10026CD0C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

uint64_t **sub_10026CD70(uint64_t **result, int a2, double a3)
{
  if (a2 >= 1)
  {
    uint64_t v5 = result;
    if (*((_BYTE *)result + 88))
    {
      id v6 = result[13];
      if (!v6) {
        goto LABEL_13;
      }
      int v7 = *((_DWORD *)result + 21);
      int v8 = result + 13;
      do
      {
        int v9 = *((_DWORD *)v6 + 8);
        BOOL v10 = v9 < v7;
        if (v9 >= v7) {
          int v11 = (uint64_t **)v6;
        }
        else {
          int v11 = (uint64_t **)(v6 + 1);
        }
        if (!v10) {
          int v8 = (uint64_t **)v6;
        }
        id v6 = *v11;
      }

      while (*v11);
      if (v8 == result + 13 || v7 < *((_DWORD *)v8 + 8))
      {
LABEL_13:
        int v13 = (_DWORD *)result + 21;
        sub_100160ED4(result + 12, (int *)result + 21, (uint64_t)&unk_1004242F8, &v13)[5] = 0LL;
        if (!*((_BYTE *)v5 + 88)) {
          sub_100006080();
        }
      }

      double v12 = a3 - *((double *)v5 + 7);
      int v13 = (_DWORD *)v5 + 21;
      uint64_t result = sub_100160ED4(v5 + 12, (int *)v5 + 21, (uint64_t)&unk_1004242F8, &v13);
      *((double *)result + 5) = v12 + *((double *)result + 5);
    }

    *((double *)v5 + 7) = a3;
    *((_DWORD *)v5 + 2sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = a2;
    *((_BYTE *)v5 + 8_Block_object_dispose(va, 8) = 1;
  }

  return result;
}

void sub_10026CE7C(double *a1, double a2)
{
  double v2 = a2 - a1[3];
  a1[4] = a2;
  a1[5] = v2;
  if (v2 > 0.0)
  {
    sub_10026CEC0((uint64_t)a1);
    sub_10026D0DC((uint64_t)a1);
  }

uint64_t sub_10026CEC0(uint64_t result)
{
  uint64_t v1 = result;
  if (*(_BYTE *)(result + 88))
  {
    uint64_t v2 = *(void *)(result + 104);
    if (!v2) {
      goto LABEL_12;
    }
    int v3 = *(_DWORD *)(result + 84);
    uint64_t v4 = result + 104;
    do
    {
      int v5 = *(_DWORD *)(v2 + 32);
      BOOL v6 = v5 < v3;
      if (v5 >= v3) {
        int v7 = (uint64_t *)v2;
      }
      else {
        int v7 = (uint64_t *)(v2 + 8);
      }
      if (!v6) {
        uint64_t v4 = v2;
      }
      uint64_t v2 = *v7;
    }

    while (*v7);
    if (v4 == result + 104 || v3 < *(_DWORD *)(v4 + 32))
    {
LABEL_12:
      char v17 = (_DWORD *)(result + 84);
      sub_100160ED4((uint64_t **)(result + 96), (int *)(result + 84), (uint64_t)&unk_1004242F8, &v17)[5] = 0LL;
      if (!*(_BYTE *)(v1 + 88)) {
        sub_100006080();
      }
    }

    double v8 = *(double *)(v1 + 32) - *(double *)(v1 + 56);
    char v17 = (_DWORD *)(v1 + 84);
    uint64_t result = (uint64_t)sub_100160ED4((uint64_t **)(v1 + 96), (int *)(v1 + 84), (uint64_t)&unk_1004242F8, &v17);
    *(double *)(result + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = v8 + *(double *)(result + 40);
  }

  if (*(_DWORD *)(v1 + 76) != 6)
  {
    double v9 = *(double *)(v1 + 32) - *(double *)(v1 + 48);
    char v17 = (_DWORD *)(v1 + 76);
    uint64_t result = (uint64_t)sub_100160ED4((uint64_t **)(v1 + 120), (int *)(v1 + 76), (uint64_t)&unk_1004242F8, &v17);
    *(double *)(result + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = v9 + *(double *)(result + 40);
  }

  BOOL v10 = *(void **)(v1 + 96);
  if (v10 != (void *)(v1 + 104))
  {
    double v11 = *(double *)(v1 + 8);
    do
    {
      int v12 = *((_DWORD *)v10 + 8);
      if (v12 < 1) {
        double v13 = 0.0;
      }
      else {
        double v13 = 1000.0 / (double)v12 * 0.01 * 32.9;
      }
      double v11 = v11 + v13 * *((double *)v10 + 5) / 3600.0;
      *(double *)(v1 + _Block_object_dispose(va, 8) = v11;
      uint64_t result = sub_10026DA34(v1, v12);
      switch((_DWORD)result)
      {
        case 2:
          *(_DWORD *)(v1 + sub_100012390(v1 + 72) = v12;
          break;
        case 1:
          *(_DWORD *)(v1 + 6_Block_object_dispose(va, 8) = v12;
          break;
        case 0:
          *(_DWORD *)(v1 + 64) = v12;
          break;
      }

      id v14 = (void *)v10[1];
      if (v14)
      {
        do
        {
          char v15 = v14;
          id v14 = (void *)*v14;
        }

        while (v14);
      }

      else
      {
        do
        {
          char v15 = (void *)v10[2];
          BOOL v16 = *v15 == (void)v10;
          BOOL v10 = v15;
        }

        while (!v16);
      }

      BOOL v10 = v15;
    }

    while (v15 != (void *)(v1 + 104));
  }

  return result;
}

void sub_10026D0DC(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 16);
    uint64_t v48 = (int *)(a1 + 64);
    uint64_t v4 = sub_100160ED4((uint64_t **)(a1 + 96), (int *)(a1 + 64), (uint64_t)&unk_1004242F8, &v48)[5];
    uint64_t v48 = (int *)(a1 + 68);
    int v5 = sub_100160ED4((uint64_t **)(a1 + 96), (int *)(a1 + 68), (uint64_t)&unk_1004242F8, &v48)[5];
    uint64_t v48 = (int *)(a1 + 72);
    uint64_t v37 = sub_100160ED4((uint64_t **)(a1 + 96), (int *)(a1 + 72), (uint64_t)&unk_1004242F8, &v48)[5];
    int v47 = 0;
    uint64_t v48 = &v47;
    uint64_t v36 = sub_100160ED4((uint64_t **)(a1 + 120), &v47, (uint64_t)&unk_1004242F8, &v48)[5];
    int v46 = 1;
    uint64_t v48 = &v46;
    int v35 = sub_100160ED4((uint64_t **)(a1 + 120), &v46, (uint64_t)&unk_1004242F8, &v48)[5];
    int v45 = 2;
    uint64_t v48 = &v45;
    __int16 v33 = sub_100160ED4((uint64_t **)(a1 + 120), &v45, (uint64_t)&unk_1004242F8, &v48)[5];
    uint64_t v34 = v5;
    int v44 = 3;
    uint64_t v48 = &v44;
    BOOL v6 = sub_100160ED4((uint64_t **)(a1 + 120), &v44, (uint64_t)&unk_1004242F8, &v48)[5];
    int v43 = 4;
    uint64_t v48 = &v43;
    int v7 = sub_100160ED4((uint64_t **)(a1 + 120), &v43, (uint64_t)&unk_1004242F8, &v48)[5];
    int v42 = 5;
    uint64_t v48 = &v42;
    double v8 = sub_100160ED4((uint64_t **)(a1 + 120), &v42, (uint64_t)&unk_1004242F8, &v48)[5];
    int v9 = *(_DWORD *)(a1 + 64);
    int v10 = *(_DWORD *)(a1 + 68);
    int v11 = *(_DWORD *)(a1 + 72);
    *(_DWORD *)uint8_t buf = 67112192;
    *(_DWORD *)&uint8_t buf[4] = v3;
    __int16 v52 = 2048;
    uint64_t v53 = v4;
    __int16 v54 = 2048;
    int v55 = v34;
    __int16 v56 = 2048;
    __int16 v57 = v37;
    __int16 v58 = 2048;
    int v59 = v36;
    __int16 v60 = 2048;
    double v61 = v35;
    __int16 v62 = 2048;
    unsigned int v63 = v33;
    __int16 v64 = 2048;
    int v65 = v6;
    __int16 v66 = 2048;
    std::string v67 = v7;
    __int16 v68 = 2048;
    __int16 v69 = v8;
    __int16 v70 = 1024;
    int v71 = v9;
    __int16 v72 = 1024;
    int v73 = v10;
    __int16 v74 = 1024;
    int v75 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#handoffca Handoff device report: {\n NumTimesSmallestRegionEntered: %d,\n TimeSpentRangingAtRate0: %f s,\n TimeSpentRangingAtRate1: %f s,\n TimeSpentRangingAtRate2: %f s,\n TimeSpentRegion0: %f s,\n TimeSpentRegion1: %f s,\n TimeSpentRegion2: %f s,\n TimeSpentRegion3: %f s,\n TimeSpentRegion4: %f s,\n TimeSpentRegion5: %f s,\n RangingIntervalMillisecondsRate0: %d ms,\n RangingIntervalMillisecondsRate1: %d ms,\n RangingIntervalMillisecondsRate2: %d ms\n }",  buf,  0x74u);
  }

  v49[0] = @"numTimesSmallestRegionEntered";
  int v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 16)));
  v50[0] = v12;
  v49[1] = @"timeSpentRangingAtRate0";
  *(void *)uint8_t buf = a1 + 64;
  double v13 = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *((double *)sub_100160ED4((uint64_t **)(a1 + 96), (int *)(a1 + 64), (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 5));
  os_log_t log = (os_log_t)objc_claimAutoreleasedReturnValue(v13);
  v50[1] = log;
  v49[2] = @"timeSpentRangingAtRate1";
  *(void *)uint8_t buf = a1 + 68;
  id v14 = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *((double *)sub_100160ED4((uint64_t **)(a1 + 96), (int *)(a1 + 68), (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 5));
  int v38 = (void *)objc_claimAutoreleasedReturnValue(v14);
  v50[2] = v38;
  __int128 v49[3] = @"timeSpentRangingAtRate2";
  *(void *)uint8_t buf = a1 + 72;
  char v15 = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *((double *)sub_100160ED4((uint64_t **)(a1 + 96), (int *)(a1 + 72), (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 5));
  BOOL v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  v50[3] = v16;
  uint8_t v49[4] = @"timeSpentRegion0";
  char v17 = (uint64_t **)(a1 + 120);
  LODWORD(v4_Block_object_dispose(va, 8) = 0;
  *(void *)uint8_t buf = &v48;
  uint64_t v18 = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *((double *)sub_100160ED4((uint64_t **)(a1 + 120), (int *)&v48, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 5));
  char v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
  v50[4] = v19;
  v49[5] = @"timeSpentRegion1";
  int v47 = 1;
  *(void *)uint8_t buf = &v47;
  uint64_t v20 = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *((double *)sub_100160ED4(v17, &v47, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 5));
  __int16 v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
  v50[5] = v21;
  v49[6] = @"timeSpentRegion2";
  int v46 = 2;
  *(void *)uint8_t buf = &v46;
  char v22 = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *((double *)sub_100160ED4(v17, &v46, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 5));
  __int16 v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
  v50[6] = v23;
  v49[7] = @"timeSpentRegion3";
  int v45 = 3;
  *(void *)uint8_t buf = &v45;
  int v24 = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *((double *)sub_100160ED4(v17, &v45, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 5));
  __int16 v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
  v50[7] = v25;
  void v49[8] = @"timeSpentRegion4";
  int v44 = 4;
  *(void *)uint8_t buf = &v44;
  __int16 v26 = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *((double *)sub_100160ED4(v17, &v44, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 5));
  char v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
  v50[8] = v27;
  v49[9] = @"timeSpentRegion5";
  int v43 = 5;
  *(void *)uint8_t buf = &v43;
  __int16 v28 = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *((double *)sub_100160ED4(v17, &v43, (uint64_t)&unk_1004242F8, (_DWORD **)buf) + 5));
  __int16 v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
  v50[9] = v29;
  unint64_t v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v50,  v49,  10LL));

  v40[0] = _NSConcreteStackBlock;
  v40[1] = 3221225472LL;
  v40[2] = sub_10026DAEC;
  v40[3] = &unk_1007A2298;
  id v31 = v30;
  id v41 = v31;
  AnalyticsSendEventLazy(@"com.apple.nearbyinteraction.b520session", v40);
  uint64_t v32 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "#handoffca Uploaded device information through AnalyticsSendEventLazy",  buf,  2u);
  }
}

void sub_10026D7D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
}

int64_t sub_10026D898(id a1, id a2, id a3)
{
  id v4 = a3;
  [a2 radius];
  float v6 = v5;
  [v4 radius];
  if (v6 < v7) {
    int64_t v8 = -1LL;
  }
  else {
    int64_t v8 = v6 > v7;
  }

  return v8;
}

void sub_10026D8EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10026D900(uint64_t a1, void *a2, double a3)
{
  id v5 = a2;
  float v6 = v5;
  if (v5)
  {
    id v7 = objc_claimAutoreleasedReturnValue([v5 name]);
    sub_1000065CC(__p, (char *)[v7 UTF8String]);
    uint64_t v8 = sub_10001E9D0(a1 + 144, (const void **)__p);
    if (a1 + 152 != v8)
    {
      int v9 = *(_DWORD *)(v8 + 56);
      if (v9 == *(_DWORD *)(a1 + 80)) {
        ++*(_DWORD *)(a1 + 16);
      }
      if (*(_DWORD *)(a1 + 76) <= 5u)
      {
        double v10 = *(double *)(a1 + 48);
        id v14 = (_DWORD *)(a1 + 76);
        int v11 = sub_100160ED4((uint64_t **)(a1 + 120), (int *)(a1 + 76), (uint64_t)&unk_1004242F8, &v14);
        *((double *)v11 + 5) = a3 - v10 + *((double *)v11 + 5);
      }

      *(double *)(a1 + 4_Block_object_dispose(va, 8) = a3;
      *(_DWORD *)(a1 + 76) = v9;
    }

    if (v13 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_10026D9FC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_10026DA34(uint64_t a1, int a2)
{
  float v2 = (float)a2;
  if (*(_BYTE *)(a1 + 4))
  {
    double v3 = (double)*(int *)a1;
    float v4 = v3 * 14.2999998;
    if (v4 <= v2)
    {
      float v5 = (double)*(int *)a1 * 16.2000002;
      BOOL v6 = v5 < v2;
    }

    else
    {
      BOOL v6 = 1;
    }

    if (!v6) {
      return 0LL;
    }
    float v7 = v3 * 9.54999977;
    if (v7 <= v2)
    {
      float v8 = v3 * 11.4500002;
      BOOL v9 = v8 < v2;
    }

    else
    {
      BOOL v9 = 1;
    }

    if (!v9) {
      return 1LL;
    }
    float v10 = (float)*(int *)a1;
    float v11 = v3 * 1.95000001;
  }

  else
  {
    float v10 = -1.0;
    float v11 = -1.0;
    if (a2 == -1) {
      return 0LL;
    }
  }

  if (v11 < v2 || v10 > v2) {
    return 0xFFFFFFFFLL;
  }
  else {
    return 2LL;
  }
}

id sub_10026DAEC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

uint64_t sub_10026DAF4(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  float v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 16 * a3;
    do
    {
      sub_1001E1030((uint64_t **)a1, v4, a2, a2);
      a2 += 4;
      v6 -= 16LL;
    }

    while (v6);
  }

  return a1;
}

void sub_10026DB58(_Unwind_Exception *a1)
{
}

_OWORD *sub_10026DB70(uint64_t **a1, const void **a2, uint64_t a3, _OWORD **a4)
{
  uint64_t v6 = (void **)sub_10001E444((uint64_t)a1, &v12, a2);
  float v7 = *v6;
  if (!*v6)
  {
    float v8 = (uint64_t **)v6;
    float v7 = operator new(0x40uLL);
    BOOL v9 = *a4;
    uint64_t v10 = *((void *)*a4 + 2);
    v7[2] = **a4;
    *((void *)v7 + 6) = v10;
    v9[1] = 0LL;
    _DWORD v9[2] = 0LL;
    *BOOL v9 = 0LL;
    *((_DWORD *)v7 + 14) = 0;
    sub_10001E548(a1, v12, v8, (uint64_t *)v7);
  }

  return v7;
}

uint64_t sub_10026DC08(uint64_t result)
{
  *(void *)uint64_t result = 0LL;
  *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
  *(_DWORD *)(result + 16) = 1;
  return result;
}

void sub_10026DC18(uint64_t a1)
{
  float v2 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    double v3 = *(_DWORD *)(a1 + 16) ? "PowerOff" : "PowerOn";
    sub_1000065CC(__p, v3);
    float v4 = v7 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)uint8_t buf = 136315138;
    BOOL v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#rosepower-ca,poweredOn roseState:%s",  buf,  0xCu);
    if (v7 < 0) {
      operator delete(__p[0]);
    }
  }

  double v5 = sub_100023CC4();
  if (*(_DWORD *)(a1 + 16) == 1)
  {
    *(double *)a1 = v5;
    *(_DWORD *)(a1 + 16) = 0;
  }

void sub_10026DD28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10026DD40(uint64_t a1)
{
  float v2 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    double v3 = *(_DWORD *)(a1 + 16) ? "PowerOff" : "PowerOn";
    sub_1000065CC(__p, v3);
    float v4 = v8 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)uint8_t buf = 136315138;
    uint64_t v10 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#rosepower-ca,poweredOff roseState:%s",  buf,  0xCu);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
  }

  double v5 = sub_100023CC4();
  if (!*(_DWORD *)(a1 + 16))
  {
    double v6 = v5 - *(double *)a1;
    *(double *)(a1 + _Block_object_dispose(va, 8) = v6;
    if (v6 > 0.0)
    {
      sub_10026DE84(a1);
      *(void *)a1 = 0LL;
      *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
    }

    *(_DWORD *)(a1 + 16) = 1;
  }

void sub_10026DE6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10026DE84(uint64_t a1)
{
  v12[0] = @"numPowerUps";
  float v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 1LL));
  v13[0] = v2;
  v12[1] = @"powerOnDuration";
  double v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 8)));
  v13[1] = v3;
  float v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v13,  v12,  2LL));

  double v5 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = objc_claimAutoreleasedReturnValue([v4 description]);
    *(_DWORD *)uint8_t buf = 136315138;
    id v11 = [v6 UTF8String];
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#rosepower-ca,rose power data to be uploaded:\n%s\n",  buf,  0xCu);
  }

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_10026E06C;
  uint64_t v8[3] = &unk_1007A2298;
  id v7 = v4;
  id v9 = v7;
  AnalyticsSendEventLazy(@"com.apple.rose.powerevent", v8);
}

void sub_10026E018(_Unwind_Exception *a1)
{
  float v4 = v3;

  _Unwind_Resume(a1);
}

id sub_10026E06C(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void *sub_10026E074@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B9440[a1]);
}

void *sub_10026E088@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B9498[a1]);
}

void *sub_10026E09C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B94E0[a1]);
}

void *sub_10026E0B0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007B9500[a1]);
}

void *sub_10026E0C4(void *a1, void *a2, uint64_t a3, double a4)
{
  id v7 = a2;
  *a1 = off_1007B9370;
  a1[1] = off_1007B93D0;
  id v8 = v7;
  a1[2] = v8;
  a1[3] = dispatch_queue_create("com.apple.nearbyd.motion", 0LL);
  a1[4] = 0LL;
  a1[5] = a3;
  if (!a3)
  {
    uint64_t v10 = "motionProxyObject";
    int v11 = 21;
    goto LABEL_8;
  }

  if (!v8)
  {
    uint64_t v10 = "clientQueue";
    int v11 = 22;
    goto LABEL_8;
  }

  if (a4 == 0.0)
  {
    uint64_t v10 = "updateInterval != 0";
    int v11 = 23;
LABEL_8:
    __assert_rtn("PRMotionProvider", "PRMotionProvider.mm", v11, v10);
  }

  return a1;
}

void sub_10026E18C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10026E1B8()
{
  unsigned __int8 v0 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "starting motion updates", v1, 2u);
  }

void sub_10026E21C()
{
  unsigned __int8 v0 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "stopping motion updates", v1, 2u);
  }

uint64_t sub_10026E280()
{
  return 0LL;
}

BOOL sub_10026E288(uint64_t a1, uint64_t a2)
{
  switch(*(_DWORD *)a2)
  {
    case 0:
      float v2 = (os_log_s *)qword_1008000A0;
      BOOL result = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR);
      if (result)
      {
        sub_1003A351C(v2);
        return 0LL;
      }

      return result;
    case 1:
      sub_10026E1B8();
      return 1LL;
    case 2:
      sub_10026E21C();
      return 1LL;
    case 3:
      if (!*(_BYTE *)(a2 + 16)) {
        sub_1003A34F4();
      }
      return 1LL;
    default:
      return 1LL;
  }

id *sub_10026E310(id *a1)
{
  return a1;
}

void sub_10026E348(id *a1)
{
}

void sub_10026E380(id *a1)
{
}

void sub_10026E3B0(id *a1)
{
  float v2 = a1 - 1;

  operator delete(v2);
}

uint64_t sub_10026E558(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_10026E5E8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_10026E68C(uint64_t a1)
{
  return (*(uint64_t (**)(void, id))(*(void *)(*(void *)(a1 + 32) + 24) + 16))( *(void *)(*(void *)(a1 + 32) + 24),  [*(id *)(a1 + 40) state]);
}

_BYTE *sub_10026E70C(_BYTE *result)
{
  void *result = 0;
  result[8] = 0;
  result[16] = 0;
  result[24] = 0;
  result[32] = 0;
  result[40] = 0;
  result[48] = 0;
  result[56] = 0;
  result[64] = 0;
  result[68] = 0;
  result[72] = 0;
  result[76] = 0;
  result[80] = 0;
  result[88] = 0;
  result[96] = 0;
  result[100] = 0;
  result[104] = 0;
  result[108] = 0;
  return result;
}

void sub_10026E758(uint64_t a1)
{
  v10[0] = @"maxNumberOfInitiators";
  if (*(_BYTE *)(a1 + 100)) {
    uint64_t v2 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 96)));
  }
  else {
    uint64_t v2 = objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  }
  double v3 = (void *)v2;
  v10[1] = @"maxNumberOfResponders";
  v11[0] = v2;
  if (*(_BYTE *)(a1 + 108)) {
    uint64_t v4 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 104)));
  }
  else {
    uint64_t v4 = objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  }
  double v5 = (void *)v4;
  v11[1] = v4;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v11,  v10,  2LL));

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_10026E8F8;
  uint64_t v8[3] = &unk_1007A2298;
  id v9 = v6;
  id v7 = v6;
  AnalyticsSendEventLazy(@"com.apple.proximity.ranging.numpeers", v8);
}

void sub_10026E8B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10026E8F8(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

_BYTE *sub_10026E900(_BYTE *a1)
{
  return sub_10026EDF8(a1);
}

void sub_10026E92C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
  {
    double v2 = 0.0;
    if (*(_BYTE *)(a1 + 56) && (double v3 = *(double *)(a1 + 48) - *(double *)a1, v3 > 0.0))
    {
      int v22 = 1;
    }

    else
    {
      int v22 = 0;
      double v3 = 0.0;
    }

    if (!*(_BYTE *)(a1 + 24))
    {
      BOOL v24 = 1;
      double v5 = 0.0;
      char v6 = 1;
      goto LABEL_15;
    }

    double v4 = *(double *)(a1 + 16) - *(double *)a1;
    BOOL v24 = v4 <= 0.0;
    if (v4 > 0.0) {
      double v2 = *(double *)(a1 + 16) - *(double *)a1;
    }
    else {
      double v2 = 0.0;
    }
  }

  else
  {
    int v22 = 0;
    double v2 = 0.0;
    BOOL v24 = 1;
    double v3 = 0.0;
    double v5 = 0.0;
    char v6 = 1;
    if (!*(_BYTE *)(a1 + 24)) {
      goto LABEL_15;
    }
  }

  if (*(_BYTE *)(a1 + 40))
  {
    char v6 = 0;
    double v5 = *(double *)(a1 + 32) - *(double *)(a1 + 16);
  }

  else
  {
    char v6 = 1;
    double v5 = 0.0;
  }

void sub_10026ED34( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

_BYTE *sub_10026EDF8(_BYTE *result)
{
  if (result[8]) {
    result[8] = 0;
  }
  if (result[24]) {
    result[24] = 0;
  }
  if (result[40]) {
    result[40] = 0;
  }
  if (result[56]) {
    result[56] = 0;
  }
  if (result[68]) {
    result[68] = 0;
  }
  if (result[76]) {
    result[76] = 0;
  }
  if (result[88]) {
    result[88] = 0;
  }
  if (result[100]) {
    result[100] = 0;
  }
  if (result[108]) {
    result[108] = 0;
  }
  return result;
}

id sub_10026EE68(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_10026EE70(uint64_t a1, double a2)
{
  *(double *)(a1 + 16) = a2;
  *(_BYTE *)(a1 + 24) = 1;
  if (*(_BYTE *)(a1 + 56)) {
    *(_BYTE *)(a1 + 56) = 0;
  }
  double v3 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    if (!*(_BYTE *)(a1 + 24)) {
      sub_100006080();
    }
    uint64_t v4 = *(void *)(a1 + 16);
    int v5 = 134217984;
    uint64_t v6 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#proximitywifica session start time %f",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_10026EF44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10026EF5C(uint64_t a1, double a2)
{
  *(double *)(a1 + 32) = a2;
  *(_BYTE *)(a1 + 4sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 1;
  double v3 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    if (!*(_BYTE *)(a1 + 40)) {
      sub_100006080();
    }
    uint64_t v4 = *(void *)(a1 + 32);
    int v5 = 134217984;
    uint64_t v6 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#proximitywifica device discovery time %f",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_10026F024(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10026F03C(uint64_t result, double a2)
{
  *(double *)(result + 4_Block_object_dispose(va, 8) = a2;
  *(_BYTE *)(result + 56) = 1;
  return result;
}

uint64_t sub_10026F04C(uint64_t result, int a2, double a3)
{
  *(_DWORD *)(result + 64) = a2;
  *(_BYTE *)(result + 6_Block_object_dispose(va, 8) = 1;
  *(double *)(result + sub_10005DE34(v14 - 80) = a3;
  *(_BYTE *)(result + 8_Block_object_dispose(va, 8) = 1;
  if (!*(_BYTE *)(result + 100) || *(_DWORD *)(result + 96) < a2)
  {
    *(_DWORD *)(result + 96) = a2;
    *(_BYTE *)(result + 10sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 1;
  }

  return result;
}

uint64_t sub_10026F080(uint64_t result, int a2, double a3)
{
  *(_DWORD *)(result + sub_100012390(v1 + 72) = a2;
  *(_BYTE *)(result + 76) = 1;
  *(double *)(result + sub_10005DE34(v14 - 80) = a3;
  *(_BYTE *)(result + 8_Block_object_dispose(va, 8) = 1;
  if (!*(_BYTE *)(result + 108) || *(_DWORD *)(result + 104) < a2)
  {
    *(_DWORD *)(result + 104) = a2;
    *(_BYTE *)(result + 10_Block_object_dispose(va, 8) = 1;
  }

  return result;
}

void *sub_10026F0B4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B99A0)[a1]);
}

void *sub_10026F0C8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B99F8)[a1]);
}

void *sub_10026F0DC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B9A40)[a1]);
}

void *sub_10026F0F0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007B9A60)[a1]);
}

uint64_t sub_10026F104( uint64_t a1, __int128 *a2, void *__src, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(void *)a1 = off_1007B95A8;
  *(void *)(a1 + _Block_object_dispose(va, 8) = off_1007B9670;
  memcpy((void *)(a1 + 32), __src, 0x1F8uLL);
  id v20 = (_BYTE *)(a1 + 536);
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(v20, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v21 = *a2;
    *(void *)(a1 + 552) = *((void *)a2 + 2);
    *(_OWORD *)id v20 = v21;
  }

  uint64_t v22 = a13[1];
  *(void *)(a1 + 56sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = *a13;
  *(void *)(a1 + 56_Block_object_dispose(va, 8) = v22;
  if (v22)
  {
    __int16 v23 = (unint64_t *)(v22 + 8);
    do
      unint64_t v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }

  *(void *)(a1 + 60sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0LL;
  *(void *)(a1 + 632) = 0LL;
  *(void *)(a1 + 664) = 0LL;
  *(void *)(a1 + 6sub_100012390(v1 + 72) = *((id *)sub_100288340() + 7);
  *(_BYTE *)(a1 + 6sub_10005DE34(v14 - 80) = 0;
  *(_BYTE *)(a1 + 682) = 0;
  *(_BYTE *)(a1 + 68_Block_object_dispose(va, 8) = 0;
  *(_BYTE *)(a1 + 80sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0;
  *(_BYTE *)(a1 + 80_Block_object_dispose(va, 8) = 0;
  *(_BYTE *)(a1 + 82sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0;
  *(_BYTE *)(a1 + 824) = 0;
  *(_BYTE *)(a1 + 832) = 0;
  *(_WORD *)(a1 + 836) = 0;
  *(void *)(a1 + 84sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 1018212795LL;
  *(_OWORD *)(a1 + 84_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 864) = 0u;
  *(void *)(a1 + 8sub_10005DE34(v14 - 80) = 0LL;
  *(void *)(a1 + 88_Block_object_dispose(va, 8) = 850045863LL;
  *(_BYTE *)(a1 + 984) = 0;
  *(_BYTE *)(a1 + 992) = 0;
  *(_BYTE *)(a1 + 104_Block_object_dispose(va, 8) = 0;
  *(void *)(a1 + 1056) = 0LL;
  *(_DWORD *)(a1 + 1064) = 0;
  *(_OWORD *)(a1 + 937) = 0u;
  *(_OWORD *)(a1 + 912) = 0u;
  *(_OWORD *)(a1 + 92_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 896) = 0u;
  *(void *)(a1 + 10sub_100012390(v1 + 72) = 1018212795LL;
  *(_OWORD *)(a1 + 10sub_10005DE34(v14 - 80) = 0u;
  *(_OWORD *)(a1 + 1096) = 0u;
  *(void *)(a1 + 1112) = 0LL;
  *(void *)(a1 + 112sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 850045863LL;
  *(_OWORD *)(a1 + 112_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 1144) = 0u;
  *(_OWORD *)(a1 + 116sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0u;
  *(void *)(a1 + 1sub_10012E628(v47 - 176) = 0LL;
  sub_10001E914(a1 + 1184, a4);
  sub_10001E914(a1 + 1216, a5);
  sub_10001E914(a1 + 1248, a8);
  sub_10001E914(a1 + 1280, a12);
  sub_10001E914(a1 + 1312, a6);
  sub_10001E914(a1 + 1344, a7);
  sub_10001E914(a1 + 1376, a9);
  sub_10001E914(a1 + 1408, a10);
  sub_10001E914(a1 + 1440, a11);
  if (*(char *)(a1 + 559) < 0)
  {
    if (*(void *)(a1 + 544)) {
      return a1;
    }
LABEL_11:
    __assert_rtn("RoseBaseSession", "NIServerRoseSession.mm", 72, "fSessionContainerIdentifier.size() > 0");
  }

  if (!*(_BYTE *)(a1 + 559)) {
    goto LABEL_11;
  }
  return a1;
}

void sub_10026F35C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  BOOL v16 = *(std::__shared_weak_count **)(v14 + 24);
  if (v16) {
    std::__shared_weak_count::__release_weak(v16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10026F6CC(uint64_t a1)
{
  *(void *)a1 = off_1007B95A8;
  *(void *)(a1 + _Block_object_dispose(va, 8) = off_1007B9670;
  double v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    double v3 = (void *)(a1 + 536);
    uint64_t v4 = (unsigned __int16 *)(a1 + 680);
    if (!*(_BYTE *)(a1 + 682)) {
      uint64_t v4 = (unsigned __int16 *)&unk_10042ADA0;
    }
    int v5 = *v4;
    int v35 = 136315394;
    uint64_t v36 = v3;
    __int16 v37 = 1024;
    int v38 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,~rose::objects::RoseBaseSession (Session ID: %s, Ticket: %d)",  (uint8_t *)&v35,  0x12u);
  }

  unsigned __int8 v6 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v6 & 1) != 0) {
    sub_10026FAA8(a1);
  }
  double v7 = *(void **)(a1 + 1464);
  if (v7 == (void *)(a1 + 1440))
  {
    uint64_t v8 = 4LL;
    double v7 = (void *)(a1 + 1440);
  }

  else
  {
    if (!v7) {
      goto LABEL_14;
    }
    uint64_t v8 = 5LL;
  }

  (*(void (**)(void))(*v7 + 8 * v8))();
LABEL_14:
  uint64_t v9 = *(void **)(a1 + 1432);
  if (v9 == (void *)(a1 + 1408))
  {
    uint64_t v10 = 4LL;
    uint64_t v9 = (void *)(a1 + 1408);
  }

  else
  {
    if (!v9) {
      goto LABEL_19;
    }
    uint64_t v10 = 5LL;
  }

  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_19:
  uint64_t v11 = *(void **)(a1 + 1400);
  if (v11 == (void *)(a1 + 1376))
  {
    uint64_t v12 = 4LL;
    uint64_t v11 = (void *)(a1 + 1376);
  }

  else
  {
    if (!v11) {
      goto LABEL_24;
    }
    uint64_t v12 = 5LL;
  }

  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_24:
  uint64_t v13 = *(void **)(a1 + 1368);
  if (v13 == (void *)(a1 + 1344))
  {
    uint64_t v14 = 4LL;
    uint64_t v13 = (void *)(a1 + 1344);
  }

  else
  {
    if (!v13) {
      goto LABEL_29;
    }
    uint64_t v14 = 5LL;
  }

  (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_29:
  uint64_t v15 = *(void **)(a1 + 1336);
  if (v15 == (void *)(a1 + 1312))
  {
    uint64_t v16 = 4LL;
    uint64_t v15 = (void *)(a1 + 1312);
  }

  else
  {
    if (!v15) {
      goto LABEL_34;
    }
    uint64_t v16 = 5LL;
  }

  (*(void (**)(void))(*v15 + 8 * v16))();
LABEL_34:
  uint64_t v17 = *(void **)(a1 + 1304);
  if (v17 == (void *)(a1 + 1280))
  {
    uint64_t v18 = 4LL;
    uint64_t v17 = (void *)(a1 + 1280);
  }

  else
  {
    if (!v17) {
      goto LABEL_39;
    }
    uint64_t v18 = 5LL;
  }

  (*(void (**)(void))(*v17 + 8 * v18))();
LABEL_39:
  char v19 = *(void **)(a1 + 1272);
  if (v19 == (void *)(a1 + 1248))
  {
    uint64_t v20 = 4LL;
    char v19 = (void *)(a1 + 1248);
  }

  else
  {
    if (!v19) {
      goto LABEL_44;
    }
    uint64_t v20 = 5LL;
  }

  (*(void (**)(void))(*v19 + 8 * v20))();
LABEL_44:
  __int128 v21 = *(void **)(a1 + 1240);
  if (v21 == (void *)(a1 + 1216))
  {
    uint64_t v22 = 4LL;
    __int128 v21 = (void *)(a1 + 1216);
  }

  else
  {
    if (!v21) {
      goto LABEL_49;
    }
    uint64_t v22 = 5LL;
  }

  (*(void (**)(void))(*v21 + 8 * v22))();
LABEL_49:
  __int16 v23 = *(void **)(a1 + 1208);
  if (v23 == (void *)(a1 + 1184))
  {
    uint64_t v24 = 4LL;
    __int16 v23 = (void *)(a1 + 1184);
  }

  else
  {
    if (!v23) {
      goto LABEL_54;
    }
    uint64_t v24 = 5LL;
  }

  (*(void (**)(void))(*v23 + 8 * v24))();
LABEL_54:
  std::mutex::~mutex((std::mutex *)(a1 + 1120));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 1072));
  __int16 v25 = *(void **)(a1 + 1056);
  *(void *)(a1 + 1056) = 0LL;
  if (v25) {
    sub_1002766C4(a1 + 1056, v25);
  }
  if (*(_BYTE *)(a1 + 1048))
  {
    __int16 v26 = *(void **)(a1 + 1000);
    if (v26)
    {
      *(void *)(a1 + 100_Block_object_dispose(va, 8) = v26;
      operator delete(v26);
    }
  }

  std::mutex::~mutex((std::mutex *)(a1 + 888));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 840));

  id v27 = *(void **)(a1 + 664);
  if (v27 == (void *)(a1 + 640))
  {
    uint64_t v28 = 4LL;
    id v27 = (void *)(a1 + 640);
  }

  else
  {
    if (!v27) {
      goto LABEL_67;
    }
    uint64_t v28 = 5LL;
  }

  (*(void (**)(void))(*v27 + 8 * v28))();
LABEL_67:
  __int16 v29 = *(void **)(a1 + 632);
  if (v29 == (void *)(a1 + 608))
  {
    uint64_t v30 = 4LL;
    __int16 v29 = (void *)(a1 + 608);
  }

  else
  {
    if (!v29) {
      goto LABEL_72;
    }
    uint64_t v30 = 5LL;
  }

  (*(void (**)(void))(*v29 + 8 * v30))();
LABEL_72:
  id v31 = *(void **)(a1 + 600);
  if (v31 == (void *)(a1 + 576))
  {
    uint64_t v32 = 4LL;
    id v31 = (void *)(a1 + 576);
  }

  else
  {
    if (!v31) {
      goto LABEL_77;
    }
    uint64_t v32 = 5LL;
  }

  (*(void (**)(void))(*v31 + 8 * v32))();
LABEL_77:
  sub_100012390(a1 + 560);
  __int16 v33 = *(std::__shared_weak_count **)(a1 + 24);
  if (v33) {
    std::__shared_weak_count::__release_weak(v33);
  }
  return a1;
}

void sub_10026FA9C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_10000DE88(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10026FAA8(uint64_t a1)
{
  unsigned __int8 v1 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v1 & 1) == 0) {
    return 0LL;
  }
  uint64_t v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#rose-ses,#hangup Session::invalidate", buf, 2u);
  }

  int v5 = *(void **)(a1 + 1208);
  *(void *)(a1 + 120_Block_object_dispose(va, 8) = 0LL;
  if (v5 == (void *)(a1 + 1184))
  {
    uint64_t v6 = 4LL;
    int v5 = (void *)(a1 + 1184);
  }

  else
  {
    if (!v5) {
      goto LABEL_10;
    }
    uint64_t v6 = 5LL;
  }

  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_10:
  double v7 = *(void **)(a1 + 1240);
  *(void *)(a1 + 124sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0LL;
  if (v7 == (void *)(a1 + 1216))
  {
    uint64_t v8 = 4LL;
    double v7 = (void *)(a1 + 1216);
  }

  else
  {
    if (!v7) {
      goto LABEL_15;
    }
    uint64_t v8 = 5LL;
  }

  (*(void (**)(void))(*v7 + 8 * v8))();
LABEL_15:
  uint64_t v9 = *(void **)(a1 + 1336);
  *(void *)(a1 + 1336) = 0LL;
  if (v9 == (void *)(a1 + 1312))
  {
    uint64_t v10 = 4LL;
    uint64_t v9 = (void *)(a1 + 1312);
  }

  else
  {
    if (!v9) {
      goto LABEL_20;
    }
    uint64_t v10 = 5LL;
  }

  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_20:
  uint64_t v11 = *(void **)(a1 + 1368);
  *(void *)(a1 + 136_Block_object_dispose(va, 8) = 0LL;
  if (v11 == (void *)(a1 + 1344))
  {
    uint64_t v12 = 4LL;
    uint64_t v11 = (void *)(a1 + 1344);
  }

  else
  {
    if (!v11) {
      goto LABEL_25;
    }
    uint64_t v12 = 5LL;
  }

  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_25:
  uint64_t v13 = *(void **)(a1 + 1304);
  *(void *)(a1 + 1304) = 0LL;
  if (v13 == (void *)(a1 + 1280))
  {
    uint64_t v14 = 4LL;
    uint64_t v13 = (void *)(a1 + 1280);
  }

  else
  {
    if (!v13) {
      goto LABEL_30;
    }
    uint64_t v14 = 5LL;
  }

  (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_30:
  if (*(_BYTE *)(a1 + 800)) {
    *(_BYTE *)(a1 + 80sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0;
  }
  if (*(_BYTE *)(a1 + 820)) {
    *(_BYTE *)(a1 + 82sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0;
  }
  if (!*(_BYTE *)(a1 + 682))
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A355C();
    }
    uint64_t v2 = 0LL;
    goto LABEL_61;
  }

  uint64_t v15 = *(unsigned __int16 *)(a1 + 680);
  uint64_t v16 = sub_100288340();
  uint64_t v17 = *(std::__shared_weak_count **)(a1 + 24);
  if (v17)
  {
    uint64_t v18 = *(void *)(a1 + 16);
    p_shared_weak_owners = (unint64_t *)&v17->__shared_weak_owners_;
    do
      unint64_t v20 = __ldxr(p_shared_weak_owners);
    while (__stxr(v20 + 1, p_shared_weak_owners));
    uint64_t v41 = 0LL;
    int v42 = 0LL;
    __int128 v21 = std::__shared_weak_count::lock(v17);
    uint64_t v22 = v21;
    if (v21)
    {
      __int16 v23 = (unint64_t *)&v21->__shared_weak_owners_;
      do
        unint64_t v24 = __ldxr(v23);
      while (__stxr(v24 + 1, v23));
      uint64_t v41 = v18;
      int v42 = v21;
      std::__shared_weak_count::__release_weak(v17);
      p_shared_owners = (unint64_t *)&v22->__shared_owners_;
      do
        unint64_t v26 = __ldaxr(p_shared_owners);
      while (__stlxr(v26 - 1, p_shared_owners));
      if (v26) {
        goto LABEL_51;
      }
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      id v27 = v22;
    }

    else
    {
      uint64_t v41 = 0LL;
      int v42 = 0LL;
      id v27 = v17;
    }

    std::__shared_weak_count::__release_weak(v27);
  }

  else
  {
    uint64_t v41 = 0LL;
    int v42 = 0LL;
  }

void sub_10026FEA4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, char a13)
{
  if (a12) {
    std::__shared_weak_count::__release_weak(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10026FEE0(uint64_t a1)
{
  return sub_10026F6CC(a1 - 8);
}

void sub_10026FEE8(uint64_t a1)
{
  unsigned __int8 v1 = (void *)sub_10026F6CC(a1);
  operator delete(v1);
}

void sub_10026FEFC(uint64_t a1)
{
  unsigned __int8 v1 = (void *)sub_10026F6CC(a1 - 8);
  operator delete(v1);
}

uint64_t sub_10026FF14(uint64_t a1)
{
  unsigned __int8 v1 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v1 & 1) != 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_1003A35E0();
    }
    __int16 v37 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      *(_WORD *)&_BYTE buf[12] = 1024;
      *(_DWORD *)&uint8_t buf[14] = 86;
      __int16 v44 = 2080;
      int v45 = "initialize";
      _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_INFO,  "#rose-ses,%s:%d: assertion failure in %s",  buf,  0x1Cu);
    }

    abort();
  }

  atomic_store(0, (unsigned int *)(a1 + 1064));
  double v3 = sub_100288340();
  sub_1000122E4(buf, (void *)(a1 + 16));
  __int128 v42 = *(_OWORD *)buf;
  *(void *)uint8_t buf = 0LL;
  *(void *)&uint8_t buf[8] = 0LL;
  sub_10028CA60((uint64_t)v3, (unint64_t *)&v42);
  uint64_t v4 = (std::__shared_weak_count *)*((void *)&v42 + 1);
  if (*((void *)&v42 + 1))
  {
    int v5 = (unint64_t *)(*((void *)&v42 + 1) + 8LL);
    do
      unint64_t v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  double v7 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v8 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }

  uint64_t v10 = sub_100288340();
  uint64_t v11 = v10[406];
  uint64_t v12 = (std::__shared_weak_count *)v10[407];
  uint64_t v40 = v11;
  uint64_t v41 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      unint64_t v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
  }

  if (!v11)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A3588();
    }
    goto LABEL_45;
  }

  uint64_t v15 = (std::__shared_weak_count *)sub_100288340();
  uint64_t v16 = *(std::__shared_weak_count **)(a1 + 24);
  if (v16)
  {
    uint64_t v17 = *(void *)(a1 + 16);
    p_shared_weak_owners = (unint64_t *)&v16->__shared_weak_owners_;
    do
      unint64_t v19 = __ldxr(p_shared_weak_owners);
    while (__stxr(v19 + 1, p_shared_weak_owners));
    uint64_t v38 = 0LL;
    BOOL v39 = 0LL;
    unint64_t v20 = std::__shared_weak_count::lock(v16);
    __int128 v21 = v20;
    if (v20)
    {
      uint64_t v22 = (unint64_t *)&v20->__shared_weak_owners_;
      do
        unint64_t v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      uint64_t v38 = v17;
      BOOL v39 = v20;
      std::__shared_weak_count::__release_weak(v16);
      unint64_t v24 = (unint64_t *)&v21->__shared_owners_;
      do
        unint64_t v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (v25) {
        goto LABEL_31;
      }
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      unint64_t v26 = v21;
    }

    else
    {
      uint64_t v38 = 0LL;
      BOOL v39 = 0LL;
      unint64_t v26 = v16;
    }

    std::__shared_weak_count::__release_weak(v26);
  }

  else
  {
    uint64_t v38 = 0LL;
    BOOL v39 = 0LL;
  }

void sub_1002702F8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, char a11, uint64_t a12, char a13, uint64_t a14, char a15)
{
  sub_100012390((uint64_t)&a11);
  _Unwind_Resume(a1);
}

BOOL sub_10027034C(uint64_t a1)
{
  unsigned __int8 v1 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v1 & 1) == 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_1003A360C();
    }
    uint64_t v4 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      int v5 = 136315650;
      unint64_t v6 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      __int16 v7 = 1024;
      int v8 = 116;
      __int16 v9 = 2080;
      uint64_t v10 = "isInitiator";
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "#rose-ses,%s:%d: assertion failure in %s",  (uint8_t *)&v5,  0x1Cu);
    }

    abort();
  }

  int v2 = *(unsigned __int8 *)(a1 + 33);
  if (v2 == 100) {
    sub_1003A3638();
  }
  return v2 == 0;
}

BOOL sub_100270458(uint64_t a1, uint64_t a2)
{
  v16.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 1120);
  v16.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 1120));
  uint64_t v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint8_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,#time-convert waitForTimeConversionReadiness before",  buf,  2u);
  }

  v5.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_ + 1000000 * a2;
  while (1)
  {
    unsigned int v6 = atomic_load((unsigned int *)(a1 + 1064));
    if (v6 == 1) {
      break;
    }
    if (std::chrono::steady_clock::now().__d_.__rep_ >= v5.__d_.__rep_) {
      goto LABEL_20;
    }
    v7.__d_.__rep_ = v5.__d_.__rep_ - std::chrono::steady_clock::now().__d_.__rep_;
    if (v7.__d_.__rep_ >= 1)
    {
      std::chrono::steady_clock::now();
      v8.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
      if (!v8.__d_.__rep_)
      {
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v9 = 0LL;
        goto LABEL_15;
      }

      if (v8.__d_.__rep_ < 1)
      {
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v9 = 0x8000000000000000LL;
      }

      else
      {
        if ((unint64_t)v8.__d_.__rep_ > 0x20C49BA5E353F7LL)
        {
          std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v9 = 0x7FFFFFFFFFFFFFFFLL;
          goto LABEL_15;
        }

uint64_t sub_100270680()
{
  return 0LL;
}

void sub_100270688(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v4 & 1) != 0)
  {
    if (*(_BYTE *)(a2 + 600) && !*(_WORD *)(a2 + 144) && *(_BYTE *)(a2 + 8))
    {
      if (*(void *)(a1 + 1240))
      {
        sub_1000122E4(&v13, (void *)(a1 + 16));
        uint64_t v5 = *(void *)(a1 + 1240);
        if (!v5) {
          sub_10001EEF0();
        }
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)v5 + 48LL))(v5, &v13, a2);
        unsigned int v6 = v14;
        if (v14)
        {
          p_shared_owners = (unint64_t *)&v14->__shared_owners_;
          do
            unint64_t v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
LABEL_16:
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
      }
    }

    else if (*(void *)(a1 + 1272))
    {
      sub_1000122E4(&v11, (void *)(a1 + 16));
      uint64_t v9 = *(void *)(a1 + 1272);
      if (!v9) {
        sub_10001EEF0();
      }
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)v9 + 48LL))(v9, &v11, a2);
      unsigned int v6 = v12;
      if (v12)
      {
        std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> v10 = (unint64_t *)&v12->__shared_owners_;
        do
          unint64_t v8 = __ldaxr(v10);
        while (__stlxr(v8 - 1, v10));
        goto LABEL_16;
      }
    }
  }

void sub_1002707A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1002707C4(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v4 & 1) != 0 && *(void *)(a1 + 1304))
  {
    sub_1000122E4(&v9, (void *)(a1 + 16));
    uint64_t v5 = *(void *)(a1 + 1304);
    if (!v5) {
      sub_10001EEF0();
    }
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)v5 + 48LL))(v5, &v9, a2);
    unsigned int v6 = v10;
    if (v10)
    {
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        unint64_t v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }

void sub_100270870( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100270884(uint64_t a1)
{
}

void sub_1002708B0(uint64_t a1, unsigned __int16 *a2)
{
  unsigned __int8 v4 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    int v10 = *a2;
    uint64_t v11 = *((void *)a2 + 5);
    sub_100270A6C((unsigned __int8 **)a2 + 1, &__p);
    BOOL v12 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0
        ? &__p
        : (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    *(_DWORD *)uint8_t buf = 67109635;
    int v17 = v10;
    __int16 v18 = 2049;
    uint64_t v19 = v11;
    __int16 v20 = 2081;
    __int128 v21 = v12;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "#rose-ses,didReceiveRemoteData (tkt %d, addr 0x%{private}llx): %{private}s",  buf,  0x1Cu);
  }

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 672));
  unsigned __int8 v5 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v5 & 1) != 0 && *(void *)(a1 + 1336))
  {
    sub_1000122E4(&v13, (void *)(a1 + 16));
    uint64_t v6 = *(void *)(a1 + 1336);
    if (!v6) {
      sub_10001EEF0();
    }
    (*(void (**)(uint64_t, uint64_t *, unsigned __int16 *))(*(void *)v6 + 48LL))(v6, &v13, a2);
    std::chrono::steady_clock::time_point v7 = v14;
    if (v14)
    {
      p_shared_owners = (unint64_t *)&v14->__shared_owners_;
      do
        unint64_t v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }

void sub_100270A44(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100270A6C@<X0>(unsigned __int8 **a1@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  char v9 = 48;
  unsigned __int8 v4 = sub_100138E6C(&v10, &v9);
  *(_DWORD *)((char *)v4 + *(void *)(*v4 - 24LL) + _Block_object_dispose(va, 8) = *(_DWORD *)((_BYTE *)v4 + *(void *)(*v4 - 24LL) + 8) & 0xFFFFFFB5 | 8;
  unsigned __int8 v5 = *a1;
  uint64_t v6 = a1[1];
  if (*a1 != v6)
  {
    do
    {
      *(std::streambuf::char_type **)((char *)&v11.__binp_ + *(void *)(v10 - sub_100034A98(v28, *(void **)(v27 + 24)) = (std::streambuf::char_type *)2;
      std::chrono::steady_clock::time_point v7 = (void *)std::ostream::operator<<(&v10, *v5);
      sub_100046B94(v7, (uint64_t)" ", 1LL);
      ++v5;
    }

    while (v5 != v6);
  }

  std::stringbuf::str(a2, &v11);
  std::streambuf::~streambuf(&v11);
  return std::ios::~ios(&v12);
}

void sub_100270BA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100270BC4(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 682))
  {
    int v4 = *(unsigned __int16 *)(a1 + 680);
    if (*(unsigned __int16 *)(a2 + 26) != v4)
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
        sub_1003A3740();
      }
      int v28 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)uint8_t buf = 136315650;
        *(void *)uint64_t v36 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
        *(_WORD *)&v36[8] = 1024;
        *(_DWORD *)&v36[10] = 214;
        *(_WORD *)&v36[14] = 2080;
        *(void *)&uint8_t v36[16] = "didReceiveRangingRateUpdateEvent";
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_INFO,  "#rose-ses,%s:%d: assertion failure in %s",  buf,  0x1Cu);
      }

      abort();
    }

    float v5 = sub_1002710F4(a1);
    if (*(_BYTE *)(a2 + 31) == 2)
    {
      uint64_t v6 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        int v7 = *(unsigned __int8 *)(a2 + 30);
        unint64_t v8 = (void *)(a1 + 536);
        *(_DWORD *)uint8_t buf = 67109634;
        *(_DWORD *)uint64_t v36 = v7;
        *(_WORD *)&v36[4] = 2080;
        *(void *)&v36[6] = v8;
        *(_WORD *)&v36[14] = 1024;
        *(_DWORD *)&uint8_t v36[16] = v4;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,#throttle interrupted by silent restart, but eventually succeeded in updating to subrate %d. (Sessio n ID: %s, Ticket: %d)",  buf,  0x18u);
      }

      int v9 = 0;
      atomic_store(*(_BYTE *)(a2 + 30), (unsigned __int8 *)(a1 + 837));
      int v10 = -1;
    }

    else if (*(_DWORD *)(a2 + 32))
    {
      std::stringbuf v11 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
      {
        int v25 = *(unsigned __int8 *)(a2 + 30);
        int v26 = *(_DWORD *)(a2 + 32);
        uint64_t v27 = (void *)(a1 + 536);
        *(_DWORD *)uint8_t buf = 67109890;
        *(_DWORD *)uint64_t v36 = v25;
        *(_WORD *)&v36[4] = 1024;
        *(_DWORD *)&v36[6] = v26;
        *(_WORD *)&v36[10] = 2080;
        *(void *)&v36[12] = v27;
        *(_WORD *)&v36[20] = 1024;
        *(_DWORD *)&v36[22] = v4;
        _os_log_error_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "#rose-ses,#throttle failure to throttle. Current known subrate: %d. FW error code: 0x%x. (Session ID: %s, Ticket: %d)",  buf,  0x1Eu);
      }

      atomic_store(*(_BYTE *)(a2 + 30), (unsigned __int8 *)(a1 + 837));
      int v10 = -1;
      int v9 = -1;
    }

    else
    {
      uint64_t v12 = (os_log_s *)qword_1008000A0;
      if (*(_BYTE *)(a2 + 31))
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
          sub_1003A3714();
        }
        uint64_t v29 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)uint8_t buf = 136315650;
          *(void *)uint64_t v36 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
          *(_WORD *)&v36[8] = 1024;
          *(_DWORD *)&v36[10] = 235;
          *(_WORD *)&v36[14] = 2080;
          *(void *)&uint8_t v36[16] = "didReceiveRangingRateUpdateEvent";
          _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_INFO,  "#rose-ses,%s:%d: assertion failure in %s",  buf,  0x1Cu);
        }

        abort();
      }

      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = *(unsigned __int8 *)(a2 + 63);
        int v14 = *(unsigned __int8 *)(a2 + 62);
        int v15 = *(unsigned __int16 *)(a2 + 60);
        std::unique_lock<std::mutex> v16 = (void *)(a1 + 536);
        *(_DWORD *)uint8_t buf = 67110146;
        *(_DWORD *)uint64_t v36 = v13;
        *(_WORD *)&v36[4] = 1024;
        *(_DWORD *)&v36[6] = v14;
        *(_WORD *)&v36[10] = 1024;
        *(_DWORD *)&v36[12] = v15;
        *(_WORD *)&uint8_t v36[16] = 2080;
        *(void *)&v36[18] = v16;
        __int16 v37 = 1024;
        int v38 = v4;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,#throttle successful throttle. New: %d, Old: %d, Cycle: %d. (Session ID: %s, Ticket: %d)",  buf,  0x24u);
      }

      __int16 v18 = (unsigned __int8 *)(a2 + 62);
      int v17 = *(unsigned __int8 *)(a2 + 62);
      int v19 = atomic_load((unsigned __int8 *)(a1 + 837));
      if (v17 != v19)
      {
        uint64_t v30 = (unsigned __int8 *)(a1 + 837);
        int v31 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
          sub_1003A368C(v18, v30, v31);
        }
        uint64_t v32 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)uint8_t buf = 136315650;
          *(void *)uint64_t v36 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
          *(_WORD *)&v36[8] = 1024;
          *(_DWORD *)&v36[10] = 239;
          *(_WORD *)&v36[14] = 2080;
          *(void *)&uint8_t v36[16] = "didReceiveRangingRateUpdateEvent";
          _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_INFO,  "#rose-ses,%s:%d: assertion failure in %s",  buf,  0x1Cu);
        }

        abort();
      }

      int v9 = 0;
      atomic_store(*(_BYTE *)(a2 + 63), (unsigned __int8 *)(a1 + 837));
      int v10 = *(unsigned __int16 *)(a2 + 60);
    }

    float v20 = sub_1002710F4(a1);
    if (*(void *)(a1 + 1400))
    {
      float v21 = v20;
      sub_1000122E4(&v33, (void *)(a1 + 16));
      sub_100271200(a1 + 1376, (uint64_t)&v33, v9, v10, v21, v5);
      uint64_t v22 = v34;
      if (v34)
      {
        p_shared_owners = (unint64_t *)&v34->__shared_owners_;
        do
          unint64_t v24 = __ldaxr(p_shared_owners);
        while (__stlxr(v24 - 1, p_shared_owners));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT))
  {
    sub_1003A3660();
  }

void sub_1002710D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

float sub_1002710F4(uint64_t a1)
{
  if (sub_10027034C(a1))
  {
    int v4 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_1003A376C(v4, v5, v6, v7, v8, v9, v10, v11);
    }
    uint64_t v12 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      int v13 = 136315650;
      int v14 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      __int16 v15 = 1024;
      int v16 = 572;
      __int16 v17 = 2080;
      __int16 v18 = "currentResponderParticipationThrottleRate";
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "#rose-ses,%s:%d: assertion failure in %s",  (uint8_t *)&v13,  0x1Cu);
    }

    abort();
  }

  unsigned int v2 = atomic_load((unsigned __int8 *)(a1 + 837));
  return (double)v2 / 19.0;
}

uint64_t sub_100271200(uint64_t a1, uint64_t a2, int a3, int a4, float a5, float a6)
{
  int v11 = a3;
  float v9 = a6;
  float v10 = a5;
  int v8 = a4;
  uint64_t v6 = *(void *)(a1 + 24);
  if (!v6) {
    sub_10001EEF0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, int *, float *, float *, int *))(*(void *)v6 + 48LL))( v6,  a2,  &v11,  &v10,  &v9,  &v8);
}

void sub_10027124C(uint64_t a1, void *a2)
{
  if (a2[2])
  {
    std::mutex::lock((std::mutex *)(a1 + 888));
    int v4 = (__int128 *)a2[2];
    uint64_t v5 = operator new(0x30uLL);
    uint64_t v6 = a2[1];
    *(_WORD *)uint64_t v5 = *(_WORD *)v4;
    v5[1] = v6;
    uint64_t v7 = operator new(0x22uLL);
    __int128 v8 = *v4;
    __int128 v9 = v4[1];
    uint8_t v7[16] = *((_WORD *)v4 + 16);
    *(_OWORD *)uint64_t v7 = v8;
    *((_OWORD *)v7 + sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = v9;
    _DWORD v5[2] = v7;
    void v5[3] = 0LL;
    v5[4] = 0LL;
    void v5[5] = 0LL;
    float v10 = *(void **)(a1 + 1056);
    *(void *)(a1 + 1056) = v5;
    if (v10) {
      sub_1002766C4(a1 + 1056, v10);
    }
    std::mutex::unlock((std::mutex *)(a1 + 888));
    std::condition_variable::notify_one((std::condition_variable *)(a1 + 840));
    return;
  }

  uint64_t v11 = a2[3];
  if (v11)
  {
    if (*(_BYTE *)v11)
    {
      if (*(_BYTE *)v11 == 1)
      {
        int v12 = *(_DWORD *)(v11 + 29);
        char v13 = *(_BYTE *)(v11 + 33);
        int v14 = *(_DWORD *)(v11 + 37);
        char v15 = *(_BYTE *)(v11 + 36);
        int v16 = *(void **)(v11 + 41);
        uint64_t v17 = *(void *)(v11 + 49);
        unsigned int v18 = *(unsigned __int8 *)(v11 + 34);
        int v19 = *(_DWORD *)(v11 + 57);
        __int16 v20 = *(unsigned __int8 *)(v11 + 61);
        char v21 = *(_BYTE *)(v11 + 62);
        __int16 v22 = *(_WORD *)(v11 + 63);
        int v23 = *(_DWORD *)(v11 + 65);
        int v24 = *(_DWORD *)(v11 + 69);
        char v25 = *(_BYTE *)(v11 + 73);
        int v26 = *(__int16 *)(v11 + 74);
        char v27 = *(_BYTE *)(v11 + 76);
        int v28 = *(__int16 *)(v11 + 77);
        char v29 = *(_BYTE *)(v11 + 79);
        int v30 = *(__int16 *)(v11 + 80);
        LODWORD(v9sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = v12;
        BYTE4(v9sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = v13;
        LODWORD(v92) = v14;
        BYTE4(v92) = v15;
        uint64_t v93 = v16;
        uint64_t v94 = v17;
        int v95 = v19;
        LOWORD(v96) = v20;
        BYTE2(v96) = v21;
        __int16 v97 = v22;
        char v98 = v18 & 0xF;
        char v99 = v18 >> 4;
        float v31 = (double)v23 / 1.0e12 * 299792458.0;
        float v100 = v31;
        LODWORD(v10sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = v24;
        BYTE4(v10sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = v25;
        double v102 = (double)v26 * 0.25;
        char v103 = v27;
        double v104 = (double)v28 * 0.25;
        char v105 = v29;
        *(double *)&uint64_t v107 = (double)v30 * 0.25;
        LOBYTE(v10_Block_object_dispose(va, 8) = v29;
        double v109 = *(double *)&v107;
        uint64_t v32 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
        {
          sub_1002BDC48((unsigned __int16 *)&v91, (std::stringbuf::string_type *)__p);
          uint64_t v33 = SBYTE3(v88) >= 0 ? __p : *(_BYTE **)__p;
          *(_DWORD *)uint8_t buf = 136315138;
          char v90 = v33;
          _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,Anchor ranging block summary: %s",  buf,  0xCu);
          if (SBYTE3(v88) < 0) {
            operator delete(*(void **)__p);
          }
        }

        uint64_t v34 = *(void *)(a1 + 560);
        if (v34) {
          (*(void (**)(uint64_t, uint64_t *))(*(void *)v34 + 96LL))(v34, &v91);
        }
        if (*(void *)(a1 + 1464))
        {
          sub_1000122E4(&v82, (void *)(a1 + 16));
          uint64_t v35 = *(void *)(a1 + 1464);
          if (!v35) {
            sub_10001EEF0();
          }
          (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(void *)v35 + 48LL))(v35, &v82, &v91);
          uint64_t v36 = v83;
          if (v83)
          {
            p_shared_owners = (unint64_t *)&v83->__shared_owners_;
            do
              unint64_t v38 = __ldaxr(p_shared_owners);
            while (__stlxr(v38 - 1, p_shared_owners));
            if (!v38)
            {
              ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
              std::__shared_weak_count::__release_weak(v36);
            }
          }
        }
      }

      return;
    }

    char v49 = *(_BYTE *)(v11 + 33);
    int v50 = *(_DWORD *)(v11 + 37);
    __int16 v51 = *(void **)(v11 + 41);
    int v52 = *(_DWORD *)(v11 + 49);
    int v53 = *(_DWORD *)(v11 + 53);
    unsigned int v54 = *(unsigned __int8 *)(v11 + 34);
    int v55 = *(_DWORD *)(v11 + 57);
    __int16 v56 = *(unsigned __int8 *)(v11 + 61);
    char v57 = *(_BYTE *)(v11 + 90);
    char v58 = *(_BYTE *)(v11 + 91);
    char v59 = *(_BYTE *)(v11 + 92);
    __int16 v60 = *(_WORD *)(v11 + 93);
    char v61 = *(_BYTE *)(v11 + 95);
    LODWORD(v9sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = *(_DWORD *)(v11 + 29);
    BYTE4(v9sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = v49;
    LODWORD(v92) = v50;
    uint64_t v93 = v51;
    LODWORD(v94) = v52;
    BYTE4(v94) = v54 & 0xF;
    BYTE5(v94) = v54 >> 4;
    int v95 = v53;
    int v96 = v55;
    __int16 v97 = v56;
    char v98 = v57;
    sub_1002BBF3C(v58, (unint64_t *)&v101);
    LOBYTE(v104) = v59;
    WORD1(v104) = v60;
    BYTE4(v104) = 0;
    char v105 = 0;
    char v106 = v61;
    char v108 = 0LL;
    double v109 = 0.0;
    *(double *)&uint64_t v107 = 0.0;
    if (*(_BYTE *)(v11 + 96))
    {
      unint64_t v62 = 0LL;
      unsigned int v63 = (__int16 *)(v11 + 99);
      do
      {
        sub_100271BBC(&v91, *((_BYTE *)v63 - 2), *((_BYTE *)v63 - 1), *v63);
        v63 += 2;
        ++v62;
      }

      while (v62 < *(unsigned __int8 *)(v11 + 96));
    }

    __int16 v64 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v64, OS_LOG_TYPE_DEFAULT))
    {
      sub_1002BC790((unsigned __int16 *)&v91, (std::stringbuf::string_type *)__p);
      int v65 = SBYTE3(v88) >= 0 ? __p : *(_BYTE **)__p;
      *(_DWORD *)uint8_t buf = 136315138;
      char v90 = v65;
      _os_log_impl( (void *)&_mh_execute_header,  v64,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,Ranging block summary: %s",  buf,  0xCu);
      if (SBYTE3(v88) < 0) {
        operator delete(*(void **)__p);
      }
    }

    __int16 v66 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v66, OS_LOG_TYPE_DEFAULT))
    {
      sub_1002BD9E4((unsigned __int16 *)&v91, (std::stringbuf::string_type *)__p);
      std::string v67 = SBYTE3(v88) >= 0 ? __p : *(_BYTE **)__p;
      *(_DWORD *)uint8_t buf = 136315138;
      char v90 = v67;
      _os_log_impl((void *)&_mh_execute_header, v66, OS_LOG_TYPE_DEFAULT, "#rose-ses,RBSS: %s", buf, 0xCu);
      if (SBYTE3(v88) < 0) {
        operator delete(*(void **)__p);
      }
    }

    uint64_t v68 = *(void *)(a1 + 560);
    if (v68) {
      (*(void (**)(uint64_t, uint64_t *))(*(void *)v68 + 88LL))(v68, &v91);
    }
    if (*(void *)(a1 + 1432))
    {
      sub_1000122E4(&v80, (void *)(a1 + 16));
      uint64_t v69 = *(void *)(a1 + 1432);
      if (!v69) {
        sub_10001EEF0();
      }
      (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(void *)v69 + 48LL))(v69, &v80, &v91);
      __int16 v70 = v81;
      if (v81)
      {
        int v71 = (unint64_t *)&v81->__shared_owners_;
        do
          unint64_t v72 = __ldaxr(v71);
        while (__stlxr(v72 - 1, v71));
        if (!v72)
        {
          ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
          std::__shared_weak_count::__release_weak(v70);
        }
      }
    }

    if (*(double *)&v107 != 0.0)
    {
      char v108 = v107;
      operator delete(v107);
    }

    int v73 = v101;
    if (*(double *)&v101 != 0.0)
    {
      double v102 = *(double *)&v101;
LABEL_78:
      operator delete(v73);
    }
  }

  else
  {
    BOOL v39 = (unsigned __int8 *)a2[4];
    if (v39)
    {
      unsigned int v40 = *v39;
      BOOL v41 = v40 < 5 && (v40 & 0x1F) != 0;
      if (v40 >= 5) {
        int v42 = 0;
      }
      else {
        int v42 = *v39;
      }
      int v43 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144LL))(a1);
      sub_100275EB0( (uint64_t)&v91,  v43,  v42,  *(_WORD *)(a2[4] + 4LL),  (__int16 *)(a2[4] + 6LL),  6LL,  *(_WORD *)(a2[4] + 20LL),  *(__int16 *)(a2[4] + 22LL),  *(_WORD *)(a2[4] + 24LL));
      __int16 v44 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
      {
        sub_10017D080((unsigned int *)&v91, (std::stringbuf::string_type *)__p);
        int v45 = SBYTE3(v88) >= 0 ? __p : *(_BYTE **)__p;
        *(_DWORD *)uint8_t buf = 136315138;
        char v90 = v45;
        _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "#rose-ses,Session stats: %s", buf, 0xCu);
        if (SBYTE3(v88) < 0) {
          operator delete(*(void **)__p);
        }
      }

      uint64_t v46 = *(void *)(a1 + 600);
      if (v46) {
        (*(void (**)(uint64_t, uint64_t *))(*(void *)v46 + 48LL))(v46, &v91);
      }
      uint64_t v47 = *(void *)(a1 + 560);
      if (v47) {
        (*(void (**)(uint64_t, uint64_t *))(*(void *)v47 + 104LL))(v47, &v91);
      }
      if (*(void *)(a1 + 664) && (double v48 = sub_100023CC4(), (v42 - 2) < 3))
      {
        sub_1001AF110(a1 + 640, (v42 - 2) + 2, v48);
      }

      else if ((v40 & 0x1F) == 1 && (uint64_t v74 = *(void *)(a1 + 632)) != 0 && v40 <= 4)
      {
        int v77 = *(unsigned __int8 *)(a2[4] + 3LL);
        if (v77 == 2)
        {
          int v78 = 1;
        }

        else if (v77 == 3)
        {
          int v78 = 2;
        }

        else
        {
          if (!*(_BYTE *)(a2[4] + 3LL))
          {
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
              sub_1003A3808();
            }
            __int16 v79 = (os_log_s *)qword_1008000A0;
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)std::stringbuf::string_type __p = 136315650;
              *(void *)&__p[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB"
                                   "/NIServerRoseSession.mm";
              __int16 v85 = 1024;
              int v86 = 352;
              __int16 v87 = 2080;
              char v88 = "didReceiveAlishaUpdate";
              _os_log_impl( (void *)&_mh_execute_header,  v79,  OS_LOG_TYPE_INFO,  "#rose-ses,%s:%d: assertion failure in %s",  __p,  0x1Cu);
            }

            abort();
          }

          int v78 = 0;
        }

        *(_DWORD *)std::stringbuf::string_type __p = v78;
        (*(void (**)(uint64_t, _BYTE *))(*(void *)v74 + 48LL))(v74, __p);
      }

      else if (!v41)
      {
        std::mutex::lock((std::mutex *)(a1 + 888));
        sub_100271CC8(a1 + 992, (uint64_t)&v91);
        std::mutex::unlock((std::mutex *)(a1 + 888));
        std::condition_variable::notify_one((std::condition_variable *)(a1 + 840));
      }

      int v73 = v92;
      if (v92)
      {
        uint64_t v93 = v92;
        goto LABEL_78;
      }
    }

    else
    {
      int v75 = (os_log_s *)qword_1008000A0;
      if (a2[5])
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          int v76 = *(_DWORD *)(a2[5] + 24LL);
          LODWORD(v9sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = 67109120;
          HIDWORD(v9sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = v76;
          _os_log_impl( (void *)&_mh_execute_header,  v75,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,KeyExpiredEvent for uwb session id %u.",  (uint8_t *)&v91,  8u);
        }
      }

      else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT))
      {
        sub_1003A37DC();
      }
    }
  }

void sub_100271AF4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, void *__p, uint64_t a23)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100271BBC(void *a1, char a2, char a3, int a4)
{
  unint64_t v9 = a1[13];
  uint64_t v7 = (uint64_t)(a1 + 13);
  unint64_t v8 = v9;
  double v10 = (double)a4 * 0.25;
  unint64_t v11 = *(void *)(v7 - 8);
  if (v11 >= v9)
  {
    char v13 = (void **)(v7 - 16);
    uint64_t v14 = *(void *)(v7 - 16);
    uint64_t v15 = (uint64_t)(v11 - v14) >> 4;
    unint64_t v16 = v15 + 1;
    uint64_t v17 = v8 - v14;
    if (v17 >> 3 > v16) {
      unint64_t v16 = v17 >> 3;
    }
    else {
      unint64_t v18 = v16;
    }
    int v19 = (char *)sub_10011E44C(v7, v18);
    __int16 v20 = (double *)&v19[16 * v15];
    __int16 v22 = &v19[16 * v21];
    *(_BYTE *)__int16 v20 = a2;
    *((_BYTE *)v20 + sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = a3;
    v20[1] = v10;
    int v12 = (char *)(v20 + 2);
    int v24 = (char *)a1[11];
    int v23 = (char *)a1[12];
    if (v23 != v24)
    {
      do
      {
        *((_OWORD *)v20 - sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = *((_OWORD *)v23 - 1);
        v20 -= 2;
        v23 -= 16;
      }

      while (v23 != v24);
      int v23 = (char *)*v13;
    }

    a1[11] = v20;
    a1[12] = v12;
    a1[13] = v22;
    if (v23) {
      operator delete(v23);
    }
  }

  else
  {
    *(_BYTE *)unint64_t v11 = a2;
    *(_BYTE *)(v11 + sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = a3;
    int v12 = (char *)(v11 + 16);
    *(double *)(v11 + _Block_object_dispose(va, 8) = v10;
  }

  a1[12] = v12;
}

uint64_t sub_100271CC8(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 56);
  *(void *)a1 = *(void *)a2;
  if (v4)
  {
    if (a1 != a2) {
      sub_10018953C( (char *)(a1 + 8),  *(char **)(a2 + 8),  *(void *)(a2 + 16),  (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 1);
    }
    __int128 v5 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 4_Block_object_dispose(va, 8) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v5;
  }

  else
  {
    *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(a1 + 16) = 0LL;
    *(void *)(a1 + 24) = 0LL;
    sub_1001896FC( (void *)(a1 + 8),  *(const void **)(a2 + 8),  *(void *)(a2 + 16),  (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 1);
    __int128 v6 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 4_Block_object_dispose(va, 8) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v6;
    *(_BYTE *)(a1 + 56) = 1;
  }

  return a1;
}

void sub_100271D6C(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 **)(a2 + 16);
  if (!v4) {
    return;
  }
  int v5 = *(_DWORD *)(v4 + 3);
  int v6 = *v4;
  if (v5 != 25)
  {
    if (v5 != 24) {
      return;
    }
    if (v6 == 1)
    {
      unsigned __int8 v7 = v4[33];
      int v8 = *(_DWORD *)(v4 + 37);
      unsigned __int8 v9 = v4[36];
      uint64_t v10 = *(void *)(v4 + 41);
      uint64_t v11 = *(void *)(v4 + 49);
      int v12 = *(_DWORD *)(v4 + 57);
      __int16 v13 = v4[61];
      unsigned __int8 v14 = v4[62];
      __int16 v15 = *(_WORD *)(v4 + 63);
      int v16 = *(_DWORD *)(v4 + 65);
      int v17 = *(_DWORD *)(v4 + 69);
      unsigned __int8 v18 = v4[73];
      int v19 = *((__int16 *)v4 + 37);
      unsigned __int8 v20 = v4[76];
      int v21 = *(__int16 *)(v4 + 77);
      char v22 = v4[79];
      int v23 = *((__int16 *)v4 + 40);
      LODWORD(v97) = *(_DWORD *)(v4 + 29);
      BYTE4(v97) = v7;
      int v98 = v8;
      unsigned __int8 v99 = v9;
      uint64_t v100 = v10;
      uint64_t v101 = v11;
      int v102 = v12;
      LOWORD(v10sub_10025EC28(v339, (__int128 *)v5, (__int128 *)__p, 3) = v13;
      BYTE2(v10sub_10025EC28(v339, (__int128 *)v5, (__int128 *)__p, 3) = v14;
      __int16 v104 = v15;
      __int16 v105 = 257;
      float v24 = (double)v16 / 1.0e12 * 299792458.0;
      float v106 = v24;
      LODWORD(v107) = v17;
      BYTE4(v107) = v18;
      double v108 = (double)v19 * 0.25;
      unsigned __int8 v109 = v20;
      double v110 = (double)v21 * 0.25;
      char v111 = v22;
      *(double *)&std::stringbuf::string_type __p = (double)v23 * 0.25;
      LOBYTE(v114) = v22;
      double v115 = *(double *)&__p;
      char v25 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        sub_1002BDC48((unsigned __int16 *)&v97, &v121);
        int v26 = (v121.__r_.__value_.__s.__size_ & 0x80u) == 0
            ? &v121
            : (std::stringbuf::string_type *)v121.__r_.__value_.__r.__words[0];
        *(_DWORD *)uint8_t buf = 136315138;
        int v123 = v26;
        _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,Responder ranging block summary: %s",  buf,  0xCu);
      }

      uint64_t v27 = *(void *)(a1 + 560);
      if (v27) {
        (*(void (**)(uint64_t, uint64_t *))(*(void *)v27 + 96LL))(v27, &v97);
      }
      if (*(void *)(a1 + 1464))
      {
        sub_1000122E4(&v119, (void *)(a1 + 16));
        uint64_t v28 = *(void *)(a1 + 1464);
        if (!v28) {
          sub_10001EEF0();
        }
        (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(void *)v28 + 48LL))(v28, &v119, &v97);
        char v29 = v120;
        if (v120)
        {
          p_shared_owners = (unint64_t *)&v120->__shared_owners_;
          do
            unint64_t v31 = __ldaxr(p_shared_owners);
          while (__stlxr(v31 - 1, p_shared_owners));
          if (!v31)
          {
            ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
            std::__shared_weak_count::__release_weak(v29);
          }
        }
      }

      return;
    }

    if (*v4) {
      return;
    }
    unsigned __int8 v37 = v4[33];
    int v38 = *(_DWORD *)(v4 + 37);
    uint64_t v39 = *(void *)(v4 + 41);
    __int16 v40 = *(_WORD *)(v4 + 49);
    __int16 v41 = *(_WORD *)(v4 + 51);
    int v42 = *(_DWORD *)(v4 + 53);
    int v43 = *(_DWORD *)(v4 + 57);
    __int16 v44 = v4[61];
    unsigned __int8 v45 = v4[90];
    char v46 = v4[91];
    unsigned __int8 v47 = v4[92];
    unsigned __int8 v48 = v4[95];
    LODWORD(v97) = *(_DWORD *)(v4 + 29);
    BYTE4(v97) = v37;
    int v98 = v38;
    uint64_t v100 = v39;
    LOWORD(v10sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = v40;
    WORD1(v10sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = v41;
    WORD2(v10sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = 257;
    int v102 = v42;
    int v103 = v43;
    __int16 v104 = v44;
    LOBYTE(v105) = v45;
    sub_1002BBF3C(v46, (unint64_t *)&v107);
    LOBYTE(v11sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = v47;
    WORD1(v11sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = v41;
    BYTE4(v11sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0;
    char v111 = 0;
    unsigned __int8 v112 = v48;
    char v114 = 0LL;
    double v115 = 0.0;
    *(double *)&std::stringbuf::string_type __p = 0.0;
    if (v4[96])
    {
      unint64_t v49 = 0LL;
      int v50 = (__int16 *)(v4 + 99);
      do
      {
        sub_100271BBC(&v97, *((_BYTE *)v50 - 2), *((_BYTE *)v50 - 1), *v50);
        v50 += 2;
        ++v49;
      }

      while (v49 < v4[96]);
    }

    if (v4[62])
    {
      float v51 = (double)*(int *)(v4 + 63) / 1.0e12 * 299792458.0;
      *((float *)&v110 + sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = v51;
      char v111 = 1;
    }

    int v52 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
    {
      sub_1002BC790((unsigned __int16 *)&v97, &v121);
      int v53 = (v121.__r_.__value_.__s.__size_ & 0x80u) == 0
          ? &v121
          : (std::stringbuf::string_type *)v121.__r_.__value_.__r.__words[0];
      *(_DWORD *)uint8_t buf = 136315138;
      int v123 = v53;
      _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,Initiator ranging block summary: %s",  buf,  0xCu);
    }

    uint64_t v54 = *(void *)(a1 + 560);
    if (v54) {
      (*(void (**)(uint64_t, uint64_t *))(*(void *)v54 + 88LL))(v54, &v97);
    }
    if (*(void *)(a1 + 1432))
    {
      sub_1000122E4(&v117, (void *)(a1 + 16));
      uint64_t v55 = *(void *)(a1 + 1432);
      if (!v55) {
        sub_10001EEF0();
      }
      (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(void *)v55 + 48LL))(v55, &v117, &v97);
      __int16 v56 = v118;
      if (v118)
      {
        char v57 = (unint64_t *)&v118->__shared_owners_;
        do
          unint64_t v58 = __ldaxr(v57);
        while (__stlxr(v58 - 1, v57));
        if (!v58)
        {
          ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
          std::__shared_weak_count::__release_weak(v56);
        }
      }
    }

    goto LABEL_57;
  }

  if (v6 != 1)
  {
    if (*v4) {
      return;
    }
    int v59 = *(_DWORD *)(v4 + 29);
    unsigned __int8 v60 = v4[33];
    int v61 = *(_DWORD *)(v4 + 37);
    uint64_t v62 = *(void *)(v4 + 41);
    __int16 v63 = *(_WORD *)(v4 + 49);
    __int16 v64 = *(_WORD *)(v4 + 51);
    int v65 = *(_DWORD *)(v4 + 53);
    int v66 = *(_DWORD *)(v4 + 57);
    __int16 v67 = *(_WORD *)(v4 + 61);
    unsigned __int8 v68 = v4[134];
    char v69 = v4[135];
    unsigned __int8 v70 = v4[129];
    unsigned __int8 v71 = v4[133];
    LODWORD(v97) = v59;
    BYTE4(v97) = v60;
    int v98 = v61;
    uint64_t v100 = v62;
    LOWORD(v10sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = v63;
    WORD1(v10sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = v64;
    WORD2(v10sub_10025EC28(v331, (__int128 *)v37, (__int128 *)v35, 1) = 257;
    int v102 = v65;
    int v103 = v66;
    __int16 v104 = v67;
    LOBYTE(v105) = v68;
    sub_1002BBF3C(v69, (unint64_t *)&v107);
    LOBYTE(v11sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = v70;
    WORD1(v11sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = v64;
    BYTE4(v11sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0;
    char v111 = 0;
    unsigned __int8 v112 = v71;
    char v114 = 0LL;
    double v115 = 0.0;
    *(double *)&std::stringbuf::string_type __p = 0.0;
    unint64_t v72 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v72, OS_LOG_TYPE_DEFAULT))
    {
      sub_1002BC790((unsigned __int16 *)&v97, &v121);
      int v73 = (v121.__r_.__value_.__s.__size_ & 0x80u) == 0
          ? &v121
          : (std::stringbuf::string_type *)v121.__r_.__value_.__r.__words[0];
      *(_DWORD *)uint8_t buf = 136315138;
      int v123 = v73;
      _os_log_impl( (void *)&_mh_execute_header,  v72,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,Initiator ranging block summary: %s",  buf,  0xCu);
    }

    uint64_t v74 = *(void *)(a1 + 560);
    if (v74) {
      (*(void (**)(uint64_t, uint64_t *))(*(void *)v74 + 88LL))(v74, &v97);
    }
    if (*(void *)(a1 + 1432))
    {
      sub_1000122E4(v95, (void *)(a1 + 16));
      uint64_t v75 = *(void *)(a1 + 1432);
      if (!v75) {
        sub_10001EEF0();
      }
      (*(void (**)(uint64_t, void *, uint64_t *))(*(void *)v75 + 48LL))(v75, v95, &v97);
      sub_100012390((uint64_t)v95);
    }

void sub_1002725B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  sub_10018A8E4(va);
  _Unwind_Resume(a1);
}

void sub_100272640(uint64_t a1, uint64_t *a2)
{
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v4 & 1) != 0)
  {
    sub_1000065CC(v17, (&off_1007B9A80)[*((int *)a2 + 1)]);
    sub_1000065CC(__p, (&off_1007B9AF8)[*((int *)a2 + 2)]);
    int v5 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = v17;
      if (v18 < 0) {
        int v6 = (void **)v17[0];
      }
      unsigned __int8 v7 = __p;
      if (v16 < 0) {
        unsigned __int8 v7 = (void **)__p[0];
      }
      *(_DWORD *)uint8_t buf = 136315394;
      unsigned __int8 v20 = v6;
      __int16 v21 = 2080;
      char v22 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,serviceRequestDidUpdateStatus. type: %s, reason: %s",  buf,  0x16u);
    }

    if (*(_BYTE *)(a1 + 820)) {
      *(_BYTE *)(a1 + 82sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 0;
    }
    uint64_t v8 = *a2;
    *(_DWORD *)(a1 + 816) = *((_DWORD *)a2 + 2);
    *(void *)(a1 + 80_Block_object_dispose(va, 8) = v8;
    *(_BYTE *)(a1 + 82sub_10025EC28(v334, (__int128 *)v25, (__int128 *)v23, 0) = 1;
    if (*(void *)(a1 + 1208))
    {
      sub_1000122E4(&v13, (void *)(a1 + 16));
      uint64_t v9 = *(void *)(a1 + 1208);
      if (!v9) {
        sub_10001EEF0();
      }
      (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(void *)v9 + 48LL))(v9, &v13, a2);
      uint64_t v10 = v14;
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          unint64_t v12 = __ldaxr(p_shared_owners);
        while (__stlxr(v12 - 1, p_shared_owners));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
    }

    if (v16 < 0) {
      operator delete(__p[0]);
    }
    if (v18 < 0) {
      operator delete(v17[0]);
    }
  }

void sub_10027281C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

void sub_100272868(uint64_t a1, int a2, int a3)
{
  unsigned __int8 v6 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v6 & 1) != 0)
  {
    *(_DWORD *)(a1 + 824) = a2;
    *(_DWORD *)(a1 + 82_Block_object_dispose(va, 8) = a3;
    *(_BYTE *)(a1 + 832) = 1;
  }

void sub_1002728B8(uint64_t a1, unsigned int *a2)
{
  unsigned __int8 v4 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    if (*a2) {
      int v5 = "Ready";
    }
    else {
      int v5 = "NotReady";
    }
    sub_1000065CC(__p, v5);
    if (v8 >= 0) {
      unsigned __int8 v6 = __p;
    }
    else {
      unsigned __int8 v6 = (void **)__p[0];
    }
    *(_DWORD *)uint8_t buf = 136315138;
    uint64_t v10 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,timeConversionDidUpdateState (%s)",  buf,  0xCu);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
  }

  std::mutex::lock((std::mutex *)(a1 + 1120));
  atomic_store(*a2, (unsigned int *)(a1 + 1064));
  std::condition_variable::notify_one((std::condition_variable *)(a1 + 1072));
  std::mutex::unlock((std::mutex *)(a1 + 1120));
}

void sub_1002729E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002729FC(uint64_t a1, uint64_t *a2)
{
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v4 & 1) != 0)
  {
    int v5 = (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)a1 + 176LL))(a1, a2);
    unsigned __int8 v6 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      sub_1003A3834(a2, v5, v6);
      if (v5) {
        goto LABEL_4;
      }
    }

    else if (v5)
    {
LABEL_4:
      std::mutex::lock((std::mutex *)(a1 + 888));
      sub_100272B5C(a1 + 952, (uint64_t)a2);
      std::mutex::unlock((std::mutex *)(a1 + 888));
      std::condition_variable::notify_one((std::condition_variable *)(a1 + 840));
      return;
    }

    sub_10026FAA8(a1);
    if (*(void *)(a1 + 1368))
    {
      sub_1000122E4(&v11, (void *)(a1 + 16));
      int v13 = -2;
      uint64_t v7 = *(void *)(a1 + 1368);
      if (!v7) {
        sub_10001EEF0();
      }
      (*(void (**)(uint64_t, uint64_t *, int *))(*(void *)v7 + 48LL))(v7, &v11, &v13);
      char v8 = v12;
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          unint64_t v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
    }
  }

void sub_100272B38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

uint64_t sub_100272B5C(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 32))
  {
    *(void *)a1 = *(void *)a2;
    std::string::operator=((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
  }

  else
  {
    sub_100137668(a1, a2);
  }

  return a1;
}

uint64_t sub_100272BA0(uint64_t a1, __int128 *a2)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v2 & 1) == 0 || !*(_BYTE *)(a1 + 682)) {
    return 4294967294LL;
  }
  int v5 = sub_100288340();
  unsigned __int8 v6 = *(std::__shared_weak_count **)(a1 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    p_shared_weak_owners = (unint64_t *)&v6->__shared_weak_owners_;
    do
      unint64_t v9 = __ldxr(p_shared_weak_owners);
    while (__stxr(v9 + 1, p_shared_weak_owners));
    uint64_t v25 = 0LL;
    int v26 = 0LL;
    unint64_t v10 = std::__shared_weak_count::lock(v6);
    uint64_t v11 = v10;
    if (v10)
    {
      unint64_t v12 = (unint64_t *)&v10->__shared_weak_owners_;
      do
        unint64_t v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      uint64_t v25 = v7;
      int v26 = v10;
      std::__shared_weak_count::__release_weak(v6);
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        unint64_t v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (v15) {
        goto LABEL_17;
      }
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      char v16 = v11;
    }

    else
    {
      uint64_t v25 = 0LL;
      int v26 = 0LL;
      char v16 = v6;
    }

    std::__shared_weak_count::__release_weak(v16);
  }

  else
  {
    uint64_t v25 = 0LL;
    int v26 = 0LL;
  }

void sub_100272D28( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_weak(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_100272D40()
{
}

void sub_100272D68()
{
}

uint64_t sub_100272D90(uint64_t a1, float a2)
{
  if (sub_10027034C(a1))
  {
    uint64_t v27 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_1003A38EC(v27, v28, v29, v30, v31, v32, v33, v34);
    }
    uint64_t v35 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      *(void *)int v42 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      *(_WORD *)&v42[8] = 1024;
      int v43 = 621;
      __int16 v44 = 2080;
      unsigned __int8 v45 = "throttleSuperframeParticipationWithRate";
      _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_INFO,  "#rose-ses,%s:%d: assertion failure in %s",  buf,  0x1Cu);
    }

    abort();
  }

  if (a2 < 0.0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_1003A395C();
    }
    uint64_t v36 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      *(void *)int v42 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      *(_WORD *)&v42[8] = 1024;
      int v43 = 622;
      __int16 v44 = 2080;
      unsigned __int8 v45 = "throttleSuperframeParticipationWithRate";
      _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_INFO,  "#rose-ses,%s:%d: assertion failure in %s",  buf,  0x1Cu);
    }

    abort();
  }

  unsigned __int8 v4 = (os_log_s *)qword_1008000A0;
  if (a2 > 1.0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_1003A3988();
    }
    unsigned __int8 v37 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint8_t buf = 136315650;
      *(void *)int v42 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      *(_WORD *)&v42[8] = 1024;
      int v43 = 623;
      __int16 v44 = 2080;
      unsigned __int8 v45 = "throttleSuperframeParticipationWithRate";
      _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_INFO,  "#rose-ses,%s:%d: assertion failure in %s",  buf,  0x1Cu);
    }

    abort();
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint8_t buf = 134217984;
    *(double *)int v42 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,#throttle Requested throttle rate: %0.2f.",  buf,  0xCu);
  }

  if (!*(_BYTE *)(a1 + 682))
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A39B4();
    }
    return 4294967294LL;
  }

  uint8_t v5 = llroundf(a2 * 19.0);
  unsigned __int8 v6 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    if (!*(_BYTE *)(a1 + 682)) {
      sub_100006080();
    }
    int v7 = v5;
    int v8 = *(unsigned __int16 *)(a1 + 680);
    *(_DWORD *)uint8_t buf = 134218496;
    *(double *)int v42 = a2;
    *(_WORD *)&v42[8] = 1024;
    int v43 = v5;
    __int16 v44 = 1024;
    LODWORD(v45) = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,#throttle Throttle rate = %0.2f translates to subrate = %d. Ticket: %d",  buf,  0x18u);
  }

  else
  {
    int v7 = v5;
  }

  int v10 = atomic_load((unsigned __int8 *)(a1 + 837));
  if (v10 == v5)
  {
    uint64_t v11 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      if (!*(_BYTE *)(a1 + 682)) {
        sub_100006080();
      }
      int v12 = *(unsigned __int16 *)(a1 + 680);
      *(_DWORD *)uint8_t buf = 67109376;
      *(_DWORD *)int v42 = v7;
      *(_WORD *)&v42[4] = 1024;
      *(_DWORD *)&v42[6] = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,#throttle Subrate = %d already in effect. Ticket: %d",  buf,  0xEu);
    }

    return 0LL;
  }

  if (!*(_BYTE *)(a1 + 682)) {
    sub_100006080();
  }
  *(_WORD *)uint8_t buf = *(_WORD *)(a1 + 680);
  buf[2] = v5;
  unint64_t v13 = sub_100288340();
  unsigned __int8 v14 = *(std::__shared_weak_count **)(a1 + 24);
  if (v14)
  {
    uint64_t v15 = *(void *)(a1 + 16);
    p_shared_weak_owners = (unint64_t *)&v14->__shared_weak_owners_;
    do
      unint64_t v17 = __ldxr(p_shared_weak_owners);
    while (__stxr(v17 + 1, p_shared_weak_owners));
    uint64_t v39 = 0LL;
    __int16 v40 = 0LL;
    unsigned int v18 = std::__shared_weak_count::lock(v14);
    __int128 v19 = v18;
    if (v18)
    {
      __int128 v20 = (unint64_t *)&v18->__shared_weak_owners_;
      do
        unint64_t v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
      uint64_t v39 = v15;
      __int16 v40 = v18;
      std::__shared_weak_count::__release_weak(v14);
      p_shared_owners = (unint64_t *)&v19->__shared_owners_;
      do
        unint64_t v23 = __ldaxr(p_shared_owners);
      while (__stlxr(v23 - 1, p_shared_owners));
      if (v23) {
        goto LABEL_33;
      }
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      uint64_t v24 = v19;
    }

    else
    {
      uint64_t v39 = 0LL;
      __int16 v40 = 0LL;
      uint64_t v24 = v14;
    }

    std::__shared_weak_count::__release_weak(v24);
  }

  else
  {
    uint64_t v39 = 0LL;
    __int16 v40 = 0LL;
  }

void sub_100273298( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1002732D0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    sub_100270A6C((unsigned __int8 **)a2, &v25);
    sub_1003A39E0();
  }

  unsigned __int8 v5 = atomic_load((unsigned __int8 *)(a1 + 836));
  if ((v5 & 1) == 0 || !*(_BYTE *)(a1 + 682)) {
    return 0LL;
  }
  unsigned __int8 v6 = sub_100288340();
  uint64_t v7 = *((void *)v6 + 808);
  uint64_t v8 = v7 + 24;
  if (v7) {
    uint64_t v9 = v7 + 24;
  }
  else {
    uint64_t v9 = 0LL;
  }
  int v10 = (std::__shared_weak_count *)*((void *)v6 + 809);
  uint64_t v23 = v9;
  uint64_t v24 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      unint64_t v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }

  if (!v7)
  {
    uint64_t v13 = 0LL;
    if (!v10) {
      return v13;
    }
    goto LABEL_20;
  }

  if (!*(_BYTE *)(a1 + 682)) {
    sub_100006080();
  }
  __int16 v17 = *(_WORD *)(a1 + 680);
  __int128 v19 = 0LL;
  uint64_t v20 = 0LL;
  std::stringbuf::string_type __p = 0LL;
  sub_1001309C0(&__p, *(const void **)a2, *(void *)(a2 + 8), *(void *)(a2 + 8) - *(void *)a2);
  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  uint64_t v13 = (*(uint64_t (**)(uint64_t, __int16 *))(*(void *)v8 + 16LL))(v8, &v17);
  if (__p)
  {
    __int128 v19 = __p;
    operator delete(__p);
  }

  if (v10)
  {
LABEL_20:
    uint64_t v15 = (unint64_t *)&v10->__shared_owners_;
    do
      unint64_t v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }

  return v13;
}

void sub_100273464( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  if (__p) {
    operator delete(__p);
  }
  sub_100012390((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_1002734A4(int a1@<W1>, uint64_t a2@<X8>)
{
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:@"AlishaGetKeyTimeoutMillisecondsOverride"]);

  if (v5)
  {
    unsigned __int8 v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    signed int v7 = [v6 integerForKey:@"AlishaGetKeyTimeoutMillisecondsOverride"];
  }

  else
  {
    signed int v7 = 5000;
  }

  uint64_t v8 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint8_t buf = 67109376;
    int v35 = a1;
    __int16 v36 = 1024;
    signed int v37 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,AlishaSubsystem: get key for uwb session id: %u. Timeout: %d ms",  buf,  0xEu);
  }

  uint64_t v9 = sub_100288340();
  sub_100288540((uint64_t)v9, a1, v7, (uint64_t)buf);
  int v10 = *(_DWORD *)buf;
  if (v41) {
    int v11 = 0;
  }
  else {
    int v11 = -1004;
  }
  if (!*(_DWORD *)buf) {
    int v10 = v11;
  }
  if (v10)
  {
    char v12 = 0;
LABEL_13:
    *(_DWORD *)a2 = v10;
LABEL_26:
    *(_BYTE *)(a2 + 4) = 0;
    goto LABEL_27;
  }

  if (!v41) {
    sub_100006080();
  }
  if (!(_BYTE)v35)
  {
    int v14 = sub_1002BF768(v38);
    unint64_t v16 = (os_log_s *)qword_1008000A0;
    if (!v14)
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
        sub_1003A3AD4();
      }
      uint64_t v21 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
      {
        int v30 = 136315650;
        *(void *)uint64_t v31 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
        *(_WORD *)&v31[8] = 1024;
        *(_DWORD *)uint64_t v32 = 734;
        *(_WORD *)&__n128 v32[4] = 2080;
        uint64_t v33 = "getKey";
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_INFO,  "#rose-ses,%s:%d: assertion failure in %s",  (uint8_t *)&v30,  0x1Cu);
      }

      abort();
    }

    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      int v30 = 67109376;
      *(_DWORD *)uint64_t v31 = *(_DWORD *)v39;
      *(_WORD *)&__n128 v31[4] = 1024;
      *(_DWORD *)&v31[6] = v38;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,AlishaSubsystem: get key response for uwb session id: %u, status code: %u",  (uint8_t *)&v30,  0xEu);
    }

    goto LABEL_25;
  }

  if (v35 != 1)
  {
    uint64_t v22 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_1003A3A40((uint64_t)&v35, v22, v23, v24, v25, v26, v27, v28);
    }
    uint64_t v29 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      int v30 = 136315650;
      *(void *)uint64_t v31 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      *(_WORD *)&v31[8] = 1024;
      *(_DWORD *)uint64_t v32 = 742;
      *(_WORD *)&__n128 v32[4] = 2080;
      uint64_t v33 = "getKey";
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_INFO,  "#rose-ses,%s:%d: assertion failure in %s",  (uint8_t *)&v30,  0x1Cu);
    }

    abort();
  }

  int v13 = v38;
  int v14 = sub_1002BF768(v38);
  if (v14)
  {
    uint64_t v15 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      int v30 = 67109376;
      *(_DWORD *)uint64_t v31 = *(_DWORD *)&v39[2];
      *(_WORD *)&__n128 v31[4] = 1024;
      *(_DWORD *)&v31[6] = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,AlishaSubsystem: get key complete event failure for uwb session id: %u, status code: %u",  (uint8_t *)&v30,  0xEu);
    }

    if (v14 == 71)
    {
      sub_10021DA8C();
      sub_10021DB48();
    }