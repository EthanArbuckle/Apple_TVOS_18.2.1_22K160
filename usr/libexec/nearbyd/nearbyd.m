void sub_1000035D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100003638(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000038A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000391C(uint64_t a1)
{
  v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "connection interrupted for pid: %d",  (uint8_t *)v6,  8u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained handleXPCDisconnection:v5];
  }
}

void sub_1000039F0(_Unwind_Exception *a1)
{
  int v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100003A10(uint64_t a1)
{
  v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "connection invalidated for pid: %d",  (uint8_t *)v6,  8u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained handleXPCDisconnection:v5];
  }
}

void sub_100003AE4(_Unwind_Exception *a1)
{
  int v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100003C9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100003D68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id PRErrorWithCodeAndUserInfo(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
  id v5 = v4;
  if (a1 > 199)
  {
    if (a1 > 998)
    {
      switch(a1)
      {
        case 999LL:
          uint64_t v7 = @"Internal Error";
          goto LABEL_30;
        case 2000LL:
          uint64_t v7 = @"Unsupported global parameters combination.";
          goto LABEL_30;
        case 2002LL:
          uint64_t v7 = @"Time conversion failed.";
          goto LABEL_30;
      }
    }

    else
    {
      switch(a1)
      {
        case 200LL:
          uint64_t v7 = @"Failed to start estimating proximity to peer.";
          goto LABEL_30;
        case 201LL:
          uint64_t v7 = @"Failed to stop estimating proximity to peer.";
          goto LABEL_30;
        case 202LL:
          uint64_t v7 = @"Failed to consume RSSI sample.";
LABEL_30:
          v6 = &NSLocalizedDescriptionKey;
          goto LABEL_31;
      }
    }

LABEL_15:
    uint64_t v7 = @"Undefined Error";
    goto LABEL_30;
  }

  v6 = &NSLocalizedDescriptionKey;
  uint64_t v7 = @"Failed to place service request.";
  switch(a1)
  {
    case 'd':
      [v4 setObject:@"Unsupported ranging configuration." forKeyedSubscript:NSLocalizedDescriptionKey];
      [v5 setObject:@"Missing parameters or invalid values provided." forKeyedSubscript:NSLocalizedFailureReasonErrorKey];
      uint64_t v7 = @"Make sure that the values provided are supported in this version.";
      v6 = &NSLocalizedRecoverySuggestionErrorKey;
      break;
    case 'e':
      break;
    case 'f':
      uint64_t v7 = @"Failed to initiate a ranging session.";
      break;
    case 'g':
      uint64_t v7 = @"Failed to stop a ranging session.";
      break;
    case 'h':
      uint64_t v7 = @"Failed to set Rose config.";
      break;
    case 'i':
    case 'k':
      goto LABEL_15;
    case 'j':
      uint64_t v7 = @"Invalid peer information.";
      break;
    case 'l':
      uint64_t v7 = @"Invalid ticket id.";
      break;
    case 'm':
      uint64_t v7 = @"Rose Provider not ready.";
      break;
    case 'n':
      uint64_t v7 = @"Timeout.";
      break;
    case 'o':
      uint64_t v7 = @"Unexpected service state.";
      break;
    case 'p':
      uint64_t v7 = @"Not user triggered request.";
      break;
    case 'q':
      uint64_t v7 = @"Client has no registered request.";
      break;
    default:
      if (a1 != 10) {
        goto LABEL_15;
      }
      [v4 setObject:@"Unsupported operation." forKeyedSubscript:NSLocalizedDescriptionKey];
      uint64_t v7 = @"This platform does not support the operation requested.";
      v6 = &NSLocalizedFailureReasonErrorKey;
      break;
  }

      break;
    default:
      break;
  }

  return 0LL;
}

  v10 = (void *)*((void *)this + 1);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }
  else {
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v9,  a2,  a3);
  }
}

  v10 = (void *)*((void *)this + 1);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }
  else {
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v9,  a2,  a3);
  }
}

  v11 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 56) |= 8u;
  *(_DWORD *)(a1 + 28) = v11;
  id v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v5 & 0x20) != 0)
  {
LABEL_10:
    v6 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 56) |= 0x20u;
    *(void *)(a1 + 40) = v6;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 28),  a2,  a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 32),  a3);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }

    v8 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 116) |= 4u;
    *(void *)(a1 + 32) = v8;
    id v5 = *(_DWORD *)(a2 + 116);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }

  if ((v5 & 0xFF00) == 0) {
    goto LABEL_25;
  }
  if ((v5 & 0x100) != 0)
  {
    v11 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 104) |= 0x100u;
    *(_DWORD *)(a1 + 48) = v11;
    id v5 = *(_DWORD *)(a2 + 104);
    if ((v5 & 0x200) == 0)
    {
LABEL_18:
      if ((v5 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_35;
    }
  }

  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_18;
  }

  v12 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 104) |= 0x200u;
  *(_DWORD *)(a1 + 52) = v12;
  id v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x400) == 0)
  {
LABEL_19:
    if ((v5 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_36;
  }

  if ((*((_BYTE *)this + 84) & 4) == 0) {
    goto LABEL_22;
  }
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 7);
  *(_BYTE *)id v3 = 24;
  v14 = (unint64_t)v3 + 1;
  if ((v13 & 0x80000000) != 0)
  {
    v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v13,  v14,  a3);
  }

  else
  {
    if (v13 <= 0x7F)
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v13;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_22;
    }

    v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v13,  v14,  a3);
  }

  id v3 = v15;
LABEL_22:
  if ((*((_BYTE *)this + 84) & 8) != 0)
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(_BYTE *)id v3 = 32;
    if (v16 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v16,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v16;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 84) & 0x10) != 0)
  {
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(_BYTE *)id v3 = 40;
    if (v17 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v17;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 84) & 0x20) != 0)
  {
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    *(_BYTE *)id v3 = 48;
    if (v18 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v18,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v18;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 84) & 0x40) != 0)
  {
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    *(_BYTE *)id v3 = 56;
    if (v19 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v19,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v19;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 84) & 0x80) != 0)
  {
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(_BYTE *)id v3 = 64;
    if (v20 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v20,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v20;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 85) & 1) != 0)
  {
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(_BYTE *)id v3 = 72;
    if (v21 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v21,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v21;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if (*((int *)this + 16) >= 1)
  {
    v22 = 0LL;
    do
    {
      v23 = *(unsigned int **)(*((void *)this + 7) + 8 * v22);
      *(_BYTE *)id v3 = 82;
      v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23[5];
      if (v24 > 0x7F)
      {
        v25 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v24,  (int)v3 + 1,  a3);
      }

      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v24;
        v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }

      id v3 = sub_100082104((wireless_diagnostics::google::protobuf::internal::WireFormat *)v23, v25, a3);
      ++v22;
    }

    while (v22 < *((int *)this + 16));
  }

  v28 = (void *)*((void *)this + 1);
  v27 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v26 = v28;
  if (!v28 || *v26 == v26[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v27,  v3,  a3);
  }
}

  if ((*((_BYTE *)this + 44) & 8) != 0)
  {
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(_BYTE *)id v3 = 32;
    if (v12 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v12,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v12;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  v15 = (void *)*((void *)this + 1);
  v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v14,  v3,  a3);
  }
}

  v15 = (void *)*((void *)this + 1);
  v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v14,  v3,  a3);
  }
}

  v10 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 76) |= 4u;
  *(void *)(a1 + 32) = v10;
  id v5 = *(_DWORD *)(a2 + 76);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(double *)(v4 + 32),  a3);
  id v5 = *(_DWORD *)(v4 + 76);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }

  v11 = *(void *)(a1 + 32);
  *(_BYTE *)a2 = 25;
  *(void *)(a2 + 1) = v11;
  a2 += 9LL;
  id v3 = *(_DWORD *)(a1 + 76);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }

  v14 = *((_DWORD *)this + 117);
  if ((v14 & 4) != 0)
  {
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 3);
    *(_BYTE *)v4 = 24;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v15,  (unint64_t)v4 + 1,  a3);
    v14 = *((_DWORD *)this + 117);
  }

  if ((v14 & 8) != 0)
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(_BYTE *)v4 = 32;
    if (v16 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v16,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v16;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  if ((*((_BYTE *)this + 468) & 0x10) != 0)
  {
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(_BYTE *)v4 = 40;
    if (v17 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v17;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  v18 = *((_DWORD *)this + 117);
  if ((v18 & 0x20) != 0)
  {
    v19 = *((void *)this + 5);
    *(_BYTE *)v4 = 50;
    else {
      v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v19 + 23);
    }
    if (v20 > 0x7F)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v20,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v20;
      v21 = (_DWORD)v4 + 2;
    }

    v22 = *(char *)(v19 + 23);
    if (v22 >= 0) {
      v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19;
    }
    else {
      v23 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v19;
    }
    if (v22 >= 0) {
      v24 = (const void *)*(unsigned __int8 *)(v19 + 23);
    }
    else {
      v24 = (const void *)*(unsigned int *)(v19 + 8);
    }
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v23,  v24,  v21,  a4);
    v18 = *((_DWORD *)this + 117);
  }

  if ((v18 & 0x40) != 0)
  {
    v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(_BYTE *)v4 = 56;
    if (v25 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v25,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v25;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  if ((*((_BYTE *)this + 468) & 0x80) != 0)
  {
    v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(_BYTE *)v4 = 64;
    if (v26 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v26,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v26;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  if ((*((_BYTE *)this + 469) & 1) != 0)
  {
    v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    *(_BYTE *)v4 = 72;
    if (v27 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v27,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v27;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  v28 = *((_DWORD *)this + 117);
  if ((v28 & 0x200) != 0)
  {
    v29 = *((void *)this + 8);
    *(_BYTE *)v4 = 81;
    *(void *)((char *)v4 + 1) = v29;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    v28 = *((_DWORD *)this + 117);
    if ((v28 & 0x400) == 0)
    {
LABEL_53:
      if ((v28 & 0x800) == 0) {
        goto LABEL_60;
      }
      goto LABEL_57;
    }
  }

  else if ((v28 & 0x400) == 0)
  {
    goto LABEL_53;
  }

  v30 = *((void *)this + 9);
  *(_BYTE *)v4 = 89;
  *(void *)((char *)v4 + 1) = v30;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 117) & 0x800) == 0) {
    goto LABEL_60;
  }
LABEL_57:
  v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
  *(_BYTE *)v4 = 96;
  if (v31 > 0x7F)
  {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v31,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v31;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  v15 = (void *)*((void *)this + 1);
  v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v14,  v3,  a3);
  }
}

  v10 = (void *)*((void *)this + 1);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }
  else {
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v9,  a2,  a3);
  }
}

  if ((*((_BYTE *)this + 96) & 4) != 0)
  {
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(_BYTE *)v4 = 24;
    if (v14 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v14;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  if ((*((_BYTE *)this + 96) & 8) != 0)
  {
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
    *(_BYTE *)v4 = 32;
    if (v15 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v15;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  if ((*((_BYTE *)this + 96) & 0x10) != 0)
  {
    v16 = *((void *)this + 4);
    *(_BYTE *)v4 = 42;
    else {
      v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v16 + 23);
    }
    if (v17 > 0x7F)
    {
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v17;
      v18 = (_DWORD)v4 + 2;
    }

    v19 = *(char *)(v16 + 23);
    if (v19 >= 0) {
      v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16;
    }
    else {
      v20 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v16;
    }
    if (v19 >= 0) {
      v21 = (const void *)*(unsigned __int8 *)(v16 + 23);
    }
    else {
      v21 = (const void *)*(unsigned int *)(v16 + 8);
    }
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v20,  v21,  v18,  a4);
  }

  if (*((int *)this + 12) >= 1)
  {
    v22 = 0LL;
    do
    {
      v23 = *(unsigned int **)(*((void *)this + 5) + 8 * v22);
      *(_BYTE *)v4 = 50;
      v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23[24];
      if (v24 > 0x7F)
      {
        v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v24,  (int)v4 + 1,  a3);
      }

      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v24;
        v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }

      v4 = sub_1000931B8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v23, v25, a3, a4);
      ++v22;
    }

    while (v22 < *((int *)this + 12));
  }

  if (*((int *)this + 18) >= 1)
  {
    v26 = 0LL;
    do
    {
      v27 = *(unsigned int **)(*((void *)this + 8) + 8 * v26);
      *(_WORD *)v4 = 1698;
      v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v27[8];
      if (v28 > 0x7F)
      {
        v29 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v28,  (int)v4 + 2,  a3);
      }

      else
      {
        *((_BYTE *)v4 + 2) = (_BYTE)v28;
        v29 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
      }

      v4 = sub_100092050((wireless_diagnostics::google::protobuf::internal::WireFormat *)v27, v29, a3, a4);
      ++v26;
    }

    while (v26 < *((int *)this + 18));
  }

  v32 = (void *)*((void *)this + 1);
  v31 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v30 = v32;
  if (!v32 || *v30 == v30[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v31,  v4,  a3);
  }
}

  if ((*((_BYTE *)this + 300) & 4) != 0)
  {
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(_BYTE *)v4 = 24;
    if (v14 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v14;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  if ((*((_BYTE *)this + 300) & 8) != 0)
  {
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 30);
    *(_BYTE *)v4 = 32;
    if (v15 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v15;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  v16 = *((_DWORD *)this + 75);
  if ((v16 & 0x10) != 0)
  {
    v17 = *((void *)this + 4);
    *(_BYTE *)v4 = 42;
    else {
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v17 + 23);
    }
    if (v18 > 0x7F)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v18,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v18;
      v19 = (_DWORD)v4 + 2;
    }

    v20 = *(char *)(v17 + 23);
    if (v20 >= 0) {
      v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17;
    }
    else {
      v21 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v17;
    }
    if (v20 >= 0) {
      v22 = (const void *)*(unsigned __int8 *)(v17 + 23);
    }
    else {
      v22 = (const void *)*(unsigned int *)(v17 + 8);
    }
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v21,  v22,  v19,  a4);
    v16 = *((_DWORD *)this + 75);
    if ((v16 & 0x20) == 0)
    {
LABEL_25:
      if ((v16 & 0x40) == 0) {
        goto LABEL_26;
      }
      goto LABEL_62;
    }
  }

  else if ((v16 & 0x20) == 0)
  {
    goto LABEL_25;
  }

  v23 = *((void *)this + 5);
  *(_BYTE *)v4 = 49;
  *(void *)((char *)v4 + 1) = v23;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  v16 = *((_DWORD *)this + 75);
  if ((v16 & 0x40) == 0)
  {
LABEL_26:
    if ((v16 & 0x80) == 0) {
      goto LABEL_27;
    }
    goto LABEL_63;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 24),  a2,  a4);
  if ((*(_DWORD *)(v5 + 60) & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 28),  a2,  a4);
LABEL_6:
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(void *)(*(void *)(v5 + 32) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 40));
  }

  v10 = *(void **)(v5 + 8);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

  if ((*((_BYTE *)this + 88) & 4) != 0)
  {
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(_BYTE *)id v3 = 24;
    if (v13 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v13,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v13;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 88) & 8) != 0)
  {
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(_BYTE *)id v3 = 32;
    if (v14 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v14;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 88) & 0x10) != 0)
  {
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(_BYTE *)id v3 = 40;
    if (v15 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v15;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 88) & 0x20) != 0)
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    *(_BYTE *)id v3 = 48;
    if (v16 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v16,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v16;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 88) & 0x40) != 0)
  {
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    *(_BYTE *)id v3 = 56;
    if (v17 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v17;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 88) & 0x80) != 0)
  {
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(_BYTE *)id v3 = 64;
    if (v18 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v18,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v18;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 89) & 1) != 0)
  {
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(_BYTE *)id v3 = 72;
    if (v19 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v19,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v19;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 89) & 2) != 0)
  {
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(_BYTE *)id v3 = 80;
    if (v20 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v20,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v20;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 89) & 4) != 0)
  {
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    *(_BYTE *)id v3 = 88;
    if (v21 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v21,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v21;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 89) & 8) != 0)
  {
    v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(_BYTE *)id v3 = 96;
    if (v22 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v22,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v22;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 89) & 0x10) != 0)
  {
    v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    *(_BYTE *)id v3 = 104;
    if (v23 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v23,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v23;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 89) & 0x20) != 0)
  {
    v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    *(_BYTE *)id v3 = 112;
    if (v24 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v24,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v24;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 89) & 0x40) != 0)
  {
    v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
    *(_BYTE *)id v3 = 120;
    if (v25 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v25,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v25;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 89) & 0x80) != 0)
  {
    v26 = *((_BYTE *)this + 80);
    *(_WORD *)id v3 = 384;
    *((_BYTE *)v3 + 2) = v26;
    id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  }

  v29 = (void *)*((void *)this + 1);
  v28 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v27 = v29;
  if (!v29 || *v27 == v27[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v28,  v3,  a3);
  }
}

  v9 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) |= 8u;
  *(_DWORD *)(a1 + 64) = v9;
  id v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v5 & 0x20) == 0) {
    goto LABEL_10;
  }
LABEL_21:
  *(_DWORD *)(a1 + 72) |= 0x20u;
  v12 = *(void **)(a1 + 48);
  if (!v12)
  {
    v12 = operator new(0x50uLL);
    sub_100075314((uint64_t)v12);
    *(void *)(a1 + 48) = v12;
  }

  v13 = *(void *)(a2 + 48);
  if (!v13) {
    v13 = *(void *)(qword_100800500 + 48);
  }
  sub_10007EB10((uint64_t)v12, v13);
  if ((*(_DWORD *)(a2 + 72) & 0x40) != 0)
  {
LABEL_26:
    *(_DWORD *)(a1 + 72) |= 0x40u;
    v14 = *(void **)(a1 + 56);
    if (!v14)
    {
      v14 = operator new(0x30uLL);
      sub_1000B6440((uint64_t)v14);
      *(void *)(a1 + 56) = v14;
    }

    v15 = *(void *)(a2 + 56);
    if (!v15) {
      v15 = *(void *)(qword_100800500 + 56);
    }
    sub_1000B8F50((uint64_t)v14, v15);
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  v10 = (void *)*((void *)this + 1);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }
  else {
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v9,  a2,  a3);
  }
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(float *)(v5 + 28),  a3);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }

  v8 = *((_DWORD *)this + 7);
  *(_BYTE *)a2 = 37;
  *(_DWORD *)(a2 + 1) = v8;
  a2 += 5LL;
  v4 = *((_DWORD *)this + 18);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }

  v9 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) |= 8u;
  *(_DWORD *)(a1 + 56) = v9;
  id v5 = *(_DWORD *)(a2 + 64);
  if ((v5 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v5 & 0x20) == 0) {
    goto LABEL_10;
  }
LABEL_21:
  *(_DWORD *)(a1 + 64) |= 0x20u;
  v12 = *(void **)(a1 + 40);
  if (!v12)
  {
    v12 = operator new(0x38uLL);
    sub_1000E83D0((uint64_t)v12);
    *(void *)(a1 + 40) = v12;
  }

  v13 = *(void *)(a2 + 40);
  if (!v13) {
    v13 = *(void *)(qword_1008005B8 + 40);
  }
  sub_1000E842C((uint64_t)v12, v13);
  if ((*(_DWORD *)(a2 + 64) & 0x40) != 0)
  {
LABEL_26:
    *(_DWORD *)(a1 + 64) |= 0x40u;
    v14 = *(void **)(a1 + 48);
    if (!v14)
    {
      v14 = operator new(0x20uLL);
      sub_1000E9990(v14);
      *(void *)(a1 + 48) = v14;
    }

    v15 = *(void *)(a2 + 48);
    if (!v15) {
      v15 = *(void *)(qword_1008005B8 + 48);
    }
    sub_1000E99D8((uint64_t)v14, v15);
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  v10 = *(void *)(v5 + 32);
  if (!v10) {
    v10 = *(void *)(qword_1008005E8 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v10,  a2,  a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }

  v11 = *((_BYTE *)this + 34);
  *(_BYTE *)v4 = 40;
  *((_BYTE *)v4 + 1) = v11;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  v6 = *((_DWORD *)this + 14);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }

  v10 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 68) |= 4u;
  *(void *)(a1 + 32) = v10;
  id v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(double *)(v5 + 32),  a3);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }

  v11 = *(_BYTE *)(a2 + 40);
  *(_DWORD *)(a1 + 48) |= 8u;
  *(_BYTE *)(a1 + 40) = v11;
  id v5 = *(_DWORD *)(a2 + 48);
  if ((v5 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v5 & 0x20) != 0)
  {
LABEL_10:
    v6 = *(_BYTE *)(a2 + 42);
    *(_DWORD *)(a1 + 48) |= 0x20u;
    *(_BYTE *)(a1 + 42) = v6;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(unsigned __int8 *)(v5 + 40),  (BOOL)a2,  a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }

  v13 = *((_BYTE *)this + 40);
  *(_BYTE *)a2 = 32;
  *(_BYTE *)(a2 + 1) = v13;
  a2 += 2LL;
  v4 = *((_DWORD *)this + 12);
  if ((v4 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_6:
  if ((v4 & 0x20) != 0)
  {
LABEL_7:
    id v5 = *((_BYTE *)this + 42);
    *(_BYTE *)a2 = 48;
    *(_BYTE *)(a2 + 1) = v5;
    a2 += 2LL;
  }

  if ((*((_BYTE *)this + 40) & 4) != 0)
  {
    v13 = *((void *)this + 3);
    *(_BYTE *)id v3 = 25;
    *(void *)((char *)v3 + 1) = v13;
    id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  }

  v16 = (void *)*((void *)this + 1);
  v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v15,  v3,  a3);
  }
}

  if ((v6 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v6 & 0x100) != 0)
  {
    v15 = *(_DWORD *)(a2 + 80);
    *(_DWORD *)(a1 + 140) |= 0x100u;
    *(_DWORD *)(a1 + 80) = v15;
    v6 = *(_DWORD *)(a2 + 140);
    if ((v6 & 0x200) == 0)
    {
LABEL_18:
      if ((v6 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_34;
    }
  }

  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_18;
  }

  v16 = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 140) |= 0x200u;
  *(_DWORD *)(a1 + 84) = v16;
  v6 = *(_DWORD *)(a2 + 140);
  if ((v6 & 0x400) == 0)
  {
LABEL_19:
    if ((v6 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_37;
  }

  v11 = *((void *)this + 6);
  *(_BYTE *)v4 = 41;
  *(void *)((char *)v4 + 1) = v11;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }

  v11 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 68) |= 8u;
  *(void *)(a1 + 40) = v11;
  id v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v5 & 0x20) != 0)
  {
LABEL_10:
    v6 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 68) |= 0x20u;
    *(void *)(a1 + 56) = v6;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v4 + 40),  a3);
  id v5 = *(_DWORD *)(v4 + 68);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }

  v12 = *(void *)(a1 + 40);
  *(_BYTE *)a2 = 33;
  *(void *)(a2 + 1) = v12;
  a2 += 9LL;
  id v3 = *(_DWORD *)(a1 + 68);
  if ((v3 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_6:
  if ((v3 & 0x20) != 0)
  {
LABEL_7:
    v4 = *(void *)(a1 + 56);
    *(_BYTE *)a2 = 49;
    *(void *)(a2 + 1) = v4;
    a2 += 9LL;
  }

    std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 160), &__lk, v6);
    if (std::chrono::system_clock::now().__d_.__rep_ >= v4)
    {
LABEL_16:
      atomic_load((unsigned __int8 *)(a1 + 153));
      break;
    }
  }

  uint64_t v7 = atomic_load((unsigned __int8 *)(a1 + 153));
  if ((v7 & 1) != 0)
  {
    if (__lk.__owns_) {
      std::mutex::unlock(__lk.__m_);
    }
    if (((*(uint64_t (**)(uint64_t))(*(void *)v2 + 16LL))(v2) & 1) == 0
      && os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      sub_10038E8D8();
    }

    if (((*(uint64_t (**)(uint64_t))(*(void *)v9 + 16LL))(v9) & 1) == 0
      && os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      sub_10038E8AC();
    }

    if (((*(uint64_t (**)(uint64_t))(*(void *)v10 + 16LL))(v10) & 1) == 0
      && os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      sub_10038E880();
    }

    if (((*(uint64_t (**)(uint64_t))(*(void *)v11 + 16LL))(v11) & 1) == 0
      && os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      sub_10038E854();
    }
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038E904();
    }
    if (__lk.__owns_) {
      std::mutex::unlock(__lk.__m_);
    }
  }

  return v7 & 1;
}

  if (HIBYTE(self->_finderStartRangingOptions.var0.__val_.secondary_scheduling_interval_usec.var0.__val_)
    && *(void *)&self->_findeeAlgorithmAidingData.var0.__val_.mach_absolute_receipt_timestamp.__engaged_)
  {
    engaged = self->_finderStartRangingOptions.__engaged_;
    if (((engaged - 5) < 2 || LOBYTE(self->_finderMutualAuthTimer) == 2)
      && (!*(&self->_findeeAlgorithmAidingData.var0.__val_.measured_velocity_change.__engaged_ + 2)
       || *((_BYTE *)v3 + 920)))
    {
      v9 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        v10 = self->_identityString;
        v20 = 138412290;
        v21 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#find-range,#auth Mutual-auth for findee failed, report to session manager, %@",  (uint8_t *)&v20,  0xCu);
      }

      (*(void (**)(void))(*(void *)&self->_findeeAlgorithmAidingData.var0.__val_.mach_absolute_receipt_timestamp.__engaged_
                        + 16LL))();
      v11 = 256;
LABEL_24:
      v3[460] = v11;
      return;
    }

    if (engaged == 4
      && LOBYTE(self->_finderMutualAuthTimer) == 1
      && (!*(&self->_findeeAlgorithmAidingData.var0.__val_.measured_velocity_change.__engaged_ + 2)
       || !*((_BYTE *)v3 + 920)))
    {
      v16 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        v17 = self->_identityString;
        v20 = 138412290;
        v21 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "#find-range,#auth Mutual-auth for findee succeeded, cancel timer and report to session manager, %@",  (uint8_t *)&v20,  0xCu);
      }

      velocityChangeH2 = self->_findeeAlgorithmAidingData.var0.__val_.measured_velocity_change.var0.__val_.velocityChangeH2;
      if (velocityChangeH2 != 0.0)
      {
        dispatch_source_cancel(*(dispatch_source_t *)&velocityChangeH2);
        v19 = self->_findeeAlgorithmAidingData.var0.__val_.measured_velocity_change.var0.__val_.velocityChangeH2;
        self->_findeeAlgorithmAidingData.var0.__val_.measured_velocity_change.var0.__val_.velocityChangeH2 = 0.0;

        self->_findeeAlgorithmAidingData.var0.__val_.measured_velocity_change.__engaged_ = 0;
      }

      (*(void (**)(void))(*(void *)&self->_findeeAlgorithmAidingData.var0.__val_.mach_absolute_receipt_timestamp.__engaged_
                        + 16LL))();
      v11 = 257;
      goto LABEL_24;
    }
  }

  if (a2[16])
  {
    v14 = *((void *)a2 + 1);
    v12 |= 0x80u;
    v5[58] = v12;
    *((void *)v5 + 7) = v14;
  }

  if (!a2[208]) {
    sub_100006080();
  }
  v15 = *((unsigned __int16 *)a2 + 50);
  v5[58] = v12 | 0x100;
  v5[16] = v15;
  v16 = *((unsigned __int16 *)a2 + 51);
  v5[58] = v12 | 0x300;
  v5[17] = v16;
  v17 = a2[104];
  v5[58] = v12 | 0x700;
  v5[18] = v17;
  v18 = a2[105];
  v5[58] = v12 | 0xF00;
  v5[19] = v18;
  v19 = *((unsigned __int16 *)a2 + 53);
  v5[58] = v12 | 0x1F00;
  v5[22] = v19;
  v20 = *(void *)(a2 + 108);
  v5[58] = v12 | 0x3F00;
  *((void *)v5 + 10) = v20;
  v21 = *(void *)(a2 + 116);
  v5[58] = v12 | 0x7F00;
  *((void *)v5 + 12) = v21;
  LODWORD(v21) = *((unsigned __int16 *)a2 + 62);
  v5[58] = v12 | 0xFF00;
  v5[23] = v21;
  LODWORD(v21) = a2[126];
  v5[58] = v12 | 0x1FF00;
  v5[26] = v21;
  LODWORD(v21) = a2[127];
  v5[58] = v12 | 0x3FF00;
  v5[27] = v21;
  v22 = *((void *)a2 + 16);
  v5[58] = v12 | 0x7FF00;
  *((void *)v5 + 14) = v22;
  v23 = *((void *)a2 + 17);
  v5[58] = v12 | 0xFFF00;
  *((void *)v5 + 15) = v23;
  LODWORD(v23) = *((__int16 *)a2 + 72);
  v5[58] = v12 | 0x1FFF00;
  v5[32] = v23;
  LODWORD(v23) = *((__int16 *)a2 + 73);
  v5[58] = v12 | 0x3FFF00;
  v5[33] = v23;
  LODWORD(v23) = *((unsigned __int16 *)a2 + 74);
  v5[58] = v12 | 0x7FFF00;
  v5[34] = v23;
  LODWORD(v23) = *((__int16 *)a2 + 75);
  v5[58] = v12 | 0xFFFF00;
  v5[35] = v23;
  LODWORD(v23) = *((__int16 *)a2 + 76);
  v5[58] = v12 | 0x1FFFF00;
  v5[36] = v23;
  LODWORD(v23) = *(_DWORD *)(a2 + 154);
  v5[58] = v12 | 0x3FFFF00;
  v5[37] = v23;
  LODWORD(v23) = (char)a2[158];
  v5[58] = v12 | 0x7FFFF00;
  v5[38] = v23;
  LODWORD(v23) = (char)a2[159];
  v5[58] = v12 | 0xFFFFF00;
  v5[39] = v23;
  LODWORD(v23) = (char)a2[160];
  v5[58] = v12 | 0x1FFFFF00;
  v5[40] = v23;
  LODWORD(v23) = *(__int16 *)(a2 + 161);
  v5[58] = v12 | 0x3FFFFF00;
  v5[41] = v23;
  LODWORD(v23) = *(__int16 *)(a2 + 163);
  v5[58] = v12 | 0x7FFFFF00;
  v5[42] = v23;
  LODWORD(v23) = a2[165];
  v5[58] = v12 | 0xFFFFFF00;
  v5[43] = v23;
  v24 = *((__int16 *)a2 + 83);
  LODWORD(v23) = v5[59];
  v5[59] = v23 | 1;
  v5[44] = v24;
  v25 = *((__int16 *)a2 + 84);
  v5[59] = v23 | 3;
  v5[45] = v25;
  v26 = a2[170];
  v5[59] = v23 | 7;
  v5[46] = v26;
  v27 = *(__int16 *)(a2 + 171);
  v5[59] = v23 | 0xF;
  v5[47] = v27;
  v28 = *(__int16 *)(a2 + 173);
  v5[59] = v23 | 0x1F;
  v5[48] = v28;
  v29 = *(_DWORD *)(a2 + 175);
  v5[59] = v23 | 0x3F;
  v5[49] = v29;
  v30 = a2[179];
  v5[59] = v23 | 0x7F;
  v5[50] = v30;
  v31 = *((unsigned __int16 *)a2 + 90);
  v5[59] = v23 | 0xFF;
  v5[51] = v31;
  v32 = *((unsigned __int16 *)a2 + 91);
  v5[59] = v23 | 0x1FF;
  v5[52] = v32;
  v33 = *((unsigned __int16 *)a2 + 92);
  v5[59] = v23 | 0x3FF;
  v5[53] = v33;
  v34 = *((__int16 *)a2 + 93);
  v5[59] = v23 | 0x7FF;
  v5[54] = v34;
  v35 = *((__int16 *)a2 + 95);
  v5[59] = v23 | 0x17FF;
  v5[56] = v35;
  v36 = *((__int16 *)a2 + 94);
  v5[59] = v23 | 0x1FFF;
  v5[55] = v36;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A07B4();
  }
  v37 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v43);
LABEL_22:
  sub_10010686C(v43);
  return v37;
}

    if (buf[0])
    {
      buf[1] = buf[0];
      operator delete(buf[0]);
    }
  }

  else
  {
    id v3 = 0LL;
  }

  sub_1002657A0((uint64_t)&file);
  return v3;
}

          v19 = 9;
          if ((v9 & 1) != 0)
          {
            v20 = 5;
            goto LABEL_26;
          }

  uint64_t v7 = 0.0;
  if (*(_BYTE *)(a1 + 56) && *(_BYTE *)(a1 + 88))
  {
    v8 = 0;
    uint64_t v7 = *(double *)(a1 + 48) - *(double *)(a1 + 80);
  }

  else
  {
    v8 = 1;
  }

  v28[0] = @"numberOfInitiators";
  if (*(_BYTE *)(a1 + 68)) {
    v9 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 64)));
  }
  else {
    v9 = objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  }
  v10 = (void *)v9;
  v29[0] = v9;
  v28[1] = @"numberOfResponders";
  if (*(_BYTE *)(a1 + 76)) {
    v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 72)));
  }
  else {
    v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  }
  v29[1] = v23;
  v28[2] = @"timeFromLockScreenToFirstMeasurement";
  if (v22) {
    v11 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v3));
  }
  else {
    v11 = objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  }
  v12 = (void *)v11;
  v29[2] = v11;
  v28[3] = @"timeFromLockScreenToNiSessionStart";
  if (v24) {
    v13 = objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  }
  else {
    v13 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v2));
  }
  v14 = (void *)v13;
  v29[3] = v13;
  v28[4] = @"timeFromNiSessionStartToBluetoothDiscovery";
  if ((v6 & 1) != 0) {
    v15 = objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  }
  else {
    v15 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v5));
  }
  v16 = (void *)v15;
  v29[4] = v15;
  v28[5] = @"timeFromRangingRequestToFirstMeasurement";
  if ((v8 & 1) != 0) {
    v17 = objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  }
  else {
    v17 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v7));
  }
  v18 = (void *)v17;
  v29[5] = v17;
  v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v29,  v28,  6LL));

  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472LL;
  v26[2] = sub_10026EE68;
  v26[3] = &unk_1007A2298;
  v20 = v19;
  v27 = v20;
  AnalyticsSendEventLazy(@"com.apple.proximity.ranging.firstmeasurementsreturned", v26);
  v21 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "#proximitywifica Uploaded device information through AnalyticsSendEventLazy",  buf,  2u);
  }
}
}

  if (v22)
  {
    v12 = v21;
    if (v21)
    {
      p_shared_owners = (unint64_t *)&v21->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }

  if (v22)
  {
    v12 = v21;
    if (v21)
    {
      p_shared_owners = (unint64_t *)&v21->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }

LABEL_31:
  [v5 setObject:v7 forKeyedSubscript:*v6];
  if (v3) {
    [v5 addEntriesFromDictionary:v3];
  }
  v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"com.apple.Proximity.ErrorDomain",  a1,  v5));

  return v8;
}

          v23 = (_BYTE *)*((void *)this + 1);
          v24 = (_BYTE *)*((void *)this + 2);
          if (v23 >= v24 || *v23 != 9)
          {
            if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }

            goto LABEL_2;
          }

          *((void *)this + 1) = v23 + 1;
        }

        return 0LL;
      }

      if (v10 == 2) {
        break;
      }
    }

    if (v10 == 4) {
      return 1LL;
    }
  }

  result = sub_10004C598(this, v6);
  if ((_DWORD)result) {
    goto LABEL_31;
  }
  return result;
}

  if ((v3 & 0x20) != 0) {
    id v5 = v4 + 9;
  }
  else {
    id v5 = v4;
  }
  if ((v3 & 0x40) != 0)
  {
    v20 = *(void *)(a1 + 64);
    if (!v20) {
      v20 = *(void *)(qword_1008001D0 + 64);
    }
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100066020(v20, a2);
    v22 = (int)v21;
    else {
      v23 = 1;
    }
    id v5 = (v5 + v22 + v23 + 1);
    id v3 = *(_DWORD *)(a1 + 96);
  }

  if ((v3 & 0x80) != 0)
  {
    v24 = *(void *)(a1 + 72);
    if (!v24) {
      v24 = *(void *)(qword_1008001D0 + 72);
    }
    v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000658C8(v24, a2);
    v26 = (int)v25;
    else {
      v27 = 1;
    }
    id v5 = (v5 + v26 + v27 + 1);
    id v3 = *(_DWORD *)(a1 + 96);
  }

  if ((v13 & 0x100) != 0)
  {
    v19 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 84) |= 0x100u;
    *(_DWORD *)(a1 + 52) = v19;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  if ((v14 & 0xFF00) == 0) {
    goto LABEL_41;
  }
  if ((v14 & 0x100) != 0)
  {
    v24 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 468) |= 0x100u;
    *(_DWORD *)(a1 + 60) = v24;
    v14 = *(_DWORD *)(a2 + 468);
    if ((v14 & 0x200) == 0)
    {
LABEL_34:
      if ((v14 & 0x400) == 0) {
        goto LABEL_35;
      }
      goto LABEL_74;
    }
  }

  else if ((v14 & 0x200) == 0)
  {
    goto LABEL_34;
  }

  v25 = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 468) |= 0x200u;
  *(void *)(a1 + 64) = v25;
  v14 = *(_DWORD *)(a2 + 468);
  if ((v14 & 0x400) == 0)
  {
LABEL_35:
    if ((v14 & 0x800) == 0) {
      goto LABEL_36;
    }
    goto LABEL_75;
  }

  if ((v5 & 0xFF0000) == 0) {
    goto LABEL_41;
  }
  if ((v5 & 0x10000) != 0)
  {
    v22 = *(void *)(a2 + 136);
    *(_DWORD *)(a1 + 300) |= 0x10000u;
    *(void *)(a1 + 136) = v22;
    id v5 = *(_DWORD *)(a2 + 300);
    if ((v5 & 0x20000) == 0)
    {
LABEL_34:
      if ((v5 & 0x40000) == 0) {
        goto LABEL_35;
      }
      goto LABEL_68;
    }
  }

  else if ((v5 & 0x20000) == 0)
  {
    goto LABEL_34;
  }

  v23 = *(void *)(a2 + 144);
  *(_DWORD *)(a1 + 300) |= 0x20000u;
  *(void *)(a1 + 144) = v23;
  id v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x40000) == 0)
  {
LABEL_35:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_69;
  }

  v17 = *(_DWORD *)(a1 + 56);
  v18 = (v17 + v4);
  if (v17 >= 1)
  {
    v19 = 0LL;
    do
    {
      v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100099CA8( *(void *)(*(void *)(a1 + 48) + 8 * v19),  a2);
      v21 = (int)v20;
      else {
        v22 = 1;
      }
      v18 = (v21 + v18 + v22);
      ++v19;
    }

    while (v19 < *(int *)(a1 + 56));
  }

  v23 = *(void **)(a1 + 8);
  if (v23 && *v23 != v23[1]) {
    v18 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v18;
  *(_DWORD *)(a1 + 72) = v18;
  return v18;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 32),  a2,  a4);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_33;
  }

  v20 = *((_DWORD *)this + 40);
  if ((v20 & 0x40) != 0)
  {
    v21 = *((void *)this + 7);
    *(_BYTE *)v4 = 57;
    *(void *)((char *)v4 + 1) = v21;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    v20 = *((_DWORD *)this + 40);
  }

  if ((v20 & 0x80) != 0)
  {
    v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(_BYTE *)v4 = 64;
    if (v22 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v22,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v22;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  v23 = *((_DWORD *)this + 40);
  if ((v23 & 0x100) != 0)
  {
    v24 = *((void *)this + 8);
    *(_BYTE *)v4 = 74;
    else {
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v24 + 23);
    }
    if (v25 > 0x7F)
    {
      v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v25,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v25;
      v26 = (_DWORD)v4 + 2;
    }

    v27 = *(char *)(v24 + 23);
    if (v27 >= 0) {
      v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24;
    }
    else {
      v28 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v24;
    }
    if (v27 >= 0) {
      v29 = (const void *)*(unsigned __int8 *)(v24 + 23);
    }
    else {
      v29 = (const void *)*(unsigned int *)(v24 + 8);
    }
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v28,  v29,  v26,  a4);
    v23 = *((_DWORD *)this + 40);
  }

  if ((v23 & 0x200) != 0)
  {
    v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
    *(_BYTE *)v4 = 80;
    if (v30 > 0x7F)
    {
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v30,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v30;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  v31 = *((_DWORD *)this + 40);
  if ((v31 & 0x400) != 0)
  {
    v32 = *((void *)this + 9);
    *(_BYTE *)v4 = 89;
    *(void *)((char *)v4 + 1) = v32;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    v31 = *((_DWORD *)this + 40);
    if ((v31 & 0x800) == 0)
    {
LABEL_57:
      if ((v31 & 0x1000) == 0) {
        goto LABEL_58;
      }
      goto LABEL_62;
    }
  }

  else if ((v31 & 0x800) == 0)
  {
    goto LABEL_57;
  }

  v33 = *((void *)this + 10);
  *(_BYTE *)v4 = 97;
  *(void *)((char *)v4 + 1) = v33;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  v31 = *((_DWORD *)this + 40);
  if ((v31 & 0x1000) == 0)
  {
LABEL_58:
    if ((v31 & 0x2000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_63;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 36),  (int)a2,  a4);
  v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x40) == 0)
  {
LABEL_7:
    if ((v6 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_33;
  }

  if ((*((_BYTE *)this + 52) & 0x20) != 0)
  {
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    *(_BYTE *)id v3 = 48;
    if (v17 > 0x7F)
    {
      id v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v17;
      id v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  v20 = (void *)*((void *)this + 1);
  v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v18 = v20;
  if (!v20 || *v18 == v18[1]) {
    return v3;
  }
  else {
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v19,  v3,  a3);
  }
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(_DWORD *)(v5 + 48),  a2,  a4);
  v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }

  v18 = *(void **)(a1 + 8);
  if (v18 && *v18 != v18[1]) {
    v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

  v19 = *((_BYTE *)this + 48);
  *(_BYTE *)id v3 = 48;
  *((_BYTE *)v3 + 1) = v19;
  id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  v8 = *((_DWORD *)this + 15);
  if ((v8 & 0x40) == 0)
  {
LABEL_14:
    if ((v8 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }

  v21 = (void *)*((void *)this + 1);
  v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v19 = v21;
  if (!v21 || *v19 == v19[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v20,  v4,  a3);
  }
}

  v20 = *(_BYTE *)(a2 + 37);
  *(_DWORD *)(a1 + 84) |= 8u;
  *(_BYTE *)(a1 + 37) = v20;
  v13 = *(_DWORD *)(a2 + 84);
  if ((v13 & 0x10) == 0)
  {
LABEL_17:
    if ((v13 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_33:
    v22 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 84) |= 0x20u;
    *(_DWORD *)(a1 + 32) = v22;
    v13 = *(_DWORD *)(a2 + 84);
    if ((v13 & 0x40) == 0)
    {
LABEL_19:
      if ((v13 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }

    goto LABEL_34;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  *(unsigned __int8 *)(v5 + 39),  (BOOL)a2,  a4);
  if ((*(_DWORD *)(v5 + 84) & 0x800) != 0) {
LABEL_13:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  (int)a2,  *(float *)(v5 + 52),  a3);
LABEL_14:
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD,  *(void *)(*(void *)(v5 + 56) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 64));
  }

  v10 = *(void **)(v5 + 8);
  v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

  v22 = *((_DWORD *)this + 11);
  *(_BYTE *)id v3 = 69;
  *(_DWORD *)((char *)v3 + 1) = v22;
  id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  id v5 = *((_DWORD *)this + 21);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }

  v15 = *(void *)(a1 + 40);
  if (!v15) {
    v15 = *(void *)(qword_1008005B8 + 40);
  }
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000E8D88(v15, a2);
  v17 = (int)v16;
  else {
    v18 = 1;
  }
  v4 = (v4 + v17 + v18 + 1);
  if ((*(_DWORD *)(a1 + 64) & 0x40) != 0)
  {
LABEL_37:
    v19 = *(void *)(a1 + 48);
    if (!v19) {
      v19 = *(void *)(qword_1008005B8 + 48);
    }
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000E9E88(v19, a2);
    v21 = (int)v20;
    else {
      v22 = 1;
    }
    v4 = (v4 + v21 + v22 + 1);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  *(_DWORD *)(v5 + 48),  a2,  a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }

  v11 = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 140) |= 0x400u;
  *(_DWORD *)(a1 + 96) = v11;
  id v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 0x800) == 0)
  {
LABEL_23:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_34;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(double *)(v5 + 64),  a3);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_33;
  }

  v11 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 124) |= 8u;
  *(_DWORD *)(a1 + 32) = v11;
  id v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_33:
    v13 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 124) |= 0x20u;
    *(_DWORD *)(a1 + 40) = v13;
    id v5 = *(_DWORD *)(a2 + 124);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    goto LABEL_34;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(float *)(v5 + 44),  a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_33;
  }

  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 9);
  *(_BYTE *)a2 = 88;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v15, a2 + 1, a3);
  v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }

          v23 = (_BYTE *)*((void *)this + 1);
          v24 = (_BYTE *)*((void *)this + 2);
          if (v23 >= v24 || *v23 != 9)
          {
            if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }

            goto LABEL_2;
          }

          *((void *)this + 1) = v23 + 1;
        }

        return 0LL;
      }

      if (v10 == 2) {
        break;
      }
    }

    if (v10 == 4) {
      return 1LL;
    }
  }

  result = sub_10004C598(this, v6);
  if ((_DWORD)result) {
    goto LABEL_31;
  }
  return result;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  (int)a2,  *(double *)(v5 + 96),  a3);
  v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x400) == 0)
  {
LABEL_16:
    if ((v8 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_33;
  }

  v19 = *((void *)this + 9);
  *(_BYTE *)id v3 = 57;
  *(void *)((char *)v3 + 1) = v19;
  id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x80) == 0)
  {
LABEL_16:
    if ((v10 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_33;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 56),  a3);
  v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }

        v11 = *(void *)(a1 + 88);
        v12 = *(unsigned __int8 *)(v11 + 23);
        v13 = v12;
        v14 = *(void *)(v11 + 8);
        if ((v12 & 0x80u) == 0) {
          v15 = *(unsigned __int8 *)(v11 + 23);
        }
        else {
          v15 = v14;
        }
        if (v15 >= 0x80)
        {
          v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15,  a2);
          v12 = *(unsigned __int8 *)(v11 + 23);
          v14 = *(void *)(v11 + 8);
          id v3 = *(_DWORD *)(a1 + 140);
          v13 = *(_BYTE *)(v11 + 23);
        }

        else
        {
          v16 = 1;
        }

        if (v13 < 0) {
          v12 = v14;
        }
        v6 += v16 + v12 + 1;
        goto LABEL_40;
      }
    }

    else if ((v3 & 0x200) == 0)
    {
      goto LABEL_21;
    }

    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
    if (v9 >= 0x80)
    {
      id v3 = *(_DWORD *)(a1 + 140);
    }

    else
    {
      v10 = 2;
    }

    v6 += v10;
    if ((v3 & 0x400) == 0) {
      goto LABEL_40;
    }
    goto LABEL_31;
  }

      (*(void (**)(void))(*(void *)v19 + 8 * v20))();
      return a2 & 1;
    default:
      return a2 & 1;
  }

  if (SHIBYTE(v32) < 0) {
    operator delete(v31[1]);
  }
  if (SHIBYTE(v31[0]) < 0) {
    operator delete(v30[0]);
  }
  if (SHIBYTE(v37) < 0) {
    operator delete(v36[1]);
  }
  if (SHIBYTE(v36[0]) < 0) {
    operator delete(v35[0]);
  }
  if (SHIBYTE(v42) < 0) {
    operator delete(*((void **)&v41 + 1));
  }
  if (SBYTE7(v41) < 0) {
    operator delete((void *)v40);
  }
}

        if (v32[1]) {
          v32[1] = 0;
        }
        goto LABEL_33;
      }
    }

    v19 = 5;
    if ((v10 & 1) == 0)
    {
      LOBYTE(v10) = v9;
      goto LABEL_29;
    }

    v20 = 9;
    LOBYTE(v10) = v9;
    goto LABEL_26;
  }

  v21 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_1003A2CE8(v21, v22, v23, v24, v25, v26, v27, v28);
  }
LABEL_46:
  if (v47)
  {
    v48 = (unsigned __int8 *)v47;
    operator delete(v47);
  }

  return v7 != v8;
}

  v27 = sub_100288B90(v15, &v38, a1 + 32);
  *(_WORD *)(a1 + 680) = v27;
  *(_BYTE *)(a1 + 682) = BYTE2(v27);
  if (v39)
  {
    std::__shared_weak_count::__release_weak(v39);
    v28 = *(unsigned __int8 *)(a1 + 682);
  }

  else
  {
    v28 = BYTE2(v27);
  }

  if (!v28)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A35B4();
    }
LABEL_45:
    v32 = 0xFFFFFFFFLL;
    goto LABEL_46;
  }

  v29 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
  {
    v30 = (void *)(a1 + 536);
    if (!*(_BYTE *)(a1 + 682)) {
      sub_100006080();
    }
    v31 = *(unsigned __int16 *)(a1 + 680);
    *(_DWORD *)buf = 136315394;
    *(void *)&buf[4] = v30;
    *(_WORD *)&buf[12] = 1024;
    *(_DWORD *)&buf[14] = v31;
    _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,Service registration success. (Session ID: %s, Ticket: %d)",  buf,  0x12u);
  }

  if (*(_BYTE *)(a1 + 820)) {
    *(_BYTE *)(a1 + 820) = 0;
  }
  v32 = 0LL;
  atomic_store(1u, (unsigned __int8 *)(a1 + 836));
LABEL_46:
  v33 = v41;
  if (v41)
  {
    v34 = (unint64_t *)&v41->__shared_owners_;
    do
      v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }

  return v32;
}

  sub_100137614(v29, a1 + 952);
  if (*(_BYTE *)(a1 + 984))
  {
    *(_BYTE *)(a1 + 984) = 0;
  }

  if (!*v6)
  {
    if (!v31) {
      __assert_rtn("_alishaSendRangeEnableCommand", "NIServerRoseSession.mm", 1047, "roseServiceErrorCopy.has_value()");
    }
    if (v29[0] == 2002LL) {
      v21 = -1022;
    }
    else {
      v21 = -1023;
    }
    *(_DWORD *)a3 = v21;
    *(_BYTE *)(a3 + 4) = 0;
    *(_BYTE *)(a3 + 38) = 0;
    goto LABEL_56;
  }

  sub_100275694(*v6, (uint64_t)v24);
  v14 = *v6;
  const NSErrorUserInfoKey *v6 = 0LL;
  if (v14) {
    sub_1002766C4(a1 + 1056, v14);
  }
  if (!v25)
  {
    v22 = "alishaUpdateCopy.range_response != nullptr";
    v23 = 1039;
    goto LABEL_65;
  }

  if (!*(_BYTE *)(a1 + 682)) {
    sub_100006080();
  }
  if (*(unsigned __int16 *)v25 != *(unsigned __int16 *)(a1 + 680))
  {
    v22 = "alishaUpdateCopy.range_response->ticket_id == fServiceTicketId.value()";
    v23 = 1040;
LABEL_65:
    __assert_rtn("_alishaSendRangeEnableCommand", "NIServerRoseSession.mm", v23, v22);
  }

  *(_DWORD *)a3 = sub_1002BF768(*((unsigned __int16 *)v25 + 11));
  v15 = v25;
  v16 = __p;
  v17 = *((_OWORD *)v25 + 1);
  *(_OWORD *)(a3 + 4) = *(_OWORD *)v25;
  *(_OWORD *)(a3 + 20) = v17;
  *(_WORD *)(a3 + 36) = v15[16];
  *(_BYTE *)(a3 + 38) = 1;
  __p = 0LL;
  if (v16) {
    operator delete(v16);
  }
  v18 = v27;
  v27 = 0LL;
  if (v18) {
    operator delete(v18);
  }
  v19 = v26;
  v26 = 0LL;
  if (v19) {
    operator delete(v19);
  }
  v20 = v25;
  v25 = 0LL;
  if (v20) {
    operator delete(v20);
  }
  if (v31)
  {
LABEL_56:
    if (v30 < 0) {
      operator delete((void *)v29[1]);
    }
  }

      id v3 = a1[41];
      v4 = a1[42];
    }

    v66 = v9;
    v22 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134218240;
      *(void *)&buf[4] = v66;
      *(_WORD *)&buf[12] = 2048;
      *(double *)&buf[14] = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "#sa_algo_moving_findee,Cached range measurement at %f s can't be matched with peer pose (removed), first peer pose at %f",  buf,  0x16u);
    }

void *sub_100004000@<X0>(int a1@<W0>, void *a2@<X8>)
{
  if (a1) {
    v2 = "TriggerRequired";
  }
  else {
    v2 = "NoTriggerRequired";
  }
  return sub_1000065CC(a2, v2);
}

void *sub_100004020@<X0>(int a1@<W0>, void *a2@<X8>)
{
  if (a1) {
    v2 = "BTAidedAcquisition";
  }
  else {
    v2 = "DirectAcquisition";
  }
  return sub_1000065CC(a2, v2);
}

void *sub_100004040@<X0>(int a1@<W0>, void *a2@<X8>)
{
  if (a1 == 100)
  {
    v2 = "Unspecified";
  }

  else if (a1 == 1)
  {
    v2 = "Responder";
  }

  else
  {
    v2 = "Initiator";
  }

  return sub_1000065CC(a2, v2);
}

void *sub_10000407C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A1B78[a1]);
}

void *sub_100004090@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A1BD0[a1]);
}

void *sub_1000040A4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A1C18[a1]);
}

void *sub_1000040B8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A1C38[a1]);
}

uint64_t sub_1000040CC(uint64_t a1)
{
  v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }

  return a1;
}

void sub_10000417C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000447C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
  _Unwind_Resume(a1);
}

id sub_1000044D4(void *a1)
{
  v2 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForEntitlement:@"com.apple.private.nearbyd.regulatory-assistance"]);
  if (v2 && (uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSNumber, v1), (objc_opt_isKindOfClass(v2, v3) & 1) != 0)) {
    id v4 = [v2 BOOLValue];
  }
  else {
    id v4 = 0LL;
  }

  return v4;
}

void sub_10000453C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000454C(uint64_t a1)
{
  v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 40);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "connection interrupted for pid: %d",  (uint8_t *)v6,  8u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained handleXPCDisconnection];
  }
}

void sub_10000460C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100004624(uint64_t a1)
{
  v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 40);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "connection invalidated for pid: %d",  (uint8_t *)v6,  8u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained handleXPCDisconnection];
  }
}

void sub_1000046E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000047D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1000047F8(uint64_t a1, int a2, uint64_t a3)
{
  if (a2 && *(_BYTE *)(a3 + 24))
  {
    WORD1(v4) = *(_WORD *)(a3 + 20);
    LOBYTE(v4) = *(_BYTE *)(a3 + 18);
    id v5 = objc_msgSend( [PRChipInfo alloc],  "initWithECID:chipID:boardID:bootMode:prodMode:secureMode:securityDomain:chipRevision:",  *(void *)a3,  *(unsigned __int16 *)(a3 + 8),  *(unsigned __int16 *)(a3 + 10),  *(unsigned int *)(a3 + 12),  *(unsigned __int8 *)(a3 + 16),  *(unsigned __int8 *)(a3 + 17),  v4);
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }
}

  ;
}

  ;
}

  ;
}

void sub_1000048DC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10000494C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000049B0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100004A64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  _Unwind_Resume(a1);
}

void sub_100004B38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100004BE8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100004C9C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100004D50( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000050CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, void *__p, uint64_t a25, int a26, __int16 a27, char a28, char a29)
{
  sub_1000060B4((uint64_t)&a9);
  if (a29 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void *sub_100005150()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F21F0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_1007F21F0))
  {
    sub_100354BC8(&unk_1007F1F00);
    __cxa_atexit((void (*)(void *))sub_10000613C, &unk_1007F1F00, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1007F21F0);
  }

  return &unk_1007F1F00;
}

void sub_1000051C8(_Unwind_Exception *a1)
{
}

void sub_1000051E0(id a1, id a2, id a3, BOOL *a4)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412546;
    id v9 = v5;
    __int16 v10 = 2112;
    id v11 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "    %@ : %@", (uint8_t *)&v8, 0x16u);
  }
}

void sub_1000052AC(id a1, NSString *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = a2;
  id v5 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138477827;
    uint64_t v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%{private}@", (uint8_t *)&v6, 0xCu);
  }
}

void sub_100005354(id a1, NSString *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = a2;
  id v5 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138543362;
    uint64_t v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%{public}@", (uint8_t *)&v6, 0xCu);
  }
}

void sub_1000054C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100005578(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000055D4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100005638( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1000056A8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000575C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1000058B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000595C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000059F8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100005B68(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_100005D60( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100005E0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100006008(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100006080()
{
  exception = __cxa_allocate_exception(8uLL);
}

uint64_t sub_1000060B4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 112))
  {
    sub_1000060F4(a1 + 32);
  }

  return a1;
}

uint64_t sub_1000060F4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 64))
  {
  }

  return a1;
}

uint64_t sub_10000613C(uint64_t a1)
{
  v2 = (void *)(a1 + 712);
  int v3 = *(void **)(a1 + 736);
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    int v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  std::mutex::~mutex((std::mutex *)(a1 + 648));
  std::mutex::~mutex((std::mutex *)(a1 + 584));
  sub_1000061A4(a1 + 216);
  return sub_1000060B4(a1);
}

uint64_t sub_1000061A4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 352))
  {
    uint64_t v7 = (void **)(a1 + 328);
    sub_100006244(&v7);
    if (*(_BYTE *)(a1 + 312))
    {
      v2 = *(void **)(a1 + 288);
      if (v2)
      {
        *(void *)(a1 + 296) = v2;
        operator delete(v2);
      }
    }

    if (*(_BYTE *)(a1 + 248))
    {
      int v3 = *(void **)(a1 + 224);
      if (v3)
      {
        *(void *)(a1 + 232) = v3;
        operator delete(v3);
      }
    }

    if (*(_BYTE *)(a1 + 184))
    {
      uint64_t v4 = *(void **)(a1 + 160);
      if (v4)
      {
        *(void *)(a1 + 168) = v4;
        operator delete(v4);
      }
    }

    if (*(_BYTE *)(a1 + 120))
    {
      id v5 = *(void **)(a1 + 96);
      if (v5)
      {
        *(void *)(a1 + 104) = v5;
        operator delete(v5);
      }
    }
  }

  return a1;
}

void sub_100006244(void ***a1)
{
  v2 = *a1;
  if (*v2)
  {
    sub_100006284((uint64_t *)v2);
    operator delete(**a1);
  }

void sub_100006284(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 40LL)
  {
    uint64_t v4 = *(void **)(i - 24);
    if (v4)
    {
      *(void *)(i - 16) = v4;
      operator delete(v4);
    }
  }

  a1[1] = v2;
}

_BYTE *sub_1000062D0(_BYTE *__dst, uint64_t a2)
{
  *__dst = 0;
  __dst[112] = 0;
  if (*(_BYTE *)(a2 + 112))
  {
    sub_100006324(__dst, (__int128 *)a2);
    __dst[112] = 1;
  }

  return __dst;
}

void sub_100006310(_Unwind_Exception *a1)
{
}

void *sub_100006324(void *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }

  *((_DWORD *)__dst + 6) = *((_DWORD *)a2 + 6);
  sub_1000064BC((_BYTE *)__dst + 32, (uint64_t)(a2 + 2));
  __dst[13] = *((void *)a2 + 13);
  return __dst;
}

void sub_10000638C(_Unwind_Exception *exception_object)
{
}

void *sub_1000063A8(_BYTE *__dst, void *__src, unint64_t a3)
{
  id v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8LL) {
      sub_100006434();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFF8LL) + 8;
    if ((a3 | 7) != 0x17) {
      uint64_t v6 = a3 | 7;
    }
    uint64_t v7 = v6 + 1;
    int v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000LL;
    void *v5 = v8;
    id v5 = v8;
  }

  else
  {
    __dst[23] = a3;
  }

  return memmove(v5, __src, a3 + 1);
}

void sub_100006434()
{
}

void sub_100006448(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_100006498(exception, a1);
}

void sub_100006484(_Unwind_Exception *a1)
{
}

std::logic_error *sub_100006498(std::logic_error *a1, const char *a2)
{
  result = std::logic_error::logic_error(a1, a2);
  return result;
}

_BYTE *sub_1000064BC(_BYTE *a1, uint64_t a2)
{
  *a1 = 0;
  a1[64] = 0;
  if (*(_BYTE *)(a2 + 64))
  {
    sub_100006510((uint64_t)a1, (int *)a2);
    a1[64] = 1;
  }

  return a1;
}

void sub_1000064FC(_Unwind_Exception *a1)
{
}

uint64_t sub_100006510(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(_WORD *)(a1 + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)a1 = v4;
  if (*((char *)a2 + 31) < 0)
  {
    sub_1000063A8((_BYTE *)(a1 + 8), *((void **)a2 + 1), *((void *)a2 + 2));
  }

  else
  {
    __int128 v5 = *(_OWORD *)(a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(_OWORD *)(a1 + 8) = v5;
  }

  *(void *)(a1 + 32) = *((void *)a2 + 4);
  uint64_t v6 = (_BYTE *)(a1 + 40);
  if (*((char *)a2 + 63) < 0)
  {
    sub_1000063A8(v6, *((void **)a2 + 5), *((void *)a2 + 6));
  }

  else
  {
    __int128 v7 = *(_OWORD *)(a2 + 10);
    *(void *)(a1 + 56) = *((void *)a2 + 7);
    *(_OWORD *)uint64_t v6 = v7;
  }

  return a1;
}

void sub_1000065B0(_Unwind_Exception *exception_object)
{
}

void *sub_1000065CC(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8LL) {
    sub_100006434();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8LL) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000LL;
    *a1 = v6;
  }

  else
  {
    *((_BYTE *)a1 + 23) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }

  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

void sub_10000667C( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

void sub_100006694()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_100006710(_Unwind_Exception *a1)
{
}

void sub_100006728()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10040C4F0;
      v1[1] = unk_10040C500;
      v1[2] = xmmword_10040C510;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_1000067C8(_Unwind_Exception *a1)
{
}

void sub_1000067E0()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  uint64_t v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  int v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F4840 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F4830 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4830, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  size_t v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F4858 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F4848 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4848, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  id v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  id v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F4870 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F4860 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4860, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F4888 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F4878 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4878, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F48A0 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F4890 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4890, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F48B8 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F48A8 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F48A8, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F48D0 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F48C0 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F48C0, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F48E8 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F48D8 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F48D8, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F4900 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F48F0 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F48F0, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100006DD4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100006E48@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A1DF0[a1]);
}

void *sub_100006E5C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A1E48[a1]);
}

void *sub_100006E70@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A1E90[a1]);
}

void *sub_100006E84@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A1EB0[a1]);
}

void sub_100006F50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100007200(_Unwind_Exception *a1)
{
}

void sub_100007270()
{
}

void sub_100007278()
{
}

void sub_100007280()
{
}

void sub_100007288()
{
}

void sub_100007290(uint64_t a1, void *a2)
{
  __int128 v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained didLoseDevice:v3];
}

void sub_1000072D8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000072F0(uint64_t a1, void *a2)
{
  __int128 v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained didDiscoverDevice:v3];
}

void sub_100007338( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100007350(uint64_t a1)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_1003884B4();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained bluetoothServiceInterrupted];
}

void sub_1000073A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000073B8(uint64_t a1, void *a2)
{
  __int128 v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained didFailWithError:v3];
}

void sub_100007400( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100007418(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained bluetoothStateChanged];
}

void sub_10000744C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100007460(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained bluetoothAdvertisingAddressChanged];
}

void sub_100007494( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1000074A8(uint64_t a1, void *a2)
{
  __int128 v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained aopWorkaroundDataReceived:v3];
}

void sub_1000074F0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100007508(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained systemOverrideNotification];
}

void sub_10000753C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100007590(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  byte_1007F49E8 = [v1 BOOLForKey:@"EnableMarconiBypass"];
  __int128 v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    if (byte_1007F49E8) {
      id v3 = @"Yes";
    }
    else {
      id v3 = @"No";
    }
    int v4 = 138412290;
    size_t v5 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#ble,Marconi bypass enabled: %@",  (uint8_t *)&v4,  0xCu);
  }
}

void sub_10000767C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100007A60( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  _Unwind_Resume(a1);
}

void sub_100007AAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = sub_100023CC4();
  double v5 = *(double *)(a1 + 48);
  id WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v7 = (id *)WeakRetained;
  if (WeakRetained)
  {
    double v8 = v4 - v5;
    uint64_t v9 = WeakRetained + 16;
    if (*((_DWORD *)WeakRetained + 4) == 1)
    {
      id v10 = objc_loadWeakRetained((id *)WeakRetained + 3);
      if (v3)
      {
        id v11 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_10038868C((uint64_t)v3, v11, v12, v8);
        }
        *uint64_t v9 = 3;
        [v10 didFinishActivatingWithDiscoveryTokenData:0 error:v3];
      }

      else
      {
        v13 = (void *)objc_claimAutoreleasedReturnValue([v7[1] tokenData]);

        __int128 v14 = (os_log_s *)qword_1008000A0;
        if (v13)
        {
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
          {
            int v26 = 134217984;
            double v27 = v8;
            _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "#ble,Activation succeeded [%0.6f s]",  (uint8_t *)&v26,  0xCu);
          }

          *uint64_t v9 = 2;
          v15 = (void *)objc_claimAutoreleasedReturnValue( +[NIServerSpatialInteractionPayloadAggregator sharedInstance]( &OBJC_CLASS___NIServerSpatialInteractionPayloadAggregator,  "sharedInstance"));
          [v15 addPayloadChangeObserver:*(void *)(a1 + 32)];

          [v7 _executeActivationPendingOperations];
          __int128 v16 = (void *)objc_claimAutoreleasedReturnValue([v7[1] tokenData]);
          [v10 didFinishActivatingWithDiscoveryTokenData:v16 error:0];

          [v7 bluetoothStateChanged];
          [v7 bluetoothAdvertisingAddressChanged];
        }

        else
        {
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
            sub_100388624(v14, v17, v18, v19, v20, v21, v22, v23);
          }
          *uint64_t v9 = 3;
          NSErrorUserInfoKey v28 = NSLocalizedFailureReasonErrorKey;
          v29 = @"Activated session had no token";
          __int128 v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v29,  &v28,  1LL));
          v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"com.apple.NearbyInteraction",  -10017LL,  v24));
          [v10 didFinishActivatingWithDiscoveryTokenData:0 error:v25];
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      sub_100388700();
    }
  }
}

void sub_100007D54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100008128(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100008160(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addPeerDiscoveryToken:a2];
}

void sub_1000082BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100008524( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  _Unwind_Resume(a1);
}

void sub_100008578(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = sub_100023CC4();
  double v5 = *(double *)(a1 + 48);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    double v7 = v4 - v5;
    double v8 = (os_log_s *)(id)qword_1008000A0;
    uint64_t v9 = v8;
    if (v3)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        uint64_t v14 = CUPrintNSObjectMasked(*(void *)(a1 + 32), v10);
        v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
        int v16 = 138478339;
        uint64_t v17 = v15;
        __int16 v18 = 2048;
        double v19 = v7;
        __int16 v20 = 2112;
        id v21 = v3;
        _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "#ble,addPeerToken %{private}@ failed [%0.6f s]. Error: %@",  (uint8_t *)&v16,  0x20u);
      }

      [WeakRetained[6] removeObject:*(void *)(a1 + 32)];
    }

    else
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v12 = CUPrintNSObjectMasked(*(void *)(a1 + 32), v11);
        v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
        int v16 = 138478083;
        uint64_t v17 = v13;
        __int16 v18 = 2048;
        double v19 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#ble,addPeerToken %{private}@ succeeded [%0.6f s]",  (uint8_t *)&v16,  0x16u);
      }
    }
  }
}

void sub_100008710(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100008A30( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  __int16 v20 = v19;

  _Unwind_Resume(a1);
}

void sub_100008AA4(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = sub_100023CC4();
  double v5 = *(double *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    double v7 = v4 - v5;
    double v8 = (os_log_s *)(id)qword_1008000A0;
    uint64_t v9 = v8;
    if (v3)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        uint64_t v11 = CUPrintNSObjectMasked(*(void *)(a1 + 32), v10);
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
        int v16 = 138478339;
        uint64_t v17 = v12;
        __int16 v18 = 2048;
        double v19 = v7;
        __int16 v20 = 2112;
        id v21 = v3;
        _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "#ble,removePeerToken %{private}@ failed [%0.6f s]. Error: %@",  (uint8_t *)&v16,  0x20u);
      }
    }

    else if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = CUPrintNSObjectMasked(*(void *)(a1 + 32), v13);
      v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      int v16 = 138478083;
      uint64_t v17 = v15;
      __int16 v18 = 2048;
      double v19 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#ble,removePeerToken %{private}@ succeeded [%0.6f s]",  (uint8_t *)&v16,  0x16u);
    }
  }
}

void sub_100008C20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100008E0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000093AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000098E4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[1] setScanRate:30];
    double v4 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 40);
      unsigned int v6 = [v3[1] scanRate];
      int v7 = 134218240;
      uint64_t v8 = v5;
      __int16 v9 = 1024;
      unsigned int v10 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#ble,startScanningWithBurstPeriod burst expired [%0.1f s]. Setting BT scan rate to %d.",  (uint8_t *)&v7,  0x12u);
    }

    [v3 _cancelScanRateAdjustmentTimer];
  }
}

void sub_1000099D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100009C54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100009C6C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) removePeerDiscoveryToken:a2];
}

void sub_100009DFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000A32C(_Unwind_Exception *a1)
{
  uint64_t v5 = v2;

  _Unwind_Resume(a1);
}

void sub_10000A52C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10000A584(void *a1)
{
  id v1 = a1;
  if ([v1 length] != (id)6) {
    __assert_rtn( "PRBluetoothAdvertisingAddressToU64Identifier",  "PRBLEDiscoverySession.mm",  1078,  "[bluetoothAddress length] == kPRBluetoothAdvertisingAddressLengthBytes");
  }
  uint64_t v6 = 0LL;
  id v2 = [v1 copy];
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 _reverse]);
  objc_msgSend(v3, "getBytes:length:", &v6, objc_msgSend(v1, "length"));

  uint64_t v4 = v6;
  return v4;
}

void sub_10000A62C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000A7BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000A830( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10000AAFC(_Unwind_Exception *exception_object)
{
}

void sub_10000AB88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10000AC08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

LABEL_13:
  }

  std::mutex::unlock(v4);
}

  if ((v5 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v5 & 0x100) != 0)
  {
    int v16 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 72) |= 0x100u;
    *(_DWORD *)(a1 + 52) = v16;
    uint64_t v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
LABEL_30:
      __int16 v18 = *(_DWORD *)(a2 + 60);
      *(_DWORD *)(a1 + 72) |= 0x400u;
      *(_DWORD *)(a1 + 60) = v18;
      if ((*(_DWORD *)(a2 + 72) & 0x800) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_18;
    }
  }

  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }

  uint64_t v17 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) |= 0x200u;
  *(_DWORD *)(a1 + 56) = v17;
  uint64_t v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x400) != 0) {
    goto LABEL_30;
  }
LABEL_17:
  if ((v5 & 0x800) != 0)
  {
LABEL_18:
    int v7 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x800u;
    *(_DWORD *)(a1 + 64) = v7;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  if ((v5 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v5 & 0x100) != 0)
  {
    int v16 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 72) |= 0x100u;
    *(_DWORD *)(a1 + 52) = v16;
    uint64_t v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
LABEL_30:
      __int16 v18 = *(_DWORD *)(a2 + 60);
      *(_DWORD *)(a1 + 72) |= 0x400u;
      *(_DWORD *)(a1 + 60) = v18;
      if ((*(_DWORD *)(a2 + 72) & 0x800) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_18;
    }
  }

  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }

  uint64_t v17 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) |= 0x200u;
  *(_DWORD *)(a1 + 56) = v17;
  uint64_t v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x400) != 0) {
    goto LABEL_30;
  }
LABEL_17:
  if ((v5 & 0x800) != 0)
  {
LABEL_18:
    int v7 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x800u;
    *(_DWORD *)(a1 + 64) = v7;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  if ((v5 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v5 & 0x100) == 0)
  {
    if ((v5 & 0x200) == 0) {
      goto LABEL_16;
    }
LABEL_28:
    uint64_t v17 = *(_BYTE *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 0x200u;
    *(_BYTE *)(a1 + 32) = v17;
    if ((*(_DWORD *)(a2 + 40) & 0x400) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_17;
  }

  int v16 = *(_BYTE *)(a2 + 31);
  *(_DWORD *)(a1 + 40) |= 0x100u;
  *(_BYTE *)(a1 + 31) = v16;
  uint64_t v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 0x200) != 0) {
    goto LABEL_28;
  }
LABEL_16:
  if ((v5 & 0x400) != 0)
  {
LABEL_17:
    int v7 = *(_BYTE *)(a2 + 33);
    *(_DWORD *)(a1 + 40) |= 0x400u;
    *(_BYTE *)(a1 + 33) = v7;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  int v7 = *(void **)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 68) |= 0x100u;
      *(_DWORD *)(a1 + 56) = v7;
      uint64_t v5 = *(_DWORD *)(a2 + 68);
    }

    if ((v5 & 0x200) != 0)
    {
      uint64_t v8 = *(_DWORD *)(a2 + 60);
      *(_DWORD *)(a1 + 68) |= 0x200u;
      *(_DWORD *)(a1 + 60) = v8;
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

    __int16 v9 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 56) |= 8u;
    *(void *)(a1 + 32) = v9;
    if ((*(_DWORD *)(a2 + 56) & 0x10) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_14;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  if ((v5 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v5 & 0x100) != 0)
  {
    __int16 v20 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 232) |= 0x100u;
    *(_DWORD *)(a1 + 64) = v20;
    uint64_t v5 = *(_DWORD *)(a2 + 232);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_72;
    }
  }

  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }

  id v21 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 232) |= 0x200u;
  *(_DWORD *)(a1 + 68) = v21;
  uint64_t v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_73;
  }

  uint64_t v8 = *(void *)(v5 + 32);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1008003E8 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v8,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }

  if ((v5 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v5 & 0x100) == 0)
  {
    if ((v5 & 0x200) == 0) {
      goto LABEL_16;
    }
LABEL_28:
    uint64_t v17 = *(void *)(a2 + 80);
    *(_DWORD *)(a1 + 100) |= 0x200u;
    *(void *)(a1 + 80) = v17;
    if ((*(_DWORD *)(a2 + 100) & 0x400) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_17;
  }

  int v16 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 100) |= 0x100u;
  *(void *)(a1 + 72) = v16;
  uint64_t v5 = *(_DWORD *)(a2 + 100);
  if ((v5 & 0x200) != 0) {
    goto LABEL_28;
  }
LABEL_16:
  if ((v5 & 0x400) != 0)
  {
LABEL_17:
    int v7 = *(void *)(a2 + 88);
    *(_DWORD *)(a1 + 100) |= 0x400u;
    *(void *)(a1 + 88) = v7;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  if (*((int *)this + 16) >= 1)
  {
    uint64_t v12 = 0LL;
    do
    {
      uint64_t v13 = *(unsigned int **)(*((void *)this + 7) + 8 * v12);
      *(_BYTE *)id v3 = 50;
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[24];
      if (v14 > 0x7F)
      {
        v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  (int)v3 + 1,  a3);
      }

      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v14;
        v15 = (uint64_t)v3 + 2;
      }

      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000BF604( (wireless_diagnostics::google::protobuf::internal::WireFormat *)v13,  v15,  a3);
      ++v12;
    }

    while (v12 < *((int *)this + 16));
  }

  __int16 v18 = (void *)*((void *)this + 1);
  uint64_t v17 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v16 = v18;
  if (!v18 || *v16 == v16[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v17,  v3,  a3);
  }
}

  if ((v5 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v5 & 0x100) == 0)
  {
    if ((v5 & 0x200) == 0) {
      goto LABEL_16;
    }
LABEL_32:
    __int16 v18 = *(_BYTE *)(a2 + 52);
    *(_DWORD *)(a1 + 60) |= 0x200u;
    *(_BYTE *)(a1 + 52) = v18;
    if ((*(_DWORD *)(a2 + 60) & 0x400) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_17;
  }

  uint64_t v17 = *(_BYTE *)(a2 + 51);
  *(_DWORD *)(a1 + 60) |= 0x100u;
  *(_BYTE *)(a1 + 51) = v17;
  uint64_t v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 0x200) != 0) {
    goto LABEL_32;
  }
LABEL_16:
  if ((v5 & 0x400) != 0)
  {
LABEL_17:
    int v7 = *(_BYTE *)(a2 + 53);
    *(_DWORD *)(a1 + 60) |= 0x400u;
    *(_BYTE *)(a1 + 53) = v7;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  unsigned int v10 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 56) |= 4u;
  *(void *)(a1 + 32) = v10;
  uint64_t v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_8:
  if ((v5 & 0x10) != 0)
  {
LABEL_9:
    uint64_t v6 = *(_BYTE *)(a2 + 48);
    *(_DWORD *)(a1 + 56) |= 0x10u;
    *(_BYTE *)(a1 + 48) = v6;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(void *)(v5 + 32),  (unint64_t)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }

  uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 4);
  *(_BYTE *)a2 = 24;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v13,  (unint64_t)a2 + 1,  a3);
  uint64_t v5 = *((_DWORD *)this + 14);
  if ((v5 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_5:
  if ((v5 & 0x10) != 0)
  {
LABEL_6:
    uint64_t v6 = *((_BYTE *)this + 48);
    *(_BYTE *)a2 = 40;
    *((_BYTE *)a2 + 1) = v6;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  }

  int v7 = *(void *)(v5 + 40);
  if (!v7) {
    int v7 = *(void *)(qword_100800500 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  v7,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }

  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      int v7 = *(void *)(a2 + 64);
      *(_DWORD *)(a1 + 88) |= 0x100u;
      *(void *)(a1 + 64) = v7;
      uint64_t v5 = *(_DWORD *)(a2 + 88);
    }

    if ((v5 & 0x200) != 0)
    {
      uint64_t v8 = *(void *)(a2 + 72);
      *(_DWORD *)(a1 + 88) |= 0x200u;
      *(void *)(a1 + 72) = v8;
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      int v7 = *(void *)(a2 + 48);
      *(_DWORD *)(a1 + 72) |= 0x100u;
      *(void *)(a1 + 48) = v7;
      uint64_t v5 = *(_DWORD *)(a2 + 72);
    }

    if ((v5 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 72) |= 0x200u;
      uint64_t v8 = *(void **)(a1 + 56);
      if (!v8)
      {
        uint64_t v8 = operator new(0x20uLL);
        sub_1000DF758(v8);
        *(void *)(a1 + 56) = v8;
      }

      __int16 v9 = *(void *)(a2 + 56);
      if (!v9) {
        __int16 v9 = *(void *)(qword_100800550 + 56);
      }
      sub_1000DF7A0(v8, v9);
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  unsigned int v10 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 40) |= 4u;
  *(_DWORD *)(a1 + 20) = v10;
  uint64_t v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_8:
  if ((v5 & 0x10) != 0)
  {
LABEL_9:
    uint64_t v6 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    *(void *)(a1 + 24) = v6;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(float *)(v5 + 20),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }

  int v7 = *(void *)(v5 + 32);
  if (!v7) {
    int v7 = *(void *)(qword_1008005B8 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  v7,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }

  if ((v5 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v5 & 0x100) != 0)
  {
    int v16 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 72) |= 0x100u;
    *(_DWORD *)(a1 + 40) = v16;
    uint64_t v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_33;
    }
  }

  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }

  uint64_t v17 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 72) |= 0x200u;
  *(_DWORD *)(a1 + 44) = v17;
  uint64_t v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_34;
  }

  if ((v5 & 0x100) != 0)
  {
    int v7 = *(const std::string **)(a2 + 64);
    *(_DWORD *)(a1 + 80) |= 0x100u;
    uint64_t v8 = *(std::string **)(a1 + 64);
    if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      uint64_t v8 = (std::string *)operator new(0x18uLL);
      v8->__r_.__value_.__l.__size_ = 0LL;
      v8->__r_.__value_.__l.__cap_ = 0LL;
      v8->__r_.__value_.__r.__words[0] = 0LL;
      *(void *)(a1 + 64) = v8;
    }

    std::string::operator=(v8, v7);
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 48);
      if (v7 >= 3) {
        sub_10038C544();
      }
      *(_DWORD *)(a1 + 56) |= 0x100u;
      *(_DWORD *)(a1 + 48) = v7;
      uint64_t v5 = *(_DWORD *)(a2 + 56);
    }

    if ((v5 & 0x200) != 0)
    {
      uint64_t v8 = *(const std::string **)(a2 + 40);
      *(_DWORD *)(a1 + 56) |= 0x200u;
      __int16 v9 = *(std::string **)(a1 + 40);
      if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        __int16 v9 = (std::string *)operator new(0x18uLL);
        v9->__r_.__value_.__l.__size_ = 0LL;
        v9->__r_.__value_.__l.__cap_ = 0LL;
        v9->__r_.__value_.__r.__words[0] = 0LL;
        *(void *)(a1 + 40) = v9;
      }

      std::string::operator=(v9, v8);
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  __int16 v9 = *((_BYTE *)this + 32);
  *(_BYTE *)uint64_t v4 = 24;
  *((_BYTE *)v4 + 1) = v9;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  uint64_t v6 = *((_DWORD *)this + 14);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }

    __int16 v9 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 8u;
    *(void *)(a1 + 40) = v9;
    if ((*(_DWORD *)(a2 + 60) & 0x10) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_14;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(double *)(v4 + 32),  a3);
  uint64_t v5 = *(_DWORD *)(v4 + 60);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }

  if ((v5 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v5 & 0x100) != 0)
  {
    uint64_t v17 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 112) |= 0x100u;
    *(void *)(a1 + 72) = v17;
    uint64_t v5 = *(_DWORD *)(a2 + 112);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_33;
    }
  }

  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }

  __int16 v18 = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 112) |= 0x200u;
  *(_DWORD *)(a1 + 104) = v18;
  uint64_t v5 = *(_DWORD *)(a2 + 112);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
LABEL_34:
    __int16 v20 = *(void *)(a2 + 88);
    *(_DWORD *)(a1 + 112) |= 0x800u;
    *(void *)(a1 + 88) = v20;
    if ((*(_DWORD *)(a2 + 112) & 0x1000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_19;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(unsigned __int8 *)(v5 + 21),  (BOOL)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }

  unsigned int v10 = (void *)*((void *)this + 1);
  __int16 v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }
  else {
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v9,  a2,  a3);
  }
}

  if ((v5 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v5 & 0x100) != 0)
  {
    v15 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 124) |= 0x100u;
    *(void *)(a1 + 56) = v15;
    uint64_t v5 = *(_DWORD *)(a2 + 124);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_38;
    }
  }

  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }

  int v16 = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 124) |= 0x200u;
  *(void *)(a1 + 64) = v16;
  uint64_t v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }

  if ((v5 & 0x100) != 0)
  {
    int v7 = *(void *)(a2 + 80);
    *(_DWORD *)(a1 + 92) |= 0x100u;
    *(void *)(a1 + 80) = v7;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  __int16 v9 = *((void *)this + 4);
  *(_BYTE *)uint64_t v4 = 25;
  *(void *)((char *)v4 + 1) = v9;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  uint64_t v6 = *((_DWORD *)this + 35);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }

  uint64_t v8 = 0LL;
LABEL_19:
  __int16 v9 = v5 | self->_finderAttached;
  unsigned int v10 = v8 | HIBYTE(self->_finderStartRangingOptions.var0.__val_.secondary_scheduling_interval_usec.var0.__val_);
  result.var2 = v10;
  result.var3 = HIDWORD(v10);
  result.var0 = v9;
  result.var1 = HIDWORD(v9);
  return result;
}

    *a2 = ~v5;
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_1003A23C0();
  }

  std::filebuf::~filebuf(v12);
  std::ios::~ios(&v14);
  return v3 != 0;
}

    uint64_t v5 = v3 + 1;
    int v7 = 1;
    uint64_t v8 = __dst[1];
    __int16 v9 = __dst;
    goto LABEL_19;
  }

    sub_100126B2C("unordered_map::at: key not found");
  }

    uint64_t v17 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int16 v18 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "#findalgs-findee, Encountered a disruption in VIO tracking.  Resetting.  ",  v18,  2u);
    }

    if (*(_BYTE *)(a1 + 312)) {
      *(_BYTE *)(a1 + 312) = 0;
    }
    if (*(_BYTE *)(a1 + 448)) {
      *(_BYTE *)(a1 + 448) = 0;
    }
    return;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_1003A8DB8();
  }
}

  if (v23)
  {
    __int128 v24 = v23;
    operator delete(v23);
  }

  return v5;
}

void sub_10000AE3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000AF90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000AFA4( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_10000AFB4(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void sub_10000AFC4(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

  ;
}

  ;
}

  ;
}

void sub_10000B000( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_10000B010(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(float *)a6 = a1;
  *(void *)(a6 + 4) = v7;
  *(_WORD *)(a6 + 12) = 2080;
  *(void *)(a6 + 14) = v6;
}

  ;
}

  ;
}

void sub_10000B054()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_10000B0D0(_Unwind_Exception *a1)
{
}

void sub_10000B0E8()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10040C5A8;
      v1[1] = unk_10040C5B8;
      v1[2] = xmmword_10040C5C8;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_10000B188(_Unwind_Exception *a1)
{
}

void sub_10000B1A0()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  uint64_t v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  id v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F4918 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F4908 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4908, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  uint64_t v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F4930 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F4920 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4920, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  __int16 v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F4948 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F4938 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4938, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  uint64_t v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F4960 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F4950 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4950, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  uint64_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  double v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F4978 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F4968 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4968, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  id v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F4990 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F4980 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4980, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  double v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F49A8 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F4998 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4998, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F49C0 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F49B0 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F49B0, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F49D8 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F49C8 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F49C8, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_10000B794( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10000B808@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A1F50[a1]);
}

void *sub_10000B81C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A1FA8[a1]);
}

void *sub_10000B830@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A1FF0[a1]);
}

void *sub_10000B844@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2010[a1]);
}

uint64_t sub_10000B858(void *a1, unsigned __int8 *a2, void *a3)
{
  id v5 = a1;
  __int128 v6 = v5;
  if (v5)
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:PRP2PArgsRangingRole]);
    v175 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRP2PArgsRangingInterval]);
    __int128 v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRP2PArgsTxAntennaMask]);
    v174 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRP2PArgsRxAntennaMask]);
    v165 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRP2PArgsRxSyncSearchAntennaMask]);
    v170 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRDebugConfigArgTxAntennaMask2]);
    v164 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRDebugConfigArgRxAntennaMask2]);
    v157 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRDebugConfigArgRxSyncSearchAntennaMask2]);
    v169 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRDebugConfigArgSOIRSSIThreshold2]);
    v173 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRP2PArgsTxPreamble]);
    v172 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRP2PArgsRxPreamble]);
    v171 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRP2PArgsTxPacketType]);
    v167 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRP2PArgsRxPacketType]);
    v168 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRP2PArgsRoseDebugFlags]);
    v166 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRP2PArgsDualRangingMode]);
    v163 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRDebugConfigArgNAccessSlotsMin]);
    v159 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRDebugConfigArgNAccessSlotsMax]);
    v162 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRDebugConfigArgRangingIntervalMin]);
    v158 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRDebugConfigArgRangingIntervalMax]);
    v160 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRDebugConfigArgRxMiniSlotSize]);
    v161 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKey:PRDebugConfigArgTxMiniSlotSize]);
    int v10 = *((_DWORD *)sub_100005150() + 187);
    if (v7)
    {
      uint64_t v11 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
      if ((objc_opt_isKindOfClass(v7, v11) & 1) != 0)
      {
        unsigned __int8 v12 = [v7 intValue];
        sub_10032B0DC(v12, v13, v14, v15, v16, v17, v18, v19);
        unsigned __int8 v20 = [v7 integerValue];
        if (!a2[1]) {
          a2[1] = 1;
        }
        *a2 = v20;
        id v21 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          if (!a2[1]) {
            sub_100006080();
          }
          int v22 = *a2;
          LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
          HIDWORD(buf.__r_.__value_.__r.__words[0]) = v22;
          _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got role: %d",  (uint8_t *)&buf,  8u);
        }
      }
    }

    if (v175)
    {
      uint64_t v23 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
      if ((objc_opt_isKindOfClass(v175, v23) & 1) != 0)
      {
        unsigned __int16 v24 = (unsigned __int16)[v175 integerValue];
        if (!a2[78]) {
          a2[78] = 1;
        }
        *((_WORD *)a2 + 38) = v24;
        v25 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          if (!a2[78]) {
            sub_100006080();
          }
          int v26 = *((unsigned __int16 *)a2 + 38);
          LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
          HIDWORD(buf.__r_.__value_.__r.__words[0]) = v26;
          _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got interval_ms: %d",  (uint8_t *)&buf,  8u);
        }
      }
    }

    if (v8)
    {
      uint64_t v27 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
      if ((objc_opt_isKindOfClass(v8, v27) & 1) != 0)
      {
        if (!sub_10000DE98(v8))
        {
          v53 = (os_log_s *)(id)qword_1008000A0;
          if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
            sub_100389318((uint64_t)&buf, (int)[v8 intValue]);
          }

          if (!a3) {
            goto LABEL_314;
          }
          NSErrorUserInfoKey v217 = NSLocalizedDescriptionKey;
          v218 = @"got invalid tx_ant_mask.";
          id v54 = (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v218,  &v217,  1LL));
          id v55 = PRErrorWithCodeAndUserInfo(100LL, v54);
          id v56 = (id)objc_claimAutoreleasedReturnValue(v55);
          goto LABEL_236;
        }

        unsigned __int8 v28 = [v8 integerValue];
        if (!a2[3]) {
          a2[3] = 1;
        }
        a2[2] = v28;
        v29 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        {
          if (!a2[3]) {
            sub_100006080();
          }
          int v30 = a2[2];
          LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
          HIDWORD(buf.__r_.__value_.__r.__words[0]) = v30;
          _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got tx_ant_mask: 0x%x",  (uint8_t *)&buf,  8u);
        }
      }
    }

    if (v174)
    {
      uint64_t v31 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
      if ((objc_opt_isKindOfClass(v174, v31) & (v165 != 0LL)) == 1)
      {
        uint64_t v32 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
        if ((objc_opt_isKindOfClass(v165, v32) & 1) != 0)
        {
          if (!sub_10000DF18(v174))
          {
            v57 = (os_log_s *)(id)qword_1008000A0;
            if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
              sub_1003892E4((uint64_t)&buf, (int)[v174 intValue]);
            }

            if (!a3) {
              goto LABEL_314;
            }
            NSErrorUserInfoKey v215 = NSLocalizedDescriptionKey;
            v216 = @"got invalid rx_ant_mask.";
            id v54 = (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v216,  &v215,  1LL));
            id v58 = PRErrorWithCodeAndUserInfo(100LL, v54);
            id v56 = (id)objc_claimAutoreleasedReturnValue(v58);
            goto LABEL_236;
          }

          unsigned __int8 v33 = [v174 integerValue];
          if (!a2[5]) {
            a2[5] = 1;
          }
          a2[4] = v33;
          __int128 v34 = (os_log_s *)(id)qword_1008000A0;
          if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[5]) {
              sub_100006080();
            }
            int v35 = a2[4];
            LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
            HIDWORD(buf.__r_.__value_.__r.__words[0]) = v35;
            _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got rx_ant_mask: 0x%x",  (uint8_t *)&buf,  8u);
          }

          if ((sub_10000DF70(v165, v174) & 1) == 0)
          {
            v59 = (os_log_s *)(id)qword_1008000A0;
            if (os_log_type_enabled(v59, OS_LOG_TYPE_ERROR)) {
              sub_1003892B0((uint64_t)&buf, (int)[v165 intValue]);
            }

            if (!a3) {
              goto LABEL_314;
            }
            NSErrorUserInfoKey v213 = NSLocalizedDescriptionKey;
            v214 = @"got invalid rx_sync_search_ant_mask.";
            id v54 = (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v214,  &v213,  1LL));
            id v60 = PRErrorWithCodeAndUserInfo(100LL, v54);
            id v56 = (id)objc_claimAutoreleasedReturnValue(v60);
            goto LABEL_236;
          }

          unsigned __int8 v36 = [v165 integerValue];
          if (!a2[7]) {
            a2[7] = 1;
          }
          a2[6] = v36;
          std::string v37 = (os_log_s *)(id)qword_1008000A0;
          if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[7]) {
              sub_100006080();
            }
            int v38 = a2[6];
            LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
            HIDWORD(buf.__r_.__value_.__r.__words[0]) = v38;
            _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got rx_sync_search_ant_mask: 0x%x",  (uint8_t *)&buf,  8u);
          }
        }
      }
    }

    if (!v170
      || (uint64_t v39 = objc_opt_class(&OBJC_CLASS___NSNumber, v9),
          (objc_opt_isKindOfClass(v170, v39) & (v164 != 0LL)) != 1)
      || (uint64_t v40 = objc_opt_class(&OBJC_CLASS___NSNumber, v9),
          (objc_opt_isKindOfClass(v164, v40) & (v157 != 0LL)) != 1)
      || (uint64_t v41 = objc_opt_class(&OBJC_CLASS___NSNumber, v9), (objc_opt_isKindOfClass(v157, v41) & 1) == 0))
    {
LABEL_114:
      if (v169)
      {
        uint64_t v75 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
        if ((objc_opt_isKindOfClass(v169, v75) & 1) != 0)
        {
          unsigned __int16 v76 = (unsigned __int16)[v169 integerValue];
          if (!a2[74]) {
            a2[74] = 1;
          }
          *((_WORD *)a2 + 36) = v76;
          v77 = (os_log_s *)(id)qword_1008000A0;
          if (os_log_type_enabled(v77, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[74]) {
              sub_100006080();
            }
            int v78 = *((__int16 *)a2 + 36);
            LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
            HIDWORD(buf.__r_.__value_.__r.__words[0]) = v78;
            _os_log_impl( (void *)&_mh_execute_header,  v77,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got soi_rssi_thd2: 0x%x",  (uint8_t *)&buf,  8u);
          }
        }
      }

      if (v173)
      {
        uint64_t v79 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
        if ((objc_opt_isKindOfClass(v173, v79) & 1) != 0)
        {
          sub_10032AD20([v173 intValue], 1);
          *((_WORD *)a2 + 4) = sub_10032AD20([v173 integerValue], v10) | 0x100;
          v80 = (os_log_s *)(id)qword_1008000A0;
          if (os_log_type_enabled(v80, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[9]) {
              sub_100006080();
            }
            sub_10032AEA4(a2[8], &buf);
            if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
              p_std::stringbuf::string_type buf = &buf;
            }
            else {
              p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)v205 = 136315138;
            v206 = p_buf;
            _os_log_impl( (void *)&_mh_execute_header,  v80,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got tx_preamble: %s",  v205,  0xCu);
          }
        }
      }

      if (v172)
      {
        uint64_t v82 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
        if ((objc_opt_isKindOfClass(v172, v82) & 1) != 0)
        {
          sub_10032AD20([v172 intValue], v10);
          *((_WORD *)a2 + 5) = sub_10032AD20([v172 integerValue], v10) | 0x100;
          v83 = (os_log_s *)(id)qword_1008000A0;
          if (os_log_type_enabled(v83, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[11]) {
              sub_100006080();
            }
            sub_10032AEA4(a2[10], &buf);
            if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
              v84 = &buf;
            }
            else {
              v84 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)v205 = 136315138;
            v206 = v84;
            _os_log_impl( (void *)&_mh_execute_header,  v83,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got rx_preamble: %s",  v205,  0xCu);
          }
        }
      }

      if (v171)
      {
        uint64_t v85 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
        if ((objc_opt_isKindOfClass(v171, v85) & 1) != 0)
        {
          uint64_t v86 = sub_10032BE44([v171 intValue]);
          if ((v86 & 0xFF0000) == 0)
          {
            v87 = (os_log_s *)(id)qword_1008000A0;
            if (os_log_type_enabled(v87, OS_LOG_TYPE_ERROR)) {
              sub_100389178((uint64_t)&buf, (int)[v171 intValue]);
            }

            if (a3)
            {
              NSErrorUserInfoKey v202 = NSLocalizedDescriptionKey;
              v203 = @"got invalid tx_pkt_type.";
              id v54 = (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v203,  &v202,  1LL));
              id v88 = PRErrorWithCodeAndUserInfo(100LL, v54);
              id v56 = (id)objc_claimAutoreleasedReturnValue(v88);
              goto LABEL_236;
            }

LABEL_314:
            uint64_t v52 = 0LL;
            goto LABEL_315;
          }

          if (!a2[14]) {
            a2[14] = 1;
          }
          *((_WORD *)a2 + 6) = v86;
          v89 = (os_log_s *)(id)qword_1008000A0;
          if (os_log_type_enabled(v89, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[14]) {
              sub_100006080();
            }
            sub_10032BF0C(a2 + 12, &buf);
            if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
              v90 = &buf;
            }
            else {
              v90 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)v205 = 136315138;
            v206 = v90;
            _os_log_impl( (void *)&_mh_execute_header,  v89,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got tx_pkt_type: %s",  v205,  0xCu);
          }
        }
      }

      if (v167)
      {
        uint64_t v91 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
        if ((objc_opt_isKindOfClass(v167, v91) & 1) != 0)
        {
          uint64_t v92 = sub_10032BE44([v167 intValue]);
          if ((v92 & 0xFF0000) == 0)
          {
            v93 = (os_log_s *)(id)qword_1008000A0;
            if (os_log_type_enabled(v93, OS_LOG_TYPE_ERROR)) {
              sub_100389144((uint64_t)&buf, (int)[v171 intValue]);
            }

            if (a3)
            {
              NSErrorUserInfoKey v200 = NSLocalizedDescriptionKey;
              v201 = @"got invalid tx_pkt_type.";
              id v54 = (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v201,  &v200,  1LL));
              id v94 = PRErrorWithCodeAndUserInfo(100LL, v54);
              id v56 = (id)objc_claimAutoreleasedReturnValue(v94);
              goto LABEL_236;
            }

            goto LABEL_314;
          }

          if (!a2[17]) {
            a2[17] = 1;
          }
          *(_WORD *)(a2 + 15) = v92;
          v95 = (os_log_s *)(id)qword_1008000A0;
          if (os_log_type_enabled(v95, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[17]) {
              sub_100006080();
            }
            sub_10032BF0C(a2 + 15, &buf);
            if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
              v96 = &buf;
            }
            else {
              v96 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)v205 = 136315138;
            v206 = v96;
            _os_log_impl( (void *)&_mh_execute_header,  v95,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got rx_pkt_type: %s",  v205,  0xCu);
          }
        }
      }

      if (v168)
      {
        uint64_t v97 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
        if ((objc_opt_isKindOfClass(v168, v97) & 1) != 0)
        {
          if (([v168 intValue] & 0x80000000) != 0
            || (int)[v168 intValue] >= 0x10000)
          {
            v98 = (os_log_s *)(id)qword_1008000A0;
            if (os_log_type_enabled(v98, OS_LOG_TYPE_ERROR)) {
              sub_100389110((uint64_t)&buf, (int)[v168 intValue]);
            }

            if (a3)
            {
              NSErrorUserInfoKey v198 = NSLocalizedDescriptionKey;
              v199 = @"got invalid debug_flags.";
              id v54 = (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v199,  &v198,  1LL));
              id v99 = PRErrorWithCodeAndUserInfo(100LL, v54);
              id v56 = (id)objc_claimAutoreleasedReturnValue(v99);
              goto LABEL_236;
            }

            goto LABEL_314;
          }

          unsigned __int16 v100 = (unsigned __int16)[v168 integerValue];
          if (!a2[24]) {
            a2[24] = 1;
          }
          *((_WORD *)a2 + 11) = v100;
          v101 = (os_log_s *)(id)qword_1008000A0;
          if (os_log_type_enabled(v101, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[24]) {
              sub_100006080();
            }
            int v102 = *((unsigned __int16 *)a2 + 11);
            LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
            HIDWORD(buf.__r_.__value_.__r.__words[0]) = v102;
            _os_log_impl( (void *)&_mh_execute_header,  v101,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got debug_flags: %d",  (uint8_t *)&buf,  8u);
          }
        }
      }

      if (v166)
      {
        uint64_t v103 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
        if ((objc_opt_isKindOfClass(v166, v103) & 1) != 0)
        {
          if ([v166 intValue] && objc_msgSend(v166, "intValue") != 1)
          {
            v127 = (os_log_s *)(id)qword_1008000A0;
            if (os_log_type_enabled(v127, OS_LOG_TYPE_ERROR)) {
              sub_1003890DC((uint64_t)&buf, (int)[v166 intValue]);
            }

            if (a3)
            {
              NSErrorUserInfoKey v196 = NSLocalizedDescriptionKey;
              v197 = @"got invalid dual_ranging_enable.";
              id v54 = (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v197,  &v196,  1LL));
              id v128 = PRErrorWithCodeAndUserInfo(100LL, v54);
              id v56 = (id)objc_claimAutoreleasedReturnValue(v128);
              goto LABEL_236;
            }

            goto LABEL_314;
          }

          unsigned __int8 v104 = [v166 integerValue];
          if (!a2[65]) {
            a2[65] = 1;
          }
          a2[64] = v104;
          v105 = (os_log_s *)(id)qword_1008000A0;
          if (os_log_type_enabled(v105, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[65]) {
              sub_100006080();
            }
            int v106 = a2[64];
            LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
            HIDWORD(buf.__r_.__value_.__r.__words[0]) = v106;
            _os_log_impl( (void *)&_mh_execute_header,  v105,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got dual_ranging_enable: %d",  (uint8_t *)&buf,  8u);
          }
        }
      }

      if (v163)
      {
        uint64_t v107 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
        if ((objc_opt_isKindOfClass(v163, v107) & (v159 != 0LL)) == 1)
        {
          uint64_t v108 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
          if ((objc_opt_isKindOfClass(v159, v108) & 1) != 0)
          {
            if ((int)[v163 intValue] <= 0)
            {
              v109 = (os_log_s *)(id)qword_1008000A0;
              if (os_log_type_enabled(v109, OS_LOG_TYPE_ERROR)) {
                sub_1003890A8((uint64_t)&buf, (int)[v163 intValue]);
              }

              if (a3)
              {
                NSErrorUserInfoKey v194 = NSLocalizedDescriptionKey;
                v195 = @"got invalid naccess_slots_min.";
                v110 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v195,  &v194,  1LL));
                id v111 = PRErrorWithCodeAndUserInfo(100LL, v110);
                *a3 = (id)objc_claimAutoreleasedReturnValue(v111);
              }
            }

            unsigned __int8 v112 = [v163 integerValue];
            if (!a2[105]) {
              a2[105] = 1;
            }
            a2[104] = v112;
            v113 = (os_log_s *)(id)qword_1008000A0;
            if (os_log_type_enabled(v113, OS_LOG_TYPE_DEFAULT))
            {
              if (!a2[105]) {
                sub_100006080();
              }
              int v114 = a2[104];
              *(_DWORD *)v205 = 67109120;
              LODWORD(v206) = v114;
              _os_log_impl( (void *)&_mh_execute_header,  v113,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got naccess_slots_min: %d",  v205,  8u);
            }

            if ((int)[v159 intValue] <= 0)
            {
              v115 = (os_log_s *)(id)qword_1008000A0;
              if (os_log_type_enabled(v115, OS_LOG_TYPE_ERROR)) {
                sub_1003890A8((uint64_t)v205, (int)[v159 intValue]);
              }

              if (a3)
              {
                NSErrorUserInfoKey v192 = NSLocalizedDescriptionKey;
                v193 = @"got invalid naccess_slots_max.";
                v116 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v193,  &v192,  1LL));
                id v117 = PRErrorWithCodeAndUserInfo(100LL, v116);
                *a3 = (id)objc_claimAutoreleasedReturnValue(v117);
              }
            }

            unsigned __int8 v118 = [v159 integerValue];
            if (!a2[107]) {
              a2[107] = 1;
            }
            a2[106] = v118;
            v119 = (os_log_s *)(id)qword_1008000A0;
            if (os_log_type_enabled(v119, OS_LOG_TYPE_DEFAULT))
            {
              if (!a2[107]) {
                sub_100006080();
              }
              int v120 = a2[106];
              *(_DWORD *)v190 = 67109120;
              int v191 = v120;
              _os_log_impl( (void *)&_mh_execute_header,  v119,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got naccess_slots_max: %d",  v190,  8u);
            }

            if (v7)
            {
              uint64_t v121 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
              if ((objc_opt_isKindOfClass(v7, v121) & 1) != 0)
              {
                if ([v7 intValue])
                {
                  if ([v7 intValue] == 1)
                  {
                    int v122 = [v163 intValue];
                    if (v122 > (int)[v159 intValue])
                    {
                      v123 = (os_log_s *)(id)qword_1008000A0;
                      if (os_log_type_enabled(v123, OS_LOG_TYPE_ERROR)) {
                        sub_10038907C();
                      }

                      if (a3)
                      {
                        NSErrorUserInfoKey v186 = NSLocalizedDescriptionKey;
                        v187 = @"naccess_slots_min must be less than or equal to naccess_slots_max for responder.";
                        v124 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v187,  &v186,  1LL));
                        id v125 = PRErrorWithCodeAndUserInfo(100LL, v124);
                        v126 = (void *)objc_claimAutoreleasedReturnValue(v125);
LABEL_242:
                        *a3 = v126;
                      }
                    }
                  }
                }

                else
                {
                  unsigned int v129 = [v163 intValue];
                  if (v129 != [v159 intValue])
                  {
                    v130 = (os_log_s *)(id)qword_1008000A0;
                    if (os_log_type_enabled(v130, OS_LOG_TYPE_ERROR)) {
                      sub_100389050();
                    }

                    if (a3)
                    {
                      NSErrorUserInfoKey v188 = NSLocalizedDescriptionKey;
                      v189 = @"naccess_slots_min must equal naccess_slots_max for initiator.";
                      v124 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v189,  &v188,  1LL));
                      id v131 = PRErrorWithCodeAndUserInfo(100LL, v124);
                      v126 = (void *)objc_claimAutoreleasedReturnValue(v131);
                      goto LABEL_242;
                    }
                  }
                }
              }
            }
          }
        }
      }

      if (v162)
      {
        uint64_t v132 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
        if ((objc_opt_isKindOfClass(v162, v132) & (v158 != 0LL)) == 1)
        {
          uint64_t v133 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
          if ((objc_opt_isKindOfClass(v158, v133) & 1) != 0)
          {
            signed int v134 = [v162 intValue];
            if ((uint64_t)[v158 integerValue] >= v134)
            {
              if ((int)[v162 intValue] >= 0x10000)
              {
                v138 = (os_log_s *)(id)qword_1008000A0;
                if (os_log_type_enabled(v138, OS_LOG_TYPE_ERROR)) {
                  sub_10038901C((uint64_t)v190, (int)[v162 intValue]);
                }

                if (a3)
                {
                  NSErrorUserInfoKey v182 = NSLocalizedDescriptionKey;
                  v183 = @"got invalid interval_min_ms.";
                  v139 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v183,  &v182,  1LL));
                  id v140 = PRErrorWithCodeAndUserInfo(100LL, v139);
                  *a3 = (id)objc_claimAutoreleasedReturnValue(v140);
                }
              }

              unsigned __int16 v141 = (unsigned __int16)[v162 integerValue];
              if (!a2[98]) {
                a2[98] = 1;
              }
              *((_WORD *)a2 + 48) = v141;
              v142 = (os_log_s *)(id)qword_1008000A0;
              if (os_log_type_enabled(v142, OS_LOG_TYPE_DEFAULT))
              {
                if (!a2[98]) {
                  sub_100006080();
                }
                int v143 = *((unsigned __int16 *)a2 + 48);
                *(_DWORD *)v180 = 67109120;
                int v181 = v143;
                _os_log_impl( (void *)&_mh_execute_header,  v142,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got interval_min_ms: %d",  v180,  8u);
              }

              if ((int)[v158 intValue] >= 0x10000)
              {
                v144 = (os_log_s *)(id)qword_1008000A0;
                if (os_log_type_enabled(v144, OS_LOG_TYPE_ERROR)) {
                  sub_100388FE8((uint64_t)v180, (int)[v158 intValue]);
                }

                if (a3)
                {
                  NSErrorUserInfoKey v178 = NSLocalizedDescriptionKey;
                  v179 = @"got invalid interval_max_ms.";
                  v145 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v179,  &v178,  1LL));
                  id v146 = PRErrorWithCodeAndUserInfo(100LL, v145);
                  *a3 = (id)objc_claimAutoreleasedReturnValue(v146);
                }
              }

              unsigned __int16 v147 = (unsigned __int16)[v158 integerValue];
              if (!a2[102]) {
                a2[102] = 1;
              }
              *((_WORD *)a2 + 50) = v147;
              v136 = (os_log_s *)(id)qword_1008000A0;
              if (os_log_type_enabled(v136, OS_LOG_TYPE_DEFAULT))
              {
                if (!a2[102]) {
                  sub_100006080();
                }
                int v148 = *((unsigned __int16 *)a2 + 50);
                *(_DWORD *)v176 = 67109120;
                int v177 = v148;
                _os_log_impl( (void *)&_mh_execute_header,  v136,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got interval_max_ms: %d",  v176,  8u);
              }
            }

            else
            {
              v135 = (os_log_s *)(id)qword_1008000A0;
              if (os_log_type_enabled(v135, OS_LOG_TYPE_ERROR)) {
                sub_100388FBC();
              }

              if (!a3) {
                goto LABEL_272;
              }
              NSErrorUserInfoKey v184 = NSLocalizedDescriptionKey;
              v185 = @"interval_min_ms must be less than or equal to interval_max_ms.";
              v136 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v185,  &v184,  1LL));
              id v137 = PRErrorWithCodeAndUserInfo(100LL, v136);
              *a3 = (id)objc_claimAutoreleasedReturnValue(v137);
            }
          }
        }
      }

  v172 = *(void *)(a1 + 344);
  if (!v172) {
    v172 = *(void *)(qword_100800158 + 344);
  }
  v173 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100101F24(v172, a2);
  v174 = (int)v173;
  else {
    v175 = 1;
  }
  __int128 v4 = (v4 + v174 + v175 + 2);
  id v131 = *(_DWORD *)(a1 + 396);
  if ((v131 & 0x800) == 0)
  {
LABEL_298:
    if ((v131 & 0x1000) == 0) {
      goto LABEL_299;
    }
    goto LABEL_326;
  }

LABEL_272:
      if (v160)
      {
        uint64_t v149 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
        if ((objc_opt_isKindOfClass(v160, v149) & 1) != 0)
        {
          unsigned __int8 v150 = [v160 integerValue];
          if (!a2[21]) {
            a2[21] = 1;
          }
          a2[20] = v150;
          v151 = (os_log_s *)(id)qword_1008000A0;
          if (os_log_type_enabled(v151, OS_LOG_TYPE_DEFAULT))
          {
            if (!a2[21]) {
              sub_100006080();
            }
            int v152 = a2[20];
            *(_DWORD *)v176 = 67109120;
            int v177 = v152;
            _os_log_impl( (void *)&_mh_execute_header,  v151,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got rx_mslot_sz_250us: %d",  v176,  8u);
          }
        }
      }

      if (!v161 || (uint64_t v153 = objc_opt_class(&OBJC_CLASS___NSNumber, v9), (objc_opt_isKindOfClass(v161, v153) & 1) == 0))
      {
        uint64_t v52 = 1LL;
        goto LABEL_315;
      }

      unsigned __int8 v154 = [v161 integerValue];
      if (!a2[19]) {
        a2[19] = 1;
      }
      a2[18] = v154;
      id v54 = (id)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)v54, OS_LOG_TYPE_DEFAULT))
      {
        if (!a2[19]) {
          sub_100006080();
        }
        int v155 = a2[18];
        *(_DWORD *)v176 = 67109120;
        int v177 = v155;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v54,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got tx_mslot_sz_250us: %d",  v176,  8u);
      }

      uint64_t v52 = 1LL;
LABEL_288:

LABEL_315:
      goto LABEL_316;
    }

    if (![v170 intValue]
      && ![v164 intValue]
      && ![v157 intValue])
    {
      unsigned __int8 v67 = [v170 integerValue];
      if (!a2[67]) {
        a2[67] = 1;
      }
      a2[66] = v67;
      unsigned __int8 v68 = [v164 integerValue];
      if (!a2[69]) {
        a2[69] = 1;
      }
      a2[68] = v68;
      unsigned __int8 v69 = [v157 integerValue];
      if (!a2[71]) {
        a2[71] = 1;
      }
      a2[70] = v69;
      v70 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v70, OS_LOG_TYPE_DEFAULT))
      {
        if (!a2[67]) {
          sub_100006080();
        }
        int v71 = a2[66];
        LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
        HIDWORD(buf.__r_.__value_.__r.__words[0]) = v71;
        _os_log_impl( (void *)&_mh_execute_header,  v70,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got tx_ant_mask2: 0x%x",  (uint8_t *)&buf,  8u);
      }

      v72 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v72, OS_LOG_TYPE_DEFAULT))
      {
        if (!a2[69]) {
          sub_100006080();
        }
        int v73 = a2[68];
        LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
        HIDWORD(buf.__r_.__value_.__r.__words[0]) = v73;
        _os_log_impl( (void *)&_mh_execute_header,  v72,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got rx_ant_mask2: 0x%x",  (uint8_t *)&buf,  8u);
      }

      v49 = (os_log_s *)(id)qword_1008000A0;
      if (!os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_113;
      }
      if (!a2[71]) {
        sub_100006080();
      }
      int v74 = a2[70];
      LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
      HIDWORD(buf.__r_.__value_.__r.__words[0]) = v74;
      goto LABEL_112;
    }

    if (sub_10000DE98(v170))
    {
      unsigned __int8 v42 = [v170 integerValue];
      if (!a2[67]) {
        a2[67] = 1;
      }
      a2[66] = v42;
      v43 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
      {
        if (!a2[67]) {
          sub_100006080();
        }
        int v44 = a2[66];
        LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
        HIDWORD(buf.__r_.__value_.__r.__words[0]) = v44;
        _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got tx_ant_mask2: 0x%x",  (uint8_t *)&buf,  8u);
      }

      if (sub_10000DF18(v164))
      {
        unsigned __int8 v45 = [v164 integerValue];
        if (!a2[69]) {
          a2[69] = 1;
        }
        a2[68] = v45;
        v46 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
        {
          if (!a2[69]) {
            sub_100006080();
          }
          int v47 = a2[68];
          LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
          HIDWORD(buf.__r_.__value_.__r.__words[0]) = v47;
          _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got rx_ant_mask2: 0x%x",  (uint8_t *)&buf,  8u);
        }

        if ((sub_10000DF70(v157, v164) & 1) != 0)
        {
          unsigned __int8 v48 = [v157 integerValue];
          if (!a2[71]) {
            a2[71] = 1;
          }
          a2[70] = v48;
          v49 = (os_log_s *)(id)qword_1008000A0;
          if (!os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_113;
          }
          if (!a2[71]) {
            sub_100006080();
          }
          int v50 = a2[70];
          LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
          HIDWORD(buf.__r_.__value_.__r.__words[0]) = v50;
LABEL_112:
          _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEFAULT,  "[Range Params] got rx_sync_search_ant_mask2: 0x%x",  (uint8_t *)&buf,  8u);
LABEL_113:

          goto LABEL_114;
        }

        v65 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR)) {
          sub_100389214((uint64_t)&buf, (int)[v157 intValue]);
        }

        if (!a3) {
          goto LABEL_314;
        }
        NSErrorUserInfoKey v207 = NSLocalizedDescriptionKey;
        v208 = @"got invalid rx_sync_search_ant_mask2.";
        id v54 = (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v208,  &v207,  1LL));
        id v66 = PRErrorWithCodeAndUserInfo(100LL, v54);
        id v56 = (id)objc_claimAutoreleasedReturnValue(v66);
      }

      else
      {
        v63 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR)) {
          sub_100389248((uint64_t)&buf, (int)[v164 intValue]);
        }

        if (!a3) {
          goto LABEL_314;
        }
        NSErrorUserInfoKey v209 = NSLocalizedDescriptionKey;
        v210 = @"got invalid rx_ant_mask2.";
        id v54 = (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v210,  &v209,  1LL));
        id v64 = PRErrorWithCodeAndUserInfo(100LL, v54);
        id v56 = (id)objc_claimAutoreleasedReturnValue(v64);
      }
    }

    else
    {
      v61 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR)) {
        sub_10038927C((uint64_t)&buf, (int)[v170 intValue]);
      }

      if (!a3) {
        goto LABEL_314;
      }
      NSErrorUserInfoKey v211 = NSLocalizedDescriptionKey;
      v212 = @"got invalid tx_ant_mask2.";
      id v54 = (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v212,  &v211,  1LL));
      id v62 = PRErrorWithCodeAndUserInfo(100LL, v54);
      id v56 = (id)objc_claimAutoreleasedReturnValue(v62);
    }

LABEL_236:
    uint64_t v52 = 0LL;
    *a3 = v56;
    goto LABEL_288;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_100388F90();
  }
  if (a3)
  {
    NSErrorUserInfoKey v219 = NSLocalizedDescriptionKey;
    v220 = @"No user debug options provided.";
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v220,  &v219,  1LL));
    id v51 = PRErrorWithCodeAndUserInfo(100LL, v7);
    uint64_t v52 = 0LL;
    *a3 = (id)objc_claimAutoreleasedReturnValue(v51);
LABEL_316:

    goto LABEL_317;
  }

  uint64_t v52 = 0LL;
LABEL_317:

  return v52;
}

void sub_10000DCD8()
{
  __cxa_end_catch();
  JUMPOUT(0x10000DDD4LL);
}

void sub_10000DCFC(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_10000DE88(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000DD10()
{
  JUMPOUT(0x10000DE74LL);
}

void sub_10000DD1C()
{
}

void sub_10000DDD0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20, void *a21, void *a22, void *a23, void *a24, void *a25, void *a26, void *a27, void *a28)
{
  _Unwind_Resume(a1);
}

void sub_10000DE88(void *a1)
{
}

BOOL sub_10000DE98(void *a1)
{
  id v1 = a1;
  BOOL v2 = [v1 intValue] == 1
    || [v1 intValue] == 2
    || [v1 intValue] == 4
    || [v1 intValue] == 8;

  return v2;
}

void sub_10000DF08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_10000DF18(void *a1)
{
  id v1 = a1;
  else {
    BOOL v2 = 0LL;
  }

  return v2;
}

void sub_10000DF60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10000DF70(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  int v5 = 0;
  int v6 = 0;
  LOBYTE(v7) = [v3 intValue] != 0;
  do
  {
    int v8 = [v3 intValue];
    if (v8 >> v6 >= 0) {
      int v9 = (v8 >> v6) & 1;
    }
    else {
      int v9 = -((v8 >> v6) & 1);
    }
    v5 += v9;
    unsigned int v7 = (v5 < 3) & v7;
    ++v6;
  }

  while (v6 != 4);
  unsigned int v10 = [v3 intValue];
  unsigned int v11 = [v4 intValue];
  else {
    uint64_t v12 = 0LL;
  }

  return v12;
}

void sub_10000E030(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10000E048(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = v3;
  if (v3)
  {
    uint64_t v5 = PRDebugConfigArgDebugLevel;
    unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:PRDebugConfigArgDebugLevel]);
    if (v7)
    {
      uint64_t v8 = objc_opt_class(&OBJC_CLASS___NSNumber, v6);
      if ((objc_opt_isKindOfClass(v7, v8) & 1) != 0)
      {
        int v9 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 138412290;
          unsigned __int16 v24 = v7;
          _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[Debug Options] got debugLevel: %@",  buf,  0xCu);
        }

        if ((int)[v7 intValue] < 1 || (int)objc_msgSend(v7, "intValue") >= 4)
        {
          if (!a2)
          {
            uint64_t v12 = 0LL;
            goto LABEL_21;
          }

          NSErrorUserInfoKey v21 = NSLocalizedDescriptionKey;
          int v22 = @"Invalid debug level. Only 1-3 allowed.";
          unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v22,  &v21,  1LL));
          id v11 = PRErrorWithCodeAndUserInfo(100LL, v10);
          uint64_t v12 = 0LL;
          *a2 = (id)objc_claimAutoreleasedReturnValue(v11);
          goto LABEL_20;
        }

        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[PRGlobalDebugSettings sharedSettings](&OBJC_CLASS___PRGlobalDebugSettings, "sharedSettings"));
        [v14 setObject:v7 forKey:v5];
      }
    }

    uint64_t v15 = PRDebugConfigArgLeadingEdgeThresholds;
    unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:PRDebugConfigArgLeadingEdgeThresholds]);
    if (v10)
    {
      uint64_t v17 = objc_opt_class(&OBJC_CLASS___NSArray, v16);
      if ((objc_opt_isKindOfClass(v10, v17) & 1) != 0)
      {
        uint64_t v18 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 138412290;
          unsigned __int16 v24 = v10;
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "[Debug Options] got LE thresholds: %@",  buf,  0xCu);
        }

        uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[PRGlobalDebugSettings sharedSettings](&OBJC_CLASS___PRGlobalDebugSettings, "sharedSettings"));
        [v19 setObject:v10 forKey:v15];
      }
    }

    uint64_t v12 = 1LL;
LABEL_20:

    goto LABEL_21;
  }

  if (a2)
  {
    NSErrorUserInfoKey v25 = NSLocalizedDescriptionKey;
    int v26 = @"No user global debug options provided.";
    unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v26,  &v25,  1LL));
    id v13 = PRErrorWithCodeAndUserInfo(999LL, v7);
    uint64_t v12 = 0LL;
    *a2 = (id)objc_claimAutoreleasedReturnValue(v13);
LABEL_21:

    goto LABEL_22;
  }

  uint64_t v12 = 0LL;
LABEL_22:

  return v12;
}

void sub_10000E318(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000E380(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
}

uint64_t sub_10000E390(uint64_t result, int a2, float a3)
{
  *(float *)result = a3;
  *(_DWORD *)(result + 4) = a2;
  return result;
}

void sub_10000E39C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_10000E418(_Unwind_Exception *a1)
{
}

void sub_10000E430()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      id v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10040C5D8;
      v1[1] = unk_10040C5E8;
      v1[2] = xmmword_10040C5F8;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_10000E4D0(_Unwind_Exception *a1)
{
}

void sub_10000E4E8()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  id v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  id v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F4A00 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F49F0 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F49F0, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  uint64_t v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  unsigned int v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F4A18 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F4A08 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4A08, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  int v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  id v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F4A30 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F4A20 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4A20, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  id v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F4A48 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F4A38 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4A38, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  uint64_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F4A60 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F4A50 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4A50, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  NSErrorUserInfoKey v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F4A78 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F4A68 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4A68, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  NSErrorUserInfoKey v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F4A90 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F4A80 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4A80, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F4AA8 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F4A98 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4A98, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  unsigned __int8 v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  int v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F4AC0 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F4AB0 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4AB0, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_10000EADC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10000EB50@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2160[a1]);
}

void *sub_10000EB64@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A21B8[a1]);
}

void *sub_10000EB78@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2200[a1]);
}

void *sub_10000EB8C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2220[a1]);
}

void sub_10000EE18( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id location)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10000EE54(uint64_t a1, __int128 *a2)
{
  __int128 v3 = *a2;
  *(void *)a2 = 0LL;
  *((void *)a2 + 1) = 0LL;
  __int128 v4 = *(std::__shared_weak_count **)(a1 + 8);
  *(_OWORD *)a1 = v3;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  return a1;
}

void sub_10000EFEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000F240( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, char a11, uint64_t a12, char a13)
{
  if (a10) {
    std::__shared_weak_count::__release_weak(a10);
  }
  sub_100012390((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_10000F3D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10000F488( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_10000F4A8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_100389380();
    }
  }

  else
  {
    [v5 didFailWithError:*(void *)(a1 + 32)];
  }
}

void sub_10000F524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000F668(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained handleError:*(void *)(a1 + 32)];
}

void sub_10000F6A4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10000F75C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, ...)
{
  sub_100012358((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10000F77C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_100389380();
    }
  }

  else
  {
    [v5 didReceiveNewSolutions:*(void *)(a1 + 32)];
  }
}

void sub_10000F7F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000F85C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_100389380();
    }
  }

  else
  {
    [v5 rangingServiceDidUpdateState:*(void *)(a1 + 32) cause:*(void *)(a1 + 40)];
  }
}

void sub_10000F8D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000F968(_Unwind_Exception *a1)
{
}

void sub_10000F97C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_100389380();
    }
  }

  else
  {
    [v5 rangingRequestDidUpdateStatus:*(void *)(a1 + 32)];
  }
}

void sub_10000F9F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000FC6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000FD40(uint64_t a1)
{
  __int128 v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    __int128 v4 = objc_loadWeakRetained(v2);
    switch(*(void *)(a1 + 48))
    {
      case 0LL:
        id v5 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)int v47 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "PRRangingManager PRRangingRequestStatusUnknown #companion-retry",  v47,  2u);
        }

        NSErrorUserInfoKey v48 = NSLocalizedDescriptionKey;
        v49 = @"Unexpected PRRangingRequestStatusUnknown";
        id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v49,  &v48,  1LL));
        id v7 = PRErrorWithCodeAndUserInfo(999LL, v6);
        __int128 v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

        [v4 handleError:v8];
        break;
      case 1LL:
        int v9 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)int v47 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "PRRangingManager PRRangingRequestStatusDidStart #companion-retry",  v47,  2u);
        }

        if (v4[16] != 3)
        {
          __int128 v10 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
            sub_1003893E0(v10, v11, v12, v13, v14, v15, v16, v17);
          }
          NSErrorUserInfoKey v54 = NSLocalizedDescriptionKey;
          id v55 = @"Unexpected PRRangingRequestStatusDidStart";
          __int128 v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v55,  &v54,  1LL));
          id v19 = PRErrorWithCodeAndUserInfo(999LL, v18);
          __int128 v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

          [v4 handleError:v20];
        }

        int v21 = 4;
        goto LABEL_30;
      case 2LL:
        __int128 v22 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)int v47 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "PRRangingManager PRRangingRequestStatusStopped #companion-retry",  v47,  2u);
        }

        if ((v4[16] & 0xFFFFFFFE) != 4)
        {
          uint64_t v23 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
            sub_100389440(v23, v24, v25, v26, v27, v28, v29, v30);
          }
          NSErrorUserInfoKey v50 = NSLocalizedDescriptionKey;
          id v51 = @"Unexpected PRRangingRequestStatusStopped";
          uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v51,  &v50,  1LL));
          id v32 = PRErrorWithCodeAndUserInfo(999LL, v31);
          unsigned __int8 v33 = (void *)objc_claimAutoreleasedReturnValue(v32);

          [v4 handleError:v33];
        }

        v4[16] = 1;
        [v4 combineAndReportLocalAndCompanionRangingRequestStatus];
        break;
      case 3LL:
        __int128 v34 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)int v47 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "PRRangingManager PRRangingRequestStatusInvalidated #companion-retry",  v47,  2u);
        }

        [v4 reportRangingRequestStatusUpdate:*(void *)(a1 + 48)];
        break;
      case 4LL:
        int v35 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)int v47 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEFAULT,  "PRRangingManager PRRangingRequestStatusFailedToStart #companion-retry",  v47,  2u);
        }

        if (v4[16] != 3)
        {
          __int128 v36 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
            sub_100389410(v36, v37, v38, v39, v40, v41, v42, v43);
          }
          NSErrorUserInfoKey v52 = NSLocalizedDescriptionKey;
          v53 = @"Unexpected PRRangingRequestStatusFailedToStart";
          int v44 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v53,  &v52,  1LL));
          id v45 = PRErrorWithCodeAndUserInfo(999LL, v44);
          v46 = (void *)objc_claimAutoreleasedReturnValue(v45);

          [v4 handleError:v46];
        }

        int v21 = 1;
LABEL_30:
        v4[16] = v21;
        [*(id *)(a1 + 32) combineAndReportLocalAndCompanionRangingRequestStatus];
        break;
      default:
        break;
    }
  }

void sub_100010178(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100010280( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_100010298(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_100389380();
    }
  }

  else
  {
    [v5 remoteDevice:*(void *)(a1 + 32) didChangeState:*(void *)(a1 + 40)];
  }
}

void sub_100010314(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

LABEL_79:
      goto LABEL_80;
    }
  }

  v105 = NSLocalizedDescriptionKey;
  int v106 = @"Remote device must be PRDeviceTypeCompanion and have a valid UUID.";
  v65 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v106,  &v105,  1LL));
  id v66 = PRErrorWithCodeAndUserInfo(100LL, v65);
  unsigned __int8 v67 = (void *)objc_claimAutoreleasedReturnValue(v66);

  v10[2](v10, 0LL, v67);
LABEL_80:
}

  __int128 v22 = *(void *)(v5 + 144);
  if (!v22) {
    __int128 v22 = *(void *)(qword_1008001F0 + 144);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12,  v22,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_85;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23,  *(void *)(v5 + 272),  (unint64_t)a2,  a4);
  id v7 = *(_DWORD *)(v5 + 304);
  if ((v7 & 8) == 0)
  {
LABEL_37:
    if ((v7 & 0x10) == 0) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }

  uint64_t v41 = *((void *)this + 24);
  *(_WORD *)__int128 v4 = 449;
  *(void *)((char *)v4 + 2) = v41;
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
  uint64_t v16 = *((_DWORD *)this + 75);
  if ((v16 & 0x1000000) == 0)
  {
LABEL_44:
    if ((v16 & 0x2000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_81;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3FC,  *(_DWORD *)(v5 + 160),  (int)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 232);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
LABEL_81:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3FE,  *(_DWORD *)(v5 + 168),  (int)a2,  a4);
    if ((*(_DWORD *)(v5 + 232) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_82;
  }

    NSErrorUserInfoKey v50 = *(double *)(a1 + 120) + *(double *)(a1 + 112) * v34;
    goto LABEL_80;
  }

  NSErrorUserInfoKey v50 = *(double *)(a1 + 136);
LABEL_80:
  if (v54)
  {
    operator delete(v54);
    id v32 = (_DWORD *)__p;
  }

  if (v32)
  {
    *((void *)&__p + 1) = v32;
    operator delete(v32);
  }

  operator delete(v13);
  operator delete(v11);
  return v50;
}

void sub_100010D24( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, void *a12, char a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, std::__shared_weak_count *a24, uint64_t a25, uint64_t a26, char a27)
{
  sub_100012390((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_10001135C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001152C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

LABEL_34:
  self->_localRangingState = 2;
}

    id v7 = 0LL;
    goto LABEL_35;
  }

  id v6 = (os_log_s *)qword_1008000A0;
  id v7 = 1LL;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
  {
    LOWORD(v12) = 0;
    __int128 v8 = "#wifi-service,Found ranging supported capability via product type.";
    goto LABEL_31;
  }

  uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if (v15 >= 0x80)
  {
    uint64_t v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    __int128 v3 = *(_DWORD *)(a1 + 72);
  }

  else
  {
    uint64_t v16 = 2;
  }

  __int128 v4 = (v16 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_38:
    uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if (v17 >= 0x80)
    {
      __int128 v3 = *(_DWORD *)(a1 + 72);
    }

    else
    {
      __int128 v18 = 2;
    }

    __int128 v4 = (v18 + v4);
  }

  uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if (v15 >= 0x80)
  {
    uint64_t v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    __int128 v3 = *(_DWORD *)(a1 + 72);
  }

  else
  {
    uint64_t v16 = 2;
  }

  __int128 v4 = (v16 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_38:
    uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if (v17 >= 0x80)
    {
      __int128 v3 = *(_DWORD *)(a1 + 72);
    }

    else
    {
      __int128 v18 = 2;
    }

    __int128 v4 = (v18 + v4);
  }

        if (v11 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField( this,  TagFallback,  v8,  a4) & 1) == 0) {
            return 0LL;
          }
          continue;
        }

        return 1LL;
      case 0xAu:
        uint64_t v11 = TagFallback & 7;
        uint64_t v23 = (char *)*((void *)this + 1);
        uint64_t v14 = *((void *)this + 2);
        goto LABEL_178;
      default:
        uint64_t v11 = TagFallback & 7;
        goto LABEL_34;
    }
  }

  id v7 = *(void *)(v5 + 24);
  if (!v7) {
    id v7 = *(void *)(qword_1008001F0 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v7,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_40;
  }

  uint64_t v15 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 88) |= 0x800u;
  *(_DWORD *)(a1 + 64) = v15;
  id v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x1000) == 0)
  {
LABEL_26:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_36;
  }

  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v17 >= 0x80)
  {
    __int128 v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    __int128 v3 = *(_DWORD *)(a1 + 68);
  }

  else
  {
    __int128 v18 = 2;
  }

  __int128 v4 = (v18 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_23:
    if ((v3 & 0x40) == 0) {
      goto LABEL_24;
    }
    goto LABEL_47;
  }

  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = v16;
  __int128 v18 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    id v19 = *(unsigned __int8 *)(v15 + 23);
  }
  else {
    id v19 = v18;
  }
  if (v19 >= 0x80)
  {
    __int128 v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19,  a2);
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    __int128 v18 = *(void *)(v15 + 8);
    __int128 v3 = *(_DWORD *)(a1 + 468);
    uint64_t v17 = *(_BYTE *)(v15 + 23);
  }

  else
  {
    __int128 v20 = 1;
  }

  if (v17 < 0) {
    uint64_t v16 = v18;
  }
  v4 += v20 + v16 + 1;
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_51;
    }
    goto LABEL_47;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(_DWORD *)(v5 + 48),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x200) == 0)
  {
LABEL_10:
    if ((v6 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }

    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v16 >= 0x80)
    {
      __int128 v3 = *(_DWORD *)(a1 + 52);
    }

    else
    {
      uint64_t v17 = 2;
    }

    __int128 v4 = (v17 + v4);
    if ((v3 & 0x20) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }

  __int128 v4 = 0LL;
LABEL_42:
  __int128 v20 = *(void **)(a1 + 8);
  if (v20 && *v20 != v20[1]) {
    __int128 v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 48) = v4;
  return v4;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  *(_DWORD *)(v5 + 60),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 56),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_36;
  }

  __int128 v22 = *((_BYTE *)this + 51);
  *(_BYTE *)__int128 v3 = 72;
  *((_BYTE *)v3 + 1) = v22;
  __int128 v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  __int128 v8 = *((_DWORD *)this + 15);
  if ((v8 & 0x200) != 0) {
    goto LABEL_35;
  }
LABEL_17:
  if ((v8 & 0x400) != 0)
  {
LABEL_18:
    int v9 = *((_BYTE *)this + 53);
    *(_BYTE *)__int128 v3 = 88;
    *((_BYTE *)v3 + 1) = v9;
    __int128 v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }

  uint64_t v24 = *((void *)this + 8);
  *(_BYTE *)__int128 v3 = 65;
  *(void *)((char *)v3 + 1) = v24;
  __int128 v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  uint64_t v16 = *((_DWORD *)this + 24);
  if ((v16 & 0x80) != 0) {
    goto LABEL_35;
  }
LABEL_26:
  if ((v16 & 0x100) != 0)
  {
LABEL_27:
    uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 10);
    *(_BYTE *)__int128 v3 = 80;
    __int128 v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v17,  (unint64_t)v3 + 1,  a3);
  }

  uint64_t v23 = (void *)*((void *)this + 1);
  __int128 v22 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v21 = v23;
  if (!v23 || *v21 == v21[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v22,  v4,  a3);
  }
}

  id v19 = *(void **)(a1 + 8);
  if (v19 && *v19 != v19[1]) {
    __int128 v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 68) = v4;
  return v4;
}

  id v5 = v5
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 48),  (unint64_t)a2)
     + 1;
  __int128 v3 = *(_DWORD *)(a1 + 76);
  if ((v3 & 0x40) == 0)
  {
LABEL_10:
    if ((v3 & 0x80) == 0) {
      goto LABEL_53;
    }
    goto LABEL_44;
  }

  uint64_t v25 = *((_BYTE *)this + 39);
  *(_BYTE *)__int128 v3 = 88;
  *((_BYTE *)v3 + 1) = v25;
  __int128 v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  if ((*((_DWORD *)this + 21) & 0x800) != 0)
  {
LABEL_13:
    id v6 = *((_DWORD *)this + 13);
    *(_BYTE *)__int128 v3 = 101;
    *(_DWORD *)((char *)v3 + 1) = v6;
    __int128 v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  }

  id v19 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 72) |= 0x800u;
  *(_DWORD *)(a1 + 52) = v19;
  id v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
LABEL_36:
    int v21 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 72) |= 0x2000u;
    *(_DWORD *)(a1 + 60) = v21;
    if ((*(_DWORD *)(a2 + 72) & 0x4000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_21;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE,  *(_DWORD *)(v5 + 60),  a2,  a4);
  if ((*(_DWORD *)(v5 + 72) & 0x4000) != 0) {
LABEL_16:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF,  *(_DWORD *)(v5 + 64),  a2,  a4);
LABEL_17:
  int v9 = *(void **)(v5 + 8);
  __int128 v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  id v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  uint64_t v13 = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 140) |= 0x1000u;
  *(void *)(a1 + 104) = v13;
  id v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 0x2000) == 0)
  {
LABEL_25:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_36;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  (int)a2,  *(double *)(v5 + 88),  a3);
  id v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_36;
  }

  int v21 = *((void *)this + 6);
  *(_BYTE *)__int128 v4 = 41;
  *(void *)((char *)v4 + 1) = v21;
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 26) & 0x20) == 0) {
    goto LABEL_41;
  }
LABEL_35:
  __int128 v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 18);
  *(_BYTE *)__int128 v4 = 48;
  uint64_t v23 = (unint64_t)v4 + 1;
  if ((v22 & 0x80000000) != 0)
  {
    uint64_t v24 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v22,  v23,  a3);
  }

  else
  {
    if (v22 <= 0x7F)
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v22;
      __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_41;
    }

    uint64_t v24 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v22,  v23,  a3);
  }

  __int128 v4 = v24;
LABEL_41:
  uint64_t v25 = *((_DWORD *)this + 26);
  if ((v25 & 0x40) != 0)
  {
    uint64_t v26 = *((void *)this + 7);
    *(_BYTE *)__int128 v4 = 57;
    *(void *)((char *)v4 + 1) = v26;
    __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    uint64_t v25 = *((_DWORD *)this + 26);
    if ((v25 & 0x80) == 0)
    {
LABEL_43:
      if ((v25 & 0x100) == 0) {
        goto LABEL_44;
      }
      goto LABEL_54;
    }
  }

  else if ((v25 & 0x80) == 0)
  {
    goto LABEL_43;
  }

  uint64_t v27 = *((void *)this + 8);
  if (!v27) {
    uint64_t v27 = *(void *)(qword_100800658 + 64);
  }
  *(_BYTE *)__int128 v4 = 66;
  uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v27 + 32);
  if (v28 > 0x7F)
  {
    uint64_t v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v28,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v28;
    uint64_t v29 = (uint64_t)v4 + 2;
  }

  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10004BEE8(v27, v29, a3);
  uint64_t v25 = *((_DWORD *)this + 26);
  if ((v25 & 0x100) == 0)
  {
LABEL_44:
    if ((v25 & 0x200) == 0) {
      goto LABEL_45;
    }
    goto LABEL_60;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(void *)(v5 + 64),  (unint64_t)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_36;
  }

  __int128 v18 = *((_DWORD *)this + 24);
  *(_BYTE *)a2 = 117;
  *(_DWORD *)(a2 + 1) = v18;
  a2 += 5LL;
  __int128 v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x4000) == 0)
  {
LABEL_16:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }

  uint64_t v17 = *(const std::string **)(a2 + 88);
  *(_DWORD *)(a1 + 140) |= 0x400u;
  __int128 v18 = *(std::string **)(a1 + 88);
  if (v18 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    __int128 v18 = (std::string *)operator new(0x18uLL);
    v18->__r_.__value_.__l.__size_ = 0LL;
    v18->__r_.__value_.__l.__cap_ = 0LL;
    v18->__r_.__value_.__r.__words[0] = 0LL;
    *(void *)(a1 + 88) = v18;
  }

  std::string::operator=(v18, v17);
  id v6 = *(_DWORD *)(a2 + 140);
  if ((v6 & 0x800) == 0)
  {
LABEL_20:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_38;
  }

  id v19 = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 148) |= 0x800u;
  *(void *)(a1 + 112) = v19;
  id v6 = *(_DWORD *)(a2 + 148);
  if ((v6 & 0x1000) == 0)
  {
LABEL_20:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_21;
    }
LABEL_36:
    int v21 = *(void *)(a2 + 128);
    *(_DWORD *)(a1 + 148) |= 0x2000u;
    *(void *)(a1 + 128) = v21;
    if ((*(_DWORD *)(a2 + 148) & 0x4000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_22;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD,  (int)a2,  *(double *)(v5 + 120),  a3);
  __int128 v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x2000) == 0)
  {
LABEL_19:
    if ((v8 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }

  __int128 v22 = *((void *)this + 12);
  *(_BYTE *)__int128 v3 = 81;
  *(void *)((char *)v3 + 1) = v22;
  __int128 v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  __int128 v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x400) == 0)
  {
LABEL_19:
    if ((v10 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_36;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(_DWORD *)(v5 + 80),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }

      if (v17 > (v15.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
      {
        v18.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_37:
        std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 96), &__lk, v18);
        std::chrono::steady_clock::now();
        continue;
      }

  uint64_t v25 = *(_DWORD *)(a2 + 4);
  if (v25 == 8)
  {
    if (!*(_BYTE *)(a3 + 40) || !*(_BYTE *)(a3 + 36))
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
        sub_100390654();
      }
      goto LABEL_28;
    }

    uint64_t v38 = v20;
    uint64_t v39 = v19;
    uint64_t v41 = v9;
    uint64_t v42 = v11;
    uint64_t v43 = v8;
    int v44 = *(unsigned __int16 *)(a3 + 30) | ((unint64_t)*(unsigned int *)(a3 + 32) << 16);
    uint64_t v40 = a1;
    if (!*(_BYTE *)(a3 + 84)) {
      goto LABEL_51;
    }
    __int128 v36 = v16;
    uint64_t v37 = v18;
    log = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_DEFAULT,  "updating acquisition band & channel in trigger command",  buf,  2u);
    }

    if (!*(_BYTE *)(a3 + 84)) {
      sub_100006080();
    }
    uint64_t v26 = *(unsigned __int16 *)(a3 + 82);
    uint64_t v25 = *(_DWORD *)(a2 + 4);
    uint64_t v11 = v42;
    __int128 v8 = v43;
    int v9 = v41;
    uint64_t v16 = v36;
    LOWORD(v18) = v37;
    __int128 v20 = v38;
    id v19 = v39;
  }

  else
  {
    if (v25 == 2)
    {
      if (*(_BYTE *)(a3 + 40) && *(_BYTE *)(a3 + 29))
      {
        uint64_t v38 = v20;
        uint64_t v39 = v19;
        uint64_t v41 = v9;
        uint64_t v42 = v11;
        uint64_t v43 = v8;
        uint64_t v40 = a1;
        int v44 = *(void *)(a3 + 21);
LABEL_51:
        uint64_t v26 = 0xFFFF;
        goto LABEL_53;
      }

      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
        sub_100390628();
      }
LABEL_28:
      __int128 v22 = 0;
      *(_BYTE *)a4 = 0;
      goto LABEL_71;
    }

    uint64_t v40 = a1;
    int v44 = 0LL;
    uint64_t v26 = 0xFFFF;
  }

  if (v25 != 4 || !*(_BYTE *)(a3 + 40))
  {
    uint64_t v38 = v20;
    uint64_t v39 = v19;
    uint64_t v41 = v9;
    uint64_t v42 = v11;
    uint64_t v43 = v8;
    goto LABEL_53;
  }

  if (!*(_BYTE *)(a3 + 36))
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_1003905FC();
    }
    goto LABEL_28;
  }

  uint64_t v38 = v20;
  uint64_t v39 = v19;
  uint64_t v41 = v9;
  uint64_t v42 = v11;
  uint64_t v43 = v8;
  int v44 = *(unsigned __int16 *)(a3 + 30) | ((unint64_t)*(unsigned int *)(a3 + 32) << 16);
LABEL_53:
  uint64_t v27 = v10 / 0x3E8;
  uint64_t v28 = v18;
  uint64_t v29 = v14 | v16 | ((unint64_t)(unsigned __int16)v18 << 32);
  uint64_t v30 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    if (v12 > 2) {
      uint64_t v31 = "Ignored";
    }
    else {
      uint64_t v31 = (&off_1007B12F0)[(char)v12];
    }
    if (v39) {
      id v32 = v29;
    }
    else {
      id v32 = 0LL;
    }
    *(_DWORD *)std::stringbuf::string_type buf = 67112450;
    unsigned __int8 v33 = v28;
    NSErrorUserInfoKey v48 = v40;
    if (!v38) {
      unsigned __int8 v33 = 0;
    }
    v49 = 2080;
    NSErrorUserInfoKey v50 = v31;
    id v51 = 2048;
    NSErrorUserInfoKey v52 = v32;
    v53 = 1024;
    if (v26 == 0xFFFF) {
      __int128 v34 = -1;
    }
    else {
      __int128 v34 = v26;
    }
    NSErrorUserInfoKey v54 = v13;
    id v55 = 1024;
    id v56 = v33;
    v57 = 1024;
    id v58 = v41;
    v59 = 1024;
    id v60 = v43;
    v61 = 1024;
    id v62 = (unsigned __int16)v27;
    v63 = 1024;
    id v64 = v42;
    v65 = 1024;
    id v66 = (unsigned __int16)v23;
    unsigned __int8 v67 = 1024;
    unsigned __int8 v68 = v45;
    unsigned __int8 v69 = 1024;
    v70 = (unsigned __int16)v46;
    int v71 = 2048;
    v72 = v44;
    int v73 = 1024;
    int v74 = v34;
    _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "Built clientStartService packet: {\n tkt: %d\n , start_time_type: %s\n , start_time_absolute_us: %llu\n , start_time_offset_us: %d\n , bt_conn_interval_ms: %d\n , start_time_uncert_us: %d\n , cross_session_offset_ms: %d\n , scheduling_interval_ms: %d\n , dither_const_ms: %d\n , secondary_scheduling_delay_ms: %d\n , secondary_start_time_uncert_us: %d\n , secondary_scheduling_interval_ms: %d\n , addr: 0x%llx\n , nb_band_ch: %d }",  buf,  0x62u);
  }

  *(_WORD *)a4 = v40;
  *(_BYTE *)(a4 + 2) = v7;
  *(void *)(a4 + 3) = v29;
  *(_DWORD *)(a4 + 11) = v41;
  *(_BYTE *)(a4 + 15) = v43;
  *(_WORD *)(a4 + 16) = v27;
  *(_BYTE *)(a4 + 18) = v42;
  *(_WORD *)(a4 + 19) = v23;
  *(_DWORD *)(a4 + 21) = v45;
  *(_WORD *)(a4 + 25) = v46;
  *(void *)(a4 + 27) = v44;
  __int128 v22 = 1;
  *(_WORD *)(a4 + 35) = v26;
LABEL_71:
  *(_BYTE *)(a4 + 37) = v22;
}

  if (__lk.__owns_) {
LABEL_35:
  }
    std::mutex::unlock(__lk.__m_);
}

  return result;
}

          break;
        default:
          goto LABEL_34;
      }

      goto LABEL_35;
    case 3:
      unsigned __int8 v33 = 1;
      __int128 v20 = *(void *)(a1 + 472);
      if (!v20) {
        goto LABEL_44;
      }
      int v21 = *(void (**)(void))(*(void *)v20 + 48LL);
      goto LABEL_23;
    case 4:
      __int128 v34 = 0;
      __int128 v22 = *(void *)(a1 + 472);
      if (!v22) {
LABEL_44:
      }
        sub_10001EEF0();
      int v21 = *(void (**)(void))(*(void *)v22 + 48LL);
LABEL_23:
      v21();
LABEL_35:
      result = 2LL;
      break;
    case 6:
      result = 1LL;
      break;
    case 7:
      else {
        result = 0LL;
      }
      break;
    case 8:
      result = 0LL;
      break;
    default:
      return result;
  }

  return result;
}

    __int128 v18 = 0LL;
    goto LABEL_35;
  }

  while (1)
  {
    uint64_t v11 = *((unsigned __int16 *)v10 + 13);
LABEL_11:
    __int128 v10 = (uint64_t **)*v10;
    if (!v10) {
      goto LABEL_12;
    }
  }

  if (v11 < a3)
  {
    ++v10;
    goto LABEL_11;
  }

  (*(void (**)(uint8_t *__return_ptr, void, uint64_t))(**(void **)(a1 + 6464) + 48LL))( buf,  *(void *)(a1 + 6464),  a3);
  if (*(_DWORD *)&buf[648]) {
    sub_10028E120();
  }
  __int128 v18 = buf[8] != 0;
  if (!buf[8])
  {
    uint64_t v27 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
    {
      sub_100288FEC(buf, v34);
      sub_1003A4770();
    }

    uint64_t v28 = *(dispatch_queue_s **)(a1 + 56);
    v41[0] = _NSConcreteStackBlock;
    v41[1] = 3321888768LL;
    v41[2] = sub_100289814;
    v41[3] = &unk_1007BA8B8;
    v41[4] = v39;
    uint64_t v42 = v40;
    if (v40)
    {
      uint64_t v29 = (unint64_t *)&v40->__shared_owners_;
      do
        uint64_t v30 = __ldxr(v29);
      while (__stxr(v30 + 1, v29));
    }

    memcpy(v43, buf, sizeof(v43));
    sub_100137614(v44, (uint64_t)&v49);
    dispatch_async(v28, v41);
    if (v47 && v46 < 0) {
      operator delete(v45);
    }
    uint64_t v31 = v42;
    if (v42)
    {
      id v32 = (unint64_t *)&v42->__shared_owners_;
      do
        unsigned __int8 v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
  }

  if (v52 && v51 < 0) {
    operator delete(__p);
  }
LABEL_35:
  std::recursive_mutex::unlock(v8);
LABEL_36:
  uint64_t v23 = v40;
  if (v40)
  {
    uint64_t v24 = (unint64_t *)&v40->__shared_owners_;
    do
      uint64_t v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }

  return v18;
}

    std::recursive_mutex::unlock(v7);
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A48B4();
    }
    uint64_t v15 = 0LL;
  }

  __int128 v22 = v32;
  if (v32)
  {
    uint64_t v23 = (unint64_t *)&v32->__shared_owners_;
    do
      uint64_t v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }

  return v15;
}

void sub_10001198C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  _Unwind_Resume(a1);
}

void sub_100011C28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100011F78( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13)
{
  _Unwind_Resume(a1);
}

void sub_1000121CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, char a13)
{
  if (a11) {
    std::__shared_weak_count::__release_weak(a11);
  }
  sub_100012390((uint64_t)&a13);

  _Unwind_Resume(a1);
}

void *sub_1000122E4(void *a1, void *a2)
{
  __int128 v3 = (std::__shared_weak_count *)a2[1];
  *a1 = *a2;
  if (!v3)
  {
    a1[1] = 0LL;
LABEL_5:
    sub_100012324();
  }

  __int128 v4 = std::__shared_weak_count::lock(v3);
  a1[1] = v4;
  if (!v4) {
    goto LABEL_5;
  }
  return a1;
}

void sub_100012324()
{
  exception = __cxa_allocate_exception(8uLL);
}

uint64_t sub_100012358(uint64_t a1)
{
  return a1;
}

uint64_t sub_100012390(uint64_t a1)
{
  __int128 v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      unint64_t v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }

  return a1;
}

void sub_1000123E8(id *a1@<X1>, void *a2@<X8>)
{
  unint64_t v4 = operator new(0x48uLL);
  sub_100012448(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_100012538((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_100012434(_Unwind_Exception *a1)
{
}

void *sub_100012448(void *a1, id *location)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_1007A2120;
  sub_1000124E4((int)&v4, (uint64_t)(a1 + 3), location);
  return a1;
}

void sub_100012490(_Unwind_Exception *a1)
{
}

void sub_1000124A4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1007A2120;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1000124B4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1007A2120;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_1000124D4(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1000124E4(int a1, uint64_t a2, id *location)
{
  id WeakRetained = objc_loadWeakRetained(location);
  sub_10026398C(a2, WeakRetained);
}

void sub_100012524( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100012538(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2)
  {
    char v4 = (std::__shared_weak_count *)a2[1];
    if (!v4 || v4->__shared_owners_ == -1)
    {
      id v5 = *(std::__shared_weak_count **)(a1 + 8);
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          unint64_t v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
        p_shared_weak_owners = (unint64_t *)&v5->__shared_weak_owners_;
        do
          unint64_t v9 = __ldxr(p_shared_weak_owners);
        while (__stxr(v9 + 1, p_shared_weak_owners));
        char v4 = (std::__shared_weak_count *)a2[1];
      }

      *a2 = a3;
      a2[1] = v5;
      if (v4) {
        std::__shared_weak_count::__release_weak(v4);
      }
      if (v5)
      {
        __int128 v10 = (unint64_t *)&v5->__shared_owners_;
        do
          unint64_t v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
      }
    }
  }

void sub_1000125F4()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_100012670(_Unwind_Exception *a1)
{
}

void sub_100012688()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10040C618;
      v1[1] = unk_10040C628;
      v1[2] = xmmword_10040C638;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_100012728(_Unwind_Exception *a1)
{
}

void sub_100012740()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  uint64_t v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  __int128 v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F4AD8 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F4AC8 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4AC8, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  id v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F4AF0 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F4AE0 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4AE0, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  unint64_t v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F4B08 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F4AF8 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4AF8, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  uint64_t v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F4B20 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F4B10 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4B10, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  uint64_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  id v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F4B38 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F4B28 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4B28, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  int v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F4B50 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F4B40 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4B40, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  uint64_t v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F4B68 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F4B58 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4B58, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  uint64_t v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F4B80 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F4B70 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4B70, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  unsigned __int8 v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  int v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F4B98 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F4B88 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4B88, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100012D34( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100012DA8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A22B8[a1]);
}

void *sub_100012DBC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2310[a1]);
}

void *sub_100012DD0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2358[a1]);
}

void *sub_100012DE4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2378[a1]);
}

void sub_100012E24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100013008(_Unwind_Exception *a1)
{
  __int128 v4 = v3;

  _Unwind_Resume(a1);
}

LABEL_10:
}

  *a2 = v8;
  return v5;
}

  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      id v5 = *(void *)(a1 + 120);
      __int128 v6 = *(unsigned __int8 *)(v5 + 23);
      unint64_t v7 = v6;
      __int128 v8 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
      }
      else {
        unint64_t v9 = v8;
      }
      if (v9 >= 0x80)
      {
        __int128 v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9,  a2);
        __int128 v6 = *(unsigned __int8 *)(v5 + 23);
        __int128 v8 = *(void *)(v5 + 8);
        __int128 v3 = *(_DWORD *)(a1 + 284);
        unint64_t v7 = *(_BYTE *)(v5 + 23);
      }

      else
      {
        __int128 v10 = 1;
      }

      if (v7 < 0) {
        __int128 v6 = v8;
      }
      v4 += v10 + v6 + 1;
    }

    if ((v3 & 0x1000) != 0) {
      v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 176),  (unint64_t)a2)
    }
          + 1;
  }

  std::string v37 = *(_DWORD *)(a1 + 32);
  std::string v38 = *(_DWORD *)(a1 + 48);
  uint64_t v39 = v4;
  unint64_t v11 = *(_DWORD *)(a1 + 64);
  if (v11 < 1)
  {
    uint64_t v13 = 0;
  }

  else
  {
    __int128 v12 = 0LL;
    uint64_t v13 = 0;
    do
    {
      if ((v14 & 0x80000000) != 0)
      {
        uint64_t v15 = 10;
      }

      else if (v14 >= 0x80)
      {
        uint64_t v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
        unint64_t v11 = *(_DWORD *)(a1 + 64);
      }

      else
      {
        uint64_t v15 = 1;
      }

      v13 += v15;
      ++v12;
    }

    while (v12 < v11);
  }

  int v35 = *(_DWORD *)(a1 + 104);
  __int128 v36 = *(_DWORD *)(a1 + 80);
  __int128 v16 = *(_DWORD *)(a1 + 136);
  if (v16 < 1)
  {
    __int128 v18 = 0;
  }

  else
  {
    uint64_t v17 = 0LL;
    __int128 v18 = 0;
    do
    {
      if ((v19 & 0x80000000) != 0)
      {
        __int128 v20 = 10;
      }

      else if (v19 >= 0x80)
      {
        __int128 v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
        __int128 v16 = *(_DWORD *)(a1 + 136);
      }

      else
      {
        __int128 v20 = 1;
      }

      v18 += v20;
      ++v17;
    }

    while (v17 < v16);
  }

  int v21 = *(_DWORD *)(a1 + 152);
  __int128 v22 = *(_DWORD *)(a1 + 168);
  if (v22 < 1)
  {
    __int128 v24 = 0;
  }

  else
  {
    uint64_t v23 = 0LL;
    __int128 v24 = 0;
    do
    {
      if ((v25 & 0x80000000) != 0)
      {
        __int128 v26 = 10;
      }

      else if (v25 >= 0x80)
      {
        __int128 v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
        __int128 v22 = *(_DWORD *)(a1 + 168);
      }

      else
      {
        __int128 v26 = 1;
      }

      v24 += v26;
      ++v23;
    }

    while (v23 < v22);
  }

  uint64_t v27 = *(_DWORD *)(a1 + 192);
  if (v27 < 1)
  {
    uint64_t v29 = 0;
  }

  else
  {
    __int128 v28 = 0LL;
    uint64_t v29 = 0;
    do
    {
      if ((v30 & 0x80000000) != 0)
      {
        uint64_t v31 = 10;
      }

      else if (v30 >= 0x80)
      {
        uint64_t v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
        uint64_t v27 = *(_DWORD *)(a1 + 192);
      }

      else
      {
        uint64_t v31 = 1;
      }

      v29 += v31;
      ++v28;
    }

    while (v28 < v27);
  }

  __int128 v32 = *(void **)(a1 + 8);
  unsigned __int8 v33 = (v13
                     + v39
                     + v11
                     + v18
                     + 9 * (v36 + v38)
                     + v16
                     + v24
                     + v22
                     + v29
                     + v27
                     + 5 * (v35 + v37 + v21 + *(_DWORD *)(a1 + 208))
                     + 6 * (*(_DWORD *)(a1 + 240) + *(_DWORD *)(a1 + 224))
                     + 10 * (*(_DWORD *)(a1 + 272) + *(_DWORD *)(a1 + 256)));
  if (v32 && *v32 != v32[1]) {
    unsigned __int8 v33 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v33;
  *(_DWORD *)(a1 + 280) = v33;
  return v33;
}

  __int128 v10 = (void *)*((void *)this + 1);
  unint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  __int128 v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v9,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

      __int128 v6 = *(void *)(a2 + 56);
      *(_DWORD *)(a1 + 96) |= 0x20u;
      *(void *)(a1 + 56) = v6;
      id v5 = *(_DWORD *)(a2 + 96);
      goto LABEL_11;
    }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 32),  a3);
  if ((*(_DWORD *)(v5 + 56) & 0x10) == 0) {
    goto LABEL_14;
  }
LABEL_11:
  unint64_t v7 = *(void *)(v5 + 40);
  if (!v7) {
    unint64_t v7 = *(void *)(qword_100800278 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  v7,  a2,  a4);
LABEL_14:
  __int128 v10 = *(void **)(v5 + 8);
  unint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  __int128 v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

  if ((*((_BYTE *)this + 160) & 8) == 0) {
    goto LABEL_17;
  }
  __int128 v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 9);
  *(_BYTE *)__int128 v4 = 32;
  unint64_t v11 = (unint64_t)v4 + 1;
  if ((v10 & 0x80000000) != 0)
  {
    __int128 v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v10,  v11,  a3);
  }

  else
  {
    if (v10 <= 0x7F)
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v10;
      __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_17;
    }

    __int128 v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v10,  v11,  a3);
  }

  __int128 v4 = v12;
LABEL_17:
  uint64_t v13 = *((_DWORD *)this + 40);
  if ((v13 & 0x10) != 0)
  {
    __int128 v14 = (unsigned int *)*((void *)this + 5);
    if (!v14) {
      __int128 v14 = *(unsigned int **)(qword_100800310 + 40);
    }
    *(_BYTE *)__int128 v4 = 42;
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[7];
    if (v15 > 0x7F)
    {
      __int128 v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v15;
      __int128 v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }

    __int128 v4 = sub_10007FBB4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v16, a3);
    uint64_t v13 = *((_DWORD *)this + 40);
  }

  if ((v13 & 0x20) != 0)
  {
    uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 12);
    *(_BYTE *)__int128 v4 = 48;
    __int128 v18 = (unint64_t)v4 + 1;
    if ((v17 & 0x80000000) != 0)
    {
      id v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v17,  v18,  a3);
    }

    else
    {
      if (v17 <= 0x7F)
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v17;
        __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        goto LABEL_31;
      }

      id v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  v18,  a3);
    }

    __int128 v4 = v19;
  }

  __int128 v8 = *(void *)(v5 + 24);
  if (!v8) {
    __int128 v8 = *(void *)(qword_100800420 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v8,  a2,  a4);
  if ((*(_DWORD *)(v5 + 48) & 8) != 0)
  {
LABEL_13:
    unint64_t v9 = *(void *)(v5 + 32);
    if (!v9) {
      unint64_t v9 = *(void *)(qword_100800420 + 32);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v9,  a2,  a4);
  }

  id v5 = *(void **)(a1 + 8);
  if (v5 && *v5 != v5[1]) {
    __int128 v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 48) = v4;
  return v4;
}

  unint64_t v7 = *((void *)this + 4);
  *(_BYTE *)a2 = 25;
  *(void *)(a2 + 1) = v7;
  a2 += 9LL;
  __int128 v4 = *((_DWORD *)this + 25);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }

  if (*((int *)this + 14) >= 1)
  {
    unint64_t v9 = 0LL;
    do
    {
      __int128 v10 = *(unsigned int **)(*((void *)this + 6) + 8 * v9);
      *(_BYTE *)__int128 v3 = 50;
      unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[14];
      if (v11 > 0x7F)
      {
        __int128 v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v11,  (int)v3 + 1,  a3);
      }

      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v11;
        __int128 v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }

      __int128 v3 = sub_1000C1594((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v12, a3);
      ++v9;
    }

    while (v9 < *((int *)this + 14));
  }

  if (*((int *)this + 20) >= 1)
  {
    uint64_t v13 = 0LL;
    do
    {
      __int128 v14 = *(unsigned int **)(*((void *)this + 9) + 8 * v13);
      *(_BYTE *)__int128 v3 = 58;
      uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[10];
      if (v15 > 0x7F)
      {
        __int128 v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)v3 + 1,  a3);
      }

      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v15;
        __int128 v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }

      __int128 v3 = sub_1000C22C8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v16, a3);
      ++v13;
    }

    while (v13 < *((int *)this + 20));
  }

  id v19 = (void *)*((void *)this + 1);
  __int128 v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v17 = v19;
  if (!v19 || *v17 == v17[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v18,  v3,  a3);
  }
}

  if ((*((_BYTE *)this + 40) & 4) != 0)
  {
    __int128 v10 = (uint64_t *)*((void *)this + 3);
    if (*((char *)v10 + 23) < 0)
    {
      __int128 v10 = (uint64_t *)*v10;
      unint64_t v11 = *(void *)(*((void *)this + 3) + 8LL);
    }

    else
    {
      unint64_t v11 = *((unsigned __int8 *)v10 + 23);
    }

    wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v10, v11, 1LL);
    __int128 v14 = *((void *)this + 3);
    *(_BYTE *)__int128 v3 = 26;
    else {
      uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v14 + 23);
    }
    if (v15 > 0x7F)
    {
      __int128 v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)v3 + 1,  v12);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v15;
      __int128 v16 = (_DWORD)v3 + 2;
    }

    uint64_t v17 = *(char *)(v14 + 23);
    if (v17 >= 0) {
      __int128 v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14;
    }
    else {
      __int128 v18 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v14;
    }
    if (v17 >= 0) {
      id v19 = (const void *)*(unsigned __int8 *)(v14 + 23);
    }
    else {
      id v19 = (const void *)*(unsigned int *)(v14 + 8);
    }
    __int128 v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v18,  v19,  v16,  v13);
  }

  __int128 v22 = (void *)*((void *)this + 1);
  int v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  __int128 v20 = v22;
  if (!v22 || *v20 == v20[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v21,  v3,  a3);
  }
}

  unint64_t v7 = *(void **)(a1 + 8);
  id v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  __int128 v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  __int128 v10 = *((_DWORD *)this + 20);
  if ((v10 & 8) != 0)
  {
    unint64_t v11 = *((void *)this + 4);
    *(_BYTE *)__int128 v4 = 33;
    *(void *)((char *)v4 + 1) = v11;
    __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    __int128 v10 = *((_DWORD *)this + 20);
    if ((v10 & 0x10) == 0)
    {
LABEL_12:
      if ((v10 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }

  else if ((v10 & 0x10) == 0)
  {
    goto LABEL_12;
  }

  __int128 v12 = *((void *)this + 5);
  *(_BYTE *)__int128 v4 = 41;
  *(void *)((char *)v4 + 1) = v12;
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  __int128 v10 = *((_DWORD *)this + 20);
  if ((v10 & 0x20) == 0)
  {
LABEL_13:
    if ((v10 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_18;
  }

  unint64_t v9 = *((void *)this + 5);
  *(_BYTE *)a2 = 33;
  *(void *)(a2 + 1) = v9;
  a2 += 9LL;
  if ((*((_DWORD *)this + 15) & 0x10) != 0) {
    goto LABEL_11;
  }
LABEL_24:
  __int128 v18 = (void *)*((void *)this + 1);
  uint64_t v17 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  __int128 v16 = v18;
  if (!v18 || *v16 == v16[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v17,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  unint64_t v7 = *((void *)this + 4);
  *(_BYTE *)a2 = 25;
  *(void *)(a2 + 1) = v7;
  a2 += 9LL;
  __int128 v4 = *((_DWORD *)this + 17);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }

  *(void *)a4 = 0LL;
  *(void *)(a4 + 8) = 0LL;
  *(void *)(a4 + 16) = 0LL;
}

  return 0LL;
}

  return v19;
}

  return v7;
}

  return self;
}

      uint64_t v15 = *(void *)(a1 + 48);
      if (v15) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)v15 + 16LL))(v15, a2);
      }
      if (!*(_BYTE *)(a1 + 168))
      {
        result = sub_1002BFAFC(a1);
        unint64_t v11 = -3002;
LABEL_30:
        *(_DWORD *)a5 = v11;
        goto LABEL_31;
      }

      if (*(_DWORD *)(a1 + 164) != (_DWORD)a3)
      {
        result = sub_1002BFAFC(a1);
        unint64_t v11 = -3006;
        goto LABEL_30;
      }

      __int128 v16 = *(void *)(a1 + 48);
      if (v16) {
        (*(void (**)(uint64_t))(*(void *)v16 + 104LL))(v16);
      }
      (*(void (**)(int *__return_ptr, void, uint64_t))(**(void **)(a1 + 32) + 24LL))( &v38,  *(void *)(a1 + 32),  a3);
      if (v41) {
        uint64_t v17 = 0;
      }
      else {
        uint64_t v17 = -1004;
      }
      if (v38) {
        __int128 v18 = v38;
      }
      else {
        __int128 v18 = v17;
      }
      id v19 = *(void *)(a1 + 48);
      if (v19) {
        (*(void (**)(uint64_t))(*(void *)v19 + 112LL))(v19);
      }
      if (v18)
      {
        __int128 v20 = qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_1003A6E04(v18, v20);
        }
        result = sub_1002BFAFC(a1);
        unint64_t v11 = -3013;
        goto LABEL_30;
      }

      v21.n128_f64[0] = sub_1002B7588(*(void **)a1, a4, (uint64_t)buf);
      if (v47) {
        __int128 v22 = 0;
      }
      else {
        __int128 v22 = -1004;
      }
      if (*(_DWORD *)buf) {
        uint64_t v23 = *(_DWORD *)buf;
      }
      else {
        uint64_t v23 = v22;
      }
      if (v23)
      {
        result = sub_1002BFAFC(a1);
        *(_DWORD *)a5 = v23;
        goto LABEL_31;
      }

      if (!v47) {
        sub_100006080();
      }
      if (a4[1] && !buf[9])
      {
        result = sub_1002BFAFC(a1);
        unint64_t v11 = -3004;
        goto LABEL_30;
      }

      if ((*(unsigned int (**)(void, __n128))(**(void **)(a1 + 16) + 16LL))(*(void *)(a1 + 16), v21))
      {
        __int128 v24 = *(unsigned __int8 *)(a1 + 160);
        if (v24 != 2)
        {
          if (*(void *)(a1 + 152)) {
            sub_1002C1B28(a1 + 128, v24, 2);
          }
          *(_BYTE *)(a1 + 160) = 2;
        }

        result = *(void *)(a1 + 48);
        if (result) {
          result = (*(uint64_t (**)(uint64_t))(*(void *)result + 40LL))(result);
        }
        uint64_t v25 = 0LL;
      }

      else
      {
        if (!v47) {
          sub_100006080();
        }
        if (!*(_BYTE *)(a1 + 168)) {
          sub_100006080();
        }
        __int128 v36 = *(_DWORD *)(a1 + 164);
        std::string v37 = *(_OWORD *)&v45[2];
        uint64_t v42 = v46;
        uint64_t v27 = *(void *)(a1 + 88);
        if (!v27) {
          sub_10001EEF0();
        }
        (*(void (**)(void *__return_ptr, uint64_t, int *, const char **))(*(void *)v27 + 48LL))( v34,  v27,  &v36,  &v42);
        if (v35) {
          __int128 v28 = 0;
        }
        else {
          __int128 v28 = -1004;
        }
        if (LODWORD(v34[0])) {
          uint64_t v29 = v34[0];
        }
        else {
          uint64_t v29 = v28;
        }
        if (v29)
        {
          result = sub_1002BFAFC(a1);
          *(_DWORD *)a5 = v29;
          goto LABEL_31;
        }

        if (!v35) {
          sub_100006080();
        }
        __int128 v30 = *(void *)a1;
        uint64_t v42 = (const char *)v34[1];
        uint64_t v25 = sub_1002B6AC4(v30, &v42);
        uint64_t v31 = *(unsigned __int8 *)(a1 + 160);
        if (v31 != 3)
        {
          if (*(void *)(a1 + 152)) {
            sub_1002C1B28(a1 + 128, v31, 3);
          }
          *(_BYTE *)(a1 + 160) = 3;
        }

        (*(void (**)(void))(**(void **)(a1 + 16) + 32LL))(*(void *)(a1 + 16));
        result = *(void *)(a1 + 48);
        if (result) {
          result = (*(uint64_t (**)(uint64_t, void, void, void))(*(void *)result + 24LL))( result,  BYTE9(v37),  v37,  BYTE6(v37));
        }
      }

      if (!v47) {
        sub_100006080();
      }
      if (!v41) {
        sub_100006080();
      }
      __int128 v26 = *(_WORD *)&buf[8];
      *(void *)(a5 + 8) = v39;
      *(_DWORD *)(a5 + 16) = v40;
      *(_DWORD *)a5 = 0;
      *(void *)(a5 + 24) = v25;
      *(_WORD *)(a5 + sub_100012358(v1 - 32) = v26;
      *(_BYTE *)(a5 + 40) = 1;
      return result;
    default:
      goto LABEL_10;
  }

  if (*(_BYTE *)(a2 + 64)) {
    unint64_t v7 = *(_DWORD *)(a2 + 32) == 1;
  }
  else {
    unint64_t v7 = 0;
  }
  __int128 v8 = !v7;
  if (v7)
  {
    unint64_t v9 = a1 + 16;
    if (*((_BYTE *)a1 + 144))
    {
      __int128 v10 = a1 + 22;
      if (*(double *)(a2 + 16) - *((double *)a1 + 16) <= 0.2)
      {
        id v19 = *(double *)(a2 + 40);
        __int128 v20 = *(double *)(a2 + 48);
        *((double *)a1 + 8) = v19;
        *((double *)a1 + 9) = v20;
        int v21 = *(double *)(a2 + 56);
        *((double *)a1 + 10) = v21;
        __int128 v22 = *((double *)a1 + 12);
        uint64_t v23 = v19 - *((double *)a1 + 11);
        __int128 v24 = *(double *)(a2 + 24);
        *((double *)a1 + 17) = v24;
        if (sqrt((v20 - v22) * (v20 - v22) + v23 * v23 + (v21 - *((double *)a1 + 13)) * (v21 - *((double *)a1 + 13))) >= 0.5)
        {
          unint64_t *v10 = *v9;
          *((void *)a1 + 13) = *((void *)a1 + 10);
          *((double *)a1 + 15) = v24;
          *((_BYTE *)a1 + 112) = 0;
        }

        else
        {
          *((_BYTE *)a1 + 112) = v24 - *((double *)a1 + 15) >= 1.0;
        }

        goto LABEL_24;
      }

      *((void *)a1 + 14) = 0LL;
      *((_OWORD *)a1 + 5) = 0u;
      *((_OWORD *)a1 + 6) = 0u;
      *unint64_t v9 = 0u;
      *((_BYTE *)a1 + 144) = 1;
      *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 40);
      *((void *)a1 + 10) = *(void *)(a2 + 56);
      unint64_t *v10 = *v9;
      *((void *)a1 + 13) = *((void *)a1 + 10);
    }

    else
    {
      *((void *)a1 + 14) = 0LL;
      *((_OWORD *)a1 + 5) = 0u;
      *((_OWORD *)a1 + 6) = 0u;
      *unint64_t v9 = 0u;
      *((_BYTE *)a1 + 144) = 1;
      *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 40);
      *((void *)a1 + 10) = *(void *)(a2 + 56);
      *(_OWORD *)(a1 + 22) = *v9;
      *((void *)a1 + 13) = *((void *)a1 + 10);
    }

    unint64_t v11 = *(void *)(a2 + 24);
    *((void *)a1 + 16) = *(void *)(a2 + 16);
    *((void *)a1 + 17) = v11;
    *((void *)a1 + 15) = v11;
    goto LABEL_24;
  }

  if (*((_BYTE *)a1 + 144)) {
    *((_BYTE *)a1 + 144) = 0;
  }
LABEL_24:
  if (!*((_BYTE *)a1 + 32))
  {
    __int128 v16 = *((double *)a1 + 5);
    uint64_t v17 = a1[12];
    if ((v8 & 1) != 0)
    {
      if (!v17)
      {
LABEL_60:
        __int128 v12 = 1LL;
        goto LABEL_61;
      }
    }

    else
    {
      if (!v17)
      {
        uint64_t v17 = *((_BYTE *)a1 + 112) != 0 && v16 > *((double *)a1 + 15);
        goto LABEL_60;
      }

      if (*((_BYTE *)a1 + 112))
      {
        __int128 v12 = 1LL;
        __int128 v16 = *((double *)a1 + 15);
        uint64_t v17 = 1;
LABEL_61:
        *a1 = v12;
        a1[2] = v17;
        *((double *)a1 + 2) = v16;
        *((_BYTE *)a1 + 24) = v12;
        *((_BYTE *)a1 + sub_100012358(v1 - 32) = 1;
        return v12;
      }
    }

    __int128 v12 = 0LL;
    uint64_t v17 = 0;
    goto LABEL_61;
  }

  __int128 v12 = *a1;
  if ((_DWORD)v12 == 2)
  {
    __int128 v12 = 1LL;
    *a1 = 1;
  }

  uint64_t v13 = *((double *)a1 + 5);
  __int128 v14 = a1[12];
  if ((v8 & 1) != 0)
  {
    if (!v14)
    {
      uint64_t v15 = 0;
      goto LABEL_46;
    }

      if (a2 == 2)
      {
        unint64_t v7 = 0.0;
        goto LABEL_13;
      }

      break;
    case 1:
      if (!a2) {
        goto LABEL_12;
      }
      goto LABEL_10;
    case 2:
      if (a2)
      {
        if (a2 != 1) {
          break;
        }
        goto LABEL_8;
      }

  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 8));
}

    uint64_t v27 = 1LL;
    goto LABEL_11;
  }

  id v19 = sub_1003621A0((uint64_t)a2, &v54, v12, v13, v14, v15, v16, v17);
LABEL_7:
  uint64_t v27 = v19;
  if ((_DWORD)v19) {
    goto LABEL_11;
  }
  sub_10032C3DC("Sending RangingConfig command, session ID %hu", v20, v21, v22, v23, v24, v25, v26, *a2);
  v51[0] = 0;
  v53 = 0;
  std::mutex::lock((std::mutex *)(a1 + 232));
  if (sub_100367D4C(a1, (uint64_t)v54, ((_DWORD)v55 - (_DWORD)v54), 0LL, v28, v29, v30, v31))
  {
    sub_10032C51C("RangingConfig response failed", v32, v33, v34, v35, v36, v37, v38, v46);
    std::mutex::unlock((std::mutex *)(a1 + 232));
    goto LABEL_10;
  }

  sub_10032C3DC("Ranging configured, session ID %hu", v32, v33, v34, v35, v36, v37, v38, *a2);
  sub_100367950(a1, 1, 0LL, v8, (uint64_t)&v47);
  sub_10036CAD4((uint64_t)v51, &v47);
  if (v50 && __p)
  {
    v49 = __p;
    operator delete(__p);
  }

  std::mutex::unlock((std::mutex *)(a1 + 232));
  if (!v53) {
    goto LABEL_10;
  }
  sub_100355380((void *)(a1 + 504), (uint64_t)v51, (uint64_t *)v52, v40, v41, v42, v43, v44);
  if (v53 && v52[0])
  {
    v52[1] = v52[0];
    operator delete(v52[0]);
  }

  uint64_t v27 = 0LL;
LABEL_11:
  if (v54)
  {
    id v55 = v54;
    operator delete(v54);
  }

  return v27;
}

void sub_100013154( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1000132C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000133BC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1000133E8(uint64_t a1, void *a2)
{
  __int128 v3 = a2;
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  id v5 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134217984;
    xpc_activity_state_t v20 = state;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "PRXPCActivityManager state: %ld", buf, 0xCu);
  }

  if (state == 2)
  {
    uint64_t v7 = *(void *)(a1 + 40);
    __int128 v8 = *(void **)(a1 + 48);
    unint64_t v9 = *(dispatch_queue_s **)(v7 + 8);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472LL;
    v17[2] = sub_100013574;
    v17[3] = &unk_1007A2248;
    v17[4] = v7;
    id v18 = v8;
    dispatch_sync(v9, v17);
  }

  else if (state)
  {
    __int128 v10 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_1003894D0(state, v10, v11, v12, v13, v14, v15, v16);
    }
  }

  else
  {
    xpc_object_t v6 = xpc_activity_copy_criteria(v3);
    if (!v6) {
      xpc_activity_set_criteria(v3, *(xpc_object_t *)(a1 + 32));
    }
  }
}

void sub_100013554(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100013574(uint64_t a1)
{
  return _[*(id *)(a1 + 32) runActivityWithIdentifier:*(void *)(a1 + 40)];
}

void sub_100013708(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000139B4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_1000139E0(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_100013A18( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_100013A28()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_100013AA4(_Unwind_Exception *a1)
{
}

void sub_100013ABC()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10040C698;
      v1[1] = unk_10040C6A8;
      v1[2] = xmmword_10040C6B8;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_100013B5C(_Unwind_Exception *a1)
{
}

void sub_100013B74()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  uint64_t v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  __int128 v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F4BB0 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F4BA0 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4BA0, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  id v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F4BC8 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F4BB8 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4BB8, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  unint64_t v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F4BE0 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F4BD0 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4BD0, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  uint64_t v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F4BF8 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F4BE8 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4BE8, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  uint64_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  id v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F4C10 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F4C00 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4C00, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  int v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F4C28 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F4C18 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4C18, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  uint64_t v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F4C40 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F4C30 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4C30, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  uint64_t v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F4C58 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F4C48 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4C48, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  unsigned __int8 v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  int v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F4C70 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F4C60 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4C60, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100014168( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1000141DC()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F4E50);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_1007F4E50))
  {
    sub_100015F8C((uint64_t)&unk_1007F4C78);
    __cxa_atexit((void (*)(void *))sub_10001426C, &unk_1007F4C78, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1007F4E50);
  }

  return &unk_1007F4C78;
}

void sub_100014254(_Unwind_Exception *a1)
{
}

unint64_t sub_100014270(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v4 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if ((sub_100014420() & 1) != 0)
  {
    id v5 = [v3 length];
    __int128 v6 = (os_log_s *)qword_1008000A0;
    if (v5 == (id)6)
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        int v20 = 138412290;
        id v21 = v3;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,New self ID: %@",  (uint8_t *)&v20,  0xCu);
      }

      id v7 = [v3 copy];
      __int128 v8 = *(void **)(a1 + 192);
      *(void *)(a1 + 192) = v7;

      *(_BYTE *)(a1 + 54) = 1;
      sub_1000147F0(a1, 0.0);
      unint64_t v9 = 0LL;
      uint64_t v10 = 0LL;
    }

    else
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_100389630(v6, v12, v13, v14, v15, v16, v17, v18);
      }
      unint64_t v9 = &_mh_execute_header;
      uint64_t v10 = 2LL;
    }
  }

  else
  {
    uint64_t v11 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      LOWORD(v20) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "#wifi-service,ignoring self id on unsupported platform",  (uint8_t *)&v20,  2u);
    }

    uint64_t v10 = 0LL;
    unint64_t v9 = &_mh_execute_header;
  }

  std::mutex::unlock(v4);

  return v10 | (unint64_t)v9;
}

void sub_1000143F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100014420()
{
  id v0 = sub_1001CD97C();
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(v0);
  __int128 v2 = sub_1001CD82C();
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  __int128 v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v12 = 138412290;
    uint64_t v13 = v1;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,wifi chipset: %@",  (uint8_t *)&v12,  0xCu);
  }

  id v5 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v12 = 138412290;
    uint64_t v13 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,productType: %@",  (uint8_t *)&v12,  0xCu);
  }

  if (v1)
  {
    if ((([v1 hasPrefix:@"4357"] & 1) != 0
       || ([v1 hasPrefix:@"4377"] & 1) != 0
       || ([v1 hasPrefix:@"4378"] & 1) != 0
       || ([v1 hasPrefix:@"4387"] & 1) != 0
       || ([v1 hasPrefix:@"4388"] & 1) != 0
       || ([v1 hasPrefix:@"4399"] & 1) != 0
       || [v1 hasPrefix:@"marconi"])
      && (([v3 hasPrefix:@"iPhone"] & 1) != 0
       || ([v3 hasPrefix:@"AudioAccessory1"] & 1) != 0
       || ([v3 hasPrefix:@"Mac"] & 1) != 0
       || ([v3 hasPrefix:@"iMac"] & 1) != 0
       || ([v3 hasPrefix:@"RealityDevice"] & 1) != 0
       || ([v3 hasPrefix:@"Watch"] & 1) != 0
       || ([v3 hasPrefix:@"AudioAccessory6,1"] & 1) != 0
       || [v3 hasPrefix:@"AudioAccessory5,"]))
    {
      __int128 v6 = (os_log_s *)qword_1008000A0;
      uint64_t v7 = 1LL;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
      {
        LOWORD(v12) = 0;
        __int128 v8 = "#wifi-service,Found ranging supported capability via chipset.";
LABEL_31:
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, v8, (uint8_t *)&v12, 2u);
        goto LABEL_35;
      }

      goto LABEL_35;
    }

    uint64_t v10 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      LOWORD(v12) = 0;
      uint64_t v11 = "#wifi-service,Ranging not supported - via chipset.";
      goto LABEL_40;
    }

    goto LABEL_34;
  }

  if (!v3)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038969C();
    }
    goto LABEL_34;
  }

  if (([v3 hasPrefix:@"Watch"] & 1) == 0
    && ([v3 hasPrefix:@"Mac"] & 1) == 0
    && ([v3 hasPrefix:@"iMac"] & 1) == 0
    && ([v3 hasPrefix:@"AudioAccessory6,1"] & 1) == 0
    && ![v3 hasPrefix:@"AudioAccessory5,"])
  {
    uint64_t v10 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      LOWORD(v12) = 0;
      uint64_t v11 = "#wifi-service,Ranging not supported - via product type.";
LABEL_40:
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, v11, (uint8_t *)&v12, 2u);
    }

LABEL_35:
  return v7;
}

  std::mutex::lock(&stru_1007F2500);
  uint64_t v39 = ++byte_1007F5168;
  *(void *)std::stringbuf::string_type buf = &self->_lifecycleTimeoutType;
  uint64_t v40 = sub_100030C30( (uint64_t)&xmmword_1007F5118,  (int *)&self->_lifecycleTimeoutType,  (uint64_t)&unk_1004242F8,  (_DWORD **)buf);
  uint64_t v41 = *((_BYTE *)v40 + 20) + 1;
  *((_BYTE *)v40 + 20) = v41;
  if (self->_bundleIdentifier)
  {
    if (*((char *)&self->_bundleIdAsStdString.__r_.__value_.var0.var1 + 23) < 0)
    {
      if (self->_bundleIdAsStdString.__r_.__value_.var0.var1.__size_) {
        goto LABEL_38;
      }
    }

    else if (*((_BYTE *)&self->_bundleIdAsStdString.__r_.__value_.var0.var1 + 23))
    {
LABEL_38:
      *(void *)std::stringbuf::string_type buf = &self->_bundleIdAsStdString;
      uint64_t v42 = sub_100030E50( (uint64_t)&xmmword_1007F5140,  (unsigned __int8 *)&self->_bundleIdAsStdString,  (uint64_t)&unk_1004242F8,  (__int128 **)buf);
      uint64_t v43 = v42[40] + 1;
      v42[40] = v43;
      goto LABEL_40;
    }

    __assert_rtn( "-[NIServerAnalyticsManager sessionSuccessfullyRanWithConfig:withTimestamp:]",  "NIServerAnalyticsManager.mm",  864,  "!_bundleIdAsStdString.empty()");
  }

  uint64_t v43 = 0;
LABEL_40:
  std::mutex::unlock(&stru_1007F2500);
  int v44 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v45 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v39));
  -[NSMutableDictionary setObject:forKey:](v44, "setObject:forKey:", v45, @"numSimultaneousSessions_All");

  switch(*(_DWORD *)p_lifecycleTimeoutType)
  {
    case 1:
      v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v41));
      -[NSMutableDictionary setObject:forKey:](v44, "setObject:forKey:", v46, @"numSimultaneousSessions_Peer");
      goto LABEL_47;
    case 2:
      v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v41));
      -[NSMutableDictionary setObject:forKey:]( v44,  "setObject:forKey:",  v46,  @"numSimultaneousSessions_Accessory");
      goto LABEL_47;
    case 3:
      v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v41));
      -[NSMutableDictionary setObject:forKey:]( v44,  "setObject:forKey:",  v46,  @"com.apple.nearbyinteraction.peopleFindingSession.FindeeSummary");
      goto LABEL_47;
    case 4:
      v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v41));
      -[NSMutableDictionary setObject:forKey:]( v44,  "setObject:forKey:",  v46,  @"com.apple.nearbyinteraction.peopleFindingSession.FinderSummary");
LABEL_47:

      break;
    default:
      break;
  }

  int v47 = self->_bundleIdentifier;
  if (v47)
  {
    -[NSMutableDictionary setObject:forKey:](v44, "setObject:forKey:", v47, @"appBundleID");
    NSErrorUserInfoKey v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v43));
    -[NSMutableDictionary setObject:forKey:](v44, "setObject:forKey:", v48, @"numSimultaneousSessions_ThisApp");
  }

  v49 = -[NSMutableDictionary mutableCopy](v44, "mutableCopy");
  NSErrorUserInfoKey v50 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v50, OS_LOG_TYPE_INFO))
  {
    id v51 = self->_bundleIdentifier;
    NSErrorUserInfoKey v52 = (void *)objc_claimAutoreleasedReturnValue([v49 description]);
    *(_DWORD *)std::stringbuf::string_type buf = 138412802;
    *(void *)&uint8_t buf[4] = v51;
    *(_WORD *)&buf[12] = 2112;
    *(void *)&buf[14] = @"com.apple.nearbyinteractionv2.start";
    int v74 = 2112;
    uint64_t v75 = *(double *)&v52;
    _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_INFO,  "#ni-ca,[%@] send analytics event %@:\n%@\n",  buf,  0x20u);
  }

  v68[0] = _NSConcreteStackBlock;
  v68[1] = 3221225472LL;
  v68[2] = sub_100029B38;
  v68[3] = &unk_1007A2298;
  v53 = v49;
  unsigned __int8 v69 = v53;
  AnalyticsSendEventLazy(@"com.apple.nearbyinteractionv2.start", v68);
}

    sub_100006080();
  }

  if (!v8) {
    return (char)a3;
  }
LABEL_45:
  uint64_t v31 = (unint64_t *)&v8->__shared_owners_;
  do
    __int128 v32 = __ldaxr(v31);
  while (__stlxr(v32 - 1, v31));
  if (!v32)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }

  return (char)a3;
}

    *(_DWORD *)(a1 + 96) |= 4u;
    uint64_t v17 = *(void **)(a1 + 32);
    if (!v17)
    {
      uint64_t v17 = operator new(0x28uLL);
      sub_100066254(v17);
      *(void *)(a1 + sub_100012358(v1 - 32) = v17;
    }

    uint64_t v18 = *(void *)(a2 + 32);
    if (!v18) {
      uint64_t v18 = *(void *)(qword_1008001D0 + 32);
    }
    sub_1000662A0((uint64_t)v17, v18);
    id v5 = *(_DWORD *)(a2 + 96);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_43;
    }

  uint64_t v13 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 104) |= 0x400u;
  *(_DWORD *)(a1 + 56) = v13;
  id v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x800) == 0)
  {
LABEL_20:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_37;
  }

  uint64_t v16 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 88) |= 0x1000u;
  *(_DWORD *)(a1 + 68) = v16;
  id v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x2000) == 0)
  {
LABEL_27:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_28;
    }
LABEL_37:
    uint64_t v18 = *(_DWORD *)(a2 + 76);
    *(_DWORD *)(a1 + 88) |= 0x4000u;
    *(_DWORD *)(a1 + 76) = v18;
    if ((*(_DWORD *)(a2 + 88) & 0x8000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_29;
  }

  uint64_t v18 = *(_DWORD *)(a1 + 56);
  id v19 = v18 + v5;
  if (v18 >= 1)
  {
    int v20 = 0LL;
    do
    {
      id v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100090A58( *(void *)(*(void *)(a1 + 48) + 8 * v20),  a2);
      __int128 v22 = (int)v21;
      else {
        uint64_t v23 = 1;
      }
      v19 += v22 + v23;
      ++v20;
    }

    while (v20 < *(int *)(a1 + 56));
  }

  __int128 v24 = *(_DWORD *)(a1 + 88);
  uint64_t v25 = v24 + v19;
  if (v24 >= 1)
  {
    __int128 v26 = 0LL;
    do
    {
      uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100090A58( *(void *)(*(void *)(a1 + 80) + 8 * v26),  a2);
      __int128 v28 = (int)v27;
      else {
        uint64_t v29 = 1;
      }
      v25 += v28 + v29;
      ++v26;
    }

    while (v26 < *(int *)(a1 + 88));
  }

  __int128 v30 = *(_DWORD *)(a1 + 112);
  uint64_t v31 = (v30 + v25);
  if (v30 >= 1)
  {
    __int128 v32 = 0LL;
    do
    {
      unsigned __int8 v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100090A58( *(void *)(*(void *)(a1 + 104)
                                                                                         + 8 * v32),
                                                                               a2);
      __int128 v34 = (int)v33;
      else {
        int v35 = 1;
      }
      uint64_t v31 = (v34 + v31 + v35);
      ++v32;
    }

    while (v32 < *(int *)(a1 + 112));
  }

  __int128 v36 = *(void **)(a1 + 8);
  if (v36 && *v36 != v36[1]) {
    uint64_t v31 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v31;
  *(_DWORD *)(a1 + 128) = v31;
  return v31;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(_DWORD *)(v5 + 52),  a2,  a4);
  __int128 v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x400) == 0)
  {
LABEL_11:
    if ((v6 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  *(_DWORD *)(v5 + 64),  a2,  a4);
  __int128 v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 60),  a2,  a4);
  __int128 v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }

  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = v17;
  id v19 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    int v20 = *(unsigned __int8 *)(v16 + 23);
  }
  else {
    int v20 = v19;
  }
  if (v20 >= 0x80)
  {
    id v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20,  a2);
    uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
    id v19 = *(void *)(v16 + 8);
    id v3 = *(_DWORD *)(a1 + 76);
    uint64_t v18 = *(_BYTE *)(v16 + 23);
  }

  else
  {
    id v21 = 1;
  }

  if (v18 < 0) {
    uint64_t v17 = v19;
  }
  id v5 = (v5 + v21 + v17 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_44:
    __int128 v22 = *(void *)(a1 + 64);
    uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
    __int128 v24 = v23;
    uint64_t v25 = *(void *)(v22 + 8);
    if ((v23 & 0x80u) == 0) {
      __int128 v26 = *(unsigned __int8 *)(v22 + 23);
    }
    else {
      __int128 v26 = v25;
    }
    if (v26 >= 0x80)
    {
      uint64_t v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26,  a2);
      uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
      uint64_t v25 = *(void *)(v22 + 8);
      __int128 v24 = *(_BYTE *)(v22 + 23);
    }

    else
    {
      uint64_t v27 = 1;
    }

    if (v24 < 0) {
      uint64_t v23 = v25;
    }
    id v5 = (v5 + v27 + v23 + 1);
  }

  uint64_t v16 = *(uint64_t **)(v5 + 88);
  if (*((char *)v16 + 23) < 0)
  {
    uint64_t v16 = (uint64_t *)*v16;
    uint64_t v17 = *(void *)(*(void *)(v5 + 88) + 8LL);
  }

  else
  {
    uint64_t v17 = *((unsigned __int8 *)v16 + 23);
  }

  wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v16, v17, 1LL);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(8LL, *(void *)(v5 + 88), a2);
  uint64_t v7 = *(_DWORD *)(v5 + 120);
  if ((v7 & 0x100) == 0)
  {
LABEL_13:
    if ((v7 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_42;
  }

  int v20 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) |= 0x1000u;
  *(_DWORD *)(a1 + 56) = v20;
  id v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x2000) != 0) {
    goto LABEL_36;
  }
LABEL_20:
  if ((v5 & 0x4000) != 0)
  {
LABEL_21:
    uint64_t v7 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x4000u;
    *(_DWORD *)(a1 + 64) = v7;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  uint64_t v14 = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 140) |= 0x2000u;
  *(void *)(a1 + 112) = v14;
  id v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 0x4000) == 0)
  {
LABEL_26:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_38;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  *(_DWORD *)(v5 + 96),  (int)a2,  a4);
  __int128 v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_37;
  }

  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0) {
      LODWORD(v5) = v5 + 9;
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 104);
      if (v18 >= 0x80)
      {
        id v3 = *(_DWORD *)(a1 + 112);
      }

      else
      {
        id v19 = 2;
      }

      LODWORD(v5) = v19 + v5;
    }

    int v20 = v5 + 9;
    if ((v3 & 0x400) == 0) {
      int v20 = v5;
    }
    if ((v3 & 0x800) != 0) {
      v20 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      id v5 = v20 + 9;
    }
    else {
      id v5 = v20;
    }
  }

  id v21 = *(void **)(a1 + 8);
  if (v21 && *v21 != v21[1]) {
    id v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v5;
  *(_DWORD *)(a1 + 108) = v5;
  return v5;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  (int)a2,  *(double *)(v5 + 88),  a3);
  __int128 v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  *(void *)(v5 + 72),  (unint64_t)a2,  a4);
  __int128 v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_37;
  }

  id v19 = *((_DWORD *)this + 25);
  *(_BYTE *)a2 = 125;
  *(_DWORD *)(a2 + 1) = v19;
  a2 += 5LL;
  __int128 v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x8000) == 0)
  {
LABEL_17:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }

  if ((v3 & 0xFF0000) != 0)
  {
    uint64_t v7 = v5 + 6;
    if ((v3 & 0x10000) == 0) {
      uint64_t v7 = v5;
    }
    if ((v3 & 0x20000) != 0) {
      id v5 = v7 + 6;
    }
    else {
      id v5 = v7;
    }
    if ((v3 & 0x40000) != 0)
    {
      __int128 v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 116);
      if ((v8 & 0x80000000) != 0)
      {
        unint64_t v9 = 12;
      }

      else if (v8 >= 0x80)
      {
      }

      else
      {
        unint64_t v9 = 3;
      }

      id v5 = (v9 + v5);
    }
  }

  uint64_t v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    id v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v5;
  *(_DWORD *)(a1 + 120) = v5;
  return v5;
}

  int v20 = *(void *)(a2 + 120);
  *(_DWORD *)(a1 + 148) |= 0x1000u;
  *(void *)(a1 + 120) = v20;
  __int128 v6 = *(_DWORD *)(a2 + 148);
  if ((v6 & 0x2000) != 0) {
    goto LABEL_36;
  }
LABEL_21:
  if ((v6 & 0x4000) != 0)
  {
LABEL_22:
    __int128 v8 = *(void *)(a2 + 136);
    *(_DWORD *)(a1 + 148) |= 0x4000u;
    *(void *)(a1 + 136) = v8;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE,  (int)a2,  *(double *)(v5 + 128),  a3);
  if ((*(_DWORD *)(v5 + 148) & 0x4000) != 0) {
LABEL_20:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF,  (int)a2,  *(double *)(v5 + 136),  a3);
LABEL_21:
  uint64_t v11 = *(void **)(v5 + 8);
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unint64_t v9 = v11;
  if (v11)
  {
    if (*v9 != v9[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
    }
  }

  return this;
}

  uint64_t v23 = *((void *)this + 13);
  *(_BYTE *)id v3 = 89;
  *(void *)((char *)v3 + 1) = v23;
  id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  uint64_t v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x800) == 0)
  {
LABEL_20:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_37;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(_DWORD *)(v5 + 84),  a2,  a4);
  __int128 v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_37;
  }

      *(_BYTE *)(a1 + 8144) = 1;
LABEL_45:
      sub_100307628((void *)(a1 + 8048), (__int128 *)a2);
      __int128 v22 = *(unsigned __int8 *)(a1 + 8040);
      uint64_t v23 = *(_OWORD *)(a2 + 32);
      __int128 v24 = *(_OWORD *)(a2 + 48);
      uint64_t v25 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 7856) = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 7904) = v24;
      *(_OWORD *)(a1 + 7888) = v23;
      *(_OWORD *)(a1 + 7872) = v25;
      __int128 v26 = *(_OWORD *)(a2 + 96);
      uint64_t v27 = *(_OWORD *)(a2 + 112);
      __int128 v28 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 7920) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 7968) = v27;
      *(_OWORD *)(a1 + 7952) = v26;
      *(_OWORD *)(a1 + 7936) = v28;
      __int128 v30 = *(_OWORD *)(a2 + 144);
      uint64_t v29 = *(_OWORD *)(a2 + 160);
      uint64_t v31 = *(void *)(a2 + 176);
      *(_OWORD *)(a1 + 7984) = *(_OWORD *)(a2 + 128);
      *(void *)(a1 + 80sub_100012358(v1 - 32) = v31;
      *(_OWORD *)(a1 + 8016) = v29;
      *(_OWORD *)(a1 + 8000) = v30;
      if (!v22) {
        *(_BYTE *)(a1 + 8040) = 1;
      }
      *(void *)(a1 + 8280) = *(void *)(a1 + 24);
      if (*(_BYTE *)(a1 + 8144))
      {
        sub_100307628((void *)(a1 + 8096), (__int128 *)a2);
        sub_1002C7C24(a1 + 4944, a2);
        __int128 v32 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          unsigned __int8 v33 = sub_100305D3C(a1);
          __int128 v34 = *(unsigned __int8 *)(a1 + 7688);
          int v35 = *(unsigned __int8 *)(a1 + 7704);
          __int128 v36 = *(unsigned __int8 *)(a1 + 8360);
          uint64_t v40 = 67109888;
          *(_DWORD *)uint64_t v41 = v33;
          *(_WORD *)&v41[4] = 1024;
          *(_DWORD *)&v41[6] = v34;
          LOWORD(v42) = 1024;
          *(_DWORD *)((char *)&v42 + 2) = v35;
          HIWORD(v42) = 1024;
          uint64_t v43 = v36;
          _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "#findalgs-peoplefinder,shouldFeedPF: %d, peerStatic: %d, peerMovingSlowly: %d, hasLastPDR: %d",  (uint8_t *)&v40,  0x1Au);
        }

        if (sub_100305D3C(a1)) {
          sub_1002FD798(a1 + 448, *(unsigned __int8 *)(a1 + 40), *(float *)(a2 + 16), *(double *)(a2 + 8));
        }
      }

      else
      {
        std::string v37 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          std::string v38 = *(float *)(a2 + 16);
          uint64_t v39 = *(void *)(a2 + 8);
          uint64_t v40 = 134218240;
          *(double *)uint64_t v41 = v38;
          *(_WORD *)&v41[8] = 2048;
          uint64_t v42 = v39;
          _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "#findalgs-peoplefinder,#negativeBiasRangeRejection, Rejected range measurement of %3.2f m at %3.2f seconds",  (uint8_t *)&v40,  0x16u);
        }
      }

      return result;
    }

    id v21 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v40 = 67109120;
      *(_DWORD *)uint64_t v41 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "#findalgs-peoplefinder,mmsValStatus %d does not pass check, rejecting range result event",  (uint8_t *)&v40,  8u);
    }

    *(_BYTE *)(a1 + 8144) = 0;
  }

  return result;
}

        if (v4)
        {
          do
          {
            id v21 = v4;
            __int128 v4 = (void *)*v4;
          }

          while (v4);
        }

        else
        {
          do
          {
            id v21 = (void *)v3[2];
            __int128 v8 = *v21 == (void)v3;
            id v3 = v21;
          }

          while (!v8);
        }

        id v3 = v21;
      }

      while (v21 != v2);
    }
  }

  return 1LL;
}

void sub_1000147CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000147F0(uint64_t a1, double a2)
{
  if (!*(_BYTE *)(a1 + 49))
  {
    *(_BYTE *)(a1 + 49) = 1;
    if (a2 <= 0.0)
    {
      id v5 = *(dispatch_queue_s **)(a1 + 80);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000178D0;
      block[3] = &unk_1007A2398;
      block[4] = a1;
      dispatch_async(v5, block);
    }

    else
    {
      dispatch_time_t v3 = dispatch_time(0LL, (uint64_t)(a2 * 1000000000.0));
      __int128 v4 = *(dispatch_queue_s **)(a1 + 80);
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472LL;
      _DWORD v6[2] = sub_100017EE0;
      v6[3] = &unk_1007A2398;
      v6[4] = a1;
      dispatch_after(v3, v4, v6);
    }
  }

uint64_t sub_1000148C0(uint64_t a1)
{
  __int128 v2 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if ((sub_100014420() & 1) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 416);
    if (!v3)
    {
      uint64_t v3 = 1LL;
      *(void *)(a1 + 416) = 1LL;
    }

    *(void *)(a1 + 416) = v3 + 1;
  }

  else
  {
    __int128 v4 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)__int128 v6 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "#wifi-service,ignoring ticket IDs on unsupported platform",  v6,  2u);
    }

    uint64_t v3 = 0LL;
  }

  std::mutex::unlock(v2);
  return v3;
}

void sub_100014970(_Unwind_Exception *a1)
{
}

void sub_100014984(uint64_t a1, __int128 *a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  std::mutex::lock((std::mutex *)(a1 + 88));
  sub_10001E914((uint64_t)v13, a3);
  id v8 = v7;
  id v15 = v8;
  sub_10001D2CC(__p, a2, (uint64_t)v13);
  sub_10001E3B4((uint64_t **)(a1 + 424), (const void **)__p, (__int128 *)__p);

  unint64_t v9 = v19;
  if (v19 == v18)
  {
    uint64_t v10 = 4LL;
    unint64_t v9 = v18;
  }

  else
  {
    if (!v19) {
      goto LABEL_6;
    }
    uint64_t v10 = 5LL;
  }

  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_6:
  if (v17 < 0) {
    operator delete(__p[0]);
  }

  uint64_t v11 = v14;
  if (v14 == v13)
  {
    uint64_t v12 = 4LL;
    uint64_t v11 = v13;
    goto LABEL_12;
  }

  if (v14)
  {
    uint64_t v12 = 5LL;
LABEL_12:
    (*(void (**)(void))(*v11 + 8 * v12))();
  }

  std::mutex::unlock((std::mutex *)(a1 + 88));
}

void sub_100014AC8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, id a13, char a14)
{
  char v17 = a12;
  if (a12 == &a9)
  {
    uint64_t v18 = 4LL;
    char v17 = &a9;
  }

  else
  {
    if (!a12) {
      goto LABEL_6;
    }
    uint64_t v18 = 5LL;
  }

  (*(void (**)(void))(*v17 + 8 * v18))();
LABEL_6:
  std::mutex::unlock(v14);

  _Unwind_Resume(a1);
}

uint64_t sub_100014B40(uint64_t a1)
{
  __int128 v2 = (void *)(a1 + 24);

  uint64_t v3 = *(void **)(a1 + 48);
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
  }

  else
  {
    if (!v3) {
      goto LABEL_6;
    }
    uint64_t v4 = 5LL;
  }

  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  return a1;
}

void sub_100014BA8(uint64_t a1, const void **a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  sub_10001E978((uint64_t **)(a1 + 424), a2);
  std::mutex::unlock(v4);
}

void sub_100014BEC(_Unwind_Exception *a1)
{
}

unint64_t sub_100014C00(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if ((sub_100014420() & 1) != 0)
  {
    if (a2[1] != *a2)
    {
      int v5 = sub_10003AD5C(*a2);
      uint64_t v6 = *a2;
      uint64_t v7 = a2[1];
      if (*a2 != v7)
      {
        do
        {
          sub_10001D378((uint64_t)v26, v6);
          int v8 = sub_10003AD5C((uint64_t)v26);

          unint64_t v9 = v34;
          if (v34 == v33)
          {
            unint64_t v9 = v33;
            uint64_t v10 = 4LL;
          }

          else
          {
            if (!v34) {
              goto LABEL_9;
            }
            uint64_t v10 = 5LL;
          }

          (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_9:
          uint64_t v11 = v32;
          if (v32 == v31)
          {
            uint64_t v11 = v31;
            uint64_t v12 = 4LL;
          }

          else
          {
            if (!v32) {
              goto LABEL_14;
            }
            uint64_t v12 = 5LL;
          }

          (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_14:
          uint64_t v13 = v30;
          if (v30 == v29)
          {
            uint64_t v13 = v29;
            uint64_t v14 = 4LL;
          }

          else
          {
            if (!v30) {
              goto LABEL_19;
            }
            uint64_t v14 = 5LL;
          }

          (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_19:

          if (v8 != v5)
          {
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
              sub_1003897A4();
            }
            goto LABEL_37;
          }

          v6 += 168LL;
        }

        while (v6 != v7);
      }

      if (!v5)
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_1003896F4();
        }
        goto LABEL_37;
      }

      double v15 = sub_100023CC4();
      int v16 = *(_DWORD *)(a1 + 448);
      switch(v16)
      {
        case 0:
          double v21 = v15;
          if (v5 == 2)
          {
            uint64_t v23 = (os_log_s *)qword_1008000A0;
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
            {
              LOWORD(v26[0]) = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,setting self role to responder",  (uint8_t *)v26,  2u);
            }

            if (sub_1000151E0(a1) && os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
              sub_100389720();
            }
            *(_DWORD *)(a1 + 448) = 2;
            sub_100015248(a1, (id **)a2);
            sub_10026F04C(*(void *)(a1 + 64), 1022611261 * ((unint64_t)(a2[1] - *a2) >> 3), v21);
          }

          else if (v5 == 1)
          {
            __int128 v22 = (os_log_s *)qword_1008000A0;
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
            {
              LOWORD(v26[0]) = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,setting self role to initiator",  (uint8_t *)v26,  2u);
            }

            if (sub_1000151E0(a1) && os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
              sub_100389720();
            }
            *(_DWORD *)(a1 + 448) = 1;
            sub_100015248(a1, (id **)a2);
            sub_10026F080(*(void *)(a1 + 64), 1022611261 * ((unint64_t)(a2[1] - *a2) >> 3), v21);
          }

          goto LABEL_57;
        case 1:
          if (v5 != 1)
          {
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
              sub_10038974C();
            }
            goto LABEL_37;
          }

          break;
        case 2:
          if (v5 != 2)
          {
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
              sub_100389778();
            }
            goto LABEL_37;
          }

          break;
        default:
LABEL_57:
          __int128 v24 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v25 = *(void *)(a1 + 232);
            LODWORD(v26[0]) = 134217984;
            *(void *)((char *)v26 + 4) = v25;
            _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,start ranging - peer map holds %lu peers",  (uint8_t *)v26,  0xCu);
          }

          sub_1000147F0(a1, 0.0);
          id v19 = 0LL;
          uint64_t v18 = 0LL;
          goto LABEL_38;
      }

      sub_100015248(a1, (id **)a2);
      goto LABEL_57;
    }

    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003896C8();
    }
LABEL_37:
    id v19 = &_mh_execute_header;
    uint64_t v18 = 2LL;
  }

  else
  {
    char v17 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      LOWORD(v26[0]) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "#wifi-service,ignoring range request on unsupported platform",  (uint8_t *)v26,  2u);
    }

    uint64_t v18 = 0LL;
    id v19 = &_mh_execute_header;
  }

LABEL_38:
  std::mutex::unlock(v4);
  return v18 | (unint64_t)v19;
}

      unsigned __int8 v33 = (objc_class *)objc_opt_class(*v24, v23);
      goto LABEL_39;
    }

    char v17 = (NSError *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"com.apple.NearbyInteraction",  -5888LL,  0LL));
    v7[2](v7, v17);

    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038B084();
    }
  }

  else
  {
    int v16 = (NSError *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"com.apple.NearbyInteraction",  -5889LL,  0LL));
    v7[2](v7, v16);

    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038B340();
    }
  }

  __int128 v24 = *((void *)this + 10);
  *(_BYTE *)a2 = 73;
  *(void *)(a2 + 1) = v24;
  a2 += 9LL;
  int v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_40:
    __int128 v26 = *((void *)this + 12);
    *(_BYTE *)a2 = 89;
    *(void *)(a2 + 1) = v26;
    a2 += 9LL;
    if ((*((_DWORD *)this + 29) & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

  int v16 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 104) |= 0x2000u;
  *(_DWORD *)(a1 + 68) = v16;
  int v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x4000) == 0)
  {
LABEL_23:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }

  id v19 = *(void *)(a1 + 40);
  id v20 = *(unsigned __int8 *)(v19 + 23);
  double v21 = v20;
  __int128 v22 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    uint64_t v23 = *(unsigned __int8 *)(v19 + 23);
  }
  else {
    uint64_t v23 = v22;
  }
  if (v23 >= 0x80)
  {
    __int128 v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23,  a2);
    id v20 = *(unsigned __int8 *)(v19 + 23);
    __int128 v22 = *(void *)(v19 + 8);
    uint64_t v3 = *(_DWORD *)(a1 + 68);
    double v21 = *(_BYTE *)(v19 + 23);
  }

  else
  {
    __int128 v24 = 1;
  }

  if (v21 < 0) {
    id v20 = v22;
  }
  uint64_t v4 = (v4 + v24 + v20 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_24:
    if ((v3 & 0x80) == 0) {
      goto LABEL_55;
    }
    goto LABEL_51;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(_DWORD *)(v5 + 52),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_40;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  *(_DWORD *)(v5 + 64),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x2000) == 0)
  {
LABEL_14:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_40;
  }

  if ((*((_BYTE *)this + 89) & 1) != 0)
  {
    double v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
    *(_BYTE *)uint64_t v3 = 72;
    if (v21 > 0x7F)
    {
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v21,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v21;
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 89) & 2) != 0)
  {
    __int128 v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
    *(_BYTE *)uint64_t v3 = 80;
    if (v22 > 0x7F)
    {
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v22,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v22;
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  uint64_t v25 = (void *)*((void *)this + 1);
  __int128 v24 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v23 = v25;
  if (!v25 || *v23 == v23[1]) {
    return v3;
  }
  else {
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v24,  v3,  a3);
  }
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF,  *(_DWORD *)(v5 + 76),  a2,  a4);
  if ((*(_DWORD *)(v5 + 88) & 0x8000) != 0) {
LABEL_17:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10,  *(unsigned __int8 *)(v5 + 80),  (BOOL)a2,  a4);
LABEL_18:
  unint64_t v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  int v16 = *(_DWORD *)(a2 + 124);
  if (v16 >= 0xF) {
    sub_10038C56C();
  }
  *(_DWORD *)(a1 + 140) |= 0x8000u;
  *(_DWORD *)(a1 + 124) = v16;
  if ((*(_DWORD *)(a2 + 140) & 0x10000) != 0)
  {
LABEL_40:
    char v17 = *(const std::string **)(a2 + 128);
    *(_DWORD *)(a1 + 140) |= 0x10000u;
    uint64_t v18 = *(std::string **)(a1 + 128);
    if (v18 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      uint64_t v18 = (std::string *)operator new(0x18uLL);
      v18->__r_.__value_.__l.__size_ = 0LL;
      v18->__r_.__value_.__l.__cap_ = 0LL;
      v18->__r_.__value_.__r.__words[0] = 0LL;
      *(void *)(a1 + 128) = v18;
    }

    std::string::operator=(v18, v17);
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE,  (int)a2,  *(double *)(v5 + 112),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }

  char v17 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 124) |= 0x400u;
  *(void *)(a1 + 72) = v17;
  int v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE,  (int)a2,  *(float *)(v5 + 96),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }

  __int128 v22 = *((_DWORD *)this + 28);
  *(_WORD *)a2 = 405;
  *(_DWORD *)(a2 + 2) = v22;
  a2 += 6LL;
  if ((*((_DWORD *)this + 31) & 0x40000) != 0) {
    goto LABEL_39;
  }
LABEL_45:
  id v27 = (void *)*((void *)this + 1);
  __int128 v26 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v25 = v27;
  if (!v27 || *v25 == v25[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v26,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  id v20 = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 140) |= 0x1000u;
  *(void *)(a1 + 104) = v20;
  uint64_t v6 = *(_DWORD *)(a2 + 140);
  if ((v6 & 0x4000) == 0)
  {
LABEL_22:
    if ((v6 & 0x8000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_41;
  }

  uint64_t v13 = *(unsigned __int8 *)(a1 + 343);
  if ((v13 & 0x80u) == 0LL) {
    uint64_t v14 = *(unsigned __int8 *)(a1 + 343);
  }
  else {
    uint64_t v14 = *(void *)(a1 + 328);
  }
  double v15 = v57.__r_.__value_.__s.__size_;
  if ((v57.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    double v15 = v57.__r_.__value_.__l.__size_;
  }
  if (v14 == v15)
  {
    int v16 = (const void **)(a1 + 320);
    if ((v57.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      char v17 = &v57;
    }
    else {
      char v17 = (std::string *)v57.__r_.__value_.__r.__words[0];
    }
    if ((v13 & 0x80) != 0)
    {
      if (!memcmp(*v16, v17, *(void *)(a1 + 328))) {
        goto LABEL_150;
      }
    }

    else
    {
      if (!*(_BYTE *)(a1 + 343)) {
        goto LABEL_150;
      }
      while (*(unsigned __int8 *)v16 == v17->__r_.__value_.__s.__data_[0])
      {
        int v16 = (const void **)((char *)v16 + 1);
        char v17 = (std::string *)((char *)v17 + 1);
        if (!--v13) {
          goto LABEL_150;
        }
      }
    }
  }

  uint64_t v18 = 0;
LABEL_55:
  id v19 = (os_log_s *)(id)qword_1007F9210;
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    if (*(char *)(a1 + 319) < 0)
    {
      if (*(void *)(a1 + 304)) {
        id v20 = (const char *)*v7;
      }
      else {
        id v20 = "__";
      }
    }

    else if (*(_BYTE *)(a1 + 319))
    {
      id v20 = (const char *)(a1 + 296);
    }

    else
    {
      id v20 = "__";
    }

    if ((char)__str.__r_.__value_.__s.__size_ < 0)
    {
      if (__str.__r_.__value_.__l.__size_) {
        __int128 v22 = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      else {
        __int128 v22 = (std::string *)"__";
      }
    }

    else
    {
      __int128 v22 = &__str;
      if (!__str.__r_.__value_.__s.__size_) {
        __int128 v22 = (std::string *)"__";
      }
    }

    uint64_t v23 = *(unsigned __int8 *)(a1 + 345);
    __int128 v24 = (void *)(a1 + 320);
    uint64_t v25 = &v57;
    if ((v57.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v25 = (std::string *)v57.__r_.__value_.__r.__words[0];
    }
    __int128 v26 = *(unsigned __int8 *)(a1 + 344);
    LODWORD(buf.__r_.__value_.__l.__data_) = 67110914;
    HIDWORD(buf.__r_.__value_.__r.__words[0]) = v18;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 1024;
    *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = v23;
    HIWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
    buf.__r_.__value_.__l.__cap_ = (std::string::size_type)v20;
    *(_WORD *)id v60 = 2080;
    *(void *)&v60[2] = v22;
    *(_WORD *)v61 = 2080;
    *(void *)&v61[2] = v24;
    *(_WORD *)&v61[10] = 2080;
    id v62 = v25;
    v63 = 1024;
    id v64 = v26;
    v65 = 1024;
    id v66 = v51;
    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "regulatory,geo,monitor,refreshCurrentGeoArea,effectiveChange:%d,prevInitialized:%d,regulatoryArea:[%s]->[%s],sourc e:[%s]->[%s],isCurrent:[%d]->[%d]",  (uint8_t *)&buf,  0x42u);
  }

  NSErrorUserInfoKey v50 = (std::string *)(a1 + 296);

  id v27 = (os_log_s *)(id)qword_1007F9210;
  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
  {
    if ((char)__p.__r_.__value_.__s.__size_ < 0)
    {
      if (__p.__r_.__value_.__l.__size_) {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      else {
        p_p = (std::string *)"__";
      }
    }

    else
    {
      p_p = &__p;
      if (!__p.__r_.__value_.__s.__size_) {
        p_p = (std::string *)"__";
      }
    }

    LODWORD(buf.__r_.__value_.__l.__data_) = 136315650;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)p_p;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 1024;
    *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = HIBYTE(v56);
    WORD1(buf.__r_.__value_.__r.__words[2]) = 1024;
    HIDWORD(buf.__r_.__value_.__r.__words[2]) = v56;
    _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "regulatory,geo,monitor,refreshCurrentGeoArea,mccChoice,iso:%s,isAnyMccValid:%d,isAnyMccCurrent:%d",  (uint8_t *)&buf,  0x18u);
  }

  uint64_t v29 = (os_log_s *)(id)qword_1007F9210;
  if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
  {
    else {
      __int128 v30 = *(_BYTE *)(a1 + 399) ? (char *)(a1 + 376) : "__";
    }
    else {
      uint64_t v31 = *(_BYTE *)(v52 + 375) ? (char *)(v52 + 352) : "__";
    }
    else {
      __int128 v32 = *(_BYTE *)(v52 + 463) ? (char *)(v52 + 440) : "__";
    }
    sub_10034D7EC(*(unsigned __int8 *)(v52 + 434), v53);
    unsigned __int8 v33 = v54 >= 0 ? v53 : (void **)v53[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315906;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v30;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v31;
    HIWORD(buf.__r_.__value_.__r.__words[2]) = 2080;
    *(void *)id v60 = v32;
    *(_WORD *)&v60[8] = 2080;
    *(void *)v61 = v33;
    _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "regulatory,geo,monitor,refreshCurrentGeoArea,state,lastStoredIso:%s,lastUpdatedIso:%s,wifiIso:%s,airplaneMode:%s",  (uint8_t *)&buf,  0x2Au);
    if (v54 < 0) {
      operator delete(v53[0]);
    }
  }

  __int128 v34 = (os_log_s *)(id)qword_1007F9210;
  if (!os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT)) {
    goto LABEL_127;
  }
  if (*(char *)(v52 + 239) < 0)
  {
    if (!*(void *)(v52 + 224))
    {
      __int128 v36 = 0.0;
      id v35 = "__";
      goto LABEL_125;
    }

    id v35 = (const char *)v2->__r_.__value_.__r.__words[0];
  }

  else
  {
    if (*(_BYTE *)(v52 + 239)) {
      id v35 = (const char *)v2;
    }
    else {
      id v35 = "__";
    }
    if (!*(_BYTE *)(v52 + 239))
    {
      __int128 v36 = 0.0;
LABEL_125:
      std::string v38 = v52;
      goto LABEL_126;
    }
  }

  Current = CFAbsoluteTimeGetCurrent();
  std::string v38 = v52;
  __int128 v36 = Current - *(double *)(v52 + 248);
LABEL_126:
  uint64_t v39 = *(unsigned __int8 *)(v38 + 240);
  uint64_t v40 = *(unsigned __int8 *)(v38 + 400);
  uint64_t v41 = *(unsigned __int8 *)(v38 + 432);
  uint64_t v42 = *(unsigned __int8 *)(v38 + 433);
  uint64_t v43 = *(_DWORD *)(v38 + 436);
  LODWORD(buf.__r_.__value_.__l.__data_) = 136316674;
  *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v35;
  WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
  *(double *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v36;
  HIWORD(buf.__r_.__value_.__r.__words[2]) = 1024;
  *(_DWORD *)id v60 = v39;
  *(_WORD *)&v60[4] = 1024;
  *(_DWORD *)&v60[6] = v40;
  *(_WORD *)v61 = 1024;
  *(_DWORD *)&v61[2] = v41;
  *(_WORD *)&v61[6] = 1024;
  *(_DWORD *)&v61[8] = v42;
  LOWORD(v62) = 1024;
  *(_DWORD *)((char *)&v62 + 2) = v43;
  _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "regulatory,geo,monitor,refreshCurrentGeoArea,state,locationIso:%s,age:%.2f,isLastKnown:%d,authorized:%d,needed:%d,mo nitoring:%d,retries:%d",  (uint8_t *)&buf,  0x34u);
LABEL_127:

  int v44 = *(uint64_t **)(v52 + 272);
  if (v44)
  {
    while (1)
    {
      id v45 = (os_log_s *)(id)qword_1007F9210;
      if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT)) {
        break;
      }
LABEL_145:

      int v44 = (uint64_t *)*v44;
      if (!v44) {
        goto LABEL_146;
      }
    }

    sub_1002848B4(*((_DWORD *)v44 + 4), v53);
    if (v54 >= 0) {
      v46 = v53;
    }
    else {
      v46 = (void **)v53[0];
    }
    if (*((char *)v44 + 55) < 0)
    {
      if (v44[5]) {
        int v47 = (const char *)v44[4];
      }
      else {
        int v47 = "__";
      }
      if (v44[5]) {
        goto LABEL_137;
      }
    }

    else
    {
      if (*((_BYTE *)v44 + 55)) {
        int v47 = (const char *)(v44 + 4);
      }
      else {
        int v47 = "__";
      }
      if (*((_BYTE *)v44 + 55))
      {
LABEL_137:
        NSErrorUserInfoKey v48 = CFAbsoluteTimeGetCurrent() - *((double *)v44 + 7);
        goto LABEL_143;
      }
    }

    NSErrorUserInfoKey v48 = 0.0;
LABEL_143:
    v49 = *((unsigned __int8 *)v44 + 24);
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315906;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v46;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v47;
    HIWORD(buf.__r_.__value_.__r.__words[2]) = 2048;
    *(double *)id v60 = v48;
    *(_WORD *)&v60[8] = 1024;
    *(_DWORD *)v61 = v49;
    _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "regulatory,geo,monitor,refreshCurrentGeoArea,state,mccSlot:%s,iso:%s,age:%.2f,isLastKnown:%d",  (uint8_t *)&buf,  0x26u);
    if (v54 < 0) {
      operator delete(v53[0]);
    }
    goto LABEL_145;
  }

  uint64_t v6 = v4;
  uint64_t v18 = (const void *)a1;
  if (v17 == v4) {
    goto LABEL_45;
  }
  id v19 = off_1007F4738[0];
  id v20 = strlen(off_1007F4738[0]);
LABEL_47:
  double v21 = (const void *)a1;
  if (v20 != v4) {
    return sub_1001AC8D0((void *)a1, off_1007F4760[0]);
  }
LABEL_54:
  if (memcmp(v21, v19, v4)) {
    return sub_1001AC8D0((void *)a1, off_1007F4760[0]);
  }
  return 1LL;
}

  id v35 = (void *)v8;
  __int128 v36 = (void *)v10;
  result.var1 = v36;
  result.var0 = v35;
  return result;
}

    goto LABEL_39;
  }

      __int128 v22 = 0;
      goto LABEL_39;
    }

    if (v13 == 1)
    {
      id v27 = objc_alloc(&OBJC_CLASS___RangeBiasEstimatorModelDataTransformer);
      if (v55 >= 0) {
        id v28 = v54;
      }
      else {
        id v28 = (void **)v54[0];
      }
      uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v28));
      __int128 v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](&OBJC_CLASS___NSURL, "fileURLWithPath:", v29));
      uint64_t v31 = -[RangeBiasEstimatorModelDataTransformer initWithContentsOfURL:](v27, "initWithContentsOfURL:", v30);

      __int128 v32 = (os_log_s *)qword_1008000A0;
      if (v31)
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
          HIDWORD(buf.__r_.__value_.__r.__words[0]) = v44;
          _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "#bias-est, Loaded data transformer model %d",  (uint8_t *)&buf,  8u);
        }

        __int128 v22 = 1;
        uint64_t v6 = v31;
      }

      else
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_1003AA9A8(&v48, v49);
        }
        __int128 v22 = 0;
        uint64_t v6 = 0LL;
      }
    }

    else if (v13)
    {
      __int128 v22 = 1;
    }

    else
    {
      context = espresso_create_context(0LL, 0xFFFFFFFFLL);
      plan = espresso_create_plan(context, 0LL);
      uint64_t v25 = plan;
      if (v55 >= 0) {
        __int128 v26 = v54;
      }
      else {
        __int128 v26 = (void **)v54[0];
      }
      if (espresso_plan_add_network(plan, v26, 65568LL, &buf))
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_1003AA97C(&v52, v53);
        }
        goto LABEL_38;
      }

      if (espresso_plan_build(v25))
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_1003AA950(&v50, v51);
        }
        goto LABEL_38;
      }

      id v64 = *(_OWORD *)&buf.__r_.__value_.__l.__data_;
      __int128 v34 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)v72 = 67109120;
        *(_DWORD *)&v72[4] = v44;
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "#bias-est, Loaded NN model %d", v72, 8u);
      }

      __int128 v22 = 1;
      uint64_t v42 = v25;
      uint64_t v43 = context;
    }

      sub_1003AAAE8();
      goto LABEL_22;
    }

    __int128 v32 = self->_neuralNetworkRangeBiasEstimatorModelAntennaMask2;
    if (v32)
    {
      -[NeuralNetworkModelWithDataTransformer neuralNetworkModel](v32, "neuralNetworkModel");
      __int128 v32 = *(NeuralNetworkModelWithDataTransformer **)buf;
      unsigned __int8 v33 = *(void *)&buf[8];
    }

    else
    {
      unsigned __int8 v33 = 0LL;
      memset(buf, 0, sizeof(buf));
    }

    if (byte_1007FEDCF >= 0) {
      __int128 v36 = &qword_1007FEDB8;
    }
    else {
      __int128 v36 = (uint64_t *)qword_1007FEDB8;
    }
    if (espresso_network_bind_buffer(v32, v33, v36, a5, 0x20000LL, 0x10000LL, 0x10000LL))
    {
      if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_22;
      }
LABEL_56:
      sub_1003AAABC();
      goto LABEL_22;
    }

    std::string v38 = self->_neuralNetworkRangeBiasEstimatorModelAntennaMask2;
    if (v38) {
      goto LABEL_67;
    }
  }

  else
  {
    if (v5 != 1)
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
        sub_1003AA7BC();
      }
      uint64_t v41 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 136315650;
        *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/NearbyAlgorithms/RangeBiasEstimat"
                             "ion/NRBYRangeBiasEstimator.mm";
        *(_WORD *)&buf[12] = 1024;
        *(_DWORD *)&buf[14] = 723;
        *(_WORD *)&buf[18] = 2080;
        *(void *)&buf[20] = "-[RangeBiasEstimatorSingleAntennaModel predictBiasEstimate:scaledInputFeatures:output:]";
        _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_INFO,  "#bias-est, %s:%d: assertion failure in %s",  buf,  0x1Cu);
      }

      abort();
    }

    neuralNetworkRangeBiasEstimatorModelAntennaMask1 = self->_neuralNetworkRangeBiasEstimatorModelAntennaMask1;
    if (neuralNetworkRangeBiasEstimatorModelAntennaMask1)
    {
      -[NeuralNetworkModelWithDataTransformer neuralNetworkModel]( neuralNetworkRangeBiasEstimatorModelAntennaMask1,  "neuralNetworkModel");
      neuralNetworkRangeBiasEstimatorModelAntennaMask1 = *(NeuralNetworkModelWithDataTransformer **)buf;
      id v27 = *(void *)&buf[8];
    }

    else
    {
      id v27 = 0LL;
      memset(buf, 0, sizeof(buf));
    }

    if (byte_1007FEDB7 >= 0) {
      uint64_t v31 = &qword_1007FEDA0;
    }
    else {
      uint64_t v31 = (uint64_t *)qword_1007FEDA0;
    }
    if (espresso_network_bind_buffer( neuralNetworkRangeBiasEstimatorModelAntennaMask1,  v27,  v31,  v43,  0x10000LL,  0x20000LL,  0x10000LL))
    {
      if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_22;
      }
      goto LABEL_38;
    }

    __int128 v34 = self->_neuralNetworkRangeBiasEstimatorModelAntennaMask1;
    if (v34)
    {
      -[NeuralNetworkModelWithDataTransformer neuralNetworkModel](v34, "neuralNetworkModel");
      __int128 v34 = *(NeuralNetworkModelWithDataTransformer **)buf;
      id v35 = *(void *)&buf[8];
    }

    else
    {
      id v35 = 0LL;
      memset(buf, 0, sizeof(buf));
    }

    if (byte_1007FEDCF >= 0) {
      std::string v37 = &qword_1007FEDB8;
    }
    else {
      std::string v37 = (uint64_t *)qword_1007FEDB8;
    }
    if (espresso_network_bind_buffer(v34, v35, v37, a5, 0x20000LL, 0x10000LL, 0x10000LL))
    {
      if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_22;
      }
      goto LABEL_56;
    }

    std::string v38 = self->_neuralNetworkRangeBiasEstimatorModelAntennaMask1;
    if (v38)
    {
LABEL_67:
      -[NeuralNetworkModelWithDataTransformer neuralNetworkModel](v38, "neuralNetworkModel");
      std::string v38 = *(NeuralNetworkModelWithDataTransformer **)&buf[16];
      goto LABEL_69;
    }
  }

  memset(buf, 0, sizeof(buf));
LABEL_69:
  uint64_t v39 = espresso_plan_execute_sync(v38);
  uint64_t v40 = (os_log_s *)qword_1008000A0;
  if (v39)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003AAA90();
    }
    goto LABEL_22;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "#bias-est, Executed espresso plan.", buf, 2u);
  }

  __int128 v24 = 1;
LABEL_23:

  if (__p)
  {
    v46 = (float *)__p;
    operator delete(__p);
  }

  return v24;
}

          (*(void (**)(uint64_t))(*(void *)v35 + 40LL))(v35);
LABEL_55:
          __int128 v32 = v38;
          uint64_t v42 = &_mh_execute_header;
          goto LABEL_59;
        }
      }

      else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
      {
        sub_1003AC1E8();
      }

      break;
  }

  uint64_t v42 = 0LL;
LABEL_59:
  v49 = v30 != 0;
  NSErrorUserInfoKey v50 = (unint64_t)v42 | LODWORD(v32);
  sub_10030DF30(a1 + 152, v50, (char *)buf, v14);
  if (buf[0]) {
    id v51 = 0;
  }
  else {
    id v51 = v49;
  }
  if (!v51)
  {
    sub_1002AEE40((char *)v87, (__int128 *)(a1 + 248));
    sub_1002AEE40((char *)v84, (__int128 *)(a1 + 360));
    NSErrorUserInfoKey v54 = *(void *)a1;
    sub_1002AEE40((char *)v81, (__int128 *)v87);
    sub_1002AEE40((char *)v78, (__int128 *)v84);
    v75[8] = v98;
    v75[9] = v99;
    v75[10] = v100;
    unsigned __int16 v76 = v101;
    v75[4] = v94;
    v75[5] = v95;
    v75[6] = v96;
    v75[7] = v97;
    v75[0] = v90;
    v75[1] = v91;
    v75[2] = v92;
    v75[3] = v93;
    v77 = 1;
    sub_100310498(a1 + 8, v54, (uint64_t)v81, (uint64_t)v78, (uint64_t)v75, v50, 0, v8);
    if (v80 && v79 < 0) {
      operator delete(v78[0]);
    }
    if (!v83 || (v82 & 0x80000000) == 0) {
      goto LABEL_81;
    }
    v53 = v81[0];
    goto LABEL_80;
  }

  if (v116)
  {
    sub_1002AEE40((char *)v87, (__int128 *)&v111[4]);
    if (v89)
    {
      sub_1002AEE40((char *)v84, (__int128 *)(a1 + 248));
      if (v86)
      {
        if (!v89) {
          sub_100006080();
        }
      }

      NSErrorUserInfoKey v52 = *(void *)a1;
      sub_1002AEE40(v72, (__int128 *)v87);
      sub_1002AEE40((char *)__p, (__int128 *)v84);
      v66[8] = v98;
      v66[9] = v99;
      v66[10] = v100;
      unsigned __int8 v67 = v101;
      v66[4] = v94;
      v66[5] = v95;
      v66[6] = v96;
      v66[7] = v97;
      v66[0] = v90;
      v66[1] = v91;
      v66[2] = v92;
      v66[3] = v93;
      unsigned __int8 v68 = 1;
      sub_100310498(a1 + 8, v52, (uint64_t)v72, (uint64_t)__p, (uint64_t)v66, v50, 1, v8);
      if (v71 && v70 < 0) {
        operator delete(__p[0]);
      }
      if (!v74 || (v73 & 0x80000000) == 0) {
        goto LABEL_81;
      }
      v53 = *(void **)v72;
LABEL_80:
      operator delete(v53);
LABEL_81:
      if (v86 && v85 < 0) {
        operator delete(v84[0]);
      }
      if (v89 && v88 < 0) {
        operator delete(v87[0]);
      }
    }
  }

  *(double *)(a1 + 416) = v8;
  *(_BYTE *)(a1 + 424) = 1;
  id v55 = v99;
  *(_OWORD *)(a4 + 128) = v98;
  *(_OWORD *)(a4 + 144) = v55;
  *(_OWORD *)(a4 + 160) = v100;
  *(void *)(a4 + 176) = v101;
  id v56 = v95;
  *(_OWORD *)(a4 + 64) = v94;
  *(_OWORD *)(a4 + 80) = v56;
  v57 = v97;
  *(_OWORD *)(a4 + 96) = v96;
  *(_OWORD *)(a4 + 112) = v57;
  id v58 = v91;
  *(_OWORD *)a4 = v90;
  *(_OWORD *)(a4 + 16) = v58;
  v59 = v93;
  *(_OWORD *)(a4 + sub_100012358(v1 - 32) = v92;
  *(_OWORD *)(a4 + 48) = v59;
  *(_BYTE *)(a4 + 184) = 1;
  if (v116)
  {
    if (SHIBYTE(v113) < 0) {
      operator delete(*(void **)&v111[4]);
    }
  }

  std::stringbuf::str(a2, &v65);
  std::streambuf::~streambuf(&v65);
  return std::ios::~ios(&v66);
}

void sub_1000150D0(_Unwind_Exception *a1)
{
}

uint64_t sub_100015108(uint64_t a1)
{
  __int128 v2 = *(void **)(a1 + 136);
  if (v2 == (void *)(a1 + 112))
  {
    uint64_t v3 = 4LL;
    __int128 v2 = (void *)(a1 + 112);
  }

  else
  {
    if (!v2) {
      goto LABEL_6;
    }
    uint64_t v3 = 5LL;
  }

  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  uint64_t v4 = *(void **)(a1 + 104);
  if (v4 == (void *)(a1 + 80))
  {
    uint64_t v5 = 4LL;
    uint64_t v4 = (void *)(a1 + 80);
  }

  else
  {
    if (!v4) {
      goto LABEL_11;
    }
    uint64_t v5 = 5LL;
  }

  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_11:
  uint64_t v6 = *(void **)(a1 + 72);
  if (v6 == (void *)(a1 + 48))
  {
    uint64_t v7 = 4LL;
    uint64_t v6 = (void *)(a1 + 48);
    goto LABEL_15;
  }

  if (v6)
  {
    uint64_t v7 = 5LL;
LABEL_15:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  return a1;
}

BOOL sub_1000151E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 232);
  if (!v1)
  {
    if (*(_DWORD *)(a1 + 448))
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_1003897D0();
      }
      uint64_t v1 = *(void *)(a1 + 232);
    }

    else
    {
      uint64_t v1 = 0LL;
    }
  }

  return v1 != 0;
}

void sub_100015248(uint64_t a1, id **a2)
{
  if (!*(_BYTE *)(a1 + 56))
  {
    uint64_t v4 = (os_log_s *)qword_1008000A0;
    BOOL v5 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,Peers added while not ready",  buf,  2u);
    }

    sub_10001979C(v5, 1, a2);
  }

  uint64_t v6 = *a2;
  v65 = a2[1];
  if (*a2 == v65) {
    return;
  }
  v63 = (uint64_t **)(a1 + 216);
  id v64 = (void *)(a1 + 224);
  do
  {
    uint64_t v7 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = sub_10003AD44(v6);
      id v9 = (id)objc_claimAutoreleasedReturnValue(v8);
      id v10 = sub_10003AD64((uint64_t)v6);
      id v11 = (id)objc_claimAutoreleasedReturnValue(v10);
      id v12 = sub_10003AD74((uint64_t)v6);
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
      *(_DWORD *)std::stringbuf::string_type buf = 138412802;
      *(void *)&uint8_t buf[4] = v9;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v11;
      __int16 v85 = 2112;
      uint64_t v86 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,Adding to map peer ID: %@; client queue: %@, peer mac: %@",
        buf,
        0x20u);
    }

    uint64_t v14 = (id *)sub_10003AD7C((uint64_t)v6);
    id v15 = sub_10003AD44(v6);
    int v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    if (!v16) {
      goto LABEL_27;
    }
    id v17 = sub_10003AD4C((uint64_t)v6);
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    if (!v18)
    {

LABEL_27:
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_1003897FC(&v69, v70);
      }
      sub_10001D378((uint64_t)buf, (uint64_t)v6);
      int v73 = 0LL;
      id v74 = 0LL;
      v75[0] = 0LL;
      id v66 = &v73;
      LOBYTE(v67) = 0;
      int v73 = (id *)operator new(0xA8uLL);
      id v74 = v73;
      v75[0] = v73 + 21;
      id v74 = (id)sub_10001F2D4((uint64_t)v75, (uint64_t)buf, (uint64_t)v96, (uint64_t)v73);
      sub_100019188((uint64_t)v74, v29, &v73);
      id v66 = &v73;
      sub_10001F250((void ***)&v66);

      __int128 v30 = v94;
      if (v94 == v93)
      {
        __int128 v30 = v93;
        uint64_t v31 = 4LL;
      }

      else
      {
        if (!v94) {
          goto LABEL_34;
        }
        uint64_t v31 = 5LL;
      }

      (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_34:
      __int128 v32 = v92;
      if (v92 == v91)
      {
        __int128 v32 = v91;
        uint64_t v33 = 4LL;
      }

      else
      {
        if (!v92) {
          goto LABEL_39;
        }
        uint64_t v33 = 5LL;
      }

      (*(void (**)(void))(*v32 + 8 * v33))();
LABEL_39:
      __int128 v34 = v90;
      if (v90 == v89)
      {
        __int128 v34 = v89;
        uint64_t v35 = 4LL;
      }

      else
      {
        if (!v90) {
          goto LABEL_57;
        }
        uint64_t v35 = 5LL;
      }

      (*(void (**)(void))(*v34 + 8 * v35))();
      goto LABEL_57;
    }

    id v19 = sub_10003AD54((uint64_t)v6);
    id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
    BOOL v21 = v20 == 0LL;

    if (v21) {
      goto LABEL_27;
    }
    __int128 v22 = (void *)*v64;
    if (!*v64) {
      goto LABEL_23;
    }
    uint64_t v23 = v64;
    do
    {
      unint64_t v24 = v22[4];
      BOOL v25 = v24 >= (unint64_t)v14;
      else {
        __int128 v26 = v22 + 1;
      }
      if (v25) {
        uint64_t v23 = v22;
      }
      __int128 v22 = (void *)*v26;
    }

    while (*v26);
    if (v23 == v64 || (unint64_t)v14 < v23[4])
    {
LABEL_23:
      sub_10001D378((uint64_t)buf, (uint64_t)v6);
      id v66 = 0LL;
      unsigned __int8 v67 = 0LL;
      unsigned __int8 v68 = 0LL;
      int v71 = (void ***)&v66;
      char v72 = 0;
      id v66 = (id **)operator new(0xA8uLL);
      unsigned __int8 v67 = (void **)v66;
      unsigned __int8 v68 = (void **)(v66 + 21);
      unsigned __int8 v67 = (void **)sub_10001F2D4((uint64_t)&v68, (uint64_t)buf, (uint64_t)v96, (uint64_t)v66);
      int v73 = v14;
      v75[0] = 0LL;
      v75[1] = 0LL;
      id v74 = 0LL;
      sub_10001EF3C(&v74, (uint64_t)v66, (uint64_t)v67, 0xCF3CF3CF3CF3CF3DLL * (((char *)v67 - (char *)v66) >> 3));
      sub_10001F374(v63, (unint64_t *)&v73, (uint64_t)&v73);
      int v71 = (void ***)&v74;
      sub_10001F250((void ***)&v71);
      int v71 = (void ***)&v66;
      sub_10001F250((void ***)&v71);

      id v27 = v94;
      if (v94 == v93)
      {
        id v27 = v93;
        uint64_t v28 = 4LL;
LABEL_46:
        (*(void (**)(void))(*v27 + 8 * v28))();
      }

      else if (v94)
      {
        uint64_t v28 = 5LL;
        goto LABEL_46;
      }

      __int128 v36 = v92;
      if (v92 == v91)
      {
        __int128 v36 = v91;
        uint64_t v37 = 4LL;
LABEL_51:
        (*(void (**)(void))(*v36 + 8 * v37))();
      }

      else if (v92)
      {
        uint64_t v37 = 5LL;
        goto LABEL_51;
      }

      std::string v38 = v90;
      if (v90 == v89)
      {
        std::string v38 = v89;
        uint64_t v39 = 4LL;
LABEL_56:
        (*(void (**)(void))(*v38 + 8 * v39))();
      }

      else if (v90)
      {
        uint64_t v39 = 5LL;
        goto LABEL_56;
      }

LABEL_57:
      goto LABEL_58;
    }

    unint64_t v40 = v23[5];
    uint64_t v41 = v23[6];
    if (v40 == v41) {
      goto LABEL_97;
    }
    do
    {
      sub_10001D378((uint64_t)buf, v40);
      id v42 = sub_10003AD4C((uint64_t)buf);
      uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(v42);
      id v44 = sub_10003AD4C((uint64_t)v6);
      id v45 = (void *)objc_claimAutoreleasedReturnValue(v44);
      unsigned __int8 v46 = [v43 isEqualToData:v45];

      if ((v46 & 1) != 0) {
        goto LABEL_80;
      }
      int v47 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR))
      {
        id v48 = sub_10003AD44(v6);
        objc_claimAutoreleasedReturnValue(v48);
        sub_100389828();
      }

      sub_10001D378((uint64_t)&v73, (uint64_t)v6);
      id v66 = 0LL;
      unsigned __int8 v67 = 0LL;
      unsigned __int8 v68 = 0LL;
      int v71 = (void ***)&v66;
      char v72 = 0;
      id v66 = (id **)operator new(0xA8uLL);
      unsigned __int8 v67 = (void **)v66;
      unsigned __int8 v68 = (void **)(v66 + 21);
      unsigned __int8 v67 = (void **)sub_10001F2D4((uint64_t)&v68, (uint64_t)&v73, (uint64_t)v83, (uint64_t)v66);
      sub_100019188((uint64_t)v67, v49, (id **)&v66);
      int v71 = (void ***)&v66;
      sub_10001F250((void ***)&v71);

      NSErrorUserInfoKey v50 = v81;
      if (v81 == v80)
      {
        NSErrorUserInfoKey v50 = v80;
        uint64_t v51 = 4LL;
      }

      else
      {
        if (!v81) {
          goto LABEL_69;
        }
        uint64_t v51 = 5LL;
      }

      (*(void (**)(void))(*v50 + 8 * v51))();
LABEL_69:
      NSErrorUserInfoKey v52 = v79;
      if (v79 == v78)
      {
        NSErrorUserInfoKey v52 = v78;
        uint64_t v53 = 4LL;
      }

      else
      {
        if (!v79) {
          goto LABEL_74;
        }
        uint64_t v53 = 5LL;
      }

      (*(void (**)(void))(*v52 + 8 * v53))();
LABEL_74:
      NSErrorUserInfoKey v54 = v77;
      if (v77 == v76)
      {
        NSErrorUserInfoKey v54 = v76;
        uint64_t v55 = 4LL;
        goto LABEL_78;
      }

      if (v77)
      {
        uint64_t v55 = 5LL;
LABEL_78:
        (*(void (**)(void))(*v54 + 8 * v55))();
      }

LABEL_80:
      id v56 = v94;
      if (v94 == v93)
      {
        id v56 = v93;
        uint64_t v57 = 4LL;
      }

      else
      {
        if (!v94) {
          goto LABEL_85;
        }
        uint64_t v57 = 5LL;
      }

      (*(void (**)(void))(*v56 + 8 * v57))();
LABEL_85:
      id v58 = v92;
      if (v92 == v91)
      {
        id v58 = v91;
        uint64_t v59 = 4LL;
      }

      else
      {
        if (!v92) {
          goto LABEL_90;
        }
        uint64_t v59 = 5LL;
      }

      (*(void (**)(void))(*v58 + 8 * v59))();
LABEL_90:
      id v60 = v90;
      if (v90 == v89)
      {
        id v60 = v89;
        uint64_t v61 = 4LL;
      }

      else
      {
        if (!v90) {
          goto LABEL_95;
        }
        uint64_t v61 = 5LL;
      }

      (*(void (**)(void))(*v60 + 8 * v61))();
LABEL_95:

      v40 += 168LL;
    }

    while (v40 != v41);
    unint64_t v40 = v23[6];
LABEL_97:
    if (v40 >= v23[7])
    {
      uint64_t v62 = sub_10001F444(v23 + 5, (uint64_t)v6);
    }

    else
    {
      sub_10001D378(v40, (uint64_t)v6);
      uint64_t v62 = v40 + 168;
      v23[6] = v40 + 168;
    }

    v23[6] = v62;
LABEL_58:
    v6 += 21;
  }

  while (v6 != v65);
}

          sub_10038A1E0();
          goto LABEL_58;
        }
      }

      else
      {
      }
    }

    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038A7A4();
    }
    sub_10001D378((uint64_t)buf, (uint64_t)*a2);
    uint64_t v43 = 0LL;
    id v44 = 0LL;
    id v45 = 0LL;
    unsigned __int8 v46 = &v43;
    int v47 = 0;
    uint64_t v43 = (id *)operator new(0xA8uLL);
    id v44 = v43;
    id v45 = v43 + 21;
    id v44 = (id *)sub_10001F2D4((uint64_t)&v45, (uint64_t)buf, (uint64_t)&v58, (uint64_t)v43);
    sub_100019188((uint64_t)v44, v29, &v43);
    unsigned __int8 v46 = &v43;
    sub_10001F250((void ***)&v46);

    __int128 v30 = v56;
    if (v56 == v55)
    {
      uint64_t v31 = 4LL;
      __int128 v30 = v55;
    }

    else
    {
      if (!v56) {
        goto LABEL_30;
      }
      uint64_t v31 = 5LL;
    }

    (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_30:
    __int128 v32 = v54;
    if (v54 == v53)
    {
      uint64_t v33 = 4LL;
      __int128 v32 = v53;
    }

    else
    {
      if (!v54) {
        goto LABEL_35;
      }
      uint64_t v33 = 5LL;
    }

    (*(void (**)(void))(*v32 + 8 * v33))();
LABEL_35:
    __int128 v34 = v52;
    if (v52 == v51)
    {
      uint64_t v35 = 4LL;
      __int128 v34 = v51;
    }

    else
    {
      if (!v52)
      {
LABEL_40:

        id v12 = &_mh_execute_header;
        id v11 = 2LL;
        goto LABEL_59;
      }

      uint64_t v35 = 5LL;
    }

    (*(void (**)(void))(*v34 + 8 * v35))();
    goto LABEL_40;
  }

  id v10 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "#wifi-service,startRangingWithAuthPeer, ignoring range request on unsupported platform",  buf,  2u);
  }

  id v11 = 0LL;
  id v12 = &_mh_execute_header;
LABEL_59:
  std::mutex::unlock(v6);
  return v11 | (unint64_t)v12;
}

  BOOL v25 = *(_DWORD *)(a1 + 64);
  __int128 v26 = (v25 + v4);
  if (v25 >= 1)
  {
    id v27 = 0LL;
    do
    {
      uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100082180( *(void *)(*(void *)(a1 + 56) + 8 * v27),  a2);
      uint64_t v29 = (int)v28;
      else {
        __int128 v30 = 1;
      }
      __int128 v26 = (v29 + v26 + v30);
      ++v27;
    }

    while (v27 < *(int *)(a1 + 64));
  }

  uint64_t v31 = *(void **)(a1 + 8);
  if (v31 && *v31 != v31[1]) {
    __int128 v26 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v26;
  *(_DWORD *)(a1 + 80) = v26;
  return v26;
}

  uint64_t v31 = (void *)*((void *)this + 1);
  __int128 v30 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v29 = v31;
  if (!v31 || *v29 == v29[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v30,  v3,  a3);
  }
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD,  (int)a2,  *(double *)(v5 + 96),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_59;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 44),  (int)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 232);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_59;
  }

  id v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
  if (v19 >= 0x80)
  {
    id v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
    uint64_t v3 = *(_DWORD *)(a1 + 232);
  }

  else
  {
    id v20 = 1;
  }

  uint64_t v4 = (v4 + v20 + 2);
  if ((v3 & 0x1000) == 0)
  {
LABEL_41:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_65;
  }

  id v20 = *(void *)(v5 + 120);
  if (!v20) {
    id v20 = *(void *)(qword_100800498 + 120);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE,  v20,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_63;
  }

    id v42 = (void *)objc_claimAutoreleasedReturnValue([v85 wifiResource]);
    uint64_t v43 = [v42 deviceCapabilities];

    if (v7)
    {
      id v44 = [v87 isWifiRangingCapable];
      id v45 = [v87 isWifiRangingCapable];
      if (v17 == v18) {
        unsigned __int8 v46 = v40;
      }
      else {
        unsigned __int8 v46 = 1;
      }
      if ((v44 & v46) == 1)
      {
        int v47 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
        {
          id v48 = [v87 isWifiRangingCapable];
          *(_DWORD *)std::stringbuf::string_type buf = 67109376;
          *(_DWORD *)&uint8_t buf[4] = v17 != v18;
          *(_WORD *)&buf[8] = 1024;
          *(_DWORD *)&buf[10] = v48;
          _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "#ses-home,Restart Wifi Session due to address roll or updated device's wifi ranging capable bit. advAddressC hanged: %d, current device's wifiRanging: %d",  buf,  0xEu);
        }

        uint64_t v49 = *(void *)(v7 + 32);
        *(void *)id v94 = *(void *)(v7 + 24);
        *(void *)&v94[8] = v49;
        if (v49)
        {
          NSErrorUserInfoKey v50 = (unint64_t *)(v49 + 8);
          do
            uint64_t v51 = __ldxr(v50);
          while (__stxr(v51 + 1, v50));
        }

        sub_1001BA180(p_wifiSessions, (unint64_t *)(v7 + 16));
        sub_1001BA1CC((uint64_t)p_wifiSessions, (unint64_t *)&v90, &v90, (uint64_t *)v94);
        NSErrorUserInfoKey v52 = (uint64_t)v90;
        uint64_t v53 = (void *)objc_claimAutoreleasedReturnValue(-[NIServerHomeDeviceSession configuration](self, "configuration"));
        else {
          NSErrorUserInfoKey v54 = 1;
        }
        sub_100024390((uint64_t)buf, v52, v54);

        sub_100024A6C(*(uint64_t *)v94);
        if (-[NIServerHomeDeviceSession _isWifiRangingAllowed](self, "_isWifiRangingAllowed"))
        {
          sub_100024E24(*(uint64_t *)v94, (uint64_t)buf);
        }

        else
        {
          unsigned __int8 v67 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)v93 = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v67,  OS_LOG_TYPE_DEFAULT,  "#ses-home,not ranging to rediscovered device because wifi ranging is not currently allowed",  v93,  2u);
          }
        }

        uint64_t v35 = *(std::__shared_weak_count **)&v94[8];
        if (!*(void *)&v94[8]) {
          goto LABEL_116;
        }
        unsigned __int8 v68 = (unint64_t *)(*(void *)&v94[8] + 8LL);
        do
          uint64_t v37 = __ldaxr(v68);
        while (__stlxr(v37 - 1, v68));
      }

      else
      {
        if ((v45 & 1) != 0) {
          goto LABEL_116;
        }
        uint64_t v61 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v62 = [v87 isWifiRangingCapable];
          *(_DWORD *)std::stringbuf::string_type buf = 67109376;
          *(_DWORD *)&uint8_t buf[4] = v17 != v18;
          *(_WORD *)&buf[8] = 1024;
          *(_DWORD *)&buf[10] = v62;
          _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_DEFAULT,  "#ses-home,Stop Wifi Session due to updated device's wifi ranging capable bit off. advAddressChanged: %d, cur rent device's wifiRanging: %d",  buf,  0xEu);
        }

        v63 = *(void *)(v7 + 32);
        *(void *)std::stringbuf::string_type buf = *(void *)(v7 + 24);
        *(void *)&buf[8] = v63;
        if (v63)
        {
          id v64 = (unint64_t *)(v63 + 8);
          do
            v65 = __ldxr(v64);
          while (__stxr(v65 + 1, v64));
        }

        sub_1001BA180(p_wifiSessions, (unint64_t *)(v7 + 16));
        sub_1001BA1CC((uint64_t)p_wifiSessions, (unint64_t *)&v90, &v90, (uint64_t *)buf);
        sub_100024A6C(*(uint64_t *)buf);
        uint64_t v35 = *(std::__shared_weak_count **)&buf[8];
        if (!*(void *)&buf[8]) {
          goto LABEL_116;
        }
        id v66 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          uint64_t v37 = __ldaxr(v66);
        while (__stlxr(v37 - 1, v66));
      }

      goto LABEL_43;
    }

    if (([v87 isWifiRangingCapable] & v43 & 1) == 0)
    {
LABEL_116:

      goto LABEL_117;
    }

    uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue([v86 cbDevice]);
    id v56 = (void *)objc_claimAutoreleasedReturnValue([v55 model]);
    if ([v56 hasPrefix:@"AudioAccessory"])
    {
      uint64_t v57 = (void *)objc_claimAutoreleasedReturnValue(-[NIServerHomeDeviceSession configuration](self, "configuration"));
      id v58 = [v57 isAnchor];

      if (v58)
      {
        uint64_t v59 = (os_log_s *)qword_1008000A0;
        if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO)) {
          goto LABEL_116;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 138412290;
        *(void *)&uint8_t buf[4] = v86;
        id v60 = "#ses-home,No wifi responding to another anchor: %@";
        goto LABEL_111;
      }
    }

    else
    {
    }

    if (![v86 isMobilePhoneModel]
      || (char v69 = (void *)objc_claimAutoreleasedReturnValue(-[NIServerHomeDeviceSession configuration](self, "configuration")),
          v70 = [v69 isAnchor],
          v69,
          (v70 & 1) != 0))
    {
      int v71 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
      {
        char v72 = (void *)objc_claimAutoreleasedReturnValue([v86 cbDevice]);
        int v73 = (void *)objc_claimAutoreleasedReturnValue([v72 model]);
        *(_DWORD *)std::stringbuf::string_type buf = 138412290;
        *(void *)&uint8_t buf[4] = v73;
        _os_log_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_DEFAULT,  "#ses-home,Starting a wifi session with a peer model: %@",  buf,  0xCu);
      }

      -[NIServerHomeDeviceSession _buildWifiSession](self, "_buildWifiSession");
      id v74 = v86;
      uint64_t v75 = &self->_wifiSessions;
      if (*(void *)v94)
      {
        unsigned __int16 v76 = [v86 u64Identifier];
        v77 = (void *)objc_claimAutoreleasedReturnValue(-[NIServerHomeDeviceSession configuration](self, "configuration"));
        else {
          int v78 = 1;
        }
        sub_100024390((uint64_t)buf, (uint64_t)v76, v78);

        uint64_t v79 = sub_100023CC4();
        sub_10026EF5C((uint64_t)self->_wifiCAManager.__ptr_, v79);
        if (-[NIServerHomeDeviceSession _isWifiRangingAllowed](self, "_isWifiRangingAllowed"))
        {
          sub_100024E24(*(uint64_t *)v94, (uint64_t)buf);
        }

        else
        {
          v81 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)v93 = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v81,  OS_LOG_TYPE_DEFAULT,  "#ses-home,WiFi ranging is not allowed at this time.",  v93,  2u);
          }
        }

        v80 = 0LL;
        id v74 = v86;
        uint64_t v75 = &self->_wifiSessions;
      }

      else
      {
        v80 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"com.apple.NearbyInteraction",  -5887LL,  0LL));
      }

      *(void *)v93 = [v74 u64Identifier];
      *(void *)std::stringbuf::string_type buf = v93;
      id v82 = sub_1001B9F24((uint64_t)v75, (unint64_t *)v93, (uint64_t)&unk_1004242F8, (void **)buf);
      sub_100018E60(v82 + 3, (uint64_t *)v94);
      sub_100012390((uint64_t)v94);

      goto LABEL_116;
    }

    uint64_t v59 = (os_log_s *)qword_1008000A0;
    if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO)) {
      goto LABEL_116;
    }
    *(_DWORD *)std::stringbuf::string_type buf = 138412290;
    *(void *)&uint8_t buf[4] = v86;
    id v60 = "#ses-home,No wifi initiating to another mobile: %@";
LABEL_111:
    _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_INFO, v60, buf, 0xCu);
    goto LABEL_116;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_100397C38();
  }
  -[NIServerHomeDeviceSession deviceDiscovered:](self, "deviceDiscovered:", v87);
LABEL_117:
}

  return v26;
}

    if (*(double *)&__p != 0.0)
    {
      int v114 = __p;
      operator delete(__p);
    }

    if (*(double *)&v107 != 0.0)
    {
      uint64_t v108 = *(double *)&v107;
      operator delete(v107);
    }

    return;
  }

  v116 = 0;
  __int128 v32 = *((_DWORD *)sub_100005150() + 187);
  if (v32 == 2)
  {
    uint64_t v33 = *(void *)(a2 + 16);
    __int128 v34 = (int *)(v33 + 100);
    uint64_t v35 = (char *)(v33 + 97);
    __int128 v36 = (__int16 *)(v33 + 98);
  }

  else
  {
    if (v32 != 1) {
      return;
    }
    uint64_t v33 = *(void *)(a2 + 16);
    __int128 v34 = (int *)(v33 + 99);
    uint64_t v35 = (char *)(v33 + 96);
    __int128 v36 = (__int16 *)(v33 + 97);
  }

  unsigned __int16 v76 = (double)*v36 * 0.25;
  v77 = *v35;
  int v78 = (double)*(__int16 *)(v33 + 79) * 0.25;
  uint64_t v79 = *(_BYTE *)(v33 + 78);
  v80 = *(_DWORD *)(v33 + 66);
  v81 = (double)*v34 / 1.0e12;
  id v82 = *(_WORD *)(v33 + 64);
  v83 = *(_BYTE *)(v33 + 63);
  v84 = *(_WORD *)(v33 + 61);
  __int16 v85 = *(_DWORD *)(v33 + 57);
  uint64_t v86 = *(void *)(v33 + 49);
  id v87 = *(void *)(v33 + 41);
  *(float *)&v81 = v81 * 299792458.0;
  id v88 = *(_BYTE *)(v33 + 36);
  v89 = *(_DWORD *)(v33 + 37);
  v90 = *(_BYTE *)(v33 + 33);
  LODWORD(v97) = *(_DWORD *)(v33 + 29);
  BYTE4(v97) = v90;
  v98 = v89;
  id v99 = v88;
  unsigned __int16 v100 = v87;
  v101 = v86;
  int v102 = v85;
  LOWORD(v103) = v84;
  BYTE2(v103) = v83;
  unsigned __int8 v104 = v82;
  v105 = 257;
  int v106 = *(float *)&v81;
  LODWORD(v107) = v80;
  BYTE4(v107) = 0;
  uint64_t v108 = 0.0;
  v109 = v79;
  v110 = v78;
  id v111 = 0;
  *(double *)&__p = 0.0;
  LOBYTE(v114) = v77;
  v115 = v76;
  v116 = 1;
  uint64_t v91 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v91, OS_LOG_TYPE_DEFAULT))
  {
    sub_1002BDC48((unsigned __int16 *)&v97, &v121);
    uint64_t v92 = (v121.__r_.__value_.__s.__size_ & 0x80u) == 0
        ? &v121
        : (std::stringbuf::string_type *)v121.__r_.__value_.__r.__words[0];
    *(_DWORD *)std::stringbuf::string_type buf = 136315138;
    v123 = v92;
    _os_log_impl( (void *)&_mh_execute_header,  v91,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,Responder ranging block summary: %s",  buf,  0xCu);
  }

  v93 = *(void *)(a1 + 560);
  if (v93)
  {
    if (!v116) {
      sub_100006080();
    }
    (*(void (**)(uint64_t, uint64_t *))(*(void *)v93 + 96LL))(v93, &v97);
  }

  if (*(void *)(a1 + 1464))
  {
    sub_1000122E4(v96, (void *)(a1 + 16));
    if (!v116) {
      sub_100006080();
    }
    id v94 = *(void *)(a1 + 1464);
    if (!v94) {
      sub_10001EEF0();
    }
    (*(void (**)(uint64_t, void *, uint64_t *))(*(void *)v94 + 48LL))(v94, v96, &v97);
    sub_100012390((uint64_t)v96);
  }

void sub_100015A60( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, char a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  *(void *)(v56 + 48) = v55;
  _Unwind_Resume(exception_object);
}

void sub_100015B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if ((sub_100014420() & 1) != 0)
  {
    if (sub_1000151E0(a1))
    {
      if (*(void *)(a2 + 8) == *(void *)a2)
      {
        sub_10001EE50(a1 + 216, *(char **)(a1 + 224));
        *(void *)(a1 + 216) = a1 + 224;
        *(void *)(a1 + 224) = 0LL;
        *(void *)(a1 + 2sub_100012358(v1 - 32) = 0LL;
      }

      else
      {
        sub_100015CC4(a1, (id **)a2);
        if (*(void *)(a1 + 232))
        {
LABEL_12:
          sub_1000147F0(a1, 0.0);
          goto LABEL_13;
        }
      }

      *(_DWORD *)(a1 + 448) = 0;
      goto LABEL_12;
    }

    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_100389864();
    }
  }

  else
  {
    BOOL v5 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "#wifi-service,ignoring ranging stop on unsupported platform",  v6,  2u);
    }
  }

void sub_100015CB0(_Unwind_Exception *a1)
{
}

void sub_100015CC4(uint64_t a1, id **a2)
{
  __int128 v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    uint64_t v4 = (void *)(a1 + 224);
    unint64_t v24 = (uint64_t **)(a1 + 216);
    do
    {
      BOOL v5 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        id v6 = sub_10003AD44(v2);
        id v7 = (id)objc_claimAutoreleasedReturnValue(v6);
        id v8 = sub_10003AD64((uint64_t)v2);
        id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
        *(_DWORD *)std::stringbuf::string_type buf = 138412546;
        id v26 = v7;
        __int16 v27 = 2112;
        uint64_t v28 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,Removing from map peer ID: %@; client queue: %@",
          buf,
          0x16u);
      }

      unint64_t v10 = sub_10003AD7C((uint64_t)v2);
      id v11 = (void *)*v4;
      if (!*v4) {
        goto LABEL_16;
      }
      uint64_t v12 = (uint64_t)v4;
      do
      {
        unint64_t v13 = v11[4];
        BOOL v14 = v13 >= v10;
        if (v13 >= v10) {
          id v15 = v11;
        }
        else {
          id v15 = v11 + 1;
        }
        if (v14) {
          uint64_t v12 = (uint64_t)v11;
        }
        id v11 = (void *)*v15;
      }

      while (*v15);
      if ((void *)v12 != v4 && v10 >= *(void *)(v12 + 32))
      {
        uint64_t v18 = *(void *)(v12 + 40);
        if (v18 == *(void *)(v12 + 48))
        {
          sub_10001FAE4(v24, v12);
        }

        else
        {
          char v19 = 0;
          do
          {
            if (sub_10003AC08(v18, (uint64_t)v2))
            {
              sub_10001F928((uint64_t *)(v18 + 168), *(uint64_t **)(v12 + 48), v18);
              uint64_t v21 = v20;
              for (uint64_t i = *(void *)(v12 + 48); i != v21; sub_10001F180(v12 + 56, i))
                i -= 168LL;
              *(void *)(v12 + 48) = v21;
              char v19 = 1;
            }

            else
            {
              v18 += 168LL;
              uint64_t v21 = *(void *)(v12 + 48);
            }
          }

          while (v18 != v21);
          if (*(void *)(v12 + 40) == v21) {
            sub_10001FAE4(v24, v12);
          }
          if ((v19 & 1) != 0) {
            goto LABEL_19;
          }
        }

        int v16 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          id v23 = sub_10003AD44(v2);
          objc_claimAutoreleasedReturnValue(v23);
          sub_1003898CC();
        }
      }

      else
      {
LABEL_16:
        int v16 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          id v17 = sub_10003AD44(v2);
          objc_claimAutoreleasedReturnValue(v17);
          sub_100389890();
        }
      }

LABEL_19:
      v2 += 21;
    }

    while (v2 != v3);
  }

void sub_100015F5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100015F8C(uint64_t a1)
{
  *(_DWORD *)a1 = 1084227584;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0LL;
  *(_BYTE *)(a1 + 48) = 1;
  *(_DWORD *)(a1 + 49) = 0;
  *(_DWORD *)(a1 + 52) = 0;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 88) = 850045863LL;
  *(_BYTE *)(a1 + 56) = 1;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = 0LL;
  *(_BYTE *)(a1 + 168) = 0;
  *(_BYTE *)(a1 + 176) = 0;
  *(_BYTE *)(a1 + 184) = 0;
  *(void *)(a1 + 2sub_100012358(v1 - 32) = 0LL;
  *(void *)(a1 + 224) = 0LL;
  *(_BYTE *)(a1 + 160) = 0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_BYTE *)(a1 + 240) = 0;
  *(void *)(a1 + 216) = a1 + 224;
  *(void *)(a1 + 192) = 0LL;
  *(void *)(a1 + 200) = 0LL;
  *(void *)(a1 + 208) = 0LL;
  *(_BYTE *)(a1 + 408) = 0;
  *(void *)(a1 + 416) = 0LL;
  *(void *)(a1 + 4sub_100012358(v1 - 32) = 0LL;
  *(void *)(a1 + 424) = a1 + 432;
  *(void *)(a1 + 440) = 0LL;
  *(void *)(a1 + 448) = 0LL;
  *(_DWORD *)(a1 + 456) = 0;
  if (sub_100014420())
  {
    dispatch_queue_attr_t v2 = dispatch_queue_attr_make_with_qos_class(0LL, QOS_CLASS_DEFAULT, 0);
    uint64_t v3 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v2);
    dispatch_queue_t v4 = dispatch_queue_create("com.apple.nearbyd.WiFiRanging", v3);
    BOOL v5 = *(void **)(a1 + 80);
    *(void *)(a1 + 80) = v4;

    sub_1000161D8(a1);
    *(_DWORD *)(a1 + 464) = 0;
    *(_DWORD *)(a1 + 460) = sub_1000164DC();
    dispatch_source_t v6 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  *(dispatch_queue_t *)(a1 + 80));
    id v7 = *(void **)(a1 + 152);
    *(void *)(a1 + 152) = v6;

    double v8 = *(float *)a1;
    dispatch_time_t v9 = dispatch_time(0LL, 0LL);
    dispatch_source_set_timer(*(dispatch_source_t *)(a1 + 152), v9, (uint64_t)(v8 * 1000000000.0), 0LL);
    unint64_t v10 = *(dispatch_source_s **)(a1 + 152);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472LL;
    handler[2] = sub_100016544;
    handler[3] = &unk_1007A2398;
    handler[4] = a1;
    dispatch_source_set_event_handler(v10, handler);
    dispatch_resume(*(dispatch_object_t *)(a1 + 152));
  }

  return a1;
}

void sub_100016168(_Unwind_Exception *a1)
{
  sub_10001EEA8(v7, *(void **)(v1 + 432));
  sub_10001D4B8(v6);
  sub_10001EE50(v4, *(char **)(v1 + 224));

  std::mutex::~mutex(v3);
  sub_100012390(v2);
  _Unwind_Resume(a1);
}

const void *sub_1000161D8(uint64_t a1)
{
  result = *(const void **)(a1 + 16);
  if (result)
  {
    if (*(_BYTE *)(a1 + 55)) {
      return result;
    }
    uint64_t v3 = (const void *)WiFiManagerClientCopyInterfaces(result);
    BOOL v4 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR);
    if (v3)
    {
      if (v4) {
        sub_100389B20();
      }
      CFRelease(v3);
      *(_BYTE *)(a1 + 55) = 1;
      return *(const void **)(a1 + 16);
    }

    if (v4) {
      sub_100389AF4();
    }
    goto LABEL_32;
  }

  BOOL v5 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf.__sig) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,calling WiFiManagerClientCreate",  (uint8_t *)&buf,  2u);
  }

  uint64_t v6 = (const void *)WiFiManagerClientCreate(kCFAllocatorDefault, 0LL);
  *(void *)(a1 + 16) = v6;
  if (!v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_100389908();
    }
    sub_100016C24(a1, 1);
    sub_100016F0C(a1);
    return 0LL;
  }

  CFRetain(v6);
  if (pthread_attr_init(&buf))
  {
    uint64_t v7 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_100389A84(v7, v8, v9, v10, v11, v12, v13, v14);
    }
  }

  else if (pthread_attr_setdetachstate(&buf, 2))
  {
    id v15 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_100389A14(v15, v16, v17, v18, v19, v20, v21, v22);
    }
  }

  else if (pthread_create((pthread_t *)(a1 + 8), &buf, (void *(__cdecl *)(void *))sub_100019A94, *(void **)(a1 + 16)))
  {
    id v23 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_1003899A4(v23, v24, v25, v26, v27, v28, v29, v30);
    }
  }

  else
  {
    if (!pthread_attr_destroy(&buf))
    {
      uint64_t v39 = (const void *)WiFiManagerClientCopyInterfaces(*(void *)(a1 + 16));
      if (v39)
      {
        CFRelease(v39);
        unint64_t v40 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)id v42 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_INFO,  "#wifi-service,Interfaces found at manager creation.",  v42,  2u);
        }

        *(_BYTE *)(a1 + 55) = 1;
      }

      else
      {
        uint64_t v41 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)id v42 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,No interfaces when creating manager. Setting up attachment callback.",  v42,  2u);
        }

        WiFiManagerClientRegisterDeviceAttachmentCallback(*(void *)(a1 + 16), sub_10001D98C, a1);
      }

      return *(const void **)(a1 + 16);
    }

    uint64_t v31 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_100389934(v31, v32, v33, v34, v35, v36, v37, v38);
    }
  }

  sub_100016C24(a1, 1);
  sub_100016F0C(a1);
LABEL_32:
  result = *(const void **)(a1 + 16);
  if (result)
  {
    CFRelease(result);
    result = 0LL;
    *(void *)(a1 + 16) = 0LL;
  }

  return result;
}

BOOL sub_1000164DC()
{
  id v0 = -[NSUserDefaults initWithSuiteName:]( objc_alloc(&OBJC_CLASS___NSUserDefaults),  "initWithSuiteName:",  @"com.apple.airplay");
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(-[NSUserDefaults objectForKey:](v0, "objectForKey:", @"persistentGroupUUID"));
  BOOL v2 = v1 != 0LL;

  return v2;
}

void sub_100016534(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100016544(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  BOOL v2 = sub_1000164DC();
  int v3 = v2;
  if (*(_DWORD *)(v1 + 460) == 1)
  {
    *(_DWORD *)(v1 + 460) = v2;
    if (v2 || (sub_100014420() & 1) == 0) {
      return;
    }
  }

  else
  {
    int v4 = sub_100014420();
    *(_DWORD *)(v1 + 460) = v3;
    if (v3)
    {
      if ((v4 & 1) == 0) {
        return;
      }
    }

    else if (v4 == sub_100014420())
    {
      return;
    }
  }

  BOOL v5 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    sub_1000166C4(v3, __p);
    uint64_t v6 = v9 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)pthread_attr_t buf = 136315138;
    uint64_t v11 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,new odeon config state: %s",  buf,  0xCu);
    if (v9 < 0) {
      operator delete(__p[0]);
    }
  }

  if (*(_DWORD *)(v1 + 460) == 1) {
    int v7 = 0;
  }
  else {
    int v7 = sub_100014420();
  }
  sub_1000166F8(v1, v7);
}

void sub_100016694(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1000166AC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 460) == 1) {
    return 0LL;
  }
  else {
    return sub_100014420();
  }
}

void *sub_1000166C4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  if (a1)
  {
    if (a1 != 1) {
      sub_100389B4C();
    }
    BOOL v2 = "ODEON_PRESENT";
  }

  else
  {
    BOOL v2 = "ODEON_NOT_PRESENT";
  }

  return sub_1000065CC(a2, v2);
}

void sub_1000166F8(uint64_t a1, int a2)
{
  int v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v5 = "wifi unavailable";
    if (a2) {
      BOOL v5 = "wifi available";
    }
    *(_DWORD *)pthread_attr_t buf = 136315138;
    *(void *)&uint8_t buf[4] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,reporting new wifi availability status: %s",  buf,  0xCu);
  }

  uint64_t v6 = *(void **)(a1 + 424);
  if (v6 != (void *)(a1 + 432))
  {
    do
    {
      int v7 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v8 = v6 + 4;
        *(_DWORD *)pthread_attr_t buf = 136315138;
        *(void *)&uint8_t buf[4] = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,reporting new wifi availability state to session %s",  buf,  0xCu);
      }

      sub_10001E914((uint64_t)buf, (uint64_t)(v6 + 7));
      char v9 = (dispatch_queue_s *)(id)v6[11];
      if (v22)
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3321888768LL;
        block[2] = sub_100019A18;
        block[3] = &unk_1007A2448;
        if (v22 == buf)
        {
          uint64_t v19 = v18;
          (*(void (**)(uint8_t *, _BYTE *))(*(void *)buf + 24LL))(buf, v18);
        }

        else
        {
          uint64_t v19 = (_BYTE *)(*(uint64_t (**)(void))(*(void *)v22 + 16LL))();
        }

        char v20 = a2;
        dispatch_async(v9, block);
        uint64_t v10 = v19;
        if (v19 == v18)
        {
          uint64_t v10 = v18;
          uint64_t v11 = 4LL;
        }

        else
        {
          if (!v19) {
            goto LABEL_19;
          }
          uint64_t v11 = 5LL;
        }

        (*(void (**)(void))(*v10 + 8 * v11))();
      }

LABEL_19:
      uint64_t v12 = v22;
      if (v22 == buf)
      {
        uint64_t v12 = buf;
        uint64_t v13 = 4LL;
        goto LABEL_23;
      }

      if (v22)
      {
        uint64_t v13 = 5LL;
LABEL_23:
        (*(void (**)(void))(*(void *)v12 + 8 * v13))();
      }

      uint64_t v14 = (void *)v6[1];
      if (v14)
      {
        do
        {
          id v15 = v14;
          uint64_t v14 = (void *)*v14;
        }

        while (v14);
      }

      else
      {
        do
        {
          id v15 = (void *)v6[2];
          BOOL v16 = *v15 == (void)v6;
          uint64_t v6 = v15;
        }

        while (!v16);
      }

      uint64_t v6 = v15;
    }

    while (v15 != (void *)(a1 + 432));
  }
}

  char v9 = *(void *)(v5 + 32);
  if (!v9) {
    char v9 = *(void *)(qword_1008000E8 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v9,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }

  uint64_t v10 = *(void *)(v5 + 40);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_100800100 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v10,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }

    if (v11 == 4) {
      return 1LL;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField( this,  TagFallback,  v6,  a4) & 1) == 0) {
      return 0LL;
    }
  }

  uint64_t v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    int v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(unsigned __int8 *)(v5 + 25),  (BOOL)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }

  uint64_t v11 = *(_BYTE *)(a1 + 25);
  *(_BYTE *)a2 = 24;
  *(_BYTE *)(a2 + 1) = v11;
  a2 += 2LL;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }

  uint64_t v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    int v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 28),  a2,  a4);
  if ((*(_DWORD *)(v5 + 68) & 0x10) != 0) {
LABEL_6:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 56),  a2,  a4);
LABEL_7:
  if (*(int *)(v5 + 40) >= 1)
  {
    int v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(void *)(*(void *)(v5 + 32) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 40));
  }

  if ((*(_BYTE *)(v5 + 68) & 0x40) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 60),  (int)a2,  a4);
  }
  uint64_t v10 = *(void **)(v5 + 8);
  char v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

    if (v11 == 4) {
      return 1LL;
    }
  }

  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField( this,  TagFallback,  v6,  a4) & 1) != 0);
  return 0LL;
}

    uint64_t v12 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 116) |= 0x40u;
    *(void *)(a1 + 64) = v12;
    BOOL v5 = *(_DWORD *)(a2 + 116);
    if ((v5 & 0x80) == 0) {
      goto LABEL_23;
    }
LABEL_20:
    uint64_t v13 = *(const std::string **)(a2 + 72);
    *(_DWORD *)(a1 + 116) |= 0x80u;
    uint64_t v14 = *(std::string **)(a1 + 72);
    if (v14 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      uint64_t v14 = (std::string *)operator new(0x18uLL);
      v14->__r_.__value_.__l.__size_ = 0LL;
      v14->__r_.__value_.__l.__cap_ = 0LL;
      v14->__r_.__value_.__r.__words[0] = 0LL;
      *(void *)(a1 + 72) = v14;
    }

    std::string::operator=(v14, v13);
    BOOL v5 = *(_DWORD *)(a2 + 116);
  }

  uint64_t v12 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 68) |= 0x10u;
  *(void *)(a1 + sub_100012358(v1 - 32) = v12;
  BOOL v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0) {
      goto LABEL_11;
    }
LABEL_21:
    uint64_t v14 = *(_DWORD *)(a2 + 44);
    if (v14 >= 2) {
      sub_10038C044();
    }
    *(_DWORD *)(a1 + 68) |= 0x40u;
    *(_DWORD *)(a1 + 44) = v14;
    if ((*(_DWORD *)(a2 + 68) & 0x80) != 0) {
      goto LABEL_12;
    }
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }

  uint64_t v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    int v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

  uint64_t v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    int v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

  if ((v3 & 4) != 0)
  {
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v13 >= 0x80)
    {
      uint64_t v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
      int v3 = *(_DWORD *)(a1 + 68);
    }

    else
    {
      uint64_t v14 = 1;
    }

    int v4 = (v4 + v14 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_21:
      if ((v3 & 0x10) == 0) {
        goto LABEL_22;
      }
      goto LABEL_34;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_21;
  }

  id v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v15 >= 0x80)
  {
    BOOL v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }

  else
  {
    BOOL v16 = 2;
  }

  int v4 = (v16 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_22:
    if ((v3 & 0x20) == 0) {
      goto LABEL_23;
    }
    goto LABEL_38;
  }

  if ((v3 & 4) != 0)
  {
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v11 & 0x80000000) != 0)
    {
      uint64_t v12 = 10;
    }

    else if (v11 >= 0x80)
    {
      uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      int v3 = *(_DWORD *)(a1 + 84);
    }

    else
    {
      uint64_t v12 = 1;
    }

    v4 += v12 + 1;
    if ((v3 & 8) == 0)
    {
LABEL_21:
      if ((v3 & 0x10) == 0) {
        goto LABEL_22;
      }
      goto LABEL_37;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_21;
  }

  uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v13 >= 0x80)
  {
    uint64_t v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 84);
  }

  else
  {
    uint64_t v14 = 2;
  }

  v4 += v14;
  if ((v3 & 0x10) == 0)
  {
LABEL_22:
    if ((v3 & 0x20) == 0) {
      goto LABEL_23;
    }
    goto LABEL_41;
  }

  uint64_t v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    int v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

    if (v12 == 4) {
      return 1LL;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField( this,  TagFallback,  v6,  a4) & 1) == 0) {
      return 0LL;
    }
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 36),  (int)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }

  uint64_t v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    int v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(3LL, *(void *)(v5 + 24), a2);
  uint64_t v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }

  if (*((int *)this + 20) >= 1)
  {
    uint64_t v12 = 0LL;
    do
    {
      uint64_t v13 = *(unsigned int **)(*((void *)this + 9) + 8 * v12);
      *(_WORD *)int v4 = 1698;
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[8];
      if (v14 > 0x7F)
      {
        id v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  (int)v4 + 2,  a3);
      }

      else
      {
        *((_BYTE *)v4 + 2) = (_BYTE)v14;
        id v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
      }

      int v4 = sub_100092050((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3, a4);
      ++v12;
    }

    while (v12 < *((int *)this + 20));
  }

  uint64_t v18 = (void *)*((void *)this + 1);
  uint64_t v17 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  BOOL v16 = v18;
  if (!v18 || *v16 == v16[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v17,  v4,  a3);
  }
}

  uint64_t v11 = *(void *)(v5 + 32);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008002F0 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  v11,  a2,  a4);
  if ((*(_DWORD *)(v5 + 76) & 0x20) != 0) {
LABEL_7:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 44),  a2,  a4);
LABEL_8:
  if (*(int *)(v5 + 56) >= 1)
  {
    int v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(void *)(*(void *)(v5 + 48) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 56));
  }

  uint64_t v10 = *(void **)(v5 + 8);
  char v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(void *)(v5 + 48),  (unint64_t)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 48),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_23;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(double *)(v5 + 32),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }

  uint64_t v10 = *(void *)(v5 + 24);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_100800448 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v10,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }

  uint64_t v12 = (void *)*((void *)this + 1);
  uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v10 = v12;
  if (!v12 || *v10 == v10[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v11,  v3,  a3);
  }
}

  uint64_t v12 = *(void *)(v5 + 24);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_100800440 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v12,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }

  uint64_t v14 = *(_DWORD *)(a1 + 32);
  id v15 = (v14 + v4);
  if (v14 >= 1)
  {
    for (uint64_t i = 0LL; i < v14; ++i)
    {
      uint64_t v17 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
      uint64_t v19 = v18;
      char v20 = *(void *)(v17 + 8);
      if ((v18 & 0x80u) == 0) {
        uint64_t v21 = *(unsigned __int8 *)(v17 + 23);
      }
      else {
        uint64_t v21 = v20;
      }
      if (v21 >= 0x80)
      {
        uint64_t v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21,  a2);
        uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
        char v20 = *(void *)(v17 + 8);
        uint64_t v14 = *(_DWORD *)(a1 + 32);
        uint64_t v19 = *(_BYTE *)(v17 + 23);
      }

      else
      {
        uint64_t v22 = 1;
      }

      if (v19 < 0) {
        uint64_t v18 = v20;
      }
      id v15 = (v22 + v15 + v18);
    }
  }

  id v23 = *(void **)(a1 + 8);
  if (v23 && *v23 != v23[1]) {
    id v15 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v15;
  *(_DWORD *)(a1 + 52) = v15;
  return v15;
}

  if ((v3 & 4) != 0)
  {
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v14 & 0x80000000) != 0)
    {
      id v15 = 11;
    }

    else if (v14 >= 0x80)
    {
      int v3 = *(_DWORD *)(a1 + 68);
    }

    else
    {
      id v15 = 2;
    }

    v4 += v15;
    if ((v3 & 8) == 0) {
      goto LABEL_34;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_34;
  }

  BOOL v16 = *(void *)(a1 + 32);
  if (!v16) {
    BOOL v16 = *(void *)(qword_100800470 + 32);
  }
  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C8CD4(v16, a2);
  uint64_t v18 = (int)v17;
  else {
    uint64_t v19 = 1;
  }
  v4 += v18 + v19 + 1;
LABEL_34:
  char v20 = *(_DWORD *)(a1 + 48);
  uint64_t v21 = (v20 + v4);
  if (v20 >= 1)
  {
    uint64_t v22 = 0LL;
    do
    {
      id v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000C4EE0( *(void *)(*(void *)(a1 + 40) + 8 * v22),  a2);
      uint64_t v24 = (int)v23;
      else {
        uint64_t v25 = 1;
      }
      uint64_t v21 = (v24 + v21 + v25);
      ++v22;
    }

    while (v22 < *(int *)(a1 + 48));
  }

  uint64_t v26 = *(void **)(a1 + 8);
  if (v26 && *v26 != v26[1]) {
    uint64_t v21 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v21;
  *(_DWORD *)(a1 + 64) = v21;
  return v21;
}

    if (v13 == 4) {
      return 1LL;
    }
  }

    BOOL v16 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 72) |= 4u;
    *(void *)(a1 + sub_100012358(v1 - 32) = v16;
    if ((*(_DWORD *)(a2 + 72) & 0x10) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_20;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(unsigned __int8 *)(v5 + 48),  (BOOL)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }

  if ((v5 & 0x100) != 0)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 84) |= 0x100u;
    *(void *)(a1 + 72) = v10;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  uint64_t v10 = *(void *)(v5 + 40);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1008004A8 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  v10,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }

  uint64_t v11 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 76) |= 0x10u;
  *(_DWORD *)(a1 + 44) = v11;
  BOOL v5 = *(_DWORD *)(a2 + 76);
  if ((v5 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_12:
  if ((v5 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_21:
  uint64_t v13 = *(const std::string **)(a2 + 56);
  *(_DWORD *)(a1 + 76) |= 0x40u;
  uint64_t v14 = *(std::string **)(a1 + 56);
  if (v14 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    uint64_t v14 = (std::string *)operator new(0x18uLL);
    v14->__r_.__value_.__l.__size_ = 0LL;
    v14->__r_.__value_.__l.__cap_ = 0LL;
    v14->__r_.__value_.__r.__words[0] = 0LL;
    *(void *)(a1 + 56) = v14;
  }

  std::string::operator=(v14, v13);
  if ((*(_DWORD *)(a2 + 76) & 0x80) != 0)
  {
LABEL_24:
    id v15 = *(const std::string **)(a2 + 64);
    *(_DWORD *)(a1 + 76) |= 0x80u;
    BOOL v16 = *(std::string **)(a1 + 64);
    if (v16 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      BOOL v16 = (std::string *)operator new(0x18uLL);
      v16->__r_.__value_.__l.__size_ = 0LL;
      v16->__r_.__value_.__l.__cap_ = 0LL;
      v16->__r_.__value_.__r.__words[0] = 0LL;
      *(void *)(a1 + 64) = v16;
    }

    std::string::operator=(v16, v15);
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  uint64_t v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    int v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 24),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }

  uint64_t v12 = (void *)*((void *)this + 1);
  uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v10 = v12;
  if (!v12 || *v10 == v10[1]) {
    return a2;
  }
  else {
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v11,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(void *)(v5 + 40),  (unint64_t)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_24;
    }
    goto LABEL_21;
  }

  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 5);
  *(_BYTE *)a2 = 64;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, a2 + 1, a3);
  int v4 = *((_DWORD *)this + 18);
  if ((v4 & 0x100) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v4 & 0x200) == 0) {
    goto LABEL_27;
  }
LABEL_21:
  uint64_t v14 = (_DWORD *)*((void *)this + 7);
  if (!v14) {
    uint64_t v14 = *(_DWORD **)(qword_100800550 + 56);
  }
  *(_BYTE *)a2 = 82;
  id v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[6];
  if (v15 > 0x7F)
  {
    BOOL v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)a2 + 1,  a3);
  }

  else
  {
    *(_BYTE *)(a2 + 1) = (_BYTE)v15;
    BOOL v16 = a2 + 2;
  }

  a2 = sub_1000DFB1C(v14, v16, a3);
LABEL_27:
  uint64_t v19 = (void *)*((void *)this + 1);
  uint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v17 = v19;
  if (!v19 || *v17 == v17[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v18,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  uint64_t v12 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 88) |= 0x10u;
  *(void *)(a1 + 40) = v12;
  BOOL v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  *(_DWORD *)(a1 + 88) |= 0x40u;
  id v15 = *(void **)(a1 + 56);
  if (!v15)
  {
    id v15 = operator new(0x30uLL);
    sub_1000E69AC((uint64_t)v15);
    *(void *)(a1 + 56) = v15;
  }

  BOOL v16 = *(void *)(a2 + 56);
  if (!v16) {
    BOOL v16 = *(void *)(qword_100800590 + 56);
  }
  sub_1000E69F8((uint64_t)v15, v16);
  BOOL v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x80) != 0) {
    goto LABEL_30;
  }
LABEL_12:
  if ((v5 & 0x100) != 0)
  {
LABEL_13:
    uint64_t v6 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 88) |= 0x100u;
    *(void *)(a1 + 72) = v6;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 40),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }

  uint64_t v13 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 52) |= 0x20u;
  *(_DWORD *)(a1 + 36) = v13;
  BOOL v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x40) != 0) {
    goto LABEL_20;
  }
LABEL_11:
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v6 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 52) |= 0x80u;
    *(_DWORD *)(a1 + 44) = v6;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(float *)(v5 + 36),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }

  uint64_t v14 = *(_DWORD *)(a1 + 36);
  *(_BYTE *)a2 = 53;
  *(_DWORD *)(a2 + 1) = v14;
  a2 += 5LL;
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x40) != 0) {
    goto LABEL_20;
  }
LABEL_8:
  if ((v3 & 0x80) != 0)
  {
LABEL_9:
    int v4 = *(_DWORD *)(a1 + 44);
    *(_BYTE *)a2 = 69;
    *(_DWORD *)(a2 + 1) = v4;
    a2 += 5LL;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 40),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 40),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(unsigned __int8 *)(v5 + 33),  (BOOL)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }

  uint64_t v12 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 64) |= 0x10u;
  *(void *)(a1 + 40) = v12;
  BOOL v5 = *(_DWORD *)(a2 + 64);
  if ((v5 & 0x20) == 0)
  {
LABEL_12:
    if ((v5 & 0x40) == 0) {
      goto LABEL_13;
    }
LABEL_21:
    uint64_t v14 = *(_BYTE *)(a2 + 56);
    *(_DWORD *)(a1 + 64) |= 0x40u;
    *(_BYTE *)(a1 + 56) = v14;
    if ((*(_DWORD *)(a2 + 64) & 0x80) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_14;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 48),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }

        if (v12 == 4) {
          return 1LL;
        }
      }

      uint64_t v12 = TagFallback & 7;
      uint64_t v17 = (char *)*((void *)this + 1);
      uint64_t v14 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v17 >= v14 || *v17 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
        if (!(_DWORD)result) {
          return result;
        }
        uint64_t v19 = (_BYTE *)*((void *)this + 1);
        uint64_t v14 = *((void *)this + 2);
      }

      else
      {
        *int v7 = *v17;
        uint64_t v19 = v17 + 1;
        *((void *)this + 1) = v19;
      }

      uint64_t v13 = *(_DWORD *)(a1 + 40) | 2;
      *(_DWORD *)(a1 + 40) = v13;
    }

    while ((unint64_t)v19 >= v14 || *v19 != 26);
    *((void *)this + 1) = v19 + 1;
LABEL_35:
    *(_DWORD *)(a1 + 40) = v13 | 4;
    char v20 = *(void **)(a1 + 24);
    if (!v20)
    {
      char v20 = operator new(0x38uLL);
      sub_1001036B8((uint64_t)v20);
      *(void *)(a1 + 24) = v20;
    }

    uint64_t v21 = (char *)*((void *)this + 1);
    if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
    {
    }

    else
    {
      uint64_t v30 = *v21;
      *((void *)this + 1) = v21 + 1;
    }

    uint64_t v22 = *((_DWORD *)this + 14);
    id v23 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v22 + 1;
    if (v22 >= v23) {
      return 0LL;
    }
    uint64_t v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v30);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
    uint64_t v27 = *((_DWORD *)this + 14);
    uint64_t v28 = __OFSUB__(v27, 1);
    uint64_t v29 = v27 - 1;
    if (v29 < 0 == v28) {
      *((_DWORD *)this + 14) = v29;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      result = 1LL;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }

  uint64_t v12 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 92) |= 8u;
  *(void *)(a1 + 40) = v12;
  BOOL v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    uint64_t v14 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 92) |= 0x20u;
    *(void *)(a1 + 56) = v14;
    BOOL v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    goto LABEL_22;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v4 + 48),  a3);
  BOOL v5 = *(_DWORD *)(v4 + 92);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }

  uint64_t v13 = *(void *)(a1 + 48);
  *(_BYTE *)a2 = 41;
  *(void *)(a2 + 1) = v13;
  a2 += 9LL;
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(void *)(v5 + 40),  (unint64_t)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }

  uint64_t v14 = *((_DWORD *)this + 23);
  if ((v14 & 8) != 0)
  {
    id v15 = *((void *)this + 4);
    *(_BYTE *)int v3 = 33;
    *(void *)((char *)v3 + 1) = v15;
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    uint64_t v14 = *((_DWORD *)this + 23);
    if ((v14 & 0x10) == 0)
    {
LABEL_21:
      if ((v14 & 0x20) == 0) {
        goto LABEL_22;
      }
      goto LABEL_26;
    }
  }

  else if ((v14 & 0x10) == 0)
  {
    goto LABEL_21;
  }

  BOOL v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 5);
  *(_BYTE *)int v3 = 40;
  int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v16,  (unint64_t)v3 + 1,  a3);
  uint64_t v14 = *((_DWORD *)this + 23);
  if ((v14 & 0x20) == 0)
  {
LABEL_22:
    if ((v14 & 0x40) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }

  *uint64_t v12 = &v9[v17];
  return result;
}

  void *v13 = &v9[v17];
  return result;
}

      v10.__d_.__rep_ = v9 + v7.__d_.__rep_;
      goto LABEL_20;
    }
  }

  while (std::chrono::steady_clock::now().__d_.__rep_ < v6.__d_.__rep_);
  if (*(_BYTE *)(a1 + 2555))
  {
LABEL_23:
    uint64_t v11 = *(unsigned __int8 *)(a1 + 2486);
    uint64_t v12 = (os_log_s *)qword_1008000A0;
    if (v11 != 4)
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
        sub_100393C28(v11, v12);
      }
      uint64_t v19 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)pthread_attr_t buf = 136315650;
        *(void *)uint64_t v27 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/Ranging/Providers/Rose/PRRoseProvider.mm";
        *(_WORD *)&v27[8] = 1024;
        uint64_t v28 = 889;
        uint64_t v29 = 2080;
        uint64_t v30 = "_sendAlishaDeleteKeysCommandSync";
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "#roseprovider,%s:%d: assertion failure in %s",  buf,  0x1Cu);
      }

      abort();
    }

    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = *(_DWORD *)(a1 + 2509);
      uint64_t v14 = *(unsigned __int16 *)(a1 + 2507);
      *(_DWORD *)pthread_attr_t buf = 67109376;
      *(_DWORD *)uint64_t v27 = v14;
      *(_WORD *)&v27[4] = 1024;
      *(_DWORD *)&v27[6] = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "#roseprovider,#alisha delete keys - status %u, uwb session id %u",  buf,  0xEu);
    }

    id v15 = 0LL;
    if (*(_BYTE *)(a1 + 2555)) {
      *(_BYTE *)(a1 + 2555) = 0;
    }
    goto LABEL_35;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_100393BFC();
  }
  id v15 = 4294966277LL;
LABEL_35:
  if (__lk.__owns_) {
    std::mutex::unlock(__lk.__m_);
  }
  if (v22) {
    std::mutex::unlock(v21);
  }
  if (__p)
  {
    uint64_t v24 = __p;
    operator delete(__p);
  }

  return v15;
}

  if (__p)
  {
    uint64_t v35 = __p;
    operator delete(__p);
  }

  if ((v14 & 1) == 0)
  {
    uint64_t v21 = 0LL;
    goto LABEL_24;
  }

      v9.__d_.__rep_ = v8 + v6.__d_.__rep_;
      goto LABEL_20;
    }
  }

  while (std::chrono::steady_clock::now().__d_.__rep_ < v5.__d_.__rep_);
  if (*(_BYTE *)(a1 + 1664))
  {
LABEL_23:
    dispatch_async(*(dispatch_queue_t *)(a1 + 16), &stru_1007B5A38);
    int v3 = 1LL;
    goto LABEL_24;
  }

  if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
    sub_10039C9A8();
  }
LABEL_4:
  int v3 = 0LL;
LABEL_24:
  if (__lk.__owns_) {
    std::mutex::unlock(__lk.__m_);
  }
  return v3;
}

    uint64_t v13 = objc_loadWeakRetained((id *)&self->_finderStartRangingOptions.var0.__val_.secondary_duty_cycle);

    engaged = self->_finderStartRangingOptions.__engaged_;
    if (engaged != 1)
    {
      if (engaged != 4)
      {
LABEL_30:
        if (v56 && v54)
        {
          uint64_t v55 = v54;
          operator delete(v54);
        }

        if (v52) {
          sub_100034A98((uint64_t)v51, v51[1]);
        }
        sub_100124BFC((uint64_t)v49);

        return;
      }

      engaged = LOBYTE(self->_finderMutualAuthTimer) == 1;
    }

    if (engaged && v13)
    {
      id v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([v13 clientQueue]);
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3321888768LL;
      v16[2] = sub_1001EEC98;
      v16[3] = &unk_1007B6540;
      uint64_t v17 = v13;
      uint64_t v19 = *(_OWORD *)buf;
      char v20 = v47;
      uint64_t v21 = v48;
      sub_1001376C0(v22, (uint64_t)v49);
      sub_1001317DC(v23, (uint64_t)v50);
      sub_100137714(v26, v53);
      memcpy(v30, v57, sizeof(v30));
      uint64_t v18 = self;
      dispatch_async(v15, v16);

      if (v29 && v27)
      {
        uint64_t v28 = v27;
        operator delete(v27);
      }

      if (v25) {
        sub_100034A98((uint64_t)v24, v24[1]);
      }
      sub_100124BFC((uint64_t)v22);
    }

    goto LABEL_30;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_10039D530();
  }
}

    uint64_t v33 = 0LL;
    goto LABEL_38;
  }

  v14->_sensorsOn = 0;
  v14->_backgroundedClientsSupported = 1;
  if (v9)
  {
    [v9 powerBudgetProvider];
  }

  else
  {
    *(void *)pthread_attr_t buf = 0LL;
    *(void *)&buf[8] = 0LL;
  }

  sub_10000EE54((uint64_t)&v14->_powerBudgetProvider, (__int128 *)buf);
  uint64_t v34 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v35 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      uint64_t v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }

  uint64_t v37 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v38 = sub_10014B25C();
    uint64_t v39 = @"No";
    if (v38) {
      uint64_t v39 = @"Yes";
    }
    *(_DWORD *)pthread_attr_t buf = 138412290;
    *(void *)&uint8_t buf[4] = v39;
    _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "#ses-nrby-peer,Power budget reporting to CPMS is supported: %@",  buf,  0xCu);
  }

  unint64_t v40 = -[NINearbyPeerConfiguration isExtendedDistanceMeasurementEnabled]( v15->_configuration,  "isExtendedDistanceMeasurementEnabled");
  uint64_t v41 = (os_log_s *)qword_1008000A0;
  id v42 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
  if (v40)
  {
    if (v42)
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "#ses-nrby-peer,extended distance measurement is enabled. Using NMI session",  buf,  2u);
    }

    uint64_t v43 = -[NIServerNearbyPeerNbammsSession initWithDataSource:delegate:clientQueue:]( objc_alloc(&OBJC_CLASS___NIServerNearbyPeerNbammsSession),  "initWithDataSource:delegate:clientQueue:",  v15,  v15,  v15->_clientQueue);
  }

  else
  {
    if (v42)
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "#ses-nrby-peer,extended distance measurement not enabled. Using GR session",  buf,  2u);
    }

    uint64_t v43 = -[NIServerNearbyPeerGrSession initWithDataSource:delegate:clientQueue:]( objc_alloc(&OBJC_CLASS___NIServerNearbyPeerGrSession),  "initWithDataSource:delegate:clientQueue:",  v15,  v15,  v15->_clientQueue);
  }

  subspecializedPeerSession = v15->_subspecializedPeerSession;
  v15->_subspecializedPeerSession = (NIServerNearbyPeerSubspecializationProtocol *)v43;

  v15->_cachedSolutionMacAddr = 0LL;
  uint64_t v33 = v15;
LABEL_38:

  return v33;
}

  objc_msgSend(v3, "setTaskCompleted", v15);
  uint64_t v14 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "#ota,task complete", v21, 2u);
  }

  _Block_object_dispose(buf, 8);
}

    abort();
  }

  --*(_WORD *)(a1 + 400);
  BOOL v2 = (os_log_s *)qword_1007FC190;
  if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_INFO))
  {
    int v3 = *(unsigned __int16 *)(a1 + 400);
    int v7 = 67109120;
    LODWORD(v8) = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "regulatory,geo,loc,checkRegulatoryIso,refCountForReleasingAssertion,%d",  (uint8_t *)&v7,  8u);
  }

  if (!*(_WORD *)(a1 + 400))
  {
    int v4 = (os_log_s *)qword_1007FC190;
    if (*(void *)(a1 + 392))
    {
      BOOL v5 = (uint64_t *)(a1 + 392);
      if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_INFO))
      {
        LOWORD(v7) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "regulatory,geo,loc,checkRegulatoryIso,releaseAssertion",  (uint8_t *)&v7,  2u);
      }

      sub_1001AC5F4(v5, 0LL);
      return;
    }

    if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_FAULT)) {
      sub_1003A3298();
    }
    uint64_t v6 = (os_log_s *)qword_1007FC190;
    if (os_log_type_enabled((os_log_t)qword_1007FC190, OS_LOG_TYPE_INFO))
    {
      int v7 = 136315650;
      uint64_t v8 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/Ranging/Monitors/PRLocationMonitor.mm";
      char v9 = 1024;
      uint64_t v10 = 451;
      uint64_t v11 = 2080;
      uint64_t v12 = "_releaseAssertion";
      goto LABEL_18;
    }

    goto LABEL_19;
  }

    if (std::chrono::steady_clock::now().__d_.__rep_ >= v5.__d_.__rep_)
    {
LABEL_20:
      uint64_t v11 = atomic_load((unsigned int *)(a1 + 1064));
      uint64_t v12 = v11 == 1;
      goto LABEL_22;
    }
  }

  uint64_t v12 = 1LL;
LABEL_22:
  uint64_t v13 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v14 = "No";
    if (v12) {
      uint64_t v14 = "Yes";
    }
    *(_DWORD *)pthread_attr_t buf = 136315138;
    uint64_t v18 = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,#time-convert waitForTimeConversionReadiness after. Is ready? %s",  buf,  0xCu);
  }

  if (v16.__owns_) {
    std::mutex::unlock(v16.__m_);
  }
  return v12;
}
}

  *uint64_t v12 = &v9[v17];
  return result;
}

      sub_100006080();
    }

    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
      sub_1003A7E44();
    }
  }

    uint64_t v17 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*(void *)(a1 + 368) - *(void *)(a1 + 360)) >> 4);
    __p = 0LL;
    int v47 = 0uLL;
    sub_1002D5BB8(&__p, v17);
    uint64_t v18 = *(void *)(a1 + 360);
    for (uint64_t i = *(void *)(a1 + 368); v18 != i; v18 += 176LL)
    {
      id v58 = 0x100000003LL;
      uint64_t v56 = &off_1007BC4C0;
      uint64_t v57 = xmmword_10042DB70;
      uint64_t v59 = v60;
      sub_1002CB44C((uint64_t)&v71, v18 + 40, (uint64_t)&v56);
      char v20 = sub_1002405E4((uint64_t)&v56, 0);
      uint64_t v21 = sub_1002405E4((uint64_t)&v56, 2u);
      if (*(_BYTE *)(a1 + 624) || sqrt(v21 * v21 + v20 * v20) <= 4.0)
      {
        uint64_t v22 = sub_1002405E4((uint64_t)&v56, 1u);
        id v23 = v22;
        uint64_t v24 = (char *)v47;
        if ((unint64_t)v47 >= *((void *)&v47 + 1))
        {
          uint64_t v26 = (char *)__p;
          uint64_t v27 = (uint64_t)(v47 - (void)__p) >> 3;
          uint64_t v28 = v27 + 1;
          uint64_t v29 = *((void *)&v47 + 1) - (void)__p;
          else {
            uint64_t v30 = v28;
          }
          if (v30)
          {
            uint64_t v31 = (char *)sub_1000472C0((uint64_t)&v47 + 8, v30);
            uint64_t v26 = (char *)__p;
            uint64_t v24 = (char *)v47;
          }

          else
          {
            uint64_t v31 = 0LL;
          }

          uint64_t v32 = &v31[8 * v27];
          *(double *)uint64_t v32 = v23;
          uint64_t v25 = v32 + 8;
          while (v24 != v26)
          {
            uint64_t v33 = *((void *)v24 - 1);
            v24 -= 8;
            *((void *)v32 - 1) = v33;
            v32 -= 8;
          }

          __p = v32;
          *(void *)&int v47 = v25;
          *((void *)&v47 + 1) = &v31[8 * v30];
          if (v26) {
            operator delete(v26);
          }
        }

        else
        {
          *(double *)int v47 = v22;
          uint64_t v25 = v24 + 8;
        }

        *(void *)&int v47 = v25;
      }
    }

    uint64_t v34 = __p;
    if (__p != (void *)v47)
    {
      LOBYTE(v40) = 0;
      uint64_t v35 = sub_10011B48C((double *)__p, (double *)v47);
      if (*v36 - *v35 >= 0.5)
      {
        *(_DWORD *)(a1 + 564) = 2;
        *(_BYTE *)(a1 + 568) = 1;
      }

      uint64_t v34 = __p;
    }

    if (v34)
    {
      *(void *)&int v47 = v34;
      operator delete(v34);
    }
  }

  void *v13 = &v9[v17];
  return result;
}

  *uint64_t v12 = &v9[v17];
  return result;
}

    uint64_t v19 = (int)v16;
    if ((_DWORD)v16 == 9)
    {
      char v20 = 0LL;
      uint64_t v21 = *(void *)(a1 + 9864);
      uint64_t v22 = *(void *)(a1 + 11160);
      id v23 = __src;
      do
      {
        uint64_t v24 = (char *)&v167 + v20;
        uint64_t v25 = v22 + v20;
        uint64_t v26 = *(_OWORD *)(v21 + 80);
        *((_OWORD *)v23 + 4) = *(_OWORD *)(v21 + 64);
        *((_OWORD *)v23 + 5) = v26;
        *((void *)v23 + 12) = *(void *)(v21 + 96);
        uint64_t v27 = *(_OWORD *)(v21 + 16);
        *(_OWORD *)id v23 = *(_OWORD *)v21;
        *((_OWORD *)v23 + 1) = v27;
        uint64_t v28 = *(_OWORD *)(v21 + 48);
        *((_OWORD *)v23 + 2) = *(_OWORD *)(v21 + 32);
        *((_OWORD *)v23 + 3) = v28;
        *(_OWORD *)uint64_t v24 = *(_OWORD *)(v22 + v20);
        v20 += 24LL;
        v21 += 104LL;
        v23 += 104;
        *((void *)v24 + 2) = *(void *)(v25 + 16);
      }

      while (v20 != 216);
    }

    else
    {
      if ((v16 - 1) > 7)
      {
        v157 = v4;
        int v47 = 0LL;
        id v48 = 0;
        memset(__dst, 0, 24);
        do
        {
          if ((unint64_t)v47 >= *(void *)&__dst[16])
          {
            uint64_t v49 = *(_DWORD **)__dst;
            NSErrorUserInfoKey v50 = ((uint64_t)v47 - *(void *)__dst) >> 2;
            uint64_t v51 = v50 + 1;
            NSErrorUserInfoKey v52 = *(void *)&__dst[16] - *(void *)__dst;
            else {
              uint64_t v53 = v51;
            }
            if (v53)
            {
              uint64_t v53 = (unint64_t)sub_100031724((uint64_t)&__dst[16], v53);
              uint64_t v55 = v54;
              int v47 = *(_DWORD **)&__dst[8];
              uint64_t v49 = *(_DWORD **)__dst;
            }

            else
            {
              uint64_t v55 = 0LL;
            }

            uint64_t v56 = (_DWORD *)(v53 + 4 * v50);
            *uint64_t v56 = v48;
            uint64_t v57 = v56 + 1;
            while (v47 != v49)
            {
              id v58 = *--v47;
              *--uint64_t v56 = v58;
            }

            *(void *)__dst = v56;
            *(void *)&__dst[8] = v57;
            *(void *)&__dst[16] = v53 + 4 * v55;
            if (v49) {
              operator delete(v49);
            }
            int v47 = v57;
          }

          else
          {
            *v47++ = v48;
          }

          *(void *)&__dst[8] = v47;
          ++v48;
        }

        while (v48 != (_DWORD)v16);
        LODWORD(__p) = 5;
        sub_1002DF9B4(*(unint64_t *)__dst, (uint64_t)v47, (uint64_t)&__p);
        uint64_t v59 = 0LL;
        id v60 = 0LL;
        memset(buf, 0, 24);
        do
        {
          uint64_t v61 = *(void *)__dst;
          if ((unint64_t)v59 >= *(void *)&buf[16])
          {
            uint64_t v62 = *(_DWORD **)buf;
            v63 = ((uint64_t)v59 - *(void *)buf) >> 2;
            id v64 = v63 + 1;
            v65 = *(void *)&buf[16] - *(void *)buf;
            else {
              id v66 = v64;
            }
            if (v66)
            {
              id v66 = (unint64_t)sub_100031724((uint64_t)&buf[16], v66);
              unsigned __int8 v68 = v67;
              uint64_t v59 = *(_DWORD **)&buf[8];
              uint64_t v62 = *(_DWORD **)buf;
            }

            else
            {
              unsigned __int8 v68 = 0LL;
            }

            char v69 = (_DWORD *)(v66 + 4 * v63);
            *char v69 = *(_DWORD *)(v61 + 4 * v60);
            v70 = v69 + 1;
            while (v59 != v62)
            {
              int v71 = *--v59;
              *--char v69 = v71;
            }

            *(void *)pthread_attr_t buf = v69;
            *(void *)&buf[8] = v70;
            *(void *)&buf[16] = v66 + 4 * v68;
            if (v62) {
              operator delete(v62);
            }
            uint64_t v59 = v70;
          }

          else
          {
            *v59++ = *(_DWORD *)(*(void *)__dst + 4 * v60);
          }

          *(void *)&buf[8] = v59;
          ++v60;
        }

        while (v60 != 9);
        std::__sort<std::__less<int,int> &,int *>(*(void *)buf);
        char v72 = 0LL;
        int v73 = *(char **)buf;
        id v74 = *(void *)(a1 + 9864);
        uint64_t v75 = &v167;
        unsigned __int16 v76 = __src;
        v77 = *(void *)(a1 + 11160);
        int v4 = v157;
        do
        {
          int v78 = *(_DWORD *)&v73[v72];
          uint64_t v79 = v74 + 104LL * v78;
          v80 = *(_OWORD *)(v79 + 80);
          *((_OWORD *)v76 + 4) = *(_OWORD *)(v79 + 64);
          *((_OWORD *)v76 + 5) = v80;
          *((void *)v76 + 12) = *(void *)(v79 + 96);
          v81 = *(_OWORD *)(v79 + 16);
          *(_OWORD *)unsigned __int16 v76 = *(_OWORD *)v79;
          *((_OWORD *)v76 + 1) = v81;
          id v82 = *(_OWORD *)(v79 + 48);
          *((_OWORD *)v76 + 2) = *(_OWORD *)(v79 + 32);
          *((_OWORD *)v76 + 3) = v82;
          v83 = v77 + 24LL * v78;
          *uint64_t v75 = *(_OWORD *)v83;
          *((void *)v75 + 2) = *(void *)(v83 + 16);
          v72 += 4LL;
          uint64_t v75 = (__int128 *)((char *)v75 + 24);
          v76 += 104;
        }

        while (v72 != 36);
        *(void *)&buf[8] = v73;
        operator delete(v73);
        v84 = *(void **)__dst;
        if (!*(void *)__dst) {
          goto LABEL_106;
        }
        *(void *)&__dst[8] = *(void *)__dst;
      }

      else
      {
        uint64_t v29 = 0LL;
        uint64_t v30 = 0;
        uint64_t v31 = 9 - v16;
        memset(buf, 0, 24);
        do
        {
          if ((unint64_t)v29 >= *(void *)&buf[16])
          {
            uint64_t v32 = *(_DWORD **)buf;
            uint64_t v33 = ((uint64_t)v29 - *(void *)buf) >> 2;
            uint64_t v34 = v33 + 1;
            uint64_t v35 = *(void *)&buf[16] - *(void *)buf;
            else {
              uint64_t v36 = v34;
            }
            if (v36)
            {
              uint64_t v36 = (unint64_t)sub_100031724((uint64_t)&buf[16], v36);
              uint64_t v38 = v37;
              uint64_t v29 = *(_DWORD **)&buf[8];
              uint64_t v32 = *(_DWORD **)buf;
            }

            else
            {
              uint64_t v38 = 0LL;
            }

            uint64_t v39 = (_DWORD *)(v36 + 4 * v33);
            *uint64_t v39 = v30;
            unint64_t v40 = v39 + 1;
            while (v29 != v32)
            {
              uint64_t v41 = *--v29;
              *--uint64_t v39 = v41;
            }

            *(void *)pthread_attr_t buf = v39;
            *(void *)&buf[8] = v40;
            *(void *)&buf[16] = v36 + 4 * v38;
            if (v32) {
              operator delete(v32);
            }
            uint64_t v29 = v40;
          }

          else
          {
            *v29++ = v30;
          }

          *(void *)&buf[8] = v29;
          ++v30;
        }

        while (v30 != (_DWORD)v16);
        LODWORD(__p) = 5;
        sub_1002DF9B4(*(unint64_t *)buf, (uint64_t)v29, (uint64_t)&__p);
        if (v31 <= (int)v16)
        {
          if ((int)v16 <= 8)
          {
            __int16 v85 = *(int **)buf;
            if (v31 <= 1) {
              uint64_t v86 = 1LL;
            }
            else {
              uint64_t v86 = v31;
            }
            id v87 = __dst;
            do
            {
              id v88 = *v85++;
              *(_DWORD *)id v87 = v88;
              v87 += 4;
              --v86;
            }

            while (v86);
          }

          v89 = *(int **)buf;
          v90 = v16;
          uint64_t v91 = 36 - 4LL * (int)v16;
          do
          {
            uint64_t v92 = *v89++;
            *(_DWORD *)&__dst[v91] = v92;
            v91 += 4LL;
            --v90;
          }

          while (v90);
        }

        else
        {
          LODWORD(v42) = 0;
          uint64_t v43 = *(void *)buf;
          do
          {
            id v44 = 0LL;
            id v45 = v42;
            id v42 = (int)v42;
            do
            {
              unsigned __int8 v46 = v42;
              *(_DWORD *)&__dst[4 * v42++] = *(_DWORD *)(v43 + 4 * v44++);
            }

            while (v46 <= 7 && v44 < (int)v16);
          }

          while (v45 + (int)v44 <= 8);
        }

        std::__sort<std::__less<int,int> &,int *>(__dst);
        v93 = 0LL;
        id v94 = *(void *)(a1 + 9864);
        id v95 = &v167;
        v96 = *(void *)(a1 + 11160);
        uint64_t v97 = __src;
        do
        {
          v98 = *(_DWORD *)&__dst[v93];
          id v99 = v94 + 104LL * v98;
          unsigned __int16 v100 = *(_OWORD *)(v99 + 80);
          *((_OWORD *)v97 + 4) = *(_OWORD *)(v99 + 64);
          *((_OWORD *)v97 + 5) = v100;
          *((void *)v97 + 12) = *(void *)(v99 + 96);
          v101 = *(_OWORD *)(v99 + 16);
          *(_OWORD *)uint64_t v97 = *(_OWORD *)v99;
          *((_OWORD *)v97 + 1) = v101;
          int v102 = *(_OWORD *)(v99 + 48);
          *((_OWORD *)v97 + 2) = *(_OWORD *)(v99 + 32);
          *((_OWORD *)v97 + 3) = v102;
          uint64_t v103 = v96 + 24LL * v98;
          os_log_s *v95 = *(_OWORD *)v103;
          *((void *)v95 + 2) = *(void *)(v103 + 16);
          v93 += 4LL;
          id v95 = (__int128 *)((char *)v95 + 24);
          v97 += 104;
        }

        while (v93 != 36);
        v84 = *(void **)buf;
        if (!*(void *)buf) {
          goto LABEL_106;
        }
        *(void *)&buf[8] = *(void *)buf;
      }

      operator delete(v84);
    }

  void *v13 = &v9[v17];
  return result;
}

  void *v13 = &v9[v17];
  return result;
}

  void *v13 = &v9[v17];
  return result;
}

  void *v13 = &v9[v17];
  return result;
}

        sub_100006080();
      }

      if (!*(_BYTE *)(a1 + 32)) {
        goto LABEL_19;
      }
      result = *(double *)(a1 + 8);
      uint64_t v12 = v17;
      *(double *)(a1 + 9824) = result;
      *(float32x4_t *)(a1 + 9840) = v12;
      *(_BYTE *)(v3 + 352) = 1;
    }
  }

  return result;
}

  void *v13 = &v9[v17];
  return result;
}

  *uint64_t v12 = &v9[v17];
  return result;
}

  ++result[3];
  return result;
}

  if (v40 && v39[0])
  {
    v39[1] = v39[0];
    operator delete(v39[0]);
  }

  return v13;
}

      uint64_t v8 = 1;
LABEL_20:
      *(void *)(a2 + 152) = v4;
      *(_BYTE *)(a2 + 160) = v5;
      *(void *)(a2 + 168) = 0LL;
      *(_BYTE *)(a2 + 176) = 0;
      *(void *)(a2 + 184) = 0LL;
      *(_BYTE *)(a2 + 192) = 0;
      if (!v8) {
        goto LABEL_44;
      }
      goto LABEL_43;
    }
  }

  char v20 = *(void *)(a1 + 216);
  uint64_t v21 = *(void *)(a1 + 224) - v20;
  if (!v21) {
    goto LABEL_42;
  }
  uint64_t v22 = 0LL;
  id v23 = 0LL;
  uint64_t v24 = 0LL;
  uint64_t v25 = v21 / 1480;
  uint64_t v26 = v25 <= 1 ? 1LL : v25;
  uint64_t v27 = (unint64_t *)(v20 + 1328);
  uint64_t v28 = -1;
  uint64_t v29 = -1;
  do
  {
    if (*((_BYTE *)v27 - 24) == 2)
    {
      if (*v27 > v23)
      {
        id v23 = *v27;
        uint64_t v28 = v22;
      }

      if (*v27 > v24)
      {
        id v23 = v24;
        uint64_t v24 = *v27;
        uint64_t v28 = v29;
        uint64_t v29 = v22;
      }
    }

    ++v22;
    v27 += 185;
  }

  while (v26 != v22);
  if (v29 == -1)
  {
LABEL_42:
    *(void *)(a2 + 152) = v4;
    *(_BYTE *)(a2 + 160) = v5;
    *(void *)(a2 + 168) = 0LL;
    *(_BYTE *)(a2 + 176) = 0;
    *(void *)(a2 + 184) = 0LL;
    *(_BYTE *)(a2 + 192) = 0;
    goto LABEL_43;
  }

  uint64_t v30 = v29;
  if (v28 != -1)
  {
    sub_100371ACC(v20 + 1480LL * v29, v20 + 1480LL * v28, buf);
    if (v59)
    {
      sub_100380CCC((uint64_t)v56 + 4, (uint64_t)v51);
      uint64_t v31 = *(void *)((char *)&v56[163] + 4);
      uint64_t v32 = *(_DWORD *)buf;
      uint64_t v33 = v51[0];
      uint64_t v34 = *(void *)&v53[1];
      uint64_t v35 = *(int8x16_t *)((char *)&v53[1] + 8);
      uint64_t v36 = v57 != -1;
      if (!*(_BYTE *)(a1 + 296)) {
        *(_BYTE *)(a1 + 296) = 1;
      }
      uint64_t v37 = v58;
      *(_DWORD *)(a1 + 240) = v32;
      uint64_t v38 = a1 + 240;
      *(void *)(v38 + 8) = v33;
      *(void *)(v38 + 16) = v34;
      *(int8x16_t *)(v38 + 24) = vextq_s8(v35, v35, 8uLL);
      *(void *)(v38 + 40) = v31;
      *(_BYTE *)(v38 + 48) = v36;
      sub_100373E40(a2, (uint64_t)v51);
      uint64_t v39 = *(unsigned __int8 *)(a2 + 200);
      *(void *)(a2 + 152) = v4;
      *(_BYTE *)(a2 + 160) = v5;
      *(void *)(a2 + 168) = v31;
      *(_BYTE *)(a2 + 176) = 1;
      *(void *)(a2 + 184) = v37;
      *(_BYTE *)(a2 + 192) = 1;
      if (v39) {
        goto LABEL_40;
      }
    }

    else
    {
      NSErrorUserInfoKey v50 = *(unsigned __int8 *)(a2 + 200);
      *(void *)(a2 + 152) = v4;
      *(_BYTE *)(a2 + 160) = v5;
      *(void *)(a2 + 168) = 0LL;
      *(_BYTE *)(a2 + 176) = 0;
      *(void *)(a2 + 184) = 0LL;
      *(_BYTE *)(a2 + 192) = 0;
      if (v50)
      {
LABEL_40:
        if (v59)
        {
          *(void *)((char *)&v56[121] + 4) = off_1007AED90;
          *(void *)((char *)&v56[110] + 4) = off_1007AED90;
          *(void *)((char *)&v56[68] + 4) = off_1007AED90;
        }

        goto LABEL_44;
      }
    }

    *(_BYTE *)(a2 + 200) = 1;
    goto LABEL_40;
  }

  sub_100380CCC(v20 + 1480LL * v29 + 8, (uint64_t)v51);
  unint64_t v40 = (int *)(v20 + 1480LL * v30);
  uint64_t v41 = *((void *)v40 + 164);
  id v42 = *((void *)v40 + 184);
  uint64_t v43 = *v40;
  id v44 = v51[0];
  id v45 = *(void *)&v53[1];
  unsigned __int8 v46 = *(int8x16_t *)((char *)&v53[1] + 8);
  int v47 = v40[334] != -1;
  if (!*(_BYTE *)(a1 + 296)) {
    *(_BYTE *)(a1 + 296) = 1;
  }
  *(_DWORD *)(a1 + 240) = v43;
  id v48 = a1 + 240;
  *(void *)(v48 + 8) = v44;
  *(void *)(v48 + 16) = v45;
  *(int8x16_t *)(v48 + 24) = vextq_s8(v46, v46, 8uLL);
  *(void *)(v48 + 40) = v41;
  *(_BYTE *)(v48 + 48) = v47;
  sub_100373E40(a2, (uint64_t)v51);
  uint64_t v49 = *(unsigned __int8 *)(a2 + 200);
  *(void *)(a2 + 152) = v4;
  *(_BYTE *)(a2 + 160) = v5;
  *(void *)(a2 + 168) = v41;
  *(_BYTE *)(a2 + 176) = 1;
  *(void *)(a2 + 184) = v42;
  *(_BYTE *)(a2 + 192) = 1;
  if (!v49) {
LABEL_43:
  }
    *(_BYTE *)(a2 + 200) = 1;
LABEL_44:
  sub_100034A98((uint64_t)&v52, *(void **)&v53[0]);
}

void sub_10001697C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, char *a24)
{
  uint64_t v26 = a24;
  if (a24 == &a21)
  {
    uint64_t v27 = 4LL;
    uint64_t v26 = &a21;
  }

  else
  {
    if (!a24) {
      goto LABEL_6;
    }
    uint64_t v27 = 5LL;
  }

  (*(void (**)(void))(*(void *)v26 + 8 * v27))();
LABEL_6:
  _Unwind_Resume(a1);
}

uint64_t sub_1000169C4(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    BOOL v2 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v4 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,cancelling wifi ranging runloop thread",  v4,  2u);
    }

    pthread_cancel(*(pthread_t *)(a1 + 8));
  }

  sub_10001EEA8(a1 + 424, *(void **)(a1 + 432));
  sub_10001D4B8(a1 + 240);
  sub_10001EE50(a1 + 216, *(char **)(a1 + 224));

  std::mutex::~mutex((std::mutex *)(a1 + 88));
  sub_100012390(a1 + 64);
  return a1;
}

void sub_100016A9C(uint64_t a1)
{
  char v2 = sub_100014420();
  int v3 = (os_log_s *)qword_1008000A0;
  if ((v2 & 1) != 0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wifi-service,creating awdl request", buf, 2u);
    }

    int v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
    BOOL v5 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,starting awdl in follow mode",  v8,  2u);
    }

    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 1LL));
    [v4 setValue:v6 forKey:@"APPLE80211KEY_AWDL_INFO_ASSISTED_DISCOVERY_FOLLOW"];

    int v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 1LL));
    [v4 setValue:v7 forKey:@"AWDL_INFO_PEER_PREFERRED_BAND"];

    sub_100016FE8(a1, v4);
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_100389B74();
    }
    sub_100016C24(a1, 0);
    sub_100016F0C(a1);
  }

void sub_100016C04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100016C24(uint64_t a1, int a2)
{
  char v2 = *(void **)(a1 + 216);
  uint64_t v18 = (void *)(a1 + 224);
  if (v2 == (void *)(a1 + 224)) {
    return;
  }
  do
  {
    uint64_t v19 = 0LL;
    char v20 = 0LL;
    uint64_t v21 = 0LL;
    sub_10001EF3C(&v19, v2[5], v2[6], 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v2[6] - v2[5]) >> 3));
    int v4 = v19;
    BOOL v5 = v20;
    while (v4 != v5)
    {
      sub_10003AD90((uint64_t)v4, (uint64_t)v26);
      if (!v27)
      {
        char v9 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        {
          id v10 = sub_10003AD44(v4);
          objc_claimAutoreleasedReturnValue(v10);
          sub_100389BA0();
        }

        goto LABEL_18;
      }

      id v6 = sub_10003AD64((uint64_t)v4);
      int v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v6);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768LL;
      block[2] = sub_1000193FC;
      block[3] = &unk_1007A23B8;
      uint64_t v8 = (uint64_t)v27;
      if (v27)
      {
        if (v27 == v26)
        {
          uint64_t v24 = v23;
          (*((void (**)(void ***, _BYTE *))v26[0] + 3))(v26, v23);
          goto LABEL_13;
        }

        uint64_t v8 = ((uint64_t (*)(void))(*v27)[2])();
      }

      uint64_t v24 = (_BYTE *)v8;
LABEL_13:
      int v25 = a2;
      dispatch_async(v7, block);

      uint64_t v11 = v24;
      if (v24 == v23)
      {
        uint64_t v11 = v23;
        uint64_t v12 = 4LL;
      }

      else
      {
        if (!v24) {
          goto LABEL_18;
        }
        uint64_t v12 = 5LL;
      }

      (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_18:
      uint64_t v13 = v27;
      if (v27 == v26)
      {
        uint64_t v13 = v26;
        uint64_t v14 = 4LL;
      }

      else
      {
        if (!v27) {
          goto LABEL_23;
        }
        uint64_t v14 = 5LL;
      }

      ((void (*)(void))(*v13)[v14])();
LABEL_23:
      v4 += 21;
    }

    v26[0] = (void **)&v19;
    sub_10001F250(v26);
    id v15 = (void *)v2[1];
    if (v15)
    {
      do
      {
        BOOL v16 = v15;
        id v15 = (void *)*v15;
      }

      while (v15);
    }

    else
    {
      do
      {
        BOOL v16 = (void *)v2[2];
        BOOL v17 = *v16 == (void)v2;
        char v2 = v16;
      }

      while (!v17);
    }

    char v2 = v16;
  }

  while (v16 != v18);
}

void sub_100016E98( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, void **a27, uint64_t a28, uint64_t a29, void ***a30)
{
  uint64_t v32 = a30;
  if (a30 == &a27)
  {
    uint64_t v33 = 4LL;
    uint64_t v32 = &a27;
  }

  else
  {
    if (!a30) {
      goto LABEL_6;
    }
    uint64_t v33 = 5LL;
  }

  ((void (*)(void))(*v32)[v33])();
LABEL_6:
  a27 = (void **)&a12;
  sub_10001F250(&a27);
  _Unwind_Resume(a1);
}

void sub_100016F0C(uint64_t a1)
{
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_100389BDC();
  }
  sub_10001EE50(a1 + 216, *(char **)(a1 + 224));
  *(void *)(a1 + 216) = a1 + 224;
  *(void *)(a1 + 224) = 0LL;
  *(void *)(a1 + 2sub_100012358(v1 - 32) = 0LL;
  *(_DWORD *)(a1 + 448) = 0;
  *(_DWORD *)(a1 + 456) = 0;
  *(_WORD *)(a1 + 50) = 0;
  *(_BYTE *)(a1 + 52) = 0;
  if (*(_BYTE *)(a1 + 184)) {
    *(_BYTE *)(a1 + 184) = 0;
  }
  *(_WORD *)(a1 + 54) = 0;
  if (*(void *)(a1 + 40))
  {
    if (sub_10001769C(a1))
    {
      uint64_t v2 = sub_10001769C(a1);
      WiFiDeviceClientStopNetwork(v2, *(void *)(a1 + 40), sub_10001D93C, a1);
    }

    int v3 = *(const void **)(a1 + 40);
    if (v3)
    {
      CFRelease(v3);
      *(void *)(a1 + 40) = 0LL;
    }
  }

  int v4 = *(const void **)(a1 + 32);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a1 + sub_100012358(v1 - 32) = 0LL;
  }

  BOOL v5 = *(const void **)(a1 + 24);
  if (v5)
  {
    CFRelease(v5);
    *(void *)(a1 + 24) = 0LL;
  }

void sub_100016FE8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (sub_10001769C(a1))
  {
    if ((sub_100019BF0(a1, 0LL) & 1) != 0)
    {
      if (*(_BYTE *)(a1 + 53))
      {
        double v4 = sub_100023CB0();
        if (!*(_BYTE *)(a1 + 168)) {
          __assert_rtn( "startNetwork",  "PRWiFiRangingService_MW.mm",  1211,  "fStartNetworkCallbackWaitStartTime.has_value()");
        }
        if (v4 - *(double *)(a1 + 160) <= 5.0)
        {
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
            sub_100389D44();
          }
          goto LABEL_37;
        }

        *(_BYTE *)(a1 + 52) = 0;
        if (*(_BYTE *)(a1 + 184)) {
          *(_BYTE *)(a1 + 184) = 0;
        }
      }

      BOOL v5 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#wifi-service,starting network", v12, 2u);
      }

      uint64_t v6 = sub_10001769C(a1);
      int started = WiFiDeviceClientStartNetwork(v6, 4LL, v3, sub_10001D9DC, a1);
      *(_DWORD *)(a1 + 456) = 1;
      *(_BYTE *)(a1 + 53) = 1;
      *(double *)(a1 + 160) = sub_100023CB0();
      *(_BYTE *)(a1 + 168) = 1;
      if (!started)
      {
        double v11 = 0.0;
        goto LABEL_36;
      }

      *(_DWORD *)(a1 + 456) = 0;
      *(_BYTE *)(a1 + 53) = 0;
      *(_BYTE *)(a1 + 168) = 0;
      if (started <= 36)
      {
        if (started != -3930)
        {
          if (started == 1)
          {
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
              sub_100389CC0();
            }
            int v8 = -1;
            goto LABEL_32;
          }

          goto LABEL_29;
        }

        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_100389C94();
        }
        double v11 = 1.0;
LABEL_36:
        sub_1000147F0(a1, v11);
        goto LABEL_37;
      }

      if (started != 37)
      {
        if (started == 82)
        {
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
            sub_100389D18();
          }
          goto LABEL_31;
        }

LABEL_29:
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_100389C34();
        }
LABEL_31:
        int v8 = 1;
LABEL_32:
        sub_100016C24(a1, v8);
        sub_100016F0C(a1);
        goto LABEL_37;
      }

      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_100389CEC();
      }
    }

    else
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_100389D70();
      }
      dispatch_time_t v9 = dispatch_time(0LL, 1000000000LL);
      id v10 = *(dispatch_queue_s **)(a1 + 80);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100019E94;
      block[3] = &unk_1007A2398;
      void block[4] = a1;
      dispatch_after(v9, v10, block);
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_100389C08();
  }

  uint64_t v13 = *(void *)(v5 + 72);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1008001D0 + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  v13,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(_DWORD *)(v5 + 52),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

  char v20 = *(const std::string **)(a2 + 32);
  *(_DWORD *)(a1 + 100) |= 8u;
  uint64_t v21 = *(std::string **)(a1 + 32);
  if (v21 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    uint64_t v21 = (std::string *)operator new(0x18uLL);
    v21->__r_.__value_.__l.__size_ = 0LL;
    v21->__r_.__value_.__l.__cap_ = 0LL;
    v21->__r_.__value_.__r.__words[0] = 0LL;
    *(void *)(a1 + sub_100012358(v1 - 32) = v21;
  }

  std::string::operator=(v21, v20);
  uint64_t v13 = *(_DWORD *)(a2 + 100);
  if ((v13 & 0x10) == 0)
  {
LABEL_20:
    if ((v13 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_37;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 72),  a2,  a4);
  if ((*(_DWORD *)(v5 + 132) & 0x20) != 0) {
LABEL_7:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 40),  a3);
LABEL_8:
  if (*(int *)(v5 + 56) >= 1)
  {
    int v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(void *)(*(void *)(v5 + 48) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 56));
  }

  if (*(int *)(v5 + 88) >= 1)
  {
    int v8 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(void *)(*(void *)(v5 + 80) + 8 * v8++),  a2,  a4);
    while (v8 < *(int *)(v5 + 88));
  }

  if (*(int *)(v5 + 112) >= 1)
  {
    dispatch_time_t v9 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(void *)(*(void *)(v5 + 104) + 8 * v9++),  a2,  a4);
    while (v9 < *(int *)(v5 + 112));
  }

  if ((*(_BYTE *)(v5 + 133) & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(_DWORD *)(v5 + 76),  a2,  a4);
  }
  uint64_t v12 = *(void **)(v5 + 8);
  double v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  id v10 = v12;
  if (v12)
  {
    if (*v10 != v10[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 24),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }

  uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v13 >= 0x80)
  {
    uint64_t v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    id v3 = a1[26];
  }

  else
  {
    uint64_t v14 = 1;
  }

  LODWORD(v4) = v4 + v14 + 2;
  if ((v3 & 0x20) != 0)
  {
LABEL_33:
    id v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if ((v15 & 0x80000000) != 0)
    {
      BOOL v16 = 10;
    }

    else if (v15 >= 0x80)
    {
      BOOL v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
      id v3 = a1[26];
    }

    else
    {
      BOOL v16 = 1;
    }

    LODWORD(v4) = v4 + v16 + 1;
  }

  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
  if (v12 >= 0x80)
  {
    uint64_t v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    id v3 = *(_DWORD *)(a1 + 88);
  }

  else
  {
    uint64_t v13 = 2;
  }

  v5 += v13;
  if ((v3 & 0x80) != 0)
  {
LABEL_33:
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
    if ((v14 & 0x80000000) != 0)
    {
      id v15 = 11;
    }

    else if (v14 >= 0x80)
    {
      id v3 = *(_DWORD *)(a1 + 88);
    }

    else
    {
      id v15 = 2;
    }

    v5 += v15;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 40),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }

    char v20 = *(const std::string **)(a2 + 48);
    *(_DWORD *)(a1 + 124) |= 0x10u;
    uint64_t v21 = *(std::string **)(a1 + 48);
    if (v21 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      uint64_t v21 = (std::string *)operator new(0x18uLL);
      v21->__r_.__value_.__l.__size_ = 0LL;
      v21->__r_.__value_.__l.__cap_ = 0LL;
      v21->__r_.__value_.__r.__words[0] = 0LL;
      *(void *)(a1 + 48) = v21;
    }

    std::string::operator=(v21, v20);
    uint64_t v13 = *(_DWORD *)(a2 + 124);
    if ((v13 & 0x20) == 0)
    {
LABEL_18:
      if ((v13 & 0x40) == 0) {
        goto LABEL_19;
      }
      goto LABEL_33;
    }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 40),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_34;
  }

  BOOL v17 = *((void *)this + 7);
  if (!v17) {
    BOOL v17 = *(void *)(qword_1008003E8 + 56);
  }
  *(_BYTE *)id v3 = 50;
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v17 + 40);
  if (v18 > 0x7F)
  {
    uint64_t v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v18,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v18;
    uint64_t v19 = (uint64_t)v3 + 2;
  }

  id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000B8BD0(v17, v19, a3);
  if ((*((_DWORD *)this + 19) & 0x40) != 0)
  {
LABEL_35:
    char v20 = *((void *)this + 8);
    if (!v20) {
      char v20 = *(void *)(qword_1008003E8 + 64);
    }
    *(_BYTE *)id v3 = 58;
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v20 + 40);
    if (v21 > 0x7F)
    {
      uint64_t v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v21,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v21;
      uint64_t v22 = (uint64_t)v3 + 2;
    }

    id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000B93A4(v20, v22, a3);
  }

  *(_DWORD *)(a1 + 100) |= 4u;
  uint64_t v26 = *(void **)(a1 + 24);
  if (!v26)
  {
    uint64_t v26 = operator new(0x30uLL);
    sub_1000C8850((uint64_t)v26);
    *(void *)(a1 + 24) = v26;
  }

  uint64_t v27 = *(void *)(a2 + 24);
  if (!v27) {
    uint64_t v27 = *(void *)(qword_100800440 + 24);
  }
  sub_1000C1A3C((uint64_t)v26, v27);
  uint64_t v21 = *(_DWORD *)(a2 + 100);
  if ((v21 & 8) != 0) {
    goto LABEL_34;
  }
LABEL_24:
  if ((v21 & 0x10) != 0)
  {
LABEL_25:
    uint64_t v22 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 100) |= 0x10u;
    *(void *)(a1 + 40) = v22;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  if ((*((_BYTE *)this + 68) & 8) != 0)
  {
    char v20 = *((void *)this + 4);
    if (!v20) {
      char v20 = *(void *)(qword_100800470 + 32);
    }
    *(_BYTE *)a2 = 34;
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v20 + 40);
    if (v21 > 0x7F)
    {
      uint64_t v22 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v21,  (int)a2 + 1,  a3);
    }

    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v21;
      uint64_t v22 = (char *)a2 + 2;
    }

    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000C8BAC(v20, (uint64_t)v22, a3);
  }

  if (*((int *)this + 12) >= 1)
  {
    id v23 = 0LL;
    do
    {
      uint64_t v24 = *(unsigned int **)(*((void *)this + 5) + 8 * v23);
      *(_BYTE *)a2 = 42;
      int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24[7];
      if (v25 > 0x7F)
      {
        uint64_t v26 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v25,  (int)a2 + 1,  a3);
      }

      else
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v25;
        uint64_t v26 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }

      a2 = sub_1000C4E0C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v24, v26, a3);
      ++v23;
    }

    while (v23 < *((int *)this + 12));
  }

  uint64_t v29 = (void *)*((void *)this + 1);
  uint64_t v28 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v27 = v29;
  if (!v29 || *v27 == v27[1]) {
    return a2;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v28,  a2,  a3);
  }
}

  uint64_t v18 = *((_BYTE *)this + 52);
  *(_BYTE *)double v4 = 48;
  *((_BYTE *)v4 + 1) = v18;
  double v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  if ((*((_DWORD *)this + 17) & 0x40) != 0) {
    goto LABEL_30;
  }
LABEL_43:
  uint64_t v27 = (void *)*((void *)this + 1);
  uint64_t v26 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v25 = v27;
  if (!v27 || *v25 == v25[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v26,  v4,  a3);
  }
}

  uint64_t v14 = *(void *)(v5 + 72);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_100800558 + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  v14,  a2,  a4);
  int v7 = *(_DWORD *)(v5 + 120);
  if ((v7 & 0x40) == 0)
  {
LABEL_11:
    if ((v7 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  (int)a2,  *(float *)(v5 + 48),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }

  char v20 = *((_DWORD *)this + 8);
  *(_BYTE *)id v3 = 53;
  *(_DWORD *)((char *)v3 + 1) = v20;
  id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  BOOL v5 = *((_DWORD *)this + 21);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(_DWORD *)(v5 + 40),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }

  BOOL v17 = *((_DWORD *)this + 18);
  if ((v17 & 0x200) != 0)
  {
    uint64_t v18 = *((_DWORD *)this + 11);
    *(_BYTE *)id v3 = 85;
    *(_DWORD *)((char *)v3 + 1) = v18;
    id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    BOOL v17 = *((_DWORD *)this + 18);
  }

  if ((v17 & 0x400) != 0)
  {
    uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(_BYTE *)id v3 = 88;
    if (v19 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v19,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v19;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 73) & 8) != 0)
  {
    char v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(_BYTE *)id v3 = 96;
    if (v20 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v20,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v20;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 73) & 0x10) != 0)
  {
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(_BYTE *)id v3 = 104;
    if (v21 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v21,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v21;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 73) & 0x20) != 0)
  {
    uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    *(_BYTE *)id v3 = 112;
    if (v22 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v22,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v22;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 73) & 0x40) != 0)
  {
    id v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(_BYTE *)id v3 = 120;
    if (v23 > 0x7F)
    {
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v23,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v23;
      id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  uint64_t v26 = (void *)*((void *)this + 1);
  int v25 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v24 = v26;
  if (!v26 || *v24 == v24[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v25,  v3,  a3);
  }
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 48),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }

  BOOL v17 = *((void *)this + 6);
  *a2 = 49;
  *(void *)(a2 + 1) = v17;
  a2 += 9;
  int v8 = *((_DWORD *)this + 16);
  if ((v8 & 0x40) != 0) {
    goto LABEL_30;
  }
LABEL_20:
  if ((v8 & 0x80) != 0)
  {
LABEL_21:
    dispatch_time_t v9 = *((_BYTE *)this + 57);
    *a2 = 64;
    a2[1] = v9;
    a2 += 2;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  (int)a2,  *(double *)(v5 + 80),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }

  uint64_t v12 = *(void *)(v5 + 64);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_100800658 + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  v12,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(float *)(v5 + 36),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }

  uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 7);
  *(_BYTE *)a2 = 72;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, a2 + 1, a3);
  double v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x200) == 0)
  {
LABEL_11:
    if ((v4 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  (int)a2,  *(double *)(v5 + 80),  a3);
  int v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x100) == 0)
  {
LABEL_14:
    if ((v8 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 40),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_31;
  }

    *a3 = v17;
    return v5;
  }

  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = (uint64_t)a2;
    return a4;
  }

  double v11 = a2[1];
  if (v11)
  {
    uint64_t v12 = (uint64_t *)a2[1];
    do
    {
      a4 = v12;
      uint64_t v12 = (uint64_t *)*v12;
    }

    while (v12);
  }

  else
  {
    uint64_t v19 = a2;
    do
    {
      a4 = (uint64_t *)v19[2];
      uint64_t v14 = *a4 == (void)v19;
      uint64_t v19 = a4;
    }

    while (!v14);
  }

  if (a4 != v5 && v6 >= *((unsigned __int16 *)a4 + 13))
  {
    char v20 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          uint64_t v21 = (uint64_t *)v20;
          uint64_t v22 = *(unsigned __int16 *)(v20 + 26);
          if (v6 >= v22) {
            break;
          }
          char v20 = *v21;
          BOOL v5 = v21;
          if (!*v21) {
            goto LABEL_48;
          }
        }

        if (v22 >= v6) {
          break;
        }
        BOOL v5 = v21 + 1;
        char v20 = v21[1];
      }

      while (v20);
    }

    else
    {
      uint64_t v21 = a1 + 1;
    }

    *a3 = v17;
    return v5;
  }

  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = (uint64_t)a2;
    return a4;
  }

  double v11 = a2[1];
  if (v11)
  {
    uint64_t v12 = (uint64_t *)a2[1];
    do
    {
      a4 = v12;
      uint64_t v12 = (uint64_t *)*v12;
    }

    while (v12);
  }

  else
  {
    uint64_t v19 = a2;
    do
    {
      a4 = (uint64_t *)v19[2];
      uint64_t v14 = *a4 == (void)v19;
      uint64_t v19 = a4;
    }

    while (!v14);
  }

  if (a4 != v5 && v6 >= *((_DWORD *)a4 + 7))
  {
    char v20 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          uint64_t v21 = (uint64_t *)v20;
          uint64_t v22 = *(_DWORD *)(v20 + 28);
          if (v6 >= v22) {
            break;
          }
          char v20 = *v21;
          BOOL v5 = v21;
          if (!*v21) {
            goto LABEL_48;
          }
        }

        if (v22 >= v6) {
          break;
        }
        BOOL v5 = v21 + 1;
        char v20 = v21[1];
      }

      while (v20);
    }

    else
    {
      uint64_t v21 = a1 + 1;
    }

  return v13;
}

    if (v9 <= (double)std::chrono::steady_clock::now().__d_.__rep_)
    {
LABEL_30:
      if (!*(_BYTE *)(a1 + 2900))
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
          sub_10039395C();
        }
        goto LABEL_58;
      }

      break;
    }
  }

  BOOL v16 = *(_OWORD *)(a1 + 2856);
  *(_OWORD *)&__src[64] = *(_OWORD *)(a1 + 2840);
  *(_OWORD *)&__src[80] = v16;
  *(_OWORD *)&__src[96] = *(_OWORD *)(a1 + 2872);
  *(_OWORD *)&__src[108] = *(_OWORD *)(a1 + 2884);
  BOOL v17 = *(_OWORD *)(a1 + 2792);
  *(_OWORD *)__src = *(_OWORD *)(a1 + 2776);
  *(_OWORD *)&__src[16] = v17;
  uint64_t v18 = *(_OWORD *)(a1 + 2824);
  *(_OWORD *)&__src[32] = *(_OWORD *)(a1 + 2808);
  *(_OWORD *)&__src[48] = v18;
  *(_BYTE *)(a1 + 2900) = 0;
  uint64_t v19 = (double)std::chrono::steady_clock::now().__d_.__rep_ + 2000000000.0;
  char v20 = -9.22337204e18;
  if (v19 > -9.22337204e18) {
    char v20 = v19;
  }
  if (v19 < 9.22337204e18) {
    uint64_t v21 = (uint64_t)v20;
  }
  else {
    uint64_t v21 = 0x7FFFFFFFFFFFFFFFLL;
  }
  while (2)
  {
    if (*(_BYTE *)(a1 + 3050)) {
      goto LABEL_53;
    }
    v22.__d_.__rep_ = v21 - std::chrono::steady_clock::now().__d_.__rep_;
    if (v22.__d_.__rep_ >= 1)
    {
      std::chrono::steady_clock::now();
      v23.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
      if (!v23.__d_.__rep_)
      {
        uint64_t v24 = 0LL;
        goto LABEL_47;
      }

      if (v23.__d_.__rep_ < 1)
      {
        uint64_t v24 = 0x8000000000000000LL;
      }

      else
      {
        if ((unint64_t)v23.__d_.__rep_ > 0x20C49BA5E353F7LL)
        {
          uint64_t v24 = 0x7FFFFFFFFFFFFFFFLL;
          goto LABEL_47;
        }

  uint64_t v21 = retstr;
  uint64_t v22 = [v6 BOOLForKey:@"NIHomePreferAlternativeAntenna"];
  id v23 = v22;
  if (v22)
  {
    uint64_t v24 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "#ses-home,Using alternative antenna for NI Home ranging",  buf,  2u);
    }
  }

  int v25 = [v6 BOOLForKey:@"NIHomeDisableDeviceSpecificSTS"];
  NSErrorUserInfoKey v52 = 0;
  uint64_t v53 = 0;
  NSErrorUserInfoKey v54 = 68354305;
  uint64_t v55 = 0;
  uint64_t v56 = 0;
  uint64_t v57 = 0;
  id v58 = 0;
  uint64_t v59 = 3;
  id v60 = v8;
  uint64_t v61 = 3;
  if ((v25 & 1) != 0)
  {
    uint64_t v62 = 0uLL;
  }

  else
  {
    if (v49 == 999)
    {
      *(void *)&uint64_t v26 = -1LL;
      *((void *)&v26 + 1) = -1LL;
    }

    else
    {
      uint64_t v26 = 0uLL;
      if (v49 == 2) {
        uint64_t v26 = xmmword_100427840;
      }
    }

    uint64_t v62 = v26;
  }

  v63 = 0;
  id v64 = 6;
  v65 = v10;
  id v66 = v23 ^ 1;
  unsigned __int8 v67 = v16 | (v17 << 8);
  unsigned __int8 v68 = 0;
  char v69 = 1;
  v70 = 7;
  uint64_t v27 = sub_100288340();
  uint64_t v28 = *((void *)v27 + 406);
  uint64_t v29 = (std::__shared_weak_count *)*((void *)v27 + 407);
  if (v29)
  {
    p_shared_owners = (unint64_t *)&v29->__shared_owners_;
    do
      uint64_t v31 = __ldxr(p_shared_owners);
    while (__stxr(v31 + 1, p_shared_owners));
  }

  if (!v28)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10039822C();
    }
    v21->var0.__null_state_ = 0;
    v21->var0.__val_.range_enable_params.nbamms.mms_pkt_type.__engaged_ = 0;
    if (!v29) {
      goto LABEL_80;
    }
LABEL_76:
    id v45 = (unint64_t *)&v29->__shared_owners_;
    do
      unsigned __int8 v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }

    goto LABEL_80;
  }

  uint64_t v32 = v21;
  if (sub_100266E04(v28, (char *)&v52, (unsigned __int8 *)&v52 + 1, 0))
  {
    if (v12) {
      sub_100140AE8((char *)&v52, (uint64_t)buf);
    }
    else {
      sub_100140FFC((char *)&v52, (uint64_t)buf);
    }
    uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue(-[NIHomeDeviceConfiguration sessionKey](self->_configuration, "sessionKey"));
    uint64_t v34 = v33 == 0LL;

    if (v34)
    {
      uint64_t v38 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)NSErrorUserInfoKey v50 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "#ses-home,No session key provided. Use default cipher blob.",  v50,  2u);
      }
    }

    else
    {
      uint64_t v35 = *((_DWORD *)sub_100005150() + 187);
      if (v35)
      {
        if (v35 == 2)
        {
          uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue(-[NIHomeDeviceConfiguration sessionKey](self->_configuration, "sessionKey"));
          unint64_t v40 = [v39 length] == (id)16;

          if (v40)
          {
LABEL_65:
            memset(v50, 0, sizeof(v50));
            uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue(-[NIHomeDeviceConfiguration sessionKey](self->_configuration, "sessionKey"));
            [v41 getBytes:v50 length:16];

            *(_OWORD *)&buf[218] = *(_OWORD *)v50;
            if (!buf[234]) {
              buf[234] = 1;
            }
            goto LABEL_75;
          }

          id v42 = (os_log_s *)(id)qword_1008000A0;
          if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
          {
            uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(-[NIHomeDeviceConfiguration sessionKey](self->_configuration, "sessionKey"));
            sub_100398258(v43, (uint64_t)v50);
          }
        }

        else
        {
          if (v35 != 1) {
            goto LABEL_75;
          }
          uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(-[NIHomeDeviceConfiguration sessionKey](self->_configuration, "sessionKey"));
          uint64_t v37 = [v36 length] == (id)16;

          if (v37) {
            goto LABEL_65;
          }
          id v42 = (os_log_s *)(id)qword_1008000A0;
          if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
          {
            id v44 = (void *)objc_claimAutoreleasedReturnValue(-[NIHomeDeviceConfiguration sessionKey](self->_configuration, "sessionKey"));
            sub_100398258(v44, (uint64_t)v50);
          }
        }

        goto LABEL_75;
      }

      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_10039829C();
      }
    }

    *a3 = v17;
    return v5;
  }

  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = (uint64_t)a2;
    return a4;
  }

  double v11 = a2[1];
  if (v11)
  {
    uint64_t v12 = (uint64_t *)a2[1];
    do
    {
      a4 = v12;
      uint64_t v12 = (uint64_t *)*v12;
    }

    while (v12);
  }

  else
  {
    uint64_t v19 = a2;
    do
    {
      a4 = (uint64_t *)v19[2];
      uint64_t v14 = *a4 == (void)v19;
      uint64_t v19 = a4;
    }

    while (!v14);
  }

  if (a4 != v5 && v6 >= *((_DWORD *)a4 + 8))
  {
    char v20 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          uint64_t v21 = (uint64_t *)v20;
          uint64_t v22 = *(_DWORD *)(v20 + 32);
          if (v6 >= v22) {
            break;
          }
          char v20 = *v21;
          BOOL v5 = v21;
          if (!*v21) {
            goto LABEL_48;
          }
        }

        if (v22 >= v6) {
          break;
        }
        BOOL v5 = v21 + 1;
        char v20 = v21[1];
      }

      while (v20);
    }

    else
    {
      uint64_t v21 = a1 + 1;
    }

    *a3 = v17;
    return v5;
  }

  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = (uint64_t)a2;
    return a4;
  }

  double v11 = a2[1];
  if (v11)
  {
    uint64_t v12 = (uint64_t *)a2[1];
    do
    {
      a4 = v12;
      uint64_t v12 = (uint64_t *)*v12;
    }

    while (v12);
  }

  else
  {
    uint64_t v19 = a2;
    do
    {
      a4 = (uint64_t *)v19[2];
      uint64_t v14 = *a4 == (void)v19;
      uint64_t v19 = a4;
    }

    while (!v14);
  }

  if (a4 != v5 && v6 >= *((_DWORD *)a4 + 8))
  {
    char v20 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          uint64_t v21 = (uint64_t *)v20;
          uint64_t v22 = *(_DWORD *)(v20 + 32);
          if (v6 >= v22) {
            break;
          }
          char v20 = *v21;
          BOOL v5 = v21;
          if (!*v21) {
            goto LABEL_48;
          }
        }

        if (v22 >= v6) {
          break;
        }
        BOOL v5 = v21 + 1;
        char v20 = v21[1];
      }

      while (v20);
    }

    else
    {
      uint64_t v21 = a1 + 1;
    }

          uint64_t v32 = v42;
          if ((v10 & 1) == 0) {
            __assert_rtn("getPreferredChannels", "PRConfigurationManager.mm", 183, "leastPreferredChannelAllowed");
          }
          os_log_s *v17 = v19;
          goto LABEL_31;
        }

        uint64_t v37 = sub_10032BC40(9, 1);
        uint64_t v38 = (os_log_s *)qword_1008000A0;
        if (v30 != v37)
        {
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
            sub_1003A2C3C(v30, v38);
          }
          uint64_t v41 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)pthread_attr_t buf = 136315650;
            *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/DaemonCore/PRConfigurationManager.mm";
            NSErrorUserInfoKey v54 = 1024;
            uint64_t v55 = 167;
            uint64_t v56 = 2080;
            uint64_t v57 = "getPreferredChannels";
            _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_INFO,  "%s:%d: assertion failure in %s",  buf,  0x1Cu);
          }

          abort();
        }

        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)pthread_attr_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "[PRConfigurationManager] Ch 9 set as preferred in default write. This is already the preference. Do nothing.",  buf,  2u);
        }

        uint64_t v19 = 5;
        if ((v10 & 1) == 0)
        {
          LOBYTE(v10) = v9;
          BOOL v17 = v44;
          goto LABEL_29;
        }

        char v20 = 9;
        LOBYTE(v10) = v9;
        BOOL v17 = v44;
LABEL_26:
        os_log_s *v17 = v20;
        uint64_t v32 = v42;
        if ((v10 & 1) != 0)
        {
          *(_WORD *)id v42 = v19 | 0x100;
LABEL_33:
          uint64_t v33 = (os_log_s *)(id)qword_1008000A0;
          if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v34 = buf;
            sub_10032BA04(*v17, buf);
            if (SBYTE3(v57) < 0) {
              uint64_t v34 = *(_BYTE **)buf;
            }
            if (v32[1])
            {
              sub_10032BA04(*v32, __p);
              if (v46 >= 0) {
                uint64_t v35 = __p;
              }
              else {
                uint64_t v35 = (void **)__p[0];
              }
              *(_DWORD *)uint64_t v49 = 136315394;
              NSErrorUserInfoKey v50 = v34;
              uint64_t v51 = 2080;
              NSErrorUserInfoKey v52 = (const char *)v35;
              _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "[PRConfigurationManager] Primary channel %s. Alternate channel %s",  v49,  0x16u);
              if (v46 < 0) {
                operator delete(__p[0]);
              }
            }

            else
            {
              *(_DWORD *)uint64_t v49 = 136315394;
              NSErrorUserInfoKey v50 = v34;
              uint64_t v51 = 2080;
              NSErrorUserInfoKey v52 = "None";
              _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "[PRConfigurationManager] Primary channel %s. Alternate channel %s",  v49,  0x16u);
            }

            if (SBYTE3(v57) < 0) {
              operator delete(*(void **)buf);
            }
          }

          goto LABEL_46;
        }

      -[CBAdvertiser setNearbyActionNWPrecisionFindingStatus:]( self->_nearbyActionNoWakeAdvertiser,  "setNearbyActionNWPrecisionFindingStatus:",  0LL);
      uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v7 payload]);
      -[CBAdvertiser setNearbyActionNoWakeConfigData:]( self->_nearbyActionNoWakeAdvertiser,  "setNearbyActionNoWakeConfigData:",  v28);

      -[CBAdvertiser setNearbyActionNWPrecisionFindingStatus:]( self->_nearbyActionNoWakeAdvertiser,  "setNearbyActionNWPrecisionFindingStatus:",  -[CBAdvertiser nearbyActionNWPrecisionFindingStatus]( self->_nearbyActionNoWakeAdvertiser,  "nearbyActionNWPrecisionFindingStatus") | [v7 statusFlags]);
      goto LABEL_30;
    }

    int v25 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(location[0]) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "#find-disc,NearbyActionNoWake: advertiser still activating",  (uint8_t *)location,  2u);
    }
  }

  else
  {
    char v20 = objc_opt_new(&OBJC_CLASS___CBAdvertiser);
    uint64_t v21 = self->_nearbyActionNoWakeAdvertiser;
    self->_nearbyActionNoWakeAdvertiser = v20;

    -[CBAdvertiser setDispatchQueue:](self->_nearbyActionNoWakeAdvertiser, "setDispatchQueue:", self->_selfQueue);
    -[CBAdvertiser setLabel:](self->_nearbyActionNoWakeAdvertiser, "setLabel:", @"nearbydFinding");
    -[CBAdvertiser setAdvertiseRate:](self->_nearbyActionNoWakeAdvertiser, "setAdvertiseRate:", 50LL);
    -[CBAdvertiser setEnableEPAForLEAdvertisement:]( self->_nearbyActionNoWakeAdvertiser,  "setEnableEPAForLEAdvertisement:",  1LL);
    -[CBAdvertiser setUseCase:](self->_nearbyActionNoWakeAdvertiser, "setUseCase:", 458752LL);
    objc_initWeak(location, self);
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472LL;
    v38[2] = sub_100299B54;
    v38[3] = &unk_1007A1CA0;
    objc_copyWeak(&v39, location);
    -[CBAdvertiser setAdvertisingAddressChangedHandler:]( self->_nearbyActionNoWakeAdvertiser,  "setAdvertisingAddressChangedHandler:",  v38);
    self->_activatedNearbyActionNoWake = 0;
    uint64_t v22 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "#find-disc,NearbyActionNoWake: activating advertiser",  buf,  2u);
    }

    id v23 = sub_100023CC4();
    uint64_t v24 = self->_nearbyActionNoWakeAdvertiser;
    v35[0] = _NSConcreteStackBlock;
    v35[1] = 3221225472LL;
    v35[2] = sub_100299B9C;
    v35[3] = &unk_1007A1D58;
    v36[1] = *(id *)&v23;
    objc_copyWeak(v36, location);
    v35[4] = self;
    -[CBAdvertiser activateWithCompletion:](v24, "activateWithCompletion:", v35);
    objc_destroyWeak(v36);
    objc_destroyWeak(&v39);
    objc_destroyWeak(location);
  }

  uint64_t v26 = 0LL;
LABEL_34:

  return v26;
}

LABEL_30:
  *(void *)(a1 + 104) = espresso_create_context(0LL, 0xFFFFFFFFLL);
  *(void *)(a1 + 96) = espresso_create_plan();
  else {
    int v25 = *(const char **)a2;
  }
  if (stat(v25, &__p))
  {
    *(_BYTE *)(a1 + 72) = 0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A9D70();
    }
  }

  else
  {
    *(_BYTE *)(a1 + 72) = 1;
    uint64_t v26 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "#spatialGesturesPredictor Successfully located model weights filepath.",  buf,  2u);
    }

    else {
      uint64_t v27 = *(void **)a2;
    }
    if (espresso_plan_add_network(*(void *)(a1 + 96), v27, 65568LL, a1 + 80))
    {
      *(_BYTE *)(a1 + 72) = 0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_1003A9D44();
      }
    }

    else if (espresso_plan_build(*(void *)(a1 + 96)))
    {
      *(_BYTE *)(a1 + 72) = 0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_1003A9D18();
      }
    }

    else
    {
      uint64_t v28 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)pthread_attr_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "#spatialGesturesPredictor Espresso Model initialized",  buf,  2u);
      }
    }
  }

  return a1;
}

        v6 += 152LL;
        if (v6 - *v5 == 3952)
        {
          uint64_t v32 = v5[1];
          ++v5;
          uint64_t v6 = v32;
        }
      }

      else
      {
        unsigned __int8 v67 = v9;
        uint64_t v26 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)pthread_attr_t buf = 134218240;
          *(void *)&uint8_t buf[4] = v67;
          *(_WORD *)&buf[12] = 2048;
          *(double *)&buf[14] = v25;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "#sa_algo_moving_findee,Cached range measurement at %f s can't be matched with peer pose yet, last peer pose at %f",  buf,  0x16u);
        }

        v6 += 152LL;
        if (v6 - *v5 == 3952)
        {
          uint64_t v27 = v5[1];
          ++v5;
          uint64_t v6 = v27;
        }
      }

  sub_100322714(a1 + 600, a2, a3, v8, v9, v10, v11, v12);
}

LABEL_37:
}
}

  uint64_t v19 = *(void *)(a1 + 40);
  char v20 = *(unsigned __int8 *)(v19 + 23);
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    id v23 = *(unsigned __int8 *)(v19 + 23);
  }
  else {
    id v23 = v22;
  }
  if (v23 >= 0x80)
  {
    uint64_t v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23,  a2);
    char v20 = *(unsigned __int8 *)(v19 + 23);
    uint64_t v22 = *(void *)(v19 + 8);
    id v3 = *(_DWORD *)(a1 + 96);
    uint64_t v21 = *(_BYTE *)(v19 + 23);
  }

  else
  {
    uint64_t v24 = 1;
  }

  if (v21 < 0) {
    char v20 = v22;
  }
  double v4 = (v4 + v24 + v20 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_52;
  }

  uint64_t v21 = (void *)*((void *)this + 1);
  char v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v19 = v21;
  if (!v21 || *v19 == v19[1]) {
    return v3;
  }
  else {
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v20,  v3,  a3);
  }
}

  id v23 = (unsigned int *)*((void *)this + 6);
  if (!v23) {
    id v23 = *(unsigned int **)(qword_1008001D0 + 48);
  }
  *(_BYTE *)double v4 = 42;
  uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23[9];
  if (v24 > 0x7F)
  {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v24,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v24;
    int v25 = (uint64_t)v4 + 2;
  }

  double v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000670C8( (wireless_diagnostics::google::protobuf::internal::WireFormat *)v23,  v25,  a3);
  uint64_t v6 = *((_DWORD *)this + 24);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_44;
  }

  uint64_t v21 = *(void *)(a1 + 48);
  if (!v21) {
    uint64_t v21 = *(void *)(qword_100800158 + 48);
  }
  uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100108CA8(v21, a2);
  id v23 = (int)v22;
  else {
    uint64_t v24 = 1;
  }
  double v4 = (v4 + v23 + v24 + 1);
  id v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }

  int v8 = *(void *)(v5 + 32);
  if (!v8) {
    int v8 = *(void *)(qword_1008001F0 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v8,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_43;
  }

  BOOL v17 = *(void *)(a1 + 40);
  if (!v17) {
    BOOL v17 = *(void *)(qword_1008001F0 + 40);
  }
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10008304C(v17, a2);
  uint64_t v19 = (int)v18;
  else {
    char v20 = 1;
  }
  double v4 = (v4 + v19 + v20 + 1);
  id v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }

  id v15 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 104) |= 0x1000u;
  *(_DWORD *)(a1 + 64) = v15;
  BOOL v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x2000) == 0)
  {
LABEL_22:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_39;
  }

  id v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v15 >= 0x80)
  {
    BOOL v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    id v3 = *(_DWORD *)(a1 + 84);
  }

  else
  {
    BOOL v16 = 2;
  }

  v4 += v16;
  if ((v3 & 0x20) == 0)
  {
LABEL_23:
    if ((v3 & 0x40) == 0) {
      goto LABEL_24;
    }
    goto LABEL_45;
  }

        uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
        if ((v13 & 0x80000000) != 0)
        {
          uint64_t v14 = 11;
        }

        else if (v13 >= 0x80)
        {
          uint64_t v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( v13,  a2)
              + 1;
          id v3 = *(_DWORD *)(a1 + 52);
        }

        else
        {
          uint64_t v14 = 2;
        }

        double v4 = (v14 + v4);
        if ((v3 & 0x20) == 0)
        {
LABEL_22:
          if ((v3 & 0x40) == 0) {
            goto LABEL_23;
          }
          goto LABEL_49;
        }

          *((void *)this + 1) = v29 + 1;
        }
      }

      if (v12 != 3) {
        break;
      }
      uint64_t v13 = TagFallback & 7;
      if (v13 != 2) {
        goto LABEL_33;
      }
      while (1)
      {
        unsigned __int8 v46 = a1[19];
        int v47 = a1[18];
        if ((int)v47 >= v46)
        {
          if (v46 == a1[20])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v46 + 1);
            unsigned __int8 v46 = a1[19];
          }

          a1[19] = v46 + 1;
          uint64_t v49 = sub_1000A60DC();
          NSErrorUserInfoKey v50 = *((void *)a1 + 8);
          uint64_t v51 = a1[18];
          a1[18] = v51 + 1;
          *(void *)(v50 + 8 * v51) = v49;
        }

        else
        {
          id v48 = *((void *)a1 + 8);
          a1[18] = v47 + 1;
          uint64_t v49 = *(void **)(v48 + 8 * v47);
        }

        NSErrorUserInfoKey v52 = (char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v64)) {
            return 0LL;
          }
        }

        else
        {
          id v64 = *v52;
          *((void *)this + 1) = v52 + 1;
        }

        uint64_t v53 = *((_DWORD *)this + 14);
        NSErrorUserInfoKey v54 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v53 + 1;
        if (v53 >= v54) {
          return 0LL;
        }
        uint64_t v55 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v64);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v55);
        id v58 = *((_DWORD *)this + 14);
        uint64_t v27 = __OFSUB__(v58, 1);
        uint64_t v59 = v58 - 1;
        if (v59 < 0 == v27) {
          *((_DWORD *)this + 14) = v59;
        }
        uint64_t v29 = (_BYTE *)*((void *)this + 1);
        id v60 = (_BYTE *)*((void *)this + 2);
        if (v29 >= v60 || *v29 != 26) {
          break;
        }
LABEL_55:
        *((void *)this + 1) = v29 + 1;
      }

      if (v29 == v60 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    uint64_t v13 = TagFallback & 7;
LABEL_33:
    if (v13 == 4) {
      return 1LL;
    }
  }

  uint64_t v24 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 100) |= 0x20u;
  *(void *)(a1 + 48) = v24;
  uint64_t v13 = *(_DWORD *)(a2 + 100);
  if ((v13 & 0x40) != 0) {
    goto LABEL_38;
  }
LABEL_22:
  if ((v13 & 0x80) != 0)
  {
LABEL_23:
    id v15 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 100) |= 0x80u;
    *(void *)(a1 + 64) = v15;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(double *)(v5 + 56),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_39;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  *(_DWORD *)(v5 + 60),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x1000) == 0)
  {
LABEL_13:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE,  *(_DWORD *)(v5 + 72),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }

  BOOL v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v17 >= 0x80)
  {
    uint64_t v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    id v3 = *(_DWORD *)(a1 + 88);
  }

  else
  {
    uint64_t v18 = 1;
  }

  double v4 = (v4 + v18 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_49;
    }
    goto LABEL_45;
  }

  if ((v13 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v13 & 0x100) == 0)
  {
    if ((v13 & 0x200) == 0) {
      goto LABEL_40;
    }
LABEL_46:
    uint64_t v30 = *(const std::string **)(a2 + 80);
    *(_DWORD *)(a1 + 124) |= 0x200u;
    uint64_t v31 = *(std::string **)(a1 + 80);
    if (v31 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      uint64_t v31 = (std::string *)operator new(0x18uLL);
      v31->__r_.__value_.__l.__size_ = 0LL;
      v31->__r_.__value_.__l.__cap_ = 0LL;
      v31->__r_.__value_.__r.__words[0] = 0LL;
      *(void *)(a1 + 80) = v31;
    }

    std::string::operator=(v31, v30);
    if ((*(_DWORD *)(a2 + 124) & 0x400) != 0) {
      goto LABEL_41;
    }
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }

  uint64_t v28 = *(const std::string **)(a2 + 72);
  *(_DWORD *)(a1 + 124) |= 0x100u;
  uint64_t v29 = *(std::string **)(a1 + 72);
  if (v29 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    uint64_t v29 = (std::string *)operator new(0x18uLL);
    v29->__r_.__value_.__l.__size_ = 0LL;
    v29->__r_.__value_.__l.__cap_ = 0LL;
    v29->__r_.__value_.__r.__words[0] = 0LL;
    *(void *)(a1 + 72) = v29;
  }

  std::string::operator=(v29, v28);
  uint64_t v13 = *(_DWORD *)(a2 + 124);
  if ((v13 & 0x200) != 0) {
    goto LABEL_46;
  }
LABEL_40:
  if ((v13 & 0x400) != 0)
  {
LABEL_41:
    uint64_t v26 = *(void *)(a2 + 88);
    *(_DWORD *)(a1 + 124) |= 0x400u;
    *(void *)(a1 + 88) = v26;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  uint64_t v21 = *(void *)(a1 + 48);
  if (!v21) {
    uint64_t v21 = *(void *)(qword_100800498 + 48);
  }
  uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000E4BEC(v21, a2);
  id v23 = (int)v22;
  else {
    uint64_t v24 = 1;
  }
  double v4 = (v4 + v23 + v24 + 1);
  id v3 = *(_DWORD *)(a1 + 148);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }

  int v25 = *((_DWORD *)this + 14);
  if ((v25 & 0x20) != 0)
  {
    uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 5);
    *(_BYTE *)a2 = 48;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v26,  (unint64_t)a2 + 1,  a3);
    int v25 = *((_DWORD *)this + 14);
  }

  if ((v25 & 0x40) != 0)
  {
    uint64_t v27 = *((_BYTE *)this + 49);
    *(_BYTE *)a2 = 56;
    *((_BYTE *)a2 + 1) = v27;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  }

  uint64_t v30 = (void *)*((void *)this + 1);
  uint64_t v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v28 = v30;
  if (!v30 || *v28 == v28[1]) {
    return a2;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v29,  a2,  a3);
  }
}

  id v23 = *((void *)this + 7);
  *(_BYTE *)double v4 = 49;
  *(void *)((char *)v4 + 1) = v23;
  double v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 21) & 0x40) == 0) {
    goto LABEL_41;
  }
LABEL_38:
  uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  *(_BYTE *)double v4 = 56;
  if (v24 > 0x7F)
  {
    double v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v24,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v24;
    double v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v22 = (void *)*((void *)this + 1);
  uint64_t v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  char v20 = v22;
  if (!v22 || *v20 == v20[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v21,  v3,  a3);
  }
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD,  (int)a2,  *(double *)(v5 + 104),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD,  *(void *)(v5 + 88),  (unint64_t)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }

  uint64_t v21 = *((_DWORD *)this + 27);
  *(_WORD *)a2 = 397;
  *(_DWORD *)(a2 + 2) = v21;
  a2 += 6LL;
  double v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x20000) == 0)
  {
LABEL_19:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_45;
    }
LABEL_39:
    id v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 29);
    *(_WORD *)a2 = 408;
    if ((v23 & 0x80000000) != 0)
    {
      uint64_t v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v23, a2 + 2, a3);
    }

    else
    {
      if (v23 <= 0x7F)
      {
        *(_BYTE *)(a2 + 2) = (_BYTE)v23;
        a2 += 3LL;
        goto LABEL_45;
      }

      uint64_t v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v23,  (int)a2 + 2,  a3);
    }

    a2 = v24;
    goto LABEL_45;
  }

  uint64_t v19 = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 140) |= 0x800u;
  *(void *)(a1 + 96) = v19;
  uint64_t v6 = *(_DWORD *)(a2 + 140);
  if ((v6 & 0x1000) == 0)
  {
LABEL_21:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_39;
  }

  int v25 = *((void *)this + 15);
  *(_BYTE *)id v3 = 105;
  *(void *)((char *)v3 + 1) = v25;
  id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  id v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x2000) != 0) {
    goto LABEL_38;
  }
LABEL_22:
  if ((v10 & 0x4000) != 0)
  {
LABEL_23:
    double v11 = *((void *)this + 17);
    *(_BYTE *)id v3 = 121;
    *(void *)((char *)v3 + 1) = v11;
    id v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  (int)a2,  *(double *)(v5 + 96),  a3);
  if ((*(_DWORD *)(v5 + 140) & 0x1000) != 0) {
LABEL_14:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD,  (int)a2,  *(double *)(v5 + 104),  a3);
LABEL_15:
  if (*(int *)(v5 + 120) >= 1)
  {
    int v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE,  (int)a2,  *(double *)(*(void *)(v5 + 112) + 8 * v7++),  a3);
    while (v7 < *(int *)(v5 + 120));
  }

  int v8 = *(_DWORD *)(v5 + 140);
  if ((v8 & 0x4000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF,  *(_DWORD *)(v5 + 128),  (int)a2,  a4);
    int v8 = *(_DWORD *)(v5 + 140);
  }

  if ((v8 & 0x8000) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10,  *(_DWORD *)(v5 + 132),  (int)a2,  a4);
  }
  double v11 = *(void **)(v5 + 8);
  id v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  dispatch_time_t v9 = v11;
  if (v11)
  {
    if (*v9 != v9[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
    }
  }

  return this;
}

  if (*((_BYTE *)a3 + 112))
  {
    v8[24] |= 0x100u;
    uint64_t v19 = (_DWORD *)*((void *)v8 + 10);
    if (!v19)
    {
      uint64_t v19 = operator new(0x38uLL);
      sub_10005D954((uint64_t)v19);
      *((void *)v8 + 10) = v19;
      if (!*((_BYTE *)a3 + 112)) {
        sub_100006080();
      }
    }

    char v20 = v19[13];
    *((_OWORD *)v19 + 1) = *((_OWORD *)a3 + 5);
    v19[13] = v20 | 0xF;
    *((_OWORD *)v19 + 2) = *((_OWORD *)a3 + 6);
  }

  if (*((_BYTE *)a3 + 160))
  {
    v8[24] |= 0x10u;
    uint64_t v21 = (_DWORD *)*((void *)v8 + 6);
    if (!v21)
    {
      uint64_t v21 = operator new(0x30uLL);
      sub_10005D950((uint64_t)v21);
      *((void *)v8 + 6) = v21;
      if (!*((_BYTE *)a3 + 160)) {
        sub_100006080();
      }
    }

    uint64_t v22 = v21[10];
    v21[10] = v22 | 3;
    *((_OWORD *)v21 + 1) = *(_OWORD *)(a3 + 17);
    id v23 = *((_DWORD *)a3 + 38);
    v21[10] = v22 | 7;
    v21[8] = v23;
  }

  uint64_t v24 = v8[24];
  if (*((_BYTE *)a3 + 128))
  {
    int v25 = a3[15];
    v24 |= 0x20u;
    v8[24] = v24;
    *((void *)v8 + 7) = v25;
  }

  if (*((_BYTE *)a3 + 169)) {
    uint64_t v26 = *((_BYTE *)a3 + 168) == 0;
  }
  else {
    uint64_t v26 = 1;
  }
  uint64_t v27 = !v26;
  v8[24] = v24 | 0x200;
  *((_BYTE *)v8 + 88) = v27;
  uint64_t v14 = sub_1002338C4(a1, (wireless_diagnostics::google::protobuf::MessageLite *)v29);
  sub_10010686C(v29);
  if (v33) {
    sub_10010686C(v32);
  }
  return v14;
}

    sub_1003A93B8();
  }

      a1[2] = v3;
      ++v4;
    }

    while (v4 != v5);
  }

void sub_1000172F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100017310(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 52))
  {
    uint64_t v2 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v17) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,Not stopping AWDL due to lingering results callback",  (uint8_t *)&v17,  2u);
    }

    if (!*(_BYTE *)(a1 + 184)) {
      sub_100389EA8();
    }
    double v3 = sub_100023CB0();
    double v4 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      if (!*(_BYTE *)(a1 + 184)) {
        sub_100006080();
      }
      uint64_t v5 = *(void *)(a1 + 176);
      int v17 = 134218240;
      double v18 = v3;
      __int16 v19 = 2048;
      uint64_t v20 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,time: %f, time of results callback: %f",  (uint8_t *)&v17,  0x16u);
    }

    if (!*(_BYTE *)(a1 + 184)) {
      sub_100006080();
    }
    if (v3 - *(double *)(a1 + 176) > 5.0)
    {
      *(_BYTE *)(a1 + 52) = 0;
      *(_BYTE *)(a1 + 184) = 0;
    }

    double v6 = 0.5;
LABEL_23:
    sub_1000147F0(a1, v6);
    return;
  }

  if (*(_BYTE *)(a1 + 53))
  {
    int v7 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v17) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,not stopping AWDL due to lingering start network callback",  (uint8_t *)&v17,  2u);
    }

    double v8 = sub_100023CB0();
    if (!*(_BYTE *)(a1 + 168)) {
      sub_100389E80();
    }
    double v9 = v8;
    id v10 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      if (!*(_BYTE *)(a1 + 168)) {
        sub_100006080();
      }
      uint64_t v11 = *(void *)(a1 + 160);
      int v17 = 134218240;
      double v18 = v9;
      __int16 v19 = 2048;
      uint64_t v20 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,time: %f, time of start network callback: %f",  (uint8_t *)&v17,  0x16u);
    }

    if (!*(_BYTE *)(a1 + 168)) {
      sub_100006080();
    }
    if (v9 - *(double *)(a1 + 160) > 5.0)
    {
      *(_BYTE *)(a1 + 53) = 0;
      *(_BYTE *)(a1 + 168) = 0;
    }

    double v6 = 1.0;
    goto LABEL_23;
  }

  *(_BYTE *)(a1 + 50) = 0;
  uint64_t v12 = sub_10001769C(a1);
  uint64_t v13 = v12;
  if (!v12 || (uint64_t v14 = *(void *)(a1 + 40)) == 0)
  {
    BOOL v16 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_100389D9C(v13, a1, v16);
    }
    goto LABEL_29;
  }

  int v15 = WiFiDeviceClientStopNetwork(v12, v14, sub_10001D598, a1);
  *(_DWORD *)(a1 + 456) = 4;
  if (v15)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_100389E20();
    }
LABEL_29:
    sub_100016C24(a1, 1);
    sub_100016F0C(a1);
    return;
  }

  sub_1000147F0(a1, 0.0);
}

void sub_100017680(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10001769C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (!result)
  {
    uint64_t result = sub_1000161D8(a1);
    if (result)
    {
      double v3 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
      {
        LOWORD(v14) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "#wifi-service,Calling WiFiManagerClientCopyInterfaces for AWDL interface",  (uint8_t *)&v14,  2u);
      }

      uint64_t v4 = sub_1000161D8(a1);
      uint64_t v5 = (const __CFArray *)WiFiManagerClientCopyInterfaces(v4);
      if (v5)
      {
        double v6 = v5;
        CFIndex Count = CFArrayGetCount(v5);
        if (Count >= 1)
        {
          CFIndex v8 = Count;
          CFIndex v9 = 0LL;
          while (1)
          {
            ValueAtIndex = CFArrayGetValueAtIndex(v6, v9);
            if (ValueAtIndex)
            {
              uint64_t v11 = ValueAtIndex;
              uint64_t v12 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
              {
                LOWORD(v14) = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "#wifi-service,Calling WiFiDeviceClientIsInterfaceAWDL",  (uint8_t *)&v14,  2u);
              }
            }

            if (v8 == ++v9) {
              goto LABEL_21;
            }
          }

          uint64_t v13 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
          {
            int v14 = 138412290;
            int v15 = v11;
            _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,WiFiDeviceClientIsInterfaceAWDL returned true for %@",  (uint8_t *)&v14,  0xCu);
          }

          *(void *)(a1 + sub_100012358(v1 - 32) = v11;
          CFRetain(v11);
          sub_100019B40(a1);
        }

LABEL_21:
        CFRelease(v6);
        uint64_t result = *(void *)(a1 + 32);
        if (!result)
        {
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
            sub_100389EFC();
          }
          sub_100016C24(a1, 1);
          sub_100016F0C(a1);
          return *(void *)(a1 + 32);
        }
      }

      else
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_100389ED0();
        }
        return 0LL;
      }
    }
  }

  return result;
}

        CFRelease(v6);
        uint64_t result = *(void *)(a1 + 24);
        if (!result)
        {
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
            sub_10038A388();
          }
          sub_100016C24(a1, 1);
          sub_100016F0C(a1);
          return *(void *)(a1 + 24);
        }
      }

      else
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_10038A35C();
        }
        return 0LL;
      }
    }
  }

  return result;
}

        CFIndex v8 = v20;
        if (v20 < v22)
        {
          uint64_t v26 = v22;
          do
          {
            v115 = *(void *)(v8 + 16);
            int v106 = *(_OWORD *)v8;
            uint64_t v27 = *(_OWORD *)v26;
            *(void *)(v8 + 16) = *(void *)(v26 + 16);
            *(_OWORD *)CFIndex v8 = v27;
            *(void *)(v26 + 16) = v115;
            *(_OWORD *)uint64_t v26 = v106;
            do
            {
              uint64_t v28 = *(void *)(v8 + 40);
              v8 += 24LL;
            }

            while (v28 < v17);
            do
            {
              uint64_t v29 = *(void *)(v26 - 8);
              v26 -= 24LL;
            }

            while (v29 >= v17);
          }

          while (v8 < v26);
        }

        uint64_t v30 = (__int128 *)(v8 - 24);
        if (v8 - 24 != a1)
        {
          uint64_t v31 = *v30;
          *(void *)(a1 + 16) = *(void *)(v8 - 8);
          *(_OWORD *)a1 = v31;
        }

        void *v30 = v102;
        *(void *)(v8 - 8) = v17;
        if (v20 < v22)
        {
LABEL_32:
          sub_10001FF70(a1, v8 - 24, a3, a4 & 1);
          a4 = 0;
          continue;
        }

        uint64_t v32 = sub_100020964(a1, v8 - 24);
        if (!sub_100020964(v8, a2))
        {
          if (v32) {
            continue;
          }
          goto LABEL_32;
        }

        a2 = v8 - 24;
        if (!v32) {
          goto LABEL_1;
        }
        return;
    }
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 32),  a2,  a4);
  double v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 32),  a2,  a4);
  double v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }

    if (v10 == 4) {
      return 1LL;
    }
  }

  int v17 = (void *)*((void *)this + 1);
  BOOL v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v15 = v17;
  if (!v17 || *v15 == v15[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v16,  v3,  a3);
  }
}

  uint64_t v11 = *(_BYTE *)(a2 + 25);
  *(_DWORD *)(a1 + 40) |= 4u;
  *(_BYTE *)(a1 + 25) = v11;
  uint64_t v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(unsigned __int8 *)(v5 + 27),  (BOOL)a2,  a4);
  double v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }

  uint64_t v13 = *(_BYTE *)(a1 + 27);
  *(_BYTE *)a2 = 40;
  *(_BYTE *)(a2 + 1) = v13;
  a2 += 2LL;
  double v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(4LL, *(void *)(v5 + 40), a2);
  double v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v4 + 40),  a3);
  uint64_t v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }

  int v14 = *((void *)this + 5);
  *(_BYTE *)a2 = 33;
  *(void *)(a2 + 1) = v14;
  a2 += 9LL;
  uint64_t v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }

  if ((v5 & 0xFF00) == 0) {
    goto LABEL_31;
  }
  if ((v5 & 0x100) != 0)
  {
    int v15 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 300) |= 0x100u;
    *(void *)(a1 + 64) = v15;
    uint64_t v5 = *(_DWORD *)(a2 + 300);
    if ((v5 & 0x200) == 0)
    {
LABEL_24:
      if ((v5 & 0x400) == 0) {
        goto LABEL_25;
      }
      goto LABEL_60;
    }
  }

  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_24;
  }

  BOOL v16 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 300) |= 0x200u;
  *(void *)(a1 + 72) = v16;
  uint64_t v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x400) == 0)
  {
LABEL_25:
    if ((v5 & 0x800) == 0) {
      goto LABEL_26;
    }
    goto LABEL_61;
  }

  if ((v13 & 0x200) != 0)
  {
    int v15 = *(_DWORD *)(a2 + 88);
    *(_DWORD *)(a1 + 96) |= 0x200u;
    *(_DWORD *)(a1 + 88) = v15;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 28),  a2,  a4);
  double v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }

  uint64_t v11 = *(void *)(v5 + 40);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008002C0 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  v11,  a2,  a4);
  double v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 28),  a2,  a4);
  double v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 28),  a2,  a4);
  double v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }

  uint64_t v11 = *(void *)(a1 + 32);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008002F0 + 32);
  }
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007FCCC(v11, a2);
  uint64_t v13 = (int)v12;
  else {
    int v14 = 1;
  }
  v4 += v13 + v14 + 1;
  if ((*(_DWORD *)(a1 + 76) & 0x20) != 0)
  {
LABEL_27:
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if (v15 >= 0x80) {
    else
    }
      BOOL v16 = 2;
    v4 += v16;
  }

  id v10 = *(void *)(a1 + 40);
  if (!v10) {
    id v10 = *(void *)(qword_100800310 + 40);
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007FCCC(v10, a2);
  uint64_t v12 = (int)v11;
  else {
    uint64_t v13 = 1;
  }
  v4 += v12 + v13 + 1;
  double v3 = *(_DWORD *)(a1 + 160);
  if ((v3 & 0x20) == 0) {
    goto LABEL_33;
  }
LABEL_27:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if ((v14 & 0x80000000) != 0)
  {
    int v15 = 10;
  }

  else if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    double v3 = *(_DWORD *)(a1 + 160);
  }

  else
  {
    int v15 = 1;
  }

  v4 += v15 + 1;
LABEL_33:
  if ((v3 & 0x40) != 0) {
    uint64_t v5 = v4 + 9;
  }
  else {
    uint64_t v5 = v4;
  }
  if ((v3 & 0x80) != 0)
  {
    BOOL v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
    if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
      double v3 = *(_DWORD *)(a1 + 160);
    }

    else
    {
      int v17 = 1;
    }

    v5 += v17 + 1;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 52),  a2,  a4);
  int v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 0x20) == 0)
  {
LABEL_10:
    if ((v7 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }

  if ((v3 & 4) != 0)
  {
    BOOL v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 11;
    }

    else if (v16 >= 0x80)
    {
      double v3 = *(_DWORD *)(a1 + 72);
    }

    else
    {
      int v17 = 2;
    }

    v4 += v17;
    if ((v3 & 8) == 0) {
      goto LABEL_39;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_39;
  }

  double v18 = *(void *)(a1 + 32);
  __int16 v19 = *(unsigned __int8 *)(v18 + 23);
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v22 = *(unsigned __int8 *)(v18 + 23);
  }
  else {
    uint64_t v22 = v21;
  }
  if (v22 >= 0x80)
  {
    id v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v22,  a2);
    __int16 v19 = *(unsigned __int8 *)(v18 + 23);
    uint64_t v21 = *(void *)(v18 + 8);
    uint64_t v20 = *(_BYTE *)(v18 + 23);
  }

  else
  {
    id v23 = 1;
  }

  if (v20 < 0) {
    __int16 v19 = v21;
  }
  v4 += v23 + v19 + 1;
LABEL_39:
  uint64_t v24 = *(_DWORD *)(a1 + 48);
  int v25 = (v24 + v4);
  if (v24 >= 1)
  {
    uint64_t v26 = 0LL;
    do
    {
      uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A849C( *(void *)(*(void *)(a1 + 40) + 8 * v26),  a2);
      uint64_t v28 = (int)v27;
      else {
        uint64_t v29 = 1;
      }
      int v25 = (v28 + v25 + v29);
      ++v26;
    }

    while (v26 < *(int *)(a1 + 48));
  }

  uint64_t v30 = *(void **)(a1 + 8);
  if (v30 && *v30 != v30[1]) {
    int v25 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v25;
  *(_DWORD *)(a1 + 68) = v25;
  return v25;
}

  uint64_t v11 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 100) |= 4u;
  *(void *)(a1 + sub_100012358(v1 - 32) = v11;
  uint64_t v5 = *(_DWORD *)(a2 + 100);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 48),  a3);
  double v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }

  *(_DWORD *)(a1 + 60) |= 4u;
  uint64_t v11 = *(void **)(a1 + 24);
  if (!v11)
  {
    uint64_t v11 = operator new(0x30uLL);
    sub_1000C8850((uint64_t)v11);
    *(void *)(a1 + 24) = v11;
  }

  uint64_t v12 = *(void *)(a2 + 24);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_100800448 + 24);
  }
  sub_1000C1A3C((uint64_t)v11, v12);
  uint64_t v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }

  __int16 v19 = *(void **)(v5 + 8);
  double v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v17 = v19;
  if (v19)
  {
    if (*v17 != v17[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v18, a2, a3);
    }
  }

  return this;
}

    int v17 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 68) |= 4u;
    *(_DWORD *)(a1 + 28) = v17;
    if ((*(_DWORD *)(a2 + 68) & 8) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_22;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

    int v14 = *(_DWORD *)(a2 + 32);
    if (v14 >= 4) {
      sub_10038C42C();
    }
    *(_DWORD *)(a1 + 56) |= 4u;
    *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v14;
    uint64_t v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(void *)(v5 + 40),  (uint64_t)a2,  a4);
  if ((*(_DWORD *)(v5 + 56) & 0x40) != 0) {
LABEL_8:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(unsigned __int8 *)(v5 + 49),  (BOOL)a2,  a4);
LABEL_9:
  CFIndex v9 = *(void **)(v5 + 8);
  CFIndex v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  uint64_t v12 = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 88) |= 4u;
  *(_DWORD *)(a1 + 80) = v12;
  uint64_t v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 40),  a3);
  double v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }

  if ((v3 & 8) != 0)
  {
    int v15 = *(void *)(a1 + 56);
    if (!v15) {
      int v15 = *(void *)(qword_100800558 + 56);
    }
    BOOL v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000DFBA4(v15, a2);
    int v17 = (int)v16;
    else {
      double v18 = 1;
    }
    v4 += v17 + v18 + 1;
    double v3 = *(_DWORD *)(a1 + 120);
    if ((v3 & 0x10) == 0)
    {
LABEL_23:
      if ((v3 & 0x20) == 0) {
        goto LABEL_24;
      }
      goto LABEL_39;
    }
  }

  else if ((v3 & 0x10) == 0)
  {
    goto LABEL_23;
  }

  __int16 v19 = *(void *)(a1 + 64);
  if (!v19) {
    __int16 v19 = *(void *)(qword_100800558 + 64);
  }
  uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000E2E28(v19, a2);
  uint64_t v21 = (int)v20;
  else {
    uint64_t v22 = 1;
  }
  v4 += v21 + v22 + 1;
  double v3 = *(_DWORD *)(a1 + 120);
  if ((v3 & 0x20) == 0)
  {
LABEL_24:
    if ((v3 & 0x40) == 0) {
      goto LABEL_25;
    }
    goto LABEL_45;
  }

  double v18 = (void *)*((void *)this + 1);
  int v17 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  BOOL v16 = v18;
  if (!v18 || *v16 == v16[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v17,  v3,  a3);
  }
}

  BOOL v16 = *((void *)this + 5);
  *(_BYTE *)double v3 = 41;
  *(void *)((char *)v3 + 1) = v16;
  double v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v7 = *((_DWORD *)this + 22);
  if ((v7 & 0x20) == 0)
  {
LABEL_10:
    if ((v7 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }

  if ((v13 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v13 & 0x100) != 0)
  {
    uint64_t v24 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 84) |= 0x100u;
    *(_DWORD *)(a1 + 48) = v24;
    uint64_t v13 = *(_DWORD *)(a2 + 84);
    if ((v13 & 0x200) == 0)
    {
LABEL_24:
      if ((v13 & 0x400) == 0) {
        goto LABEL_25;
      }
LABEL_38:
      uint64_t v26 = *(_BYTE *)(a2 + 39);
      *(_DWORD *)(a1 + 84) |= 0x400u;
      *(_BYTE *)(a1 + 39) = v26;
      if ((*(_DWORD *)(a2 + 84) & 0x800) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_26;
    }
  }

  else if ((v13 & 0x200) == 0)
  {
    goto LABEL_24;
  }

  int v25 = *(_BYTE *)(a2 + 38);
  *(_DWORD *)(a1 + 84) |= 0x200u;
  *(_BYTE *)(a1 + 38) = v25;
  uint64_t v13 = *(_DWORD *)(a2 + 84);
  if ((v13 & 0x400) != 0) {
    goto LABEL_38;
  }
LABEL_25:
  if ((v13 & 0x800) != 0)
  {
LABEL_26:
    int v15 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 84) |= 0x800u;
    *(_DWORD *)(a1 + 52) = v15;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  uint64_t v13 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 80) |= 8u;
  *(void *)(a1 + sub_100012358(v1 - 32) = v13;
  uint64_t v5 = *(_DWORD *)(a2 + 80);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_23:
    int v15 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 80) |= 0x20u;
    *(void *)(a1 + 56) = v15;
    uint64_t v5 = *(_DWORD *)(a2 + 80);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    goto LABEL_24;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 52),  a2,  a4);
  double v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

  if ((*((_BYTE *)this + 80) & 0x80) != 0)
  {
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    *(_BYTE *)uint64_t v4 = 64;
    if (v15 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v15;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  if ((*((_BYTE *)this + 81) & 1) != 0)
  {
    BOOL v16 = *((void *)this + 8);
    *(_BYTE *)uint64_t v4 = 74;
    else {
      int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v16 + 23);
    }
    if (v17 > 0x7F)
    {
      double v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v17;
      double v18 = (_DWORD)v4 + 2;
    }

    __int16 v19 = *(char *)(v16 + 23);
    if (v19 >= 0) {
      uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16;
    }
    else {
      uint64_t v20 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v16;
    }
    if (v19 >= 0) {
      uint64_t v21 = (const void *)*(unsigned __int8 *)(v16 + 23);
    }
    else {
      uint64_t v21 = (const void *)*(unsigned int *)(v16 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v20,  v21,  v18,  a4);
  }

  uint64_t v24 = (void *)*((void *)this + 1);
  id v23 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v22 = v24;
  if (!v24 || *v22 == v22[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v23,  v4,  a3);
  }
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(unsigned __int8 *)(v5 + 35),  (BOOL)a2,  a4);
  double v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }

  uint64_t v13 = *((void *)this + 5);
  *(_BYTE *)uint64_t v4 = 33;
  *(void *)((char *)v4 + 1) = v13;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  double v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }

  BOOL v16 = *(void **)(a1 + 8);
  if (v16 && *v16 != v16[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v4;
  return v4;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(double *)(v5 + 32),  a3);
  double v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }

  if ((v3 & 4) != 0)
  {
    BOOL v16 = *(void *)(a1 + 32);
    if (!v16) {
      BOOL v16 = *(void *)(qword_100800658 + 32);
    }
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000FA534(v16, a2);
    double v18 = (int)v17;
    else {
      __int16 v19 = 1;
    }
    v4 += v18 + v19 + 1;
    double v3 = *(_DWORD *)(a1 + 104);
  }

  uint64_t v20 = v4 + 9;
  if ((v3 & 8) == 0) {
    uint64_t v20 = v4;
  }
  if ((v3 & 0x10) != 0) {
    LODWORD(v5) = v20 + 9;
  }
  else {
    LODWORD(v5) = v20;
  }
  if ((v3 & 0x20) != 0)
  {
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
    if ((v21 & 0x80000000) != 0)
    {
      uint64_t v22 = 11;
    }

    else if (v21 >= 0x80)
    {
      double v3 = *(_DWORD *)(a1 + 104);
    }

    else
    {
      uint64_t v22 = 2;
    }

    LODWORD(v5) = v22 + v5;
  }

  if ((v3 & 0x40) != 0) {
    uint64_t v5 = (v5 + 9);
  }
  else {
    uint64_t v5 = v5;
  }
  if ((v3 & 0x80) != 0)
  {
    id v23 = *(void *)(a1 + 64);
    if (!v23) {
      id v23 = *(void *)(qword_100800658 + 64);
    }
    uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10004BF58(v23, a2);
    int v25 = (int)v24;
    else {
      uint64_t v26 = 1;
    }
    uint64_t v5 = (v5 + v25 + v26 + 1);
    double v3 = *(_DWORD *)(a1 + 104);
  }

  int v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

  BOOL v16 = (void *)*((void *)this + 1);
  int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v15,  v3,  a3);
  }
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(double *)(v4 + 64),  a3);
  uint64_t v5 = *(_DWORD *)(v4 + 92);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

  int v15 = *(void *)(a1 + 64);
  *(_BYTE *)a2 = 57;
  *(void *)(a2 + 1) = v15;
  a2 += 9LL;
  double v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x80) != 0) {
    goto LABEL_22;
  }
LABEL_9:
  if ((v3 & 0x100) != 0)
  {
LABEL_10:
    uint64_t v4 = *(void *)(a1 + 80);
    *(_BYTE *)a2 = 73;
    *(void *)(a2 + 1) = v4;
    a2 += 9LL;
  }

  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 92) |= 0x100u;
      uint64_t v11 = *(void **)(a1 + 64);
      if (!v11)
      {
        uint64_t v11 = operator new(0x38uLL);
        sub_10010ECFC((uint64_t)v11);
        *(void *)(a1 + 64) = v11;
      }

      uint64_t v12 = *(void *)(a2 + 64);
      if (!v12) {
        uint64_t v12 = *(void *)(qword_100800708 + 64);
      }
      sub_10010ED58((uint64_t)v11, v12);
      uint64_t v5 = *(_DWORD *)(a2 + 92);
    }

    if ((v5 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 92) |= 0x200u;
      uint64_t v13 = *(void **)(a1 + 72);
      if (!v13)
      {
        uint64_t v13 = operator new(0x30uLL);
        sub_10010FAB8((uint64_t)v13);
        *(void *)(a1 + 72) = v13;
      }

      int v14 = *(void *)(a2 + 72);
      if (!v14) {
        int v14 = *(void *)(qword_100800708 + 72);
      }
      sub_10010FB04((uint64_t)v13, v14);
      uint64_t v5 = *(_DWORD *)(a2 + 92);
    }

    if ((v5 & 0x400) != 0)
    {
      *(_DWORD *)(a1 + 92) |= 0x400u;
      int v15 = *(void **)(a1 + 80);
      if (!v15)
      {
        int v15 = operator new(0x60uLL);
        sub_100110260((uint64_t)v15);
        *(void *)(a1 + 80) = v15;
      }

      BOOL v16 = *(void *)(a2 + 80);
      if (!v16) {
        BOOL v16 = *(void *)(qword_100800708 + 80);
      }
      sub_1001102B4((uint64_t)v15, v16);
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 56),  (int)a2,  a4);
  double v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }

      if (v10 == 4) {
        return 1LL;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField( this,  TagFallback,  v6,  a4) & 1) == 0) {
        return 0LL;
      }
    }

    id v10 = TagFallback & 7;
    if (v10 != 2) {
      goto LABEL_21;
    }
LABEL_33:
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v24 = *(void **)(a1 + 24);
    if (!v24)
    {
      uint64_t v24 = operator new(0x28uLL);
      sub_1001171F8(v24);
      *(void *)(a1 + 24) = v24;
    }

    int v25 = (char *)*((void *)this + 1);
    if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
    {
    }

    else
    {
      uint64_t v38 = *v25;
      *((void *)this + 1) = v25 + 1;
    }

    uint64_t v26 = *((_DWORD *)this + 14);
    uint64_t v27 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v26 + 1;
    if (v26 >= v27) {
      return 0LL;
    }
    uint64_t v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
    uint64_t v31 = *((_DWORD *)this + 14);
    uint64_t v21 = __OFSUB__(v31, 1);
    uint64_t v32 = v31 - 1;
    if (v32 < 0 == v21) {
      *((_DWORD *)this + 14) = v32;
    }
    uint64_t v33 = (_BYTE *)*((void *)this + 1);
    uint64_t v11 = *((void *)this + 2);
    if ((unint64_t)v33 < v11 && *v33 == 24)
    {
      uint64_t v12 = v33 + 1;
      *((void *)this + 1) = v12;
LABEL_47:
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36);
        if (!(_DWORD)result) {
          return result;
        }
        uint64_t v34 = v36;
      }

      else
      {
        uint64_t v34 = *v12;
        *((void *)this + 1) = v12 + 1;
      }

      if ((v34 - 1) > 9)
      {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 3, v34);
      }

      else
      {
        *(_DWORD *)(a1 + 40) |= 4u;
        *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v34;
      }

      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
  }

  std::string::operator=((std::string *)(a1 + 216), a2);
  *(_BYTE *)(a1 + 240) = a3;
  int v15 = (_BYTE *)(a1 + 240);
  *(double *)(a1 + 248) = a4;
  if (!sub_1001AAE6C((void *)(a1 + 216)) && sub_1001AB500(a1 + 376))
  {
    std::string::assign((std::string *)(a1 + 376), off_1007F4758[0]);
    if (os_log_type_enabled((os_log_t)qword_1007F9210, OS_LOG_TYPE_DEBUG)) {
      sub_1003972F0();
    }
  }

  sub_1001AA43C(a1);
LABEL_26:
  const void *v15 = 1;
}

      uint64_t v13 = 0LL;
      *(_BYTE *)a3 = v20[0];
      *(_BYTE *)(a3 + 24) = v22;
      *(_DWORD *)(a3 + 48) = v24;
      *(_BYTE *)(a3 + 56) = 1;
      double v18 = v21;
      uint64_t v21 = 0u;
      *(_OWORD *)(a3 + 8) = v18;
      __int16 v19 = v23;
      id v23 = 0u;
      *(_OWORD *)(a3 + sub_100012358(v1 - 32) = v19;
      goto LABEL_22;
    }

    if (((1 << v10) & 0x44) != 0)
    {
      uint64_t v12 = 0;
      goto LABEL_17;
    }
  }

      LODWORD(v10[0]) = 0;
      *(void *)((char *)v10 + 4) = 0x100000107000002LL;
      break;
    case 4:
      uint64_t v4 = sub_1002C0768(a1, *(unsigned int *)(a1 + 188));
      if (v4)
      {
LABEL_16:
        sub_1002BFAFC(a1);
        *(_DWORD *)__p = v4;
        *(void *)&__p[4] = 0LL;
        v10[0] = v4;
      }

      else
      {
        int v7 = *(unsigned __int8 *)(a1 + 160);
        if (v7 != 5)
        {
          if (*(void *)(a1 + 152)) {
            sub_1002C1B28(a1 + 128, v7, 5);
          }
          *(_BYTE *)(a1 + 160) = 5;
        }

    (*(void (**)(uint64_t, __int128 *))(*(void *)v24 + 24LL))(v24, &v90);
    goto LABEL_24;
  }

  if (v23 != 3) {
    goto LABEL_24;
  }
  if (!*((_BYTE *)a2 + 81)) {
    sub_1003AC248();
  }
  uint64_t v26 = *((unsigned __int8 *)a2 + 80);
  if (v26 == 2)
  {
    uint64_t v24 = *(void *)(a1 + 1216);
    if (!v24) {
      goto LABEL_24;
    }
    uint64_t v28 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
    {
      v63 = *(void *)a1;
      *(_DWORD *)pthread_attr_t buf = 134217984;
      *(void *)id v111 = v63;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "#regionmon Consuming range result for secondary intent predictor for device identifier 0x%llx",  buf,  0xCu);
      uint64_t v24 = *(void *)(a1 + 1216);
    }

    goto LABEL_21;
  }

  if (v26 == 1)
  {
    uint64_t v24 = *(void *)(a1 + 1208);
    if (!v24) {
      goto LABEL_24;
    }
    uint64_t v27 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v62 = *(void *)a1;
      *(_DWORD *)pthread_attr_t buf = 134217984;
      *(void *)id v111 = v62;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "#regionmon Consuming range result for default intent predictor for device identifier 0x%llx",  buf,  0xCu);
      uint64_t v24 = *(void *)(a1 + 1208);
    }

    goto LABEL_21;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_1003AC1E8();
  }
LABEL_24:
  uint64_t v29 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
  {
    id v60 = *(void *)a2;
    *(_DWORD *)pthread_attr_t buf = 134218752;
    *(double *)id v111 = v8;
    *(_WORD *)&v111[8] = 2048;
    *(void *)&v111[10] = v60;
    unsigned __int8 v112 = 2048;
    v113 = v11;
    int v114 = 2048;
    v115 = v14;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "#regionmon time:%f, dev:%llx, raw:%f, filtered:%f",  buf,  0x2Au);
  }

  uint64_t v30 = *(unsigned __int8 *)(a1 + 424);
  uint64_t v31 = *(_DWORD *)(a1 + 1184);
  uint64_t v32 = 0.0;
  switch(v31)
  {
    case 1:
      uint64_t v41 = sub_10030E6E4(a1 + 152, v14);
      id v42 = 0LL;
      uint64_t v43 = *(void *)(a1 + 1208);
      if (!v43 || !v41) {
        goto LABEL_59;
      }
      id v44 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        id v45 = *(void *)a1;
        *(_DWORD *)pthread_attr_t buf = 134217984;
        *(void *)id v111 = v45;
        _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEFAULT,  "#regionmon using default intent predictor for dev 0x%llx",  buf,  0xCu);
        uint64_t v43 = *(void *)(a1 + 1208);
      }

      (*(void (**)(uint64_t))(*(void *)v43 + 40LL))(v43);
      goto LABEL_55;
    case 2:
      uint64_t v35 = *(void *)(a1 + 1208);
      if (v35)
      {
        uint64_t v39 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          unint64_t v40 = *(void *)a1;
          *(_DWORD *)pthread_attr_t buf = 134217984;
          *(void *)id v111 = v40;
          _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "#regionmon using default intent predictor for dev 0x%llx",  buf,  0xCu);
          uint64_t v35 = *(void *)(a1 + 1208);
        }

        goto LABEL_38;
      }

      break;
    case 3:
      uint64_t v33 = sub_10030E6E4(a1 + 152, v14);
      if (!*((_BYTE *)a2 + 81)) {
        sub_1003AC1C0();
      }
      uint64_t v34 = *((unsigned __int8 *)a2 + 80);
      if (v34 == 2)
      {
        unsigned __int8 v46 = *(void *)(a1 + 1216);
        if (v46) {
          int v47 = v33;
        }
        else {
          int v47 = 0;
        }
        if (v47 == 1)
        {
          id v48 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
          {
            v65 = *(void *)a1;
            *(_DWORD *)pthread_attr_t buf = 134217984;
            *(void *)id v111 = v65;
            _os_log_debug_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEBUG,  "#regionmon using secondary SG predictory for dev 0x%llx",  buf,  0xCu);
            unsigned __int8 v46 = *(void *)(a1 + 1216);
          }

          uint64_t v38 = (*(double (**)(uint64_t))(*(void *)v46 + 40LL))(v46);
          goto LABEL_55;
        }
      }

      else if (v34 == 1)
      {
        uint64_t v35 = *(void *)(a1 + 1208);
        if (v35) {
          uint64_t v36 = v33;
        }
        else {
          uint64_t v36 = 0;
        }
        if (v36 == 1)
        {
          uint64_t v37 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
          {
            id v64 = *(void *)a1;
            *(_DWORD *)pthread_attr_t buf = 134217984;
            *(void *)id v111 = v64;
            _os_log_debug_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEBUG,  "#regionmon using default SG predictor for dev 0x%llx",  buf,  0xCu);
            uint64_t v35 = *(void *)(a1 + 1208);
          }

  if (!sub_100046FEC((void *)(a1 + 216), &v23)) {
    goto LABEL_7;
  }
  uint64_t v22 = sub_100046FEC((void *)(a1 + 216), &v23);
  if (!v22) {
LABEL_24:
  }
    sub_100126B2C("unordered_map::at: key not found");
  sub_10030FAE0((uint64_t)(v22 + 3), (__int128 *)a2, a3, a4);
}

uint64_t sub_1000178D0(uint64_t a1)
{
  return sub_1000178D8(*(void *)(a1 + 32));
}

void sub_1000178D8(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  *(_BYTE *)(a1 + 49) = 0;
  if (*(_BYTE *)(a1 + 55))
  {
    switch(*(_DWORD *)(a1 + 456))
    {
      case 0:
        double v3 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)int v25 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,Current AWDL state is down",  v25,  2u);
        }

        if (sub_1000151E0(a1))
        {
          uint64_t v4 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)int v25 = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,Current AWDL state is down - starting awdl",  v25,  2u);
          }

          sub_100016A9C(a1);
        }

        else if (*(_DWORD *)(a1 + 448))
        {
          __int16 v19 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)int v25 = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "#wifi-service,Setting ranging role to unspecified",  v25,  2u);
          }

          *(_DWORD *)(a1 + 448) = 0;
        }

        goto LABEL_55;
      case 1:
        BOOL v7 = sub_1000151E0(a1);
        CFIndex v8 = (os_log_s *)qword_1008000A0;
        BOOL v9 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
        if (!v7)
        {
          if (!v9) {
            goto LABEL_54;
          }
          *(_WORD *)int v25 = 0;
          double v18 = "#wifi-service,Current AWDL state is starting but we don't have a range request active!";
          goto LABEL_53;
        }

        if (v9)
        {
          *(_WORD *)int v25 = 0;
          id v10 = "#wifi-service,Current AWDL state is starting";
          uint64_t v11 = v8;
          goto LABEL_36;
        }

        goto LABEL_55;
      case 2:
        uint64_t v12 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)int v25 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,Current AWDL state is up",  v25,  2u);
        }

        if (!sub_1000151E0(a1))
        {
          CFIndex v8 = (os_log_s *)qword_1008000A0;
          if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_54;
          }
          *(_WORD *)int v25 = 0;
          double v18 = "#wifi-service,Current AWDL state is up - stopping awdl";
          goto LABEL_53;
        }

        int v13 = *(_DWORD *)(a1 + 448);
        switch(v13)
        {
          case 2:
            uint64_t v21 = (os_log_s *)qword_1008000A0;
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)int v25 = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,Current AWDL state is up - waiting to respond",  v25,  2u);
            }

            if (*(void *)(a1 + 192)) {
              goto LABEL_71;
            }
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
              goto LABEL_60;
            }
            break;
          case 1:
            uint64_t v22 = (os_log_s *)qword_1008000A0;
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)int v25 = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,Current AWDL state is up - waiting to initiate",  v25,  2u);
            }

            if (*(void *)(a1 + 192)) {
              goto LABEL_71;
            }
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
            {
LABEL_60:
              sub_100389F80();
              goto LABEL_55;
            }

            break;
          case 0:
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
              sub_100389F54();
            }
            goto LABEL_54;
          default:
            goto LABEL_55;
        }

        goto LABEL_55;
      case 3:
        int v14 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)int v25 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,Current AWDL state is ready for ranging",  v25,  2u);
        }

        BOOL v15 = sub_1000151E0(a1);
        int v16 = *(_DWORD *)(a1 + 448);
        if (!v15)
        {
          if (v16 == 2)
          {
            uint64_t v20 = (os_log_s *)qword_1008000A0;
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)int v25 = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,Current AWDL state is ready for ranging - stopping responder ranging",  v25,  2u);
            }

            sub_10001839C(a1);
          }

          CFIndex v8 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)int v25 = 0;
            double v18 = "#wifi-service,Current AWDL state is ready for ranging - stopping awdl";
            goto LABEL_53;
          }

          goto LABEL_54;
        }

        switch(v16)
        {
          case 2:
            if (!*(_BYTE *)(a1 + 54))
            {
              id v23 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)int v25 = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,Current AWDL state is ready for ranging - requesting responder ranging",  v25,  2u);
              }

              sub_10001839C(a1);
              goto LABEL_55;
            }

            break;
          case 1:
            if (!*(_BYTE *)(a1 + 54))
            {
              uint64_t v24 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)int v25 = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,Current AWDL state is ready for ranging - requesting initiator ranging",  v25,  2u);
              }

              sub_1000180A8(a1);
              goto LABEL_55;
            }

            break;
          case 0:
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
              sub_100389FAC();
            }
            goto LABEL_54;
          default:
            goto LABEL_55;
        }

LABEL_71:
        sub_100017EE8(a1);
        goto LABEL_55;
      case 4:
        uint64_t v17 = qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)int v25 = 0;
          id v10 = "#wifi-service,Current AWDL state is stopping";
          uint64_t v11 = (os_log_s *)v17;
LABEL_36:
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, v25, 2u);
        }

        goto LABEL_55;
      case 5:
        CFIndex v8 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)int v25 = 0;
          double v18 = "#wifi-service,Current AWDL state is unavailable";
LABEL_53:
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v18, v25, 2u);
        }

  __int16 v19 = *(void *)(v5 + 112);
  if (!v19) {
    __int16 v19 = *(void *)(qword_100800158 + 112);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE,  v19,  a2,  a4);
  double v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_77;
  }

  uint64_t v27 = *(void *)(a2 + 176);
  *(_DWORD *)(a1 + 300) |= 0x200000u;
  *(void *)(a1 + 176) = v27;
  uint64_t v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x400000) == 0)
  {
LABEL_39:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_40;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B,  (int)a2,  *(double *)(v5 + 216),  a3);
  double v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_73;
  }

  uint64_t v33 = *((void *)this + 16);
  *(_WORD *)uint64_t v4 = 385;
  *(void *)((char *)v4 + 2) = v33;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
  int v16 = *((_DWORD *)this + 75);
  if ((v16 & 0x10000) == 0)
  {
LABEL_36:
    if ((v16 & 0x20000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_73;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F4,  *(_DWORD *)(v5 + 128),  (int)a2,  a4);
  double v6 = *(_DWORD *)(v5 + 232);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_73;
  }

  id v45 = (void *)*((void *)this + 1);
  id v44 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v43 = v45;
  if (!v45 || *v43 == v43[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v44,  v4,  a3);
  }
}

  unsigned __int8 v46 = (v38 + 1);
  if (*(void *)(a1 + 112) < v46)
  {
    *(_DWORD *)(a1 + 6sub_100012358(v1 - 32) = 0;
LABEL_73:
    *(_BYTE *)(a1 + 636) = 1;
    goto LABEL_74;
  }

  *(_DWORD *)(a1 + 6sub_100012358(v1 - 32) = v46;
  *(_BYTE *)(a1 + 636) = 1;
  *(_DWORD *)(a1 + 680) = v46;
LABEL_74:
  *(void *)(a1 + 656) = *(void *)a2;
  *(_BYTE *)(a1 + 664) = 1;
  int v47 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 576) - *(void *)(a1 + 568)) >> 3);
  if (!*(_BYTE *)(a1 + 676)) {
    *(_BYTE *)(a1 + 676) = 1;
  }
  *(_DWORD *)(a1 + 672) = v47;
  if (v33 && *(_BYTE *)(a1 + 192) && *(_BYTE *)(a1 + 608))
  {
    sub_1002CD2F8(a1, *(double *)(a1 + 600));
    *(void *)(a1 + 616) = v48;
    *(_BYTE *)(a1 + 624) = 1;
  }

  if (v35 < v36 && *(_BYTE *)(a1 + 636) && !*(_DWORD *)(a1 + 632))
  {
LABEL_83:
    *(_BYTE *)a3 = 0;
    *(_BYTE *)(a3 + 80) = 0;
    return;
  }

  uint64_t v49 = *(_OWORD *)(a1 + 648);
  *(_OWORD *)(a3 + sub_100012358(v1 - 32) = *(_OWORD *)(a1 + 632);
  *(_OWORD *)(a3 + 48) = v49;
  *(_OWORD *)(a3 + 64) = *(_OWORD *)(a1 + 664);
  NSErrorUserInfoKey v50 = *(_OWORD *)(a1 + 616);
  *(_OWORD *)a3 = *(_OWORD *)(a1 + 600);
  *(_OWORD *)(a3 + 16) = v50;
  *(_BYTE *)(a3 + 80) = 1;
}

LABEL_54:
        sub_100017310(a1);
        goto LABEL_55;
      default:
        goto LABEL_55;
    }
  }

  uint64_t v5 = sub_1000161D8(a1);
  double v6 = (os_log_s *)qword_1008000A0;
  if (v5)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v25 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,State machine cannot continue until wifi device is attached.",  v25,  2u);
    }

    sub_1000147F0(a1, 0.5);
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_100389F28();
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  (int)a2,  *(double *)(v5 + 72),  a3);
  double v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_56;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 40),  a2,  a4);
  double v6 = *(_DWORD *)(v5 + 232);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_56;
  }

  __int16 v19 = *(void *)(v5 + 112);
  if (!v19) {
    __int16 v19 = *(void *)(qword_100800498 + 112);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD,  v19,  a2,  a4);
  double v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_60;
  }

  uint64_t v26 = (unsigned int *)*((void *)this + 8);
  if (!v26) {
    uint64_t v26 = *(unsigned int **)(qword_100800498 + 64);
  }
  *(_BYTE *)uint64_t v4 = 58;
  uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26[8];
  if (v27 > 0x7F)
  {
    uint64_t v28 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v27,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v27;
    uint64_t v28 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_1000E6678((wireless_diagnostics::google::protobuf::internal::WireFormat *)v26, v28, a3, a4);
  double v6 = *((_DWORD *)this + 37);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_66;
  }

    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[14];
    if (v21 >= 0x80)
    {
      double v3 = a1[18];
    }

    else
    {
      uint64_t v22 = 2;
    }

    uint64_t v5 = (v22 + v5);
    if ((v3 & 0x2000) == 0)
    {
LABEL_44:
      if ((v3 & 0x4000) == 0) {
        goto LABEL_66;
      }
LABEL_62:
      int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[16];
      if (v25 >= 0x80) {
      else
      }
        uint64_t v26 = 2;
      uint64_t v5 = (v26 + v5);
      goto LABEL_66;
    }

  uint64_t v30 = *((void *)this + 10);
  if (!v30) {
    uint64_t v30 = *(void *)(qword_100800658 + 80);
  }
  *(_BYTE *)uint64_t v4 = 74;
  uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v30 + 32);
  if (v31 > 0x7F)
  {
    uint64_t v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v31,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v31;
    uint64_t v32 = (uint64_t)v4 + 2;
  }

  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10004BEE8(v30, v32, a3);
  int v25 = *((_DWORD *)this + 26);
  if ((v25 & 0x200) == 0)
  {
LABEL_45:
    if ((v25 & 0x400) == 0) {
      goto LABEL_67;
    }
    goto LABEL_61;
  }

      if (v30 <= v12)
      {
        if ((unint64_t)v38 <= v13 || v30 != v12)
        {
          uint64_t v53 = v38 + 2;
          if ((double *)((char *)v53 - *(void *)v30) == (double *)4096)
          {
            v65 = (double *)*((void *)v30 + 1);
            v30 += 8;
            uint64_t v53 = v65;
          }

      abort_report_np("unexpected matching name", v22);
      __break(1u);
    }

        if (!self->_finderAttached
          || !HIBYTE(self->_finderStartRangingOptions.var0.__val_.secondary_scheduling_interval_usec.var0.__val_))
        {
          goto LABEL_91;
        }

        if (self->_measurementsReceived)
        {
          id v45 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)pthread_attr_t buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "#find-range,Reciprocal finding, measurements already received, do nothing",  buf,  2u);
          }

          uint64_t v21 = (os_log_s *)(id)qword_1008000A0;
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
          {
            unsigned __int8 v46 = (NSString *)objc_claimAutoreleasedReturnValue(-[NIServerNBAMMSSession _getState](self, "_getState"));
            *(_DWORD *)pthread_attr_t buf = 138412290;
            unsigned __int8 v112 = v46;
            _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "#find-range,NBAMMS session state (after register): %@",  buf,  0xCu);
          }

    rep = (double)std::chrono::steady_clock::now().__d_.__rep_;
    uint64_t v34 = *(void *)(a1 + 64);
    *(double *)&uint64_t v43 = rep;
    DWORD2(v43) = 4;
    BYTE12(v43) = 0;
    BYTE14(v43) = 0;
    id v44 = 0;
    id v45 = 0;
    unsigned __int8 v46 = 0;
    int v47 = 0;
    id v48 = 0;
    sub_10012B018(v34, &v43);
    goto LABEL_55;
  }

    sub_10015B79C();
  }

  uint64_t v11 = __s1[1];
  if (v7 != __s1[1])
  {
    uint64_t v12 = off_1007F4768[0];
    int v13 = strlen(off_1007F4768[0]);
    goto LABEL_27;
  }

  id v10 = (void **)__s1[0];
LABEL_19:
  if (!memcmp(v10, off_1007F4750[0], v8)) {
    goto LABEL_51;
  }
  uint64_t v12 = off_1007F4768[0];
  int v13 = strlen(off_1007F4768[0]);
  if ((v9 & 0x80) == 0) {
    goto LABEL_23;
  }
  uint64_t v11 = __s1[1];
LABEL_27:
  if ((void *)v13 != v11)
  {
    BOOL v15 = off_1007F4738[0];
    int v16 = strlen(off_1007F4738[0]);
    goto LABEL_37;
  }

  int v14 = (void **)__s1[0];
LABEL_30:
  if (!memcmp(v14, v12, (size_t)v11)) {
    goto LABEL_51;
  }
  BOOL v15 = off_1007F4738[0];
  int v16 = strlen(off_1007F4738[0]);
  if ((v9 & 0x80) == 0) {
    goto LABEL_32;
  }
  uint64_t v11 = __s1[1];
LABEL_37:
  if ((void *)v16 != v11)
  {
    double v18 = off_1007F4760[0];
    __int16 v19 = strlen(off_1007F4760[0]);
    goto LABEL_46;
  }

  uint64_t v17 = (void **)__s1[0];
LABEL_40:
  if (!memcmp(v17, v15, (size_t)v11)) {
    goto LABEL_51;
  }
  double v18 = off_1007F4760[0];
  __int16 v19 = strlen(off_1007F4760[0]);
  if ((v9 & 0x80) == 0)
  {
LABEL_42:
    if (v19 == v9)
    {
      uint64_t v20 = __s1;
      goto LABEL_49;
    }
}

    v84 = (uint64_t (**)())&v81;
    sub_1002DA2F4((void ***)&v84);
  }

    v84 = (uint64_t (**)())&v81;
    sub_1002DA2F4((void ***)&v84);
  }

    sub_100006080();
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
    sub_1003AABD0();
  }
}

LABEL_55:
  std::mutex::unlock(v2);
}

  uint64_t v28 = *((void *)this + 7);
  *(_BYTE *)uint64_t v4 = 58;
  else {
    uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v28 + 23);
  }
  if (v29 > 0x7F)
  {
    uint64_t v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v29,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v29;
    uint64_t v30 = (_DWORD)v4 + 2;
  }

  uint64_t v31 = *(char *)(v28 + 23);
  if (v31 >= 0) {
    uint64_t v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v28;
  }
  else {
    uint64_t v32 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v28;
  }
  if (v31 >= 0) {
    uint64_t v33 = (const void *)*(unsigned __int8 *)(v28 + 23);
  }
  else {
    uint64_t v33 = (const void *)*(unsigned int *)(v28 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v32,  v33,  v30,  a4);
  BOOL v9 = *((_DWORD *)this + 24);
  if ((v9 & 0x80) == 0)
  {
LABEL_15:
    if ((v9 & 0x100) == 0) {
      goto LABEL_16;
    }
    goto LABEL_74;
  }

  int v14 = *(void *)(v5 + 80);
  if (!v14) {
    int v14 = *(void *)(qword_1008001F0 + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  v14,  a2,  a4);
  double v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_61;
  }

  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
      if (v29 >= 0x80)
      {
        double v3 = *(_DWORD *)(a1 + 68);
      }

      else
      {
        uint64_t v30 = 2;
      }

      uint64_t v4 = (v30 + v4);
    }

    if ((v3 & 0x200) != 0)
    {
      uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
      if (v31 >= 0x80) {
      else
      }
        uint64_t v32 = 2;
      uint64_t v4 = (v32 + v4);
    }
  }

  uint64_t v33 = *(void **)(a1 + 8);
  if (v33 && *v33 != v33[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

  uint64_t v32 = (unsigned int *)*((void *)this + 5);
  if (!v32) {
    uint64_t v32 = *(unsigned int **)(qword_1008002C0 + 40);
  }
  *(_BYTE *)uint64_t v4 = 42;
  uint64_t v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v32[22];
  if (v33 > 0x7F)
  {
    uint64_t v34 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v33,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v33;
    uint64_t v34 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_1000916BC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v32, v34, a3);
  id v10 = *((_DWORD *)this + 25);
  if ((v10 & 0x20) == 0)
  {
LABEL_16:
    if ((v10 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_62;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  (int)a2,  *(double *)(v5 + 80),  a3);
  double v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_57;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(void *)(v5 + 32),  (unint64_t)a2,  a4);
  double v6 = *(_DWORD *)(v5 + 232);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_57;
  }

        if (v9 != 4)
        {
          continue;
        }

        return 1LL;
      default:
        BOOL v9 = TagFallback & 7;
        goto LABEL_55;
    }
  }

  if ((*((_BYTE *)this + 141) & 0x80) != 0)
  {
    uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 33);
    *(_WORD *)uint64_t v4 = 384;
    uint64_t v32 = (unint64_t)v4 + 2;
    if ((v31 & 0x80000000) != 0)
    {
      uint64_t v33 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v31,  v32,  a3);
    }

    else
    {
      if (v31 <= 0x7F)
      {
        *((_BYTE *)v4 + 2) = (_BYTE)v31;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
        goto LABEL_62;
      }

      uint64_t v33 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v31,  v32,  a3);
    }

    uint64_t v4 = v33;
  }
          }

    sub_100006080();
  }

void sub_100017ECC(_Unwind_Exception *a1)
{
}

uint64_t sub_100017EE0(uint64_t a1)
{
  return sub_1000178D8(*(void *)(a1 + 32));
}

void sub_100017EE8(uint64_t a1)
{
  if (*(void *)(a1 + 192))
  {
    if ((*(_DWORD *)(a1 + 456) & 0xFFFFFFFE) == 2)
    {
      uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
      [v2 setValue:*(void *)(a1 + 192) forKey:@"RANGING_TOKEN_ID"];
      double v3 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v4 = *(void *)(a1 + 192);
        int v6 = 138412290;
        uint64_t v7 = v4;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,setting self ranging ID to %@",  (uint8_t *)&v6,  0xCu);
      }

      uint64_t v5 = sub_100018C24(a1);
      if (WiFiDeviceClientSetRangingIdentifier(v5, v2))
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_10038A004();
        }
        sub_100016C24(a1, 1);
        sub_100016F0C(a1);
      }

      else
      {
        *(_DWORD *)(a1 + 456) = 3;
        *(_BYTE *)(a1 + 54) = 0;
        sub_1000147F0(a1, 0.0);
      }
    }

    else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      sub_10038A064();
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_100389FD8();
  }

void sub_10001808C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000180A8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 56))
  {
    if (*(_BYTE *)(a1 + 52))
    {
      double v2 = sub_100023CB0();
      if (!*(_BYTE *)(a1 + 184)) {
        sub_10038A1B8();
      }
      if (v2 - *(double *)(a1 + 176) > 5.0)
      {
        *(_BYTE *)(a1 + 52) = 0;
        *(_BYTE *)(a1 + 184) = 0;
      }

      sub_1000147F0(a1, 0.5);
      return;
    }

    double v3 = sub_100018568(a1);
    if (CFArrayGetCount((CFArrayRef)v3) < 1)
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_10038A18C();
      }
    }

    else
    {
      double Count = (double)CFArrayGetCount((CFArrayRef)v3);
      uint64_t v5 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)pthread_attr_t buf = 134349312;
        CFIndex v16 = CFArrayGetCount((CFArrayRef)v3);
        __int16 v17 = 2050;
        double v18 = Count;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,WiFiDeviceClientRangingStartAsync, num peers, %{public}ld, timeout, %{public}lf",  buf,  0x16u);
      }

      uint64_t v6 = sub_100018C24(a1);
      WiFiDeviceClientRegisterRangingReportCallback(v6, sub_10001D714, a1);
      *(_BYTE *)(a1 + 52) = 1;
      *(double *)(a1 + 176) = sub_100023CB0();
      *(_BYTE *)(a1 + 184) = 1;
      uint64_t v7 = sub_100018C24(a1);
      int started = WiFiDeviceClientRangingStartAsync(v7, v3, sub_10001D5E8, a1, Count);
      if (!started) {
        goto LABEL_27;
      }
      if (started == -3930)
      {
        BOOL v9 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_10038A11C(v9, v10, v11);
        }
        *(_BYTE *)(a1 + 52) = 0;
        if (*(_BYTE *)(a1 + 184)) {
          *(_BYTE *)(a1 + 184) = 0;
        }
        dispatch_time_t v12 = dispatch_time(0LL, 1000000000LL);
        int v13 = *(dispatch_queue_s **)(a1 + 80);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_100018E50;
        block[3] = &unk_1007A2398;
        void block[4] = a1;
        dispatch_after(v12, v13, block);
        return;
      }

      *(_BYTE *)(a1 + 52) = 0;
      if (*(_BYTE *)(a1 + 184)) {
        *(_BYTE *)(a1 + 184) = 0;
      }
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_10038A0BC();
      }
      *(_DWORD *)(a1 + 456) = 5;
    }

    sub_1000147F0(a1, 0.0);
LABEL_27:
    CFRelease(v3);
    return;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_10038A090();
  }
}

void sub_100018384(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001839C(uint64_t a1)
{
  double v2 = sub_100018568(a1);
  CFIndex Count = CFArrayGetCount((CFArrayRef)v2);
  uint64_t v4 = (os_log_s *)qword_1008000A0;
  if (Count < 1)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,WiFiDeviceClientSetRangeable FALSE",  (uint8_t *)&v9,  2u);
    }

    uint64_t v8 = sub_100018C24(a1);
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      goto LABEL_11;
    }
    goto LABEL_12;
  }

  uint64_t v5 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = 134349056;
    CFIndex v10 = CFArrayGetCount((CFArrayRef)v2);
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,WiFiDeviceClientSetRangeable TRUE, num peers, %{public}ld",  (uint8_t *)&v9,  0xCu);
  }

  uint64_t v6 = sub_100018C24(a1);
  WiFiDeviceClientRegisterRangingReportCallback(v6, sub_10001D828, a1);
  uint64_t v7 = sub_100018C24(a1);
  if (WiFiDeviceClientSetRangeable(v7, 1LL, v2))
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
LABEL_11:
    }
      sub_10038A1E0();
LABEL_12:
    *(_DWORD *)(a1 + 456) = 5;
LABEL_13:
    sub_1000147F0(a1, 0.0);
  }

  CFRelease(v2);
}

void sub_100018550(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

NSMutableArray *sub_100018568(uint64_t a1)
{
  uint64_t v1 = -[NSMutableArray initWithCapacity:](objc_alloc(&OBJC_CLASS___NSMutableArray), "initWithCapacity:", 4LL);
  v54[0] = 0LL;
  v54[1] = 0LL;
  uint64_t v53 = v54;
  unsigned __int8 v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 4LL));
  double v2 = sub_1001CD82C();
  int v47 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = *(void **)(a1 + 216);
  if (v4 != (void *)(a1 + 224))
  {
    *(void *)&__int128 v3 = 67109120LL;
    __int128 v44 = v3;
    do
    {
      uint64_t v50 = 0LL;
      uint64_t v51 = 0LL;
      uint64_t v52 = 0LL;
      unint64_t v5 = v4[4];
      sub_10001EF3C(&v50, v4[5], v4[6], 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v4[6] - v4[5]) >> 3));
      if (v51 == v50)
      {
        uint64_t v7 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_10038A240(v67, v5, &v68, v7);
        }
        goto LABEL_45;
      }

      if (-[NSMutableArray count](v1, "count") == (id)4)
      {
        uint64_t v6 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_10038A2E8(v65, v66, v6);
        }
        goto LABEL_45;
      }

      sub_10001D378((uint64_t)v57, v50);
      uint64_t v8 = v50;
      uint64_t v9 = v51;
      while (v8 != v9)
      {
        id v10 = sub_10003AD54(v8);
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
        id v12 = sub_10003AD54((uint64_t)v57);
        int v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
        BOOL v14 = v11 > v13;

        if (v14) {
          sub_100019E9C((uint64_t)v57, v8);
        }
        v8 += 168LL;
      }

      id v15 = sub_10003AD44((id *)v57);
      CFIndex v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
      id v17 = [v16 copy];

      id v18 = sub_10003AD4C((uint64_t)v57);
      __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
      id v20 = [v19 copy];

      id v21 = sub_10003AD54((uint64_t)v57);
      uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
      id v23 = [v22 copy];

      id v24 = sub_10003AD74((uint64_t)v57);
      int v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
      id v26 = [v25 copy];

      uint64_t v27 = (os_log_s *)qword_1008000A0;
      if (v17 && v20 && v23)
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)pthread_attr_t buf = 138412290;
          id v56 = v26;
          _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,peer mac addr: %@",  buf,  0xCu);
        }

        uint64_t v28 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)pthread_attr_t buf = 138412290;
          id v56 = v17;
          _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,array of peers ranging ID %@",  buf,  0xCu);
        }

        uint64_t v29 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
        -[NSMutableDictionary setValue:forKey:](v29, "setValue:forKey:", v26, @"STATION_MAC");
        -[NSMutableDictionary setValue:forKey:](v29, "setValue:forKey:", v17, @"RANGING_TOKEN_ID");
        -[NSMutableDictionary setValue:forKey:](v29, "setValue:forKey:", v20, @"RANGING_PMK");
        -[NSMutableDictionary setValue:forKey:](v29, "setValue:forKey:", v23, @"RANGING_NUM_MEASUREMENTS");
        uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 1LL));
        -[NSMutableDictionary setValue:forKey:]( v29,  "setValue:forKey:",  v30,  @"APPLE80211KEY_AWDL_INFO_ASSISTED_DISCOVERY_FOLLOW");

        if (([v47 hasPrefix:@"iPhone"] & 1) != 0
          || [v47 hasPrefix:@"RealityDevice"])
        {
          -[NSMutableDictionary setValue:forKey:](v29, "setValue:forKey:", v46, @"RANGING_CORE_MASK", v44);
        }

        id v31 = -[NSMutableDictionary copy](v29, "copy", v44);
        -[NSMutableArray addObject:](v1, "addObject:", v31);

        uint64_t v32 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          int v33 = *(unsigned __int8 *)(a1 + 48);
          *(_DWORD *)pthread_attr_t buf = v44;
          LODWORD(v56) = v33;
          _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,follow mode for peer dict: %i",  buf,  8u);
        }
      }

      else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
      {
        sub_10038A330(&v48, v49);
      }

      uint64_t v34 = v63;
      if (v63 == v62)
      {
        uint64_t v34 = v62;
        uint64_t v35 = 4LL;
      }

      else
      {
        if (!v63) {
          goto LABEL_34;
        }
        uint64_t v35 = 5LL;
      }

      (*(void (**)(void))(*v34 + 8 * v35))();
LABEL_34:
      uint64_t v36 = v61;
      if (v61 == v60)
      {
        uint64_t v36 = v60;
        uint64_t v37 = 4LL;
      }

      else
      {
        if (!v61) {
          goto LABEL_39;
        }
        uint64_t v37 = 5LL;
      }

      (*(void (**)(void))(*v36 + 8 * v37))();
LABEL_39:
      uint64_t v38 = v59;
      if (v59 == v58)
      {
        uint64_t v38 = v58;
        uint64_t v39 = 4LL;
        goto LABEL_43;
      }

      if (v59)
      {
        uint64_t v39 = 5LL;
LABEL_43:
        (*(void (**)(void))(*v38 + 8 * v39))();
      }

LABEL_45:
      v57[0] = (void **)&v50;
      sub_10001F250(v57);
      unint64_t v40 = (void *)v4[1];
      if (v40)
      {
        do
        {
          uint64_t v41 = v40;
          unint64_t v40 = (void *)*v40;
        }

        while (v40);
      }

      else
      {
        do
        {
          uint64_t v41 = (void *)v4[2];
          BOOL v42 = *v41 == (void)v4;
          uint64_t v4 = v41;
        }

        while (!v42);
      }

      uint64_t v4 = v41;
    }

    while (v41 != (void *)(a1 + 224));
  }

  sub_10001EE50((uint64_t)&v53, v54[0]);
  return v1;
}

void sub_100018B20( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, char a28, char *a29)
{
  sub_10001EE50((uint64_t)&a28, a29);
  _Unwind_Resume(a1);
}

uint64_t sub_100018C24(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (!result)
  {
    uint64_t result = sub_1000161D8(a1);
    if (result)
    {
      __int128 v3 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
      {
        LOWORD(v14) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "#wifi-service,Calling WiFiManagerClientCopyInterfaces for device interface",  (uint8_t *)&v14,  2u);
      }

      uint64_t v4 = sub_1000161D8(a1);
      unint64_t v5 = (const __CFArray *)WiFiManagerClientCopyInterfaces(v4);
      if (v5)
      {
        uint64_t v6 = v5;
        CFIndex Count = CFArrayGetCount(v5);
        if (Count >= 1)
        {
          CFIndex v8 = Count;
          CFIndex v9 = 0LL;
          while (1)
          {
            ValueAtIndex = CFArrayGetValueAtIndex(v6, v9);
            if (ValueAtIndex)
            {
              uint64_t v11 = ValueAtIndex;
              id v12 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
              {
                LOWORD(v14) = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "#wifi-service,Calling WiFiDeviceClientGetInterfaceRoleIndex",  (uint8_t *)&v14,  2u);
              }

              if (!WiFiDeviceClientGetInterfaceRoleIndex(v11)) {
                break;
              }
            }

            if (v8 == ++v9) {
              goto LABEL_21;
            }
          }

          int v13 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
          {
            int v14 = 138412290;
            id v15 = v11;
            _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "#wifi-service,WiFiDeviceClientGetInterfaceRoleIndex is main interface, device, %@",  (uint8_t *)&v14,  0xCu);
          }

          *(void *)(a1 + 24) = v11;
          CFRetain(v11);
        }

uint64_t sub_100018E50(uint64_t a1)
{
  return sub_1000178D8(*(void *)(a1 + 32));
}

void *sub_100018E58(uint64_t a1, uint64_t *a2)
{
  return sub_100018E60((void *)(a1 + 64), a2);
}

void *sub_100018E60(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  if (v3)
  {
    unint64_t v5 = (unint64_t *)(v3 + 8);
    do
      unint64_t v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }

  uint64_t v7 = (std::__shared_weak_count *)a1[1];
  *a1 = v4;
  a1[1] = v3;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }

  return a1;
}

void sub_100018ED8(uint64_t a1, int a2)
{
  if (!*(_BYTE *)(a1 + 408))
  {
    CFIndex v8 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_10038A3B4(v8, v9, v10, v11, v12, v13, v14, v15);
    }
    return;
  }

  uint64_t v3 = (id *)(a1 + 240);
  sub_10003AD90(a1 + 240, (uint64_t)v27);
  if (!v28)
  {
    CFIndex v16 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      id v17 = sub_10003AD44(v3);
      id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
      sub_10038A424(v18, (uint64_t)&v22, v16);
    }

    goto LABEL_18;
  }

  id v4 = sub_10003AD64((uint64_t)v3);
  unint64_t v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v4);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768LL;
  block[2] = sub_10001910C;
  block[3] = &unk_1007A23B8;
  unint64_t v6 = v24;
  uint64_t v7 = (uint64_t)v28;
  if (!v28) {
    goto LABEL_6;
  }
  if (v28 != v27)
  {
    uint64_t v7 = (*(uint64_t (**)(void *))(*v28 + 16LL))(v28);
LABEL_6:
    int v25 = (_BYTE *)v7;
    goto LABEL_13;
  }

  int v25 = v24;
  (*(void (**)(void *, _BYTE *))(v27[0] + 24LL))(v27, v24);
LABEL_13:
  int v26 = a2;
  dispatch_async(v5, block);

  if (v25 == v24)
  {
    uint64_t v19 = 4LL;
    goto LABEL_17;
  }

  if (v25)
  {
    uint64_t v19 = 5LL;
    unint64_t v6 = v25;
LABEL_17:
    (*(void (**)(void *))(*v6 + 8 * v19))(v6);
  }

LABEL_18:
  id v20 = v28;
  if (v28 == v27)
  {
    uint64_t v21 = 4LL;
    id v20 = v27;
  }

  else
  {
    if (!v28) {
      return;
    }
    uint64_t v21 = 5LL;
  }

  (*(void (**)(void))(*v20 + 8 * v21))();
}

  if (v10 < 0) {
    operator delete(__p[0]);
  }
  if (v12 < 0) {
    operator delete(v11[0]);
  }
LABEL_22:
}

  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }

  uint64_t v14 = *(void *)(a1 + 32);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_100800100 + 32);
  }
  uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10004D798(v14, a2);
  CFIndex v16 = (int)v15;
  else {
    id v17 = 1;
  }
  v4 += v16 + v17 + 1;
  uint64_t v3 = *(_DWORD *)(a1 + 80);
  if ((v3 & 8) != 0)
  {
LABEL_27:
    id v18 = *(void *)(a1 + 40);
    if (!v18) {
      id v18 = *(void *)(qword_100800100 + 40);
    }
    uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10004C7A0(v18, a2);
    id v20 = (int)v19;
    else {
      uint64_t v21 = 1;
    }
    v4 += v20 + v21 + 1;
    uint64_t v3 = *(_DWORD *)(a1 + 80);
  }

  if (*((int *)this + 20) >= 1)
  {
    uint64_t v15 = 0LL;
    do
    {
      CFIndex v16 = *(void *)(*((void *)this + 9) + 8 * v15);
      *(_BYTE *)id v4 = 41;
      *(void *)((char *)v4 + 1) = v16;
      id v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
      ++v15;
    }

    while (v15 < *((int *)this + 20));
  }

  if ((*((_BYTE *)this + 284) & 0x20) != 0)
  {
    id v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 11);
    *(_BYTE *)id v4 = 48;
    id v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v17,  (unint64_t)v4 + 1,  a3);
  }

  if (*((int *)this + 26) >= 1)
  {
    id v18 = 0LL;
    do
    {
      uint64_t v19 = *(_DWORD *)(*((void *)this + 12) + 4 * v18);
      *(_BYTE *)id v4 = 61;
      *(_DWORD *)((char *)v4 + 1) = v19;
      id v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
      ++v18;
    }

    while (v18 < *((int *)this + 26));
  }

  id v20 = *((_DWORD *)this + 71);
  if ((v20 & 0x80) != 0)
  {
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 14);
    *(_BYTE *)id v4 = 64;
    id v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v21,  (unint64_t)v4 + 1,  a3);
    id v20 = *((_DWORD *)this + 71);
  }

  if ((v20 & 0x100) != 0)
  {
    uint64_t v22 = *((void *)this + 15);
    *(_BYTE *)id v4 = 74;
    else {
      id v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v22 + 23);
    }
    if (v23 > 0x7F)
    {
      id v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v23,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v23;
      id v24 = (_DWORD)v4 + 2;
    }

    int v25 = *(char *)(v22 + 23);
    if (v25 >= 0) {
      int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v22;
    }
    else {
      int v26 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v22;
    }
    if (v25 >= 0) {
      uint64_t v27 = (const void *)*(unsigned __int8 *)(v22 + 23);
    }
    else {
      uint64_t v27 = (const void *)*(unsigned int *)(v22 + 8);
    }
    id v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v26,  v27,  v24,  a4);
  }

  if (*((int *)this + 34) >= 1)
  {
    uint64_t v28 = 0LL;
    while (1)
    {
      uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 16) + 4 * v28);
      *(_BYTE *)id v4 = 80;
      uint64_t v30 = (unint64_t)v4 + 1;
      if (v29 > 0x7F)
      {
        id v31 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v29,  v30,  a3);
        goto LABEL_49;
      }

      *((_BYTE *)v4 + 1) = (_BYTE)v29;
      id v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_50:
    }

    id v31 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v29,  v30,  a3);
LABEL_49:
    id v4 = v31;
    goto LABEL_50;
  }

    if (v9 == 4) {
      return 1LL;
    }
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 24),  a2,  a4);
  unint64_t v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }

  uint64_t v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v3;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v3;
  return v3;
}

  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1008001D0 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v10,  a2,  a4);
  unint64_t v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }

  uint64_t v14 = (unsigned int *)*((void *)this + 4);
  if (!v14) {
    uint64_t v14 = *(unsigned int **)(qword_1008001D0 + 32);
  }
  *(_BYTE *)id v4 = 26;
  uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[8];
  if (v15 > 0x7F)
  {
    CFIndex v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v15;
    CFIndex v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  id v4 = sub_1000668B0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v16, a3);
  unint64_t v6 = *((_DWORD *)this + 24);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_37;
  }

    uint64_t v11 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 116) |= 0x20u;
    *(void *)(a1 + 56) = v11;
    unint64_t v5 = *(_DWORD *)(a2 + 116);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_23;
      }
      goto LABEL_20;
    }

  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 32);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_100800158 + 32);
    }
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A9D54(v13, a2);
    uint64_t v15 = (int)v14;
    else {
      CFIndex v16 = 1;
    }
    id v4 = (v4 + v15 + v16 + 1);
    uint64_t v3 = *(_DWORD *)(a1 + 392);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }

  id v17 = *(void *)(a1 + 40);
  if (!v17) {
    id v17 = *(void *)(qword_100800158 + 40);
  }
  id v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000AA5AC(v17, a2);
  uint64_t v19 = (int)v18;
  else {
    id v20 = 1;
  }
  id v4 = (v4 + v19 + v20 + 1);
  uint64_t v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }

  if ((v3 & 4) != 0)
  {
    uint64_t v9 = *(void *)(a1 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1008001F0 + 24);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100080B84(v9, a2);
    uint64_t v11 = (int)v10;
    else {
      uint64_t v12 = 1;
    }
    id v4 = (v4 + v11 + v12 + 1);
    uint64_t v3 = *(_DWORD *)(a1 + 252);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }

  uint64_t v13 = *(void *)(a1 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1008001F0 + 32);
  }
  uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000819B8(v13, a2);
  uint64_t v15 = (int)v14;
  else {
    CFIndex v16 = 1;
  }
  id v4 = (v4 + v15 + v16 + 1);
  uint64_t v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }

  uint64_t v11 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 68) |= 8u;
  *(_DWORD *)(a1 + 40) = v11;
  unint64_t v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }

    if (v10 == 4) {
      return 1LL;
    }
  }

      if (v9 == 4) {
        return 1LL;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField( this,  TagFallback,  v6,  a4) & 1) == 0) {
        return 0LL;
      }
    }

    uint64_t v9 = TagFallback & 7;
    if (v9 != 2) {
      goto LABEL_18;
    }
    *(_DWORD *)(a1 + 32) |= 1u;
    uint64_t v12 = *(void **)(a1 + 16);
    if (!v12)
    {
      uint64_t v12 = operator new(0x28uLL);
      sub_10007F6B8((uint64_t)v12);
      *(void *)(a1 + 16) = v12;
    }

    uint64_t v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
    }

    else
    {
      int v26 = *v13;
      *((void *)this + 1) = v13 + 1;
    }

    uint64_t v14 = *((_DWORD *)this + 14);
    uint64_t v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0LL;
    }
    CFIndex v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    uint64_t v19 = *((_DWORD *)this + 14);
    id v20 = __OFSUB__(v19, 1);
    uint64_t v21 = v19 - 1;
    if (v21 < 0 == v20) {
      *((_DWORD *)this + 14) = v21;
    }
    uint64_t v22 = (_BYTE *)*((void *)this + 1);
    uint64_t v10 = *((void *)this + 2);
    if ((unint64_t)v22 < v10 && *v22 == 16)
    {
      uint64_t v11 = v22 + 1;
      *((void *)this + 1) = v11;
LABEL_30:
      if ((unint64_t)v11 >= v10 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if (!(_DWORD)result) {
          return result;
        }
        id v23 = v25;
      }

      else
      {
        id v23 = *v11;
        *((void *)this + 1) = v11 + 1;
      }

      if (v23 > 1)
      {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, (int)v23);
      }

      else
      {
        *(_DWORD *)(a1 + 32) |= 2u;
        *(_DWORD *)(a1 + 24) = v23;
      }

      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
  }

  uint64_t v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v3;
  *(_DWORD *)(a1 + 28) = v3;
  return v3;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v4 + 56),  a3);
  if ((*(_DWORD *)(v4 + 76) & 0x40) != 0) {
LABEL_8:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(double *)(v4 + 64),  a3);
LABEL_9:
  CFIndex v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unint64_t v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 32),  (int)a2,  a4);
  unint64_t v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }

  if ((v3 & 4) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24),  (unint64_t)a2)
        + 1;
    uint64_t v3 = *(_DWORD *)(a1 + 468);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_30;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }

  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v11 >= 0x80)
  {
    uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    uint64_t v3 = *(_DWORD *)(a1 + 468);
  }

  else
  {
    uint64_t v12 = 1;
  }

  v4 += v12 + 1;
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_34;
  }

      if (v9 == 4) {
        return 1LL;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField( this,  TagFallback,  v6,  a4) & 1) == 0) {
        return 0LL;
      }
    }

    uint64_t v9 = TagFallback & 7;
    if (v9 != 2) {
      goto LABEL_18;
    }
    *(_DWORD *)(a1 + 32) |= 1u;
    uint64_t v12 = *(void **)(a1 + 16);
    if (!v12)
    {
      uint64_t v12 = operator new(0x28uLL);
      sub_10007FF40((uint64_t)v12);
      *(void *)(a1 + 16) = v12;
    }

    uint64_t v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
    }

    else
    {
      int v26 = *v13;
      *((void *)this + 1) = v13 + 1;
    }

    uint64_t v14 = *((_DWORD *)this + 14);
    uint64_t v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0LL;
    }
    CFIndex v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    uint64_t v19 = *((_DWORD *)this + 14);
    id v20 = __OFSUB__(v19, 1);
    uint64_t v21 = v19 - 1;
    if (v21 < 0 == v20) {
      *((_DWORD *)this + 14) = v21;
    }
    uint64_t v22 = (_BYTE *)*((void *)this + 1);
    uint64_t v10 = *((void *)this + 2);
    if ((unint64_t)v22 < v10 && *v22 == 16)
    {
      uint64_t v11 = v22 + 1;
      *((void *)this + 1) = v11;
LABEL_30:
      if ((unint64_t)v11 >= v10 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if (!(_DWORD)result) {
          return result;
        }
        id v23 = v25;
      }

      else
      {
        id v23 = *v11;
        *((void *)this + 1) = v11 + 1;
      }

      if (sub_10007560C(v23))
      {
        *(_DWORD *)(a1 + 32) |= 2u;
        *(_DWORD *)(a1 + 24) = v23;
      }

      else
      {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, v23);
      }

      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
  }

  uint64_t v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v3;
  *(_DWORD *)(a1 + 28) = v3;
  return v3;
}

  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_20;
    }
LABEL_26:
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
    if (v13 >= 0x80)
    {
      uint64_t v3 = *(_DWORD *)(a1 + 96);
    }

    else
    {
      uint64_t v14 = 2;
    }

    v4 += v14;
    if ((v3 & 0x10) == 0) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }

  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v11 >= 0x80)
  {
    uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    uint64_t v3 = *(_DWORD *)(a1 + 96);
  }

  else
  {
    uint64_t v12 = 2;
  }

  v4 += v12;
  if ((v3 & 8) != 0) {
    goto LABEL_26;
  }
LABEL_20:
  if ((v3 & 0x10) == 0) {
    goto LABEL_39;
  }
LABEL_30:
  uint64_t v15 = *(void *)(a1 + 32);
  CFIndex v16 = *(unsigned __int8 *)(v15 + 23);
  id v17 = v16;
  id v18 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v19 = *(unsigned __int8 *)(v15 + 23);
  }
  else {
    uint64_t v19 = v18;
  }
  if (v19 >= 0x80)
  {
    id v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19,  a2);
    CFIndex v16 = *(unsigned __int8 *)(v15 + 23);
    id v18 = *(void *)(v15 + 8);
    id v17 = *(_BYTE *)(v15 + 23);
  }

  else
  {
    id v20 = 1;
  }

  if (v17 < 0) {
    CFIndex v16 = v18;
  }
  v4 += v20 + v16 + 1;
LABEL_39:
  uint64_t v21 = *(_DWORD *)(a1 + 48);
  uint64_t v22 = v21 + v4;
  if (v21 >= 1)
  {
    id v23 = 0LL;
    do
    {
      id v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000934F0( *(void *)(*(void *)(a1 + 40) + 8 * v23),  a2);
      int v25 = (int)v24;
      else {
        int v26 = 1;
      }
      v22 += v25 + v26;
      ++v23;
    }

    while (v23 < *(int *)(a1 + 48));
  }

  uint64_t v27 = *(_DWORD *)(a1 + 72);
  uint64_t v28 = (v22 + 2 * v27);
  if (v27 >= 1)
  {
    uint64_t v29 = 0LL;
    do
    {
      uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100092170( *(void *)(*(void *)(a1 + 64) + 8 * v29),  a2);
      id v31 = (int)v30;
      else {
        uint64_t v32 = 1;
      }
      uint64_t v28 = (v31 + v28 + v32);
      ++v29;
    }

    while (v29 < *(int *)(a1 + 72));
  }

  int v33 = *(void **)(a1 + 8);
  if (v33 && *v33 != v33[1]) {
    uint64_t v28 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v28;
  *(_DWORD *)(a1 + 92) = v28;
  return v28;
}

  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_20;
    }
LABEL_26:
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
    if (v14 >= 0x80)
    {
      uint64_t v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
      uint64_t v3 = *(_DWORD *)(a1 + 300);
    }

    else
    {
      uint64_t v15 = 1;
    }

    v4 += v15 + 1;
    if ((v3 & 0x10) == 0) {
      goto LABEL_39;
    }
LABEL_30:
    CFIndex v16 = *(void *)(a1 + 32);
    id v17 = *(unsigned __int8 *)(v16 + 23);
    id v18 = v17;
    uint64_t v19 = *(void *)(v16 + 8);
    if ((v17 & 0x80u) == 0) {
      id v20 = *(unsigned __int8 *)(v16 + 23);
    }
    else {
      id v20 = v19;
    }
    if (v20 >= 0x80)
    {
      uint64_t v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20,  a2);
      id v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v19 = *(void *)(v16 + 8);
      uint64_t v3 = *(_DWORD *)(a1 + 300);
      id v18 = *(_BYTE *)(v16 + 23);
    }

    else
    {
      uint64_t v21 = 1;
    }

    if (v18 < 0) {
      id v17 = v19;
    }
    v4 += v21 + v17 + 1;
    goto LABEL_39;
  }

  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v12 >= 0x80)
  {
    uint64_t v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
    uint64_t v3 = *(_DWORD *)(a1 + 300);
  }

  else
  {
    uint64_t v13 = 1;
  }

  v4 += v13 + 1;
  if ((v3 & 8) != 0) {
    goto LABEL_26;
  }
LABEL_20:
  if ((v3 & 0x10) != 0) {
    goto LABEL_30;
  }
LABEL_39:
  uint64_t v22 = v4 + 9;
  if ((v3 & 0x20) == 0) {
    uint64_t v22 = v4;
  }
  if ((v3 & 0x40) != 0) {
    v22 += 9;
  }
  if ((v3 & 0x80) != 0) {
    unint64_t v5 = v22 + 9;
  }
  else {
    unint64_t v5 = v22;
  }
LABEL_46:
  if ((v3 & 0xFF00) != 0)
  {
    id v23 = v5 + 9;
    if ((v3 & 0x100) == 0) {
      id v23 = v5;
    }
    if ((v3 & 0x200) != 0) {
      v23 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v23 += 9;
    }
    if ((v3 & 0x800) != 0) {
      v23 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      v23 += 9;
    }
    if ((v3 & 0x2000) != 0) {
      v23 += 9;
    }
    if ((v3 & 0x4000) != 0) {
      v23 += 9;
    }
    if ((v3 & 0x8000) != 0) {
      unint64_t v5 = v23 + 10;
    }
    else {
      unint64_t v5 = v23;
    }
  }

  if ((v3 & 0xFF0000) != 0)
  {
    id v24 = v5 + 10;
    if ((v3 & 0x10000) == 0) {
      id v24 = v5;
    }
    if ((v3 & 0x20000) != 0) {
      v24 += 10;
    }
    if ((v3 & 0x40000) != 0) {
      v24 += 10;
    }
    if ((v3 & 0x80000) != 0) {
      v24 += 10;
    }
    if ((v3 & 0x100000) != 0) {
      v24 += 10;
    }
    if ((v3 & 0x200000) != 0) {
      v24 += 10;
    }
    if ((v3 & 0x400000) != 0) {
      v24 += 10;
    }
    if ((v3 & 0x800000) != 0) {
      unint64_t v5 = v24 + 10;
    }
    else {
      unint64_t v5 = v24;
    }
  }

  if (HIBYTE(v3))
  {
    int v25 = v5 + 10;
    if ((v3 & 0x1000000) == 0) {
      int v25 = v5;
    }
    if ((v3 & 0x2000000) != 0) {
      v25 += 10;
    }
    if ((v3 & 0x4000000) != 0) {
      unint64_t v5 = v25 + 10;
    }
    else {
      unint64_t v5 = v25;
    }
    if ((v3 & 0x8000000) != 0)
    {
      uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 124);
      if (v29 >= 0x80)
      {
        uint64_t v3 = *(_DWORD *)(a1 + 300);
      }

      else
      {
        uint64_t v30 = 3;
      }

      unint64_t v5 = (v30 + v5);
      if ((v3 & 0x10000000) == 0)
      {
LABEL_92:
        if ((v3 & 0x20000000) == 0) {
          goto LABEL_93;
        }
        goto LABEL_116;
      }
    }

    else if ((v3 & 0x10000000) == 0)
    {
      goto LABEL_92;
    }

    unint64_t v5 = v5
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 224),  (unint64_t)a2)
       + 2;
    uint64_t v3 = *(_DWORD *)(a1 + 300);
    if ((v3 & 0x20000000) == 0)
    {
LABEL_93:
      if ((v3 & 0x40000000) == 0) {
        goto LABEL_94;
      }
      goto LABEL_117;
    }

  uint64_t v10 = *(void *)(a1 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1008002E0 + 32);
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10007FCCC(v10, a2);
  uint64_t v12 = (int)v11;
  else {
    uint64_t v13 = 1;
  }
  v4 += v12 + v13 + 1;
  uint64_t v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_32;
    }
    goto LABEL_28;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 40),  a2,  a4);
  unint64_t v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(void *)(v5 + 32),  (unint64_t)a2,  a4);
  unint64_t v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }

  if ((v3 & 4) != 0)
  {
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v11 >= 0x80)
    {
      uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      uint64_t v3 = *(_DWORD *)(a1 + 88);
    }

    else
    {
      uint64_t v12 = 1;
    }

    id v4 = (v4 + v12 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_33;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }

  uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v13 >= 0x80)
  {
    uint64_t v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    uint64_t v3 = *(_DWORD *)(a1 + 88);
  }

  else
  {
    uint64_t v14 = 1;
  }

  id v4 = (v4 + v14 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_37;
  }

  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 32);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_100800340 + 32);
    }
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000BAEF8(v13, a2);
    uint64_t v15 = (int)v14;
    else {
      CFIndex v16 = 1;
    }
    id v4 = (v4 + v15 + v16 + 1);
  }

    if (v9 == 4) {
      return 1LL;
    }
  }

    if (v9 == 4) {
      return 1LL;
    }
  }

  uint64_t v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v3;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v3;
  return v3;
}

  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 32);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_1008003D0 + 32);
    }
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000A6E84(v13, a2);
    uint64_t v15 = (int)v14;
    else {
      CFIndex v16 = 1;
    }
    id v4 = (v4 + v15 + v16 + 2);
  }

  uint64_t v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v3;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v3;
  return v3;
}

    if (v9 == 4) {
      return 1LL;
    }
  }

  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 32);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_100800498 + 32);
    }
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000D6C10(v13, a2);
    uint64_t v15 = (int)v14;
    else {
      CFIndex v16 = 1;
    }
    id v4 = (v4 + v15 + v16 + 1);
    uint64_t v3 = *(_DWORD *)(a1 + 148);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }

  id v17 = *(void *)(a1 + 40);
  if (!v17) {
    id v17 = *(void *)(qword_100800498 + 40);
  }
  id v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000D5F28(v17, a2);
  uint64_t v19 = (int)v18;
  else {
    id v20 = 1;
  }
  id v4 = (v4 + v19 + v20 + 1);
  uint64_t v3 = *(_DWORD *)(a1 + 148);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 32),  (int)a2,  a4);
  unint64_t v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 32),  a3);
  unint64_t v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(void *)(v5 + 48),  (unint64_t)a2,  a4);
  unint64_t v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x80) != 0) {
    goto LABEL_19;
  }
LABEL_8:
  if ((v6 & 0x40) != 0) {
    goto LABEL_20;
  }
LABEL_24:
  uint64_t v13 = *(void **)(v5 + 8);
  uint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v11 = v13;
  if (v13)
  {
    if (*v11 != v11[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v12, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 80),  a2,  a4);
  unint64_t v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(float *)(v5 + 64),  a3);
  unint64_t v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }

  uint64_t v11 = *((_DWORD *)this + 16);
  *(_BYTE *)a2 = 61;
  *(_DWORD *)(a2 + 1) = v11;
  a2 += 5LL;
  id v4 = *((_DWORD *)this + 18);
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 6);
    *(_BYTE *)a2 = 72;
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, a2 + 1, a3);
    if ((*((_DWORD *)this + 18) & 0x200) == 0) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }

  uint64_t v11 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 88) |= 8u;
  *(void *)(a1 + sub_100012358(v1 - 32) = v11;
  unint64_t v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    *(_DWORD *)(a1 + 88) |= 0x20u;
    uint64_t v13 = *(void **)(a1 + 48);
    if (!v13)
    {
      uint64_t v13 = operator new(0x30uLL);
      sub_1000E69AC((uint64_t)v13);
      *(void *)(a1 + 48) = v13;
    }

    uint64_t v14 = *(void *)(a2 + 48);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_100800590 + 48);
    }
    sub_1000E69F8((uint64_t)v13, v14);
    unint64_t v5 = *(_DWORD *)(a2 + 88);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_12;
      }
LABEL_30:
      *(_DWORD *)(a1 + 88) |= 0x80u;
      id v17 = *(void **)(a1 + 64);
      if (!v17)
      {
        id v17 = operator new(0x30uLL);
        sub_1000E69AC((uint64_t)v17);
        *(void *)(a1 + 64) = v17;
      }

      id v18 = *(void *)(a2 + 64);
      if (!v18) {
        id v18 = *(void *)(qword_100800590 + 64);
      }
      sub_1000E69F8((uint64_t)v17, v18);
      if ((*(_DWORD *)(a2 + 88) & 0x100) != 0) {
        goto LABEL_13;
      }
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }

    goto LABEL_25;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 32),  a3);
  unint64_t v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }

  uint64_t v12 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 52) |= 0x10u;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v12;
  unint64_t v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0) {
      goto LABEL_11;
    }
LABEL_20:
    uint64_t v14 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 0x40u;
    *(_DWORD *)(a1 + 40) = v14;
    if ((*(_DWORD *)(a2 + 52) & 0x80) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_12;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(float *)(v5 + 32),  a3);
  unint64_t v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }

  uint64_t v13 = *(_DWORD *)(a1 + 32);
  *(_BYTE *)a2 = 45;
  *(_DWORD *)(a2 + 1) = v13;
  a2 += 5LL;
  uint64_t v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_20:
    uint64_t v15 = *(_DWORD *)(a1 + 40);
    *(_BYTE *)a2 = 61;
    *(_DWORD *)(a2 + 1) = v15;
    a2 += 5LL;
    if ((*(_DWORD *)(a1 + 52) & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }

  uint64_t v12 = *((_DWORD *)this + 18);
  if ((v12 & 0x20) != 0)
  {
    uint64_t v13 = *((_BYTE *)this + 36);
    *(_BYTE *)uint64_t v3 = 48;
    *((_BYTE *)v3 + 1) = v13;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    uint64_t v12 = *((_DWORD *)this + 18);
    if ((v12 & 0x40) == 0)
    {
LABEL_20:
      if ((v12 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_25;
    }
  }

  else if ((v12 & 0x40) == 0)
  {
    goto LABEL_20;
  }

  uint64_t v14 = *((_BYTE *)this + 37);
  *(_BYTE *)uint64_t v3 = 56;
  *((_BYTE *)v3 + 1) = v14;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  uint64_t v12 = *((_DWORD *)this + 18);
  if ((v12 & 0x80) == 0)
  {
LABEL_21:
    if ((v12 & 0x100) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }

    if (v12 == 4) {
      return 1LL;
    }
  }

  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 32);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_1008005E0 + 32);
    }
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000EF01C(v13, a2);
    uint64_t v15 = (int)v14;
    else {
      CFIndex v16 = 1;
    }
    id v4 = (v4 + v15 + v16 + 1);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 48),  (int)a2,  a4);
  unint64_t v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 32),  a3);
  unint64_t v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(unsigned __int8 *)(v5 + 32),  (BOOL)a2,  a4);
  unint64_t v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }

  uint64_t v14 = *((_BYTE *)this + 37);
  *(_BYTE *)id v4 = 64;
  *((_BYTE *)v4 + 1) = v14;
  id v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  if ((*((_DWORD *)this + 14) & 0x100) == 0) {
    goto LABEL_25;
  }
LABEL_19:
  uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 12);
  *(_BYTE *)id v4 = 72;
  CFIndex v16 = (unint64_t)v4 + 1;
  if ((v15 & 0x80000000) != 0)
  {
    id v17 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v15,  v16,  a3);
  }

  else
  {
    if (v15 <= 0x7F)
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v15;
      id v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_25;
    }

    id v17 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  v16,  a3);
  }

  id v4 = v17;
LABEL_25:
  if ((*((_BYTE *)this + 57) & 2) != 0)
  {
    id v18 = *((void *)this + 5);
    *(_BYTE *)id v4 = 82;
    else {
      uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v18 + 23);
    }
    if (v19 > 0x7F)
    {
      id v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v19,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v19;
      id v20 = (_DWORD)v4 + 2;
    }

    uint64_t v21 = *(char *)(v18 + 23);
    if (v21 >= 0) {
      uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18;
    }
    else {
      uint64_t v22 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v18;
    }
    if (v21 >= 0) {
      id v23 = (const void *)*(unsigned __int8 *)(v18 + 23);
    }
    else {
      id v23 = (const void *)*(unsigned int *)(v18 + 8);
    }
    id v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v22,  v23,  v20,  a4);
  }

  int v26 = (void *)*((void *)this + 1);
  int v25 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  id v24 = v26;
  if (!v26 || *v24 == v24[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v25,  v4,  a3);
  }
}

  if ((v5 & 0xFF00) == 0) {
    goto LABEL_27;
  }
  if ((v5 & 0x100) != 0)
  {
    uint64_t v9 = *(void *)(a2 + 80);
    *(_DWORD *)(a1 + 140) |= 0x100u;
    *(void *)(a1 + 80) = v9;
    unint64_t v5 = *(_DWORD *)(a2 + 140);
    if ((v5 & 0x200) == 0)
    {
LABEL_21:
      if ((v5 & 0x400) == 0) {
        goto LABEL_22;
      }
      goto LABEL_31;
    }
  }

  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_21;
  }

  uint64_t v10 = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 140) |= 0x200u;
  *(void *)(a1 + 88) = v10;
  unint64_t v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 0x400) == 0)
  {
LABEL_22:
    if ((v5 & 0x800) == 0) {
      goto LABEL_23;
    }
    goto LABEL_32;
  }

  uint64_t v11 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 64) |= 8u;
  *(void *)(a1 + sub_100012358(v1 - 32) = v11;
  unint64_t v5 = *(_DWORD *)(a2 + 64);
  if ((v5 & 0x10) == 0)
  {
LABEL_11:
    if ((v5 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 40),  a3);
  unint64_t v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + 24) = v13;
    *(_DWORD *)(a1 + 36) |= 2u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 56),  (int)a2,  a4);
  if ((*(_DWORD *)(v5 + 68) & 0x40) != 0) {
LABEL_8:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 60),  (int)a2,  a4);
LABEL_9:
  uint64_t v9 = *(void **)(v5 + 8);
  CFIndex v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  uint64_t v11 = *(void **)(a1 + 8);
  if (v11 && *v11 != v11[1]) {
    id v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

  uint64_t v15 = *(void **)(a1 + 32);
  if (v15 && *v15 != v15[1]) {
    uint64_t v14 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 32),  v13)
  }
        + v14;
  *(_DWORD *)(a1 + 56) = v14;
  return v14;
}

  if ((v3 & 4) != 0) {
    id v4 = (v4 + 9);
  }
  else {
    id v4 = v4;
  }
LABEL_21:
  uint64_t v11 = *(void **)(a1 + 8);
  if (v11 && *v11 != v11[1]) {
    id v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

  uint64_t v12 = *(_DWORD *)(a1 + 40);
  uint64_t v13 = (v12 + v3);
  if (v12 >= 1)
  {
    uint64_t v14 = 0LL;
    do
    {
      uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100115BFC( *(void *)(*(void *)(a1 + 32) + 8 * v14),  a2);
      CFIndex v16 = (int)v15;
      else {
        id v17 = 1;
      }
      uint64_t v13 = (v16 + v13 + v17);
      ++v14;
    }

    while (v14 < *(int *)(a1 + 40));
  }

  id v18 = *(void **)(a1 + 8);
  if (v18 && *v18 != v18[1]) {
    uint64_t v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v13;
  *(_DWORD *)(a1 + 56) = v13;
  return v13;
}

  if ((v3 & 8) != 0)
  {
    uint64_t v13 = *(_DWORD **)(a1 + 56);
    if (!v13) {
      uint64_t v13 = *(_DWORD **)(qword_100800700 + 56);
    }
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100113F18(v13, a2);
    uint64_t v15 = (int)v14;
    else {
      CFIndex v16 = 1;
    }
    v4 += v15 + v16 + 1;
  }

  uint64_t v13 = (unsigned int *)*((void *)this + 4);
  if (!v13) {
    uint64_t v13 = *(unsigned int **)(qword_100800710 + 32);
  }
  *(_BYTE *)uint64_t v3 = 26;
  uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[12];
  if (v14 > 0x7F)
  {
    uint64_t v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v14;
    uint64_t v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }

  uint64_t v3 = sub_10010E904((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
  if ((*((_DWORD *)this + 12) & 8) != 0) {
    goto LABEL_24;
  }
LABEL_30:
  uint64_t v21 = (void *)*((void *)this + 1);
  id v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v19 = v21;
  if (!v21 || *v19 == v19[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v20,  v3,  a3);
  }
}

  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_33;
    }
LABEL_27:
    id v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if ((v17 & 0x80000000) != 0)
    {
      id v18 = 11;
    }

    else if (v17 >= 0x80)
    {
    }

    else
    {
      id v18 = 2;
    }

    id v4 = (v18 + v4);
    goto LABEL_33;
  }

  uint64_t v13 = *(void *)(a1 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_100800710 + 32);
  }
  uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010EA3C(v13, a2);
  uint64_t v15 = (int)v14;
  else {
    CFIndex v16 = 1;
  }
  id v4 = (v4 + v15 + v16 + 1);
  if ((*(_DWORD *)(a1 + 48) & 8) != 0) {
    goto LABEL_27;
  }
LABEL_33:
  uint64_t v19 = *(void **)(a1 + 8);
  if (v19 && *v19 != v19[1]) {
    id v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

  uint64_t v11 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 92) |= 4u;
  *(void *)(a1 + sub_100012358(v1 - 32) = v11;
  unint64_t v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v4 + 40),  a3);
  unint64_t v5 = *(_DWORD *)(v4 + 92);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }

  uint64_t v12 = *(void *)(a1 + 40);
  *(_BYTE *)a2 = 33;
  *(void *)(a2 + 1) = v12;
  a2 += 9LL;
  uint64_t v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 32),  a3);
  unint64_t v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }

  if ((v3 & 4) != 0)
  {
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v13 & 0x80000000) != 0)
    {
      uint64_t v14 = 11;
    }

    else if (v13 >= 0x80)
    {
    }

    else
    {
      uint64_t v14 = 2;
    }

    id v4 = (v14 + v4);
  }

  uint64_t v14 = *((void *)this + 9);
  *(_BYTE *)id v4 = 65;
  *(void *)((char *)v4 + 1) = v14;
  id v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 35) & 0x100) == 0) {
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
  *(_BYTE *)id v4 = 72;
  if (v15 > 0x7F)
  {
    id v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v15;
    id v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v3;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v3;
  return v3;
}

  uint64_t v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v3;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v3;
  return v3;
}

  id v18 = sub_10011BDCC(a1, (uint64_t)a2);
  uint64_t v19 = a1[5];
  if (v19 >= 9)
  {
    do
    {
      id v20 = a1[4];
      a1[5] = v19 - 1;
      a1[4] = v20 + 1;
      sub_10011C5E8((uint64_t)a1, 1);
      uint64_t v19 = a1[5];
    }

    while (v19 > 8);
  }

  sub_10011C4BC(a1, a2);
  return v18;
}

      v12.__d_.__rep_ = v11 + v9.__d_.__rep_;
      goto LABEL_19;
    }
  }

  while (std::chrono::steady_clock::now().__d_.__rep_ < v7.__d_.__rep_);
  uint64_t v13 = atomic_load((unsigned __int8 *)(a1 + 24));
  if ((v13 & 1) != 0)
  {
LABEL_28:
    sub_1000062D0(a3, a1 + 2272);
    goto LABEL_29;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_1003938BC();
  }
LABEL_27:
  *a3 = 0;
  a3[112] = 0;
LABEL_29:
  if (__lk.__owns_) {
    std::mutex::unlock(__lk.__m_);
  }
  if (v20)
  {
    uint64_t v21 = v20;
    operator delete(v20);
  }

      v12.__d_.__rep_ = v11 + v9.__d_.__rep_;
      goto LABEL_19;
    }
  }

  while (std::chrono::steady_clock::now().__d_.__rep_ < v8.__d_.__rep_);
  if (*(_BYTE *)(a1 + 2555))
  {
LABEL_22:
    uint64_t v13 = *(_OWORD *)(a1 + 2518);
    v21[0] = *(_OWORD *)(a1 + 2534);
    *(void *)((char *)v21 + 14) = *(void *)(a1 + 2548);
    uint64_t v14 = *(void *)((char *)v21 + 14);
    uint64_t v15 = *(_OWORD *)(a1 + 2486);
    CFIndex v16 = *(_OWORD *)(a1 + 2502);
    *(_BYTE *)(a1 + 2555) = 0;
    *(_DWORD *)a4 = 0;
    *(_OWORD *)(a4 + 20) = v16;
    *(_OWORD *)(a4 + 36) = v13;
    *(_OWORD *)(a4 + 4) = v15;
    *(_OWORD *)(a4 + 52) = v21[0];
    *(void *)(a4 + 66) = v14;
    goto LABEL_27;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_100393A80();
  }
  sub_1000065CC(v20, "AlishaGetKeyTimedOut");
  sub_1001D7570(a1 + 544, 0LL, v20);
  sub_10021DA8C();
  sub_10021DB48();
  uint64_t v19 = -1002;
LABEL_26:
  *(_DWORD *)a4 = v19;
  *(_BYTE *)(a4 + 4) = 0;
  *(_BYTE *)(a4 + 73) = 0;
LABEL_27:
  if (__lk.__owns_) {
    std::mutex::unlock(__lk.__m_);
  }
  if (v24) {
    std::mutex::unlock(v23);
  }
  if (__p)
  {
    int v26 = __p;
    operator delete(__p);
  }

  if (v28)
  {
    uint64_t v29 = v28;
    operator delete(v28);
  }

      v6.__d_.__rep_ = v5 + v3.__d_.__rep_;
      goto LABEL_19;
    }
  }

  while (std::chrono::steady_clock::now().__d_.__rep_ < v2.__d_.__rep_);
  if (*(_BYTE *)(a1 + 2555))
  {
LABEL_22:
    uint64_t v7 = *(unsigned __int16 *)(a1 + 2507);
    CFIndex v8 = *(unsigned __int8 *)(a1 + 2486);
    *(_BYTE *)(a1 + 2555) = 0;
    if (v8 >= 2) {
      uint64_t v9 = 4294966263LL;
    }
    else {
      uint64_t v9 = sub_1002BF768(v7);
    }
    goto LABEL_31;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_100393AAC();
  }
  uint64_t v9 = 4294966265LL;
LABEL_31:
  if (__lk.__owns_) {
    std::mutex::unlock(__lk.__m_);
  }
  if (v16) {
    std::mutex::unlock(v15);
  }
  if (__p)
  {
    id v18 = __p;
    operator delete(__p);
  }

  if (v20)
  {
    uint64_t v21 = v20;
    operator delete(v20);
  }

  return v9;
}

      v16.__d_.__rep_ = v15 + v13.__d_.__rep_;
      goto LABEL_19;
    }
  }

  while (std::chrono::steady_clock::now().__d_.__rep_ < v12.__d_.__rep_);
  if (*(_BYTE *)(a1 + 2555))
  {
LABEL_22:
    id v17 = *(_OWORD *)(a1 + 2518);
    v25[0] = *(_OWORD *)(a1 + 2534);
    *(void *)((char *)v25 + 14) = *(void *)(a1 + 2548);
    id v18 = *(void *)((char *)v25 + 14);
    uint64_t v19 = *(_OWORD *)(a1 + 2486);
    id v20 = *(_OWORD *)(a1 + 2502);
    *(_BYTE *)(a1 + 2555) = 0;
    *(_DWORD *)a5 = 0;
    *(_OWORD *)(a5 + 20) = v20;
    *(_OWORD *)(a5 + 36) = v17;
    *(_OWORD *)(a5 + 4) = v19;
    *(_OWORD *)(a5 + 52) = v25[0];
    *(void *)(a5 + 66) = v18;
    goto LABEL_27;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_100393AD8();
  }
  id v23 = -1010;
LABEL_26:
  *(_DWORD *)a5 = v23;
  *(_BYTE *)(a5 + 4) = 0;
  *(_BYTE *)(a5 + 73) = 0;
LABEL_27:
  if (__lk.__owns_) {
    std::mutex::unlock(__lk.__m_);
  }
  if (v28) {
    std::mutex::unlock(v27);
  }
  if (__p)
  {
    uint64_t v30 = __p;
    operator delete(__p);
  }

  if (v32)
  {
    int v33 = v32;
    operator delete(v32);
  }

      if (v11 > (v9.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
      {
        v12.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_21:
        std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 32), &__lk, v12);
        std::chrono::steady_clock::now();
        continue;
      }

  if (sub_1001A8CCC(a1 + 216) && !*(_BYTE *)(a1 + 433) && !*(_BYTE *)(a1 + 432))
  {
    *(double *)(a1 + 248) = a4;
    uint64_t v15 = (_BYTE *)(a1 + 240);
    goto LABEL_26;
  }

        id v45 = v11;
        goto LABEL_19;
      }

      uint64_t v37 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_1003991B8(v37, v38, v39, v40, v41, v42, v43, v44);
      }
    }

    else
    {
      uint64_t v29 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_100399188(v29, v30, v31, v32, v33, v34, v35, v36);
      }
    }
  }

  else
  {
    uint64_t v21 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_100399158(v21, v22, v23, v24, v25, v26, v27, v28);
    }
  }

  id v45 = 0LL;
LABEL_19:

  return v45;
}

  *(_BYTE *)a3 = 0;
  *(_BYTE *)(a3 + 56) = 0;
  uint64_t v13 = (void *)*((void *)&v23 + 1);
LABEL_22:
}

      *(_DWORD *)(a1 + 564) = 1;
    }

  return v23;
}

        unint64_t v6 = *(_DWORD *)(a2 + 80);
        uint64_t v7 = *(_DWORD *)(a1 + 352);
LABEL_19:
        int v25 = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a3 + 64) = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a3 + 80) = v25;
        int v26 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a3 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a3 + 112) = v26;
        uint64_t v27 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a3 = *(_OWORD *)a2;
        *(_OWORD *)(a3 + 16) = v27;
        uint64_t v28 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a3 + sub_100012358(v1 - 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a3 + 48) = v28;
        *(_DWORD *)(a3 + 112) = v7;
        *(_BYTE *)(a3 + 116) = 1;
        if (v6 != 2)
        {
LABEL_20:
          sub_10030C778((void *)a1);
          return;
        }
      }

      sub_1002C6AFC((void *)(a1 + 48), (__int128 *)a2);
      *(_DWORD *)(a3 + 80) = 0;
      int v33 = *(_DWORD *)(a1 + 352);
      if (v33 <= 5 && ((1 << v33) & 0x2C) != 0)
      {
        *(_DWORD *)(a3 + 80) = 2;
        *(double *)v34.i64 = sub_1002CE658(*(float32x4_t *)(a1 + 32));
        uint64_t v38 = 0LL;
        uint64_t v39 = *(_OWORD *)(a2 + 32);
        unint64_t v40 = *(_OWORD *)(a2 + 48);
        uint64_t v41 = *(_OWORD *)(a2 + 64);
        __int16 v85 = *(float32x4_t *)(a2 + 16);
        uint64_t v86 = v39;
        id v87 = v40;
        id v88 = v41;
        do
        {
          *(float32x4_t *)((char *)&v75 + v38) = vmlaq_laneq_f32( vmlaq_laneq_f32( vmlaq_lane_f32( vmulq_n_f32(v34, COERCE_FLOAT(*(_OWORD *)((char *)&v85 + v38))),  v35,  *(float32x2_t *)&v85.f32[v38 / 4],  1),  v36,  *(float32x4_t *)((char *)&v85 + v38),  2),  v37,  *(float32x4_t *)((char *)&v85 + v38),  3);
          v38 += 16LL;
        }

        while (v38 != 64);
        BOOL v42 = v76;
        uint64_t v43 = v77;
        __int128 v44 = v78;
        *(float32x4_t *)(a3 + 16) = v75;
        *(_OWORD *)(a3 + sub_100012358(v1 - 32) = v42;
        *(_OWORD *)(a3 + 48) = v43;
        *(_OWORD *)(a3 + 64) = v44;
        sub_1002C6AFC((void *)(a1 + 96), (__int128 *)a3);
        if (*(double *)a3
           - *(double *)(*(void *)(*(void *)(a1 + 104) + ((*(void *)(a1 + 128) >> 2) & 0x3FFFFFFFFFFFFFF8LL))
                       + ((*(void *)(a1 + 128) & 0x1FLL) << 7)) > 1.28)
        {
          id v45 = *(void *)(a1 + 136) - 1LL;
          ++*(void *)(a1 + 128);
          *(void *)(a1 + 136) = v45;
          sub_100125ADC(a1 + 96, 1);
        }
      }

      return;
    default:
      goto LABEL_19;
  }

    id v18 = sub_100312710((uint64_t)v4, &v51);
    uint64_t v19 = sub_100312764((uint64_t)v18, (unsigned __int8 *)&unk_10043072C);
    sub_10031566C(*v19, v2, v2);
    if (!v20)
    {
      uint64_t v38 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
        sub_1003AC2C4(v2, v38, v39);
      }
      sub_100315098((uint64_t)v4, (void *)a1[25]);
      a1[25] = 0LL;
      a1[26] = 0LL;
      a1[24] = v46;
      unint64_t v40 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(v40, "Region radii are not unique.");
    }

    if (*(_BYTE *)(v2 + 41))
    {
      uint64_t v21 = sub_100312710((uint64_t)v4, &v51);
      buf[0] = 1;
      uint64_t v22 = sub_100312764((uint64_t)v21, buf);
      sub_10031566C(*v22, v2, v2);
      if (!v23)
      {
        uint64_t v41 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
          sub_1003AC2C4(v2, v41, v42);
        }
        sub_100315098((uint64_t)v4, (void *)a1[25]);
        a1[25] = 0LL;
        a1[26] = 0LL;
        a1[24] = v46;
        uint64_t v43 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
        std::runtime_error::runtime_error(v43, "Region radii are not unique.");
      }
    }

    id v24 = (os_log_s *)qword_1008000A0;
    int v25 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG);
    if (v25)
    {
      int v26 = v2;
      uint64_t v27 = *(float *)(v2 + 24);
      *(_DWORD *)pthread_attr_t buf = 136315650;
      *(void *)&uint8_t buf[4] = v26;
      *(_WORD *)&buf[12] = 2048;
      *(double *)&buf[14] = v27;
      *(_WORD *)&_BYTE buf[22] = 1024;
      *(_DWORD *)&uint8_t buf[24] = v51;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "#regionmon #region-class adding region (%s: %.2f) to region category %d dictionary",  buf,  0x1Cu);
    }

    v2 += 48LL;
  }

  while (v2 != v3);
  uint64_t v28 = (void *)*v4;
  if ((void *)*v4 != v46)
  {
    do
    {
      uint64_t v29 = (void *)v28[5];
      if (v29 != v28 + 6)
      {
        do
        {
          sub_1003127B8(v25, (void *)v29[5]);
          uint64_t v30 = (os_log_s *)qword_1008000A0;
          int v25 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
          if (v25)
          {
            id v31 = *(void *)(v29[5] + 16LL);
            uint64_t v32 = *((_DWORD *)v28 + 8);
            *(_DWORD *)pthread_attr_t buf = 134218498;
            *(void *)&uint8_t buf[4] = v31;
            *(_WORD *)&buf[12] = 1024;
            *(_DWORD *)&buf[14] = v32;
            *(_WORD *)&buf[18] = 2080;
            *(void *)&buf[20] = "YES";
            _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "#regionmon region-class %lu regions for region category %d valid: %s",  buf,  0x1Cu);
          }

          int v33 = (void *)v29[1];
          if (v33)
          {
            do
            {
              uint64_t v34 = v33;
              int v33 = (void *)*v33;
            }

            while (v33);
          }

          else
          {
            do
            {
              uint64_t v34 = (void *)v29[2];
              uint64_t v35 = *v34 == (void)v29;
              uint64_t v29 = v34;
            }

            while (!v35);
          }

          uint64_t v29 = v34;
        }

        while (v34 != v28 + 6);
      }

      uint64_t v36 = (void *)v28[1];
      if (v36)
      {
        do
        {
          uint64_t v37 = v36;
          uint64_t v36 = (void *)*v36;
        }

        while (v36);
      }

      else
      {
        do
        {
          uint64_t v37 = (void *)v28[2];
          uint64_t v35 = *v37 == (void)v28;
          uint64_t v28 = v37;
        }

        while (!v35);
      }

      uint64_t v28 = v37;
    }

    while (v37 != v46);
  }

    *(void *)(*result + 8 * v6) = a2;
    goto LABEL_19;
  }

  *a2 = *a3;
  *a3 = a2;
  if (*a2)
  {
    unint64_t v6 = *(void *)(*a2 + 8LL);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(void *)&v3) {
        v6 %= *(void *)&v3;
      }
    }

    else
    {
      v6 &= *(void *)&v3 - 1LL;
    }

    if (v6 != v4) {
      goto LABEL_18;
    }
  }

void sub_1000190B0(_Unwind_Exception *a1)
{
  id v4 = *(void **)(v2 - 48);
  if (v4 == (void *)(v2 - 72))
  {
    uint64_t v5 = 4LL;
    id v4 = (void *)(v2 - 72);
  }

  else
  {
    if (!v4) {
      goto LABEL_6;
    }
    uint64_t v5 = 5LL;
  }

  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  _Unwind_Resume(a1);
}

uint64_t sub_10001910C(uint64_t a1)
{
  int v3 = *(_DWORD *)(a1 + 64);
  uint64_t v1 = *(void *)(a1 + 56);
  if (!v1) {
    sub_10001EEF0();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v1 + 48LL))(v1, &v3);
}

uint64_t sub_100019148(uint64_t a1, uint64_t a2)
{
  return sub_10001E914(a1 + 32, a2 + 32);
}

void *sub_100019154(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 32);
  uint64_t result = *(void **)(a1 + 56);
  if (result == v1)
  {
    uint64_t v3 = 4LL;
    uint64_t result = v1;
  }

  else
  {
    if (!result) {
      return result;
    }
    uint64_t v3 = 5LL;
  }

  return (void *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_100019188(uint64_t a1, uint64_t a2, id **a3)
{
  uint64_t v3 = *a3;
  id v4 = a3[1];
  if (*a3 != v4)
  {
    do
    {
      sub_10003AD90((uint64_t)v3, (uint64_t)v17);
      if (!v18)
      {
        CFIndex v8 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        {
          id v9 = sub_10003AD44(v3);
          objc_claimAutoreleasedReturnValue(v9);
          sub_100389BA0();
        }

        goto LABEL_16;
      }

      id v5 = sub_10003AD64((uint64_t)v3);
      unint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v5);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768LL;
      block[2] = sub_1000193C0;
      block[3] = &unk_1007A23E8;
      uint64_t v7 = (uint64_t)v18;
      if (v18)
      {
        if (v18 == v17)
        {
          CFIndex v16 = v15;
          (*(void (**)(void *, _BYTE *))(v17[0] + 24LL))(v17, v15);
          goto LABEL_11;
        }

        uint64_t v7 = (*(uint64_t (**)(void))(*v18 + 16LL))();
      }

      CFIndex v16 = (_BYTE *)v7;
LABEL_11:
      dispatch_async(v6, block);

      uint64_t v10 = v16;
      if (v16 == v15)
      {
        uint64_t v10 = v15;
        uint64_t v11 = 4LL;
      }

      else
      {
        if (!v16) {
          goto LABEL_16;
        }
        uint64_t v11 = 5LL;
      }

      (*(void (**)(void))(*v10 + 8 * v11))();
LABEL_16:
      uint64_t v12 = v18;
      if (v18 == v17)
      {
        uint64_t v12 = v17;
        uint64_t v13 = 4LL;
        goto LABEL_20;
      }

      if (v18)
      {
        uint64_t v13 = 5LL;
LABEL_20:
        (*(void (**)(void))(*v12 + 8 * v13))();
      }

      v3 += 21;
    }

    while (v3 != v4);
  }

void sub_100019364( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20, uint64_t a21, uint64_t a22, char *a23)
{
  int v25 = a23;
  if (a23 == &a20)
  {
    uint64_t v26 = 4LL;
    int v25 = &a20;
  }

  else
  {
    if (!a23) {
      goto LABEL_6;
    }
    uint64_t v26 = 5LL;
  }

  (*(void (**)(void))(*(void *)v25 + 8 * v26))();
LABEL_6:
  _Unwind_Resume(a1);
}

uint64_t sub_1000193C0(uint64_t a1)
{
  int v3 = 2;
  uint64_t v1 = *(void *)(a1 + 56);
  if (!v1) {
    sub_10001EEF0();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v1 + 48LL))(v1, &v3);
}

uint64_t sub_1000193FC(uint64_t a1)
{
  int v3 = *(_DWORD *)(a1 + 64);
  uint64_t v1 = *(void *)(a1 + 56);
  if (!v1) {
    sub_10001EEF0();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v1 + 48LL))(v1, &v3);
}

void sub_100019438(uint64_t a1, int a2)
{
  uint64_t v2 = *(void **)(a1 + 216);
  id v18 = (void *)(a1 + 224);
  if (v2 == (void *)(a1 + 224)) {
    return;
  }
  do
  {
    uint64_t v19 = 0LL;
    id v20 = 0LL;
    uint64_t v21 = 0LL;
    sub_10001EF3C(&v19, v2[5], v2[6], 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v2[6] - v2[5]) >> 3));
    id v4 = v19;
    id v5 = v20;
    while (v4 != v5)
    {
      sub_10003AD9C((uint64_t)v4, (uint64_t)v26);
      if (!v27)
      {
        id v9 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        {
          id v10 = sub_10003AD44(v4);
          objc_claimAutoreleasedReturnValue(v10);
          sub_10038A46C();
        }

        goto LABEL_18;
      }

      id v6 = sub_10003AD64((uint64_t)v4);
      uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v6);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768LL;
      block[2] = sub_100019720;
      block[3] = &unk_1007A2418;
      uint64_t v8 = (uint64_t)v27;
      if (v27)
      {
        if (v27 == v26)
        {
          id v24 = v23;
          (*((void (**)(void ***, _BYTE *))v26[0] + 3))(v26, v23);
          goto LABEL_13;
        }

        uint64_t v8 = ((uint64_t (*)(void))(*v27)[2])();
      }

      id v24 = (_BYTE *)v8;
LABEL_13:
      int v25 = a2;
      dispatch_async(v7, block);

      uint64_t v11 = v24;
      if (v24 == v23)
      {
        uint64_t v11 = v23;
        uint64_t v12 = 4LL;
      }

      else
      {
        if (!v24) {
          goto LABEL_18;
        }
        uint64_t v12 = 5LL;
      }

      (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_18:
      uint64_t v13 = v27;
      if (v27 == v26)
      {
        uint64_t v13 = v26;
        uint64_t v14 = 4LL;
      }

      else
      {
        if (!v27) {
          goto LABEL_23;
        }
        uint64_t v14 = 5LL;
      }

      ((void (*)(void))(*v13)[v14])();
LABEL_23:
      v4 += 21;
    }

    v26[0] = (void **)&v19;
    sub_10001F250(v26);
    uint64_t v15 = (void *)v2[1];
    if (v15)
    {
      do
      {
        CFIndex v16 = v15;
        uint64_t v15 = (void *)*v15;
      }

      while (v15);
    }

    else
    {
      do
      {
        CFIndex v16 = (void *)v2[2];
        BOOL v17 = *v16 == (void)v2;
        uint64_t v2 = v16;
      }

      while (!v17);
    }

    uint64_t v2 = v16;
  }

  while (v16 != v18);
}

void sub_1000196AC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, void **a27, uint64_t a28, uint64_t a29, void ***a30)
{
  uint64_t v32 = a30;
  if (a30 == &a27)
  {
    uint64_t v33 = 4LL;
    uint64_t v32 = &a27;
  }

  else
  {
    if (!a30) {
      goto LABEL_6;
    }
    uint64_t v33 = 5LL;
  }

  ((void (*)(void))(*v32)[v33])();
LABEL_6:
  a27 = (void **)&a12;
  sub_10001F250(&a27);
  _Unwind_Resume(a1);
}

uint64_t sub_100019720(uint64_t a1)
{
  int v3 = *(_DWORD *)(a1 + 64);
  uint64_t v1 = *(void *)(a1 + 56);
  if (!v1) {
    sub_10001EEF0();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v1 + 48LL))(v1, &v3);
}

uint64_t sub_10001975C(uint64_t a1, uint64_t a2)
{
  return sub_10001E914(a1 + 32, a2 + 32);
}

void *sub_100019768(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 32);
  uint64_t result = *(void **)(a1 + 56);
  if (result == v1)
  {
    uint64_t v3 = 4LL;
    uint64_t result = v1;
  }

  else
  {
    if (!result) {
      return result;
    }
    uint64_t v3 = 5LL;
  }

  return (void *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_10001979C(uint64_t a1, int a2, id **a3)
{
  uint64_t v3 = *a3;
  id v4 = a3[1];
  if (*a3 != v4)
  {
    do
    {
      sub_10003AD9C((uint64_t)v3, (uint64_t)v19);
      if (!v20)
      {
        id v9 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        {
          id v10 = sub_10003AD44(v3);
          objc_claimAutoreleasedReturnValue(v10);
          sub_10038A46C();
        }

        goto LABEL_16;
      }

      id v6 = sub_10003AD64((uint64_t)v3);
      uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v6);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768LL;
      block[2] = sub_1000199DC;
      block[3] = &unk_1007A2418;
      uint64_t v8 = (uint64_t)v20;
      if (v20)
      {
        if (v20 == v19)
        {
          BOOL v17 = v16;
          (*(void (**)(void *, _BYTE *))(v19[0] + 24LL))(v19, v16);
          goto LABEL_11;
        }

        uint64_t v8 = (*(uint64_t (**)(void))(*v20 + 16LL))();
      }

      BOOL v17 = (_BYTE *)v8;
LABEL_11:
      int v18 = a2;
      dispatch_async(v7, block);

      uint64_t v11 = v17;
      if (v17 == v16)
      {
        uint64_t v11 = v16;
        uint64_t v12 = 4LL;
      }

      else
      {
        if (!v17) {
          goto LABEL_16;
        }
        uint64_t v12 = 5LL;
      }

      (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_16:
      uint64_t v13 = v20;
      if (v20 == v19)
      {
        uint64_t v13 = v19;
        uint64_t v14 = 4LL;
        goto LABEL_20;
      }

      if (v20)
      {
        uint64_t v14 = 5LL;
LABEL_20:
        (*(void (**)(void))(*v13 + 8 * v14))();
      }

      v3 += 21;
    }

    while (v3 != v4);
  }

void sub_100019980( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20, uint64_t a21, uint64_t a22, char *a23)
{
  int v25 = a23;
  if (a23 == &a20)
  {
    uint64_t v26 = 4LL;
    int v25 = &a20;
  }

  else
  {
    if (!a23) {
      goto LABEL_6;
    }
    uint64_t v26 = 5LL;
  }

  (*(void (**)(void))(*(void *)v25 + 8 * v26))();
LABEL_6:
  _Unwind_Resume(a1);
}

uint64_t sub_1000199DC(uint64_t a1)
{
  int v3 = *(_DWORD *)(a1 + 64);
  uint64_t v1 = *(void *)(a1 + 56);
  if (!v1) {
    sub_10001EEF0();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v1 + 48LL))(v1, &v3);
}

uint64_t sub_100019A18(uint64_t a1)
{
  char v3 = *(_BYTE *)(a1 + 64);
  uint64_t v1 = *(void *)(a1 + 56);
  if (!v1) {
    sub_10001EEF0();
  }
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)v1 + 48LL))(v1, &v3);
}

uint64_t sub_100019A54(uint64_t a1, uint64_t a2)
{
  return sub_10001E914(a1 + 32, a2 + 32);
}

void *sub_100019A60(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 32);
  uint64_t result = *(void **)(a1 + 56);
  if (result == v1)
  {
    uint64_t v3 = 4LL;
    uint64_t result = v1;
  }

  else
  {
    if (!result) {
      return result;
    }
    uint64_t v3 = 5LL;
  }

  return (void *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

uint64_t sub_100019A94(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,WiFiManagerClientScheduleWithRunLoop",  buf,  2u);
    }

    CFRunLoopRef Current = CFRunLoopGetCurrent();
    WiFiManagerClientScheduleWithRunLoop(a1, Current, kCFRunLoopDefaultMode);
    while (1)
      CFRunLoopRun();
  }

  printf("%s: managerClient is NULL!", "__wifiManagerEventsThread");
  return 0LL;
}

void sub_100019B40(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "#wifi-service,registerfForStateChanges", v4, 2u);
  }

  uint64_t v3 = sub_10001769C(a1);
  if (v3)
  {
    WiFiDeviceClientRegisterVirtualInterfaceStateChangeCallback(v3, sub_10001CA48, a1);
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10038A4A8();
  }

BOOL sub_100019BF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3)
  {
    id v4 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "#wifi-service,checkRangingReady - copying interface state info",  buf,  2u);
    }

    *(void *)pthread_attr_t buf = 0LL;
    uint64_t v5 = sub_10001769C(a1);
    WiFiDeviceClientCopyInterfaceStateInfo(v5, buf);
    id v3 = *(id *)buf;
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"RANGING_ALLOWED"]);
  uint64_t v7 = v6;
  if (v6)
  {
    if ([v6 BOOLValue])
    {
      if (!*(_BYTE *)(a1 + 56))
      {
        uint64_t v8 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)pthread_attr_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,checkRangingReady - true - report to clients",  buf,  2u);
        }

        sub_100019438(a1, 0);
        if (sub_1000151E0(a1))
        {
          id v9 = *(dispatch_queue_s **)(a1 + 80);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_100019E8C;
          block[3] = &unk_1007A2398;
          void block[4] = a1;
          dispatch_async(v9, block);
        }
      }

      BOOL v10 = 1LL;
      *(_BYTE *)(a1 + 56) = 1;
    }

    else
    {
      if (*(_BYTE *)(a1 + 56))
      {
        uint64_t v13 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)pthread_attr_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,checkRangingReady - false - report to clients",  buf,  2u);
        }

        sub_100019438(a1, 1);
      }

      BOOL v10 = 0LL;
      *(_BYTE *)(a1 + 56) = 0;
    }
  }

  else
  {
    uint64_t v11 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      if (*(_BYTE *)(a1 + 56)) {
        uint64_t v12 = "true";
      }
      else {
        uint64_t v12 = "false";
      }
      *(_DWORD *)pthread_attr_t buf = 136315138;
      *(void *)&uint8_t buf[4] = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "#wifi-service,checkRangingReady - no info - currently %s",  buf,  0xCu);
    }

    BOOL v10 = *(_BYTE *)(a1 + 56) != 0;
  }

  return v10;
}

void sub_100019E68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100019E8C(uint64_t a1)
{
}

uint64_t sub_100019E94(uint64_t a1)
{
  return sub_1000178D8(*(void *)(a1 + 32));
}

uint64_t sub_100019E9C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  objc_storeStrong((id *)(a1 + 32), *(id *)(a2 + 32));
  objc_storeStrong((id *)(a1 + 40), *(id *)(a2 + 40));
  sub_10001DA30((void *)(a1 + 48), a2 + 48);
  sub_10001DAC8((void *)(a1 + 80), a2 + 80);
  sub_10001DB60((void *)(a1 + 112), a2 + 112);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  objc_storeStrong((id *)(a1 + 152), *(id *)(a2 + 152));
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  return a1;
}

NSMutableArray *sub_100019F34(uint64_t a1)
{
  uint64_t v2 = -[NSMutableArray initWithCapacity:](objc_alloc(&OBJC_CLASS___NSMutableArray), "initWithCapacity:", 4LL);
  if (*(_BYTE *)(a1 + 408))
  {
    uint64_t v3 = a1 + 240;
    id v4 = sub_10003AD44((id *)(a1 + 240));
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    id v6 = [v5 copy];

    id v7 = sub_10003AD4C(v3);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    id v9 = [v8 copy];

    id v10 = sub_10003AD54(v3);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    id v12 = [v11 copy];

    id v13 = sub_10003AD74(v3);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    id v15 = [v14 copy];

    CFIndex v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 4LL));
    BOOL v17 = sub_1001CD82C();
    int v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    if (v6 && v9 && v12)
    {
      uint64_t v19 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      -[NSMutableDictionary setValue:forKey:](v19, "setValue:forKey:", v15, @"STATION_MAC");
      -[NSMutableDictionary setValue:forKey:](v19, "setValue:forKey:", v6, @"RANGING_TOKEN_ID");
      -[NSMutableDictionary setValue:forKey:](v19, "setValue:forKey:", v9, @"RANGING_PMK");
      -[NSMutableDictionary setValue:forKey:](v19, "setValue:forKey:", v12, @"RANGING_NUM_MEASUREMENTS");
      if (([v18 hasPrefix:@"iPhone"] & 1) != 0
        || [v18 hasPrefix:@"RealityDevice"])
      {
        -[NSMutableDictionary setValue:forKey:](v19, "setValue:forKey:", v16, @"RANGING_CORE_MASK");
      }

      id v20 = -[NSMutableDictionary copy](v19, "copy");
      -[NSMutableArray addObject:](v2, "addObject:", v20);
    }

    else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      sub_10038A544();
    }
  }

  else
  {
    uint64_t v21 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_10038A4D4(v21, v22, v23, v24, v25, v26, v27, v28);
    }
  }

  return v2;
}

void sub_10001A15C(_Unwind_Exception *a1)
{
  id v10 = v9;

  _Unwind_Resume(a1);
}

void sub_10001A200(uint64_t a1@<X0>, const __CFArray *a2@<X1>, __int128 *a3@<X8>)
{
  __int128 v133 = 0uLL;
  unint64_t v134 = 0LL;
  sub_1000065CC(v131, "Dictionary error,");
  if (a2) {
    CFIndex Count = CFArrayGetCount(a2);
  }
  else {
    CFIndex Count = 0LL;
  }
  id v6 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)pthread_attr_t buf = 134349056;
    *(void *)&uint8_t buf[4] = Count;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "#wifi-service,parsing wifi callback data, nPeers %{public}ld",  buf,  0xCu);
  }

  if (*(_BYTE *)(a1 + 48) || *(_BYTE *)(a1 + 408))
  {
    if (Count >= 1)
    {
      for (CFIndex i = 0LL; i != Count; ++i)
      {
        ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(a2, i);
        id v9 = ValueAtIndex;
        if (ValueAtIndex && (CFTypeID v10 = CFGetTypeID(ValueAtIndex), v10 == CFDictionaryGetTypeID()))
        {
          if (!*(_BYTE *)(a1 + 48))
          {
            id v21 = sub_10003AD74(a1 + 240);
            id v14 = (id)objc_claimAutoreleasedReturnValue(v21);
LABEL_26:
            uint64_t v22 = v14;
            uint64_t v138 = 0LL;
            [v14 getBytes:&v138 length:6];
            uint64_t v130 = v138;
            uint64_t v23 = (os_log_s *)qword_1008000A0;
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)pthread_attr_t buf = 138412290;
              *(void *)&uint8_t buf[4] = v22;
              _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,macAddress %@",  buf,  0xCu);
            }

            int valuePtr = 0;
            Value = (const __CFNumber *)CFDictionaryGetValue(v9, @"RANGING_STATUS");
            uint64_t v25 = Value;
            if (Value && (CFTypeID v26 = CFGetTypeID(Value), v26 == CFNumberGetTypeID()))
            {
              CFNumberGetValue(v25, kCFNumberSInt32Type, &valuePtr);
            }

            else
            {
              uint64_t v27 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
              {
                id v60 = v131;
                if (v132 < 0) {
                  id v60 = (void **)v131[0];
                }
                *(_DWORD *)pthread_attr_t buf = 136446210;
                *(void *)&uint8_t buf[4] = v60;
                _os_log_error_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_ERROR,  "#wifi-service,%{public}s status type",  buf,  0xCu);
              }
            }

            uint64_t v28 = (os_log_s *)qword_1008000A0;
            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)pthread_attr_t buf = 138412546;
              *(void *)&uint8_t buf[4] = v22;
              *(_WORD *)&buf[12] = 1024;
              *(_DWORD *)&buf[14] = valuePtr;
              _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_INFO,  "#wifi-service,Ranging result from %@ resulted in status value of: %d",  buf,  0x12u);
            }

            if (*(_DWORD *)(a1 + 448) == 2 || *(_DWORD *)(a1 + 452) == 2)
            {
              uint64_t v29 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)pthread_attr_t buf = 138412290;
                *(void *)&uint8_t buf[4] = v22;
                _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_INFO,  "#wifi-service,received responder indicator of ranging to %@",  buf,  0xCu);
              }

              uint64_t v30 = v130;
              id v31 = operator new(0x18uLL);
              *(void *)id v31 = 0xFFFFFF9CFFFEFB67LL;
              v31[4] = 0;
              *((void *)v31 + 2) = 0LL;
              *(void *)pthread_attr_t buf = v30;
              *(void *)&buf[8] = 0LL;
              *(_DWORD *)&uint8_t buf[16] = -998637568;
              memset(v136, 0, sizeof(v136));
              sub_10001E054(v136, v31, (uint64_t)(v31 + 12), 1uLL);
              int v137 = 0;
              operator delete(v31);
              uint64_t v32 = *((void *)&v133 + 1);
              if (*((void *)&v133 + 1) < v134)
              {
                __int128 v33 = *(_OWORD *)buf;
                *(_DWORD *)(*((void *)&v133 + 1) + 16LL) = *(_DWORD *)&buf[16];
                *(_OWORD *)uint64_t v32 = v33;
                *(void *)(v32 + sub_100012358(v1 - 32) = 0LL;
                *(void *)(v32 + 40) = 0LL;
                *(void *)(v32 + 24) = 0LL;
                *(_OWORD *)(v32 + 24) = *(_OWORD *)v136;
                *(void *)(v32 + 40) = *(void *)&v136[16];
                memset(v136, 0, sizeof(v136));
                *(_DWORD *)(v32 + 48) = v137;
                *((void *)&v133 + 1) = v32 + 56;
LABEL_141:

                continue;
              }

              uint64_t v34 = sub_10001FBB8((uint64_t *)&v133, (uint64_t)buf);
              uint64_t v35 = *(void **)v136;
              *((void *)&v133 + 1) = v34;
              if (!*(void *)v136) {
                goto LABEL_141;
              }
              *(void *)&v136[8] = *(void *)v136;
LABEL_42:
              operator delete(v35);
              goto LABEL_141;
            }

            double v128 = 0.0;
            uint64_t v36 = (const __CFNumber *)CFDictionaryGetValue(v9, @"RANGING_DISTANCE");
            uint64_t v37 = v36;
            if (!v36 || (CFTypeID v38 = CFGetTypeID(v36), v38 != CFNumberGetTypeID()))
            {
              uint64_t v42 = qword_1008000A0;
              if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
                goto LABEL_141;
              }
              uint64_t v43 = v131;
              if (v132 < 0) {
                uint64_t v43 = (void **)v131[0];
              }
              *(_DWORD *)pthread_attr_t buf = 136446210;
              *(void *)&uint8_t buf[4] = v43;
              __int128 v44 = (os_log_s *)v42;
              id v45 = "#wifi-service,%{public}s distance type";
LABEL_74:
              _os_log_error_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_ERROR, v45, buf, 0xCu);
              goto LABEL_141;
            }

            CFNumberGetValue(v37, kCFNumberDoubleType, &v128);
            __int16 v127 = 0;
            uint64_t v39 = (const __CFNumber *)CFDictionaryGetValue(v9, @"RANGING_FLAGS");
            unint64_t v40 = v39;
            if (v39 && (CFTypeID v41 = CFGetTypeID(v39), v41 == CFNumberGetTypeID()))
            {
              CFNumberGetValue(v40, kCFNumberSInt16Type, &v127);
            }

            else
            {
              unsigned __int8 v46 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
              {
                int v47 = v131;
                if (v132 < 0) {
                  int v47 = (void **)v131[0];
                }
                *(_DWORD *)pthread_attr_t buf = 136315138;
                *(void *)&uint8_t buf[4] = v47;
                _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,#Warning %s flags",  buf,  0xCu);
              }
            }

            uint64_t v126 = 0LL;
            char v48 = (const __CFNumber *)CFDictionaryGetValue(v9, @"RANGING_SD");
            uint64_t v49 = v48;
            if (v48 && (CFTypeID v50 = CFGetTypeID(v48), v50 == CFNumberGetTypeID()))
            {
              CFNumberGetValue(v49, kCFNumberDoubleType, &v126);
            }

            else
            {
              uint64_t v51 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v52 = v131;
                if (v132 < 0) {
                  uint64_t v52 = (void **)v131[0];
                }
                *(_DWORD *)pthread_attr_t buf = 136315138;
                *(void *)&uint8_t buf[4] = v52;
                _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,#Warning %s stdDev",  buf,  0xCu);
              }
            }

            uint64_t v125 = 0LL;
            uint64_t v53 = (const __CFNumber *)CFDictionaryGetValue(v9, @"RANGING_VALID_COUNT");
            NSErrorUserInfoKey v54 = v53;
            if (!v53 || (CFTypeID v55 = CFGetTypeID(v53), v55 != CFNumberGetTypeID()))
            {
              uint64_t v58 = qword_1008000A0;
              if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
                goto LABEL_141;
              }
              uint64_t v59 = v131;
              if (v132 < 0) {
                uint64_t v59 = (void **)v131[0];
              }
              *(_DWORD *)pthread_attr_t buf = 136446210;
              *(void *)&uint8_t buf[4] = v59;
              __int128 v44 = (os_log_s *)v58;
              id v45 = "#wifi-service,%{public}s count type";
              goto LABEL_74;
            }

            CFNumberGetValue(v54, kCFNumberLongType, &v125);
            if (v125 >= 9)
            {
              uint64_t v56 = qword_1008000A0;
              if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
                goto LABEL_141;
              }
              uint64_t v57 = v131;
              if (v132 < 0) {
                uint64_t v57 = (void **)v131[0];
              }
              *(_DWORD *)pthread_attr_t buf = 136446210;
              *(void *)&uint8_t buf[4] = v57;
              __int128 v44 = (os_log_s *)v56;
              id v45 = "#wifi-service,%{public}s too many measurements in burst";
              goto LABEL_74;
            }

            int v122 = 0LL;
            v123 = 0LL;
            uint64_t v124 = 0LL;
            uint64_t v61 = (const __CFArray *)CFDictionaryGetValue(v9, @"RANGING_RESULTS");
            cf = v61;
            if (!v61 || (CFTypeID v62 = CFGetTypeID(v61), v63 = v62 == CFArrayGetTypeID(), v64 = cf, !v63))
            {
              unsigned __int16 v100 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
              {
                uint64_t v108 = v131;
                if (v132 < 0) {
                  uint64_t v108 = (void **)v131[0];
                }
                *(_DWORD *)pthread_attr_t buf = 136446210;
                *(void *)&uint8_t buf[4] = v108;
                _os_log_error_impl( (void *)&_mh_execute_header,  v100,  OS_LOG_TYPE_ERROR,  "#wifi-service,%{public}s results array type",  buf,  0xCu);
              }

LABEL_127:
              unint64_t v101 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * ((v123 - v122) >> 3));
              if (v123 == v122) {
                uint64_t v102 = 0LL;
              }
              else {
                uint64_t v102 = v101;
              }
              sub_10001FF70((uint64_t)v122, (unint64_t)v123, v102, 1);
              if (v123 == v122)
              {
                if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
                  sub_10038A5A8(&v115, v116);
                }
              }

              else
              {
                uint64_t v103 = *((void *)&v133 + 1);
                if (*((void *)&v133 + 1) >= v134)
                {
                  uint64_t v104 = sub_100020CD4((uint64_t *)&v133, &v130, &v128, (uint64_t)&v122);
                }

                else
                {
                  sub_100020E10((uint64_t)&v134, *((uint64_t *)&v133 + 1), &v130, &v128, (uint64_t)&v122);
                  uint64_t v104 = v103 + 56;
                }

                *((void *)&v133 + 1) = v104;
                v105 = (os_log_s *)qword_1008000A0;
                if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)pthread_attr_t buf = 67110144;
                  *(_DWORD *)&uint8_t buf[4] = i;
                  *(_WORD *)&buf[8] = 1024;
                  *(_DWORD *)&buf[10] = valuePtr;
                  *(_WORD *)&buf[14] = 2048;
                  *(double *)&uint8_t buf[16] = v128;
                  *(_WORD *)v136 = 2048;
                  *(void *)&v136[2] = v126;
                  *(_WORD *)&v136[10] = 2048;
                  *(void *)&v136[12] = v125;
                  _os_log_impl( (void *)&_mh_execute_header,  v105,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,WRTT, peer # %i, status %d, distance %f, uncertainty %f, num meas %li",  buf,  0x2Cu);
                }
              }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A,  *(unsigned __int8 *)(v5 + 296),  (BOOL)a2,  a4);
  id v9 = *(_DWORD *)(v5 + 472);
  if ((v9 & 0x400) == 0)
  {
LABEL_47:
    if ((v9 & 0x800) == 0) {
      goto LABEL_48;
    }
    goto LABEL_129;
  }

          if ((v17 != 0) != (*(_BYTE *)(a1 + 7688) != 0))
          {
            *(double *)(a1 + 7680) = v16;
            *(_BYTE *)(a1 + 7688) = v17;
          }

          if ((v127 != 0) != (*(_BYTE *)(a1 + 7704) != 0))
          {
            *(double *)(a1 + 7696) = v123;
            *(_BYTE *)(a1 + 7704) = v127;
            if (!sub_100305D3C(a1))
            {
              v83 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)pthread_attr_t buf = 67109376;
                *(_DWORD *)&uint8_t buf[4] = v127 != 0;
                *(_WORD *)&buf[8] = 1024;
                *(_DWORD *)&buf[10] = v17 != 0;
                _os_log_impl( (void *)&_mh_execute_header,  v83,  OS_LOG_TYPE_DEFAULT,  "#findalgs-peoplefinder,reinitializing particle filter. FindeeSlowlyMoving: %d, findeeStatic: %d",  buf,  0xEu);
              }

              sub_1002FA034(a1 + 448);
            }
          }

          if ((v32 != 0) != (*(_BYTE *)(a1 + 7720) != 0))
          {
            *(double *)(a1 + 7712) = v124;
            *(_BYTE *)(a1 + 7720) = v32;
            if (!v32)
            {
              CFTypeID v84 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)pthread_attr_t buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v84,  OS_LOG_TYPE_DEFAULT,  "#findalgs-peoplefinder,#findeeVIO Lost findee VIO stream - resetting filter",  buf,  2u);
              }

              sub_10030A6BC(a1);
            }
          }

          if ((v126 != 0) != (*(_BYTE *)(a1 + 7736) != 0))
          {
            *(double *)(a1 + 7728) = v37;
            *(_BYTE *)(a1 + 7736) = v126;
          }

          __int16 v85 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
            sub_1003AB9F0(a2, v85, v86, v87, v88, v89, v90, v91);
          }
          uint64_t v92 = *(_OWORD *)(a2 + 152);
          v128[0] = *(_OWORD *)(a2 + 136);
          v128[1] = v92;
          if (*(_BYTE *)(a2 + 169)) {
            v93 = *(_BYTE *)(a2 + 168) == 0;
          }
          else {
            v93 = 1;
          }
          uint64_t v94 = !v93;
          sub_10030A970(a1, (uint64_t)v128, v94, v130);
          return;
        }

        id v82 = *(_OWORD *)(a2 + 96);
        CFNumberRef v70 = *v69;
        *(_OWORD *)(a1 + 8416) = v82;
      }

      else
      {
        CFTypeID v81 = *(_OWORD *)(a2 + 96);
        CFNumberRef v70 = *v69;
        *(_OWORD *)(a1 + 8416) = v81;
        *(_BYTE *)(a1 + 84sub_100012358(v1 - 32) = 1;
      }

      if (!*(_BYTE *)(a2 + 112)) {
        sub_100006080();
      }
      BOOL v17 = v68;
      *(double *)(a1 + 8368) = v130 - *(double *)(a2 + 88);
      *(_BYTE *)(a1 + 8376) = 1;
      *(_OWORD *)(a1 + 8440) = *(_OWORD *)(a1 + 8416);
      goto LABEL_127;
    }

    uint64_t v27 = (double *)(a2 + 24);
    uint64_t v2 = *(double *)(a2 + 24);
    if (v2 == 409.5)
    {
      id v12 = *(unsigned __int8 *)(a1 + 8480);
      if (!*(_BYTE *)(a1 + 8480))
      {
        uint64_t v29 = 0;
        uint64_t v2 = 409.5;
        goto LABEL_58;
      }

      uint64_t v2 = 409.5;
      if (*(double *)(a1 + 8472) == 409.5)
      {
        uint64_t v28 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)pthread_attr_t buf = 0;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "#findalgs-peoplefinder,Received measured displacement with maximum enter timestamp.",  buf,  2u);
          uint64_t v2 = *v27;
        }

        uint64_t v29 = 1;
LABEL_58:
        *(double *)(a1 + 8472) = v2;
        *(_BYTE *)(a1 + 8480) = 1;
        __int128 v33 = *(_DWORD *)(a2 + 40);
        uint64_t v124 = 0.0;
        if (v33 != 1)
        {
          if (v33)
          {
            id v31 = 0;
            uint64_t v126 = 0;
            uint64_t v32 = 0;
LABEL_106:
            uint64_t v30 = 0.0;
            uint64_t v37 = 0.0;
            goto LABEL_107;
          }

          uint64_t v34 = v130;
          uint64_t v35 = *(double *)(a2 + 32);
          if ((v29 & 1) != 0)
          {
            uint64_t v124 = *(double *)(a1 + 7712);
            uint64_t v32 = *(unsigned __int8 *)(a1 + 7720);
          }

          else
          {
            uint64_t v39 = v130 - *v27;
            uint64_t v124 = v39;
            if (*(_BYTE *)(a1 + 7720))
            {
              if (v39 - *(double *)(a1 + 7712) <= dbl_100430360[*(_BYTE *)(a1 + 40) == 0])
              {
                uint64_t v32 = 1;
                goto LABEL_100;
              }

              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
                sub_1003ABA68();
              }
              sub_10030A6BC(a1);
              sub_1002FF998((void *)(a1 + 448));
              *(double *)(a1 + 7712) = v124;
            }

            else
            {
              *(double *)(a1 + 7712) = v39;
            }

            uint64_t v32 = 1;
            *(_BYTE *)(a1 + 7720) = 1;
          }

LABEL_139:
              uint64_t v35 = v122;
              if (!v122) {
                goto LABEL_141;
              }
              v123 = v122;
              goto LABEL_42;
            }

            CFIndex v65 = CFArrayGetCount(cf);
            if (v65 != v125)
            {
              CFIndex v106 = v65;
              uint64_t v107 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
              {
                v109 = v131;
                if (v132 < 0) {
                  v109 = (void **)v131[0];
                }
                *(_DWORD *)pthread_attr_t buf = 136446722;
                *(void *)&uint8_t buf[4] = v109;
                *(_WORD *)&buf[12] = 2050;
                *(void *)&buf[14] = v106;
                *(_WORD *)&_BYTE buf[22] = 2050;
                *(void *)v136 = v125;
                _os_log_error_impl( (void *)&_mh_execute_header,  v107,  OS_LOG_TYPE_ERROR,  "#wifi-service,%{public}s array length %{public}lu not equal to valid measurements %{public}lu",  buf,  0x20u);
              }

              goto LABEL_139;
            }

            CFIndex v111 = v65;
            if (v65 < 1) {
              goto LABEL_127;
            }
            CFIndex v66 = 0LL;
            while (2)
            {
              CFIndex v113 = v66;
              unsigned __int8 v67 = (const __CFDictionary *)CFArrayGetValueAtIndex(v64, v66);
              int8x8_t v68 = v67;
              if (v67 && (CFTypeID v69 = CFGetTypeID(v67), v69 == CFDictionaryGetTypeID()))
              {
                int v121 = 0;
                v70 = (const __CFNumber *)CFDictionaryGetValue(v68, @"RANGING_RSSI");
                int v71 = v70;
                if (v70 && (CFTypeID v72 = CFGetTypeID(v70), v72 == CFNumberGetTypeID()))
                {
                  CFNumberGetValue(v71, kCFNumberSInt32Type, &v121);
                  int v120 = 0;
                  int v73 = (const __CFNumber *)CFDictionaryGetValue(v68, @"RANGING_RTT");
                  id v74 = v73;
                  if (v73 && (CFTypeID v75 = CFGetTypeID(v73), v75 == CFNumberGetTypeID()))
                  {
                    CFNumberGetValue(v74, kCFNumberSInt32Type, &v120);
                    unsigned __int8 v119 = 0;
                    unsigned __int16 v76 = (const __CFNumber *)CFDictionaryGetValue(v68, @"RANGING_CORE_ID");
                    v77 = v76;
                    if (v76 && (CFTypeID v78 = CFGetTypeID(v76), v78 == CFNumberGetTypeID()))
                    {
                      CFNumberGetValue(v77, kCFNumberSInt8Type, &v119);
                      unsigned __int8 v118 = 0;
                      uint64_t v79 = (const __CFNumber *)CFDictionaryGetValue(v68, @"RANGING_PEER_CORE_ID");
                      v80 = v79;
                      if (v79 && (CFTypeID v81 = CFGetTypeID(v79), v81 == CFNumberGetTypeID()))
                      {
                        CFNumberGetValue(v80, kCFNumberSInt8Type, &v118);
                        uint64_t v117 = 0LL;
                        id v82 = (const __CFNumber *)CFDictionaryGetValue(v68, @"RANGING_RESULT_TIMESTAMP");
                        v83 = v82;
                        if (v82)
                        {
                          CFTypeID v84 = CFGetTypeID(v82);
                          if (v84 == CFNumberGetTypeID())
                          {
                            CFNumberGetValue(v83, kCFNumberSInt64Type, &v117);
                            __int16 v85 = (os_log_s *)qword_1008000A0;
                            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
                            {
                              *(_DWORD *)pthread_attr_t buf = 138413570;
                              *(void *)&uint8_t buf[4] = v22;
                              *(_WORD *)&buf[12] = 1024;
                              *(_DWORD *)&buf[14] = v121;
                              *(_WORD *)&buf[18] = 1024;
                              *(_DWORD *)&buf[20] = v120;
                              *(_WORD *)v136 = 1024;
                              *(_DWORD *)&v136[2] = v119;
                              *(_WORD *)&v136[6] = 1024;
                              *(_DWORD *)&v136[8] = v118;
                              *(_WORD *)&v136[12] = 2048;
                              *(void *)&v136[14] = v117;
                              _os_log_impl( (void *)&_mh_execute_header,  v85,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,WRTT: id: %@, rssi: %i, rtt: %i, coreID: %u, peerCoreID: %u, timestamp: 0x%llx",  buf,  0x2Eu);
                            }

                            sub_10001B2C8((void **)&v122, &v120, &v121, (char *)&v119, (char *)&v118, &v117);
LABEL_124:
                            id v64 = cf;
                            CFIndex v66 = v113 + 1;
                            if (v111 == v113 + 1) {
                              goto LABEL_127;
                            }
                            continue;
                          }
                        }

                        uint64_t v98 = qword_1008000A0;
                        if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
                          goto LABEL_124;
                        }
                        id v99 = v131;
                        if (v132 < 0) {
                          id v99 = (void **)v131[0];
                        }
                        *(_DWORD *)pthread_attr_t buf = 136446466;
                        *(void *)&uint8_t buf[4] = v99;
                        *(_WORD *)&buf[12] = 2050;
                        *(void *)&buf[14] = v113;
                        id v88 = (os_log_s *)v98;
                        v89 = "#wifi-service,%{public}s timestamp %{public}ld type";
                      }

                      else
                      {
                        uint64_t v96 = qword_1008000A0;
                        if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
                          goto LABEL_124;
                        }
                        uint64_t v97 = v131;
                        if (v132 < 0) {
                          uint64_t v97 = (void **)v131[0];
                        }
                        *(_DWORD *)pthread_attr_t buf = 136446466;
                        *(void *)&uint8_t buf[4] = v97;
                        *(_WORD *)&buf[12] = 2050;
                        *(void *)&buf[14] = v113;
                        id v88 = (os_log_s *)v96;
                        v89 = "#wifi-service,%{public}s peerCoreID %{public}ld type";
                      }
                    }

                    else
                    {
                      uint64_t v94 = qword_1008000A0;
                      if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
                        goto LABEL_124;
                      }
                      id v95 = v131;
                      if (v132 < 0) {
                        id v95 = (void **)v131[0];
                      }
                      *(_DWORD *)pthread_attr_t buf = 136446466;
                      *(void *)&uint8_t buf[4] = v95;
                      *(_WORD *)&buf[12] = 2050;
                      *(void *)&buf[14] = v113;
                      id v88 = (os_log_s *)v94;
                      v89 = "#wifi-service,%{public}s selfCoreID %{public}ld type";
                    }
                  }

                  else
                  {
                    uint64_t v92 = qword_1008000A0;
                    if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
                      goto LABEL_124;
                    }
                    v93 = v131;
                    if (v132 < 0) {
                      v93 = (void **)v131[0];
                    }
                    *(_DWORD *)pthread_attr_t buf = 136446466;
                    *(void *)&uint8_t buf[4] = v93;
                    *(_WORD *)&buf[12] = 2050;
                    *(void *)&buf[14] = v113;
                    id v88 = (os_log_s *)v92;
                    v89 = "#wifi-service,%{public}s oneRtt %{public}ld type";
                  }
                }

                else
                {
                  uint64_t v90 = qword_1008000A0;
                  if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
                    goto LABEL_124;
                  }
                  uint64_t v91 = v131;
                  if (v132 < 0) {
                    uint64_t v91 = (void **)v131[0];
                  }
                  *(_DWORD *)pthread_attr_t buf = 136446466;
                  *(void *)&uint8_t buf[4] = v91;
                  *(_WORD *)&buf[12] = 2050;
                  *(void *)&buf[14] = v113;
                  id v88 = (os_log_s *)v90;
                  v89 = "#wifi-service,%{public}s oneRssi %{public}ld type";
                }
              }

              else
              {
                uint64_t v86 = qword_1008000A0;
                if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_124;
                }
                id v87 = v131;
                if (v132 < 0) {
                  id v87 = (void **)v131[0];
                }
                *(_DWORD *)pthread_attr_t buf = 136446466;
                *(void *)&uint8_t buf[4] = v87;
                *(_WORD *)&buf[12] = 2050;
                *(void *)&buf[14] = v113;
                id v88 = (os_log_s *)v86;
                v89 = "#wifi-service,%{public}s oneMeas %{public}ld type";
              }

              break;
            }

            _os_log_error_impl((void *)&_mh_execute_header, v88, OS_LOG_TYPE_ERROR, v89, buf, 0x16u);
            goto LABEL_124;
          }

          uint64_t v11 = (void *)CFDictionaryGetValue(v9, @"RANGING_TOKEN_ID");
          id v12 = v11;
          if (v11)
          {
            CFTypeID v13 = CFGetTypeID(v11);
            if (v13 == CFDataGetTypeID())
            {
              id v14 = v12;
              goto LABEL_26;
            }
          }

          uint64_t v19 = qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
          {
            id v20 = v131;
            if (v132 < 0) {
              id v20 = (void **)v131[0];
            }
            *(_DWORD *)pthread_attr_t buf = 136446210;
            *(void *)&uint8_t buf[4] = v20;
            BOOL v17 = (os_log_s *)v19;
            int v18 = "#wifi-service,%{public}s ranging token id type";
LABEL_20:
            _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, v18, buf, 0xCu);
          }
        }

        else
        {
          uint64_t v15 = qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
          {
            CFIndex v16 = v131;
            if (v132 < 0) {
              CFIndex v16 = (void **)v131[0];
            }
            *(_DWORD *)pthread_attr_t buf = 136446210;
            *(void *)&uint8_t buf[4] = v16;
            BOOL v17 = (os_log_s *)v15;
            int v18 = "#wifi-service,%{public}s dictionary type";
            goto LABEL_20;
          }
        }
      }
    }

    *a3 = v133;
    *((void *)a3 + 2) = v134;
    v110 = &v133;
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_10038A570();
    }
    v110 = a3;
  }

  *(void *)v110 = 0LL;
  *((void *)v110 + 1) = 0LL;
  *((void *)v110 + 2) = 0LL;
  if (v132 < 0) {
    operator delete(v131[0]);
  }
  *(void *)pthread_attr_t buf = &v133;
  sub_10001FB2C((void ***)buf);
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35,  *(_DWORD *)(v5 + 376),  a2,  a4);
  uint64_t v11 = *(_DWORD *)(v5 + 472);
  if ((v11 & 0x200000) == 0)
  {
LABEL_61:
    if ((v11 & 0x400000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_141;
  }

  uint64_t v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 156);
  if ((v43 & 0x80000000) != 0)
  {
    __int128 v44 = 10;
  }

  else if (v43 >= 0x80)
  {
    __int128 v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43, a2);
    uint64_t v3 = *(_DWORD *)(a1 + 232);
  }

  else
  {
    __int128 v44 = 1;
  }

  id v4 = (v4 + v44 + 2);
  if ((v3 & 0x10000000) == 0)
  {
LABEL_119:
    if ((v3 & 0x20000000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_151;
  }

void sub_10001B200( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, void *__p, uint64_t a42)
{
  if (__p) {
    operator delete(__p);
  }

  *(void *)(v43 - 192) = v43 - 224;
  sub_10001FB2C((void ***)(v43 - 192));
  _Unwind_Resume(a1);
}

char *sub_10001B2C8(void **a1, _DWORD *a2, int *a3, char *a4, char *a5, uint64_t *a6)
{
  id v14 = a1[2];
  uint64_t v12 = (uint64_t)(a1 + 2);
  CFTypeID v13 = v14;
  unint64_t v15 = *(void *)(v12 - 8);
  if (v15 >= (unint64_t)v14)
  {
    unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v15 - (void)*a1) >> 3);
    unint64_t v22 = v21 + 1;
    if (v21 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_10001E11C();
    }
    unint64_t v23 = 0xAAAAAAAAAAAAAAABLL * ((v13 - (_BYTE *)*a1) >> 3);
    if (2 * v23 > v22) {
      unint64_t v22 = 2 * v23;
    }
    if (v23 >= 0x555555555555555LL) {
      unint64_t v24 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v24 = v22;
    }
    uint64_t v25 = (char *)sub_10001E130(v12, v24);
    int v26 = *a3;
    uint64_t v27 = &v25[24 * v21];
    uint64_t v29 = &v25[24 * v28];
    char v30 = *a4;
    char v31 = *a5;
    uint64_t v32 = *a6;
    *(_DWORD *)uint64_t v27 = *a2;
    *((_DWORD *)v27 + 1) = v26;
    v27[8] = v30;
    v27[9] = v31;
    *((void *)v27 + 2) = v32;
    id v20 = v27 + 24;
    uint64_t v34 = (char *)*a1;
    __int128 v33 = (char *)a1[1];
    if (v33 != *a1)
    {
      do
      {
        __int128 v35 = *(_OWORD *)(v33 - 24);
        *((void *)v27 - 1) = *((void *)v33 - 1);
        *(_OWORD *)(v27 - 24) = v35;
        v27 -= 24;
        v33 -= 24;
      }

      while (v33 != v34);
      __int128 v33 = (char *)*a1;
    }

    *a1 = v27;
    a1[1] = v20;
    a1[2] = v29;
    if (v33) {
      operator delete(v33);
    }
  }

  else
  {
    int v16 = *a3;
    char v17 = *a4;
    char v18 = *a5;
    uint64_t v19 = *a6;
    *(_DWORD *)unint64_t v15 = *a2;
    *(_DWORD *)(v15 + 4) = v16;
    *(_BYTE *)(v15 + 8) = v17;
    *(_BYTE *)(v15 + 9) = v18;
    *(void *)(v15 + 16) = v19;
    id v20 = (char *)(v15 + 24);
  }

  a1[1] = v20;
  return v20 - 24;
}

void sub_10001B42C(uint64_t a1, uint64_t a2, const __CFArray *a3, uint64_t a4, int a5)
{
  uint64_t v8 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  char v31 = a5;
  if (a5)
  {
    *(_BYTE *)(a1 + 52) = 0;
    if (*(_BYTE *)(a1 + 184)) {
      *(_BYTE *)(a1 + 184) = 0;
    }
  }

  id v9 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "#wifi-service,onWiFiDeviceClientRangingCallback",  buf,  2u);
  }

  uint64_t v32 = v8;
  uint64_t v33 = a1;
  sub_10001A200(a1, a3, &v44);
  uint64_t v34 = (__int128 *)*((void *)&v44 + 1);
  CFTypeID v10 = (__int128 *)v44;
  if ((void)v44 != *((void *)&v44 + 1))
  {
    uint64_t v11 = (void *)(a1 + 224);
    while (1)
    {
      __int128 v12 = *v10;
      int v39 = *((_DWORD *)v10 + 4);
      *(_OWORD *)pthread_attr_t buf = v12;
      CFTypeID v41 = 0LL;
      uint64_t v42 = 0LL;
      unint64_t v40 = 0LL;
      sub_10001E054( &v40,  *((const void **)v10 + 3),  *((void *)v10 + 4),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)v10 + 4) - *((void *)v10 + 3)) >> 3));
      int v43 = *((_DWORD *)v10 + 12);
      uint64_t v13 = *(void *)buf;
      id v14 = (void *)*v11;
      if (*v11)
      {
        unint64_t v15 = v11;
        do
        {
          unint64_t v16 = v14[4];
          BOOL v17 = v16 >= *(void *)buf;
          if (v16 >= *(void *)buf) {
            char v18 = v14;
          }
          else {
            char v18 = v14 + 1;
          }
          if (v17) {
            unint64_t v15 = v14;
          }
          id v14 = (void *)*v18;
        }

        while (*v18);
        if (v15 != v11 && *(void *)buf >= v15[4]) {
          break;
        }
      }

      uint64_t v19 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)NSErrorUserInfoKey v54 = 134217984;
        *(void *)&v54[4] = v13;
        _os_log_error_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_ERROR,  "#wifi-service,Received results for unmatched peer ID %llu",  v54,  0xCu);
      }

LABEL_46:
      if (v40)
      {
        CFTypeID v41 = v40;
        operator delete(v40);
      }

      CFTypeID v10 = (__int128 *)((char *)v10 + 56);
      if (v10 == v34) {
        goto LABEL_49;
      }
    }

    __int128 v35 = 0LL;
    uint64_t v36 = 0LL;
    uint64_t v37 = 0LL;
    sub_10001EF3C(&v35, v15[5], v15[6], 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v15[6] - v15[5]) >> 3));
    unint64_t v21 = v35;
    id v20 = v36;
    while (1)
    {
      if (v21 == v20)
      {
        *(void *)NSErrorUserInfoKey v54 = &v35;
        sub_10001F250((void ***)v54);
        goto LABEL_46;
      }

      sub_10003AD84((uint64_t)v21, (uint64_t)v54);
      *(void *)&buf[8] = sub_10003AD6C((uint64_t)v21);
      if (!v55)
      {
        uint64_t v25 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
        {
          id v26 = sub_10003AD44(v21);
          objc_claimAutoreleasedReturnValue(v26);
          sub_10038A5D4();
        }

        goto LABEL_39;
      }

      id v22 = sub_10003AD64((uint64_t)v21);
      unint64_t v23 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v22);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768LL;
      block[2] = sub_10001B978;
      block[3] = &unk_1007A2478;
      uint64_t v24 = (uint64_t)v55;
      if (v55)
      {
        if (v55 == v54)
        {
          int v47 = v46;
          (*(void (**)(_BYTE *, _BYTE *))(*(void *)v54 + 24LL))(v54, v46);
          goto LABEL_32;
        }

        uint64_t v24 = (*(uint64_t (**)(void))(*(void *)v55 + 16LL))();
      }

      int v47 = (_BYTE *)v24;
LABEL_32:
      __int128 v48 = *(_OWORD *)buf;
      int v49 = v39;
      uint64_t v51 = 0LL;
      uint64_t v52 = 0LL;
      __p = 0LL;
      sub_10001E054(&__p, v40, (uint64_t)v41, 0xAAAAAAAAAAAAAAABLL * ((v41 - (_BYTE *)v40) >> 3));
      int v53 = v43;
      dispatch_async(v23, block);

      if (__p)
      {
        uint64_t v51 = __p;
        operator delete(__p);
      }

      uint64_t v27 = v47;
      if (v47 == v46)
      {
        uint64_t v27 = v46;
        uint64_t v28 = 4LL;
      }

      else
      {
        if (!v47) {
          goto LABEL_39;
        }
        uint64_t v28 = 5LL;
      }

      (*(void (**)(void))(*v27 + 8 * v28))();
LABEL_39:
      uint64_t v29 = v55;
      if (v55 == v54)
      {
        uint64_t v29 = v54;
        uint64_t v30 = 4LL;
      }

      else
      {
        if (!v55) {
          goto LABEL_44;
        }
        uint64_t v30 = 5LL;
      }

      (*(void (**)(void))(*v29 + 8 * v30))();
LABEL_44:
      v21 += 21;
    }
  }

  uint64_t v25 = *(void *)(a1 + 48);
  if (!v25) {
    uint64_t v25 = *(void *)(qword_1008000E8 + 48);
  }
  id v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000500A0(v25, a2);
  uint64_t v27 = (int)v26;
  else {
    uint64_t v28 = 1;
  }
  id v4 = (v4 + v27 + v28 + 1);
  uint64_t v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_67;
    }
    goto LABEL_61;
  }

      id v14 = (_BYTE *)*((void *)this + 1);
      id v26 = (_BYTE *)*((void *)this + 2);
      if (v14 < v26 && *v14 == 21) {
        goto LABEL_29;
      }
      if (v14 == v26 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

  uint64_t v11 = *(void *)(v5 + 48);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_100800158 + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  v11,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_50;
  }

  uint64_t v11 = *(void *)(v5 + 56);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008001F0 + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  v11,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_52;
  }

    *(_DWORD *)(a1 + 160) |= 0x10u;
    uint64_t v24 = *(void **)(a1 + 40);
    if (!v24)
    {
      uint64_t v24 = operator new(0x28uLL);
      sub_10007F6B8((uint64_t)v24);
      *(void *)(a1 + 40) = v24;
    }

    uint64_t v25 = *(void *)(a2 + 40);
    if (!v25) {
      uint64_t v25 = *(void *)(qword_100800310 + 40);
    }
    sub_10007F70C((uint64_t)v24, v25);
    uint64_t v13 = *(_DWORD *)(a2 + 160);
    if ((v13 & 0x20) == 0)
    {
LABEL_18:
      if ((v13 & 0x40) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10,  *(_DWORD *)(v5 + 108),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_48;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14,  *(_DWORD *)(v5 + 92),  a2,  a4);
  if ((*(_DWORD *)(v5 + 104) & 0x100000) != 0) {
LABEL_22:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15,  *(_DWORD *)(v5 + 96),  a2,  a4);
LABEL_23:
  id v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  id v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  __int128 v35 = (void *)*((void *)this + 1);
  uint64_t v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v33 = v35;
  if (v35 && *v33 != v33[1]) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v34,  a2,  a3);
  }
  return a2;
}

  id v22 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 140) |= 8u;
  *(void *)(a1 + 40) = v22;
  uint64_t v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 0x10) == 0)
  {
LABEL_14:
    if ((v5 & 0x20) == 0) {
      goto LABEL_15;
    }
LABEL_48:
    uint64_t v24 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 140) |= 0x20u;
    *(void *)(a1 + 56) = v24;
    uint64_t v5 = *(_DWORD *)(a2 + 140);
    if ((v5 & 0x40) == 0)
    {
LABEL_16:
      if ((v5 & 0x80) == 0) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }

    goto LABEL_49;
  }

    if (SHIBYTE(v33) < 0) {
      operator delete(*(void **)&buf[8]);
    }
    if (SHIBYTE(v31) < 0)
    {
      CFTypeID v10 = (void *)v30;
      goto LABEL_15;
    }

    return;
  }

  if ((_DWORD)v44 == 1)
  {
    id v14 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "[Warning] Got trigger start, but state is ServiceRequestState::Active. Proceeding to restart.",  buf,  2u);
    }
  }

  unint64_t v15 = *(void *)(a1 + 160);
  v42[0] = &off_1007AF538;
  v42[1] = a3;
  int v43 = v42;
  unint64_t v16 = sub_100149EBC(v15, a2, (uint64_t)v42);
  BOOL v17 = v43;
  if (v43 == v42)
  {
    char v18 = 4LL;
    BOOL v17 = v42;
  }

  else
  {
    if (!v43) {
      goto LABEL_29;
    }
    char v18 = 5LL;
  }

  (*(void (**)(void))(*v17 + 8 * v18))();
LABEL_29:
  if (!v16)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038DC7C();
    }
    sub_1000065CC(&v30, "Error updating fServiceRequestsDatabase entry.");
    *(void *)pthread_attr_t buf = 999LL;
    if (SHIBYTE(v31) < 0)
    {
      sub_1000063A8(&buf[8], (void *)v30, *((unint64_t *)&v30 + 1));
      id v20 = *(void *)buf;
    }

    else
    {
      *(_OWORD *)&buf[8] = v30;
      uint64_t v33 = v31;
      id v20 = 999LL;
    }

    __int128 v35 = *(_OWORD *)&buf[8];
    uint64_t v34 = v20;
    uint64_t v36 = v33;
    *(void *)&buf[8] = 0LL;
    *(void *)&uint8_t buf[16] = 0LL;
    uint64_t v33 = 0LL;
    uint64_t v37 = 1;
    *(_BYTE *)(a4 + 8) = 0;
    *(_DWORD *)(a4 + 648) = 0;
    sub_100137614((_BYTE *)(a4 + 656), (uint64_t)&v34);
    if (v37 && SHIBYTE(v36) < 0)
    {
      unint64_t v21 = (void *)v35;
      goto LABEL_45;
    }

    goto LABEL_46;
  }

  sub_1001435D0(a1 + 184, a2, a3);
  v26[0] = 0;
  uint64_t v29 = 0;
  *(_BYTE *)(a4 + 8) = 1;
  *(_DWORD *)(a4 + 648) = 0;
  sub_100137614((_BYTE *)(a4 + 656), (uint64_t)v26);
  if (v29 && v28 < 0)
  {
    CFTypeID v10 = v27;
    goto LABEL_15;
  }

        uint64_t v24 = 1000 * v23.__d_.__rep_;
LABEL_47:
        if (v24 > (v22.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
        {
          v25.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
          goto LABEL_50;
        }
      }

      v25.__d_.__rep_ = v24 + v22.__d_.__rep_;
LABEL_50:
      std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 32), &__lk, v25);
      std::chrono::steady_clock::now();
    }

    break;
  }

  if (*(_BYTE *)(a1 + 3050))
  {
LABEL_53:
    *(void *)&__src[265] = *(void *)(a1 + 3042);
    id v26 = *(_OWORD *)(a1 + 3013);
    *(_OWORD *)&__src[220] = *(_OWORD *)(a1 + 2997);
    *(_OWORD *)&__src[236] = v26;
    *(_OWORD *)&__src[252] = *(_OWORD *)(a1 + 3029);
    uint64_t v27 = *(_OWORD *)(a1 + 2949);
    *(_OWORD *)&__src[156] = *(_OWORD *)(a1 + 2933);
    *(_OWORD *)&__src[172] = v27;
    uint64_t v28 = *(_OWORD *)(a1 + 2981);
    *(_OWORD *)&__src[188] = *(_OWORD *)(a1 + 2965);
    *(_OWORD *)&__src[204] = v28;
    uint64_t v29 = *(_OWORD *)(a1 + 2917);
    *(_OWORD *)&__src[124] = *(_OWORD *)(a1 + 2901);
    *(_OWORD *)&__src[140] = v29;
    *(_BYTE *)(a1 + 3050) = 0;
    uint64_t v30 = __dst;
    memcpy(__dst, __src, 0x111uLL);
    char v31 = 1;
    goto LABEL_59;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
    sub_100393988();
  }
LABEL_58:
  char v31 = 0;
  uint64_t v30 = __dst;
  *__dst = 0;
LABEL_59:
  v30[273] = v31;
  if (__lk.__owns_) {
    std::mutex::unlock(__lk.__m_);
  }
  if (v37) {
    std::mutex::unlock(v36);
  }
}

  uint64_t v24 = sub_1002405E4((uint64_t)(v17 + 5), 1u);
  id v26 = *a1;
  uint64_t v25 = (__int128 *)a1[1];
  BOOL v63 = v26;
  v64[0] = v26;
  if (v26 == (uint64_t *)v25 || (uint64_t v27 = v26 + 14, v66 = (__int128 *)(v26 + 14), v26 + 14 == (uint64_t *)v25))
  {
    uint64_t v27 = v26;
    goto LABEL_73;
  }

  if (sub_1002ECFF4(&v66, (uint64_t *)&v63))
  {
    BOOL v63 = v26 + 14;
    uint64_t v28 = v26;
  }

  else
  {
    v64[0] = v26 + 14;
    uint64_t v28 = v26 + 14;
    uint64_t v27 = v26;
  }

  uint64_t v29 = (__int128 *)(v26 + 28);
  uint64_t v30 = v26 + 42;
  while (2)
  {
    CFIndex v65 = (__int128 *)(v30 - 14);
    CFIndex v66 = v29 + 7;
    if (v29 + 7 != v25)
    {
      if (sub_1002ECFF4(&v66, (uint64_t *)&v65))
      {
        if (sub_1002ECFF4(&v66, (uint64_t *)&v63))
        {
          BOOL v63 = v30;
          uint64_t v27 = v30;
        }

        char v31 = sub_1002ECFF4(&v65, (uint64_t *)v64);
        uint64_t v32 = v29;
        if (v31) {
          goto LABEL_64;
        }
      }

      else
      {
        if (sub_1002ECFF4(&v65, (uint64_t *)&v63))
        {
          BOOL v63 = v30 - 14;
          uint64_t v27 = v30 - 14;
        }

        uint64_t v33 = sub_1002ECFF4(&v66, (uint64_t *)v64);
        uint64_t v32 = v30;
        if (v33)
        {
LABEL_64:
          v29 += 14;
          CFIndex v66 = v29;
          v30 += 28;
          if (v29 == v25) {
            goto LABEL_72;
          }
          continue;
        }
      }

      v64[0] = v32;
      uint64_t v28 = v32;
      goto LABEL_64;
    }

    break;
  }

  if (sub_1002ECFF4(&v65, (uint64_t *)&v63))
  {
    uint64_t v27 = v30 - 14;
  }

  else if (!sub_1002ECFF4(&v65, (uint64_t *)v64))
  {
    uint64_t v28 = v30 - 14;
  }

  if ((_DWORD)v12 != 1)
  {
    char v18 = 1;
    *a1 = 1;
    a1[2] = v15;
    *((double *)a1 + 2) = v13;
    __int128 v12 = 1LL;
    goto LABEL_56;
  }

  if (v3)
  {
    char v18 = 1;
    if (v15) {
      __int128 v12 = 1LL;
    }
    else {
      __int128 v12 = 2LL;
    }
    *a1 = v12;
    a1[2] = v15;
    goto LABEL_55;
  }

  __int128 v12 = 1LL;
  if (v13 > *((double *)a1 + 2))
  {
    *a1 = 1;
    a1[2] = v15;
    char v18 = 1;
LABEL_55:
    *((double *)a1 + 2) = v13;
    goto LABEL_56;
  }

  return v12;
}

LABEL_49:
  if ((v31 & 1) != 0) {
    sub_1000147F0(v33, 0.0);
  }
  *(void *)pthread_attr_t buf = &v44;
  sub_10001FB2C((void ***)buf);
  std::mutex::unlock(v32);
}

  uint64_t v25 = (unsigned int *)*((void *)this + 6);
  if (!v25) {
    uint64_t v25 = *(unsigned int **)(qword_1008000E8 + 48);
  }
  *(_BYTE *)id v4 = 50;
  id v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[17];
  if (v26 > 0x7F)
  {
    uint64_t v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v26,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v26;
    uint64_t v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  id v4 = sub_10004FDF8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v25, v27, a3);
  id v9 = *((_DWORD *)this + 24);
  if ((v9 & 0x40) == 0)
  {
LABEL_14:
    if ((v9 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_68;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 384),  (int)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_53;
  }

  uint64_t v27 = *(_DWORD **)(a1 + 56);
  if (!v27) {
    uint64_t v27 = *(_DWORD **)(qword_100800158 + 56);
  }
  uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10005FAF4(v27, a2);
  uint64_t v29 = (int)v28;
  else {
    uint64_t v30 = 1;
  }
  id v4 = (v4 + v29 + v30 + 1);
  uint64_t v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x80) != 0)
  {
LABEL_55:
    char v31 = *(void *)(a1 + 64);
    if (!v31) {
      char v31 = *(void *)(qword_100800158 + 64);
    }
    uint64_t v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100061098(v31, a2);
    uint64_t v33 = (int)v32;
    else {
      uint64_t v34 = 1;
    }
    id v4 = (v4 + v33 + v34 + 1);
    uint64_t v3 = *(_DWORD *)(a1 + 392);
  }

  __int128 v12 = *(void *)(v5 + 64);
  if (!v12) {
    __int128 v12 = *(void *)(qword_1008001F0 + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  v12,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_55;
  }

  uint64_t v25 = *(void *)(a1 + 56);
  if (!v25) {
    uint64_t v25 = *(void *)(qword_1008001F0 + 56);
  }
  id v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100084090(v25, a2);
  uint64_t v27 = (int)v26;
  else {
    uint64_t v28 = 1;
  }
  id v4 = (v4 + v27 + v28 + 1);
  uint64_t v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x80) != 0)
  {
LABEL_55:
    uint64_t v29 = *(void *)(a1 + 64);
    if (!v29) {
      uint64_t v29 = *(void *)(qword_1008001F0 + 64);
    }
    uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000846F4(v29, a2);
    char v31 = (int)v30;
    else {
      uint64_t v32 = 1;
    }
    id v4 = (v4 + v31 + v32 + 1);
    uint64_t v3 = *(_DWORD *)(a1 + 252);
  }

  uint64_t v25 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 104) |= 0x10u;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v25;
  uint64_t v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x20) != 0) {
    goto LABEL_50;
  }
LABEL_12:
  if ((v5 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_51:
  uint64_t v27 = *(_BYTE *)(a2 + 40);
  *(_DWORD *)(a1 + 104) |= 0x40u;
  *(_BYTE *)(a1 + 40) = v27;
  uint64_t v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x80) != 0)
  {
LABEL_14:
    id v7 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 104) |= 0x80u;
    *(_DWORD *)(a1 + 44) = v7;
    uint64_t v5 = *(_DWORD *)(a2 + 104);
  }

  unint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v21 >= 0x80)
  {
    id v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
    uint64_t v3 = *(_DWORD *)(a1 + 84);
  }

  else
  {
    id v22 = 2;
  }

  v4 += v22;
  if ((v3 & 0x100) != 0)
  {
LABEL_53:
    unint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
    if (v23 >= 0x80) {
    else
    }
      uint64_t v24 = 2;
    v4 += v24;
  }

        BOOL v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
        if ((v17 & 0x80000000) != 0)
        {
          char v18 = 11;
        }

        else if (v17 >= 0x80)
        {
          char v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( v17,  a2)
              + 1;
          uint64_t v3 = *(_DWORD *)(a1 + 52);
        }

        else
        {
          char v18 = 2;
        }

        id v4 = (v18 + v4);
        if ((v3 & 0x80) == 0) {
          goto LABEL_61;
        }
        goto LABEL_55;
      }
    }

    else
    {
      id v4 = 0LL;
      if ((*(_BYTE *)(a1 + 52) & 2) == 0) {
        goto LABEL_18;
      }
    }

    id v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v7 & 0x80000000) != 0)
    {
      uint64_t v8 = 10;
    }

    else if (v7 >= 0x80)
    {
      uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      uint64_t v3 = *(_DWORD *)(a1 + 52);
    }

    else
    {
      uint64_t v8 = 1;
    }

    id v4 = (v4 + v8 + 1);
    goto LABEL_18;
  }

  id v4 = 0LL;
LABEL_61:
  unint64_t v21 = *(void **)(a1 + 8);
  if (v21 && *v21 != v21[1]) {
    id v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 48) = v4;
  return v4;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(5LL, *(void *)(v5 + 32), a2);
  id v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_51;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13,  *(_DWORD *)(v5 + 124),  a2,  a4);
  if ((*(_DWORD *)(v5 + 160) & 0x80000) != 0) {
LABEL_21:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14,  *(_DWORD *)(v5 + 152),  a2,  a4);
LABEL_22:
  if (*(int *)(v5 + 136) >= 1)
  {
    id v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15,  *(void *)(*(void *)(v5 + 128) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 136));
  }

  CFTypeID v10 = *(void **)(v5 + 8);
  id v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

  if ((v3 & 0xFF00) == 0) {
    goto LABEL_89;
  }
  if ((v3 & 0x100) != 0)
  {
    unint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
    if (v23 >= 0x80)
    {
      uint64_t v3 = *(_DWORD *)(a1 + 88);
    }

    else
    {
      uint64_t v24 = 2;
    }

    LODWORD(v4) = v24 + v4;
    if ((v3 & 0x200) == 0)
    {
LABEL_52:
      if ((v3 & 0x400) == 0) {
        goto LABEL_53;
      }
      goto LABEL_66;
    }
  }

  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_52;
  }

  uint64_t v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if (v25 >= 0x80)
  {
    id v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    uint64_t v3 = *(_DWORD *)(a1 + 88);
  }

  else
  {
    id v26 = 2;
  }

  LODWORD(v4) = v26 + v4;
  if ((v3 & 0x400) == 0)
  {
LABEL_53:
    if ((v3 & 0x800) == 0) {
      goto LABEL_54;
    }
    goto LABEL_70;
  }

  uint64_t v29 = *(void *)(a1 + 64);
  if (!v29) {
    uint64_t v29 = *(void *)(qword_100800498 + 64);
  }
  uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000E6748(v29, a2);
  char v31 = (int)v30;
  else {
    uint64_t v32 = 1;
  }
  id v4 = (v4 + v31 + v32 + 1);
  uint64_t v3 = *(_DWORD *)(a1 + 148);
  if ((v3 & 0x80) != 0)
  {
LABEL_55:
    uint64_t v33 = *(void *)(a1 + 72);
    if (!v33) {
      uint64_t v33 = *(void *)(qword_100800498 + 72);
    }
    uint64_t v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000D758C(v33, a2);
    __int128 v35 = (int)v34;
    else {
      uint64_t v36 = 1;
    }
    id v4 = (v4 + v35 + v36 + 1);
    uint64_t v3 = *(_DWORD *)(a1 + 148);
  }

    unint64_t v23 = *(_DWORD *)(a2 + 72);
    if (v23 >= 6) {
      sub_10038C684();
    }
    *(_DWORD *)(a1 + 104) |= 0x20u;
    *(_DWORD *)(a1 + 72) = v23;
    uint64_t v5 = *(_DWORD *)(a2 + 104);
    if ((v5 & 0x40) == 0) {
      goto LABEL_25;
    }
LABEL_24:
    __int128 v12 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 104) |= 0x40u;
    *(void *)(a1 + 56) = v12;
    uint64_t v5 = *(_DWORD *)(a2 + 104);
LABEL_25:
    if ((v5 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 104) |= 0x80u;
      uint64_t v13 = *(void **)(a1 + 64);
      if (!v13)
      {
        uint64_t v13 = operator new(0x28uLL);
        sub_10004AF3C(v13);
        *(void *)(a1 + 64) = v13;
      }

      id v14 = *(void *)(a2 + 64);
      if (!v14) {
        id v14 = *(void *)(qword_100800658 + 64);
      }
      sub_10004B93C((uint64_t)v13, v14);
      uint64_t v5 = *(_DWORD *)(a2 + 104);
    }
  }

  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 104) |= 0x100u;
      unint64_t v15 = *(void **)(a1 + 80);
      if (!v15)
      {
        unint64_t v15 = operator new(0x28uLL);
        sub_10004AF3C(v15);
        *(void *)(a1 + 80) = v15;
      }

      unint64_t v16 = *(void *)(a2 + 80);
      if (!v16) {
        unint64_t v16 = *(void *)(qword_100800658 + 80);
      }
      sub_10004B93C((uint64_t)v15, v16);
      uint64_t v5 = *(_DWORD *)(a2 + 104);
    }

    if ((v5 & 0x200) != 0)
    {
      BOOL v17 = *(void *)(a2 + 88);
      *(_DWORD *)(a1 + 104) |= 0x200u;
      *(void *)(a1 + 88) = v17;
      uint64_t v5 = *(_DWORD *)(a2 + 104);
    }

    if ((v5 & 0x400) != 0)
    {
      char v18 = *(_DWORD *)(a2 + 76);
      if (v18 >= 9) {
        sub_10038C65C();
      }
      *(_DWORD *)(a1 + 104) |= 0x400u;
      *(_DWORD *)(a1 + 76) = v18;
      uint64_t v5 = *(_DWORD *)(a2 + 104);
    }

    if ((v5 & 0x800) != 0)
    {
      uint64_t v19 = *(_DWORD *)(a2 + 96);
      if (v19 >= 4) {
        sub_10038C634();
      }
      *(_DWORD *)(a1 + 104) |= 0x800u;
      *(_DWORD *)(a1 + 96) = v19;
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

      uint64_t v19 = *(void *)(a1 + 144);
      *(_DWORD *)uint64_t v32 = 3;
      v32[4] = 0;
      uint64_t v34 = 0;
      LOBYTE(v36) = 0;
      uint64_t v42 = 0;
      __int128 v44 = *((void *)a2 + 2);
      int v43 = *(_OWORD *)a2;
      id v45 = 1;
      unsigned __int8 v46 = 0;
      int v47 = 0;
      __int128 v48 = 0;
      int v49 = 0;
      (*(void (**)(uint64_t, uint8_t *))(*(void *)v19 + 16LL))(v19, v32);
      if (v42 && v40 && v39 < 0) {
        operator delete(v38);
      }
      if (!v14) {
        return;
      }
      id v20 = *(_DWORD *)(a1 + 156);
      if (v20 == 3)
      {
        if (*(_BYTE *)(a1 + 154)) {
          return;
        }
        uint64_t v24 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t v32 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Ready is switched to Ready_UWB because NB is not available",  v32,  2u);
        }

        id v22 = 0x100000004LL;
        unint64_t v23 = 4;
      }

      else
      {
        if (v20 != 4 || !*(_BYTE *)(a1 + 154)) {
          return;
        }
        unint64_t v21 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t v32 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Ready_UWB is switched to Ready because NB is available",  v32,  2u);
        }

        id v22 = 0LL;
        unint64_t v23 = 3;
      }

      *(_DWORD *)(a1 + 156) = v23;
      LODWORD(__p) = v23;
      v27[0] = 0;
      uint64_t v30 = 0;
      char v31 = v22;
      uint64_t v25 = *(void *)(a1 + 144);
      *(_DWORD *)uint64_t v32 = 2;
      v32[4] = 0;
      uint64_t v34 = 0;
      uint64_t v36 = v23;
      sub_100137848(v37, (uint64_t)v27);
      CFTypeID v41 = v31;
      uint64_t v42 = 1;
      LOBYTE(v43) = 0;
      id v45 = 0;
      unsigned __int8 v46 = 0;
      int v47 = 0;
      __int128 v48 = 0;
      int v49 = 0;
      (*(void (**)(uint64_t, uint8_t *))(*(void *)v25 + 16LL))(v25, v32);
      if (v42 && v40 && v39 < 0) {
        operator delete(v38);
      }
      if (v30)
      {
        if (v29 < 0) {
          operator delete(v28);
        }
      }

      return;
    default:
      goto LABEL_48;
  }

      LOBYTE(v88) = 0;
      v93 = 0;
      if (([*(id *)(a1 + 56) dataExchangeDisabledAndUsingParameterOverrides] & 1) == 0)
      {
        CFTypeID v41 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_1003A120C(v41, v42, v43);
        }
        uint64_t v86 = NSLocalizedFailureReasonErrorKey;
        id v87 = @"Add client fail - raw data could not be parsed";
        uint64_t v27 = (AccessoryServiceClientTracking *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v87,  &v86,  1LL));
        __int128 v44 = objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"com.apple.NearbyInteraction",  -5887LL,  v27));
        id v45 = *(void *)(*(void *)(a1 + 72) + 8LL);
        unsigned __int8 v46 = *(void **)(v45 + 40);
        *(void *)(v45 + 40) = v44;

        goto LABEL_79;
      }

      uint64_t v28 = (char *)[v25 UTF8String];
      sub_100254448(v2, &v28);
      goto LABEL_11;
    }

    id v20 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A1F7C(v20);
    }
  }

void sub_10001B874( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::mutex *a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void *__p, uint64_t a23, uint64_t a24, uint64_t a25, char a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39)
{
}

void sub_10001B978(uint64_t a1)
{
  __int128 v8 = *(_OWORD *)(a1 + 64);
  int v9 = *(_DWORD *)(a1 + 80);
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  __p = 0LL;
  sub_10001E054( &__p,  *(const void **)(a1 + 88),  *(void *)(a1 + 96),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 96) - *(void *)(a1 + 88)) >> 3));
  int v13 = *(_DWORD *)(a1 + 112);
  uint64_t v4 = 0LL;
  uint64_t v5 = 0LL;
  uint64_t v3 = 0LL;
  id v6 = &v3;
  char v7 = 0;
  uint64_t v3 = (char *)operator new(0x38uLL);
  uint64_t v4 = (uint64_t)v3;
  uint64_t v5 = v3 + 56;
  uint64_t v4 = sub_100020ED0((uint64_t)&v5, &v8, &v14, (uint64_t)v3);
  uint64_t v2 = *(void *)(a1 + 56);
  if (!v2) {
    sub_10001EEF0();
  }
  (*(void (**)(uint64_t, char **))(*(void *)v2 + 48LL))(v2, &v3);
  id v6 = &v3;
  sub_10001FB2C((void ***)&v6);
  if (__p)
  {
    uint64_t v11 = __p;
    operator delete(__p);
  }

void sub_10001BA9C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
  {
    a19 = (uint64_t)__p;
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void *sub_10001BAE4(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 64);
  int v5 = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 88) = 0LL;
  *(_DWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 64) = v4;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 104) = 0LL;
  uint64_t result = sub_10001E054( (void *)(a1 + 88),  *(const void **)(a2 + 88),  *(void *)(a2 + 96),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 96) - *(void *)(a2 + 88)) >> 3));
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  return result;
}

void sub_10001BB5C(_Unwind_Exception *exception_object)
{
  __int128 v4 = *(void **)(v2 + 56);
  if (v4 == v1)
  {
    uint64_t v5 = 4LL;
  }

  else
  {
    if (!v4) {
      goto LABEL_6;
    }
    uint64_t v5 = 5LL;
    uint64_t v1 = *(void **)(v2 + 56);
  }

  (*(void (**)(void *))(*v1 + 8 * v5))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

void *sub_10001BB98(void *a1)
{
  uint64_t v2 = a1 + 4;
  uint64_t v3 = (void *)a1[11];
  if (v3)
  {
    a1[12] = v3;
    operator delete(v3);
  }

  uint64_t result = (void *)a1[7];
  if (result == v2)
  {
    uint64_t v5 = 4LL;
    uint64_t result = v2;
  }

  else
  {
    if (!result) {
      return result;
    }
    uint64_t v5 = 5LL;
  }

  return (void *)(*(uint64_t (**)(void))(*result + 8 * v5))();
}

void sub_10001BBFC(uint64_t a1, uint64_t a2, const __CFArray *a3)
{
  uint64_t v5 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  id v6 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "#wifi-service,onWiFiDeviceClientRangingCallback2p4GHz",  buf,  2u);
  }

  sub_10001A200(a1, a3, &v27);
  __int128 v8 = (__int128 *)*((void *)&v27 + 1);
  char v7 = (__int128 *)v27;
  if ((void)v27 == *((void *)&v27 + 1))
  {
LABEL_33:
    if (*(_BYTE *)(a1 + 408)) {
      sub_100018ED8(a1, 4);
    }
    goto LABEL_35;
  }

  do
  {
    __int128 v9 = *v7;
    int v22 = *((_DWORD *)v7 + 4);
    *(_OWORD *)pthread_attr_t buf = v9;
    uint64_t v24 = 0LL;
    uint64_t v25 = 0LL;
    unint64_t v23 = 0LL;
    sub_10001E054( &v23,  *((const void **)v7 + 3),  *((void *)v7 + 4),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)v7 + 4) - *((void *)v7 + 3)) >> 3));
    int v26 = *((_DWORD *)v7 + 12);
    int v10 = *(unsigned __int8 *)(a1 + 408);
    if (!*(_BYTE *)(a1 + 408))
    {
      __int128 v14 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
        sub_10038A610(v39, &v40, v14);
      }
      goto LABEL_28;
    }

    sub_10003AD84(a1 + 240, (uint64_t)v37);
    *(void *)&buf[8] = sub_10003AD6C(a1 + 240);
    if (!v38)
    {
      unint64_t v15 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        id v16 = sub_10003AD44((id *)(a1 + 240));
        objc_claimAutoreleasedReturnValue(v16);
        sub_10038A5D4();
      }

      goto LABEL_23;
    }

    id v11 = sub_10003AD64(a1 + 240);
    uint64_t v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v11);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3321888768LL;
    block[2] = sub_10001C078;
    block[3] = &unk_1007A2478;
    uint64_t v13 = (uint64_t)v38;
    if (!v38) {
      goto LABEL_9;
    }
    if (v38 != v37)
    {
      uint64_t v13 = (*(uint64_t (**)(void *))(*v38 + 16LL))(v38);
LABEL_9:
      uint64_t v30 = (_BYTE *)v13;
      goto LABEL_16;
    }

    uint64_t v30 = v29;
    (*(void (**)(void *))(v37[0] + 24LL))(v37);
LABEL_16:
    __int128 v31 = *(_OWORD *)buf;
    int v32 = v22;
    uint64_t v34 = 0LL;
    uint64_t v35 = 0LL;
    __p = 0LL;
    sub_10001E054(&__p, v23, (uint64_t)v24, 0xAAAAAAAAAAAAAAABLL * ((v24 - (_BYTE *)v23) >> 3));
    int v36 = v26;
    dispatch_async(v12, block);

    if (__p)
    {
      uint64_t v34 = __p;
      operator delete(__p);
    }

    BOOL v17 = v30;
    if (v30 == v29)
    {
      BOOL v17 = v29;
      uint64_t v18 = 4LL;
      goto LABEL_22;
    }

    if (v30)
    {
      uint64_t v18 = 5LL;
LABEL_22:
      (*(void (**)(void))(*v17 + 8 * v18))();
    }

LABEL_23:
    uint64_t v19 = v38;
    if (v38 == v37)
    {
      uint64_t v19 = v37;
      uint64_t v20 = 4LL;
    }

    else
    {
      if (!v38) {
        goto LABEL_28;
      }
      uint64_t v20 = 5LL;
    }

    (*(void (**)(void))(*v19 + 8 * v20))();
LABEL_28:
    if (v23)
    {
      uint64_t v24 = v23;
      operator delete(v23);
    }

    if (!v10) {
      break;
    }
    char v7 = (__int128 *)((char *)v7 + 56);
  }

  while (v7 != v8);
  if ((void)v27 == *((void *)&v27 + 1)) {
    goto LABEL_33;
  }
LABEL_35:
  *(_DWORD *)(a1 + 452) = 0;
  *(_BYTE *)(a1 + 48) = 1;
  *(void *)pthread_attr_t buf = &v27;
  sub_10001FB2C((void ***)buf);
  std::mutex::unlock(v5);
}

  *((_WORD *)v30 + 20) = 0;
  (*((void (**)(id, uint64_t, void))v32 + 2))(v32, 1LL, 0LL);
LABEL_30:
}

  unint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v88 objectForKey:PRP2PArgsRangingRole]);
  if (!v21 || (uint64_t v30 = objc_opt_class(&OBJC_CLASS___NSNumber, v29), (objc_opt_isKindOfClass(v21, v30) & 1) == 0))
  {
    int v120 = NSLocalizedDescriptionKey;
    int v121 = @"No session role provided.";
    __int128 v48 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v121,  &v120,  1LL));
    int v49 = PRErrorWithCodeAndUserInfo(100LL, v48);
    CFTypeID v50 = (void *)objc_claimAutoreleasedReturnValue(v49);

    v10[2](v10, 0LL, v50);
    goto LABEL_37;
  }

  if ([v21 intValue] && objc_msgSend(v21, "intValue") != 1)
  {
    unsigned __int8 v118 = NSLocalizedDescriptionKey;
    unsigned __int8 v119 = @"Invalid session role provided.";
    int v53 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v119,  &v118,  1LL));
    NSErrorUserInfoKey v54 = PRErrorWithCodeAndUserInfo(100LL, v53);
    CFTypeID v55 = (void *)objc_claimAutoreleasedReturnValue(v54);

    v10[2](v10, 0LL, v55);
    goto LABEL_37;
  }

  __int128 v31 = sub_100288340();
  int v32 = v31[406];
  uint64_t v33 = (std::__shared_weak_count *)v31[407];
  id v95 = v32;
  uint64_t v96 = v33;
  id v87 = v33;
  if (v33)
  {
    p_shared_owners = (unint64_t *)&v33->__shared_owners_;
    do
      uint64_t v35 = __ldxr(p_shared_owners);
    while (__stxr(v35 + 1, p_shared_owners));
  }

  if (v32)
  {
    uint64_t v86 = (void *)objc_claimAutoreleasedReturnValue([v88 objectForKey:PRDebugConfigArgUWBChannel]);
    if (v86 && (uint64_t v37 = objc_opt_class(&OBJC_CLASS___NSNumber, v36), (objc_opt_isKindOfClass(v86, v37) & 1) != 0))
    {
      CFTypeID v38 = [v86 intValue];
      unsigned __int8 v46 = sub_10032BBB0(v38, v39, v40, v41, v42, v43, v44, v45);
      int v47 = 256;
    }

    else
    {
      unsigned __int8 v46 = 0;
      int v47 = 0;
    }

    uint64_t v56 = (void *)objc_claimAutoreleasedReturnValue([v9 roseMACAddress]);
    [v56 getBytes:&v115 length:8];

    v109 = 1;
    v110 = 0;
    CFIndex v111 = 0;
    unsigned __int8 v112 = v115;
    CFIndex v113 = 1;
    int v114 = 0;
    v93 = 0;
    uint64_t v94 = &v109;
    if (sub_100266E04(v32, &v92, (unsigned __int8 *)&v93, v47 | v46))
    {
      else {
        sub_10014054C(&v92, (uint64_t)buf);
      }
      CFTypeID v62 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT))
      {
        if (!v106[57]) {
          sub_100006080();
        }
        *(_DWORD *)unint64_t v101 = 67109120;
        *(_DWORD *)&v101[4] = v106[56];
        _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEFAULT,  "[P2PDEBUG] post prep req uwbChannel %hhu",  v101,  8u);
      }

      BOOL v63 = v88;
      if (v88)
      {
        uint64_t v91 = 0LL;
        id v64 = sub_10000B858(v88, v106, &v91);
        CFIndex v65 = v91;
        CFIndex v66 = v65;
        if ((v64 & 1) == 0)
        {
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
            sub_10038AE80();
          }
          v10[2](v10, 0LL, v66);
          goto LABEL_80;
        }

        BOOL v63 = v88;
      }

      CFIndex v66 = (void *)objc_claimAutoreleasedReturnValue([v63 objectForKey:PRDebugConfigArgSolutionVariant]);
      if (v66)
      {
        int8x8_t v68 = objc_opt_class(&OBJC_CLASS___NSNumber, v67);
        if ((objc_opt_isKindOfClass(v66, v68) & 1) != 0)
        {
          CFTypeID v69 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)unint64_t v101 = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v69,  OS_LOG_TYPE_DEFAULT,  "P2P Ranging: PRDebugConfigArgSolutionVariant passed as an option.",  v101,  2u);
          }

          v70 = [v66 intValue];
          switch(v70)
          {
            case 0u:
              id v74 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)unint64_t v101 = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v74,  OS_LOG_TYPE_DEFAULT,  "   PRRoseSolutionNotSensorFused",  v101,  2u);
              }

              CFTypeID v72 = 1;
              goto LABEL_71;
            case 2u:
              int v73 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)unint64_t v101 = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v73,  OS_LOG_TYPE_DEFAULT,  "   PRRoseSolutionRawRangeSensorFusionAngle",  v101,  2u);
              }

              CFTypeID v72 = 5;
              goto LABEL_71;
            case 1u:
              int v71 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)unint64_t v101 = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_DEFAULT,  "   PRRoseSolutionSensorFused",  v101,  2u);
              }

              CFTypeID v72 = 3;
LABEL_71:
              v105 = v72;
              break;
          }
        }
      }

      CFTypeID v75 = (std::__shared_weak_count *)sub_100288340();
      sub_1000122E4(v101, (void *)self->_rangingManagerClient.__ptr_ + 1);
      v89 = *(void *)v101;
      uint64_t v90 = v102;
      if (v102)
      {
        p_shared_weak_owners = (unint64_t *)&v102->__shared_weak_owners_;
        do
          v77 = __ldxr(p_shared_weak_owners);
        while (__stxr(v77 + 1, p_shared_weak_owners));
      }

      CFTypeID v78 = sub_100288B90(v75, &v89, (uint64_t)buf);
      if (v90) {
        std::__shared_weak_count::__release_weak(v90);
      }
      sub_100012390((uint64_t)v101);
      if ((v78 & 0xFF0000) != 0)
      {
        uint64_t v79 = self;
        objc_sync_enter(v79);
        self->_p2pServiceId = v78;
        objc_sync_exit(v79);

        v10[2](v10, 1LL, 0LL);
        -[PRRangingServiceProxy remoteDevice:didChangeState:](v79, "remoteDevice:didChangeState:", v9, 1LL);
      }

      else
      {
        id v99 = NSLocalizedDescriptionKey;
        unsigned __int16 v100 = @"Register for service failed";
        v80 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v100,  &v99,  1LL));
        CFTypeID v81 = PRErrorWithCodeAndUserInfo(101LL, v80);
        id v82 = (void *)objc_claimAutoreleasedReturnValue(v81);

        v10[2](v10, 0LL, v82);
      }

  uint64_t v12 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 72) |= 8u;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v12;
  uint64_t v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    __int128 v14 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(_DWORD *)(a1 + 40) = v14;
    uint64_t v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    goto LABEL_26;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 40),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }

  uint64_t v12 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 72) |= 8u;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v12;
  uint64_t v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    __int128 v14 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(_DWORD *)(a1 + 40) = v14;
    uint64_t v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    goto LABEL_26;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 40),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }

  int v10 = *(void *)(v5 + 48);
  if (!v10) {
    int v10 = *(void *)(qword_1008000E8 + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  v10,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 72),  (int)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_30;
    }
    goto LABEL_27;
  }

  uint64_t v13 = *(_BYTE *)(a2 + 27);
  *(_DWORD *)(a1 + 40) |= 0x10u;
  *(_BYTE *)(a1 + 27) = v13;
  uint64_t v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  unint64_t v15 = *(_BYTE *)(a2 + 29);
  *(_DWORD *)(a1 + 40) |= 0x40u;
  *(_BYTE *)(a1 + 29) = v15;
  uint64_t v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    id v6 = *(_BYTE *)(a2 + 30);
    *(_DWORD *)(a1 + 40) |= 0x80u;
    *(_BYTE *)(a1 + 30) = v6;
    uint64_t v5 = *(_DWORD *)(a2 + 40);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(unsigned __int8 *)(v5 + 29),  (BOOL)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }

  unint64_t v15 = *(_BYTE *)(a1 + 29);
  *(_BYTE *)a2 = 56;
  *(_BYTE *)(a2 + 1) = v15;
  a2 += 2LL;
  uint64_t v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x80) == 0)
  {
LABEL_9:
    if ((v3 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }

    BOOL v17 = *(_DWORD *)(a2 + 28);
    a1[17] |= 8u;
    a1[7] = v17;
    uint64_t v13 = *(_DWORD *)(a2 + 68);
    if ((v13 & 0x10) == 0)
    {
LABEL_19:
      if ((v13 & 0x40) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
LABEL_25:
      uint64_t v19 = *(_DWORD *)(a2 + 60);
      if (!sub_10005DC4C(v19)) {
        sub_10038BC5C();
      }
      a1[17] |= 0x40u;
      a1[15] = v19;
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }

  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x100u;
      id v11 = *(void **)(a1 + 80);
      if (!v11)
      {
        id v11 = operator new(0x38uLL);
        sub_100067424((uint64_t)v11);
        *(void *)(a1 + 80) = v11;
      }

      uint64_t v12 = *(void *)(a2 + 80);
      if (!v12) {
        uint64_t v12 = *(void *)(qword_1008001D0 + 80);
      }
      sub_100067474((uint64_t)v11, v12);
      uint64_t v5 = *(_DWORD *)(a2 + 96);
    }

    if ((v5 & 0x200) != 0)
    {
      uint64_t v13 = *(_BYTE *)(a2 + 88);
      *(_DWORD *)(a1 + 96) |= 0x200u;
      *(_BYTE *)(a1 + 88) = v13;
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  if ((v5 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v5 & 0x100) != 0)
  {
    BOOL v17 = *(void *)(a2 + 80);
    *(_DWORD *)(a1 + 116) |= 0x100u;
    *(void *)(a1 + 80) = v17;
    uint64_t v5 = *(_DWORD *)(a2 + 116);
    if ((v5 & 0x200) == 0)
    {
LABEL_26:
      if ((v5 & 0x400) == 0) {
        goto LABEL_27;
      }
LABEL_32:
      uint64_t v19 = *(void *)(a2 + 96);
      *(_DWORD *)(a1 + 116) |= 0x400u;
      *(void *)(a1 + 96) = v19;
      if ((*(_DWORD *)(a2 + 116) & 0x800) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_28;
    }
  }

  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_26;
  }

  uint64_t v18 = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 116) |= 0x200u;
  *(void *)(a1 + 88) = v18;
  uint64_t v5 = *(_DWORD *)(a2 + 116);
  if ((v5 & 0x400) != 0) {
    goto LABEL_32;
  }
LABEL_27:
  if ((v5 & 0x800) != 0)
  {
LABEL_28:
    unint64_t v15 = *(void *)(a2 + 104);
    *(_DWORD *)(a1 + 116) |= 0x800u;
    *(void *)(a1 + 104) = v15;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v4 + 56),  a3);
  uint64_t v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }

  id v16 = *((void *)this + 7);
  *(_BYTE *)a2 = 49;
  *(void *)(a2 + 1) = v16;
  a2 += 9LL;
  uint64_t v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }

  uint64_t v13 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 68) |= 4u;
  *(_DWORD *)(a1 + 28) = v13;
  uint64_t v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }

  if ((v5 & 0xFF0000) == 0) {
    goto LABEL_33;
  }
  if ((v5 & 0x10000) != 0)
  {
    __int128 v27 = *(_DWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 232) |= 0x10000u;
    *(_DWORD *)(a1 + 104) = v27;
    uint64_t v5 = *(_DWORD *)(a2 + 232);
    if ((v5 & 0x20000) == 0)
    {
LABEL_26:
      if ((v5 & 0x40000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_80;
    }
  }

  else if ((v5 & 0x20000) == 0)
  {
    goto LABEL_26;
  }

  uint64_t v28 = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 232) |= 0x20000u;
  *(_DWORD *)(a1 + 108) = v28;
  uint64_t v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x40000) == 0)
  {
LABEL_27:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_81;
  }

  uint64_t v19 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 76) |= 8u;
  *(_DWORD *)(a1 + 40) = v19;
  uint64_t v13 = *(_DWORD *)(a2 + 76);
  if ((v13 & 0x10) != 0) {
    goto LABEL_24;
  }
LABEL_17:
  if ((v13 & 0x20) != 0)
  {
LABEL_18:
    __int128 v14 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 76) |= 0x20u;
    *(_DWORD *)(a1 + 44) = v14;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 36),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 32),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }

  uint64_t v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v5;
  *(_DWORD *)(a1 + 52) = v5;
  return v5;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 68),  a2,  a4);
  char v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 0x80) == 0)
  {
LABEL_12:
    if ((v7 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }

  if ((*((_BYTE *)this + 88) & 0x20) != 0)
  {
    id v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(_BYTE *)uint64_t v3 = 48;
    if (v16 > 0x7F)
    {
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v16,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v16;
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 88) & 0x40) != 0)
  {
    BOOL v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    *(_BYTE *)uint64_t v3 = 56;
    if (v17 > 0x7F)
    {
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v17;
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 88) & 0x80) != 0)
  {
    uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 18);
    *(_BYTE *)uint64_t v3 = 64;
    uint64_t v19 = (unint64_t)v3 + 1;
    if ((v18 & 0x80000000) != 0)
    {
      uint64_t v20 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v18,  v19,  a3);
    }

    else
    {
      if (v18 <= 0x7F)
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v18;
        uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_38;
      }

      uint64_t v20 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v18,  v19,  a3);
    }

    uint64_t v3 = v20;
  }

  uint64_t v19 = (void *)*((void *)this + 1);
  uint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  BOOL v17 = v19;
  if (!v19 || *v17 == v17[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v18,  v4,  a3);
  }
}

  uint64_t v19 = (void *)*((void *)this + 1);
  uint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  BOOL v17 = v19;
  if (!v19 || *v17 == v17[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v18,  v4,  a3);
  }
}

  uint64_t v13 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 100) |= 0x10u;
  *(void *)(a1 + 48) = v13;
  uint64_t v5 = *(_DWORD *)(a2 + 100);
  if ((v5 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  unint64_t v15 = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 100) |= 0x40u;
  *(_DWORD *)(a1 + 60) = v15;
  uint64_t v5 = *(_DWORD *)(a2 + 100);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    id v6 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 100) |= 0x80u;
    *(void *)(a1 + 64) = v6;
    uint64_t v5 = *(_DWORD *)(a2 + 100);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 60),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 40),  a3);
  id v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 52),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(float *)(v5 + 48),  a3);
  id v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

    if (v10 == 4) {
      return 1LL;
    }
  }

  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField( this,  TagFallback,  v6,  a4) & 1) != 0);
  return 0LL;
}

  unint64_t v15 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 132) |= 8u;
  *(void *)(a1 + 40) = v15;
  __int128 v9 = *(_DWORD *)(a2 + 132);
  if ((v9 & 0x10) != 0) {
    goto LABEL_24;
  }
LABEL_17:
  if ((v9 & 0x20) != 0)
  {
LABEL_18:
    int v10 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 132) |= 0x20u;
    *(void *)(a1 + 56) = v10;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  __int128 v14 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 88) |= 0x10u;
  *(void *)(a1 + sub_100012358(v1 - 32) = v14;
  uint64_t v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  id v16 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 88) |= 0x40u;
  *(void *)(a1 + 48) = v16;
  uint64_t v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    id v6 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 88) |= 0x80u;
    *(void *)(a1 + 56) = v6;
    uint64_t v5 = *(_DWORD *)(a2 + 88);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  (int)a2,  *(double *)(v5 + 56),  a3);
  id v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

  unint64_t v15 = *(void **)(a1 + 8);
  if (v15 && *v15 != v15[1]) {
    __int128 v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

  id v11 = *(void *)(v5 + 56);
  if (!v11) {
    id v11 = *(void *)(qword_100800590 + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  v11,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(float *)(v5 + 24),  a3);
  id v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(float *)(v5 + 24),  a3);
  id v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }

  uint64_t v18 = (void *)*((void *)this + 1);
  BOOL v17 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  id v16 = v18;
  if (!v18 || *v16 == v16[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v17,  v3,  a3);
  }
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(unsigned __int8 *)(v5 + 37),  (BOOL)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

  unint64_t v15 = *((void *)this + 7);
  *(_BYTE *)__int128 v4 = 49;
  *(void *)((char *)v4 + 1) = v15;
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  id v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 48),  a3);
  id v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }

  unint64_t v15 = *((void *)this + 4);
  *(_BYTE *)__int128 v4 = 25;
  *(void *)((char *)v4 + 1) = v15;
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  id v6 = *((_DWORD *)this + 28);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }

  if ((v5 & 0xFF0000) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v5 & 0x10000) == 0)
  {
    if ((v5 & 0x20000) == 0) {
      goto LABEL_26;
    }
LABEL_45:
    unint64_t v23 = *(_DWORD *)(a2 + 112);
    *(_DWORD *)(a1 + 124) |= 0x20000u;
    *(_DWORD *)(a1 + 112) = v23;
    if ((*(_DWORD *)(a2 + 124) & 0x40000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_46;
  }

  int v22 = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 124) |= 0x10000u;
  *(_DWORD *)(a1 + 108) = v22;
  uint64_t v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x20000) != 0) {
    goto LABEL_45;
  }
LABEL_26:
  if ((v5 & 0x40000) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
LABEL_46:
  uint64_t v24 = *(_DWORD *)(a2 + 116);
  if (v24 >= 3) {
    sub_10038C6D4();
  }
  *(_DWORD *)(a1 + 124) |= 0x40000u;
  *(_DWORD *)(a1 + 116) = v24;
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  char v7 = *((_DWORD *)this + 7);
  *(_BYTE *)a2 = 29;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5LL;
  __int128 v4 = *((_DWORD *)this + 31);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }

  __int128 v8 = *(void *)(v5 + 64);
  if (!v8) {
    __int128 v8 = *(void *)(qword_100800708 + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  v8,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_32;
    }
    goto LABEL_29;
  }

  unint64_t v21 = *(float *)(a3 + 68);
  if (v21 > 1.0)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_100390680();
    }
    goto LABEL_28;
  }

  __int128 v9 = (float)(v21 * (float)v10);
  if (!*(_BYTE *)(a3 + 92)) {
    goto LABEL_33;
  }
  LOWORD(v23) = 0;
  if (*(_BYTE *)(a3 + 100) && *(_BYTE *)(a3 + 108))
  {
    unint64_t v23 = *(_DWORD *)(a3 + 88) / 0x3E8u;
    uint64_t v24 = *(_DWORD *)(a3 + 96);
    unsigned __int8 v46 = v24 / 0x3E8;
    id v45 = (float)(*(float *)(a3 + 104) * (float)v24);
  }

  else
  {
    id v45 = 0;
    LOWORD(v46) = 0;
  }

    __assert_rtn( "set_motion_activity_confidence",  "NearbyInteractionTypes.pb.h",  17491,  "::CLP::LogEntry::Nearbyd::NI::MotionActivityConfidence_IsValid(value)");
  }

    int v36 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      CFTypeID v55 = *(void *)(*(void *)(v11 + 8 * v9) + ((v8 & 0x1F) << 7));
      *(_DWORD *)pthread_attr_t buf = 134218240;
      *(double *)&uint8_t buf[4] = v18;
      *(_WORD *)&buf[12] = 2048;
      *(void *)&buf[14] = v55;
      _os_log_error_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_ERROR,  "#sa_algo,AoA Measurement at %f s earlier than the first pose in history at %f s - skipping interpolation and mar king impossible to interpolate",  buf,  0x16u);
    }

    if (!*(_BYTE *)(a1 + 448)) {
      sub_100006080();
    }
    *(_DWORD *)(a1 + 408) = 0;
    goto LABEL_38;
  }

  if (*(void *)(v11 + 8 * v9) + ((v8 & 0x1F) << 7) == v13) {
    goto LABEL_23;
  }
  uint64_t v29 = *(void *)(a1 + 496);
  uint64_t v30 = *(void *)(v11 + (((v29 + v8) >> 2) & 0x3FFFFFFFFFFFFFF8LL)) + (((v29 + v8) & 0x1F) << 7);
LABEL_20:
  if (v30 != v13)
  {
    __int128 v31 = v13 - *(void *)v12;
    int v32 = v31 >> 7;
    if (v31 < 129)
    {
      int v39 = 32 - v32;
      uint64_t v34 = *(void *)&v12[-8 * (v39 >> 5)];
      uint64_t v35 = ~(_DWORD)v39 & 0x1FLL;
    }

    else
    {
      uint64_t v33 = v32 - 1;
      uint64_t v34 = *(void *)&v12[(v33 >> 2) & 0x3FFFFFFFFFFFFFF8LL];
      uint64_t v35 = v33 & 0x1F;
    }

    uint64_t v40 = v34 + (v35 << 7);
    CFTypeID v41 = (v18 - *(double *)v40) / (*(double *)v13 - *(double *)v40);
    uint64_t v57 = v41;
    id v60 = *(float32x4_t *)(v40 + 64);
    *(double *)v42.i64 = sub_1002C94C0( *(int8x16_t *)(v40 + 16),  *(int8x16_t *)(v40 + 32),  *(__n128 *)(v40 + 48),  *(double *)(v40 + 64),  a6);
    uint64_t v58 = v42;
    uint64_t v56 = *(float32x4_t *)(v13 + 64);
    *(double *)v44.i64 = sub_1002C94C0( *(int8x16_t *)(v13 + 16),  *(int8x16_t *)(v13 + 32),  *(__n128 *)(v13 + 48),  *(double *)(v13 + 64),  v43);
    id v45 = vmulq_f32(v58, v44);
    unsigned __int8 v46 = (float32x4_t)vextq_s8((int8x16_t)v45, (int8x16_t)v45, 8uLL);
    *(float32x2_t *)v45.f32 = vadd_f32(*(float32x2_t *)v45.f32, *(float32x2_t *)v46.f32);
    v45.f32[0] = vaddv_f32(*(float32x2_t *)v45.f32);
    v46.i32[0] = 0;
    sub_1002CABC0( v58,  (float32x4_t)vbslq_s8( (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmvnq_s8((int8x16_t)vcgeq_f32(v45, v46)), 0),  (int8x16_t)vnegq_f32(v44),  (int8x16_t)v44),  v57);
    uint64_t v59 = v47;
    v77 = 0x100000003LL;
    CFTypeID v75 = &off_1007BC4C0;
    unsigned __int16 v76 = xmmword_10042DB70;
    CFTypeID v78 = &v79;
    sub_1002CAEDC(&v75, 3, 1);
    sub_1002CAF28((uint64_t)&v75, 0.0);
    CFTypeID v72 = 0x100000004LL;
    v70 = &off_1007BC550;
    int v71 = xmmword_10042DB80;
    int v73 = &v74;
    sub_1002CAEDC(&v70, 4, 1);
    sub_1002CAF28((uint64_t)&v70, 0.0);
    __int128 v48 = 0;
    uint64_t v61 = vmlaq_n_f32(v60, vsubq_f32(v56, v60), v57);
    do
    {
      int v49 = (double *)sub_1002CB32C((uint64_t)&v75, v48);
      BOOL v63 = v61;
      CFNumberRef v49 = *(float *)((unint64_t)&v63 & 0xFFFFFFFFFFFFFFF3LL | (4LL * (v48 & 3)));
      CFTypeID v50 = (double *)sub_1002CB32C((uint64_t)&v70, v48);
      CFTypeID v62 = v59;
      *CFTypeID v50 = *(float *)((unint64_t)&v62 & 0xFFFFFFFFFFFFFFF3LL | (4LL * (v48++ & 3)));
    }

    while (v48 != 3);
    *(double *)sub_1002CB32C((uint64_t)&v70, 3u) = *((float *)&v59 + 3);
    sub_1003198FC((uint64_t)&v70, (uint64_t)buf);
    sub_10031981C((uint64_t)v69, v17, v19, v20);
    *(void *)&CFTypeID v81 = 0x100000003LL;
    *(void *)v80 = &off_1007BC4C0;
    *(_OWORD *)&v80[8] = xmmword_10042DB70;
    *(void *)id v82 = &v82[8];
    sub_1002CB548((uint64_t)buf, (uint64_t)v69, (uint64_t)v80);
    CFIndex v66 = 0x100000003LL;
    id v64 = &off_1007BC4C0;
    CFIndex v65 = xmmword_10042DB70;
    unsigned __int8 v67 = &v68;
    sub_1002CC25C((uint64_t)v80, (uint64_t)&v75, (uint64_t)&v64);
    uint64_t v51 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)v80 = 134219520;
      *(double *)&v80[4] = v61.f32[0];
      *(_WORD *)&v80[12] = 2048;
      *(double *)&v80[14] = v61.f32[1];
      *(_WORD *)&v80[22] = 2048;
      CFTypeID v81 = v61.f32[2];
      *(_WORD *)id v82 = 2048;
      *(double *)&v82[2] = *(float *)&v59;
      v83 = 2048;
      CFTypeID v84 = *((float *)&v59 + 1);
      __int16 v85 = 2048;
      uint64_t v86 = *((float *)&v59 + 2);
      id v87 = 2048;
      id v88 = *((float *)&v59 + 3);
      _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEFAULT,  "#sa_algo,AoA Measurement pos: [%3.2f, %3.2f, %3.2f] quat: [%3.2f, %3.2f, %3.2f, %3.2f]",  v80,  0x48u);
    }

    uint64_t v52 = sub_1002405E4((uint64_t)&v64, 0);
    int v53 = sub_1002405E4((uint64_t)&v64, 1u);
    NSErrorUserInfoKey v54 = sub_1002405E4((uint64_t)&v64, 2u);
    if (!*(_BYTE *)(a1 + 448)) {
      sub_100006080();
    }
    if (*(_BYTE *)(a1 + 440)) {
      *(_BYTE *)(a1 + 440) = 0;
    }
    *(double *)(a1 + 416) = v52;
    *(double *)(a1 + 424) = v53;
    *(double *)(a1 + 4sub_100012358(v1 - 32) = v54;
    *(_BYTE *)(a1 + 440) = 1;
    *(_DWORD *)(a1 + 408) = 2;
LABEL_38:
    sub_1002C9304(a1);
    return;
  }

  uint64_t v37 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
  {
    CFTypeID v38 = *(void *)(*(void *)(v11 + (((v8 + v29 - 1) >> 2) & 0x3FFFFFFFFFFFFFF8LL)) + (((v8 + v29 - 1) & 0x1F) << 7));
    *(_DWORD *)pthread_attr_t buf = 134218240;
    *(double *)&uint8_t buf[4] = v18;
    *(_WORD *)&buf[12] = 2048;
    *(void *)&buf[14] = v38;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEBUG,  "#sa_algo,AoA Measurement at %f s later than the last pose in history at %f s - skipping interpolation",  buf,  0x16u);
  }

        int8x8_t v68 = 0x200000002LL;
        CFIndex v66 = &off_1007BCB28;
        unsigned __int8 v67 = xmmword_10042DF00;
        CFTypeID v69 = v70;
        BOOL v63 = 0x200000002LL;
        uint64_t v61 = &off_1007BCB28;
        CFTypeID v62 = xmmword_10042DF00;
        id v64 = v65;
        sub_1002D59DC((uint64_t)&v84, (uint64_t)&v66, (uint64_t)&v61);
        __int128 v31 = *(double *)sub_1002CB40C((uint64_t)&v61, 0, 0);
        int v32 = (double *)sub_1002CB40C((uint64_t)&v61, 1, 1);
        if (*v32 >= v31) {
          uint64_t v33 = v31;
        }
        else {
          uint64_t v33 = *v32;
        }
        uint64_t v58 = 0x200000002LL;
        CFTypeID v55 = &off_1007BCB28;
        if (DWORD1(v67) > 2)
        {
          uint64_t v51 = "this->max_num_rows_ >= num_rows";
          uint64_t v52 = 422;
        }

        else
        {
          if (v67 < 3)
          {
            uint64_t v56 = __PAIR64__(v67, DWORD1(v67));
            LODWORD(v57) = v67 * DWORD1(v67);
            HIDWORD(v57) = DWORD1(v67);
            uint64_t v59 = v60;
            sub_1002CB364((uint64_t)&v66, &v55);
            uint64_t v34 = v81;
            uint64_t v35 = v82;
            if (v81 == v82)
            {
              int v43 = 0.0;
              __int128 v44 = 0.0;
            }

            else
            {
              NSErrorUserInfoKey v54 = v33;
              int v36 = 0.0;
              uint64_t v37 = 0.0;
              CFTypeID v38 = 0.0;
              int v39 = 0.0;
              do
              {
                uint64_t v90 = 0x100000002LL;
                *(void *)pthread_attr_t buf = &off_1007BCA98;
                *(_OWORD *)&buf[8] = xmmword_10042DEE0;
                uint64_t v91 = &v92;
                sub_1002CB548((uint64_t)&v55, v34, (uint64_t)buf);
                uint64_t v40 = sub_1002405E4((uint64_t)buf, 0);
                CFTypeID v41 = sub_1002405E4((uint64_t)buf, 1u);
                if (v40 < v36) {
                  uint64_t v42 = v40;
                }
                else {
                  uint64_t v42 = v36;
                }
                if (v40 <= v37) {
                  int v36 = v42;
                }
                else {
                  uint64_t v37 = v40;
                }
                if (v41 <= v39)
                {
                  if (v41 < v38) {
                    CFTypeID v38 = v41;
                  }
                }

                else
                {
                  int v39 = v41;
                }

                v34 += 56LL;
              }

              while (v34 != v35);
              int v43 = v37 - v36;
              __int128 v44 = v39 - v38;
              uint64_t v33 = v54;
            }

            if (v44 >= v43) {
              id v45 = v43;
            }
            else {
              id v45 = v44;
            }
            if (v43 < v44) {
              int v43 = v44;
            }
            CFNumberRef v53 = v43;
            if (v45 >= a1)
            {
              int v47 = (os_log_s *)qword_1008000A0;
              __int128 v48 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
              unsigned __int8 v46 = 0;
              if (v48)
              {
                *(_DWORD *)pthread_attr_t buf = 134218496;
                *(double *)&uint8_t buf[4] = a2;
                *(_WORD *)&buf[12] = 2048;
                *(double *)&buf[14] = v33;
                *(_WORD *)&_BYTE buf[22] = 2048;
                uint64_t v90 = *(void *)&v45;
                _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "#sa_algo_batchfilter_with,Batch filter problem is observable now from the bin with max range %3.1f m: smallest eigenvalue is %f, smallest rectangular box dimension is %f m",  buf,  0x20u);
                unsigned __int8 v46 = 0;
              }
            }

            else
            {
              unsigned __int8 v46 = 1;
            }

            *a6 = v46;
            goto LABEL_54;
          }

          uint64_t v51 = "this->max_num_cols_ >= num_cols";
          uint64_t v52 = 423;
        }

        __assert_rtn("SetMatrixSize", "cnmatrixbase.h", v52, v51);
      }

      *a5 = 1;
    }

        int8x8_t v68 = 0x200000002LL;
        CFIndex v66 = &off_1007BCB28;
        unsigned __int8 v67 = xmmword_10042DF00;
        CFTypeID v69 = v70;
        BOOL v63 = 0x200000002LL;
        uint64_t v61 = &off_1007BCB28;
        CFTypeID v62 = xmmword_10042DF00;
        id v64 = v65;
        sub_1002D59DC((uint64_t)&v84, (uint64_t)&v66, (uint64_t)&v61);
        __int128 v31 = *(double *)sub_1002CB40C((uint64_t)&v61, 0, 0);
        int v32 = (double *)sub_1002CB40C((uint64_t)&v61, 1, 1);
        if (*v32 >= v31) {
          uint64_t v33 = v31;
        }
        else {
          uint64_t v33 = *v32;
        }
        uint64_t v58 = 0x200000002LL;
        CFTypeID v55 = &off_1007BCB28;
        if (DWORD1(v67) > 2)
        {
          uint64_t v51 = "this->max_num_rows_ >= num_rows";
          uint64_t v52 = 422;
        }

        else
        {
          if (v67 < 3)
          {
            uint64_t v56 = __PAIR64__(v67, DWORD1(v67));
            LODWORD(v57) = v67 * DWORD1(v67);
            HIDWORD(v57) = DWORD1(v67);
            uint64_t v59 = v60;
            sub_1002CB364((uint64_t)&v66, &v55);
            uint64_t v34 = v81;
            uint64_t v35 = v82;
            if (v81 == v82)
            {
              int v43 = 0.0;
              __int128 v44 = 0.0;
            }

            else
            {
              NSErrorUserInfoKey v54 = v33;
              int v36 = 0.0;
              uint64_t v37 = 0.0;
              CFTypeID v38 = 0.0;
              int v39 = 0.0;
              do
              {
                uint64_t v90 = 0x100000002LL;
                *(void *)pthread_attr_t buf = &off_1007BCA98;
                *(_OWORD *)&buf[8] = xmmword_10042DEE0;
                uint64_t v91 = &v92;
                sub_1002CB548((uint64_t)&v55, v34, (uint64_t)buf);
                uint64_t v40 = sub_1002405E4((uint64_t)buf, 0);
                CFTypeID v41 = sub_1002405E4((uint64_t)buf, 1u);
                if (v40 < v36) {
                  uint64_t v42 = v40;
                }
                else {
                  uint64_t v42 = v36;
                }
                if (v40 <= v37) {
                  int v36 = v42;
                }
                else {
                  uint64_t v37 = v40;
                }
                if (v41 <= v39)
                {
                  if (v41 < v38) {
                    CFTypeID v38 = v41;
                  }
                }

                else
                {
                  int v39 = v41;
                }

                v34 += 56LL;
              }

              while (v34 != v35);
              int v43 = v37 - v36;
              __int128 v44 = v39 - v38;
              uint64_t v33 = v54;
            }

            if (v44 >= v43) {
              id v45 = v43;
            }
            else {
              id v45 = v44;
            }
            if (v43 < v44) {
              int v43 = v44;
            }
            CFNumberRef v53 = v43;
            if (v45 >= a1)
            {
              int v47 = (os_log_s *)qword_1008000A0;
              __int128 v48 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
              unsigned __int8 v46 = 0;
              if (v48)
              {
                *(_DWORD *)pthread_attr_t buf = 134218496;
                *(double *)&uint8_t buf[4] = a2;
                *(_WORD *)&buf[12] = 2048;
                *(double *)&buf[14] = v33;
                *(_WORD *)&_BYTE buf[22] = 2048;
                uint64_t v90 = *(void *)&v45;
                _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "#sa_algo_batchfilter,Batch filter problem is observable now from the bin with max range %3.1f m: small est eigenvalue is %f, smallest rectangular box dimension is %f m",  buf,  0x20u);
                unsigned __int8 v46 = 0;
              }
            }

            else
            {
              unsigned __int8 v46 = 1;
            }

            *a6 = v46;
            goto LABEL_54;
          }

          uint64_t v51 = "this->max_num_cols_ >= num_cols";
          uint64_t v52 = 423;
        }

        __assert_rtn("SetMatrixSize", "cnmatrixbase.h", v52, v51);
      }

      *a5 = 1;
    }

    uint64_t v29 = *((double *)a2 + 1);
    if (!*(_BYTE *)(a1 + 24) || *(double *)(a1 + 16) < v29)
    {
      *(double *)(a1 + 16) = v29;
      *(_BYTE *)(a1 + 24) = 1;
    }

    return;
  }

  if (!*(void *)(a1 + 408))
  {
    uint64_t v18 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v31) = 0;
      uint64_t v19 = "#sa_algo_moving_findee,Pose history is empty";
      goto LABEL_18;
    }

    goto LABEL_23;
  }

  BOOL v17 = *((double *)a2 + 1);
  if (v17 < *(double *)(*(void *)(*(void *)(a1 + 376) + ((*(void *)(a1 + 400) >> 2) & 0x3FFFFFFFFFFFFFF8LL))
                       + ((*(void *)(a1 + 400) & 0x1FLL) << 7)))
  {
    uint64_t v18 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v31) = 0;
      uint64_t v19 = "#sa_algo_moving_findee,Measurement earlier than the first pose in history";
LABEL_18:
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v19, (uint8_t *)&v31, 2u);
      goto LABEL_23;
    }

    goto LABEL_23;
  }

  if (!*(_BYTE *)(a1 + 312))
  {
LABEL_22:
    uint64_t v20 = *a2;
    unint64_t v21 = a2[1];
    int v22 = a2[3];
    *(_OWORD *)(a1 + 160) = a2[2];
    *(_OWORD *)(a1 + 176) = v22;
    *(_OWORD *)(a1 + 128) = v20;
    *(_OWORD *)(a1 + 144) = v21;
    unint64_t v23 = a2[4];
    uint64_t v24 = a2[5];
    uint64_t v25 = a2[7];
    *(_OWORD *)(a1 + 224) = a2[6];
    *(_OWORD *)(a1 + 240) = v25;
    *(_OWORD *)(a1 + 192) = v23;
    *(_OWORD *)(a1 + 208) = v24;
    int v26 = a2[8];
    __int128 v27 = a2[9];
    uint64_t v28 = a2[10];
    *(void *)(a1 + 304) = *((void *)a2 + 22);
    *(_OWORD *)(a1 + 272) = v27;
    *(_OWORD *)(a1 + 288) = v28;
    *(_OWORD *)(a1 + 256) = v26;
    *(_BYTE *)(a1 + 312) = 1;
    sub_10031B214(a1, *(double *)&v26, *(double *)&v27, *(double *)&v28, *(double *)&v25, v7);
    goto LABEL_23;
  }

  if (v17 > *(double *)(a1 + 136))
  {
    *(_BYTE *)(a1 + 312) = 0;
    goto LABEL_22;
  }

  uint64_t v30 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v31) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "#sa_algo_moving_findee,Measurement earlier than the cached measurement - rejecting range measurement",  (uint8_t *)&v31,  2u);
  }

  if (connect) {
    IOServiceClose(connect);
  }
  if ((_DWORD)MutableCopy) {
    IOObjectRelease((io_object_t)MutableCopy);
  }
  if (v19) {
    CFRelease(v19);
  }
  if (v9) {
    CFRelease(v9);
  }
  return v21;
}

void sub_10001BF94( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33)
{
  a13 = &a20;
  sub_10001FB2C((void ***)&a13);
  std::mutex::unlock(v33);
  _Unwind_Resume(a1);
}

void sub_10001C078(uint64_t a1)
{
  *(_OWORD *)pthread_attr_t buf = *(_OWORD *)(a1 + 64);
  int v10 = *(_DWORD *)(a1 + 80);
  uint64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  __p = 0LL;
  sub_10001E054( &__p,  *(const void **)(a1 + 88),  *(void *)(a1 + 96),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 96) - *(void *)(a1 + 88)) >> 3));
  int v14 = *(_DWORD *)(a1 + 112);
  uint64_t v5 = 0LL;
  id v6 = 0LL;
  __int128 v4 = 0LL;
  char v7 = &v4;
  char v8 = 0;
  __int128 v4 = (char *)operator new(0x38uLL);
  uint64_t v5 = (uint64_t)v4;
  id v6 = v4 + 56;
  uint64_t v5 = sub_100020ED0((uint64_t)&v6, (__int128 *)buf, &v15, (uint64_t)v4);
  uint64_t v2 = *(void *)(a1 + 56);
  if (!v2) {
    sub_10001EEF0();
  }
  (*(void (**)(uint64_t, char **))(*(void *)v2 + 48LL))(v2, &v4);
  char v7 = &v4;
  sub_10001FB2C((void ***)&v7);
  if (__p)
  {
    uint64_t v12 = __p;
    operator delete(__p);
  }

  uint64_t v3 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wifi-service,peer callback", buf, 2u);
  }

void sub_10001C1E0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
  {
    a19 = (uint64_t)__p;
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10001C228(uint64_t a1, uint64_t a2, int a3, const void *a4)
{
  char v7 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  *(_BYTE *)(a1 + 53) = 0;
  if (*(_BYTE *)(a1 + 168)) {
    *(_BYTE *)(a1 + 168) = 0;
  }
  char v8 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v11 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "#wifi-service,onWiFiDeviceClientStartNetworkCallback",  v11,  2u);
  }

  BOOL v9 = a3 == 37 || a3 == 0;
  if (v9 && a4)
  {
    if (a3 == 37 && os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038A688();
    }
    if (!*(_DWORD *)(a1 + 464)) {
      *(_BYTE *)(a1 + 50) = 1;
    }
    if (*(void *)(a1 + 40))
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_10038A65C();
      }
      CFRelease(*(CFTypeRef *)(a1 + 40));
      *(void *)(a1 + 40) = 0LL;
    }

    *(void *)(a1 + 40) = a4;
    CFRetain(a4);
  }

  else
  {
    BOOL v10 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR);
    if (a3 == 37)
    {
      if (v10) {
        sub_10038A6B4();
      }
      sub_100016C24(a1, 1);
      sub_100016F0C(a1);
    }

    else if (v10)
    {
      sub_10038A6E0();
    }
  }

  sub_10001C3C8(a1);
  std::mutex::unlock(v7);
}

void sub_10001C3B4(_Unwind_Exception *a1)
{
}

void sub_10001C3C8(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(unsigned __int8 *)(a1 + 51);
    int v4 = *(unsigned __int8 *)(a1 + 50);
    sub_10001CA34(*(_DWORD *)(a1 + 456), __p);
    uint64_t v5 = v12 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)pthread_attr_t buf = 67109634;
    int v14 = v3;
    __int16 v15 = 1024;
    int v16 = v4;
    __int16 v17 = 2080;
    uint64_t v18 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,handling AWDL state update; awdlLinkIsUp: %d, followModeIsUp %d, AWDLActivityState: %s",
      buf,
      0x18u);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }

  if (!*(_BYTE *)(a1 + 51))
  {
    if (*(_DWORD *)(a1 + 456) < 2u) {
      return;
    }
    id v6 = (int *)(a1 + 456);
LABEL_14:
    char v8 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#wifi-service,AWDL link is down", buf, 2u);
    }

    int v9 = 5;
LABEL_17:
    int *v6 = v9;
    sub_1000147F0(a1, 0.0);
    return;
  }

  id v6 = (int *)(a1 + 456);
  unsigned int v7 = *(_DWORD *)(a1 + 456);
  if (!*(_BYTE *)(a1 + 50) && !*(_DWORD *)(a1 + 464))
  {
    if (v7 < 2) {
      return;
    }
    goto LABEL_14;
  }

  if ((v7 & 0xFFFFFFFE) != 2 && sub_1000151E0(a1))
  {
    BOOL v10 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,AWDL link is available",  buf,  2u);
    }

    int v9 = 2;
    goto LABEL_17;
  }

void sub_10001C5BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001C5D4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  id v6 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    v8[0] = 67109120;
    v8[1] = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,WiFiDeviceClientStopNetwork callback with error: %d",  (uint8_t *)v8,  8u);
  }

  unsigned int v7 = *(const void **)(a1 + 40);
  if (v7)
  {
    CFRelease(v7);
    *(void *)(a1 + 40) = 0LL;
  }

  *(_DWORD *)(a1 + 456) = 0;
  sub_1000147F0(a1, 0.0);
  std::mutex::unlock(v5);
}

void sub_10001C6B4(_Unwind_Exception *a1)
{
}

void sub_10001C6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if (a3)
  {
    id v6 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "#wifi-service,Device attachment callback - success",  buf,  2u);
    }

    *(_BYTE *)(a1 + 55) = 1;
  }

  else
  {
    unsigned int v7 = (const void *)WiFiManagerClientCopyInterfaces(*(void *)(a1 + 16));
    char v8 = (os_log_s *)qword_1008000A0;
    if (v7)
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)BOOL v10 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "#wifi-service,Device attachment callback - success via interfaces copy",  v10,  2u);
      }

      *(_BYTE *)(a1 + 55) = 1;
      CFRelease(v7);
    }

    else
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
        sub_10038A74C();
      }
      sub_100016C24(a1, 1);
      sub_100016F0C(a1);
      int v9 = *(const void **)(a1 + 16);
      if (v9)
      {
        CFRelease(v9);
        *(void *)(a1 + 16) = 0LL;
      }
    }
  }

  std::mutex::unlock(v5);
}

void sub_10001C810(_Unwind_Exception *a1)
{
}

void sub_10001C824(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  id v6 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
  {
    LOWORD(v13) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "#wifi-service,onWifiDeviceClientVirtualInterfaceStateChangeCallback",  (uint8_t *)&v13,  2u);
  }

  id v7 = a3;
  objc_storeStrong((id *)(a1 + 208), a3);
  char v8 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"LINK_CHANGED_IS_LINKDOWN"]);
  int v9 = v8;
  if (v8)
  {
    else {
      *(_BYTE *)(a1 + 51) = 1;
    }
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10038A778();
  }

  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"AWDL_INFO"]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 objectForKeyedSubscript:@"AWDL_IF_MAC_ADDRESS"]);
  char v12 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v13 = 138412290;
    int v14 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,self mac address awdl: %@",  (uint8_t *)&v13,  0xCu);
  }

  sub_100019BF0(a1, v7);
  sub_10001C3C8(a1);

  std::mutex::unlock(v5);
}

void sub_10001C9EC(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void *sub_10001CA34@<X0>(int a1@<W1>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A24E8[a1]);
}

void sub_10001CA48(uint64_t a1, void *a2, uint64_t a3)
{
}

unint64_t sub_10001CA54(uint64_t a1, id **a2, int a3)
{
  id v6 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  if ((sub_100014420() & 1) != 0)
  {
    id v7 = (os_log_s *)qword_1008000A0;
    BOOL v8 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
    if (a3 == 1)
    {
      if (!v8) {
        goto LABEL_11;
      }
      *(_WORD *)pthread_attr_t buf = 0;
      int v9 = "#wifi-service,WRTT, startRangingWithAuthPeer as initiator";
    }

    else
    {
      if (!v8) {
        goto LABEL_11;
      }
      *(_WORD *)pthread_attr_t buf = 0;
      int v9 = "#wifi-service,WRTT, startRangingWithAuthPeer as responder";
    }

    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v9, buf, 2u);
LABEL_11:
    if (*(_BYTE *)(a1 + 408))
    {
      int v13 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)pthread_attr_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,Received a start ranging request while servicing a previous request",  buf,  2u);
      }

      char v12 = &_mh_execute_header;
      uint64_t v11 = 5LL;
      goto LABEL_59;
    }

    id v14 = sub_10003AD44(*a2);
    __int16 v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
    if (v15)
    {
      id v16 = sub_10003AD4C((uint64_t)*a2);
      __int16 v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
      if (v17)
      {
        id v18 = sub_10003AD54((uint64_t)*a2);
        uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
        BOOL v20 = v19 == 0LL;

        if (!v20)
        {
          *(_DWORD *)(a1 + 452) = a3;
          *(_BYTE *)(a1 + 48) = 0;
          sub_10001D058(a1 + 240, (uint64_t)*a2);
          unint64_t v21 = sub_100019F34(a1);
          if (CFArrayGetCount((CFArrayRef)v21) < 1)
          {
            int v36 = (os_log_s *)qword_1008000A0;
            if (a3 == 1)
            {
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
                sub_10038A18C();
              }
              goto LABEL_58;
            }

            if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)pthread_attr_t buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,WiFiDeviceClientSetRangeable FALSE",  buf,  2u);
            }

            uint64_t v41 = sub_100018C24(a1);
            if (!WiFiDeviceClientSetRangeable(v41, 0LL, v21)
              || !os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
            {
              goto LABEL_58;
            }

            goto LABEL_57;
          }

          double v22 = (double)CFArrayGetCount((CFArrayRef)v21) * 15.0;
          unint64_t v23 = (os_log_s *)(id)qword_1008000A0;
          BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);
          if (a3 == 1)
          {
            if (v24)
            {
              CFIndex Count = CFArrayGetCount((CFArrayRef)v21);
              *(_DWORD *)pthread_attr_t buf = 134349312;
              *(void *)&uint8_t buf[4] = Count;
              *(_WORD *)&buf[12] = 2050;
              *(double *)&buf[14] = v22;
              int v26 = "#wifi-service,WiFiDeviceClientRangingStartAsync, num peers, %{public}ld, timeout, %{public}lf";
              __int128 v27 = v23;
              uint32_t v28 = 22;
LABEL_46:
              _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, v26, buf, v28);
            }
          }

          else if (v24)
          {
            CFIndex v37 = CFArrayGetCount((CFArrayRef)v21);
            *(_DWORD *)pthread_attr_t buf = 134349056;
            *(void *)&uint8_t buf[4] = v37;
            int v26 = "#wifi-service,WiFiDeviceClientSetRangeable TRUE, num peers, %{public}ld";
            __int128 v27 = v23;
            uint32_t v28 = 12;
            goto LABEL_46;
          }

          uint64_t v38 = sub_100018C24(a1);
          WiFiDeviceClientRegisterRangingReportCallback(v38, sub_10001E2A0, a1);
          if (a3 == 1)
          {
            uint64_t v39 = sub_100018C24(a1);
            if (WiFiDeviceClientRangingStartAsync(v39, v21, sub_10001E174, a1, v22))
            {
              char v12 = &_mh_execute_header;
              uint64_t v11 = 4LL;
              goto LABEL_59;
            }

LABEL_58:
            CFRelease(v21);
            char v12 = 0LL;
            uint64_t v11 = 0LL;
            goto LABEL_59;
          }

          uint64_t v40 = sub_100018C24(a1);
          if (!WiFiDeviceClientSetRangeable(v40, 1LL, v21)
            || !os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
          {
            goto LABEL_58;
          }

  int v32 = *(void **)(a1 + 8);
  if (v32 && *v32 != v32[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v5;
  *(_DWORD *)(a1 + 76) = v5;
  return v5;
}

  __int16 v15 = *(void *)(v5 + 88);
  if (!v15) {
    __int16 v15 = *(void *)(qword_1008001F0 + 88);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  v15,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_64;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE,  (int)a2,  *(double *)(v5 + 104),  a3);
  id v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_60;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  (int)a2,  *(double *)(v5 + 56),  a3);
  id v6 = *(_DWORD *)(v5 + 232);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_60;
  }

    unint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[15];
    if (v23 >= 0x80)
    {
      int v3 = a1[18];
    }

    else
    {
      BOOL v24 = 2;
    }

    uint64_t v5 = (v24 + v5);
    if ((v3 & 0x4000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_62;
  }

  if (__lk.__owns_) {
    std::mutex::unlock(__lk.__m_);
  }
}

  if ((*(_BYTE *)(a1 + 560) || *(_BYTE *)(a1 + 561))
    && (unint64_t)(0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*(void *)(a1 + 368) - *(void *)(a1 + 360)) >> 4)) >= 4)
  {
    sub_1002D2C48(a1);
  }

  id v57 = *(void *)(a1 + 368) - *(void *)(a1 + 360);
  if ((unint64_t)(0x2E8BA2E8BA2E8BA3LL * (v57 >> 4)) < 4
    || *(_BYTE *)(a1 + 560)
    || *(_BYTE *)(a1 + 561)
    || *(double *)(a1 + 312) - *(double *)(a1 + 320) < 0.5)
  {
    if (v57 == 176)
    {
      uint64_t v58 = *(double *)(a1 + 312);
      *(double *)(a1 + 304) = v58;
      *(double *)(a1 + 320) = v58 + -0.5;
    }
  }

  else
  {
    id v60 = sub_1002D2E10(a1);
    *(_BYTE *)(a1 + 562) = v60;
    if (v60)
    {
      *(void *)(a1 + 320) = *(void *)(a1 + 312);
      sub_1002D0EC4(a1);
    }
  }

void sub_10001CFC4(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10001D058(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 168))
  {
    sub_100019E9C(a1, a2);
  }

  else
  {
    sub_10001D378(a1, a2);
    *(_BYTE *)(a1 + 168) = 1;
  }

  return a1;
}

void sub_10001D09C(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 88);
  std::mutex::lock((std::mutex *)(a1 + 88));
  int v3 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wifi-service,stopRangingWithAuthPeer", buf, 2u);
  }

  if ((sub_100014420() & 1) != 0)
  {
    if (*(_BYTE *)(a1 + 408))
    {
      int v4 = sub_100019F34(a1);
      uint64_t v5 = sub_100018C24(a1);
      if (WiFiDeviceClientSetRangeable(v5, 0LL, v4))
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_10038A1E0();
        }
      }
    }

    sub_10001D1EC(a1 + 240);
    *(_DWORD *)(a1 + 452) = 0;
    *(_BYTE *)(a1 + 48) = 1;
  }

  else
  {
    id v6 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v7 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "#wifi-service,ignoring ranging stop on unsupported platform",  v7,  2u);
    }
  }

  std::mutex::unlock(v2);
}

void sub_10001D1D0(_Unwind_Exception *a1)
{
}

void sub_10001D1EC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 168))
  {

    uint64_t v2 = *(void **)(a1 + 136);
    if (v2 == (void *)(a1 + 112))
    {
      uint64_t v3 = 4LL;
      uint64_t v2 = (void *)(a1 + 112);
    }

    else
    {
      if (!v2) {
        goto LABEL_7;
      }
      uint64_t v3 = 5LL;
    }

    (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_7:
    int v4 = *(void **)(a1 + 104);
    if (v4 == (void *)(a1 + 80))
    {
      uint64_t v5 = 4LL;
      int v4 = (void *)(a1 + 80);
    }

    else
    {
      if (!v4) {
        goto LABEL_12;
      }
      uint64_t v5 = 5LL;
    }

    (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_12:
    id v6 = *(void **)(a1 + 72);
    if (v6 == (void *)(a1 + 48))
    {
      uint64_t v7 = 4LL;
      id v6 = (void *)(a1 + 48);
    }

    else
    {
      if (!v6)
      {
LABEL_17:

        *(_BYTE *)(a1 + 168) = 0;
        return;
      }

      uint64_t v7 = 5LL;
    }

    (*(void (**)(void))(*v6 + 8 * v7))();
    goto LABEL_17;
  }

void *sub_10001D2CC(void *__dst, __int128 *a2, uint64_t a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v5 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v5;
  }

  sub_10001E914((uint64_t)(__dst + 3), a3);
  __dst[7] = *(id *)(a3 + 32);
  return __dst;
}

void sub_10001D334(_Unwind_Exception *exception_object)
{
}

void sub_10001D350()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

uint64_t sub_10001D378(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(id *)a2;
  *(void *)(a1 + 8) = *(id *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + sub_100012358(v1 - 32) = *(id *)(a2 + 32);
  *(void *)(a1 + 40) = *(id *)(a2 + 40);
  sub_10001E914(a1 + 48, a2 + 48);
  sub_10001E914(a1 + 80, a2 + 80);
  sub_10001E914(a1 + 112, a2 + 112);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  id v4 = *(id *)(a2 + 152);
  uint64_t v5 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = v4;
  *(void *)(a1 + 160) = v5;
  return a1;
}

void sub_10001D420(_Unwind_Exception *a1)
{
  uint64_t v5 = *(void **)(v1 + 104);
  if (v5 == v3)
  {
    uint64_t v6 = 4LL;
  }

  else
  {
    if (!v5) {
      goto LABEL_6;
    }
    uint64_t v6 = 5LL;
    uint64_t v3 = *(void **)(v1 + 104);
  }

  (*(void (**)(void *))(*v3 + 8 * v6))(v3);
LABEL_6:
  uint64_t v7 = *(void **)(v1 + 72);
  if (v7 == v2)
  {
    uint64_t v8 = 4LL;
    uint64_t v7 = v2;
  }

  else
  {
    if (!v7) {
      goto LABEL_11;
    }
    uint64_t v8 = 5LL;
  }

  (*(void (**)(void))(*v7 + 8 * v8))();
LABEL_11:

  _Unwind_Resume(a1);
}

uint64_t sub_10001D4B8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 168))
  {

    uint64_t v2 = *(void **)(a1 + 136);
    if (v2 == (void *)(a1 + 112))
    {
      uint64_t v3 = 4LL;
      uint64_t v2 = (void *)(a1 + 112);
    }

    else
    {
      if (!v2) {
        goto LABEL_7;
      }
      uint64_t v3 = 5LL;
    }

    (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_7:
    id v4 = *(void **)(a1 + 104);
    if (v4 == (void *)(a1 + 80))
    {
      uint64_t v5 = 4LL;
      id v4 = (void *)(a1 + 80);
    }

    else
    {
      if (!v4) {
        goto LABEL_12;
      }
      uint64_t v5 = 5LL;
    }

    (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_12:
    uint64_t v6 = *(void **)(a1 + 72);
    if (v6 == (void *)(a1 + 48))
    {
      uint64_t v7 = 4LL;
      uint64_t v6 = (void *)(a1 + 48);
    }

    else
    {
      if (!v6)
      {
LABEL_17:

        return a1;
      }

      uint64_t v7 = 5LL;
    }

    (*(void (**)(void))(*v6 + 8 * v7))();
    goto LABEL_17;
  }

  return a1;
}

void sub_10001D598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_10001C5D4(a4, a2, a2);
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10038A7D0();
  }

void sub_10001D5E8(uint64_t a1, const __CFArray *a2, int a3, uint64_t a4)
{
  uint64_t v7 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    if (a2) {
      CFIndex Count = CFArrayGetCount(a2);
    }
    else {
      CFIndex Count = -1LL;
    }
    v11[0] = 67109376;
    v11[1] = a3;
    __int16 v12 = 2050;
    CFIndex v13 = Count;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,WiFiDeviceClientRangingCallback got called: error=%i results=%{public}ld",  (uint8_t *)v11,  0x12u);
  }

  if (a4)
  {
    sub_10001B42C(a4, v9, a2, v10, 1);
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10038A7FC();
  }

void sub_10001D6FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001D714(uint64_t a1, const __CFArray *a2, uint64_t a3)
{
  uint64_t v5 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    if (a2) {
      CFIndex Count = CFArrayGetCount(a2);
    }
    else {
      CFIndex Count = -1LL;
    }
    int v9 = 134349056;
    CFIndex v10 = Count;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,WiFiDeviceClientRangingReportCallback got called: results=%{public}ld",  (uint8_t *)&v9,  0xCu);
  }

  if (a3)
  {
    sub_10001B42C(a3, v7, a2, v8, 0);
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10038A828();
  }

void sub_10001D810(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001D828(uint64_t a1, const __CFArray *a2, uint64_t a3)
{
  uint64_t v5 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    if (a2) {
      CFIndex Count = CFArrayGetCount(a2);
    }
    else {
      CFIndex Count = -1LL;
    }
    int v9 = 134349056;
    CFIndex v10 = Count;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,WiFiDeviceClientRangingReportCallback got called: results=%{public}ld",  (uint8_t *)&v9,  0xCu);
  }

  if (a3)
  {
    sub_10001B42C(a3, v7, a2, v8, 0);
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10038A828();
  }

void sub_10001D924(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001D93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_10001C5D4(a4, a2, a2);
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10038A7D0();
  }

void sub_10001D98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_10001C6C8(a3, a2, a2);
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10038A854();
  }

void sub_10001D9DC(uint64_t a1, uint64_t a2, const void *a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    sub_10001C228(a5, a2, a2, a3);
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10038A880();
  }

void *sub_10001DA30(void *a1, uint64_t a2)
{
  uint64_t v3 = v7;
  if (v7 == v6)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v6;
    goto LABEL_5;
  }

  if (v7)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return a1;
}

void *sub_10001DAC8(void *a1, uint64_t a2)
{
  uint64_t v3 = v7;
  if (v7 == v6)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v6;
    goto LABEL_5;
  }

  if (v7)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return a1;
}

void *sub_10001DB60(void *a1, uint64_t a2)
{
  uint64_t v3 = v7;
  if (v7 == v6)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v6;
    goto LABEL_5;
  }

  if (v7)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return a1;
}

void *sub_10001DBF8(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24LL))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32LL))(v3[3]);
        v3[3] = 0LL;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24LL))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32LL))(a2[3]);
        a2[3] = 0LL;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24LL))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32LL))(v6);
      }

      else
      {
        (*(void (**)(void *, void *))(*result + 24LL))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32LL))(v3[3]);
        v3[3] = a2[3];
      }

      a2[3] = a2;
    }

    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24LL))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32LL))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }

    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }

  return result;
}

void sub_10001DD60(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_10000DE88(a1);
}

void *sub_10001DD6C(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24LL))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32LL))(v3[3]);
        v3[3] = 0LL;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24LL))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32LL))(a2[3]);
        a2[3] = 0LL;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24LL))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32LL))(v6);
      }

      else
      {
        (*(void (**)(void *, void *))(*result + 24LL))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32LL))(v3[3]);
        v3[3] = a2[3];
      }

      a2[3] = a2;
    }

    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24LL))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32LL))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }

    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }

  return result;
}

void sub_10001DED4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_10000DE88(a1);
}

void *sub_10001DEE0(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24LL))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32LL))(v3[3]);
        v3[3] = 0LL;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24LL))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32LL))(a2[3]);
        a2[3] = 0LL;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24LL))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32LL))(v6);
      }

      else
      {
        (*(void (**)(void *, void *))(*result + 24LL))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32LL))(v3[3]);
        v3[3] = a2[3];
      }

      a2[3] = a2;
    }

    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24LL))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32LL))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }

    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }

  return result;
}

void sub_10001E048(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_10000DE88(a1);
}

void *sub_10001E054(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_10001E0CC(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }

  return result;
}

void sub_10001E0B0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

char *sub_10001E0CC(void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_10001E11C();
  }
  uint64_t result = (char *)sub_10001E130((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

void sub_10001E11C()
{
}

void *sub_10001E130(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_10001D350();
  }
  return operator new(24 * a2);
}

void sub_10001E174(uint64_t a1, const __CFArray *a2, int a3, uint64_t a4)
{
  uint64_t v7 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    if (a2) {
      CFIndex Count = CFArrayGetCount(a2);
    }
    else {
      CFIndex Count = -1LL;
    }
    v10[0] = 67109376;
    v10[1] = a3;
    __int16 v11 = 2050;
    CFIndex v12 = Count;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,WiFiDeviceClientRangingCallback got called: error=%i results=%{public}ld",  (uint8_t *)v10,  0x12u);
  }

  if (a4)
  {
    sub_10001BBFC(a4, v9, a2);
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10038A7FC();
  }

void sub_10001E288(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001E2A0(uint64_t a1, const __CFArray *a2, uint64_t a3)
{
  uint64_t v5 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    if (a2) {
      CFIndex Count = CFArrayGetCount(a2);
    }
    else {
      CFIndex Count = -1LL;
    }
    int v8 = 134349056;
    CFIndex v9 = Count;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#wifi-service,WiFiDeviceClientRangingReportCallback got called: results=%{public}ld",  (uint8_t *)&v8,  0xCu);
  }

  if (a3)
  {
    sub_10001BBFC(a3, v7, a2);
  }

  else if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    sub_10038A828();
  }

void sub_10001E39C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_10001E3B4(uint64_t **a1, const void **a2, __int128 *a3)
{
  uint64_t v5 = (uint64_t **)sub_10001E444((uint64_t)a1, &v10, a2);
  uint64_t v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = v5;
    sub_10001E4E0((uint64_t)a1, a3, (uint64_t)v9);
    sub_10001E548(a1, v10, v7, v9[0]);
    uint64_t v6 = v9[0];
    v9[0] = 0LL;
    sub_10001E864((uint64_t)v9, 0LL);
  }

  return v6;
}

void *sub_10001E444(uint64_t a1, void *a2, const void **a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 16;
    do
    {
      while (1)
      {
        int v8 = (void *)v4;
        CFIndex v9 = (const void **)(v4 + 32);
        uint64_t v4 = *v8;
        uint64_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (!sub_10001E59C(v7, v9, a3)) {
        break;
      }
      uint64_t v5 = v8 + 1;
      uint64_t v4 = v8[1];
    }

    while (v4);
  }

  else
  {
    int v8 = (void *)(a1 + 8);
  }

void *sub_10001E4E0@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x60uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = sub_10001E604(v6 + 4, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_10001E530(_Unwind_Exception *a1)
{
}

uint64_t *sub_10001E548(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0LL;
  a4[1] = 0LL;
  a4[2] = a2;
  *a3 = a4;
  uint64_t v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }

  uint64_t result = sub_10001E6CC(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

BOOL sub_10001E59C(uint64_t a1, const void **a2, const void **a3)
{
  int v3 = *((char *)a3 + 23);
  int v4 = *((char *)a2 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = (size_t)a2[1];
  }
  if (v4 >= 0) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = *a2;
  }
  if (v3 >= 0) {
    size_t v7 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v7 = (size_t)a3[1];
  }
  if (v3 >= 0) {
    int v8 = a3;
  }
  else {
    int v8 = *a3;
  }
  if (v7 >= v5) {
    size_t v9 = v5;
  }
  else {
    size_t v9 = v7;
  }
  int v10 = memcmp(v6, v8, v9);
  if (v10) {
    return v10 < 0;
  }
  else {
    return v5 < v7;
  }
}

void *sub_10001E604(void *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }

  sub_10001E668((uint64_t)(__dst + 3), (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 7);
  *((void *)a2 + 7) = 0LL;
  __dst[7] = v5;
  return __dst;
}

uint64_t sub_10001E668(uint64_t a1, uint64_t a2)
{
  int v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24LL))(*v3, a1);
      return a1;
    }

    *(void *)(a1 + 24) = v4;
  }

  else
  {
    int v3 = (void *)(a1 + 24);
  }

  void *v3 = 0LL;
  return a1;
}

uint64_t *sub_10001E6CC(uint64_t *result, uint64_t *a2)
{
  *((_BYTE *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      uint64_t v2 = (uint64_t *)a2[2];
      if (*((_BYTE *)v2 + 24)) {
        return result;
      }
      int v3 = (uint64_t *)v2[2];
      uint64_t v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), uint64_t v5 = (_BYTE *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            size_t v9 = (uint64_t **)a2[2];
          }

          else
          {
            size_t v9 = (uint64_t **)v2[1];
            int v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              _DWORD v10[2] = (uint64_t)v2;
              int v3 = (uint64_t *)v2[2];
            }

            v9[2] = v3;
            *(void *)(v2[2] + 8LL * (*(void *)v2[2] != (void)v2)) = v9;
            *size_t v9 = v2;
            v2[2] = (uint64_t)v9;
            int v3 = v9[2];
            uint64_t v2 = (uint64_t *)*v3;
          }

          *((_BYTE *)v9 + 24) = 1;
          *((_BYTE *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          uint64_t *v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8LL * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }

      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), uint64_t v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          uint64_t *v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            int v3 = (uint64_t *)v2[2];
          }

          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8LL * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          int v3 = (uint64_t *)a2[2];
        }

        else
        {
          a2 = (uint64_t *)a2[2];
        }

        *((_BYTE *)a2 + 24) = 1;
        *((_BYTE *)v3 + 24) = 0;
        uint64_t v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8LL * (*(void *)v3[2] != (void)v3)) = v2;
        uint64_t *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }

      *((_BYTE *)v2 + 24) = 1;
      a2 = v3;
      *((_BYTE *)v3 + 24) = v3 == result;
      _BYTE *v5 = 1;
    }

    while (v3 != result);
  }

  return result;
}

void sub_10001E864(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_10001E8A8((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

void sub_10001E8A8(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 24);

  int v3 = *(void **)(a1 + 48);
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    int v3 = v2;
  }

  else
  {
    if (!v3) {
      goto LABEL_6;
    }
    uint64_t v4 = 5LL;
  }

  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
}

uint64_t sub_10001E914(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24LL))(*(void *)(a2 + 24), a1);
    }

    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16LL))(v3);
    }
  }

  else
  {
    *(void *)(a1 + 24) = 0LL;
  }

  return a1;
}

uint64_t sub_10001E978(uint64_t **a1, const void **a2)
{
  uint64_t v3 = (uint64_t *)sub_10001E9D0((uint64_t)a1, a2);
  uint64_t v4 = v3;
  sub_10001EA5C(a1, v3);
  sub_10001E8A8((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1LL;
}

uint64_t sub_10001E9D0(uint64_t a1, const void **a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 16;
  uint64_t v6 = a1 + 8;
  do
  {
    BOOL v7 = sub_10001E59C(v5, (const void **)(v3 + 32), a2);
    int v8 = (uint64_t *)(v3 + 8);
    if (!v7)
    {
      int v8 = (uint64_t *)v3;
      uint64_t v6 = v3;
    }

    uint64_t v3 = *v8;
  }

  while (*v8);
  return v6;
}

uint64_t *sub_10001EA5C(uint64_t **a1, uint64_t *a2)
{
  uint64_t v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      uint64_t v3 = v2;
      uint64_t v2 = (uint64_t *)*v2;
    }

    while (v2);
  }

  else
  {
    uint64_t v4 = a2;
    do
    {
      uint64_t v3 = (uint64_t *)v4[2];
      BOOL v5 = *v3 == (void)v4;
      uint64_t v4 = v3;
    }

    while (!v5);
  }

  if (*a1 == a2) {
    *a1 = v3;
  }
  uint64_t v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  sub_10001EACC(v6, a2);
  return v3;
}

uint64_t *sub_10001EACC(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2;
  if (*a2)
  {
    uint64_t v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      uint64_t v3 = a2;
      goto LABEL_7;
    }

    do
    {
      uint64_t v3 = v4;
      uint64_t v4 = (uint64_t *)*v4;
    }

    while (v4);
  }

  uint64_t v2 = v3[1];
  if (v2)
  {
LABEL_7:
    int v5 = 0;
    *(void *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }

  int v5 = 1;
LABEL_8:
  uint64_t v6 = (uint64_t **)v3[2];
  BOOL v7 = *v6;
  if (*v6 == v3)
  {
    uint64_t *v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      BOOL v7 = 0LL;
      uint64_t result = (uint64_t *)v2;
    }

    else
    {
      BOOL v7 = v6[1];
    }
  }

  else
  {
    v6[1] = (uint64_t *)v2;
  }

  int v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    uint64_t v9 = a2[2];
    v3[2] = v9;
    *(void *)(v9 + 8LL * (*(void *)a2[2] != (void)a2)) = v3;
    uint64_t v11 = *a2;
    uint64_t v10 = a2[1];
    *(void *)(v11 + 16) = v3;
    uint64_t *v3 = v11;
    v3[1] = v10;
    if (v10) {
      *(void *)(v10 + 16) = v3;
    }
    *((_BYTE *)v3 + 24) = *((_BYTE *)a2 + 24);
    if (result == a2) {
      uint64_t result = v3;
    }
  }

  if (!v8 || !result) {
    return result;
  }
  if (!v5)
  {
    *(_BYTE *)(v2 + 24) = 1;
    return result;
  }

  while (1)
  {
    uint64_t v12 = v7[2];
    if (!*((_BYTE *)v7 + 24))
    {
      *((_BYTE *)v7 + 24) = 1;
      *(_BYTE *)(v12 + 24) = 0;
      uint64_t v13 = *(uint64_t **)(v12 + 8);
      uint64_t v14 = *v13;
      *(void *)(v12 + 8) = *v13;
      if (v14) {
        *(void *)(v14 + 16) = v12;
      }
      v13[2] = *(void *)(v12 + 16);
      *(void *)(*(void *)(v12 + 16) + 8LL * (**(void **)(v12 + 16) != v12)) = v13;
      uint64_t *v13 = v12;
      *(void *)(v12 + 16) = v13;
      BOOL v7 = *(uint64_t **)(*v7 + 8);
    }

    __int16 v15 = (void *)*v7;
    if (*v7 && !*((_BYTE *)v15 + 24))
    {
      id v16 = (uint64_t *)v7[1];
      if (!v16) {
        goto LABEL_56;
      }
LABEL_55:
      if (*((_BYTE *)v16 + 24))
      {
LABEL_56:
        *((_BYTE *)v15 + 24) = 1;
        *((_BYTE *)v7 + 24) = 0;
        uint64_t v22 = v15[1];
        *BOOL v7 = v22;
        if (v22) {
          *(void *)(v22 + 16) = v7;
        }
        v15[2] = v7[2];
        *(void *)(v7[2] + 8LL * (*(void *)v7[2] != (void)v7)) = v15;
        v15[1] = v7;
        v7[2] = (uint64_t)v15;
        id v16 = v7;
      }

      else
      {
        __int16 v15 = v7;
      }

      uint64_t v23 = v15[2];
      *((_BYTE *)v15 + 24) = *(_BYTE *)(v23 + 24);
      *(_BYTE *)(v23 + 24) = 1;
      *((_BYTE *)v16 + 24) = 1;
      BOOL v24 = *(uint64_t **)(v23 + 8);
      uint64_t v25 = *v24;
      *(void *)(v23 + 8) = *v24;
      if (v25) {
        *(void *)(v25 + 16) = v23;
      }
      v24[2] = *(void *)(v23 + 16);
      *(void *)(*(void *)(v23 + 16) + 8LL * (**(void **)(v23 + 16) != v23)) = v24;
      *BOOL v24 = v23;
      goto LABEL_72;
    }

    id v16 = (uint64_t *)v7[1];
    if (v16 && !*((_BYTE *)v16 + 24)) {
      goto LABEL_55;
    }
    *((_BYTE *)v7 + 24) = 0;
    __int16 v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      __int16 v17 = result;
LABEL_53:
      *((_BYTE *)v17 + 24) = 1;
      return result;
    }

    if (!*((_BYTE *)v17 + 24)) {
      goto LABEL_53;
    }
LABEL_49:
    BOOL v7 = *(uint64_t **)(v17[2] + 8LL * (*(void *)v17[2] == (void)v17));
  }

  if (!*((_BYTE *)v7 + 24))
  {
    *((_BYTE *)v7 + 24) = 1;
    *(_BYTE *)(v12 + 24) = 0;
    uint64_t v18 = v7[1];
    *(void *)uint64_t v12 = v18;
    if (v18) {
      *(void *)(v18 + 16) = v12;
    }
    v7[2] = *(void *)(v12 + 16);
    *(void *)(*(void *)(v12 + 16) + 8LL * (**(void **)(v12 + 16) != v12)) = v7;
    v7[1] = v12;
    *(void *)(v12 + 16) = v7;
    BOOL v7 = *(uint64_t **)v12;
  }

  uint64_t v19 = (void *)*v7;
  if (*v7 && !*((_BYTE *)v19 + 24)) {
    goto LABEL_68;
  }
  BOOL v20 = (uint64_t *)v7[1];
  if (!v20 || *((_BYTE *)v20 + 24))
  {
    *((_BYTE *)v7 + 24) = 0;
    __int16 v17 = (uint64_t *)v7[2];
    if (*((_BYTE *)v17 + 24)) {
      BOOL v21 = v17 == result;
    }
    else {
      BOOL v21 = 1;
    }
    if (v21) {
      goto LABEL_53;
    }
    goto LABEL_49;
  }

  if (v19 && !*((_BYTE *)v19 + 24))
  {
LABEL_68:
    BOOL v20 = v7;
  }

  else
  {
    *((_BYTE *)v20 + 24) = 1;
    *((_BYTE *)v7 + 24) = 0;
    uint64_t v26 = *v20;
    v7[1] = *v20;
    if (v26) {
      *(void *)(v26 + 16) = v7;
    }
    v20[2] = v7[2];
    *(void *)(v7[2] + 8LL * (*(void *)v7[2] != (void)v7)) = v20;
    uint64_t *v20 = (uint64_t)v7;
    v7[2] = (uint64_t)v20;
    uint64_t v19 = v7;
  }

  uint64_t v23 = v20[2];
  *((_BYTE *)v20 + 24) = *(_BYTE *)(v23 + 24);
  *(_BYTE *)(v23 + 24) = 1;
  *((_BYTE *)v19 + 24) = 1;
  BOOL v24 = *(uint64_t **)v23;
  uint64_t v27 = *(void *)(*(void *)v23 + 8LL);
  *(void *)uint64_t v23 = v27;
  if (v27) {
    *(void *)(v27 + 16) = v23;
  }
  v24[2] = *(void *)(v23 + 16);
  *(void *)(*(void *)(v23 + 16) + 8LL * (**(void **)(v23 + 16) != v23)) = v24;
  v24[1] = v23;
LABEL_72:
  *(void *)(v23 + 16) = v24;
  return result;
}

void sub_10001EE50(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_10001EE50(a1, *(void *)a2);
    sub_10001EE50(a1, *((void *)a2 + 1));
    uint64_t v4 = (void **)(a2 + 40);
    sub_10001F250(&v4);
    operator delete(a2);
  }

void sub_10001EEA8(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10001EEA8(a1, *a2);
    sub_10001EEA8(a1, a2[1]);
    sub_10001E8A8((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_10001EEF0()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = &off_1007A24D0;
}

void sub_10001EF28(std::exception *a1)
{
}

void *sub_10001EF3C(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_10001EFC0(result, a4);
    uint64_t result = (void *)sub_10001F05C((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }

  return result;
}

void sub_10001EFA0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_10001F250(&a9);
  _Unwind_Resume(a1);
}

char *sub_10001EFC0(void *a1, unint64_t a2)
{
  if (a2 >= 0x186186186186187LL) {
    sub_10001E11C();
  }
  uint64_t result = (char *)sub_10001F014((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[168 * v4];
  return result;
}

void *sub_10001F014(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x186186186186187LL) {
    sub_10001D350();
  }
  return operator new(168 * a2);
}

uint64_t sub_10001F05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  _DWORD v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_10001D378(v4, v6);
      v6 += 168LL;
      uint64_t v4 = v11 + 168;
      v11 += 168LL;
    }

    while (v6 != a3);
  }

  char v9 = 1;
  sub_10001F0FC((uint64_t)v8);
  return v4;
}

void sub_10001F0E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10001F0FC(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_10001F130((uint64_t *)a1);
  }
  return a1;
}

void sub_10001F130(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 168LL;
      sub_10001F180(v5, v3);
    }

    while (v3 != v4);
  }

void sub_10001F180(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 136);
  if (v3 == (void *)(a2 + 112))
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = (void *)(a2 + 112);
  }

  else
  {
    if (!v3) {
      goto LABEL_6;
    }
    uint64_t v4 = 5LL;
  }

  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  uint64_t v5 = *(void **)(a2 + 104);
  if (v5 == (void *)(a2 + 80))
  {
    uint64_t v6 = 4LL;
    uint64_t v5 = (void *)(a2 + 80);
  }

  else
  {
    if (!v5) {
      goto LABEL_11;
    }
    uint64_t v6 = 5LL;
  }

  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_11:
  BOOL v7 = *(void **)(a2 + 72);
  if (v7 == (void *)(a2 + 48))
  {
    uint64_t v8 = 4LL;
    BOOL v7 = (void *)(a2 + 48);
    goto LABEL_15;
  }

  if (v7)
  {
    uint64_t v8 = 5LL;
LABEL_15:
    (*(void (**)(void))(*v7 + 8 * v8))();
  }
}

void sub_10001F250(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 168LL;
        sub_10001F180((uint64_t)(v1 + 2), v4);
      }

      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }

    v1[1] = v2;
    operator delete(v5);
  }

uint64_t sub_10001F2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  _DWORD v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_10001D378(v4, v6);
      v6 += 168LL;
      uint64_t v4 = v11 + 168;
      v11 += 168LL;
    }

    while (v6 != a3);
  }

  char v9 = 1;
  sub_10001F0FC((uint64_t)v8);
  return v4;
}

void sub_10001F360( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t **sub_10001F374(uint64_t **a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    unint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (uint64_t **)v5;
        unint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    uint64_t v8 = a1 + 1;
LABEL_10:
    uint64_t v10 = (char *)operator new(0x40uLL);
    *((void *)v10 + 4) = *(void *)a3;
    *(_OWORD *)(v10 + 40) = *(_OWORD *)(a3 + 8);
    *((void *)v10 + 7) = *(void *)(a3 + 24);
    *(void *)(a3 + 8) = 0LL;
    *(void *)(a3 + 16) = 0LL;
    *(void *)(a3 + 24) = 0LL;
    sub_10001E548(a1, (uint64_t)v8, v6, (uint64_t *)v10);
    return (uint64_t **)v10;
  }

  return v8;
}

uint64_t sub_10001F444(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xCF3CF3CF3CF3CF3DLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x186186186186186LL) {
    sub_10001E11C();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xCF3CF3CF3CF3CF3DLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0xC30C30C30C30C3LL) {
    unint64_t v9 = 0x186186186186186LL;
  }
  else {
    unint64_t v9 = v5;
  }
  __int16 v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_10001F014(v7, v9);
  }
  else {
    uint64_t v10 = 0LL;
  }
  uint64_t v13 = v10;
  uint64_t v14 = &v10[168 * v4];
  id v16 = &v10[168 * v9];
  sub_10001D378((uint64_t)v14, a2);
  __int16 v15 = v14 + 168;
  sub_10001F560(a1, &v13);
  uint64_t v11 = a1[1];
  sub_10001F8B4(&v13);
  return v11;
}

void sub_10001F54C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10001F560(uint64_t *a1, void *a2)
{
  uint64_t result = sub_10001F5D4((uint64_t)(a1 + 2), a1[1], (__int128 *)a1[1], *a1, (__int128 *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_10001F5D4( uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&__int128 v16 = a6;
  *((void *)&v16 + 1) = a7;
  __int128 v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  char v14 = 0;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }

  else
  {
    unint64_t v9 = a3;
    do
    {
      unint64_t v9 = (__int128 *)((char *)v9 - 168);
      sub_10001F688(a1, v7 - 168, v9);
      uint64_t v7 = *((void *)&v16 + 1) - 168LL;
      *((void *)&v16 + 1) -= 168LL;
    }

    while (v9 != a5);
    uint64_t v11 = v16;
  }

  char v14 = 1;
  sub_10001F830((uint64_t)v13);
  return v11;
}

uint64_t sub_10001F688(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v5 = *a3;
  *a3 = 0u;
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = a3[1];
  __int128 v6 = a3[2];
  a3[2] = 0u;
  *(_OWORD *)(a2 + sub_100012358(v1 - 32) = v6;
  sub_10001F704(a2 + 48, (uint64_t)(a3 + 3));
  sub_10001F768(a2 + 80, (uint64_t)(a3 + 5));
  uint64_t result = sub_10001F7CC(a2 + 112, (uint64_t)(a3 + 7));
  *(_DWORD *)(a2 + 144) = *((_DWORD *)a3 + 36);
  uint64_t v8 = *((void *)a3 + 19);
  uint64_t v9 = *((void *)a3 + 20);
  *((void *)a3 + 19) = 0LL;
  *(void *)(a2 + 152) = v8;
  *(void *)(a2 + 160) = v9;
  return result;
}

uint64_t sub_10001F704(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24LL))(*v3, a1);
      return a1;
    }

    *(void *)(a1 + 24) = v4;
  }

  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }

  void *v3 = 0LL;
  return a1;
}

uint64_t sub_10001F768(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24LL))(*v3, a1);
      return a1;
    }

    *(void *)(a1 + 24) = v4;
  }

  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }

  void *v3 = 0LL;
  return a1;
}

uint64_t sub_10001F7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24LL))(*v3, a1);
      return a1;
    }

    *(void *)(a1 + 24) = v4;
  }

  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }

  void *v3 = 0LL;
  return a1;
}

uint64_t sub_10001F830(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_10001F864((uint64_t *)a1);
  }
  return a1;
}

void sub_10001F864(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_10001F180(v3, v1);
      v1 += 168LL;
    }

    while (v1 != v2);
  }

void **sub_10001F8B4(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_10001F8E4(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 168;
    sub_10001F180(v4, i - 168);
  }

uint64_t *sub_10001F928(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    do
    {
      sub_10001F984(a3, v4);
      v4 += 21;
      a3 += 168LL;
    }

    while (v4 != a2);
    return a2;
  }

  return v4;
}

uint64_t sub_10001F984(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *a2 = 0LL;
  __int128 v5 = *(void **)a1;
  *(void *)a1 = v4;

  uint64_t v6 = a2[1];
  a2[1] = 0LL;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v6;

  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  uint64_t v8 = a2[4];
  a2[4] = 0LL;
  uint64_t v9 = *(void **)(a1 + 32);
  *(void *)(a1 + sub_100012358(v1 - 32) = v8;

  uint64_t v10 = a2[5];
  a2[5] = 0LL;
  uint64_t v11 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v10;

  sub_10001FA54((void *)(a1 + 48), (uint64_t)(a2 + 6));
  sub_10001FA54((void *)(a1 + 80), (uint64_t)(a2 + 10));
  sub_10001FA54((void *)(a1 + 112), (uint64_t)(a2 + 14));
  *(_DWORD *)(a1 + 144) = *((_DWORD *)a2 + 36);
  uint64_t v12 = a2[19];
  a2[19] = 0LL;
  uint64_t v13 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = v12;

  *(void *)(a1 + 160) = a2[20];
  return a1;
}

void *sub_10001FA54(void *a1, uint64_t a2)
{
  uint64_t v4 = (void *)a1[3];
  a1[3] = 0LL;
  if (v4 == a1)
  {
    uint64_t v5 = 4LL;
    uint64_t v4 = a1;
  }

  else
  {
    if (!v4) {
      goto LABEL_6;
    }
    uint64_t v5 = 5LL;
  }

  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6)
  {
    if (v6 == a2)
    {
      a1[3] = a1;
      (*(void (**)(void, void *))(**(void **)(a2 + 24) + 24LL))(*(void *)(a2 + 24), a1);
    }

    else
    {
      a1[3] = v6;
      *(void *)(a2 + 24) = 0LL;
    }
  }

  else
  {
    a1[3] = 0LL;
  }

  return a1;
}

uint64_t *sub_10001FAE4(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = sub_10001EA5C(a1, (uint64_t *)a2);
  uint64_t v5 = (void **)(a2 + 40);
  sub_10001F250(&v5);
  operator delete((void *)a2);
  return v3;
}

void sub_10001FB2C(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_10001FB6C((uint64_t *)v2);
    operator delete(**a1);
  }

void sub_10001FB6C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 56LL)
  {
    uint64_t v4 = *(void **)(i - 32);
    if (v4)
    {
      *(void *)(i - 24) = v4;
      operator delete(v4);
    }
  }

  a1[1] = v2;
}

uint64_t sub_10001FBB8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = 0x6DB6DB6DB6DB6DB7LL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0x6DB6DB6DB6DB6DB7LL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x249249249249249LL) {
    unint64_t v9 = 0x492492492492492LL;
  }
  else {
    unint64_t v9 = v5;
  }
  v16[4] = a1 + 2;
  uint64_t v10 = (char *)sub_10001FD64(v7, v9);
  uint64_t v11 = &v10[56 * v4];
  v16[0] = v10;
  v16[1] = v11;
  v16[3] = &v10[56 * v12];
  int v13 = *(_DWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a2;
  *((_DWORD *)v11 + 4) = v13;
  *((void *)v11 + 4) = 0LL;
  *((void *)v11 + 5) = 0LL;
  *((void *)v11 + 3) = 0LL;
  *(_OWORD *)(v11 + 24) = *(_OWORD *)(a2 + 24);
  *((void *)v11 + 5) = *(void *)(a2 + 40);
  *(void *)(a2 + 24) = 0LL;
  *(void *)(a2 + sub_100012358(v1 - 32) = 0LL;
  *(void *)(a2 + 40) = 0LL;
  *((_DWORD *)v11 + 12) = *(_DWORD *)(a2 + 48);
  v16[2] = v11 + 56;
  sub_10001FCF0(a1, v16);
  uint64_t v14 = a1[1];
  sub_10001FEE4((uint64_t)v16);
  return v14;
}

void sub_10001FCDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10001FCF0(uint64_t *a1, void *a2)
{
  uint64_t result = sub_10001FDAC((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_10001FD64(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x492492492492493LL) {
    sub_10001D350();
  }
  return operator new(56 * a2);
}

uint64_t sub_10001FDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&__int128 v14 = a6;
  *((void *)&v14 + 1) = a7;
  __int128 v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  _DWORD v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }

  else
  {
    do
    {
      __int128 v8 = *(_OWORD *)(a3 - 56);
      *(_DWORD *)(v7 - 40) = *(_DWORD *)(a3 - 40);
      *(_OWORD *)(v7 - 56) = v8;
      *(void *)(v7 - 24) = 0LL;
      *(void *)(v7 - 16) = 0LL;
      *(void *)(v7 - sub_100012358(v1 - 32) = 0LL;
      *(_OWORD *)(v7 - sub_100012358(v1 - 32) = *(_OWORD *)(a3 - 32);
      *(void *)(v7 - 16) = *(void *)(a3 - 16);
      *(void *)(a3 - 24) = 0LL;
      *(void *)(a3 - 16) = 0LL;
      *(void *)(a3 - sub_100012358(v1 - 32) = 0LL;
      *(_DWORD *)(v7 - 8) = *(_DWORD *)(a3 - 8);
      uint64_t v7 = *((void *)&v14 + 1) - 56LL;
      *((void *)&v14 + 1) -= 56LL;
      a3 -= 56LL;
    }

    while (a3 != a5);
    uint64_t v9 = v14;
  }

  char v12 = 1;
  sub_10001FE6C((uint64_t)v11);
  return v9;
}

uint64_t sub_10001FE6C(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_10001FEA0(a1);
  }
  return a1;
}

void sub_10001FEA0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8LL);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8LL);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)(v1 + 24);
    if (v3)
    {
      *(void *)(v1 + sub_100012358(v1 - 32) = v3;
      operator delete(v3);
    }

    v1 += 56LL;
  }

uint64_t sub_10001FEE4(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10001FF18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    *(void *)(a1 + 16) = v2 - 56;
    uint64_t v5 = *(void **)(v2 - 32);
    if (v5)
    {
      *(void *)(v2 - 24) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }

    else
    {
      v2 -= 56LL;
    }
  }

void sub_10001FF70(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
LABEL_1:
  unint64_t v8 = a1;
  while (2)
  {
    a1 = v8;
    uint64_t v9 = a2 - v8;
    uint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2 - v8) >> 3);
    switch(v10)
    {
      case 0LL:
      case 1LL:
        return;
      case 2LL:
        if (*(void *)(a2 - 8) < *(void *)(v8 + 16))
        {
          uint64_t v117 = *(void *)(v8 + 16);
          __int128 v108 = *(_OWORD *)v8;
          __int128 v45 = *(_OWORD *)(a2 - 24);
          *(void *)(v8 + 16) = *(void *)(a2 - 8);
          *(_OWORD *)unint64_t v8 = v45;
          *(void *)(a2 - 8) = v117;
          *(_OWORD *)(a2 - 24) = v108;
        }

        return;
      case 3LL:
        sub_100020874((__int128 *)v8, (__int128 *)(v8 + 24), (__int128 *)(a2 - 24));
        return;
      case 4LL:
        sub_100020C08(v8, v8 + 24, v8 + 48, a2 - 24);
        return;
      case 5LL:
        unsigned __int8 v46 = (__int128 *)(v8 + 24);
        char v47 = (__int128 *)(v8 + 48);
        __int128 v48 = (__int128 *)(v8 + 72);
        sub_100020C08(v8, v8 + 24, v8 + 48, v8 + 72);
        if (*(void *)(a2 - 8) < *(void *)(v8 + 88))
        {
          __int128 v49 = *v48;
          uint64_t v50 = *(void *)(v8 + 88);
          uint64_t v51 = *(void *)(a2 - 8);
          *__int128 v48 = *(_OWORD *)(a2 - 24);
          *(void *)(v8 + 88) = v51;
          *(void *)(a2 - 8) = v50;
          *(_OWORD *)(a2 - 24) = v49;
          if (*(void *)(v8 + 88) < *(void *)(v8 + 64))
          {
            uint64_t v52 = *(void *)(v8 + 64);
            __int128 v53 = *v47;
            *char v47 = *v48;
            *(void *)(v8 + 64) = *(void *)(v8 + 88);
            *__int128 v48 = v53;
            *(void *)(v8 + 88) = v52;
            if (*(void *)(v8 + 64) < *(void *)(v8 + 40))
            {
              uint64_t v54 = *(void *)(v8 + 40);
              __int128 v55 = *v46;
              __int128 *v46 = *v47;
              *(void *)(v8 + 40) = *(void *)(v8 + 64);
              *char v47 = v55;
              *(void *)(v8 + 64) = v54;
              if (*(void *)(v8 + 40) < *(void *)(v8 + 16))
              {
                uint64_t v118 = *(void *)(v8 + 16);
                __int128 v109 = *(_OWORD *)v8;
                *(_OWORD *)unint64_t v8 = *v46;
                *(void *)(v8 + 16) = *(void *)(v8 + 40);
                __int128 *v46 = v109;
                *(void *)(v8 + 40) = v118;
              }
            }
          }
        }

        return;
      default:
        if (v9 <= 575)
        {
          uint64_t v56 = (_OWORD *)(v8 + 24);
          BOOL v58 = v8 == a2 || v56 == (_OWORD *)a2;
          if ((a4 & 1) != 0)
          {
            if (!v58)
            {
              uint64_t v59 = 0LL;
              id v60 = (_OWORD *)v8;
              do
              {
                unint64_t v61 = *((void *)v60 + 5);
                unint64_t v62 = *((void *)v60 + 2);
                id v60 = v56;
                if (v61 < v62)
                {
                  __int128 v110 = *v56;
                  uint64_t v63 = v59;
                  while (1)
                  {
                    uint64_t v64 = v8 + v63;
                    *(_OWORD *)(v64 + 24) = *(_OWORD *)(v8 + v63);
                    *(void *)(v64 + 40) = *(void *)(v8 + v63 + 16);
                    if (!v63) {
                      break;
                    }
                    v63 -= 24LL;
                    if (v61 >= *(void *)(v64 - 8))
                    {
                      uint64_t v65 = v8 + v63 + 24;
                      goto LABEL_78;
                    }
                  }

                  uint64_t v65 = v8;
LABEL_78:
                  *(_OWORD *)uint64_t v65 = v110;
                  *(void *)(v65 + 16) = v61;
                }

                uint64_t v56 = (_OWORD *)((char *)v60 + 24);
                v59 += 24LL;
              }

              while ((_OWORD *)((char *)v60 + 24) != (_OWORD *)a2);
            }
          }

          else if (!v58)
          {
            do
            {
              unint64_t v98 = *(void *)(a1 + 40);
              unint64_t v99 = *(void *)(a1 + 16);
              a1 = (uint64_t)v56;
              if (v98 < v99)
              {
                __int128 v113 = *v56;
                unsigned __int16 v100 = v56;
                do
                {
                  *unsigned __int16 v100 = *(_OWORD *)((char *)v100 - 24);
                  *((void *)v100 + 2) = *((void *)v100 - 1);
                  unint64_t v101 = *((void *)v100 - 4);
                  unsigned __int16 v100 = (_OWORD *)((char *)v100 - 24);
                }

                while (v98 < v101);
                *unsigned __int16 v100 = v113;
                *((void *)v100 + 2) = v98;
              }

              uint64_t v56 = (_OWORD *)(a1 + 24);
            }

            while (a1 + 24 != a2);
          }

          return;
        }

        if (!a3)
        {
          if (v8 != a2)
          {
            int64_t v66 = (unint64_t)(v10 - 2) >> 1;
            int64_t v67 = v66;
            do
            {
              int64_t v68 = v67;
              if (v66 >= v67)
              {
                uint64_t v69 = (2 * v67) | 1;
                unint64_t v70 = v8 + 24 * v69;
                if (2 * v68 + 2 < v10)
                {
                  unint64_t v71 = *(void *)(v70 + 16);
                  unint64_t v72 = *(void *)(v70 + 40);
                  v70 += 24LL * (v71 < v72);
                  if (v71 < v72) {
                    uint64_t v69 = 2 * v68 + 2;
                  }
                }

                unint64_t v73 = v8 + 24 * v68;
                unint64_t v74 = *(void *)(v73 + 16);
                if (*(void *)(v70 + 16) >= v74)
                {
                  __int128 v111 = *(_OWORD *)v73;
                  do
                  {
                    unint64_t v75 = v73;
                    unint64_t v73 = v70;
                    __int128 v76 = *(_OWORD *)v70;
                    *(void *)(v75 + 16) = *(void *)(v70 + 16);
                    *(_OWORD *)unint64_t v75 = v76;
                    if (v66 < v69) {
                      break;
                    }
                    uint64_t v77 = (2 * v69) | 1;
                    unint64_t v70 = v8 + 24 * v77;
                    uint64_t v78 = 2 * v69 + 2;
                    if (v78 < v10)
                    {
                      unint64_t v79 = *(void *)(v70 + 16);
                      unint64_t v80 = *(void *)(v70 + 40);
                      v70 += 24LL * (v79 < v80);
                      if (v79 < v80) {
                        uint64_t v77 = v78;
                      }
                    }

                    uint64_t v69 = v77;
                  }

                  while (*(void *)(v70 + 16) >= v74);
                  *(_OWORD *)unint64_t v73 = v111;
                  *(void *)(v73 + 16) = v74;
                }
              }

              int64_t v67 = v68 - 1;
            }

            while (v68);
            int64_t v81 = v9 / 0x18uLL;
            do
            {
              uint64_t v82 = 0LL;
              uint64_t v119 = *(void *)(v8 + 16);
              __int128 v112 = *(_OWORD *)v8;
              unint64_t v83 = v8;
              do
              {
                uint64_t v84 = v83 + 24 * v82 + 24;
                uint64_t v85 = (2 * v82) | 1;
                uint64_t v86 = 2 * v82 + 2;
                if (v86 < v81)
                {
                  unint64_t v87 = *(void *)(v84 + 16);
                  unint64_t v88 = *(void *)(v84 + 40);
                  v84 += 24LL * (v87 < v88);
                  if (v87 < v88) {
                    uint64_t v85 = v86;
                  }
                }

                __int128 v89 = *(_OWORD *)v84;
                *(void *)(v83 + 16) = *(void *)(v84 + 16);
                *(_OWORD *)unint64_t v83 = v89;
                unint64_t v83 = v84;
                uint64_t v82 = v85;
              }

              while (v85 <= (uint64_t)((unint64_t)(v81 - 2) >> 1));
              a2 -= 24LL;
              if (v84 == a2)
              {
                *(void *)(v84 + 16) = v119;
                *(_OWORD *)uint64_t v84 = v112;
              }

              else
              {
                __int128 v90 = *(_OWORD *)a2;
                *(void *)(v84 + 16) = *(void *)(a2 + 16);
                *(_OWORD *)uint64_t v84 = v90;
                *(void *)(a2 + 16) = v119;
                *(_OWORD *)a2 = v112;
                uint64_t v91 = v84 - v8 + 24;
                if (v91 >= 25)
                {
                  unint64_t v92 = (v91 / 0x18uLL - 2) >> 1;
                  uint64_t v93 = v8 + 24 * v92;
                  unint64_t v94 = *(void *)(v84 + 16);
                  if (*(void *)(v93 + 16) < v94)
                  {
                    __int128 v104 = *(_OWORD *)v84;
                    do
                    {
                      uint64_t v95 = v84;
                      uint64_t v84 = v93;
                      __int128 v96 = *(_OWORD *)v93;
                      *(void *)(v95 + 16) = *(void *)(v93 + 16);
                      *(_OWORD *)uint64_t v95 = v96;
                      if (!v92) {
                        break;
                      }
                      unint64_t v92 = (v92 - 1) >> 1;
                      uint64_t v93 = v8 + 24 * v92;
                    }

                    while (*(void *)(v93 + 16) < v94);
                    *(_OWORD *)uint64_t v84 = v104;
                    *(void *)(v84 + 16) = v94;
                  }
                }
              }
            }

            while (v81-- > 2);
          }

          return;
        }

        unint64_t v11 = (unint64_t)v10 >> 1;
        unint64_t v12 = v8 + 24 * ((unint64_t)v10 >> 1);
        if ((unint64_t)v9 < 0xC01)
        {
          sub_100020874((__int128 *)(a1 + 24 * v11), (__int128 *)a1, (__int128 *)(a2 - 24));
        }

        else
        {
          sub_100020874((__int128 *)a1, (__int128 *)(a1 + 24 * v11), (__int128 *)(a2 - 24));
          uint64_t v13 = 3 * v11;
          __int128 v14 = (__int128 *)(a1 + 24 * v11 - 24);
          sub_100020874((__int128 *)(a1 + 24), v14, (__int128 *)(a2 - 48));
          __int128 v15 = (__int128 *)(a1 + 24 + 8 * v13);
          sub_100020874((__int128 *)(a1 + 48), v15, (__int128 *)(a2 - 72));
          sub_100020874(v14, (__int128 *)v12, v15);
          uint64_t v114 = *(void *)(a1 + 16);
          __int128 v105 = *(_OWORD *)a1;
          uint64_t v16 = *(void *)(v12 + 16);
          *(_OWORD *)a1 = *(_OWORD *)v12;
          *(void *)(a1 + 16) = v16;
          *(void *)(v12 + 16) = v114;
          *(_OWORD *)unint64_t v12 = v105;
        }

        --a3;
        if ((a4 & 1) == 0)
        {
          unint64_t v17 = *(void *)(a1 + 16);
          if (*(void *)(a1 - 8) < v17) {
            goto LABEL_11;
          }
          __int128 v103 = *(_OWORD *)a1;
          if (v17 >= *(void *)(a2 - 8))
          {
            unint64_t v35 = a1 + 24;
            do
            {
              unint64_t v8 = v35;
              if (v35 >= a2) {
                break;
              }
              unint64_t v36 = *(void *)(v35 + 16);
              v35 += 24LL;
            }

            while (v17 >= v36);
          }

          else
          {
            uint64_t v33 = a1;
            do
            {
              unint64_t v8 = v33 + 24;
              unint64_t v34 = *(void *)(v33 + 40);
              v33 += 24LL;
            }

            while (v17 >= v34);
          }

          unint64_t v37 = a2;
          if (v8 < a2)
          {
            unint64_t v38 = a2;
            do
            {
              unint64_t v37 = v38 - 24;
              unint64_t v39 = *(void *)(v38 - 8);
              v38 -= 24LL;
            }

            while (v17 < v39);
          }

          while (v8 < v37)
          {
            uint64_t v116 = *(void *)(v8 + 16);
            __int128 v107 = *(_OWORD *)v8;
            __int128 v40 = *(_OWORD *)v37;
            *(void *)(v8 + 16) = *(void *)(v37 + 16);
            *(_OWORD *)unint64_t v8 = v40;
            *(void *)(v37 + 16) = v116;
            *(_OWORD *)unint64_t v37 = v107;
            do
            {
              unint64_t v41 = *(void *)(v8 + 40);
              v8 += 24LL;
            }

            while (v17 >= v41);
            do
            {
              unint64_t v42 = *(void *)(v37 - 8);
              v37 -= 24LL;
            }

            while (v17 < v42);
          }

          int v43 = (__int128 *)(v8 - 24);
          if (v8 - 24 != a1)
          {
            __int128 v44 = *v43;
            *(void *)(a1 + 16) = *(void *)(v8 - 8);
            *(_OWORD *)a1 = v44;
          }

          a4 = 0;
          __int128 *v43 = v103;
          *(void *)(v8 - 8) = v17;
          continue;
        }

        unint64_t v17 = *(void *)(a1 + 16);
LABEL_11:
        uint64_t v18 = 0LL;
        __int128 v102 = *(_OWORD *)a1;
        do
        {
          unint64_t v19 = *(void *)(a1 + v18 + 40);
          v18 += 24LL;
        }

        while (v19 < v17);
        unint64_t v20 = a1 + v18;
        unint64_t v21 = a2;
        if (v18 == 24)
        {
          unint64_t v24 = a2;
          while (v20 < v24)
          {
            unint64_t v22 = v24 - 24;
            unint64_t v25 = *(void *)(v24 - 8);
            v24 -= 24LL;
            if (v25 < v17) {
              goto LABEL_21;
            }
          }

          unint64_t v22 = v24;
        }

        else
        {
          do
          {
            unint64_t v22 = v21 - 24;
            unint64_t v23 = *(void *)(v21 - 8);
            v21 -= 24LL;
          }

          while (v23 >= v17);
        }

__int128 *sub_100020874(__int128 *result, __int128 *a2, __int128 *a3)
{
  unint64_t v3 = *((void *)a2 + 2);
  unint64_t v4 = *((void *)a3 + 2);
  if (v3 >= *((void *)result + 2))
  {
    if (v4 < v3)
    {
      uint64_t v8 = *((void *)a2 + 2);
      __int128 v9 = *a2;
      uint64_t v10 = *((void *)a3 + 2);
      *a2 = *a3;
      *((void *)a2 + 2) = v10;
      *a3 = v9;
      *((void *)a3 + 2) = v8;
      if (*((void *)a2 + 2) < *((void *)result + 2))
      {
        uint64_t v11 = *((void *)result + 2);
        __int128 v12 = *result;
        uint64_t v13 = *((void *)a2 + 2);
        char *result = *a2;
        *((void *)result + 2) = v13;
        *a2 = v12;
        *((void *)a2 + 2) = v11;
      }
    }
  }

  else
  {
    if (v4 >= v3)
    {
      uint64_t v14 = *((void *)result + 2);
      __int128 v15 = *result;
      uint64_t v16 = *((void *)a2 + 2);
      char *result = *a2;
      *((void *)result + 2) = v16;
      *a2 = v15;
      *((void *)a2 + 2) = v14;
      if (*((void *)a3 + 2) >= *((void *)a2 + 2)) {
        return result;
      }
      uint64_t v5 = *((void *)a2 + 2);
      __int128 v6 = *a2;
      uint64_t v17 = *((void *)a3 + 2);
      *a2 = *a3;
      *((void *)a2 + 2) = v17;
    }

    else
    {
      uint64_t v5 = *((void *)result + 2);
      __int128 v6 = *result;
      uint64_t v7 = *((void *)a3 + 2);
      char *result = *a3;
      *((void *)result + 2) = v7;
    }

    *a3 = v6;
    *((void *)a3 + 2) = v5;
  }

  return result;
}

BOOL sub_100020964(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 3);
  BOOL result = 1LL;
  switch(v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      if (*(void *)(a2 - 8) < *(void *)(a1 + 16))
      {
        uint64_t v6 = *(void *)(a1 + 16);
        __int128 v7 = *(_OWORD *)a1;
        uint64_t v8 = *(void *)(a2 - 8);
        *(_OWORD *)a1 = *(_OWORD *)(a2 - 24);
        *(void *)(a1 + 16) = v8;
        *(_OWORD *)(a2 - 24) = v7;
        *(void *)(a2 - 8) = v6;
      }

      return result;
    case 3uLL:
      sub_100020874((__int128 *)a1, (__int128 *)(a1 + 24), (__int128 *)(a2 - 24));
      return 1LL;
    case 4uLL:
      sub_100020C08(a1, a1 + 24, a1 + 48, a2 - 24);
      return 1LL;
    case 5uLL:
      uint64_t v17 = (__int128 *)(a1 + 24);
      uint64_t v18 = (__int128 *)(a1 + 48);
      unint64_t v19 = (__int128 *)(a1 + 72);
      sub_100020C08(a1, a1 + 24, a1 + 48, a1 + 72);
      if (*(void *)(a2 - 8) < *(void *)(a1 + 88))
      {
        uint64_t v20 = *(void *)(a1 + 88);
        __int128 v21 = *v19;
        uint64_t v22 = *(void *)(a2 - 8);
        __int128 *v19 = *(_OWORD *)(a2 - 24);
        *(void *)(a1 + 88) = v22;
        *(_OWORD *)(a2 - 24) = v21;
        *(void *)(a2 - 8) = v20;
        if (*(void *)(a1 + 88) < *(void *)(a1 + 64))
        {
          uint64_t v23 = *(void *)(a1 + 64);
          __int128 v24 = *v18;
          *uint64_t v18 = *v19;
          *(void *)(a1 + 64) = *(void *)(a1 + 88);
          __int128 *v19 = v24;
          *(void *)(a1 + 88) = v23;
          if (*(void *)(a1 + 64) < *(void *)(a1 + 40))
          {
            uint64_t v25 = *(void *)(a1 + 40);
            __int128 v26 = *v17;
            __int128 *v17 = *v18;
            *(void *)(a1 + 40) = *(void *)(a1 + 64);
            *uint64_t v18 = v26;
            *(void *)(a1 + 64) = v25;
            if (*(void *)(a1 + 40) < *(void *)(a1 + 16))
            {
              uint64_t v27 = *(void *)(a1 + 16);
              __int128 v28 = *(_OWORD *)a1;
              *(_OWORD *)a1 = *v17;
              *(void *)(a1 + 16) = *(void *)(a1 + 40);
              __int128 *v17 = v28;
              *(void *)(a1 + 40) = v27;
            }
          }
        }
      }

      return 1LL;
    default:
      uint64_t v9 = a1 + 48;
      sub_100020874((__int128 *)a1, (__int128 *)(a1 + 24), (__int128 *)(a1 + 48));
      uint64_t v10 = a1 + 72;
      if (a1 + 72 == a2) {
        return 1LL;
      }
      uint64_t v11 = 0LL;
      int v12 = 0;
      break;
  }

  while (1)
  {
    unint64_t v13 = *(void *)(v10 + 16);
    if (v13 < *(void *)(v9 + 16))
    {
      __int128 v29 = *(_OWORD *)v10;
      uint64_t v14 = v11;
      while (1)
      {
        uint64_t v15 = a1 + v14;
        *(_OWORD *)(v15 + 72) = *(_OWORD *)(a1 + v14 + 48);
        *(void *)(v15 + 88) = *(void *)(a1 + v14 + 64);
        if (v14 == -48) {
          break;
        }
        v14 -= 24LL;
        if (v13 >= *(void *)(v15 + 40))
        {
          uint64_t v16 = a1 + v14 + 72;
          goto LABEL_12;
        }
      }

      uint64_t v16 = a1;
LABEL_12:
      *(_OWORD *)uint64_t v16 = v29;
      *(void *)(v16 + 16) = v13;
      if (++v12 == 8) {
        return v10 + 24 == a2;
      }
    }

    uint64_t v9 = v10;
    v11 += 24LL;
    v10 += 24LL;
    if (v10 == a2) {
      return 1LL;
    }
  }

__n128 sub_100020C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    uint64_t v9 = *(void *)(a3 + 16);
    __n128 result = *(__n128 *)a3;
    uint64_t v10 = *(void *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(void *)(a3 + 16) = v10;
    *(__n128 *)a4 = result;
    *(void *)(a4 + 16) = v9;
    if (*(void *)(a3 + 16) < *(void *)(a2 + 16))
    {
      uint64_t v11 = *(void *)(a2 + 16);
      __n128 result = *(__n128 *)a2;
      uint64_t v12 = *(void *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(void *)(a2 + 16) = v12;
      *(__n128 *)a3 = result;
      *(void *)(a3 + 16) = v11;
      if (*(void *)(a2 + 16) < *(void *)(a1 + 16))
      {
        uint64_t v13 = *(void *)(a1 + 16);
        __n128 result = *(__n128 *)a1;
        uint64_t v14 = *(void *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = v14;
        *(__n128 *)a2 = result;
        *(void *)(a2 + 16) = v13;
      }
    }
  }

  return result;
}

uint64_t sub_100020CD4(uint64_t *a1, uint64_t *a2, double *a3, uint64_t a4)
{
  uint64_t v5 = 0x6DB6DB6DB6DB6DB7LL * ((a1[1] - *a1) >> 3);
  unint64_t v6 = v5 + 1;
  if (0xDB6DB6DB6DB6DB6ELL * ((a1[2] - *a1) >> 3) > v6) {
    unint64_t v6 = 0xDB6DB6DB6DB6DB6ELL * ((a1[2] - *a1) >> 3);
  }
  else {
    unint64_t v10 = v6;
  }
  uint64_t v18 = a1 + 2;
  if (v10) {
    uint64_t v11 = (char *)sub_10001FD64((uint64_t)(a1 + 2), v10);
  }
  else {
    uint64_t v11 = 0LL;
  }
  uint64_t v14 = v11;
  uint64_t v15 = &v11[56 * v5];
  uint64_t v17 = &v11[56 * v10];
  sub_100020E10((uint64_t)(a1 + 2), (uint64_t)v15, a2, a3, a4);
  uint64_t v16 = v15 + 56;
  sub_10001FCF0(a1, &v14);
  uint64_t v12 = a1[1];
  sub_10001FEE4((uint64_t)&v14);
  return v12;
}

void sub_100020DFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100020E10(uint64_t a1, uint64_t a2, uint64_t *a3, double *a4, uint64_t a5)
{
  uint64_t v6 = *a3;
  float v7 = *a4;
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  __p = 0LL;
  sub_10001E054( &__p,  *(const void **)a5,  *(void *)(a5 + 8),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a5 + 8) - *(void *)a5) >> 3));
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = 0LL;
  *(float *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = 0LL;
  *(void *)(a2 + sub_100012358(v1 - 32) = 0LL;
  *(void *)(a2 + 40) = 0LL;
  sub_10001E054((void *)(a2 + 24), __p, (uint64_t)v9, 0xAAAAAAAAAAAAAAABLL * ((v9 - (_BYTE *)__p) >> 3));
  *(_DWORD *)(a2 + 48) = 0;
  if (__p)
  {
    uint64_t v9 = __p;
    operator delete(__p);
  }

void sub_100020EB4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100020ED0(uint64_t a1, __int128 *a2, __int128 *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      __int128 v7 = *v6;
      *(_DWORD *)(v4 + 16) = *((_DWORD *)v6 + 4);
      *(_OWORD *)uint64_t v4 = v7;
      *(void *)(v4 + 24) = 0LL;
      *(void *)(v4 + sub_100012358(v1 - 32) = 0LL;
      *(void *)(v4 + 40) = 0LL;
      sub_10001E054( (void *)(v4 + 24),  *((const void **)v6 + 3),  *((void *)v6 + 4),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)v6 + 4) - *((void *)v6 + 3)) >> 3));
      *(_DWORD *)(v4 + 48) = *((_DWORD *)v6 + 12);
      uint64_t v4 = v12 + 56;
      v12 += 56LL;
      uint64_t v6 = (__int128 *)((char *)v6 + 56);
    }

    while (v6 != a3);
  }

  char v10 = 1;
  sub_100020FA4((uint64_t)v9);
  return v4;
}

void sub_100020F90( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100020FA4(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_100020FD8(a1);
  }
  return a1;
}

void sub_100020FD8(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    unint64_t v3 = *(void **)(v1 - 32);
    if (v3)
    {
      *(void *)(v1 - 24) = v3;
      operator delete(v3);
    }

    v1 -= 56LL;
  }

void sub_10002101C(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

void sub_100021028(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, os_log_s *a4@<X8>)
{
}

void sub_100021038(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

  ;
}

void sub_10002105C( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

uint64_t sub_100021084(uint64_t result, float *a2, void *a3, float a4)
{
  *a2 = a4;
  *a3 = result;
  return result;
}

_BYTE *sub_100021090(_BYTE *result, _BYTE *a2)
{
  char *result = 0;
  *a2 = 0;
  return result;
}

  ;
}

void *sub_1000210AC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2538[a1]);
}

void *sub_1000210C0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2590[a1]);
}

void *sub_1000210D4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A25D8[a1]);
}

void *sub_1000210E8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A25F8[a1]);
}

void sub_100021178(_Unwind_Exception *a1)
{
}

void sub_100021450(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000214D4(uint64_t a1)
{
  uint64_t v4 = @"authStatus";
  uint64_t v1 = *(int *)(a1 + 32);
  else {
    uint64_t v2 = off_1007A2618[v1];
  }
  uint64_t v5 = v2;
  return (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL));
}

CFStringRef sub_10002156C(unsigned int a1)
{
  if (a1 > 4) {
    return @"Authorized";
  }
  else {
    return off_1007A2618[a1];
  }
}

void sub_100021680(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_1000216EC(void *a1, int *a2)
{
  __n128 result = sub_100021720(a1, a2);
  if (result)
  {
    sub_1000217D4(a1, result);
    return (uint64_t *)1;
  }

  return result;
}

uint64_t *sub_100021720(void *a1, int *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0LL;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (*(void *)&v2 <= v3) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }

  else
  {
    unint64_t v5 = (*(void *)&v2 - 1LL) & v3;
  }

  uint64_t v6 = *(uint64_t ***)(*a1 + 8 * v5);
  if (!v6) {
    return 0LL;
  }
  for (__n128 result = *v6; result; __n128 result = (uint64_t *)*result)
  {
    unint64_t v8 = result[1];
    if (v8 == v3)
    {
      if (*((_DWORD *)result + 4) == (_DWORD)v3) {
        return result;
      }
    }

    else
    {
      if (v4.u32[0] > 1uLL)
      {
        if (v8 >= *(void *)&v2) {
          v8 %= *(void *)&v2;
        }
      }

      else
      {
        v8 &= *(void *)&v2 - 1LL;
      }

      if (v8 != v5) {
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t sub_1000217D4(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  sub_100021814(a1, a2, (uint64_t)&__p);
  unint64_t v3 = __p;
  __p = 0LL;
  if (v3) {
    operator delete(v3);
  }
  return v2;
}

void *sub_100021814@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }

  else
  {
    v4 &= *(void *)&v3 - 1LL;
  }

  uint64_t v6 = *(void **)(*result + 8 * v4);
  do
  {
    __int128 v7 = v6;
    uint64_t v6 = (void *)*v6;
  }

  while (v6 != a2);
  if (v7 == result + 2) {
    goto LABEL_18;
  }
  unint64_t v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(void *)&v3) {
      v8 %= *(void *)&v3;
    }
  }

  else
  {
    v8 &= *(void *)&v3 - 1LL;
  }

  if (v8 != v4)
  {
LABEL_18:
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v9 = *(void *)(*a2 + 8LL);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }

    else
    {
      v9 &= *(void *)&v3 - 1LL;
    }

    if (v9 != v4) {
LABEL_19:
    }
      *(void *)(*result + 8 * v4) = 0LL;
  }

  uint64_t v10 = *a2;
  if (*a2)
  {
    unint64_t v11 = *(void *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(void *)&v3) {
        v11 %= *(void *)&v3;
      }
    }

    else
    {
      v11 &= *(void *)&v3 - 1LL;
    }

    if (v11 != v4)
    {
      *(void *)(*result + 8 * v11) = v7;
      uint64_t v10 = *a2;
    }
  }

  *__int128 v7 = v10;
  *a2 = 0LL;
  --result[3];
  *(void *)a3 = a2;
  *(void *)(a3 + 8) = result + 2;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void *sub_100021948(uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }

    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      unint64_t v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == (_DWORD)v7) {
              return v11;
            }
          }

          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }

            else
            {
              v12 &= v8 - 1;
            }

            if (v12 != v4) {
              break;
            }
          }

          unint64_t v11 = (void *)*v11;
        }

        while (v11);
      }
    }
  }

  unint64_t v11 = operator new(0x30uLL);
  void *v11 = 0LL;
  v11[1] = v7;
  *((_DWORD *)v11 + 4) = **a4;
  void v11[3] = 0LL;
  v11[4] = 0LL;
  v11[5] = 0LL;
  *((_DWORD *)v11 + 6) = 2;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1LL;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_100021B74(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }

  uint64_t v19 = *(void *)a1;
  uint64_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    void *v11 = *v20;
LABEL_38:
    void *v20 = v11;
    goto LABEL_39;
  }

  void *v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8LL);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }

    else
    {
      v21 &= v8 - 1;
    }

    uint64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }

LABEL_39:
  ++*(void *)(a1 + 24);
  return v11;
}

          return;
        }

        unint64_t v11 = 5LL;
      }

      (*(void (**)(void))(*v10 + 8 * v11))();
      goto LABEL_21;
    }

    sub_10001D378((uint64_t)buf, *(void *)(a1 + 176));
    size_t v18 = 0LL;
    uint64_t v19 = 0LL;
    uint64_t v20 = 0LL;
    unint64_t v21 = &v18;
    uint64_t v22 = 0;
    size_t v18 = (char *)operator new(0xA8uLL);
    uint64_t v19 = (uint64_t)v18;
    uint64_t v20 = v18 + 168;
    uint64_t v19 = sub_10001F2D4((uint64_t)&v20, (uint64_t)buf, (uint64_t)&v34, (uint64_t)v18);
    sub_10001D09C((uint64_t)v4);
    unint64_t v21 = &v18;
    sub_10001F250((void ***)&v21);

    unint64_t v8 = v32;
    if (v32 == v31)
    {
      uint8x8_t v9 = 4LL;
      unint64_t v8 = v31;
    }

    else
    {
      if (!v32) {
        goto LABEL_29;
      }
      uint8x8_t v9 = 5LL;
    }

    (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_29:
    float v14 = v30;
    if (v30 == v29)
    {
      BOOL v15 = 4LL;
      float v14 = v29;
    }

    else
    {
      if (!v30) {
        goto LABEL_34;
      }
      BOOL v15 = 5LL;
    }

    (*(void (**)(void))(*v14 + 8 * v15))();
LABEL_34:
    unint64_t v16 = v28;
    if (v28 == v27)
    {
      unint64_t v17 = 4LL;
      unint64_t v16 = v27;
    }

    else
    {
      if (!v28) {
        goto LABEL_39;
      }
      unint64_t v17 = 5LL;
    }

    (*(void (**)(void))(*v16 + 8 * v17))();
    goto LABEL_39;
  }

  unint64_t v7 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#wifi,Ranging session not stopped since ranging session never started or no active peer in ranging session",  buf,  2u);
  }

  ++*(void *)(a1 + 24);
  return v11;
}

  ++*(void *)(a1 + 24);
  return i;
}

  uint64_t v25 = *((void *)this + 11);
  *(_BYTE *)a2 = 81;
  *(void *)(a2 + 1) = v25;
  a2 += 9LL;
  uint8x8_t v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x400) != 0) {
    goto LABEL_40;
  }
LABEL_12:
  if ((v5 & 0x800) != 0)
  {
LABEL_13:
    uint64_t v6 = *((void *)this + 13);
    *(_BYTE *)a2 = 97;
    *(void *)(a2 + 1) = v6;
    a2 += 9LL;
  }

  unint64_t v17 = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 104) |= 0x4000u;
  *(_DWORD *)(a1 + 72) = v17;
  uint8x8_t v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x8000) != 0)
  {
LABEL_24:
    unint64_t v8 = *(_DWORD *)(a2 + 76);
    *(_DWORD *)(a1 + 104) |= 0x8000u;
    *(_DWORD *)(a1 + 76) = v8;
    uint8x8_t v5 = *(_DWORD *)(a2 + 104);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(9LL, *(void *)(v5 + 64), a2);
  uint64_t v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_41;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD,  *(_DWORD *)(v5 + 68),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x4000) == 0)
  {
LABEL_15:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_41;
  }

  if ((v3 & 0x40) != 0) {
    unint64_t v4 = (v4 + 2);
  }
  else {
    unint64_t v4 = v4;
  }
  if ((v3 & 0x80) != 0)
  {
    unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
    if (v17 >= 0x80)
    {
      size_t v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
      int8x8_t v3 = a1[26];
    }

    else
    {
      size_t v18 = 1;
    }

    unint64_t v4 = (v4 + v18 + 1);
  }

  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
      if (v16 >= 0x80)
      {
        int8x8_t v3 = *(_DWORD *)(a1 + 88);
      }

      else
      {
        unint64_t v17 = 2;
      }

      v5 += v17;
    }

    if ((v3 & 0x200) != 0)
    {
      size_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
      if (v18 >= 0x80) {
      else
      }
        uint64_t v19 = 2;
      v5 += v19;
    }
  }

  uint64_t v20 = *(_DWORD *)(a1 + 24);
  unint64_t v21 = (v20 + v5);
  if (v20 >= 1)
  {
    uint64_t v22 = 0LL;
    do
    {
      uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100090A58( *(void *)(*(void *)(a1 + 16) + 8 * v22),  a2);
      __int128 v24 = (int)v23;
      else {
        uint64_t v25 = 1;
      }
      unint64_t v21 = (v24 + v21 + v25);
      ++v22;
    }

    while (v22 < *(int *)(a1 + 24));
  }

  __int128 v26 = *(void **)(a1 + 8);
  if (v26 && *v26 != v26[1]) {
    unint64_t v21 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v21;
  *(_DWORD *)(a1 + 84) = v21;
  return v21;
}

  float v14 = *(void *)(v5 + 72);
  if (!v14) {
    float v14 = *(void *)(qword_100800498 + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  v14,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_45;
  }

  size_t v18 = *(void *)(v5 + 96);
  if (!v18) {
    size_t v18 = *(void *)(qword_100800558 + 96);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  v18,  a2,  a4);
  unint64_t v7 = *(_DWORD *)(v5 + 120);
  if ((v7 & 0x200) == 0)
  {
LABEL_14:
    if ((v7 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }

  uint64_t v23 = *(void *)(a1 + 72);
  if (!v23) {
    uint64_t v23 = *(void *)(qword_100800558 + 72);
  }
  __int128 v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000DF520(v23, a2);
  uint64_t v25 = (int)v24;
  else {
    __int128 v26 = 1;
  }
  v4 += v25 + v26 + 1;
  int8x8_t v3 = *(_DWORD *)(a1 + 120);
  if ((v3 & 0x40) == 0)
  {
LABEL_25:
    if ((v3 & 0x80) == 0) {
      goto LABEL_60;
    }
    goto LABEL_51;
  }

  if ((v3 & 0x100) != 0) {
    uint64_t v19 = v5 + 9;
  }
  else {
    uint64_t v19 = v5;
  }
  uint64_t v20 = *(void **)(a1 + 8);
  if (v20 && *v20 != v20[1]) {
    uint64_t v19 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v19;
  *(_DWORD *)(a1 + 84) = v19;
  return v19;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF,  *(_DWORD *)(v5 + 120),  (int)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }

  size_t v18 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 124) |= 0x800u;
  *(void *)(a1 + 80) = v18;
  uint8x8_t v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF,  (int)a2,  *(float *)(v5 + 100),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_41;
  }

  unint64_t v21 = *(_DWORD *)(a2 + 128);
  if (!sub_10005DC68(v21)) {
    sub_10038C724();
  }
  *(_DWORD *)(a1 + 140) |= 0x4000u;
  *(_DWORD *)(a1 + 128) = v21;
  if ((*(_DWORD *)(a2 + 140) & 0x8000) != 0)
  {
LABEL_41:
    uint64_t v22 = *(_DWORD *)(a2 + 132);
    if (v22 >= 2) {
      sub_10038C6FC();
    }
    *(_DWORD *)(a1 + 140) |= 0x8000u;
    *(_DWORD *)(a1 + 1sub_100012358(v1 - 32) = v22;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  ++*(void *)(a1 + 24);
  return v11;
}

      unint64_t v11 = 0;
      unint64_t v21 = 0;
      float v13 = 1;
      goto LABEL_45;
    case 6:
      uint64_t v22 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__p = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "[RoseScheduler] JobStop", __p, 2u);
      }

      if (!sub_10014A284(*(void *)(a1 + 128), *a2, 0))
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_10038F03C();
        }
        unint64_t v39 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
        std::runtime_error::runtime_error(v39, "JobStop: Failed to update service request state to Inactive");
      }

  ++*(void *)(a1 + 24);
  return v12;
}

  ++*(void *)(a1 + 24);
  return i;
}

  ++*(void *)(a1 + 24);
  return i;
}

  ++*(void *)(a1 + 24);
  return v11;
}

  ++*(void *)(a1 + 24);
  return v11;
}

      *(_BYTE *)(a1 + 1688) = 1;
      if (!*(_BYTE *)(a1 + 1689))
      {
LABEL_46:
        if ((v11 & 0x80) != 0) {
          operator delete(__s1);
        }
        goto LABEL_48;
      }

  ++*v8;
  return i;
}
}

  ++*(void *)(a1 + 24);
  return i;
}

  ++*(void *)(a1 + 24);
  return i;
}

  unint64_t v61 = v19;
  sub_1002B7ED4(*((_DWORD *)a1 + 1), (unint64_t *)&__p);
  __int128 v28 = (unint64_t)__p;
  uint64_t v27 = v61;
  __int128 v29 = v61 - (_BYTE *)__p;
  uint64_t v30 = a1[8];
  if ((unint64_t)v61 >= v62)
  {
    BOOL v32 = v62 - (void)__p;
    else {
      uint64_t v33 = 2 * v32;
    }
    if (v32 >= 0x3FFFFFFFFFFFFFFFLL) {
      unint64_t v34 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v34 = v33;
    }
    if (v34) {
      unint64_t v35 = operator new(v34);
    }
    else {
      unint64_t v35 = 0LL;
    }
    unint64_t v36 = (char *)v35 + v34;
    *((_BYTE *)v35 + v29) = v30;
    __int128 v31 = (char *)v35 + v29 + 1;
    if (v27 == (_BYTE *)v28)
    {
      unint64_t v35 = (char *)v35 + v29;
    }

    else
    {
      unint64_t v37 = &v27[~v28];
      do
      {
        unint64_t v38 = *--v27;
        (v37--)[(void)v35] = v38;
      }

      while (v27 != (_BYTE *)v28);
      uint64_t v27 = __p;
    }

    __p = v35;
    unint64_t v61 = v31;
    unint64_t v62 = (unint64_t)v36;
    if (v27) {
      operator delete(v27);
    }
  }

  else
  {
    CFArrayRef v61 = v30;
    __int128 v31 = v27 + 1;
  }

  unint64_t v61 = v31;
  unint64_t v39 = (unint64_t)__p;
  __int128 v40 = v31 - (_BYTE *)__p;
  if ((unint64_t)(v31 - (_BYTE *)__p - 0xFFFF) < 0xFFFFFFFFFFFF0000LL)
  {
LABEL_86:
    __int128 v53 = "msg.size() + sizeof(data) <= kMaxMessageSize";
    uint64_t v54 = 225;
    __int128 v55 = "append";
    goto LABEL_87;
  }

  unint64_t v41 = a1[9];
  if ((unint64_t)v31 < v62)
  {
    _WORD *v31 = v41;
    unint64_t v42 = v31 + 1;
    goto LABEL_77;
  }

  int v43 = v62 - (void)__p;
  else {
    __int128 v44 = 2 * v43;
  }
  if (v43 >= 0x3FFFFFFFFFFFFFFFLL) {
    __int128 v45 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    __int128 v45 = v44;
  }
  if (v45) {
    unsigned __int8 v46 = operator new(v45);
  }
  else {
    unsigned __int8 v46 = 0LL;
  }
  char v47 = (char *)v46 + v45;
  *((_BYTE *)v46 + v40) = v41;
  unint64_t v42 = (char *)v46 + v40 + 1;
  if (v31 == (_BYTE *)v39)
  {
    __p = (char *)v46 + v40;
    unint64_t v61 = (char *)v46 + v40 + 1;
    unint64_t v62 = (unint64_t)v47;
LABEL_76:
    operator delete(v31);
    goto LABEL_77;
  }

  __int128 v48 = &v31[~v39];
  do
  {
    __int128 v49 = *--v31;
    (v48--)[(void)v46] = v49;
  }

  while (v31 != (_BYTE *)v39);
  __int128 v31 = __p;
  __p = v46;
  unint64_t v61 = (char *)v46 + v40 + 1;
  unint64_t v62 = (unint64_t)v47;
  if (v31) {
    goto LABEL_76;
  }
LABEL_77:
  unint64_t v61 = v42;
  uint64_t v50 = __p;
  uint64_t v51 = v42 - (_BYTE *)__p;
  if ((unint64_t)(v42 - (_BYTE *)__p) >= 0x10000)
  {
    __int128 v53 = "msg.size() <= kMaxMessageSize";
    uint64_t v54 = 166;
    __int128 v55 = "populateHeader";
LABEL_87:
    __assert_rtn(v55, "AlishaDCKCoder.cpp", v54, v53);
  }

  if (v51 <= 3)
  {
    sub_1000353EC((unint64_t *)&__p, 4 - v51);
    uint64_t v50 = __p;
    LOWORD(v51) = (_WORD)v61 - (_WORD)__p;
  }

  uint64_t v52 = v51 - 4;
  *uint64_t v50 = 2;
  *((_BYTE *)__p + 1) = 4;
  *((_BYTE *)__p + 2) = HIBYTE(v52);
  *((_BYTE *)__p + 3) = v52;
  uint64_t v56 = 0LL;
  id v57 = 0LL;
  BOOL v58 = 0LL;
  sub_1001309C0(&v56, __p, (uint64_t)v61, v61 - (_BYTE *)__p);
  uint64_t v59 = 1;
  *a2 = 0;
  sub_1002BADE0((uint64_t)(a2 + 2), (uint64_t)&v56);
  if (v59 && v56)
  {
    id v57 = v56;
    operator delete(v56);
  }

  if (__p)
  {
    unint64_t v61 = __p;
    operator delete(__p);
  }

  ++*(void *)(a1 + 24);
  return v10;
}

  ++*(void *)(a1 + 24);
  return v10;
}

    sub_100006080();
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A8FEC();
  }
  if (*(_BYTE *)(a2 + 80) && *(_BYTE *)(a2 + 96) && *(_BYTE *)(a2 + 112))
  {
    *(_BYTE *)(a1 + 576) = 0;
    if (!*(_BYTE *)(a1 + 496))
    {
      *(void *)float v14 = 0LL;
      sub_10030DAB8(a1, (double *)v14, *(double *)a2);
      *(void *)(a1 + 488) = *(void *)v14;
      *(_BYTE *)(a1 + 496) = 1;
    }

    *(void *)float v14 = 0LL;
    sub_10030DAB8(a1, (double *)v14, *(double *)a2);
    if (*(_BYTE *)(a1 + 568))
    {
      if (*(_BYTE *)(a2 + 80))
      {
        *(double *)(a1 + 552) = *(double *)(a2 + 72) + *(double *)(a1 + 552);
        if (*(_BYTE *)(a2 + 96))
        {
          *(double *)(a1 + 560) = *(double *)(a2 + 88) + *(double *)(a1 + 560);
          *(void *)(a1 + 544) = *(void *)v14;
          return;
        }
      }
    }

    else if (*(_BYTE *)(a1 + 496) && *(_BYTE *)(a2 + 80) && *(_BYTE *)(a2 + 96))
    {
      unint64_t v11 = *(void *)v14;
      unint64_t v12 = *(void *)(a2 + 72);
      float v13 = *(void *)(a2 + 88);
      *(void *)(a1 + 536) = *(void *)(a1 + 488);
      *(void *)(a1 + 544) = v11;
      *(void *)(a1 + 552) = v12;
      *(void *)(a1 + 560) = v13;
      *(_BYTE *)(a1 + 568) = 1;
      return;
    }

    goto LABEL_39;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A8FC0();
  }
}

    if (v55 < 0) {
      operator delete(v54[0]);
    }

    if ((v22 & 1) == 0)
    {
      unint64_t v35 = 0LL;
      goto LABEL_83;
    }

    unint64_t v8 = 0;
  }

  while ((v9 & 1) != 0);
  if (!v6) {
    __assert_rtn( "-[RangeBiasEstimatorSingleAntennaModel loadResourcesWithResourceIndex:]",  "NRBYRangeBiasEstimator.mm",  603,  "rangeBiasEstimatorModelDataTransformer != nil");
  }
  unint64_t v36 = objc_alloc(&OBJC_CLASS___NeuralNetworkModelWithDataTransformer);
  __int128 v45 = v64;
  unsigned __int8 v46 = v42;
  char v47 = v43;
  unint64_t v35 = -[NeuralNetworkModelWithDataTransformer initWithNeuralNetworkModel:andDataTransformer:]( v36,  "initWithNeuralNetworkModel:andDataTransformer:",  &v45,  v6);
LABEL_83:

  v63.__r_.__value_.__r.__words[0] = (std::string::size_type)&v65;
  sub_1002F94B0((void ***)&v63);
  uint64_t v65 = (void **)&v68;
  sub_1002F94B0(&v65);
  return v35;
}

  ++*(void *)(a1 + 24);
  return v11;
}

  ++*(void *)(a1 + 24);
  return v11;
}

  ++*(void *)(a1 + 24);
  return v11;
}

  ++*(void *)(a1 + 24);
  return i;
}

void sub_100021B60(_Unwind_Exception *a1)
{
}

void sub_100021B74(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2LL;
  }

  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }

  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }

    else
    {
      uint64_t v7 = 1LL << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }

    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4) {
LABEL_16:
    }
      sub_100021C50(a1, prime);
  }

void sub_100021C50(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_10001D350();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0LL;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0LL;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }

      else
      {
        v8 &= a2 - 1;
      }

      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      unint64_t v11 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2) {
              v12 %= a2;
            }
          }

          else
          {
            v12 &= a2 - 1;
          }

          if (v12 != v8)
          {
            if (!*(void *)(*(void *)a1 + 8 * v12))
            {
              *(void *)(*(void *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }

            *uint64_t v7 = *v11;
            void *v11 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = v11;
            unint64_t v11 = v7;
          }

          unint64_t v12 = v8;
LABEL_24:
          uint64_t v7 = v11;
          unint64_t v11 = (void *)*v11;
          unint64_t v8 = v12;
        }

        while (v11);
      }
    }
  }

  else
  {
    uint64_t v10 = *(void **)a1;
    *(void *)a1 = 0LL;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0LL;
  }

uint64_t sub_100021DA8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      int8x8_t v3 = (void *)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }

    while (v3);
  }

  int8x8_t v4 = *(void **)a1;
  *(void *)a1 = 0LL;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void *sub_100021DF0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2668[a1]);
}

void *sub_100021E04@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A26C0[a1]);
}

void *sub_100021E18@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2708[a1]);
}

void *sub_100021E2C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2728[a1]);
}

void sub_100021F28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100021F88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000221DC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *a21)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v24);
  objc_destroyWeak((id *)(v25 - 88));

  _Unwind_Resume(a1);
}

void sub_100022248(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "connection interrupted for pid: %d",  (uint8_t *)v6,  8u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unint64_t v5 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained handleXPCDisconnection:*(void *)(a1 + 32)];
  }
}

void sub_10002230C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100022324(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "connection invalidated for pid: %d",  (uint8_t *)v6,  8u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unint64_t v5 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained handleXPCDisconnection:*(void *)(a1 + 32)];
  }
}

void sub_1000223E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100022598(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100022664(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000226B0()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_10002272C(_Unwind_Exception *a1)
{
}

void sub_100022744()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10040C7A0;
      v1[1] = *(_OWORD *)algn_10040C7B0;
      v1[2] = xmmword_10040C7C0;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_1000227E4(_Unwind_Exception *a1)
{
}

void sub_1000227FC()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  uint64_t v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  int v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F4E68 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F4E58 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4E58, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  unint64_t v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F4E80 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F4E70 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4E70, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  uint8x8_t v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F4E98 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F4E88 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4E88, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  float v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  BOOL v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F4EB0 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F4EA0 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4EA0, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  unint64_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F4EC8 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F4EB8 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4EB8, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  unint64_t v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F4EE0 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F4ED0 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4ED0, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  uint64_t v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F4EF8 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F4EE8 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4EE8, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  __int128 v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  __int128 v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F4F10 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F4F00 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4F00, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  uint64_t v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F4F28 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F4F18 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4F18, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100022DF0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100022E64@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2748[a1]);
}

void *sub_100022E78@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A27A0[a1]);
}

void *sub_100022E8C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A27E8[a1]);
}

void *sub_100022EA0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2808[a1]);
}

void sub_100023098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000231FC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_100023320( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_1000233E8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    std::__shared_weak_count::__release_weak(a12);
  }
  sub_100012390((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100023438()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_1000234B4(_Unwind_Exception *a1)
{
}

void sub_1000234CC()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10040C7D8;
      v1[1] = unk_10040C7E8;
      v1[2] = xmmword_10040C7F8;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_10002356C(_Unwind_Exception *a1)
{
}

void sub_100023584()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  uint64_t v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  int v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F4F40 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F4F30 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4F30, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  unint64_t v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F4F58 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F4F48 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4F48, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  uint8x8_t v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F4F70 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F4F60 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4F60, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  float v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  BOOL v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F4F88 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F4F78 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4F78, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  unint64_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F4FA0 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F4F90 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4F90, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  unint64_t v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F4FB8 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F4FA8 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4FA8, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  uint64_t v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F4FD0 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F4FC0 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4FC0, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  __int128 v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  __int128 v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F4FE8 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F4FD8 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4FD8, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  uint64_t v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F5000 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F4FF0 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F4FF0, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100023B78( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_100023BEC(unint64_t a1)
{
  double v2 = *(double *)&qword_1007F5008;
  if (*(double *)&qword_1007F5008 == 0.0)
  {
    if (mach_timebase_info(&info)) {
      sub_10038A98C();
    }
    if (info.denom)
    {
      uint32_t numer = info.numer;
      uint32_t denom = info.denom;
      do
      {
        uint32_t v5 = denom;
        uint32_t denom = numer % denom;
        uint32_t numer = v5;
      }

      while (denom);
    }

    else
    {
      uint32_t v5 = info.numer;
    }

    uint32_t v6 = info.numer / v5;
    unsigned int v7 = 1000000000;
    do
    {
      uint32_t v8 = v7;
      unsigned int v7 = v6 % v7;
      uint32_t v6 = v8;
    }

    while (v7);
    double v2 = (double)(info.numer / v5 / v8) / (double)(0x3B9ACA00 / v8 * (unint64_t)(info.denom / v5));
    *(double *)&qword_1007F5008 = v2;
  }

  return v2 * (double)a1;
}

double sub_100023CB0()
{
  uint64_t v0 = mach_absolute_time();
  return sub_100023BEC(v0);
}

double sub_100023CC4()
{
  uint64_t v0 = mach_continuous_time();
  return sub_100023BEC(v0);
}

BOOL sub_100023CD8(double *a1, double *a2, double *a3)
{
  int times = mach_get_times(&v10, &v9, v8);
  if (!times)
  {
    if (a1) {
      *a1 = (double)v8[1] / 1000000000.0 + (double)v8[0] - kCFAbsoluteTimeIntervalSince1970;
    }
    if (a2) {
      *a2 = sub_100023BEC(v10);
    }
    if (a3) {
      *a3 = sub_100023BEC(v9);
    }
  }

  return times == 0;
}

id sub_100023D80(void *a1, int a2)
{
  id v3 = a1;
  memset(&v16, 0, sizeof(v16));
  sub_100024264(&v14, (size_t)[v3 length]);
  objc_msgSend(v3, "getBytes:length:", v14, objc_msgSend(v3, "length"));
  __int128 v4 = (unsigned __int8 *)v14;
  uint32_t v5 = v15;
  if (v14 == v15)
  {
    unint64_t v9 = &v16;
  }

  else
  {
    do
    {
      id v6 = objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString, "stringWithFormat:", @"%02X", *v4));
      sub_1000065CC(__p, (char *)[v6 UTF8String]);

      if ((v13 & 0x80u) == 0) {
        unsigned int v7 = __p;
      }
      else {
        unsigned int v7 = (void **)__p[0];
      }
      if ((v13 & 0x80u) == 0) {
        std::string::size_type v8 = v13;
      }
      else {
        std::string::size_type v8 = (std::string::size_type)__p[1];
      }
      if (a2) {
        std::string::insert(&v16, 0LL, (const std::string::value_type *)v7, v8);
      }
      else {
        std::string::append(&v16, (const std::string::value_type *)v7, v8);
      }
      ++v4;
    }

    while (v4 != v5);
    if ((v16.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      unint64_t v9 = &v16;
    }
    else {
      unint64_t v9 = (std::string *)v16.__r_.__value_.__r.__words[0];
    }
  }

  unint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v9));
  if (v14)
  {
    BOOL v15 = (unsigned __int8 *)v14;
    operator delete(v14);
  }

  return v10;
}

void sub_100023EF8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

char *sub_100023F58(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint32_t v5 = objc_autoreleasePoolPush();
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v4,  200LL,  0LL,  0LL));
  if ((unint64_t)[v6 length] > 0x8000)
  {
    unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"WARNING: statedump too big (%d > %d)",  [v6 length],  0x8000));
    id v14 = v3;
    BOOL v15 = v7;
    std::string::size_type v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v15,  &v14,  1LL));
    uint64_t v9 = objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v8,  200LL,  0LL,  0LL));

    id v6 = (void *)v9;
  }

  unint64_t v10 = (char *)calloc(1uLL, (size_t)[v6 length] + 200);
  *(_DWORD *)unint64_t v10 = 1;
  *((_DWORD *)v10 + 1) = [v6 length];
  id v11 = objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString, "stringWithFormat:", @"[nearbyd] %@", v3));
  strlcpy(v10 + 136, (const char *)[v11 UTF8String], 0x40uLL);

  id v12 = v6;
  memcpy(v10 + 200, [v12 bytes], (size_t)objc_msgSend(v12, "length"));

  objc_autoreleasePoolPop(v5);
  return v10;
}

void sub_100024138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_100024190(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v8 = v3;
  id v9 = v4;
  uint32_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v9,  &v8,  1LL));
  id v6 = sub_100023F58(v3, v5);

  return v6;
}

void sub_10002423C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_100024264(void *a1, size_t a2)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  if (a2)
  {
    sub_1000242D4(a1, a2);
    id v4 = (char *)a1[1];
    uint32_t v5 = &v4[a2];
    bzero(v4, a2);
    a1[1] = v5;
  }

  return a1;
}

void sub_1000242B8(_Unwind_Exception *exception_object)
{
  id v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

char *sub_1000242D4(void *a1, size_t __sz)
{
  if ((__sz & 0x8000000000000000LL) != 0) {
    sub_10001E11C();
  }
  __n128 result = (char *)operator new(__sz);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[__sz];
  return result;
}

uint64_t sub_100024314(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(_BYTE *)(a1 + sub_100012358(v1 - 32) = 1;
  *(void *)(a1 + 40) = 0LL;
  uint64_t v4 = objc_claimAutoreleasedReturnValue(+[NSData dataWithBytes:length:](&OBJC_CLASS___NSData, "dataWithBytes:length:", &unk_10040C808, 64LL));
  uint32_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4;

  return a1;
}

void sub_100024374(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100024394(uint64_t a1, void *a2, int a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  *(void *)a1 = 0LL;
  *(_DWORD *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + sub_100012358(v1 - 32) = 0;
  *(void *)(a1 + 40) = 0x402E000000000000LL;
  return a1;
}

uint64_t sub_1000243E8( uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, void *a8)
{
  id v15 = a6;
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000063A8((_BYTE *)a1, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v16 = *a2;
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(_OWORD *)a1 = v16;
  }

  sub_10001E914(a1 + 24, a3);
  sub_10001E914(a1 + 56, a4);
  sub_10001E914(a1 + 88, a5);
  *(_BYTE *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0LL;
  id v17 = v15;
  uint64_t v18 = a7[1];
  *(void *)(a1 + 192) = *a7;
  *(void *)(a1 + 184) = v17;
  *(void *)(a1 + 200) = v18;
  if (v18)
  {
    uint64_t v19 = (unint64_t *)(v18 + 8);
    do
      unint64_t v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }

  uint64_t v21 = a8[1];
  *(void *)(a1 + 208) = *a8;
  *(void *)(a1 + 216) = v21;
  if (v21)
  {
    __int128 v22 = (unint64_t *)(v21 + 8);
    do
      unint64_t v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }

  *(_OWORD *)(a1 + 2sub_100012358(v1 - 32) = 0u;
  *(void *)(a1 + 312) = 0LL;
  *(void *)(a1 + 344) = 0LL;
  *(void *)(a1 + 376) = 0LL;
  *(_DWORD *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0LL;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(void *)(a1 + 280) = 0LL;
  __int128 v24 = sub_1000141DC();
  *(void *)(a1 + 224) = sub_1000148C0((uint64_t)v24);
  uint64_t v25 = sub_1000141DC();
  __int128 v26 = (std::__shared_weak_count *)a8[1];
  uint64_t v37 = *a8;
  std::string v38 = v26;
  if (v26)
  {
    p_shared_owners = (unint64_t *)&v26->__shared_owners_;
    do
      unint64_t v28 = __ldxr(p_shared_owners);
    while (__stxr(v28 + 1, p_shared_owners));
  }

  sub_100018E58((uint64_t)v25, &v37);
  __int128 v29 = v38;
  if (v38)
  {
    __int128 v30 = (unint64_t *)&v38->__shared_owners_;
    do
      unint64_t v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }

  __int128 v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  unsigned int v33 = [v32 integerForKey:@"WiFiServiceNumMeas"];
  int v34 = v33;
  if (v33 <= 8)
  {
    if (((1 << v33) & 0x116) != 0)
    {
      dword_1007F2498 = v33;
      goto LABEL_21;
    }

    if (!v33) {
      goto LABEL_21;
    }
  }

  __int128 v36 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_10038A9B4(v34, v36);
  }
LABEL_21:

  return a1;
}

void sub_100024630( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
}

uint64_t sub_100024768(uint64_t a1)
{
  if (*(void *)(a1 + 48)) {
    sub_100024930((const std::string *)a1);
  }

  double v2 = *(void **)(a1 + 376);
  if (v2 == (void *)(a1 + 352))
  {
    uint64_t v3 = 4LL;
    double v2 = (void *)(a1 + 352);
  }

  else
  {
    if (!v2) {
      goto LABEL_8;
    }
    uint64_t v3 = 5LL;
  }

  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_8:
  uint64_t v4 = *(void **)(a1 + 344);
  if (v4 == (void *)(a1 + 320))
  {
    uint64_t v5 = 4LL;
    uint64_t v4 = (void *)(a1 + 320);
  }

  else
  {
    if (!v4) {
      goto LABEL_13;
    }
    uint64_t v5 = 5LL;
  }

  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_13:
  id v6 = *(void **)(a1 + 312);
  if (v6 == (void *)(a1 + 288))
  {
    uint64_t v7 = 4LL;
    id v6 = (void *)(a1 + 288);
  }

  else
  {
    if (!v6) {
      goto LABEL_18;
    }
    uint64_t v7 = 5LL;
  }

  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_18:

  sub_100012390(a1 + 208);
  sub_100012390(a1 + 192);

  uint64_t v8 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = 0LL;
  if (v8) {
    sub_1000258B0(a1 + 176, v8);
  }
  sub_100025878(a1 + 120);
  id v9 = *(void **)(a1 + 112);
  if (v9 == (void *)(a1 + 88))
  {
    uint64_t v10 = 4LL;
    id v9 = (void *)(a1 + 88);
  }

  else
  {
    if (!v9) {
      goto LABEL_25;
    }
    uint64_t v10 = 5LL;
  }

  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_25:
  id v11 = *(void **)(a1 + 80);
  if (v11 == (void *)(a1 + 56))
  {
    uint64_t v12 = 4LL;
    id v11 = (void *)(a1 + 56);
  }

  else
  {
    if (!v11) {
      goto LABEL_30;
    }
    uint64_t v12 = 5LL;
  }

  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_30:
  unsigned __int8 v13 = *(void **)(a1 + 48);
  if (v13 == (void *)(a1 + 24))
  {
    uint64_t v14 = 4LL;
    unsigned __int8 v13 = (void *)(a1 + 24);
  }

  else
  {
    if (!v13) {
      goto LABEL_35;
    }
    uint64_t v14 = 5LL;
  }

  (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_35:
  return a1;
}

std::string::size_type *sub_100024930(const std::string *a1)
{
  double v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#wifi,WiFiRanging Invalidate ranging session",  v8,  2u);
  }

  uint64_t data = (uint64_t)a1[8].__r_.__value_.__l.__data_;
  if (data) {
    sub_10023BB8C(data, a1[9].__r_.__value_.__l.__size_, a1);
  }
  sub_100024A28((uint64_t)a1);
  sub_100024A6C((uint64_t)a1);
  uint64_t v4 = (const std::string *)a1[2].__r_.__value_.__l.__data_;
  a1[2].__r_.__value_.__r.__words[0] = 0LL;
  if (v4 == &a1[1])
  {
    uint64_t v5 = 4LL;
    uint64_t v4 = a1 + 1;
  }

  else
  {
    if (!v4) {
      goto LABEL_10;
    }
    uint64_t v5 = 5LL;
  }

  (*(void (**)(void))(v4->__r_.__value_.__r.__words[0] + 8 * v5))();
LABEL_10:
  __n128 result = (std::string::size_type *)a1[3].__r_.__value_.__l.__size_;
  a1[3].__r_.__value_.__l.__size_ = 0LL;
  if (result == &a1[2].__r_.__value_.__r.__words[1])
  {
    uint64_t v7 = 4LL;
    __n128 result = &a1[2].__r_.__value_.__l.__size_;
  }

  else
  {
    if (!result) {
      return result;
    }
    uint64_t v7 = 5LL;
  }

  return (std::string::size_type *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

void sub_100024A28(uint64_t a1)
{
  double v2 = *(dispatch_source_s **)(a1 + 232);
  if (v2)
  {
    dispatch_source_cancel(v2);
    uint64_t v3 = *(void **)(a1 + 232);
    *(void *)(a1 + 2sub_100012358(v1 - 32) = 0LL;
  }

void sub_100024A6C(uint64_t a1)
{
  double v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#wifi,WiFiRanging Stop ranging session",  buf,  2u);
  }

  if (*(void *)(a1 + 176) && *(_BYTE *)(a1 + 168))
  {
    BOOL v3 = *(_BYTE *)(a1 + 152) == 0;
    uint64_t v4 = sub_1000141DC();
    if (!v3)
    {
      sub_10001D378((uint64_t)buf, *(void *)(a1 + 176));
      uint64_t v18 = 0LL;
      uint64_t v19 = 0LL;
      unint64_t v20 = 0LL;
      uint64_t v21 = &v18;
      char v22 = 0;
      uint64_t v18 = (char *)operator new(0xA8uLL);
      uint64_t v19 = (uint64_t)v18;
      unint64_t v20 = v18 + 168;
      uint64_t v19 = sub_10001F2D4((uint64_t)&v20, (uint64_t)buf, (uint64_t)&v34, (uint64_t)v18);
      sub_100015B9C((uint64_t)v4, (uint64_t)&v18);
      uint64_t v21 = &v18;
      sub_10001F250((void ***)&v21);

      uint64_t v5 = v32;
      if (v32 == v31)
      {
        uint64_t v6 = 4LL;
        uint64_t v5 = v31;
      }

      else
      {
        if (!v32) {
          goto LABEL_16;
        }
        uint64_t v6 = 5LL;
      }

      (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_16:
      uint64_t v10 = v30;
      if (v30 == v29)
      {
        uint64_t v11 = 4LL;
        uint64_t v10 = v29;
      }

      else
      {
        if (!v30)
        {
LABEL_21:
          uint64_t v12 = v28;
          if (v28 == v27)
          {
            uint64_t v13 = 4LL;
            uint64_t v12 = v27;
            goto LABEL_25;
          }

          if (v28)
          {
            uint64_t v13 = 5LL;
LABEL_25:
            (*(void (**)(void))(*v12 + 8 * v13))();
          }

void sub_100024DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v6 = va_arg(va1, void **);
  uint64_t v8 = va_arg(va1, void);
  sub_10001F250((void ***)va);
  sub_100015108((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_100024E24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    LODWORD(buf[0]) = 67109120;
    DWORD1(buf[0]) = dword_1007F2498;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#wifi,WiFiRanging Start ranging session; using %d measurements",
      (uint8_t *)buf,
      8u);
  }

  sub_100025498(a1 + 120, a2);
  uint64_t v5 = objc_alloc(&OBJC_CLASS___NSNumber);
  uint64_t v6 = -[NSNumber initWithInt:](v5, "initWithInt:", dword_1007F2498);
  uint64_t v44 = *(void *)a2;
  __int128 v45 = v6;
  int v43 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", &v44, 6LL);
  id v7 = *(id *)(a2 + 16);
  id location = 0LL;
  unint64_t v42 = v7;
  if (*(_BYTE *)(a2 + 32))
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSData dataWithBytes:length:](&OBJC_CLASS___NSData, "dataWithBytes:length:", &unk_10040C808, 64LL));
    id v9 = location;
    id location = v8;
  }

  else
  {
    objc_storeStrong(&location, *(id *)(a2 + 24));
    uint64_t v10 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf[0]) = 138412290;
      *(void *)((char *)buf + 4) = v42;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#wifi,peer address: %@",  (uint8_t *)buf,  0xCu);
    }
  }

  uint64_t v11 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    LODWORD(buf[0]) = 138412290;
    *(void *)((char *)buf + 4) = location;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#wifi,secure key: %@", (uint8_t *)buf, 0xCu);
  }

  LODWORD(v38) = *(_DWORD *)(a2 + 8);
  sub_100025520( &v42,  (void **)&v43,  &location,  (void **)&v45,  a1 + 24,  a1 + 56,  a1 + 88,  (int *)&v38,  buf,  (void **)(a1 + 184),  (uint64_t *)(a1 + 224));
  uint64_t v13 = (uint64_t *)(a1 + 176);
  uint64_t v12 = *(void *)(a1 + 176);
  uint64_t v14 = *(void *)&buf[0];
  *(void *)&buf[0] = 0LL;
  *(void *)(a1 + 176) = v14;
  if (v12)
  {
    sub_1000258B0(a1 + 176, v12);
    uint64_t v15 = *(void *)&buf[0];
    *(void *)&buf[0] = 0LL;
    if (v15) {
      sub_1000258B0((uint64_t)buf, v15);
    }
  }

  if (*(_BYTE *)(a2 + 32))
  {
    __int128 v16 = sub_1000141DC();
    sub_10001D378((uint64_t)buf, *v13);
    std::string v38 = 0LL;
    unint64_t v39 = 0LL;
    __int128 v40 = 0LL;
    unsigned __int8 v46 = &v38;
    char v47 = 0;
    std::string v38 = (id *)operator new(0xA8uLL);
    unint64_t v39 = v38;
    __int128 v40 = v38 + 21;
    unint64_t v39 = (id *)sub_10001F2D4((uint64_t)&v40, (uint64_t)buf, (uint64_t)&v58, (uint64_t)v38);
    sub_100014C00((uint64_t)v16, (uint64_t *)&v38);
    unsigned __int8 v46 = &v38;
    sub_10001F250((void ***)&v46);

    uint64_t v17 = v56;
    if (v56 == v55)
    {
      uint64_t v18 = 4LL;
      uint64_t v17 = v55;
    }

    else
    {
      if (!v56) {
        goto LABEL_22;
      }
      uint64_t v18 = 5LL;
    }

    (*(void (**)(void))(*v17 + 8 * v18))();
LABEL_22:
    uint64_t v27 = v54;
    if (v54 == v53)
    {
      uint64_t v28 = 4LL;
      uint64_t v27 = v53;
    }

    else
    {
      if (!v54) {
        goto LABEL_27;
      }
      uint64_t v28 = 5LL;
    }

    (*(void (**)(void))(*v27 + 8 * v28))();
LABEL_27:
    __int128 v29 = v52;
    if (v52 == v51)
    {
      uint64_t v30 = 4LL;
      __int128 v29 = v51;
    }

    else
    {
      if (!v52)
      {
LABEL_32:

        goto LABEL_48;
      }

      uint64_t v30 = 5LL;
    }

    (*(void (**)(void))(*v29 + 8 * v30))();
    goto LABEL_32;
  }

  dispatch_source_t v19 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  *(dispatch_queue_t *)(a1 + 184));
  unint64_t v20 = *(void **)(a1 + 232);
  *(void *)(a1 + 2sub_100012358(v1 - 32) = v19;

  uint64_t v21 = *(dispatch_source_s **)(a1 + 232);
  dispatch_time_t v22 = dispatch_time(0LL, 1000000000 * llround(*(double *)(a2 + 40)));
  dispatch_source_set_timer(v21, v22, 0xFFFFFFFFFFFFFFFFLL, 0LL);
  unint64_t v23 = *(dispatch_source_s **)(a1 + 232);
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472LL;
  handler[2] = sub_100025778;
  handler[3] = &unk_1007A2398;
  handler[4] = a1;
  dispatch_source_set_event_handler(v23, handler);
  dispatch_resume(*(dispatch_object_t *)(a1 + 232));
  if ((*(_DWORD *)(a2 + 8) - 1) <= 1)
  {
    id v24 = sub_1000141DC();
    sub_10001D378((uint64_t)buf, *v13);
    std::string v38 = 0LL;
    unint64_t v39 = 0LL;
    __int128 v40 = 0LL;
    unsigned __int8 v46 = &v38;
    char v47 = 0;
    std::string v38 = (id *)operator new(0xA8uLL);
    unint64_t v39 = v38;
    __int128 v40 = v38 + 21;
    unint64_t v39 = (id *)sub_10001F2D4((uint64_t)&v40, (uint64_t)buf, (uint64_t)&v58, (uint64_t)v38);
    sub_10001CA54((uint64_t)v24, &v38, *(_DWORD *)(a2 + 8));
    unsigned __int8 v46 = &v38;
    sub_10001F250((void ***)&v46);

    id v25 = v56;
    if (v56 == v55)
    {
      uint64_t v26 = 4LL;
      id v25 = v55;
    }

    else
    {
      if (!v56) {
        goto LABEL_37;
      }
      uint64_t v26 = 5LL;
    }

    (*(void (**)(void))(*v25 + 8 * v26))();
LABEL_37:
    __int128 v32 = v54;
    if (v54 == v53)
    {
      uint64_t v33 = 4LL;
      __int128 v32 = v53;
    }

    else
    {
      if (!v54) {
        goto LABEL_42;
      }
      uint64_t v33 = 5LL;
    }

    (*(void (**)(void))(*v32 + 8 * v33))();
LABEL_42:
    uint64_t v34 = v52;
    if (v52 == v51)
    {
      uint64_t v35 = 4LL;
      uint64_t v34 = v51;
    }

    else
    {
      if (!v52)
      {
LABEL_47:

LABEL_48:
        uint64_t v36 = *(void *)(a1 + 192);
        if (v36) {
          sub_10023B9C8(v36, *(void *)(a1 + 224), (const std::string *)a1);
        }
        goto LABEL_50;
      }

      uint64_t v35 = 5LL;
    }

    (*(void (**)(void))(*v34 + 8 * v35))();
    goto LABEL_47;
  }

  unint64_t v31 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_10038AA28(v31);
  }
LABEL_50:
}

void sub_100025408( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20, void *a21, void *a22, uint64_t a23, void *a24, void **a25, uint64_t a26, char a27)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100025498(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 48);
  int v5 = *(_DWORD *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = v5;
  if (v4)
  {
    objc_storeStrong((id *)(a1 + 16), *(id *)(a2 + 16));
    objc_storeStrong((id *)(a1 + 24), *(id *)(a2 + 24));
    *(_OWORD *)(a1 + sub_100012358(v1 - 32) = *(_OWORD *)(a2 + 32);
  }

  else
  {
    *(void *)(a1 + 16) = *(id *)(a2 + 16);
    *(void *)(a1 + 24) = *(id *)(a2 + 24);
    *(_OWORD *)(a1 + sub_100012358(v1 - 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = 1;
  }

  return a1;
}

void *sub_100025520@<X0>( void **a1@<X0>, void **a2@<X1>, void **a3@<X2>, void **a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int *a8@<X7>, void *a9@<X8>, void **a10, uint64_t *a11)
{
  unint64_t v20 = operator new(0xA8uLL);
  uint64_t v21 = *a1;
  dispatch_time_t v22 = *a2;
  unint64_t v23 = *a3;
  id v24 = *a4;
  sub_10001E914((uint64_t)v35, a5);
  sub_10001E914((uint64_t)v33, a6);
  sub_10001E914((uint64_t)v31, a7);
  sub_10003ABF4((uint64_t)v20, v21, v22, v23, v24, (uint64_t)v35, (uint64_t)v33, (uint64_t)v31, *a8, *a10, *a11);
  *a9 = v20;
  id v25 = v32;
  if (v32 == v31)
  {
    uint64_t v26 = 4LL;
    id v25 = v31;
  }

  else
  {
    if (!v32) {
      goto LABEL_6;
    }
    uint64_t v26 = 5LL;
  }

  (*(void (**)(void))(*v25 + 8 * v26))();
LABEL_6:
  uint64_t v27 = v34;
  if (v34 == v33)
  {
    uint64_t v28 = 4LL;
    uint64_t v27 = v33;
  }

  else
  {
    if (!v34) {
      goto LABEL_11;
    }
    uint64_t v28 = 5LL;
  }

  (*(void (**)(void))(*v27 + 8 * v28))();
LABEL_11:
  __n128 result = v36;
  if (v36 == v35)
  {
    uint64_t v30 = 4LL;
    __n128 result = v35;
  }

  else
  {
    if (!v36) {
      return result;
    }
    uint64_t v30 = 5LL;
  }

  return (void *)(*(uint64_t (**)(void))(*result + 8 * v30))();
}

void sub_1000256C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15, char a16, uint64_t a17, uint64_t a18, char *a19, char a20, uint64_t a21, uint64_t a22, char *a23)
{
  uint64_t v26 = a15;
  if (a15 == v24)
  {
    uint64_t v27 = 4LL;
    uint64_t v26 = &a12;
  }

  else
  {
    if (!a15) {
      goto LABEL_6;
    }
    uint64_t v27 = 5LL;
  }

  (*(void (**)(void))(*(void *)v26 + 8 * v27))();
LABEL_6:
  uint64_t v28 = a19;
  if (a19 == &a16)
  {
    uint64_t v29 = 4LL;
    uint64_t v28 = &a16;
  }

  else
  {
    if (!a19) {
      goto LABEL_11;
    }
    uint64_t v29 = 5LL;
  }

  (*(void (**)(void))(*(void *)v28 + 8 * v29))();
LABEL_11:
  uint64_t v30 = a23;
  if (a23 == &a20)
  {
    uint64_t v31 = 4LL;
    uint64_t v30 = &a20;
  }

  else
  {
    if (!a23) {
      goto LABEL_16;
    }
    uint64_t v31 = 5LL;
  }

  (*(void (**)(void))(*(void *)v30 + 8 * v31))();
LABEL_16:
  operator delete(v23);
  _Unwind_Resume(a1);
}

void sub_100025778(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  double v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#wifi,One-shot ranging session timeout", v4, 2u);
  }

  sub_100024A6C(v1);
  int v5 = 6;
  uint64_t v3 = *(void *)(v1 + 80);
  if (!v3) {
    sub_10001EEF0();
  }
  (*(void (**)(uint64_t, int *))(*(void *)v3 + 48LL))(v3, &v5);
  sub_100024A28(v1);
}

void *sub_100025814@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2828[a1 + 1]);
}

void *sub_100025844@<X0>(int a1@<W0>, void *a2@<X8>)
{
  if (a1)
  {
    if (a1 != 1) {
      sub_10038AA90();
    }
    double v2 = "NOT_READY";
  }

  else
  {
    double v2 = "READY";
  }

  return sub_1000065CC(a2, v2);
}

uint64_t sub_100025878(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 48))
  {
  }

  return a1;
}

void sub_1000258B0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {

    uint64_t v3 = *(void **)(a2 + 136);
    if (v3 == (void *)(a2 + 112))
    {
      uint64_t v4 = 4LL;
      uint64_t v3 = (void *)(a2 + 112);
    }

    else
    {
      if (!v3) {
        goto LABEL_8;
      }
      uint64_t v4 = 5LL;
    }

    (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_8:
    int v5 = *(void **)(a2 + 104);
    if (v5 == (void *)(a2 + 80))
    {
      uint64_t v6 = 4LL;
      int v5 = (void *)(a2 + 80);
    }

    else
    {
      if (!v5) {
        goto LABEL_13;
      }
      uint64_t v6 = 5LL;
    }

    (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_13:
    id v7 = *(void **)(a2 + 72);
    if (v7 == (void *)(a2 + 48))
    {
      uint64_t v8 = 4LL;
      id v7 = (void *)(a2 + 48);
    }

    else
    {
      if (!v7)
      {
LABEL_18:

        operator delete((void *)a2);
        return;
      }

      uint64_t v8 = 5LL;
    }

    (*(void (**)(void))(*v7 + 8 * v8))();
    goto LABEL_18;
  }

void *sub_100025990@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2868[a1]);
}

void *sub_1000259A4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A28C0[a1]);
}

void *sub_1000259B8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2908[a1]);
}

void *sub_1000259CC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2928[a1]);
}

void sub_100025AC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100025B28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100025D7C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *a21)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v24);
  objc_destroyWeak((id *)(v25 - 88));

  _Unwind_Resume(a1);
}

void sub_100025DE8(uint64_t a1)
{
  double v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "connection interrupted for pid: %d",  (uint8_t *)v6,  8u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v5 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained handleXPCDisconnection:*(void *)(a1 + 32)];
  }
}

void sub_100025EAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100025EC4(uint64_t a1)
{
  double v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "connection invalidated for pid: %d",  (uint8_t *)v6,  8u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v5 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained handleXPCDisconnection:*(void *)(a1 + 32)];
  }
}

void sub_100025F88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100026138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100026204(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100026250()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_1000262CC(_Unwind_Exception *a1)
{
}

void sub_1000262E4()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10040C848;
      v1[1] = unk_10040C858;
      v1[2] = xmmword_10040C868;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_100026384(_Unwind_Exception *a1)
{
}

void sub_10002639C()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  uint64_t v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  int v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F5020 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F5010 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5010, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  int v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  id v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F5038 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F5028 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5028, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  id v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F5050 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F5040 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5040, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  uint64_t v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F5068 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F5058 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5058, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  uint64_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  dispatch_source_t v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F5080 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F5070 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5070, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  uint64_t v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F5098 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F5088 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5088, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  uint64_t v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F50B0 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F50A0 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F50A0, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  uint64_t v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F50C8 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F50B8 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F50B8, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  uint64_t v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F50E0 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F50D0 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F50D0, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100026990( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_100026A04(double a1)
{
  return a1 / 180.0 * 3.14159265;
}

double sub_100026A20(double a1)
{
  return a1 * 180.0 / 3.14159265;
}

double sub_100026A3C(double a1)
{
  return a1 / 1.0e12 * 299792458.0;
}

double sub_100026A58(double a1)
{
  return a1 / 299792458.0 * 1.0e12;
}

double sub_100026A74(double a1)
{
  return a1 * 299792458.0;
}

double sub_100026A84(double a1)
{
  return a1 * 1.0e12;
}

double sub_100026A94(double a1)
{
  return a1 / 1000.0;
}

double sub_100026AA4(double a1)
{
  return a1 / 1.0e12;
}

double sub_100026AB4(double a1)
{
  return a1 / 1000000000.0;
}

double sub_100026AC4(double *a1, double *a2, double a3, double a4)
{
  double v6 = a4 / 180.0 * 3.14159265;
  __double2 v7 = __sincos_stret(a3 / 180.0 * 3.14159265);
  __double2 v8 = __sincos_stret(v6);
  *a1 = asin(v7.__cosval * v8.__sinval) * 180.0 / 3.14159265;
  double result = atan2(-(v7.__sinval * v8.__sinval), v8.__cosval) * 180.0 / 3.14159265;
  *a2 = result;
  return result;
}

void sub_100026B68(double *a1, double *a2, double a3, double a4)
{
  __double2 v7 = __sincos_stret(a3 / 180.0 * 3.14159265);
  __double2 v8 = __sincos_stret(a4 / 180.0 * 3.14159265);
  *a2 = acos(v7.__cosval * v8.__cosval) * 180.0 / 3.14159265;
  double v9 = atan2(-(v7.__cosval * v8.__sinval), v7.__sinval) * 180.0 / 3.14159265;
  if (v9 < 0.0) {
    double v9 = v9 + 360.0;
  }
  *a1 = v9;
}

void sub_100026C5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100026D64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100026DCC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  __int128 v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)&OBJC_CLASS___NIServerClient;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_100026E68( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100026EF8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100026F10(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 uwbSessionDidFailWithError:*(void *)(a1 + 32)];
  }
}

void sub_100026F60( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100026FF0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100027008(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 uwbSessionDidInvalidateWithError:*(void *)(a1 + 32)];
  }
}

void sub_100027058( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1000270EC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_100027104(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didRemoveNearbyObjects:*(void *)(a1 + 32) withReason:*(void *)(a1 + 40)];
  }
}

void sub_100027154( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1000271E4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1000271FC(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didUpdateNearbyObjects:*(void *)(a1 + 32)];
  }
}

void sub_10002724C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1000272B8(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 uwbSessionInterruptedWithReason:*(void *)(a1 + 32) timestamp:*(double *)(a1 + 40)];
  }
}

void sub_10002730C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100027378(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 uwbSessionInterruptionReasonEnded:*(void *)(a1 + 32) timestamp:*(double *)(a1 + 40)];
  }
}

void sub_1000273CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10002745C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100027474(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didDiscoverNearbyObject:*(void *)(a1 + 32)];
  }
}

void sub_1000274C4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1000275A8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1000275D8(void *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 object:a1[4] didUpdateRegion:a1[5] previousRegion:a1[6]];
  }
}

void sub_10002762C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100027694(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didUpdateMotionState:*(void *)(a1 + 32)];
  }
}

void sub_1000276E4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10002774C(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didUpdateHealthStatus:*(void *)(a1 + 32)];
  }
}

void sub_10002779C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10002782C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100027844(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 relayDCKMessage:*(void *)(a1 + 32)];
  }
}

void sub_100027894( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10002794C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100027970(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didGenerateShareableConfigurationData:*(void *)(a1 + 32) forObject:*(void *)(a1 + 40)];
  }
}

void sub_1000279C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100027A50( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100027A68(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didUpdateLocalDiscoveryToken:*(void *)(a1 + 32)];
  }
}

void sub_100027AB8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100027B50( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_100027B68(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didReceiveRangingAuthRecommendation:*(unsigned __int8 *)(a1 + 40) forObject:*(void *)(a1 + 32)];
  }
}

void sub_100027BBC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100027C74( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100027C98(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didUpdateAlgorithmState:*(void *)(a1 + 32) forObject:*(void *)(a1 + 40)];
  }
}

void sub_100027CE8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100027D50(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didUpdateHomeDeviceUWBRangingAvailability:*(unsigned __int8 *)(a1 + 32)];
  }
}

void sub_100027DA0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100027E58( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100027E7C(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didProcessAcwgM1MsgWithResponse:*(void *)(a1 + 32) error:*(void *)(a1 + 40)];
  }
}

void sub_100027ECC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100027F84( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100027FA8(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didProcessAcwgM3MsgWithResponse:*(void *)(a1 + 32) error:*(void *)(a1 + 40)];
  }
}

void sub_100027FF8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1000280B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1000280D4(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didProcessAcwgRangingSessionResumeRequestMsgWithResponse:*(void *)(a1 + 32) error:*(void *)(a1 + 40)];
  }
}

void sub_100028124( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100028190(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 requestAcwgRangingSessionSuspend:*(unsigned int *)(a1 + 40) withSuspendTriggerReason:*(void *)(a1 + 32)];
  }
}

void sub_1000281E4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10002824C(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didStartAcwgRanging:*(void *)(a1 + 32)];
  }
}

void sub_10002829C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100028304(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didSuspendAcwgRanging:*(void *)(a1 + 32)];
  }
}

void sub_100028354( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1000283EC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_100028404(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 didPrefetchAcwgUrsk:*(unsigned int *)(a1 + 40) error:*(void *)(a1 + 32)];
  }
}

void sub_100028458( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1000284E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100028500(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 systemDidUpdateState:*(void *)(a1 + 32)];
  }
}

void sub_100028550( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1000285E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_100028600(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (!v5) {
    [v6 systemDidUpdateResourceUsageLimitExceeded:*(unsigned __int8 *)(a1 + 40) forSessionConfigurationTypeWithName:*(void *)(a1 + 32)];
  }
}

void sub_100028654( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1000287AC(_Unwind_Exception *a1)
{
  __int128 v4 = v3;

  _Unwind_Resume(a1);
}

void sub_100028828(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100028910(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double sub_10002895C()
{
  double v0 = 2.5;
  uint64_t v1 = MGGetProductType();
  int v2 = v1;
  if (v1 > 2159747552LL)
  {
    if (v1 <= 2940697644LL)
    {
      if (v1 > 2688879998LL)
      {
        if (v1 > 2793418700LL)
        {
          if (v1 == 2793418701LL) {
            return v0;
          }
          uint64_t v3 = 2795618603LL;
        }

        else
        {
          if (v1 == 2688879999LL) {
            return v0;
          }
          uint64_t v3 = 2722529672LL;
        }
      }

      else if (v1 > 2309863437LL)
      {
        if (v1 == 2309863438LL) {
          return v0;
        }
        uint64_t v3 = 2311900306LL;
      }

      else
      {
        if (v1 == 2159747553LL) {
          return v0;
        }
        uint64_t v3 = 2270970153LL;
      }
    }

    else if (v1 <= 3585085678LL)
    {
      if (v1 > 3001488777LL)
      {
        if (v1 == 3001488778LL) {
          return v0;
        }
        uint64_t v3 = 3242623367LL;
      }

      else
      {
        if (v1 == 2940697645LL) {
          return v0;
        }
        uint64_t v3 = 2941181571LL;
      }
    }

    else if (v1 <= 3825599859LL)
    {
      if (v1 == 3585085679LL) {
        return v0;
      }
      uint64_t v3 = 3743999268LL;
    }

    else
    {
      if (v1 == 3825599860LL || v1 == 3885279870LL) {
        return v0;
      }
      uint64_t v3 = 4201643249LL;
    }
  }

  else if (v1 <= 1169082143)
  {
    if (v1 > 689804741)
    {
      if (v1 > 910181309)
      {
        if (v1 == 910181310) {
          return v0;
        }
        uint64_t v3 = 1060988941LL;
      }

      else
      {
        if (v1 == 689804742) {
          return v0;
        }
        uint64_t v3 = 851437781LL;
      }
    }

    else if (v1 > 502329936)
    {
      if (v1 == 502329937) {
        return v0;
      }
      uint64_t v3 = 574536383LL;
    }

    else
    {
      if (v1 == 133314240) {
        return v0;
      }
      uint64_t v3 = 330877086LL;
    }
  }

  else if (v1 <= 1434404432)
  {
    if (v1 > 1371389548)
    {
      if (v1 == 1371389549) {
        return v0;
      }
      uint64_t v3 = 1429914406LL;
    }

    else
    {
      if (v1 == 1169082144) {
        return v0;
      }
      uint64_t v3 = 1234705395LL;
    }
  }

  else
  {
    if (v1 <= 1721691076)
    {
      if (v1 == 1434404433) {
        return v0;
      }
      if (v1 == 1608945770) {
        return 4.0;
      }
      goto LABEL_53;
    }

    if (v1 == 1721691077 || v1 == 2021146989) {
      return v0;
    }
    uint64_t v3 = 2080700391LL;
  }

  if (v1 == v3) {
    return v0;
  }
LABEL_53:
  id v5 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
    sub_10038AAF4(v2, v5);
  }
  return v0;
}

double sub_100028C98()
{
  uint64_t v0 = MGGetProductType();
  double result = 4.0;
  if (v0 == 1608945770) {
    return 5.0;
  }
  return result;
}

uint64_t sub_100028CC4(uint64_t a1)
{
  int v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }

  return a1;
}

void sub_100028FE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002904C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)&OBJC_CLASS___NIServerAnalyticsManager;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

LABEL_33:
    unint64_t v71 = v37;
    operator delete(v37);
    goto LABEL_34;
  }

  uint64_t v29 = objc_opt_class(&OBJC_CLASS___NIFindingConfiguration, v28);
  if ((objc_opt_isKindOfClass(v7, v29) & 1) != 0)
  {
    else {
      __int128 v30 = 3;
    }
    *(_DWORD *)p_lifecycleTimeoutType = v30;
  }

  if ((v3 & 0x10) != 0) {
    id v5 = v4 + 9;
  }
  else {
    id v5 = v4;
  }
  if ((v3 & 0x20) != 0)
  {
    __int128 v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
    if ((v22 & 0x80000000) != 0)
    {
      unint64_t v23 = 11;
    }

    else if (v22 >= 0x80)
    {
      uint64_t v3 = *(_DWORD *)(a1 + 80);
    }

    else
    {
      unint64_t v23 = 2;
    }

    id v5 = (v23 + v5);
    if ((v3 & 0x40) == 0)
    {
LABEL_38:
      if ((v3 & 0x80) == 0) {
        goto LABEL_58;
      }
      goto LABEL_52;
    }
  }

  else if ((v3 & 0x40) == 0)
  {
    goto LABEL_38;
  }

  __int128 v24 = *(void *)(a1 + 56);
  if (!v24) {
    __int128 v24 = *(void *)(qword_100800100 + 56);
  }
  uint64_t v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100052E78(v24, a2);
  __int128 v26 = (int)v25;
  else {
    uint64_t v27 = 1;
  }
  id v5 = (v5 + v26 + v27 + 1);
  if ((*(_DWORD *)(a1 + 80) & 0x80) != 0)
  {
LABEL_52:
    __int128 v28 = *(void *)(a1 + 64);
    if (!v28) {
      __int128 v28 = *(void *)(qword_100800100 + 64);
    }
    uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100055464(v28, a2);
    __int128 v30 = (int)v29;
    else {
      uint64_t v31 = 1;
    }
    id v5 = (v5 + v30 + v31 + 1);
  }

  if (*((int *)this + 14) >= 1)
  {
    __int128 v16 = 0LL;
    while (1)
    {
      uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 6) + 4 * v16);
      *(_BYTE *)uint64_t v3 = 56;
      __int128 v18 = (unint64_t)v3 + 1;
      if (v17 > 0x7F)
      {
        dispatch_source_t v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  v18,  a3);
        goto LABEL_40;
      }

      *((_BYTE *)v3 + 1) = (_BYTE)v17;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
LABEL_41:
    }

    dispatch_source_t v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v17,  v18,  a3);
LABEL_40:
    uint64_t v3 = v19;
    goto LABEL_41;
  }

  if (!HIBYTE(v5)) {
    goto LABEL_42;
  }
  if ((v5 & 0x1000000) != 0)
  {
    __int128 v45 = *(_DWORD *)(a2 + 144);
    *(_DWORD *)(a1 + 232) |= 0x1000000u;
    *(_DWORD *)(a1 + 144) = v45;
    id v5 = *(_DWORD *)(a2 + 232);
    if ((v5 & 0x2000000) == 0)
    {
LABEL_36:
      if ((v5 & 0x4000000) == 0) {
        goto LABEL_37;
      }
      goto LABEL_101;
    }
  }

  else if ((v5 & 0x2000000) == 0)
  {
    goto LABEL_36;
  }

  unsigned __int8 v46 = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 232) |= 0x2000000u;
  *(_DWORD *)(a1 + 148) = v46;
  id v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_37:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_102;
  }

  __int128 v14 = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 88) |= 0x400u;
  *(_DWORD *)(a1 + 60) = v14;
  id v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x800) == 0)
  {
LABEL_25:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_35;
  }

      uint64_t v25 = (char *)*((void *)this + 1);
      uint64_t v11 = (char *)*((void *)this + 2);
      if (v25 >= v11 || *v25 != 8) {
        break;
      }
      __int128 v12 = v25 + 1;
      *((void *)this + 1) = v12;
    }

    if (v25 == v11 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      double result = 1LL;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }

  if (v10 != 2) {
    goto LABEL_10;
  }
  double result = sub_1000859B8(this, v6);
  if ((_DWORD)result) {
    goto LABEL_33;
  }
  return result;
}

  uint64_t v11 = *(void *)(v5 + 40);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_100800310 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  v11,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 44),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x100) == 0)
  {
LABEL_9:
    if ((v6 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(_DWORD *)(v5 + 56),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }

  uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v15 >= 0x80)
  {
    __int128 v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    uint64_t v3 = *(_DWORD *)(a1 + 88);
  }

  else
  {
    __int128 v16 = 1;
  }

  __int128 v4 = (v4 + v16 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_41;
  }

    unint64_t v23 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 124) |= 0x40u;
    *(_DWORD *)(a1 + 60) = v23;
    uint64_t v13 = *(_DWORD *)(a2 + 124);
    if ((v13 & 0x80) == 0) {
      goto LABEL_37;
    }
LABEL_34:
    __int128 v24 = *(const std::string **)(a2 + 64);
    *(_DWORD *)(a1 + 124) |= 0x80u;
    uint64_t v25 = *(std::string **)(a1 + 64);
    if (v25 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      uint64_t v25 = (std::string *)operator new(0x18uLL);
      v25->__r_.__value_.__l.__size_ = 0LL;
      v25->__r_.__value_.__l.__cap_ = 0LL;
      v25->__r_.__value_.__r.__words[0] = 0LL;
      *(void *)(a1 + 64) = v25;
    }

    std::string::operator=(v25, v24);
    uint64_t v13 = *(_DWORD *)(a2 + 124);
  }

  uint64_t v21 = *((_BYTE *)this + 50);
  *(_BYTE *)uint64_t v3 = 64;
  *((_BYTE *)v3 + 1) = v21;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  __double2 v8 = *((_DWORD *)this + 15);
  if ((v8 & 0x100) == 0)
  {
LABEL_16:
    if ((v8 & 0x200) == 0) {
      goto LABEL_17;
    }
LABEL_35:
    unint64_t v23 = *((_BYTE *)this + 52);
    *(_BYTE *)uint64_t v3 = 80;
    *((_BYTE *)v3 + 1) = v23;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((_DWORD *)this + 15) & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }

  uint64_t v25 = *((void *)this + 4);
  if (!v25) {
    uint64_t v25 = *(void *)(qword_100800440 + 32);
  }
  *(_BYTE *)uint64_t v3 = 34;
  __int128 v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v25 + 48);
  if (v26 > 0x7F)
  {
    uint64_t v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v26,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v26;
    uint64_t v27 = (uint64_t)v3 + 2;
  }

  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000C84B0(v25, v27, a3);
  if ((*((_DWORD *)this + 25) & 0x10) != 0)
  {
LABEL_9:
    __double2 v8 = *((void *)this + 5);
    *(_BYTE *)uint64_t v3 = 41;
    *(void *)((char *)v3 + 1) = v8;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  }

  __int128 v12 = *(void *)(v5 + 56);
  if (!v12) {
    __int128 v12 = *(void *)(qword_100800498 + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  v12,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }

  __int128 v24 = *((_BYTE *)this + 38);
  *(_BYTE *)uint64_t v3 = 80;
  *((_BYTE *)v3 + 1) = v24;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  id v5 = *((_DWORD *)this + 21);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

  __int128 v18 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 72) |= 0x400u;
  *(_DWORD *)(a1 + 48) = v18;
  id v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD,  *(_DWORD *)(v5 + 56),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  (int)a2,  *(double *)(v5 + 80),  a3);
  id v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }

  dispatch_source_t v19 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 112) |= 0x400u;
  *(void *)(a1 + 80) = v19;
  id v5 = *(_DWORD *)(a2 + 112);
  if ((v5 & 0x800) != 0) {
    goto LABEL_34;
  }
LABEL_18:
  if ((v5 & 0x1000) != 0)
  {
LABEL_19:
    __double2 v7 = *(void *)(a2 + 96);
    *(_DWORD *)(a1 + 112) |= 0x1000u;
    *(void *)(a1 + 96) = v7;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  __int128 v20 = *((void *)this + 5);
  *(_BYTE *)__int128 v4 = 33;
  *(void *)((char *)v4 + 1) = v20;
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  id v6 = *((_DWORD *)this + 26);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_41;
    }
    goto LABEL_35;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(void *)(v5 + 56),  (unint64_t)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }

  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 11);
  *(_BYTE *)a2 = 104;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v17, a2 + 1, a3);
  __int128 v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x2000) == 0)
  {
LABEL_15:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }

  __int128 v18 = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 148) |= 0x400u;
  *(void *)(a1 + 104) = v18;
  id v6 = *(_DWORD *)(a2 + 148);
  if ((v6 & 0x800) == 0)
  {
LABEL_19:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_35;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  (int)a2,  *(double *)(v5 + 112),  a3);
  __double2 v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x1000) == 0)
  {
LABEL_18:
    if ((v8 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }

  uint64_t v21 = *((void *)this + 11);
  *(_BYTE *)uint64_t v3 = 73;
  *(void *)((char *)v3 + 1) = v21;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  __int128 v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x200) == 0)
  {
LABEL_18:
    if ((v10 & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  (int)a2,  *(double *)(v5 + 72),  a3);
  id v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }

  uint64_t v25 = sub_100289FF4((uint64_t)v13, &v39, (unsigned __int16 *)buf);
  if (v40) {
    std::__shared_weak_count::__release_weak(v40);
  }
  if ((v25 & 1) != 0) {
    return 0LL;
  }
  __int128 v26 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string v38 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,#throttle PRRangingManager::updateRangingParameter failed.",  v38,  2u);
  }

  return 0xFFFFFFFFLL;
}

    std::recursive_mutex::unlock(v9);
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_1003A47B4();
    }
    __int128 v16 = 0LL;
  }

  unint64_t v23 = v40;
  if (v40)
  {
    __int128 v24 = (unint64_t *)&v40->__shared_owners_;
    do
      uint64_t v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }

  return v16;
}

  __int128 v48 = v19;
  if (v4 <= v19)
  {
    LOBYTE(v49) = 0;
    __int128 v55 = 0;
    *a2 = -4017;
    sub_1002BAE6C((uint64_t)(a2 + 2), (uint64_t)&v49);
    goto LABEL_52;
  }

  uint64_t v25 = v19;
  __int128 v26 = *(unsigned __int8 *)(*a1 + v19);
  if (v26 + v25 >= v4)
  {
    LOBYTE(v49) = 0;
    __int128 v55 = 0;
    *a2 = -4020;
    sub_1002BAE6C((uint64_t)(a2 + 2), (uint64_t)&v49);
    goto LABEL_52;
  }

  if (!(_DWORD)v26)
  {
    LOBYTE(v49) = 0;
    __int128 v55 = 0;
    *a2 = -4018;
    sub_1002BAE6C((uint64_t)(a2 + 2), (uint64_t)&v49);
    goto LABEL_52;
  }

  sub_1002B9CB8(&v38, a1, &v48);
  sub_1001C8FA8((unint64_t *)&__p, v38);
  uint64_t v31 = v4;
  uint64_t v27 = __p;
  __int128 v28 = v40;
  while (v27 != v28)
    sub_1002B9CB8(v27++, a1, &v48);
  if (v31 != v48)
  {
    LOBYTE(v49) = 0;
    __int128 v55 = 0;
    *a2 = -4006;
    sub_1002BAE6C((uint64_t)(a2 + 2), (uint64_t)&v49);
    goto LABEL_52;
  }

  sub_1002BAB60(&v32, (uint64_t)&v45, (uint64_t)&v42, (uint64_t)&__p);
  id v49 = v32;
  id v50 = v33;
  __int128 v32 = 0uLL;
  uint64_t v51 = v34;
  uint64_t v52 = v35;
  uint64_t v33 = 0LL;
  __int128 v34 = 0uLL;
  uint64_t v35 = 0LL;
  __int128 v53 = v36;
  uint64_t v54 = v37;
  std::string v37 = 0LL;
  __int128 v36 = 0uLL;
  __int128 v55 = 1;
  *a2 = 0;
  sub_1002BAE6C((uint64_t)(a2 + 2), (uint64_t)&v49);
  sub_1002BAB08((uint64_t)&v49);
  sub_1002B9D2C((uint64_t)&v32);
LABEL_53:
  if (__p)
  {
    __int128 v40 = __p;
    operator delete(__p);
  }

  if (v42)
  {
    int v43 = v42;
    operator delete(v42);
  }

  if (v45)
  {
    unsigned __int8 v46 = v45;
    operator delete(v45);
  }

    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 1184));
    return;
  }

  if (!*(_BYTE *)(a2 + 1) && v13 == 525)
  {
    LOWORD(__dst) = 0;
    sub_1003619AC((char *)(*a3 + 4LL), 2uLL, &__dst, 1);
    if (!(_WORD)__dst && *(void *)(a1 + 1184))
    {
      sub_10032C3DC("UWB Init Done Event: status (0x%04x)", v29, v30, v31, v32, v33, v34, v35, 0LL);
      goto LABEL_33;
    }

    sub_10032C51C("UWB Init Done Event: status (0x%04x)", v29, v30, v31, v32, v33, v34, v35, (unsigned __int16)__dst);
  }

void sub_100029A30( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  _Unwind_Resume(a1);
}

id sub_100029B38(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

LABEL_40:
    sub_100006080();
  }

  __int128 v16 = *(_DWORD *)(a1 + 40);
  uint64_t v17 = (v16 + v4);
  if (v16 >= 1)
  {
    __int128 v18 = 0LL;
    do
    {
      dispatch_source_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100060248( *(void *)(*(void *)(a1 + 32) + 8 * v18),  a2);
      __int128 v20 = (int)v19;
      else {
        uint64_t v21 = 1;
      }
      uint64_t v17 = (v20 + v17 + v21);
      ++v18;
    }

    while (v18 < *(int *)(a1 + 40));
  }

  __int128 v22 = *(void **)(a1 + 8);
  if (v22 && *v22 != v22[1]) {
    uint64_t v17 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v17;
  *(_DWORD *)(a1 + 64) = v17;
  return v17;
}

  uint64_t v17 = *(_DWORD *)(a1 + 40);
  if (v17 < 1)
  {
    dispatch_source_t v19 = 0;
  }

  else
  {
    __int128 v18 = 0LL;
    dispatch_source_t v19 = 0;
    do
    {
      if ((v20 & 0x80000000) != 0)
      {
        uint64_t v21 = 10;
      }

      else if (v20 >= 0x80)
      {
        uint64_t v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
        uint64_t v17 = *(_DWORD *)(a1 + 40);
      }

      else
      {
        uint64_t v21 = 1;
      }

      v19 += v21;
      ++v18;
    }

    while (v18 < v17);
  }

  __int128 v22 = *(_DWORD *)(a1 + 56);
  if (v22 < 1)
  {
    __int128 v24 = 0;
  }

  else
  {
    unint64_t v23 = 0LL;
    __int128 v24 = 0;
    do
    {
      if ((v25 & 0x80000000) != 0)
      {
        __int128 v26 = 10;
      }

      else if (v25 >= 0x80)
      {
        __int128 v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
        __int128 v22 = *(_DWORD *)(a1 + 56);
      }

      else
      {
        __int128 v26 = 1;
      }

      v24 += v26;
      ++v23;
    }

    while (v23 < v22);
  }

  uint64_t v27 = *(_DWORD *)(a1 + 80);
  if (v27 < 1)
  {
    uint64_t v29 = 0;
  }

  else
  {
    __int128 v28 = 0LL;
    uint64_t v29 = 0;
    do
    {
      if ((v30 & 0x80000000) != 0)
      {
        uint64_t v31 = 10;
      }

      else if (v30 >= 0x80)
      {
        uint64_t v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
        uint64_t v27 = *(_DWORD *)(a1 + 80);
      }

      else
      {
        uint64_t v31 = 1;
      }

      v29 += v31;
      ++v28;
    }

    while (v28 < v27);
  }

  __int128 v32 = *(_DWORD *)(a1 + 96);
  if (v32 < 1)
  {
    __int128 v34 = 0;
  }

  else
  {
    uint64_t v33 = 0LL;
    __int128 v34 = 0;
    do
    {
      if ((v35 & 0x80000000) != 0)
      {
        __int128 v36 = 10;
      }

      else if (v35 >= 0x80)
      {
        __int128 v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35, a2);
        __int128 v32 = *(_DWORD *)(a1 + 96);
      }

      else
      {
        __int128 v36 = 1;
      }

      v34 += v36;
      ++v33;
    }

    while (v33 < v32);
  }

  std::string v37 = (v19 + v4 + v17 + v24 + v22 + v29 + v27 + v34 + v32);
  std::string v38 = *(void **)(a1 + 8);
  if (v38 && *v38 != v38[1]) {
    std::string v37 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v37;
  *(_DWORD *)(a1 + 104) = v37;
  return v37;
}

    dispatch_source_t v19 = *(const std::string **)(a2 + 40);
    *(_DWORD *)(a1 + 96) |= 8u;
    __int128 v20 = *(std::string **)(a1 + 40);
    if (v20 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      __int128 v20 = (std::string *)operator new(0x18uLL);
      v20->__r_.__value_.__l.__size_ = 0LL;
      v20->__r_.__value_.__l.__cap_ = 0LL;
      v20->__r_.__value_.__r.__words[0] = 0LL;
      *(void *)(a1 + 40) = v20;
    }

    std::string::operator=(v20, v19);
    id v5 = *(_DWORD *)(a2 + 96);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
      {
LABEL_11:
        if ((v5 & 0x40) != 0)
        {
          *(_DWORD *)(a1 + 96) |= 0x40u;
          __double2 v7 = *(void **)(a1 + 64);
          if (!v7)
          {
            __double2 v7 = operator new(0x28uLL);
            sub_100065B2C((uint64_t)v7);
            *(void *)(a1 + 64) = v7;
          }

          __double2 v8 = *(void *)(a2 + 64);
          if (!v8) {
            __double2 v8 = *(void *)(qword_1008001D0 + 64);
          }
          sub_100065B78((uint64_t)v7, v8);
          id v5 = *(_DWORD *)(a2 + 96);
        }

        if ((v5 & 0x80) != 0)
        {
          *(_DWORD *)(a1 + 96) |= 0x80u;
          double v9 = *(void **)(a1 + 72);
          if (!v9)
          {
            double v9 = operator new(0x48uLL);
            sub_100065004((uint64_t)v9);
            *(void *)(a1 + 72) = v9;
          }

          __int128 v10 = *(void *)(a2 + 72);
          if (!v10) {
            __int128 v10 = *(void *)(qword_1008001D0 + 72);
          }
          sub_100065058((uint64_t)v9, v10);
          id v5 = *(_DWORD *)(a2 + 96);
        }

        goto LABEL_23;
      }

  double v9 = *(void *)(v5 + 32);
  if (!v9) {
    double v9 = *(void *)(qword_100800158 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v9,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_46;
  }

  double v9 = *(void *)(v5 + 40);
  if (!v9) {
    double v9 = *(void *)(qword_1008001F0 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  v9,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_46;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(_DWORD *)(v5 + 88),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_42;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE,  *(_DWORD *)(v5 + 72),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x8000) == 0)
  {
LABEL_16:
    if ((v6 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_42;
  }

  dispatch_source_t v19 = *(uint64_t **)(v5 + 72);
  if (*((char *)v19 + 23) < 0)
  {
    dispatch_source_t v19 = (uint64_t *)*v19;
    __int128 v20 = *(void *)(*(void *)(v5 + 72) + 8LL);
  }

  else
  {
    __int128 v20 = *((unsigned __int8 *)v19 + 23);
  }

  wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v19, v20, 1LL);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(9LL, *(void *)(v5 + 72), a2);
  id v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }

  __int128 v26 = *((void *)this + 4);
  *(_BYTE *)a2 = 25;
  *(void *)((char *)a2 + 1) = v26;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
  id v5 = *((_DWORD *)this + 31);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_42;
  }

  uint64_t v25 = *(void **)(a1 + 8);
  if (v25 && *v25 != v25[1]) {
    id v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v5;
  *(_DWORD *)(a1 + 64) = v5;
  return v5;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10,  *(_DWORD *)(v5 + 124),  (int)a2,  a4);
  if ((*(_DWORD *)(v5 + 140) & 0x10000) != 0) {
LABEL_18:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(17LL, *(void *)(v5 + 128), a2);
LABEL_19:
  double v9 = *(void **)(v5 + 8);
  __double2 v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  __double2 v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  dispatch_source_t v19 = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 124) |= 0x1000u;
  *(void *)(a1 + 88) = v19;
  id v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_42;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10,  (int)a2,  *(float *)(v5 + 104),  a3);
  id v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_42;
  }
    }

    unsigned __int8 v46 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v67,  v78,  16LL);
  }

  while (v46);

  if (v43 >= 1)
  {
    __int128 v53 = 0u;
    uint64_t v54 = 0u;
    uint64_t v51 = 0u;
    uint64_t v52 = 0u;
    obj = self->_observers;
    uint64_t v33 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v51,  v71,  16LL);
    if (v33)
    {
      __int128 v34 = *(void *)v52;
      do
      {
        for (m = 0LL; m != v33; m = (char *)m + 1)
        {
          if (*(void *)v52 != v34) {
            objc_enumerationMutation(obj);
          }
          __int128 v36 = *(void *)(*((void *)&v51 + 1) + 8LL * (void)m);
          std::string v37 = (dispatch_queue_s *)self->_updatesQueue;
          v50[0] = _NSConcreteStackBlock;
          v50[1] = 3221225472LL;
          v50[2] = sub_1001E61AC;
          v50[3] = &unk_1007A3000;
          v50[4] = v36;
          dispatch_async(v37, v50);
        }

        uint64_t v33 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v51,  v71,  16LL);
      }

      while (v33);
    }

  if ((v3 & 0x80) != 0)
  {
    unint64_t v23 = *(char **)v2;
    __int128 v24 = *((void *)v2 + 1);
  }

  else
  {
    unint64_t v23 = v2;
    __int128 v24 = v3;
  }

  if (byte_1007FA1FF >= 0) {
    uint64_t v25 = &qword_1007FA1E8;
  }
  else {
    uint64_t v25 = (uint64_t *)qword_1007FA1E8;
  }
  if (byte_1007FA1FF >= 0) {
    __int128 v26 = byte_1007FA1FF;
  }
  else {
    __int128 v26 = unk_1007FA1F0;
  }
  if (!v26) {
    return 2LL;
  }
  if (v24 >= v26)
  {
    uint64_t v31 = &v23[v24];
    __int128 v32 = *(char *)v25;
    uint64_t v33 = v23;
    do
    {
      __int128 v34 = v24 - v26;
      if (v34 == -1) {
        break;
      }
      uint64_t v35 = (char *)memchr(v33, v32, v34 + 1);
      if (!v35) {
        break;
      }
      __int128 v36 = v35;
      if (!memcmp(v35, v25, v26))
      {
        if (v36 == v31 || v36 - v23 == -1) {
          break;
        }
        return 2LL;
      }

      uint64_t v33 = v36 + 1;
      __int128 v24 = v31 - (v36 + 1);
    }

    while (v24 >= v26);
  }

  if ((v3 & 0x80) != 0)
  {
    uint64_t v27 = v2;
    int v2 = *(char **)v2;
    uint64_t v3 = *((void *)v27 + 1);
  }

  if (byte_1007FA217 >= 0) {
    __int128 v28 = &qword_1007FA200;
  }
  else {
    __int128 v28 = (uint64_t *)qword_1007FA200;
  }
  if (byte_1007FA217 >= 0) {
    uint64_t v29 = byte_1007FA217;
  }
  else {
    uint64_t v29 = unk_1007FA208;
  }
  if (!v29) {
    return 3LL;
  }
  if (v3 >= v29)
  {
    std::string v37 = &v2[v3];
    std::string v38 = *(char *)v28;
    unint64_t v39 = v2;
    do
    {
      if (v3 - v29 == -1) {
        break;
      }
      __int128 v40 = (char *)memchr(v39, v38, v3 - v29 + 1);
      if (!v40) {
        break;
      }
      unint64_t v41 = v40;
      if (!memcmp(v40, v28, v29))
      {
        if (v41 == v37 || v41 - v2 == -1) {
          return 1LL;
        }
        return 3LL;
      }

      unint64_t v39 = v41 + 1;
      uint64_t v3 = v37 - (v41 + 1);
    }

    while (v3 >= v29);
  }

  return 1LL;
}

LABEL_22:
  if (*((_BYTE *)a3 + 72))
  {
    __int128 v16 = 412LL;
    if (*((_DWORD *)a3 + 10) == 1) {
      __int128 v16 = 400LL;
    }
    uint64_t v17 = *(_DWORD *)((char *)&self->super.isa + v16);
    id v6 = __CFADD__(v17, 1);
    __int128 v18 = v17 + 1;
    if (v6) {
      __int128 v18 = 1;
    }
    *(_DWORD *)((char *)&self->super.isa + v16) = v18;
  }

  if (*((_BYTE *)a3 + 112))
  {
    numberOfPeerData = self->_numberOfPeerData;
    id v6 = __CFADD__(numberOfPeerData, 1);
    __int128 v20 = numberOfPeerData + 1;
    if (v6) {
      __int128 v20 = 1;
    }
    self->_numberOfPeerData = v20;
  }

  if (*((_BYTE *)a3 + 160))
  {
    timeLocationFromWiFi2_high = HIDWORD(self->_timeLocationFromWiFi2);
    id v6 = __CFADD__(timeLocationFromWiFi2_high, 1);
    __int128 v22 = timeLocationFromWiFi2_high + 1;
    if (v6) {
      __int128 v22 = 1;
    }
    HIDWORD(self->_timeLocationFromWiFi2) = v22;
  }

    if (+[NIPlatformInfo isInternalBuild](&OBJC_CLASS___NIPlatformInfo, "isInternalBuild"))
    {
      __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
      unint64_t v23 = [v22 BOOLForKey:@"NIPrototypingBypassEntitlements"];

      if (v23)
      {
        __int128 v24 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)pthread_attr_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "#ses-container,Prototyping mode on: enable entitlement bypass",  buf,  2u);
        }

        self->_clientEntitlementsArray.__elems_[v13] = 1;
      }
    }

    uint64_t v25 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v26 = (void *)objc_claimAutoreleasedReturnValue(-[NIServerSessionContainer processNameBestGuess](self, "processNameBestGuess"));
      uint64_t v27 = self->_clientEntitlementsArray.__elems_[v13];
      *(_DWORD *)pthread_attr_t buf = 138413058;
      __int128 v32 = v26;
      uint64_t v33 = 2112;
      __int128 v34 = v14;
      uint64_t v35 = 1024;
      *(_DWORD *)__int128 v36 = v27;
      *(_WORD *)&v36[4] = 2112;
      *(void *)&v36[6] = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "#ses-container,Client: %@, entitlement: %@ | got it: %d, requested it: %@",  buf,  0x26u);
    }

    ++v13;
  }

  while (v13 != 9);
  os_unfair_lock_unlock(lock);
}

  if (v5)
  {
    uint64_t v17 = (unint64_t *)&v5->__shared_owners_;
    do
      __int128 v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + sub_100012358(v1 - 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

  uint64_t v11 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 28) = v11;
  id v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 36),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }

  uint64_t v11 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 28) = v11;
  id v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 36),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(5LL, *(void *)(v5 + 40), a2);
  id v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 48),  a3);
  id v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }

  __int128 v12 = *(_BYTE *)(a2 + 26);
  *(_DWORD *)(a1 + 40) |= 8u;
  *(_BYTE *)(a1 + 26) = v12;
  id v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    __int128 v14 = *(_BYTE *)(a2 + 28);
    *(_DWORD *)(a1 + 40) |= 0x20u;
    *(_BYTE *)(a1 + 28) = v14;
    id v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    goto LABEL_25;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(unsigned __int8 *)(v5 + 28),  (BOOL)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }

  __int128 v14 = *(_BYTE *)(a1 + 28);
  *(_BYTE *)a2 = 48;
  *(_BYTE *)(a2 + 1) = v14;
  a2 += 2LL;
  uint64_t v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x40) == 0)
  {
LABEL_8:
    if ((v3 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }

        if (v9 == 4) {
          return 1LL;
        }
      }

      double v9 = TagFallback & 7;
      if (v9 != 1) {
        goto LABEL_22;
      }
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v23) & 1) == 0) {
        return 0LL;
      }
      *(void *)(a1 + 16) = v23;
      __int128 v10 = *(_DWORD *)(a1 + 36) | 1;
      *(_DWORD *)(a1 + 36) = v10;
      uint64_t v11 = (_BYTE *)*((void *)this + 1);
    }

    while ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 18);
    *((void *)this + 1) = v11 + 1;
LABEL_16:
    *(_DWORD *)(a1 + 36) = v10 | 2;
    __int128 v12 = *(void **)(a1 + 24);
    if (!v12)
    {
      __int128 v12 = operator new(0x20uLL);
      sub_10005DC80(v12);
      *(void *)(a1 + 24) = v12;
    }

    uint64_t v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
    }

    else
    {
      __int128 v24 = *v13;
      *((void *)this + 1) = v13 + 1;
    }

    __int128 v14 = *((_DWORD *)this + 14);
    uint64_t v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0LL;
    }
    __int128 v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v24);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    dispatch_source_t v19 = *((_DWORD *)this + 14);
    __int128 v20 = __OFSUB__(v19, 1);
    uint64_t v21 = v19 - 1;
    if (v21 < 0 == v20) {
      *((_DWORD *)this + 14) = v21;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      double result = 1LL;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }

  uint64_t v11 = *(void *)(v5 + 48);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008001D0 + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  v11,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v4 + 48),  a3);
  id v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }

  uint64_t v15 = *((void *)this + 6);
  *(_BYTE *)a2 = 41;
  *(void *)(a2 + 1) = v15;
  a2 += 9LL;
  id v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }

  if ((v13 & 0xFF00) != 0)
  {
    if ((v13 & 0x100) != 0)
    {
      __int128 v16 = *(_DWORD *)(a2 + 76);
      *(_DWORD *)(a1 + 88) |= 0x100u;
      *(_DWORD *)(a1 + 76) = v16;
      uint64_t v13 = *(_DWORD *)(a2 + 88);
    }

    if ((v13 & 0x200) != 0)
    {
      uint64_t v17 = *(_DWORD *)(a2 + 80);
      *(_DWORD *)(a1 + 88) |= 0x200u;
      *(_DWORD *)(a1 + 80) = v17;
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  __int128 v18 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 76) |= 4u;
  *(_DWORD *)(a1 + 28) = v18;
  uint64_t v13 = *(_DWORD *)(a2 + 76);
  if ((v13 & 8) == 0)
  {
LABEL_16:
    if ((v13 & 0x10) == 0) {
      goto LABEL_17;
    }
LABEL_24:
    *(_DWORD *)(a1 + 76) |= 0x10u;
    __int128 v20 = *(void **)(a1 + 32);
    if (!v20)
    {
      __int128 v20 = operator new(0x28uLL);
      sub_10007F6B8((uint64_t)v20);
      *(void *)(a1 + sub_100012358(v1 - 32) = v20;
    }

    uint64_t v21 = *(void *)(a2 + 32);
    if (!v21) {
      uint64_t v21 = *(void *)(qword_1008002F0 + 32);
    }
    sub_10007F70C((uint64_t)v20, v21);
    if ((*(_DWORD *)(a2 + 76) & 0x20) != 0) {
      goto LABEL_18;
    }
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 32),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 28),  (int)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }

  __int128 v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    __int128 v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 88),  a2,  a4);
  if ((*(_DWORD *)(v5 + 96) & 0x10) != 0) {
LABEL_6:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(5LL, *(void *)(v5 + 32), a2);
LABEL_7:
  if (*(int *)(v5 + 48) >= 1)
  {
    __double2 v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(void *)(*(void *)(v5 + 40) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 48));
  }

  if (*(int *)(v5 + 72) >= 1)
  {
    __double2 v8 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x64,  *(void *)(*(void *)(v5 + 64) + 8 * v8++),  a2,  a4);
    while (v8 < *(int *)(v5 + 72));
  }

  uint64_t v11 = *(void **)(v5 + 8);
  __int128 v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  double v9 = v11;
  if (v11)
  {
    if (*v9 != v9[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
    }
  }

  return this;
}

  uint64_t v11 = *(void *)(v5 + 32);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008002E0 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v11,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 64),  a2,  a4);
  __double2 v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 0x40) == 0)
  {
LABEL_11:
    if ((v7 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + sub_100012358(v1 - 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + sub_100012358(v1 - 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + sub_100012358(v1 - 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + sub_100012358(v1 - 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + sub_100012358(v1 - 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

  uint64_t v13 = *((void *)this + 5);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1008003E8 + 40);
  }
  *(_BYTE *)uint64_t v3 = 34;
  __int128 v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v13 + 40);
  if (v14 > 0x7F)
  {
    uint64_t v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v14;
    uint64_t v15 = (uint64_t)v3 + 2;
  }

  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000B8428(v13, v15, a3);
  id v5 = *((_DWORD *)this + 19);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }

  __int128 v12 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 100) |= 8u;
  *(void *)(a1 + 40) = v12;
  id v5 = *(_DWORD *)(a2 + 100);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    __int128 v14 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 100) |= 0x20u;
    *(_DWORD *)(a1 + 56) = v14;
    id v5 = *(_DWORD *)(a2 + 100);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    goto LABEL_25;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 56),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 32),  a3);
  id v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }

  uint64_t v13 = *(void *)(v5 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_100800440 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v13,  a2,  a4);
  if ((*(_DWORD *)(v5 + 100) & 0x10) != 0) {
LABEL_6:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 40),  a3);
LABEL_7:
  if (*(int *)(v5 + 56) >= 1)
  {
    __double2 v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(void *)(*(void *)(v5 + 48) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 56));
  }

  if (*(int *)(v5 + 80) >= 1)
  {
    __double2 v8 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(void *)(*(void *)(v5 + 72) + 8 * v8++),  a2,  a4);
    while (v8 < *(int *)(v5 + 80));
  }

  uint64_t v11 = *(void **)(v5 + 8);
  __int128 v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  double v9 = v11;
  if (v11)
  {
    if (*v9 != v9[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
    }
  }

  return this;
}

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + sub_100012358(v1 - 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 56),  a3);
  id v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }

        if (v9 == 4) {
          return 1LL;
        }
      }

      double v9 = TagFallback & 7;
      if (v9 != 1) {
        goto LABEL_22;
      }
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v23) & 1) == 0) {
        return 0LL;
      }
      *(void *)(a1 + 16) = v23;
      __int128 v10 = *(_DWORD *)(a1 + 36) | 1;
      *(_DWORD *)(a1 + 36) = v10;
      uint64_t v11 = (_BYTE *)*((void *)this + 1);
    }

    while ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 18);
    *((void *)this + 1) = v11 + 1;
LABEL_16:
    *(_DWORD *)(a1 + 36) = v10 | 2;
    __int128 v12 = *(void **)(a1 + 24);
    if (!v12)
    {
      __int128 v12 = operator new(0x58uLL);
      sub_1000D4184((uint64_t)v12);
      *(void *)(a1 + 24) = v12;
    }

    uint64_t v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
    }

    else
    {
      __int128 v24 = *v13;
      *((void *)this + 1) = v13 + 1;
    }

    __int128 v14 = *((_DWORD *)this + 14);
    uint64_t v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0LL;
    }
    __int128 v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v24);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    dispatch_source_t v19 = *((_DWORD *)this + 14);
    __int128 v20 = __OFSUB__(v19, 1);
    uint64_t v21 = v19 - 1;
    if (v21 < 0 == v20) {
      *((_DWORD *)this + 14) = v21;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      double result = 1LL;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }

  __int128 v14 = (unsigned int *)*((void *)this + 5);
  if (!v14) {
    __int128 v14 = *(unsigned int **)(qword_1008004C8 + 40);
  }
  *(_BYTE *)__int128 v4 = 34;
  uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[13];
  if (v15 > 0x7F)
  {
    __int128 v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v15;
    __int128 v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  __int128 v4 = sub_1000D333C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v16, a3);
  id v6 = *((_DWORD *)this + 17);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }

  __int128 v14 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 132) |= 4u;
  *(void *)(a1 + sub_100012358(v1 - 32) = v14;
  double v9 = *(_DWORD *)(a2 + 132);
  if ((v9 & 8) == 0)
  {
LABEL_16:
    if ((v9 & 0x10) == 0) {
      goto LABEL_17;
    }
LABEL_24:
    __int128 v16 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 132) |= 0x10u;
    *(void *)(a1 + 48) = v16;
    if ((*(_DWORD *)(a2 + 132) & 0x20) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_18;
  }

  __int128 v12 = *(void **)(v5 + 8);
  uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  __int128 v10 = v12;
  if (v12)
  {
    if (*v10 != v10[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, a3);
    }
  }

  return this;
}

  uint64_t v11 = *(void *)(a1 + 48);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_100800500 + 48);
  }
  __int128 v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009A980(v11, a2);
  uint64_t v13 = (int)v12;
  else {
    __int128 v14 = 1;
  }
  __int128 v4 = (v4 + v13 + v14 + 1);
  if ((*(_DWORD *)(a1 + 72) & 0x40) != 0)
  {
LABEL_28:
    uint64_t v15 = *(void *)(a1 + 56);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_100800500 + 56);
    }
    __int128 v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B94CC(v15, a2);
    uint64_t v17 = (int)v16;
    else {
      __int128 v18 = 1;
    }
    __int128 v4 = (v4 + v17 + v18 + 1);
  }

  uint64_t v13 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 88) |= 8u;
  *(void *)(a1 + 24) = v13;
  id v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    uint64_t v15 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 88) |= 0x20u;
    *(void *)(a1 + 40) = v15;
    id v5 = *(_DWORD *)(a2 + 88);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    goto LABEL_25;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(double *)(v5 + 48),  a3);
  id v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }

    if (v10 == 4) {
      return 1LL;
    }
  }

    if (v10 == 4) {
      return 1LL;
    }
  }

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + sub_100012358(v1 - 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

  uint64_t v17 = *((void *)this + 6);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_100800590 + 48);
  }
  *(_BYTE *)uint64_t v3 = 50;
  __int128 v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v17 + 40);
  if (v18 > 0x7F)
  {
    dispatch_source_t v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v18,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v18;
    dispatch_source_t v19 = (uint64_t)v3 + 2;
  }

  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000E6E20(v17, v19, a3);
  __double2 v7 = *((_DWORD *)this + 22);
  if ((v7 & 0x40) == 0)
  {
LABEL_11:
    if ((v7 & 0x80) == 0) {
      goto LABEL_12;
    }
LABEL_34:
    unint64_t v23 = *((void *)this + 8);
    if (!v23) {
      unint64_t v23 = *(void *)(qword_100800590 + 64);
    }
    *(_BYTE *)uint64_t v3 = 66;
    __int128 v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v23 + 40);
    if (v24 > 0x7F)
    {
      uint64_t v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v24,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v24;
      uint64_t v25 = (uint64_t)v3 + 2;
    }

    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000E6E20(v23, v25, a3);
    if ((*((_DWORD *)this + 22) & 0x100) != 0) {
      goto LABEL_13;
    }
    goto LABEL_14;
  }

  __int128 v12 = *(void **)(v5 + 8);
  uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  __int128 v10 = v12;
  if (v12)
  {
    if (*v10 != v10[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, a3);
    }
  }

  return this;
}

  uint64_t v13 = *(_DWORD *)(a2 + 48);
  if (v13 >= 4) {
    sub_10038C51C();
  }
  *(_DWORD *)(a1 + 60) |= 8u;
  *(_DWORD *)(a1 + 48) = v13;
  id v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    uint64_t v15 = *(_BYTE *)(a2 + 52);
    *(_DWORD *)(a1 + 60) |= 0x20u;
    *(_BYTE *)(a1 + 52) = v15;
    if ((*(_DWORD *)(a2 + 60) & 0x40) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_11;
  }

  __int128 v14 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 80) |= 0x10u;
  *(void *)(a1 + 40) = v14;
  id v5 = *(_DWORD *)(a2 + 80);
  if ((v5 & 0x20) != 0) {
    goto LABEL_23;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_24:
  __int128 v16 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 80) |= 0x40u;
  *(_DWORD *)(a1 + 52) = v16;
  id v5 = *(_DWORD *)(a2 + 80);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    id v6 = *(_DWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 80) |= 0x80u;
    *(_DWORD *)(a1 + 72) = v6;
    id v5 = *(_DWORD *)(a2 + 80);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(_DWORD *)(v5 + 72),  a2,  a4);
  if ((*(_DWORD *)(v5 + 80) & 0x100) != 0) {
LABEL_10:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(9LL, *(void *)(v5 + 64), a2);
LABEL_11:
  double v9 = *(void **)(v5 + 8);
  __double2 v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  __double2 v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(unsigned __int8 *)(v5 + 36),  (BOOL)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }

  __int128 v14 = *((void *)this + 6);
  *(_BYTE *)__int128 v4 = 41;
  *(void *)((char *)v4 + 1) = v14;
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  id v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }

  __int128 v12 = (void *)*((void *)this + 1);
  uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  __int128 v10 = v12;
  if (!v12 || *v10 == v10[1]) {
    return a2;
  }
  else {
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v11,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 40),  a3);
  id v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }

  uint64_t v11 = *(void *)(v5 + 32);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_100800658 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v11,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_26;
  }

    if (v9 == 4) {
      return 1LL;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField( this,  TagFallback,  v6,  a4) & 1) == 0) {
      return 0LL;
    }
  }

  dispatch_source_t v19 = (void *)*((void *)this + 1);
  __int128 v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v17 = v19;
  if (!v19 || *v17 == v17[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v18,  v4,  a3);
  }
}

  if ((*((_BYTE *)this + 44) & 8) != 0)
  {
    __int128 v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(_BYTE *)__int128 v4 = 32;
    if (v16 > 0x7F)
    {
      __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v16,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v16;
      __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  dispatch_source_t v19 = (void *)*((void *)this + 1);
  __int128 v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v17 = v19;
  if (!v19 || *v17 == v17[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v18,  v4,  a3);
  }
}

  __int128 v14 = *(uint64_t **)(v5 + 32);
  if (*((char *)v14 + 23) < 0)
  {
    __int128 v14 = (uint64_t *)*v14;
    uint64_t v15 = *(void *)(*(void *)(v5 + 32) + 8LL);
  }

  else
  {
    uint64_t v15 = *((unsigned __int8 *)v14 + 23);
  }

  wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v14, v15, 1LL);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(3LL, *(void *)(v5 + 32), a2);
  if ((*(_DWORD *)(v5 + 80) & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 72),  (int)a2,  a4);
LABEL_6:
  if (*(int *)(v5 + 48) >= 1)
  {
    __double2 v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(void *)(*(void *)(v5 + 40) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 48));
  }

  if ((*(_BYTE *)(v5 + 80) & 0x20) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 64),  a3);
  }
  __int128 v10 = *(void **)(v5 + 8);
  double v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  __double2 v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + sub_100012358(v1 - 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + sub_100012358(v1 - 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + sub_100012358(v1 - 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  (int)a2,  *(double *)(v4 + 72),  a3);
  if ((*(_DWORD *)(v4 + 92) & 0x100) != 0) {
LABEL_10:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  (int)a2,  *(double *)(v4 + 80),  a3);
LABEL_11:
  __double2 v8 = *(void **)(v4 + 8);
  __double2 v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  id v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(_DWORD *)(v5 + 60),  (int)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }

  if ((*((_BYTE *)this + 141) & 2) != 0)
  {
    __int128 v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
    *(_BYTE *)__int128 v4 = 80;
    if (v16 > 0x7F)
    {
      __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v16,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v16;
      __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  uint64_t v17 = *((_DWORD *)this + 35);
  if ((v17 & 0x400) != 0)
  {
    unint64_t v23 = *((void *)this + 11);
    *(_BYTE *)__int128 v4 = 90;
    else {
      __int128 v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v23 + 23);
    }
    if (v24 > 0x7F)
    {
      __int128 v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v24,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v24;
      __int128 v26 = (_DWORD)v4 + 2;
    }

    uint64_t v27 = *(char *)(v23 + 23);
    if (v27 >= 0) {
      __int128 v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23;
    }
    else {
      __int128 v28 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v23;
    }
    if (v27 >= 0) {
      uint64_t v29 = (const void *)*(unsigned __int8 *)(v23 + 23);
    }
    else {
      uint64_t v29 = (const void *)*(unsigned int *)(v23 + 8);
    }
    __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v28,  v29,  v26,  a4);
    uint64_t v17 = *((_DWORD *)this + 35);
    if ((v17 & 0x800) == 0)
    {
LABEL_28:
      if ((v17 & 0x1000) == 0) {
        goto LABEL_30;
      }
      goto LABEL_29;
    }
  }

  else if ((v17 & 0x800) == 0)
  {
    goto LABEL_28;
  }

  __int128 v30 = *((void *)this + 12);
  *(_BYTE *)__int128 v4 = 97;
  *(void *)((char *)v4 + 1) = v30;
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 35) & 0x1000) != 0)
  {
LABEL_29:
    __int128 v18 = *((void *)this + 13);
    *(_BYTE *)__int128 v4 = 105;
    *(void *)((char *)v4 + 1) = v18;
    __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  }

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + sub_100012358(v1 - 32) = v14;
    *(_DWORD *)(a1 + 44) |= 4u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

      v21.__d_.__rep_ = v20 + v18.__d_.__rep_;
      goto LABEL_23;
    }
  }

  while (v15 > (double)std::chrono::steady_clock::now().__d_.__rep_);
  if (*v10)
  {
LABEL_26:
    *(_OWORD *)a5 = *(_OWORD *)v12;
    *(_WORD *)(a5 + 16) = *(_WORD *)(v12 + 16);
    __int128 v22 = 1;
    goto LABEL_31;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
    sub_1003939B4();
  }
LABEL_30:
  __int128 v22 = 0;
  __int128 v10 = (_BYTE *)a5;
LABEL_31:
  void *v10 = 0;
  *(_BYTE *)(a5 + 18) = v22;
  if (__p)
  {
    uint64_t v25 = __p;
    operator delete(__p);
  }

  if (v27)
  {
    __int128 v28 = v27;
    operator delete(v27);
  }

  if (__lk.__owns_) {
    std::mutex::unlock(__lk.__m_);
  }
  if (v35) {
    std::mutex::unlock(v34);
  }
}

      v16.__d_.__rep_ = v15 + v13.__d_.__rep_;
      goto LABEL_23;
    }
  }

  while (std::chrono::steady_clock::now().__d_.__rep_ < v12.__d_.__rep_);
  if (*(_BYTE *)(a1 + 2485))
  {
LABEL_26:
    uint64_t v17 = sub_100005150();
    if (!*(_BYTE *)(a1 + 2485)) {
      sub_100006080();
    }
    sub_100354DE4((uint64_t)v17, (__int128 *)(a1 + 2392), v18, v19, v20, v21, v22, v23);
    *(_DWORD *)a3 = 0;
    __int128 v24 = *(_OWORD *)(a1 + 2440);
    *(_OWORD *)(a3 + 36) = *(_OWORD *)(a1 + 2424);
    *(_OWORD *)(a3 + 52) = v24;
    *(_OWORD *)(a3 + 68) = *(_OWORD *)(a1 + 2456);
    *(_OWORD *)(a3 + 82) = *(_OWORD *)(a1 + 2470);
    uint64_t v25 = *(_OWORD *)(a1 + 2408);
    *(_OWORD *)(a3 + 4) = *v6;
    *(_OWORD *)(a3 + 20) = v25;
    goto LABEL_32;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_100393A0C();
  }
  __int128 v28 = -1006;
LABEL_31:
  *(_DWORD *)a3 = v28;
  *(_BYTE *)(a3 + 4) = 0;
  *(_BYTE *)(a3 + 97) = 0;
LABEL_32:
  if (v32)
  {
    uint64_t v33 = v32;
    operator delete(v32);
  }

  uint64_t v21 = v8;
LABEL_24:

  return v21;
}

  uint64_t v29 = 2;
  v45[0] = &v29;
  __int128 v22 = sub_1001ADE4C(v8, &v29, (uint64_t)&unk_1004242F8, v45);
  dispatch_source_t v19 = sub_1001A99A4((uint64_t)(v22 + 24));
  if (!v16) {
    goto LABEL_23;
  }
LABEL_18:
  uint64_t v29 = 3;
  v45[0] = &v29;
  __int128 v20 = sub_1001ADE4C(v8, &v29, (uint64_t)&unk_1004242F8, v45);
  uint64_t v21 = sub_1001A99A4((uint64_t)(v20 + 24));
  if (v18)
  {
LABEL_19:
    void *v10 = 1;
    goto LABEL_27;
  }
}

  if (*(_BYTE *)(a1 + 72))
  {
    __int128 v12 = *(void *)(a1 + 24);
    uint64_t v11 = *(void *)(a1 + 32);
    __int128 v14 = *(void *)(a1 + 48);
    uint64_t v13 = *(void *)(a1 + 56);
    uint64_t v15 = *(void *)(a1 + 64);
    __int128 v16 = *(_DWORD *)(a1 + 40);
    if (v16 == 1)
    {
      unint64_t v23 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
      {
        __int128 v30 = 134219008;
        uint64_t v31 = v14;
        __int128 v32 = 2048;
        uint64_t v33 = v13;
        __int128 v34 = 2048;
        uint64_t v35 = v15;
        __int128 v36 = 2048;
        std::string v37 = v12;
        std::string v38 = 2048;
        unint64_t v39 = v11;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "#convertToAlgorithmFindeeData MeasuredDisplacement::INERTIAL, h1=%lf, h2=%lf, v=%lf, Enter=%lf, Applicability=%lf",  (uint8_t *)&v30,  0x34u);
      }

      *(void *)(a2 + 24) = v12;
      *(void *)(a2 + sub_100012358(v1 - 32) = v11;
      *(_DWORD *)(a2 + 40) = 1;
    }

    else
    {
      if (v16) {
        goto LABEL_37;
      }
      uint64_t v17 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
      {
        __int128 v30 = 134219008;
        uint64_t v31 = v14;
        __int128 v32 = 2048;
        uint64_t v33 = v13;
        __int128 v34 = 2048;
        uint64_t v35 = v15;
        __int128 v36 = 2048;
        std::string v37 = v12;
        std::string v38 = 2048;
        unint64_t v39 = v11;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "#convertToAlgorithmFindeeData MeasuredDisplacement::VIO, h1=%lf, h2=%lf, v=%lf, Enter=%lf, Applicability=%lf",  (uint8_t *)&v30,  0x34u);
      }

      *(void *)(a2 + 24) = v12;
      *(void *)(a2 + sub_100012358(v1 - 32) = v11;
      *(_DWORD *)(a2 + 40) = 0;
    }

    *(void *)(a2 + 48) = v14;
    *(void *)(a2 + 56) = v13;
    *(void *)(a2 + 64) = v15;
  }

  else
  {
    if (!*(_BYTE *)(a1 + 112)) {
      goto LABEL_37;
    }
    __int128 v18 = *(void *)(a1 + 80);
    dispatch_source_t v19 = *(void *)(a1 + 88);
    __int128 v20 = *(void *)(a1 + 96);
    uint64_t v21 = *(void *)(a1 + 104);
    __int128 v22 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
    {
      __int128 v30 = 134218752;
      uint64_t v31 = v20;
      __int128 v32 = 2048;
      uint64_t v33 = v21;
      __int128 v34 = 2048;
      uint64_t v35 = v18;
      __int128 v36 = 2048;
      std::string v37 = v19;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "#convertToAlgorithmFindeeData MeasuredVelocity h1=%lf, h2=%lf, Enter=%lf, Applicability=%lf",  (uint8_t *)&v30,  0x2Au);
    }

    *(void *)(a2 + 80) = v18;
    *(void *)(a2 + 88) = v19;
    __int128 v4 = (_BYTE *)(a2 + 112);
    *(void *)(a2 + 96) = v20;
    *(void *)(a2 + 104) = v21;
  }

  void *v4 = 1;
LABEL_37:
  *(void *)(a2 + 120) = *(void *)(a1 + 120);
  *(_BYTE *)(a2 + 128) = *(_BYTE *)(a1 + 128);
  if (*(_BYTE *)(a1 + 160))
  {
    __int128 v24 = *(void *)(a1 + 136);
    uint64_t v25 = *(void *)(a1 + 144);
    __int128 v26 = *(_DWORD *)(a1 + 152);
    uint64_t v27 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
    {
      __int128 v30 = 134218496;
      uint64_t v31 = v24;
      __int128 v32 = 2048;
      uint64_t v33 = v25;
      __int128 v34 = 1024;
      LODWORD(v35) = v26;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "#convertToAlgorithmFindeeData LocationData northerly=%lf, easterly=%lf, unc=%u",  (uint8_t *)&v30,  0x1Cu);
    }

    *(void *)(a2 + 136) = v24;
    *(void *)(a2 + 144) = v25;
    *(_DWORD *)(a2 + 152) = v26;
    *(_BYTE *)(a2 + 160) = 1;
  }

  if (*(_BYTE *)(a1 + 169)) {
    __int128 v28 = *(_BYTE *)(a1 + 168) == 0;
  }
  else {
    __int128 v28 = 1;
  }
  uint64_t v29 = !v28;
  *(_WORD *)(a2 + 168) = v29 | 0x100;
}

    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472LL;
    v27[2] = sub_10024E98C;
    void v27[3] = &unk_1007B83E8;
    v27[4] = v5;
    __int128 v28 = var2;
    -[NIServerNearbyAccessoryRangingService _relayToClientsOfUWBSessionId:blockToRelay:]( self,  "_relayToClientsOfUWBSessionId:blockToRelay:",  v6,  v27);
    goto LABEL_23;
  }

  objc_msgSend( v15,  "setRangingRetryCount:",  (objc_msgSend(v15, "rangingRetryCount") + 1));
  __int128 v16 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v17 = [v15 rangingRetryCount];
    LODWORD(buf) = 67109376;
    HIDWORD(buf) = v17;
    unint64_t v39 = 1024;
    LODWORD(v40) = 8;
    _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "#accessory-service,Retry ranging (%d of %d)",  (uint8_t *)&buf,  0xEu);
  }

  __int128 v18 = (void *)objc_claimAutoreleasedReturnValue([v15 rangingRetryTimer]);
  dispatch_source_t v19 = v18 == 0LL;

  if (!v19)
  {
    __int128 v20 = (dispatch_source_s *)objc_claimAutoreleasedReturnValue([v15 rangingRetryTimer]);
    dispatch_source_cancel(v20);

    [v15 setRangingRetryTimer:0];
  }

  uint64_t v21 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  (dispatch_queue_t)self->_queue);
  [v15 setRangingRetryTimer:v21];

  __int128 v22 = (dispatch_source_s *)objc_claimAutoreleasedReturnValue([v15 rangingRetryTimer]);
  unint64_t v23 = dispatch_time(0LL, 500000000LL);
  dispatch_source_set_timer(v22, v23, 0xFFFFFFFFFFFFFFFFLL, 0x989680uLL);

  objc_initWeak(&buf, self);
  __int128 v24 = (dispatch_source_s *)objc_claimAutoreleasedReturnValue([v15 rangingRetryTimer]);
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472LL;
  handler[2] = sub_10024E7C0;
  handler[3] = &unk_1007B8410;
  objc_copyWeak(&v30, &buf);
  uint64_t v31 = v6;
  __int128 v32 = v5 | 0x200000000LL;
  uint64_t v33 = var2;
  dispatch_source_set_event_handler(v24, handler);

  uint64_t v25 = (dispatch_object_s *)objc_claimAutoreleasedReturnValue([v15 rangingRetryTimer]);
  dispatch_resume(v25);

  objc_destroyWeak(&v30);
  objc_destroyWeak(&buf);
LABEL_23:
}

      sub_10015B79C();
    }
  }

  else
  {
    if (!v14.__r_.__value_.__s.__size_) {
      goto LABEL_19;
    }
    __int128 v4 = off_1007F4760[0];
    id v5 = strlen(off_1007F4760[0]);
    if (v5 == v14.__r_.__value_.__s.__size_)
    {
      size = v5;
      if (v5 != -1LL)
      {
        __double2 v7 = &v14;
        goto LABEL_11;
      }

      goto LABEL_22;
    }
  }

  unint64_t v83 = 0LL;
  uint64_t v82 = 0LL;
  uint64_t v84 = 0LL;
  sub_1002D4D7C((uint64_t *)&v82, 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 4));
  sub_1002D4EA0(v17, (uint64_t)v95, (double **)a3, (uint64_t *)&v82);
  unint64_t v79 = 0x400000004LL;
  uint64_t v77 = &off_1007BC860;
  uint64_t v78 = xmmword_10042DEB0;
  unint64_t v80 = v81;
  sub_1002CAEDC(&v77, 4, 4);
  __int128 v18 = 0.0;
  sub_1002CAF28((uint64_t)&v77, 0.0);
  dispatch_source_t v19 = v82;
  for (uint64_t i = v83; v19 != i; v19 = (double *)(v22 + 144))
  {
    uint64_t v21 = (uint64_t)(v19 + 10);
    unint64_t v23 = *v19;
    __int128 v22 = (uint64_t)(v19 + 1);
    unint64_t v74 = 0x400000004LL;
    unint64_t v72 = &off_1007BC860;
    unint64_t v73 = xmmword_10042DEB0;
    unint64_t v75 = v76;
    sub_1002CB548(v21, v22, (uint64_t)&v72);
    unint64_t v98 = 0x400000004LL;
    __int128 v96 = &off_1007BC860;
    uint64_t v97 = xmmword_10042DEB0;
    unint64_t v99 = v100;
    sub_1002CC25C((uint64_t)&v77, (uint64_t)&v72, (uint64_t)&v96);
    sub_1002CBDC8((uint64_t)&v77, (uint64_t)&v96);
    __int128 v18 = v18 + v23 * v23;
  }

  __int128 v24 = (double *)sub_1002CB40C((uint64_t)&v77, 3, 3);
  *__int128 v24 = *v24 + 0.101321184;
  unint64_t v74 = 0x400000004LL;
  unint64_t v72 = &off_1007BC860;
  unint64_t v73 = xmmword_10042DEB0;
  unint64_t v75 = v76;
  uint64_t v54 = 0x100000004LL;
  uint64_t v52 = &off_1007BC980;
  __int128 v53 = xmmword_10042DB80;
  __int128 v55 = v56;
  unint64_t v98 = 0x100000010LL;
  __int128 v96 = &off_1007BCA08;
  uint64_t v97 = xmmword_10042DEC0;
  unint64_t v99 = v100;
  sub_1002D9BF0((uint64_t)&v77, (uint64_t)&v52, (uint64_t)&v96, (uint64_t)&v72);
  uint64_t v69 = 0x100000003LL;
  int64_t v67 = &off_1007BC4C0;
  int64_t v68 = xmmword_10042DB70;
  unint64_t v70 = &v71;
  unint64_t v98 = 0x400000003LL;
  __int128 v96 = &off_1007BC8A8;
  uint64_t v97 = xmmword_10042DE80;
  unint64_t v99 = v100;
  sub_100319DC0((uint64_t)v95, a1 + 160, (uint64_t)&v67, (uint64_t)&v96);
  uint64_t v64 = 0x100000003LL;
  unint64_t v62 = &off_1007BC4C0;
  uint64_t v63 = xmmword_10042DB70;
  uint64_t v65 = &v66;
  uint64_t v59 = 0x300000003LL;
  id v57 = &off_1007BC508;
  uint64_t v58 = xmmword_10042DE90;
  id v60 = &v61;
  uint64_t v54 = 0x100000003LL;
  uint64_t v52 = &off_1007BC4C0;
  __int128 v53 = xmmword_10042DB70;
  __int128 v55 = v56;
  sub_1002CB44C((uint64_t)&v67, a1 + 96, (uint64_t)&v52);
  sub_10031A418((uint64_t)&v52, (uint64_t)&v62, (uint64_t)&v57);
  uint64_t v54 = 0x400000003LL;
  uint64_t v52 = &off_1007BC8A8;
  __int128 v53 = xmmword_10042DE80;
  __int128 v55 = v56;
  sub_1002CB548((uint64_t)&v57, (uint64_t)&v96, (uint64_t)&v52);
  uint64_t v44 = 0x400000003LL;
  unint64_t v42 = &off_1007BC8A8;
  int v43 = xmmword_10042DE80;
  __int128 v45 = v46;
  sub_1002CB548((uint64_t)&v96, (uint64_t)&v72, (uint64_t)&v42);
  unint64_t v39 = 0x300000004LL;
  __int128 v40 = 0LL;
  std::string v37 = 0LL;
  std::string v38 = 0LL;
  __int128 v36 = &off_1007BC8F0;
  if (DWORD1(v97) > 4)
  {
    __int128 v26 = "this->max_num_rows_ >= num_rows";
    uint64_t v27 = 422;
    goto LABEL_34;
  }

  if (v97 >= 4)
  {
    __int128 v26 = "this->max_num_cols_ >= num_cols";
    uint64_t v27 = 423;
LABEL_34:
    __assert_rtn("SetMatrixSize", "cnmatrixbase.h", v27, v26);
  }

  std::string v37 = __PAIR64__(v97, DWORD1(v97));
  LODWORD(v38) = v97 * DWORD1(v97);
  HIDWORD(v38) = DWORD1(v97);
  __int128 v40 = v41;
  sub_1002CB364((uint64_t)&v96, &v36);
  id v49 = 0x300000003LL;
  char v47 = &off_1007BC508;
  __int128 v48 = xmmword_10042DE90;
  id v50 = &v51;
  sub_1002CB548((uint64_t)&v42, (uint64_t)&v36, (uint64_t)&v47);
  uint64_t v44 = 0x400000003LL;
  unint64_t v42 = &off_1007BC8A8;
  int v43 = xmmword_10042DE80;
  __int128 v45 = v46;
  sub_1002CB548((uint64_t)&v52, (uint64_t)&v72, (uint64_t)&v42);
  unint64_t v39 = 0x300000004LL;
  __int128 v40 = 0LL;
  std::string v37 = 0LL;
  std::string v38 = 0LL;
  __int128 v36 = &off_1007BC8F0;
  if (DWORD1(v53) > 4)
  {
    __int128 v28 = "this->max_num_rows_ >= num_rows";
    uint64_t v29 = 422;
    goto LABEL_37;
  }

  if (v53 >= 4)
  {
    __int128 v28 = "this->max_num_cols_ >= num_cols";
    uint64_t v29 = 423;
LABEL_37:
    __assert_rtn("SetMatrixSize", "cnmatrixbase.h", v29, v28);
  }

  std::string v37 = __PAIR64__(v53, DWORD1(v53));
  LODWORD(v38) = v53 * DWORD1(v53);
  HIDWORD(v38) = DWORD1(v53);
  __int128 v40 = v41;
  sub_1002CB364((uint64_t)&v52, &v36);
  uint64_t v33 = 0x300000003LL;
  uint64_t v31 = &off_1007BC508;
  __int128 v32 = xmmword_10042DE90;
  __int128 v34 = &v35;
  sub_1002CB548((uint64_t)&v42, (uint64_t)&v36, (uint64_t)&v31);
  uint64_t v25 = (v16 & 1) != 0 || v30 <= *(_DWORD *)(a1 + 576);
  *(_BYTE *)a4 = v25;
  sub_1002D61D4(a4 + 8, (uint64_t)v95);
  sub_1002D5F00(a4 + 80, (uint64_t)&v67);
  sub_1002D5F00(a4 + 144, (uint64_t)&v62);
  sub_1002D63CC(a4 + 208, (uint64_t)&v72);
  sub_1002D606C(a4 + 376, (uint64_t)&v47);
  sub_1002D606C(a4 + 488, (uint64_t)&v31);
  *(double *)(a4 + 600) = v18;
  *(_DWORD *)(a4 + 608) = 1;
  __int128 v96 = (uint64_t (**)())&v82;
  sub_1002D98CC((void ***)&v96);
}

    uint64_t v31 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      __int128 v32 = *(void *)(*(void *)(*(void *)(a1 + 200) + ((*(void *)(a1 + 224) >> 2) & 0x3FFFFFFFFFFFFFF8LL))
                      + ((*(void *)(a1 + 224) & 0x1FLL) << 7));
      *(_DWORD *)pthread_attr_t buf = 134218240;
      *(double *)&uint8_t buf[4] = v14;
      *(_WORD *)&buf[12] = 2048;
      *(void *)&buf[14] = v32;
      _os_log_error_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_ERROR,  "#findalgs-rangeposeinterpolator,Measurement at %f s earlier than the first pose in history at %f s - skipping in terpolation and removing range measurement",  buf,  0x16u);
    }

    goto LABEL_43;
  }

  if (*(void *)(v7 + ((v6 >> 2) & 0x3FFFFFFFFFFFFFF8LL)) + ((v6 & 0x1F) << 7) == v10) {
    goto LABEL_22;
  }
  __int128 v24 = *(void *)(v7 + (((*(void *)(a1 + 232) + v6) >> 2) & 0x3FFFFFFFFFFFFFF8LL))
      + (((*(void *)(a1 + 232) + v6) & 0x1F) << 7);
LABEL_19:
  if (v24 != v10)
  {
    uint64_t v25 = v10 - *(void *)v9;
    __int128 v26 = v25 >> 7;
    if (v25 < 129)
    {
      __int128 v36 = 32 - v26;
      __int128 v28 = &v9[-8 * (v36 >> 5)];
      uint64_t v29 = *(void *)v28;
      __int128 v30 = ~(_DWORD)v36 & 0x1FLL;
    }

    else
    {
      uint64_t v27 = v26 - 1;
      __int128 v28 = &v9[8 * (v27 >> 5)];
      uint64_t v29 = *(void *)v28;
      __int128 v30 = v27 & 0x1F;
    }

    std::string v37 = v29 + (v30 << 7);
    std::string v38 = (v14 - *(double *)v37) / (*(double *)v10 - *(double *)v37);
    uint64_t v91 = v38;
    unint64_t v88 = *(float32x4_t *)(v37 + 64);
    *(double *)v39.i64 = sub_1002C94C0( *(int8x16_t *)(v37 + 16),  *(int8x16_t *)(v37 + 32),  *(__n128 *)(v37 + 48),  *(double *)(v37 + 64),  a3);
    __int128 v89 = v39;
    unint64_t v87 = *(float32x4_t *)(v10 + 64);
    *(double *)v41.i64 = sub_1002C94C0( *(int8x16_t *)(v10 + 16),  *(int8x16_t *)(v10 + 32),  *(__n128 *)(v10 + 48),  *(double *)(v10 + 64),  v40);
    unint64_t v42 = (int8x16_t)vmulq_f32(v89, v41);
    int v43 = (float32x4_t)vextq_s8(v42, v42, 8uLL);
    *(float32x2_t *)v42.i8 = vadd_f32(*(float32x2_t *)v42.i8, *(float32x2_t *)v43.f32);
    *(float *)v42.i32 = vaddv_f32(*(float32x2_t *)v42.i8);
    v43.i32[0] = 0;
    uint64_t v44 = (float32x4_t)vbslq_s8( (int8x16_t)vdupq_lane_s32( (int32x2_t)*(_OWORD *)&vmvnq_s8((int8x16_t)vcgeq_f32((float32x4_t)v42, v43)),  0),  (int8x16_t)vnegq_f32(v41),  (int8x16_t)v41);
    __int128 v45 = 1.0;
    unsigned __int8 v46 = 1.0 - v91;
    char v47 = vsubq_f32(v89, v44);
    __int128 v48 = (int8x16_t)vmulq_f32(v47, v47);
    uint64_t v86 = v44;
    id v49 = vaddq_f32(v89, v44);
    id v50 = (int8x16_t)vmulq_f32(v49, v49);
    v53.f32[0] = atan2f( sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v48.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL)))),  sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v50.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL)))));
    uint64_t v51 = v53.f32[0] + v53.f32[0];
    uint64_t v52 = (float)(v53.f32[0] + v53.f32[0]) == 0.0;
    v53.i32[0] = 1.0;
    if (!v52) {
      v53.f32[0] = sinf(v51) / v51;
    }
    uint64_t v54 = vrecpe_f32(v53);
    __int128 v55 = vmul_f32(v54, vrecps_f32(v53, v54));
    uint64_t v56 = vrecps_f32(v53, v55);
    LODWORD(v57) = vmul_f32(v55, v56).u32[0];
    if ((float)(v46 * v51) != 0.0)
    {
      uint64_t v84 = v57;
      v56.f32[0] = sinf(v46 * v51);
      id v57 = v84;
      __int128 v45 = v56.f32[0] / (float)(v46 * v51);
    }

    v56.f32[0] = v46 * (float)(v57 * v45);
    uint64_t v58 = (float32x4_t)vdupq_lane_s32((int32x2_t)v56, 0);
    uint64_t v59 = v91;
    id v60 = v51 * v91;
    unint64_t v61 = 1.0;
    if (v60 != 0.0)
    {
      unint64_t v83 = v58;
      uint64_t v85 = v57;
      unint64_t v62 = sinf(v60);
      uint64_t v58 = v83;
      id v57 = v85;
      uint64_t v59 = v91;
      unint64_t v61 = v62 / v60;
    }

    uint64_t v63 = vmlaq_f32(vmulq_n_f32(v86, (float)(v57 * v61) * v59), v89, v58);
    uint64_t v64 = (int8x16_t)vmulq_f32(v63, v63);
    uint64_t v65 = vadd_f32(*(float32x2_t *)v64.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL));
    if (vaddv_f32(v65) == 0.0)
    {
      int64_t v66 = (int8x16_t)xmmword_10042DB60;
    }

    else
    {
      int64_t v67 = vadd_f32(v65, (float32x2_t)vdup_lane_s32((int32x2_t)v65, 1));
      int64_t v68 = vrsqrte_f32(v67);
      uint64_t v69 = vmul_f32(v68, vrsqrts_f32(v67, vmul_f32(v68, v68)));
      int64_t v66 = (int8x16_t)vmulq_n_f32(v63, vmul_f32(v69, vrsqrts_f32(v67, vmul_f32(v69, v69))).f32[0]);
    }

    unint64_t v70 = (int8x16_t)vmlaq_n_f32(v88, vsubq_f32(v87, v88), v59);
    unint64_t v71 = *(float *)v70.i32;
    unint64_t v72 = *(float *)v66.i32;
    __int128 v90 = vcvtq_f64_f32((float32x2_t)*(_OWORD *)&vextq_s8(v66, v66, 4uLL));
    unint64_t v92 = vcvtq_f64_f32((float32x2_t)*(_OWORD *)&vextq_s8(v70, v70, 4uLL));
    unint64_t v73 = *(float *)&v66.i32[3];
    unint64_t v74 = (os_log_s *)qword_1008000A0;
    unint64_t v75 = v15;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)pthread_attr_t buf = 134220032;
      *(double *)&uint8_t buf[4] = v75;
      *(_WORD *)&buf[12] = 2048;
      *(double *)&buf[14] = v14;
      unint64_t v94 = 2048;
      uint64_t v95 = v71;
      __int128 v96 = 2048;
      uint64_t v97 = v92.f64[0];
      unint64_t v98 = 2048;
      unint64_t v99 = v92.f64[1];
      unsigned __int16 v100 = 2048;
      unint64_t v101 = v72;
      __int128 v102 = 2048;
      __int128 v103 = v90.f64[0];
      __int128 v104 = 2048;
      __int128 v105 = v90.f64[1];
      __int128 v106 = 2048;
      __int128 v107 = v73;
      _os_log_impl( (void *)&_mh_execute_header,  v74,  OS_LOG_TYPE_DEFAULT,  "#findalgs-rangeposeinterpolator,Passing range measurement to batch filter and range filter, range: %0.2f m, time stamp: %f s, device position:[%0.2f,%0.2f,%0.2f], device quat:[%0.2f,%0.2f,%0.2f,%0.2f]",  buf,  0x5Cu);
    }

    *(double *)a2 = v14;
    *(double *)(a2 + 8) = v75;
    *(double *)(a2 + 16) = v71;
    *(float64x2_t *)(a2 + 24) = v92;
    *(double *)(a2 + 40) = v72;
    *(float64x2_t *)(a2 + 48) = v90;
    *(double *)(a2 + 64) = v73;
    *(_BYTE *)(a2 + 72) = 1;
    __int128 v76 = *(void *)(a1 + 200);
    uint64_t v77 = (char *)(v76 + 8LL * (*(void *)(a1 + 224) >> 5));
    if (*(void *)(a1 + 208) == v76) {
      uint64_t v78 = 0LL;
    }
    else {
      uint64_t v78 = *(void *)v77 + ((*(void *)(a1 + 224) & 0x1FLL) << 7);
    }
    sub_1002CA580((void *)(a1 + 192), v77, v78, v28, v37);
    unint64_t v79 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v80 = *(void *)(a1 + 200);
      int64_t v81 = *(void *)(*(void *)(v80 + ((*(void *)(a1 + 224) >> 2) & 0x3FFFFFFFFFFFFFF8LL))
                      + ((*(void *)(a1 + 224) & 0x1FLL) << 7));
      uint64_t v82 = *(void *)(*(void *)(v80
      *(_DWORD *)pthread_attr_t buf = 134218240;
      *(void *)&uint8_t buf[4] = v81;
      *(_WORD *)&buf[12] = 2048;
      *(void *)&buf[14] = v82;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v79,  OS_LOG_TYPE_DEBUG,  "#findalgs-rangeposeinterpolator,Pose history now between %f s and %f s",  buf,  0x16u);
    }

  unint64_t v70 = 0LL;
  uint64_t v69 = 0LL;
  unint64_t v71 = 0LL;
  int64_t v67 = 0LL;
  int64_t v66 = 0LL;
  int64_t v68 = 0LL;
  sub_1002EA658((uint64_t *)&v69, 0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 4));
  sub_1002EBEE8((uint64_t *)&v66, 0x4EC4EC4EC4EC4EC5LL * (((char *)a4[1] - (char *)*a4) >> 4));
  sub_1002EC000(v18, (uint64_t)v82, (double **)a3, a4, (uint64_t *)&v69, (uint64_t *)&v66);
  uint64_t v85 = 0x300000003LL;
  unint64_t v83 = &off_1007BC508;
  uint64_t v84 = xmmword_10042DE90;
  uint64_t v86 = v87;
  sub_1002CAEDC(&v83, 3, 3);
  dispatch_source_t v19 = 0.0;
  sub_1002CAF28((uint64_t)&v83, 0.0);
  __int128 v20 = v69;
  for (uint64_t i = v70; v20 != i; v20 = (double *)(v23 + 128))
  {
    __int128 v22 = (uint64_t)(v20 + 9);
    __int128 v24 = *v20;
    unint64_t v23 = (uint64_t)(v20 + 1);
    uint64_t v58 = 0x300000003LL;
    uint64_t v56 = (void **)&off_1007BC508;
    id v57 = xmmword_10042DE90;
    uint64_t v59 = v60;
    sub_1002CB548(v22, v23, (uint64_t)&v56);
    uint64_t v63 = 0x300000003LL;
    unint64_t v61 = &off_1007BC508;
    unint64_t v62 = xmmword_10042DE90;
    uint64_t v64 = v65;
    sub_1002CC25C((uint64_t)&v83, (uint64_t)&v56, (uint64_t)&v61);
    sub_1002CBDC8((uint64_t)&v83, (uint64_t)&v61);
    dispatch_source_t v19 = v19 + v24 * v24;
  }

  uint64_t v25 = v66;
  __int128 v26 = v67;
  if (v66 != v67)
  {
    do
    {
      uint64_t v27 = *v25;
      __int128 v28 = v25[1];
      uint64_t v58 = 0x300000003LL;
      uint64_t v56 = (void **)&off_1007BC508;
      id v57 = xmmword_10042DE90;
      uint64_t v29 = v25 + 2;
      uint64_t v59 = v60;
      sub_1002CB548((uint64_t)(v25 + 13), (uint64_t)(v25 + 2), (uint64_t)&v56);
      uint64_t v63 = 0x300000003LL;
      unint64_t v61 = &off_1007BC508;
      unint64_t v62 = xmmword_10042DE90;
      uint64_t v64 = v65;
      sub_1002CC25C((uint64_t)&v83, (uint64_t)&v56, (uint64_t)&v61);
      sub_1002CBDC8((uint64_t)&v83, (uint64_t)&v61);
      dispatch_source_t v19 = v19 + v28 * v28 + v27 * v27;
      uint64_t v25 = v29 + 22;
    }

    while (v29 + 22 != v26);
  }

  sub_1002D606C((uint64_t)&v61, (uint64_t)&v83);
  __int128 v53 = 0LL;
  uint64_t v54 = 0LL;
  __int128 v55 = 0LL;
  id v50 = 0LL;
  uint64_t v51 = 0LL;
  uint64_t v52 = 0LL;
  sub_1002EA658(&v53, 0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 4));
  sub_1002EBEE8(&v50, 0x4EC4EC4EC4EC4EC5LL * (((char *)a4[1] - (char *)*a4) >> 4));
  uint64_t v58 = 0x100000003LL;
  uint64_t v56 = (void **)&off_1007BC4C0;
  id v57 = xmmword_10042DB70;
  uint64_t v59 = v60;
  sub_1002CB44C((uint64_t)v82, a1 + 192, (uint64_t)&v56);
  sub_1003196DC((uint64_t)&v56, (uint64_t)v49);
  sub_1002EA770(v30, (uint64_t)v49, a1 + 192, (double **)a3, a4, &v53, &v50);
  uint64_t v58 = 0x300000003LL;
  uint64_t v56 = (void **)&off_1007BC508;
  id v57 = xmmword_10042DE90;
  uint64_t v59 = v60;
  sub_1002CAEDC(&v56, 3, 3);
  sub_1002CAF28((uint64_t)&v56, 0.0);
  uint64_t v31 = v53;
  for (j = v54; v31 != j; v31 += 136LL)
  {
    unint64_t v41 = 0x300000003LL;
    unint64_t v39 = &off_1007BC508;
    __int128 v40 = xmmword_10042DE90;
    unint64_t v42 = v43;
    sub_1002CB548(v31 + 72, v31 + 8, (uint64_t)&v39);
    unsigned __int8 v46 = 0x300000003LL;
    uint64_t v44 = &off_1007BC508;
    __int128 v45 = xmmword_10042DE90;
    char v47 = v48;
    sub_1002CC25C((uint64_t)&v56, (uint64_t)&v39, (uint64_t)&v44);
    sub_1002CBDC8((uint64_t)&v56, (uint64_t)&v44);
  }

  uint64_t v33 = v50;
  for (k = v51; v33 != k; v33 += 192LL)
  {
    unint64_t v41 = 0x300000003LL;
    unint64_t v39 = &off_1007BC508;
    __int128 v40 = xmmword_10042DE90;
    unint64_t v42 = v43;
    sub_1002CB548(v33 + 104, v33 + 16, (uint64_t)&v39);
    unsigned __int8 v46 = 0x300000003LL;
    uint64_t v44 = &off_1007BC508;
    __int128 v45 = xmmword_10042DE90;
    char v47 = v48;
    sub_1002CC25C((uint64_t)&v56, (uint64_t)&v39, (uint64_t)&v44);
    sub_1002CBDC8((uint64_t)&v56, (uint64_t)&v44);
  }

  sub_1002D606C((uint64_t)&v44, (uint64_t)&v56);
  uint64_t v35 = (v17 & 1) != 0 || v9 <= *(_DWORD *)(a1 + 936);
  __int128 v36 = *a4;
  std::string v37 = a4[1];
  *(_BYTE *)a5 = v35;
  sub_1002D5F00(a5 + 8, (uint64_t)v82);
  sub_1002D5F00(a5 + 72, (uint64_t)v49);
  sub_1002D606C(a5 + 136, (uint64_t)&v61);
  sub_1002D606C(a5 + 248, (uint64_t)&v44);
  *(double *)(a5 + 360) = v19;
  *(_DWORD *)(a5 + 368) = v36 == v37;
  uint64_t v56 = (void **)&v50;
  sub_1002EDCD8(&v56);
  uint64_t v56 = (void **)&v53;
  sub_1002EDC94(&v56);
  unint64_t v83 = (uint64_t (**)())&v66;
  sub_1002EDCD8((void ***)&v83);
  unint64_t v83 = (uint64_t (**)())&v69;
  sub_1002EDC94((void ***)&v83);
}

        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
          sub_1003AAEA4();
        }
        return;
      }
    }

    else if (*(_BYTE *)(a1 + 24))
    {
      uint64_t v15 = *(double **)a1;
      __int128 v16 = *(double **)(a1 + 8);
      while (v15 != v16)
      {
        sub_1003001A8(a1, (double *)a2, v15, (double *)&v35, (double *)&v32, 1);
        v15 += 12;
      }

      goto LABEL_22;
    }

      if (!*(_BYTE *)(a1 + 8040))
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
          sub_1003AB418();
        }
        goto LABEL_45;
      }

      double v9 = sub_100307484(*(double *)(a2 + 8), 2.0, v4, (void *)(a1 + 8048));
      __int128 v10 = 8568LL;
      if (!*(_BYTE *)(a1 + 40)) {
        __int128 v10 = 8552LL;
      }
      sub_100307484(*(double *)(a2 + 8), *(double *)(a1 + v10), v9, (void *)(a1 + 8096));
      if (!*(_BYTE *)(a1 + 8040)) {
        sub_100006080();
      }
      uint64_t v11 = *(float *)(a2 + 16);
      if (*(float *)(a1 + 7872) - v11 > 1.0)
      {
        __int128 v12 = *(void *)(a1 + 8088);
        if (v12)
        {
          uint64_t v13 = *(void *)(a1 + 8056);
          if (*(void *)(a1 + 8064) == v13
            || (__int128 v14 = *(void *)(a1 + 8080),
                uint64_t v15 = (void *)(v13 + 8 * (v14 / 0x16)),
                __int128 v16 = *v15 + 184 * (v14 % 0x16),
                uint64_t v17 = *(void *)(v13 + 8 * ((v14 + v12) / 0x16)) + 184 * ((v14 + v12) % 0x16),
                v16 == v17))
          {
            dispatch_source_t v19 = 0;
          }

          else
          {
            do
            {
              __int128 v18 = *(float *)(v16 + 16) - v11;
              dispatch_source_t v19 = v18 <= 1.0;
              if (v18 <= 1.0) {
                break;
              }
              v16 += 184LL;
              if (v16 - *v15 == 4048)
              {
                __int128 v20 = v15[1];
                ++v15;
                __int128 v16 = v20;
              }
            }

            while (v16 != v17);
          }

          *(_BYTE *)(a1 + 8144) = v19;
        }

        else
        {
          *(_BYTE *)(a1 + 8144) = 0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
            sub_1003AB444();
          }
        }

        goto LABEL_45;
      }

    uint64_t v35 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      __int128 v36 = *(void *)(*(void *)(v11 + 8 * v9) + ((v8 & 0x1F) << 7));
      *(_DWORD *)pthread_attr_t buf = 134218240;
      *(double *)&uint8_t buf[4] = v17;
      *(_WORD *)&buf[12] = 2048;
      *(void *)&buf[14] = v36;
      _os_log_error_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_ERROR,  "#sa_algo_moving_findee,Measurement at %f s earlier than the first pose in history at %f s - skipping interpolati on and removing range measurement",  buf,  0x16u);
    }

    goto LABEL_43;
  }

  if (*(void *)(v11 + 8 * v9) + ((v8 & 0x1F) << 7) == v13) {
    goto LABEL_22;
  }
  uint64_t v27 = *(void *)(a1 + 408);
  __int128 v28 = *(void *)(v11 + (((v27 + v8) >> 2) & 0x3FFFFFFFFFFFFFF8LL)) + (((v27 + v8) & 0x1F) << 7);
LABEL_19:
  if (v28 != v13)
  {
    uint64_t v29 = v13 - *(void *)v12;
    __int128 v30 = v29 >> 7;
    if (v29 < 129)
    {
      unint64_t v39 = 32 - v30;
      __int128 v32 = &v12[-8 * (v39 >> 5)];
      uint64_t v33 = *(void *)v32;
      __int128 v34 = ~(_DWORD)v39 & 0x1FLL;
    }

    else
    {
      uint64_t v31 = v30 - 1;
      __int128 v32 = &v12[8 * (v31 >> 5)];
      uint64_t v33 = *(void *)v32;
      __int128 v34 = v31 & 0x1F;
    }

    __int128 v40 = v33 + (v34 << 7);
    unint64_t v41 = (v17 - *(double *)v40) / (*(double *)v13 - *(double *)v40);
    unint64_t v94 = v41;
    __int128 v90 = *(float32x4_t *)(v40 + 64);
    *(double *)v42.i64 = sub_1002C94C0( *(int8x16_t *)(v40 + 16),  *(int8x16_t *)(v40 + 32),  *(__n128 *)(v40 + 48),  *(double *)(v40 + 64),  a6);
    unint64_t v92 = v42;
    __int128 v89 = *(float32x4_t *)(v13 + 64);
    *(double *)v44.i64 = sub_1002C94C0( *(int8x16_t *)(v13 + 16),  *(int8x16_t *)(v13 + 32),  *(__n128 *)(v13 + 48),  *(double *)(v13 + 64),  v43);
    __int128 v45 = (int8x16_t)vmulq_f32(v92, v44);
    unsigned __int8 v46 = (float32x4_t)vextq_s8(v45, v45, 8uLL);
    *(float32x2_t *)v45.i8 = vadd_f32(*(float32x2_t *)v45.i8, *(float32x2_t *)v46.f32);
    *(float *)v45.i32 = vaddv_f32(*(float32x2_t *)v45.i8);
    v46.i32[0] = 0;
    char v47 = (float32x4_t)vbslq_s8( (int8x16_t)vdupq_lane_s32( (int32x2_t)*(_OWORD *)&vmvnq_s8((int8x16_t)vcgeq_f32((float32x4_t)v45, v46)),  0),  (int8x16_t)vnegq_f32(v44),  (int8x16_t)v44);
    __int128 v48 = 1.0;
    id v49 = 1.0 - v94;
    id v50 = vsubq_f32(v92, v47);
    uint64_t v51 = (int8x16_t)vmulq_f32(v50, v50);
    uint64_t v91 = v47;
    uint64_t v52 = vaddq_f32(v92, v47);
    __int128 v53 = (int8x16_t)vmulq_f32(v52, v52);
    v56.f32[0] = atan2f( sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v51.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v51, v51, 8uLL)))),  sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v53.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v53, v53, 8uLL)))));
    uint64_t v54 = v56.f32[0] + v56.f32[0];
    __int128 v55 = (float)(v56.f32[0] + v56.f32[0]) == 0.0;
    v56.i32[0] = 1.0;
    if (!v55) {
      v56.f32[0] = sinf(v54) / v54;
    }
    id v57 = vrecpe_f32(v56);
    uint64_t v58 = vmul_f32(v57, vrecps_f32(v56, v57));
    uint64_t v59 = vrecps_f32(v56, v58);
    LODWORD(v60) = vmul_f32(v58, v59).u32[0];
    if ((float)(v49 * v54) != 0.0)
    {
      unint64_t v87 = v60;
      v59.f32[0] = sinf(v49 * v54);
      id v60 = v87;
      __int128 v48 = v59.f32[0] / (float)(v49 * v54);
    }

    v59.f32[0] = v49 * (float)(v60 * v48);
    unint64_t v61 = (float32x4_t)vdupq_lane_s32((int32x2_t)v59, 0);
    unint64_t v62 = v94;
    uint64_t v63 = v54 * v94;
    uint64_t v64 = 1.0;
    if (v63 != 0.0)
    {
      uint64_t v86 = v61;
      unint64_t v88 = v60;
      uint64_t v65 = sinf(v63);
      unint64_t v61 = v86;
      id v60 = v88;
      unint64_t v62 = v94;
      uint64_t v64 = v65 / v63;
    }

    int64_t v66 = vmlaq_f32(vmulq_n_f32(v91, (float)(v60 * v64) * v62), v92, v61);
    int64_t v67 = (int8x16_t)vmulq_f32(v66, v66);
    int64_t v68 = vadd_f32(*(float32x2_t *)v67.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v67, v67, 8uLL));
    if (vaddv_f32(v68) == 0.0)
    {
      uint64_t v69 = (int8x16_t)xmmword_10042DB60;
    }

    else
    {
      unint64_t v70 = vadd_f32(v68, (float32x2_t)vdup_lane_s32((int32x2_t)v68, 1));
      unint64_t v71 = vrsqrte_f32(v70);
      unint64_t v72 = vmul_f32(v71, vrsqrts_f32(v70, vmul_f32(v71, v71)));
      uint64_t v69 = (int8x16_t)vmulq_n_f32(v66, vmul_f32(v72, vrsqrts_f32(v70, vmul_f32(v72, v72))).f32[0]);
    }

    unint64_t v73 = (int8x16_t)vmlaq_n_f32(v90, vsubq_f32(v89, v90), v62);
    unint64_t v74 = *(float *)v73.i32;
    unint64_t v75 = *(float *)v69.i32;
    uint64_t v93 = vcvtq_f64_f32((float32x2_t)*(_OWORD *)&vextq_s8(v69, v69, 4uLL));
    uint64_t v95 = vcvtq_f64_f32((float32x2_t)*(_OWORD *)&vextq_s8(v73, v73, 4uLL));
    __int128 v76 = *(float *)&v69.i32[3];
    uint64_t v77 = (os_log_s *)qword_1008000A0;
    uint64_t v78 = v18;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)pthread_attr_t buf = 134220032;
      *(double *)&uint8_t buf[4] = v78;
      *(_WORD *)&buf[12] = 2048;
      *(double *)&buf[14] = v17;
      *(_WORD *)&_BYTE buf[22] = 2048;
      unint64_t v101 = v74;
      __int128 v102 = 2048;
      __int128 v103 = v95.f64[0];
      __int128 v104 = 2048;
      __int128 v105 = v95.f64[1];
      __int128 v106 = 2048;
      __int128 v107 = v75;
      __int128 v108 = 2048;
      __int128 v109 = v93.f64[0];
      __int128 v110 = 2048;
      __int128 v111 = v93.f64[1];
      __int128 v112 = 2048;
      __int128 v113 = v76;
      _os_log_impl( (void *)&_mh_execute_header,  v77,  OS_LOG_TYPE_DEFAULT,  "#sa_algo_moving_findee,Interpolated self pose for range measurement, range: %0.2f m, timestamp: %f s, device pos ition:[%0.2f,%0.2f,%0.2f], device quat:[%0.2f,%0.2f,%0.2f,%0.2f]",  buf,  0x5Cu);
    }

    *(double *)pthread_attr_t buf = v17;
    *(double *)&uint8_t buf[8] = v78;
    *(void *)&uint8_t buf[16] = 0x3FB999999999999ALL;
    LODWORD(v101) = 0;
    LOBYTE(v102) = 0;
    BYTE4(v113) = 0;
    uint64_t v114 = v74;
    uint64_t v115 = v95;
    uint64_t v116 = v75;
    uint64_t v117 = v93;
    uint64_t v118 = v76;
    sub_10031DC34((void *)(a1 + 320), (uint64_t)buf);
    unint64_t v79 = *(void *)(a1 + 376);
    unint64_t v80 = (char *)(v79 + 8LL * (*(void *)(a1 + 400) >> 5));
    if (*(void *)(a1 + 384) == v79) {
      int64_t v81 = 0LL;
    }
    else {
      int64_t v81 = *(void *)v80 + ((*(void *)(a1 + 400) & 0x1FLL) << 7);
    }
    sub_1002CA580((void *)(a1 + 368), v80, v81, v32, v40);
    uint64_t v82 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v83 = *(void *)(a1 + 376);
      uint64_t v84 = *(void *)(*(void *)(v83 + ((*(void *)(a1 + 400) >> 2) & 0x3FFFFFFFFFFFFFF8LL))
                      + ((*(void *)(a1 + 400) & 0x1FLL) << 7));
      uint64_t v85 = *(void *)(*(void *)(v83
      *(_DWORD *)__int128 v96 = 134218240;
      uint64_t v97 = v84;
      unint64_t v98 = 2048;
      unint64_t v99 = v85;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v82,  OS_LOG_TYPE_DEBUG,  "#sa_algo_moving_findee,Pose history now between %f s and %f s",  v96,  0x16u);
    }

LABEL_59:
      sub_10001E11C();
    }
  }

  uint64_t v15 = *(void *)(v5 + 80);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_100800158 + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  v15,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_65;
  }

  __int128 v30 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 160) |= 0x400u;
  *(void *)(a1 + 72) = v30;
  uint64_t v13 = *(_DWORD *)(a2 + 160);
  if ((v13 & 0x800) == 0)
  {
LABEL_27:
    if ((v13 & 0x1000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_61;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF,  (int)a2,  *(double *)(v5 + 112),  a3);
  id v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_61;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E8,  *(_DWORD *)(v5 + 64),  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 232);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_61;
  }

  uint64_t v35 = (unsigned int *)*((void *)this + 10);
  if (!v35) {
    uint64_t v35 = *(unsigned int **)(qword_100800558 + 80);
  }
  *(_BYTE *)__int128 v4 = 58;
  __int128 v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35[9];
  if (v36 > 0x7F)
  {
    std::string v37 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v36,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v36;
    std::string v37 = (char *)v4 + 2;
  }

  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000DEBA4( (wireless_diagnostics::google::protobuf::internal::WireFormat *)v35,  v37,  a3);
  uint64_t v17 = *((_DWORD *)this + 30);
  if ((v17 & 0x80) == 0)
  {
LABEL_27:
    if ((v17 & 0x100) == 0) {
      goto LABEL_28;
    }
    goto LABEL_81;
  }

  __int128 v22 = *(void **)(a1 + 8);
  unint64_t v23 = (9 * *(_DWORD *)(a1 + 120) + v6);
  if (v22 && *v22 != v22[1]) {
    unint64_t v23 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v23;
  *(_DWORD *)(a1 + 136) = v23;
  return v23;
}

  if (a3[1]) {
    __int128 v32 = *a3;
  }
  else {
    __int128 v32 = 0;
  }
  uint64_t v33 = v32;
  sub_1000065CC(__p, "hangup bit");
  sub_1001E22FC((uint64_t)&v45, 1u, v33);
  if (v44 < 0) {
    operator delete(__p[0]);
  }
  if (a3[3]) {
    __int128 v34 = a3[2];
  }
  else {
    __int128 v34 = 0;
  }
  uint64_t v35 = v34;
  sub_1000065CC(__p, "finder_gone bit");
  sub_1001E22FC((uint64_t)&v45, 1u, v35);
  if (v44 < 0) {
    operator delete(__p[0]);
  }
  if (a3[5]) {
    __int128 v36 = a3[4];
  }
  else {
    __int128 v36 = 0;
  }
  std::string v37 = v36;
  sub_1000065CC(__p, "findee_gone bit");
  sub_1001E22FC((uint64_t)&v45, 1u, v37);
  if (v44 < 0) {
    operator delete(__p[0]);
  }
  if (a3[7]) {
    std::string v38 = a3[6];
  }
  else {
    std::string v38 = 0;
  }
  unint64_t v39 = v38;
  sub_1000065CC(__p, "finder_wants_updates bit");
  sub_1001E22FC((uint64_t)&v45, 1u, v39);
  if (v44 < 0) {
    operator delete(__p[0]);
  }
  __int128 v40 = a3[8];
  sub_1000065CC(__p, "finder_isPhone bit");
  sub_1001E22FC((uint64_t)&v45, 1u, v40);
  if (v44 < 0) {
    operator delete(__p[0]);
  }
  if (*(_BYTE *)(a2 + 169)) {
    unint64_t v41 = *(_BYTE *)(a2 + 168);
  }
  else {
    unint64_t v41 = 0;
  }
  unint64_t v42 = v41;
  sub_1000065CC(__p, "findee_is_in_good_gnss_conditions bit");
  sub_1001E22FC((uint64_t)&v45, 1u, v42);
  if (v44 < 0) {
    operator delete(__p[0]);
  }
  sub_1000065CC(__p, "finding_data_reserved");
  sub_1001E22FC((uint64_t)&v45, 7u, 0);
  if (v44 < 0) {
    operator delete(__p[0]);
  }
  return 1LL;
}

        *(_OWORD *)(a2 + 40) = v72[0];
        *(_OWORD *)(a2 + 52) = *(_OWORD *)((char *)v72 + 12);
        sub_100201D14(a2 + 72, &__p);
        *(void *)(a2 + 312) = v89;
        *(_OWORD *)(a2 + 200) = v82;
        *(_OWORD *)(a2 + 216) = v83;
        *(_OWORD *)(a2 + 2sub_100012358(v1 - 32) = v84;
        *(_OWORD *)(a2 + 248) = v85;
        *(_OWORD *)(a2 + 136) = v78;
        *(_OWORD *)(a2 + 152) = v79;
        *(_OWORD *)(a2 + 168) = v80;
        *(_OWORD *)(a2 + 184) = v81;
        *(_OWORD *)(a2 + 104) = v76;
        *(_OWORD *)(a2 + 120) = v77;
        uint64_t v58 = v87;
        *(_OWORD *)(a2 + 264) = v86;
        *(_OWORD *)(a2 + 280) = v58;
        *(_OWORD *)(a2 + 296) = v88;
        if (v75 && v74 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
        sub_100034A98((uint64_t)&v69, v70);

        goto LABEL_63;
      }
    }
  }

  __int128 v36 = (void *)objc_claimAutoreleasedReturnValue([v62 objectForKey:v67]);

  if (v36)
  {
    std::string v37 = (void *)objc_claimAutoreleasedReturnValue([v62 objectForKeyedSubscript:v67]);
    __int128 v18 = (void *)objc_claimAutoreleasedReturnValue([v37 objectForKeyedSubscript:v60]);

    std::string v38 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKey:v66]);
    if (v38)
    {
      __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKey:v66]);
      sub_1001FF6A8(v20, (uint64_t)&v68);
      *(_OWORD *)a2 = v68;
      unint64_t v39 = a2 + 24;
      sub_100034A98(a2 + 16, *(void **)(a2 + 24));
      __int128 v40 = v70;
      *(void *)(a2 + 16) = v69;
      *(void *)(a2 + 24) = v40;
      unint64_t v41 = v71;
      *(void *)(a2 + sub_100012358(v1 - 32) = v71;
      if (v41)
      {
        v40[2] = v39;
        uint64_t v69 = &v70;
        unint64_t v70 = 0LL;
        unint64_t v71 = 0LL;
      }

      else
      {
        *(void *)(a2 + 16) = v39;
      }

      *(_OWORD *)(a2 + 40) = v72[0];
      *(_OWORD *)(a2 + 52) = *(_OWORD *)((char *)v72 + 12);
      sub_100201D14(a2 + 72, &__p);
      *(void *)(a2 + 312) = v89;
      *(_OWORD *)(a2 + 200) = v82;
      *(_OWORD *)(a2 + 216) = v83;
      *(_OWORD *)(a2 + 2sub_100012358(v1 - 32) = v84;
      *(_OWORD *)(a2 + 248) = v85;
      *(_OWORD *)(a2 + 136) = v78;
      *(_OWORD *)(a2 + 152) = v79;
      *(_OWORD *)(a2 + 168) = v80;
      *(_OWORD *)(a2 + 184) = v81;
      *(_OWORD *)(a2 + 104) = v76;
      *(_OWORD *)(a2 + 120) = v77;
      uint64_t v51 = v87;
      *(_OWORD *)(a2 + 264) = v86;
      *(_OWORD *)(a2 + 280) = v51;
      *(_OWORD *)(a2 + 296) = v88;
      if (v75 && v74 < 0) {
        operator delete((void *)__p.n128_u64[0]);
      }
      sub_100034A98((uint64_t)&v69, v70);
      goto LABEL_57;
    }
  }

  unint64_t v42 = (void *)objc_claimAutoreleasedReturnValue([v61 objectForKey:v67]);

  if (v42)
  {
    __int128 v18 = (void *)objc_claimAutoreleasedReturnValue([v61 objectForKeyedSubscript:v67]);
    int v43 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKey:v65]);

    if (v43)
    {
      __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKeyedSubscript:v65]);
      uint64_t v44 = sub_1001FFBBC(a7);
      __int128 v30 = (void *)objc_claimAutoreleasedReturnValue(v44);
      __int128 v45 = (void *)objc_claimAutoreleasedReturnValue([v28 objectForKey:v30]);

      if (v45)
      {
        __int128 v32 = (void *)objc_claimAutoreleasedReturnValue([v28 objectForKey:v30]);
        sub_1001FF6A8(v32, (uint64_t)&v68);
        *(_OWORD *)a2 = v68;
        unsigned __int8 v46 = a2 + 24;
        sub_100034A98(a2 + 16, *(void **)(a2 + 24));
        char v47 = v70;
        *(void *)(a2 + 16) = v69;
        *(void *)(a2 + 24) = v47;
        __int128 v48 = v71;
        *(void *)(a2 + sub_100012358(v1 - 32) = v71;
        if (v48)
        {
          v47[2] = v46;
          uint64_t v69 = &v70;
          unint64_t v70 = 0LL;
          unint64_t v71 = 0LL;
        }

        else
        {
          *(void *)(a2 + 16) = v46;
        }

        goto LABEL_59;
      }
    }
  }

  uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue([v59 objectForKey:v67]);

  if (v52)
  {
    __int128 v18 = (void *)objc_claimAutoreleasedReturnValue([v59 objectForKeyedSubscript:v67]);
    __int128 v53 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKey:v65]);

    if (!v53)
    {
LABEL_63:

      goto LABEL_64;
    }

    __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v18 objectForKey:v65]);
    __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v20 objectForKeyedSubscript:v60]);
    sub_1001FF6A8(v22, (uint64_t)&v68);
    *(_OWORD *)a2 = v68;
    uint64_t v54 = a2 + 24;
    sub_100034A98(a2 + 16, *(void **)(a2 + 24));
    __int128 v55 = v70;
    *(void *)(a2 + 16) = v69;
    *(void *)(a2 + 24) = v55;
    uint64_t v56 = v71;
    *(void *)(a2 + sub_100012358(v1 - 32) = v71;
    if (v56)
    {
      v55[2] = v54;
      uint64_t v69 = &v70;
      unint64_t v70 = 0LL;
      unint64_t v71 = 0LL;
    }

    else
    {
      *(void *)(a2 + 16) = v54;
    }

    *(_OWORD *)(a2 + 40) = v72[0];
    *(_OWORD *)(a2 + 52) = *(_OWORD *)((char *)v72 + 12);
    sub_100201D14(a2 + 72, &__p);
    *(void *)(a2 + 312) = v89;
    *(_OWORD *)(a2 + 200) = v82;
    *(_OWORD *)(a2 + 216) = v83;
    *(_OWORD *)(a2 + 2sub_100012358(v1 - 32) = v84;
    *(_OWORD *)(a2 + 248) = v85;
    *(_OWORD *)(a2 + 136) = v78;
    *(_OWORD *)(a2 + 152) = v79;
    *(_OWORD *)(a2 + 168) = v80;
    *(_OWORD *)(a2 + 184) = v81;
    *(_OWORD *)(a2 + 104) = v76;
    *(_OWORD *)(a2 + 120) = v77;
    id v57 = v87;
    *(_OWORD *)(a2 + 264) = v86;
    *(_OWORD *)(a2 + 280) = v57;
    *(_OWORD *)(a2 + 296) = v88;
    if (v75 && v74 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    id v50 = v70;
    goto LABEL_56;
  }

void sub_10002B1B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10002B200(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_10002BED0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002CD10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10002CD84(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

LABEL_8:
  std::mutex::unlock(&stru_1007F2500);
  if (!self->_bundleIdentifier)
  {
    uint64_t v21 = (os_log_s *)qword_1008000A0;
    if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO)) {
      return;
    }
    __int128 v24 = self->_bundleIdentifier;
    *(_DWORD *)pthread_attr_t buf = 138412290;
    *(void *)&uint8_t buf[4] = v24;
    unint64_t v23 = "#ni-ca,[%@] Not logging summary event without bundle identifier.";
    goto LABEL_20;
  }

  if (!*(_DWORD *)p_lifecycleTimeoutType)
  {
    uint64_t v21 = (os_log_s *)qword_1008000A0;
    if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO)) {
      return;
    }
    uint64_t v25 = self->_bundleIdentifier;
    *(_DWORD *)pthread_attr_t buf = 138412290;
    *(void *)&uint8_t buf[4] = v25;
    unint64_t v23 = "#ni-ca,[%@] Not logging summary event for unspecified session types.";
LABEL_20:
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, v23, buf, 0xCu);
    return;
  }

  __int128 v14 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[NSMutableDictionary setObject:forKey:](v14, "setObject:forKey:", self->_bundleIdentifier, @"appBundleID");
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", a3 - *(double *)&var0));
  -[NSMutableDictionary setObject:forKey:](v14, "setObject:forKey:", v15, @"totalDuration");

  __int128 v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_visibilityUpdateTimestamp));
  -[NSMutableDictionary setObject:forKey:](v14, "setObject:forKey:", v16, @"backgroundDuration");

  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", 1LL));
  -[NSMutableDictionary setObject:forKey:](v14, "setObject:forKey:", v17, @"sessionCount");

  __int128 v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  LODWORD(self->_backgroundContinuationTimeoutType)));
  -[NSMutableDictionary setObject:forKey:](v14, "setObject:forKey:", v18, @"configuredBackgroundMode");

  -[NSMutableDictionary setObject:forKey:]( v14,  "setObject:forKey:",  *(void *)&self->_maxDistance,  @"lifecycleTimeout");
  dispatch_source_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", LOBYTE(self->_sessionType)));
  -[NSMutableDictionary setObject:forKey:](v14, "setObject:forKey:", v19, @"isCameraAssistanceEnabled");

  __int128 v20 = @"Accessory";
  switch(*(_DWORD *)p_lifecycleTimeoutType)
  {
    case 0:
      __assert_rtn( "-[NIServerAnalyticsManager _sessionStoppedWithTimestamp:]",  "NIServerAnalyticsManager.mm",  2118,  "false");
    case 1:
      __int128 v20 = @"Peer";
      goto LABEL_23;
    case 2:
      goto LABEL_23;
    case 3:
      __int128 v20 = @"Findee";
      goto LABEL_23;
    case 4:
      __int128 v20 = @"Finder";
LABEL_23:
      -[NSMutableDictionary setObject:forKey:](v14, "setObject:forKey:", v20, @"configType");
      break;
    default:
      break;
  }

  if (BYTE1(self->_sessionType))
  {
    __int128 v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", BYTE2(self->_sessionType)));
    -[NSMutableDictionary setObject:forKey:](v14, "setObject:forKey:", v26, @"configuredAccessoryDataRate");
  }

  if (LOBYTE(self->_timeSpentVisible))
  {
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  v20,  self->_timeSpentNotVisible));
    -[NSMutableDictionary setObject:forKey:](v14, "setObject:forKey:", v27, @"firstDistance");

    __int128 v28 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)&self->_receivedDistance));
    -[NSMutableDictionary setObject:forKey:](v14, "setObject:forKey:", v28, @"lastDistance");

    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", self->_lastDistance));
    -[NSMutableDictionary setObject:forKey:](v14, "setObject:forKey:", v29, @"minDistance");

    __int128 v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", self->_firstDistance));
    -[NSMutableDictionary setObject:forKey:](v14, "setObject:forKey:", v30, @"maxDistance");
  }

  if (self->_backgroundContinuationTimeoutType == (NSString *)1) {
    -[NSMutableDictionary setObject:forKey:]( v14,  "setObject:forKey:",  *(void *)&self->_minDistance,  @"sessionContinuationTimeout");
  }
  v300 = -[NSMutableDictionary mutableCopy](v14, "mutableCopy");
  uint64_t v31 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
  {
    __int128 v32 = self->_bundleIdentifier;
    uint64_t v33 = (id)objc_claimAutoreleasedReturnValue([v300 description]);
    *(_DWORD *)pthread_attr_t buf = 138412802;
    *(void *)&uint8_t buf[4] = v32;
    v324 = 2112;
    v325 = @"com.apple.nearbyinteraction.sessionV2.summary";
    v326 = 2112;
    v327 = *(double *)&v33;
    _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_INFO,  "#ni-ca,[%@] send analytics event %@:\n%@\n",  buf,  0x20u);
  }

  v321[0] = _NSConcreteStackBlock;
  v321[1] = 3221225472LL;
  v321[2] = sub_10002FBBC;
  v321[3] = &unk_1007A2298;
  __int128 v34 = v300;
  v322 = v34;
  AnalyticsSendEventLazy(@"com.apple.nearbyinteraction.sessionV2.summary", v321);
  if (!LOBYTE(self->_sessionType)) {
    goto LABEL_43;
  }
  uint64_t v35 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[NSMutableDictionary setObject:forKey:](v35, "setObject:forKey:", self->_bundleIdentifier, @"appBundleID");
  __int128 v36 = *(_DWORD *)p_lifecycleTimeoutType;
  if (*(_DWORD *)p_lifecycleTimeoutType == 1)
  {
    std::string v37 = @"Peer";
  }

  else
  {
    if (v36 != 2)
    {
      if (!v36) {
        __assert_rtn( "-[NIServerAnalyticsManager _sessionStoppedWithTimestamp:]",  "NIServerAnalyticsManager.mm",  2163,  "false");
      }
      goto LABEL_40;
    }

    std::string v37 = @"Accessory";
  }

  -[NSMutableDictionary setObject:forKey:](v35, "setObject:forKey:", v37, @"configType");
LABEL_40:
  std::string v38 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)&self->_lastVIOPosition[14]));
  -[NSMutableDictionary setObject:forKey:](v35, "setObject:forKey:", v38, @"DistanceMovedToHorizontalConvergence");

  unint64_t v39 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_firstRangeMeasurementTime));
  -[NSMutableDictionary setObject:forKey:](v35, "setObject:forKey:", v39, @"DistanceMovedToVerticalConvergence");

  __int128 v40 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  LODWORD(self->_timeToHorizontalConvergence)));
  -[NSMutableDictionary setObject:forKey:](v35, "setObject:forKey:", v40, @"NumberOfInvalidPoseEvents");

  unint64_t v41 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  LODWORD(self->_timeToVerticalConvergence)));
  -[NSMutableDictionary setObject:forKey:](v35, "setObject:forKey:", v41, @"NumberOfLostConvergence");

  unint64_t v42 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  HIDWORD(self->_timeToHorizontalConvergence)));
  -[NSMutableDictionary setObject:forKey:](v35, "setObject:forKey:", v42, @"NumberOfLostHorizontalConvergence");

  int v43 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_distanceMovedToVerticalConvergence));
  -[NSMutableDictionary setObject:forKey:](v35, "setObject:forKey:", v43, @"RangeAtHorizontalConvergence");

  uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", self->_totalDistanceMoved));
  -[NSMutableDictionary setObject:forKey:](v35, "setObject:forKey:", v44, @"RangeAtVerticalConvergence");

  __int128 v45 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_rangeAtHorizontalConvergence));
  -[NSMutableDictionary setObject:forKey:](v35, "setObject:forKey:", v45, @"TimeToHorizontalConvergence");

  unsigned __int8 v46 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_rangeAtVerticalConvergence));
  -[NSMutableDictionary setObject:forKey:](v35, "setObject:forKey:", v46, @"TimeToVerticalConvergence");

  char v47 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_distanceMovedToHorizontalConvergence));
  -[NSMutableDictionary setObject:forKey:](v35, "setObject:forKey:", v47, @"TotalDistanceMoved");

  __int128 v48 = -[NSMutableDictionary mutableCopy](v35, "mutableCopy");
  id v49 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
  {
    id v50 = self->_bundleIdentifier;
    uint64_t v51 = (id)objc_claimAutoreleasedReturnValue([v48 description]);
    *(_DWORD *)pthread_attr_t buf = 138412802;
    *(void *)&uint8_t buf[4] = v50;
    v324 = 2112;
    v325 = @"com.apple.nearbyinteraction.camereEnabledSession.summary";
    v326 = 2112;
    v327 = *(double *)&v51;
    _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_INFO,  "#ni-ca,[%@] send analytics event %@:\n%@\n",  buf,  0x20u);
  }

  v319[0] = _NSConcreteStackBlock;
  v319[1] = 3221225472LL;
  v319[2] = sub_10002FBC4;
  v319[3] = &unk_1007A2298;
  uint64_t v52 = v48;
  v320 = v52;
  AnalyticsSendEventLazy(@"com.apple.nearbyinteraction.camereEnabledSession.summary", v319);

LABEL_43:
  __int128 v53 = *(_DWORD *)p_lifecycleTimeoutType;
  if (*(_DWORD *)p_lifecycleTimeoutType == 3)
  {
    if (LODWORD(self->_timeLocationFromWiFi) == -1)
    {
      uint64_t v54 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v54, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)pthread_attr_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_INFO, "#ni-ca,Dummy findee CA event", buf, 2u);
      }
    }

    else
    {
      -[NIServerAnalyticsManager _submitFindingSessionEndStats](self, "_submitFindingSessionEndStats");
      uint64_t v54 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      -[os_log_s setObject:forKey:](v54, "setObject:forKey:", self->_bundleIdentifier, @"appBundleID");
      timeLocationFromWiFi_high = HIDWORD(self->_timeLocationFromWiFi);
      uint64_t v56 = 0.0;
      if (timeLocationFromWiFi_high != -1)
      {
        timeLocationFromWiFi_low = LODWORD(self->_timeLocationFromWiFi);
        if (timeLocationFromWiFi_low) {
          uint64_t v56 = (float)timeLocationFromWiFi_high / (float)timeLocationFromWiFi_low;
        }
      }

      uint64_t v58 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v56));
      -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v58, @"SessionWithBoundedDisplacement_percentage");

      timeLocationFromWiFi2_low = LODWORD(self->_timeLocationFromWiFi2);
      id v60 = 0.0;
      if (timeLocationFromWiFi2_low != -1)
      {
        unint64_t v61 = LODWORD(self->_timeLocationFromWiFi);
        if (v61) {
          id v60 = (float)timeLocationFromWiFi2_low / (float)v61;
        }
      }

      unint64_t v62 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v60));
      -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v62, @"SessionWithDeltaPositionPDR_percentage");

      numberOfBoundedDisplacementFromPeerData = self->_numberOfBoundedDisplacementFromPeerData;
      uint64_t v64 = 0.0;
      if (numberOfBoundedDisplacementFromPeerData != -1)
      {
        uint64_t v65 = LODWORD(self->_timeLocationFromWiFi);
        if (v65) {
          uint64_t v64 = (float)numberOfBoundedDisplacementFromPeerData / (float)v65;
        }
      }

      int64_t v66 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v64));
      -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v66, @"SessionWithVIO_percentage");

      numberOfPeerData = self->_numberOfPeerData;
      int64_t v68 = 0.0;
      if (numberOfPeerData != -1)
      {
        uint64_t v69 = LODWORD(self->_timeLocationFromWiFi);
        if (v69) {
          int64_t v68 = (float)numberOfPeerData / (float)v69;
        }
      }

      unint64_t v70 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v68));
      -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v70, @"SessionWithDeltaVelocity_percentage");

      timeLocationFromWiFi2_high = HIDWORD(self->_timeLocationFromWiFi2);
      unint64_t v72 = 0.0;
      if (timeLocationFromWiFi2_high != -1)
      {
        unint64_t v73 = LODWORD(self->_timeLocationFromWiFi);
        if (v73) {
          unint64_t v72 = (float)timeLocationFromWiFi2_high / (float)v73;
        }
      }

      unint64_t v74 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v72));
      -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v74, @"SessionWithLocation_percentage");

      numberOfLocationFromPeerData = self->_numberOfLocationFromPeerData;
      __int128 v76 = 0.0;
      if (numberOfLocationFromPeerData != -1)
      {
        uint64_t v77 = HIDWORD(self->_timeLocationFromWiFi);
        if (v77) {
          __int128 v76 = (float)numberOfLocationFromPeerData / (float)v77;
        }
      }

      uint64_t v78 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v76));
      -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v78, @"Findee_Static_percentage");

      numberOfPDRFromPeerData = self->_numberOfPDRFromPeerData;
      unint64_t v80 = 0.0;
      if (numberOfPDRFromPeerData != -1)
      {
        int64_t v81 = HIDWORD(self->_timeLocationFromWiFi);
        if (v81) {
          unint64_t v80 = (float)numberOfPDRFromPeerData / (float)v81;
        }
      }

      uint64_t v82 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v80));
      -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v82, @"Findee_SlowlyMoving_percentage");

      numberOfDeltaVelocityFromPeerData = self->_numberOfDeltaVelocityFromPeerData;
      uint64_t v84 = 0.0;
      if (numberOfDeltaVelocityFromPeerData != -1)
      {
        uint64_t v85 = HIDWORD(self->_timeLocationFromWiFi);
        if (v85) {
          uint64_t v84 = (float)numberOfDeltaVelocityFromPeerData / (float)v85;
        }
      }

      uint64_t v86 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v84));
      -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v86, @"Findee_WalkingOrUnknown_percentage");

      if (self->_timeAtLastLocationUpdate != -1.0)
      {
        unint64_t v87 = a3 - timeAtLastLocationUpdate;
        unint64_t v88 = *(double *)&self->_lastLocationType;
        __int128 v89 = 0.0;
        if (v88 != -1.0 && v87 != 0.0)
        {
          __int128 v90 = v88;
          uint64_t v91 = v87;
          __int128 v89 = v90 / v91;
        }

        unint64_t v92 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v89));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v92, @"LocationFromAccessory_percentage");

        timeAtFirstLocationUpdate = self->_timeAtFirstLocationUpdate;
        unint64_t v94 = timeAtFirstLocationUpdate == -1.0 || v87 == 0.0;
        uint64_t v95 = 0.0;
        if (!v94)
        {
          __int128 v96 = timeAtFirstLocationUpdate;
          uint64_t v97 = v87;
          uint64_t v95 = v96 / v97;
        }

        unint64_t v98 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v95));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v98, @"LocationFromCell_percentage");

        timeLocationFromAccessory = self->_timeLocationFromAccessory;
        unsigned __int16 v100 = timeLocationFromAccessory == -1.0 || v87 == 0.0;
        unint64_t v101 = 0.0;
        if (!v100)
        {
          __int128 v102 = timeLocationFromAccessory;
          __int128 v103 = v87;
          unint64_t v101 = v102 / v103;
        }

        __int128 v104 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v101));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v104, @"LocationFromCompensated_percentage");

        timeLocationFromCell = self->_timeLocationFromCell;
        __int128 v106 = timeLocationFromCell == -1.0 || v87 == 0.0;
        __int128 v107 = 0.0;
        if (!v106)
        {
          __int128 v108 = timeLocationFromCell;
          __int128 v109 = v87;
          __int128 v107 = v108 / v109;
        }

        __int128 v110 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v107));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v110, @"LocationFromGPS_percentage");

        timeLocationFromCompensated = self->_timeLocationFromCompensated;
        __int128 v112 = timeLocationFromCompensated == -1.0 || v87 == 0.0;
        __int128 v113 = 0.0;
        if (!v112)
        {
          uint64_t v114 = timeLocationFromCompensated;
          uint64_t v115 = v87;
          __int128 v113 = v114 / v115;
        }

        uint64_t v116 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v113));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v116, @"LocationFromGPSCoarse_percentage");

        uint64_t v117 = self->_timeAtFirstLocationUpdate;
        uint64_t v118 = v117 == -1.0 || v87 == 0.0;
        uint64_t v119 = 0.0;
        if (!v118)
        {
          int v120 = v117;
          int v121 = v87;
          uint64_t v119 = v120 / v121;
        }

        int v122 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v119));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v122, @"LocationFromCell_percentage");

        timeLocationFromGPS = self->_timeLocationFromGPS;
        uint64_t v124 = timeLocationFromGPS == -1.0 || v87 == 0.0;
        uint64_t v125 = 0.0;
        if (!v124)
        {
          uint64_t v126 = timeLocationFromGPS;
          __int16 v127 = v87;
          uint64_t v125 = v126 / v127;
        }

        double v128 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v125));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v128, @"LocationFromLAC_percentage");

        timeLocationFromGPSCoarse = self->_timeLocationFromGPSCoarse;
        uint64_t v130 = timeLocationFromGPSCoarse == -1.0 || v87 == 0.0;
        id v131 = 0.0;
        if (!v130)
        {
          char v132 = timeLocationFromGPSCoarse;
          __int128 v133 = v87;
          id v131 = v132 / v133;
        }

        unint64_t v134 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v131));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v134, @"LocationFromLOIOverride_percentage");

        timeLocationFromLAC = self->_timeLocationFromLAC;
        v136 = timeLocationFromLAC == -1.0 || v87 == 0.0;
        int v137 = 0.0;
        if (!v136)
        {
          uint64_t v138 = timeLocationFromLAC;
          v139 = v87;
          int v137 = v138 / v139;
        }

        id v140 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v137));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v140, @"LocationFromMCC_percentage");

        timeLocationFromLOIOverride = self->_timeLocationFromLOIOverride;
        v142 = timeLocationFromLOIOverride == -1.0 || v87 == 0.0;
        int v143 = 0.0;
        if (!v142)
        {
          v144 = timeLocationFromLOIOverride;
          v145 = v87;
          int v143 = v144 / v145;
        }

        id v146 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v143));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v146, @"LocationFromPipeline_percentage");

        timeLocationFromMCC = self->_timeLocationFromMCC;
        int v148 = timeLocationFromMCC == -1.0 || v87 == 0.0;
        uint64_t v149 = 0.0;
        if (!v148)
        {
          unsigned __int8 v150 = timeLocationFromMCC;
          v151 = v87;
          uint64_t v149 = v150 / v151;
        }

        int v152 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v149));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v152, @"LocationFromUnknown_percentage");

        timeLocationFromPipeline = self->_timeLocationFromPipeline;
        unsigned __int8 v154 = timeLocationFromPipeline == -1.0 || v87 == 0.0;
        int v155 = 0.0;
        if (!v154)
        {
          v156 = timeLocationFromPipeline;
          v157 = v87;
          int v155 = v156 / v157;
        }

        v158 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v155));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v158, @"LocationFromWiFi_percentage");

        timeLocationFromUnknown = self->_timeLocationFromUnknown;
        v160 = timeLocationFromUnknown == -1.0 || v87 == 0.0;
        v161 = 0.0;
        if (!v160)
        {
          v162 = timeLocationFromUnknown;
          v163 = v87;
          v161 = v162 / v163;
        }

        v164 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v161));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v164, @"LocationFromWiFi2_percentage");
      }

      if (self->_timeFindeeWasWalkingOrUnknown != -1.0)
      {
        distanceTraveledFromPDR = self->_distanceTraveledFromPDR;
        v166 = 0.0;
        if (distanceTraveledFromPDR != -1.0 && pdrTimeAtFirstPDRUpdate - timeFindeeWasWalkingOrUnknown != 0.0)
        {
          v167 = distanceTraveledFromPDR;
          v168 = pdrTimeAtFirstPDRUpdate - timeFindeeWasWalkingOrUnknown;
          v166 = v167 / v168;
        }

        v169 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v166));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v169, @"PDR_indicates_static_percentage");
      }

      if (*(double *)&self->_numberOfWalkingOrkUnknown != -1.0)
      {
        v170 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)&self->_lastMotionCategory));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v170, @"TimeFindeeWasStatic");

        v171 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_timeAtLastBoundedDisplacementUpdate));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v171, @"TimeFindeeWasSlowlyMoving");

        v172 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_timeFindeeWasSlowlyMoving));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v172, @"TimeFindeeWasWalkingOrUnknown");

        v173 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_timeFindeeWasStatic));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v173, @"TimeToSessionEnd");
      }

      v174 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_timeToSessionEnd));
      -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v174, @"DistanceTraveledFromPDR");

      numberOfSlowlyMoving = self->_numberOfSlowlyMoving;
      if (numberOfSlowlyMoving == -1) {
        v176 = 0LL;
      }
      else {
        v176 = numberOfSlowlyMoving;
      }
      int v177 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v176));
      -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v177, @"NumberOfMissedRanges");

      numberOfVIOFromPeerData = self->_numberOfVIOFromPeerData;
      if (numberOfVIOFromPeerData == -1) {
        v179 = 0LL;
      }
      else {
        v179 = numberOfVIOFromPeerData;
      }
      v180 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v179));
      -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v180, @"NumberOfSuccessfulRanges");

      int v181 = self->_numberOfVIOFromPeerData;
      NSErrorUserInfoKey v182 = 0.0;
      if (v181 != -1)
      {
        v183 = self->_numberOfSlowlyMoving + v181;
        if (v183) {
          NSErrorUserInfoKey v182 = (float)v181 / (float)v183;
        }
      }

      NSErrorUserInfoKey v184 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v182));
      -[os_log_s setObject:forKey:]( v54,  "setObject:forKey:",  v184,  @"SuccesfulRangesToTotalRangingAttempts_percentage");

      if (self->_anon_9d8[169])
      {
        v185 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_anon_9d8[168]));
        -[os_log_s setObject:forKey:](v54, "setObject:forKey:", v185, @"FinderIsPhone");
      }

      NSErrorUserInfoKey v186 = -[os_log_s mutableCopy](v54, "mutableCopy");
      v187 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v187, OS_LOG_TYPE_INFO))
      {
        NSErrorUserInfoKey v188 = self->_bundleIdentifier;
        v189 = (id)objc_claimAutoreleasedReturnValue([v186 description]);
        *(_DWORD *)pthread_attr_t buf = 138412802;
        *(void *)&uint8_t buf[4] = v188;
        v324 = 2112;
        v325 = @"com.apple.nearbyinteraction.peopleFindingSession.FindeeSummary";
        v326 = 2112;
        v327 = *(double *)&v189;
        _os_log_impl( (void *)&_mh_execute_header,  v187,  OS_LOG_TYPE_INFO,  "#ni-ca,[%@] send analytics event %@:\n%@\n",  buf,  0x20u);
      }

      v317[0] = _NSConcreteStackBlock;
      v317[1] = 3221225472LL;
      v317[2] = sub_10002FBCC;
      v317[3] = &unk_1007A2298;
      v190 = v186;
      v318 = v190;
      AnalyticsSendEventLazy(@"com.apple.nearbyinteraction.peopleFindingSession.FindeeSummary", v317);
    }

    __int128 v53 = *(_DWORD *)p_lifecycleTimeoutType;
  }

  if (v53 == 4)
  {
    -[NIServerAnalyticsManager _submitFindingSessionEndStats](self, "_submitFindingSessionEndStats");
    if (self->_timePeerLocationFromFindeeData == -1.0)
    {
      int v191 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v191, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)pthread_attr_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v191, OS_LOG_TYPE_INFO, "#ni-ca,Dummy finder CA event", buf, 2u);
      }
    }

    else
    {
      int v191 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", self->_bundleIdentifier, @"appBundleID");
      -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:](self, "_finderTimeFromFirstPoseTo:", a3);
      v193 = v192;
      if (self->_timeAtFirstValidPose != -1.0)
      {
        -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:](self, "_finderTimeFromFirstPoseTo:");
        NSErrorUserInfoKey v194 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v194, @"TimeToFirstOutputRange");
      }

      if (self->_timeAtFirstRawUWBRange != -1.0)
      {
        -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:](self, "_finderTimeFromFirstPoseTo:");
        v195 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v195, @"TimeToFirstPeerLocation");
      }

      if (self->_timeAtFirstPeerLocation != -1.0)
      {
        -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:](self, "_finderTimeFromFirstPoseTo:");
        NSErrorUserInfoKey v196 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v196, @"TimeToFirstPeerLocationFromFMF");
      }

      if (self->_timeAtFirstSelfLocation != -1.0)
      {
        -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:](self, "_finderTimeFromFirstPoseTo:");
        v197 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v197, @"TimeToFirstPeerLocationFromFindeeData");
      }

      if (self->_timeAtArmsLength != -1.0)
      {
        -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:](self, "_finderTimeFromFirstPoseTo:");
        NSErrorUserInfoKey v198 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v198, @"TimeToFirstRawUWBRange");
      }

      if (self->_timeAtFirstPose != -1.0)
      {
        -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:](self, "_finderTimeFromFirstPoseTo:");
        v199 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v199, @"TimeToFirstArrow");
      }

      if (self->_timeAtFirstArrow != -1.0)
      {
        -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:](self, "_finderTimeFromFirstPoseTo:");
        NSErrorUserInfoKey v200 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v200, @"TimeToArmsReach");
      }

      -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:]( self,  "_finderTimeFromFirstPoseTo:",  self->_timeAtLastLocationFromFindeeData);
      v201 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v201, @"TimeToFirstPose");

      -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:]( self,  "_finderTimeFromFirstPoseTo:",  *(double *)&self->_numberOfWalkingOrkUnknown);
      NSErrorUserInfoKey v202 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v202, @"TimeToFirstFindeeData");

      -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:]( self,  "_finderTimeFromFirstPoseTo:",  self->_timeAtFirstFindeeData);
      v203 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v203, @"TimeToFirstSelfLocation");

      -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:]( self,  "_finderTimeFromFirstPoseTo:",  self->_timeAtFirstPeerLocationFromFindeeData);
      v204 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v204, @"TimeToFirstPDRFromFindeeData");

      -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:]( self,  "_finderTimeFromFirstPoseTo:",  self->_timeAtFirstPeerLocationFromFMF);
      v205 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v205, @"TimeToFirstVIOFromFindeeData");

      -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:]( self,  "_finderTimeFromFirstPoseTo:",  self->_timeAtFirstPDRFromFindeeData);
      v206 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v206, @"TimeToFirstDeltaVelocityFromFindeeData");

      -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:]( self,  "_finderTimeFromFirstPoseTo:",  self->_timeAtFirstVIOFromFindeeData);
      NSErrorUserInfoKey v207 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v207, @"TimeToFirstStaticFromFindeeData");

      v208 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v193));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v208, @"TimeToEndSession");

      NSErrorUserInfoKey v209 = (void *)objc_claimAutoreleasedReturnValue( -[NIServerAnalyticsManager _algorithmSourceToString:]( self,  "_algorithmSourceToString:",  LODWORD(self->_timeAtFirstStaticFromFindeeData)));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v209, @"FirstArrowAlgorithmSource");

      v210 = (void *)objc_claimAutoreleasedReturnValue( -[NIServerAnalyticsManager _algorithmSourceToString:]( self,  "_algorithmSourceToString:",  HIDWORD(self->_timeAtFirstStaticFromFindeeData)));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v210, @"FirstOutputRangeAlgorithmSource");

      NSErrorUserInfoKey v211 = (void *)objc_claimAutoreleasedReturnValue( -[NIServerAnalyticsManager _algorithmSourceToString:]( self,  "_algorithmSourceToString:",  LODWORD(self->_timeAtEndOfSession)));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v211, @"ArmsReachAlgorithmSource");

      firstArrowAlgorithmSource = self->_firstArrowAlgorithmSource;
      NSErrorUserInfoKey v213 = 0.0;
      if (firstArrowAlgorithmSource != -1)
      {
        firstOutputRangeAlgorithmSource = self->_firstOutputRangeAlgorithmSource;
        if (firstOutputRangeAlgorithmSource) {
          NSErrorUserInfoKey v213 = (float)firstArrowAlgorithmSource / (float)firstOutputRangeAlgorithmSource;
        }
      }

      NSErrorUserInfoKey v215 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v213));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v215, @"ArrowAvailabilityAfterFirstArrow");

      timeAtEndOfSession_high = HIDWORD(self->_timeAtEndOfSession);
      if (timeAtEndOfSession_high == -1) {
        NSErrorUserInfoKey v217 = 0LL;
      }
      else {
        NSErrorUserInfoKey v217 = timeAtEndOfSession_high;
      }
      v218 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v217));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v218, @"NumberOfArrowRevokes");

      armsReachAlgorithmSource = self->_armsReachAlgorithmSource;
      if (armsReachAlgorithmSource == -1) {
        v220 = 0LL;
      }
      else {
        v220 = armsReachAlgorithmSource;
      }
      v221 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v220));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v221, @"NumberOfVIOResets");

      numberOfArrowRevokes = self->_numberOfArrowRevokes;
      v223 = 0.0;
      if (numberOfArrowRevokes != -1)
      {
        numberOfArrowAvailabilityAfterFirstArrow = self->_numberOfArrowAvailabilityAfterFirstArrow;
        if (numberOfArrowAvailabilityAfterFirstArrow) {
          v223 = (float)numberOfArrowRevokes / (float)numberOfArrowAvailabilityAfterFirstArrow;
        }
      }

      v225 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v223));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v225, @"RatioOfSuccessfulPeerDataToTotalNumRange");

      v226 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  LOBYTE(self->_maxYCoordinateFindee)));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v226, @"DidFinderChangeFloors");

      v227 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  BYTE1(self->_maxYCoordinateFindee)));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v227, @"DidFindeeChangeFloors");

      if (self->_numberOfArrowAvailabilityAfterFirstArrow >= 1)
      {
        v228 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", self->_lastNBRSSI));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v228, @"MaxRawRangeValueDuringSession");

        v229 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", self->_maxNBRSSI));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v229, @"MinimumRange");

        v230 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", self->_m2));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v230, @"FirstRawRangeValueDuringSession");

        v231 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", self->_firstNBRSSI));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v231, @"LastRange");

        v232 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_maxRawRangeValue));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v232, @"RangeAtFirstPose");

        v233 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_minRawRangeValue));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v233, @"RangeAtFirstArrow");

        v234 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  vabdd_f64(self->_firstNBRSSI, self->_maxRawRangeValue) < 2.0));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v234, @"SessionEndedWithNoRange");
      }

      if (self->_armsReachAlgorithmSource == -1)
      {
        -[NIServerAnalyticsManager _calculateStraightLineDistance](self, "_calculateStraightLineDistance");
        v236 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)&self->_anon_558[72]));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v236, @"StraightLineDistanceToFirstArrow");

        v237 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_firstArrowStraightLineDistance));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v237, @"StraightLineDistanceToFirstArrow");

        v238 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)&self->_anon_558[80]));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v238, @"StraightLineDistanceToArmsReach");

        v239 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)&self->_anon_af8[80]));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v239, @"RadialDisplacementVIO");

        v240 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)&self->_anon_648[152]));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v240, @"UserMovedDistanceToFirstArrow");

        v241 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)&self->_anon_778[152]));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v241, @"UserMovedDistanceToFirstOutputRange");

        v242 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)&self->_anon_8a8[152]));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v242, @"UserMovedDistanceToArmsReach");

        v243 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)&self->_anon_9d8[152]));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v243, @"TotalUserMovedDistance");

        -[NIServerAnalyticsManager _calculateIOMetrics:](self, "_calculateIOMetrics:", v193);
        v244 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_radialDisplacementError));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v244, @"PDRSpeedErrorStandardDeviation");

        v245 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)&self->_anon_af8[72]));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v245, @"PathLengthPDRVsVIOError");

        v246 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_pathLengthError));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v246, @"RadialDisplacementError");

        v247 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_radialDisplacementFromVIO));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v247, @"MeanSpeedFromVIO");

        v248 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_meanSpeedFromVIO));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v248, @"MeanSpeedFromVIOError");

        v249 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_timeSSFromIOAndSSFromVIO));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v249, @"PDRStationaryDetectionTruePositiveRate");

        v250 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_timeSSFromIOAndNotSSFromVIO));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v250, @"PDRStationaryDetectionTrueNegativeRate");

        v235 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  self->_pdrSSDetectionTruePositiveRate));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v235, @"TimeSSFromVIO_percentage");
      }

      else
      {
        v235 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v235, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)pthread_attr_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v235,  OS_LOG_TYPE_INFO,  "#ni-ca,Unable to send user distances between finder and findee (we had VIO reset(s))",  buf,  2u);
        }
      }

      if (LOBYTE(self->_vioPathLength))
      {
        -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:]( self,  "_finderTimeFromFirstPoseTo:",  self->_noOdometryAvailableTime);
        v251 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v251, @"TimeToFirstIOPoseAfterFindButtonPressed");

        v252 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v252, OS_LOG_TYPE_DEFAULT))
        {
          -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:]( self,  "_finderTimeFromFirstPoseTo:",  self->_timeAtLastLocationFromFindeeData);
          if (!LOBYTE(self->_vioPathLength)) {
            sub_100006080();
          }
          v254 = v253;
          -[NIServerAnalyticsManager _finderTimeFromFirstPoseTo:]( self,  "_finderTimeFromFirstPoseTo:",  self->_noOdometryAvailableTime);
          *(_DWORD *)pthread_attr_t buf = 134218240;
          *(void *)&uint8_t buf[4] = v254;
          v324 = 2048;
          v325 = v255;
          _os_log_impl( (void *)&_mh_execute_header,  v252,  OS_LOG_TYPE_DEFAULT,  "#ni-ca,pose times, vio: %f, io: %f",  buf,  0x16u);
        }
      }

      val = self->_lastSolutionTime.var0.__val_;
      v257 = *(double *)&self->_lastSolutionTime.__engaged_;
      vioAvailableTime = self->_vioAvailableTime;
      ioSourceTime = self->_ioSourceTime;
      v260 = val + v257 + vioAvailableTime + ioSourceTime;
      v261 = val / v260;
      v262 = v257 / v260;
      v263 = vioAvailableTime / v260;
      v264 = ioSourceTime / v260;
      v265 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v265, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)pthread_attr_t buf = 134218752;
        *(double *)&uint8_t buf[4] = v261;
        v324 = 2048;
        v325 = *(const __CFString **)&v262;
        v326 = 2048;
        v327 = v263;
        v328 = 2048;
        v329 = v264;
        _os_log_impl( (void *)&_mh_execute_header,  v265,  OS_LOG_TYPE_DEFAULT,  "#ni-ca,odometry source ratio, VIO: %f, IO: %f, DeltaV: %f, None: %f",  buf,  0x2Au);
      }

      v266 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v261));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v266, @"OdometrySourceVIO");

      v267 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v262));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v267, @"OdometrySourceIO");

      v268 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v263));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v268, @"OdometrySourceDeltaV");

      v269 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v264));
      -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v269, @"OdometrySourceNone");

      value = self->_deltaAngleErrorHistory.__end_cap_.__value_;
      end = self->_deltaAngleErrorHistory.__end_;
      if ((unint64_t)((char *)value - (char *)end) >= 0x29)
      {
        v310 = 0LL;
        v311 = 0LL;
        __p = 0LL;
        sub_100031758(&__p, end, (uint64_t)value, value - end);
        -[NIServerAnalyticsManager _calculateErrorStatsFromVector:](self, "_calculateErrorStatsFromVector:", &__p);
        if (__p)
        {
          v310 = __p;
          operator delete(__p);
        }

        v272 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v272, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)pthread_attr_t buf = 134219008;
          *(double *)&uint8_t buf[4] = v312;
          v324 = 2048;
          v325 = *(const __CFString **)&v313;
          v326 = 2048;
          v327 = v314;
          v328 = 2048;
          v329 = v315;
          v330 = 2048;
          v331 = v316;
          _os_log_impl( (void *)&_mh_execute_header,  v272,  OS_LOG_TYPE_DEFAULT,  "#ni-ca,point errors mean: %f, std: %f, median: %f, 95th: %f, n: %zu",  buf,  0x34u);
        }

        v273 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v312));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v273, @"PointToPointErrorMean");

        v274 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v313));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v274, @"PointToPointErrorStd");

        v275 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v314));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v275, @"PointToPointErrorMedian");

        v276 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v315));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v276, @"PointToPointError95th");

        v277 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", (double)v316));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v277, @"PointToPointErrorN");
      }

      v278 = self->_angleErrorHistory.__end_cap_.__value_;
      v279 = self->_angleErrorHistory.__end_;
      if ((unint64_t)((char *)v278 - (char *)v279) >= 0x29)
      {
        v307 = 0LL;
        v308 = 0LL;
        v306 = 0LL;
        sub_100031758(&v306, v279, (uint64_t)v278, v278 - v279);
        -[NIServerAnalyticsManager _calculateErrorStatsFromVector:](self, "_calculateErrorStatsFromVector:", &v306);
        if (v306)
        {
          v307 = v306;
          operator delete(v306);
        }

        v280 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v280, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)pthread_attr_t buf = 134219008;
          *(double *)&uint8_t buf[4] = v312;
          v324 = 2048;
          v325 = *(const __CFString **)&v313;
          v326 = 2048;
          v327 = v314;
          v328 = 2048;
          v329 = v315;
          v330 = 2048;
          v331 = v316;
          _os_log_impl( (void *)&_mh_execute_header,  v280,  OS_LOG_TYPE_DEFAULT,  "#ni-ca,delta dot errors mean: %f, std: %f, median: %f, 95th: %f, n: %zu",  buf,  0x34u);
        }

        v281 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v312));
        -[os_log_s setObject:forKey:]( v191,  "setObject:forKey:",  v281,  @"IODirectionOfTravelErrorDeltaDegreesMean");

        v282 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v313));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v282, @"IODirectionOfTravelErrorDeltaDegreesStd");

        v283 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v314));
        -[os_log_s setObject:forKey:]( v191,  "setObject:forKey:",  v283,  @"IODirectionOfTravelErrorDeltaDegreesMedian");

        v284 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v315));
        -[os_log_s setObject:forKey:]( v191,  "setObject:forKey:",  v284,  @"IODirectionOfTravelErrorDeltaDegrees95th");

        v285 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", (double)v316));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v285, @"IODirectionOfTravelErrorDeltaDegreesN");
      }

      v286 = *(void *)&self->_timeOfLastPDRUpdate.__engaged_;
      v287 = self->_timeOfLastPDRUpdate.var0.__val_;
      if ((unint64_t)(v286 - *(void *)&v287) >= 0x29)
      {
        v304 = 0LL;
        v305 = 0LL;
        v303 = 0LL;
        sub_100031758(&v303, *(const void **)&v287, v286, (v286 - *(void *)&v287) >> 2);
        -[NIServerAnalyticsManager _calculateErrorStatsFromVector:](self, "_calculateErrorStatsFromVector:", &v303);
        if (v303)
        {
          v304 = v303;
          operator delete(v303);
        }

        v288 = (os_log_s *)(id)qword_1008000A0;
        if (os_log_type_enabled(v288, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)pthread_attr_t buf = 134219008;
          *(double *)&uint8_t buf[4] = v312;
          v324 = 2048;
          v325 = *(const __CFString **)&v313;
          v326 = 2048;
          v327 = v314;
          v328 = 2048;
          v329 = v315;
          v330 = 2048;
          v331 = v316;
          _os_log_impl( (void *)&_mh_execute_header,  v288,  OS_LOG_TYPE_DEFAULT,  "#ni-ca,dot errors mean: %f, std: %f, median: %f, 95th: %f, n: %zu",  buf,  0x34u);
        }

        v289 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v312));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v289, @"IODirectionOfTravelErrorDegreesMean");

        v290 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v313));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v290, @"IODirectionOfTravelErrorDegreesStd");

        v291 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v314));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v291, @"IODirectionOfTravelErrorDegreesMedian");

        v292 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v315));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v292, @"IODirectionOfTravelErrorDegrees95th");

        v293 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", (double)v316));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v293, @"IODirectionOfTravelErrorDegreesN");
      }

      if (self->_anon_9d8[171])
      {
        v294 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_anon_9d8[170]));
        -[os_log_s setObject:forKey:](v191, "setObject:forKey:", v294, @"FindeeIsPhone");
      }

      v295 = -[os_log_s mutableCopy](v191, "mutableCopy");
      v296 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v296, OS_LOG_TYPE_INFO))
      {
        v297 = self->_bundleIdentifier;
        v298 = (id)objc_claimAutoreleasedReturnValue([v295 description]);
        *(_DWORD *)pthread_attr_t buf = 138412802;
        *(void *)&uint8_t buf[4] = v297;
        v324 = 2112;
        v325 = @"com.apple.nearbyinteraction.peopleFindingSession.FinderSummary";
        v326 = 2112;
        v327 = *(double *)&v298;
        _os_log_impl( (void *)&_mh_execute_header,  v296,  OS_LOG_TYPE_INFO,  "#ni-ca,[%@] send analytics event %@:\n%@\n",  buf,  0x20u);
      }

      v301[0] = _NSConcreteStackBlock;
      v301[1] = 3221225472LL;
      v301[2] = sub_10002FBD4;
      v301[3] = &unk_1007A2298;
      v299 = v295;
      v302 = v299;
      AnalyticsSendEventLazy(@"com.apple.nearbyinteraction.peopleFindingSession.FinderSummary", v301);
    }
  }
}

  double v9 = *((_DWORD *)this + 24);
  if ((v9 & 2) != 0)
  {
    __int128 v10 = *((void *)this + 2);
    if (!v10) {
      __int128 v10 = *(void *)(qword_1008000E8 + 16);
    }
    *(_BYTE *)__int128 v4 = 18;
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v10 + 40);
    if (v11 > 0x7F)
    {
      __int128 v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v11,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v11;
      __int128 v12 = (uint64_t)v4 + 2;
    }

    __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10004B5BC(v10, v12, a3);
    double v9 = *((_DWORD *)this + 24);
    if ((v9 & 4) == 0)
    {
LABEL_10:
      if ((v9 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_30;
    }
  }

  else if ((v9 & 4) == 0)
  {
    goto LABEL_10;
  }

  uint64_t v13 = *((void *)this + 3);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1008000E8 + 24);
  }
  *(_BYTE *)__int128 v4 = 26;
  __int128 v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v13 + 40);
  if (v14 > 0x7F)
  {
    uint64_t v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v14;
    uint64_t v15 = (uint64_t)v4 + 2;
  }

  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10004B5BC(v13, v15, a3);
  double v9 = *((_DWORD *)this + 24);
  if ((v9 & 8) == 0)
  {
LABEL_11:
    if ((v9 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }

  if (*((int *)this + 6) >= 1)
  {
    __double2 v8 = 0LL;
    do
    {
      double v9 = *(unsigned int **)(*((void *)this + 2) + 8 * v8);
      *(_BYTE *)uint64_t v3 = 18;
      __int128 v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9[19];
      if (v10 > 0x7F)
      {
        uint64_t v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v10,  (int)v3 + 1,  a3);
      }

      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v10;
        uint64_t v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }

      uint64_t v3 = sub_100053FA4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v9, v11, a3);
      ++v8;
    }

    while (v8 < *((int *)this + 6));
  }

  if ((*((_BYTE *)this + 52) & 4) != 0)
  {
    __int128 v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 11);
    *(_BYTE *)uint64_t v3 = 24;
    uint64_t v13 = (unint64_t)v3 + 1;
    if ((v12 & 0x80000000) != 0)
    {
      __int128 v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v12,  v13,  a3);
    }

    else
    {
      if (v12 <= 0x7F)
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v12;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_21;
      }

      __int128 v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v12,  v13,  a3);
    }

    uint64_t v3 = v14;
  }

  if ((v3 & 0x80) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 112),  (unint64_t)a2)
        + 1;
    uint64_t v3 = *(_DWORD *)(a1 + 284);
  }

  if ((*((_BYTE *)this + 28) & 2) != 0)
  {
    id v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
    *(_BYTE *)a2 = 16;
    if ((v6 & 0x80000000) != 0)
    {
      __double2 v7 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v6,  (unint64_t)a2 + 1,  a3);
    }

    else
    {
      if (v6 <= 0x7F)
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v6;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_15;
      }

      __double2 v7 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v6,  (int)a2 + 1,  a3);
    }

    a2 = v7;
  }

  if ((*((_BYTE *)this + 28) & 2) != 0)
  {
    id v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
    *(_BYTE *)a2 = 16;
    if ((v6 & 0x80000000) != 0)
    {
      __double2 v7 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v6,  (unint64_t)a2 + 1,  a3);
    }

    else
    {
      if (v6 <= 0x7F)
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v6;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_15;
      }

      __double2 v7 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v6,  (int)a2 + 1,  a3);
    }

    a2 = v7;
  }

  if ((*((_BYTE *)this + 68) & 2) != 0)
  {
    __double2 v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(_BYTE *)uint64_t v3 = 16;
    if (v8 > 0x7F)
    {
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v8,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 68) & 4) != 0)
  {
    double v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(_BYTE *)uint64_t v3 = 24;
    if (v9 > 0x7F)
    {
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v9,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v9;
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 68) & 8) != 0)
  {
    __int128 v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(_BYTE *)uint64_t v3 = 32;
    if (v10 > 0x7F)
    {
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v10,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v10;
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 68) & 0x10) != 0)
  {
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(_BYTE *)uint64_t v3 = 40;
    if (v11 > 0x7F)
    {
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v11,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v11;
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if (*((int *)this + 10) >= 1)
  {
    __int128 v12 = 0LL;
    do
    {
      uint64_t v13 = *(unsigned int **)(*((void *)this + 4) + 8 * v12);
      *(_BYTE *)uint64_t v3 = 50;
      __int128 v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[6];
      if (v14 > 0x7F)
      {
        uint64_t v15 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  (int)v3 + 1,  a3);
      }

      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v14;
        uint64_t v15 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }

      uint64_t v3 = sub_100060174((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
      ++v12;
    }

    while (v12 < *((int *)this + 10));
  }

  if ((*((_BYTE *)this + 68) & 0x40) != 0)
  {
    __int128 v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 15);
    *(_BYTE *)uint64_t v3 = 56;
    uint64_t v17 = (unint64_t)v3 + 1;
    if ((v16 & 0x80000000) != 0)
    {
      __int128 v18 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v16,  v17,  a3);
    }

    else
    {
      if (v16 <= 0x7F)
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v16;
        uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_37;
      }

      __int128 v18 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v16,  v17,  a3);
    }

    uint64_t v3 = v18;
  }

  id v6 = *((_DWORD *)this + 9);
  if ((v6 & 2) != 0)
  {
    __double2 v7 = *((void *)this + 2);
    *a2 = 17;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    id v6 = *((_DWORD *)this + 9);
  }

  if ((v6 & 4) != 0)
  {
    __double2 v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *a2 = 24;
    if (v8 > 0x7F)
    {
      a2 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v8,  (int)a2 + 1,  a3);
    }

    else
    {
      a2[1] = (_BYTE)v8;
      a2 += 2;
    }
  }

  uint64_t v11 = (void *)*((void *)this + 1);
  __int128 v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  double v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }
  else {
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v10,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  if ((*((_BYTE *)this + 108) & 2) != 0)
  {
    __double2 v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(_BYTE *)uint64_t v3 = 16;
    if (v8 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v8,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 108) & 4) != 0)
  {
    double v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(_BYTE *)uint64_t v3 = 24;
    if (v9 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v9,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v9;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 108) & 8) != 0)
  {
    __int128 v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(_BYTE *)uint64_t v3 = 32;
    if (v10 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v10,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v10;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 108) & 0x10) != 0)
  {
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(_BYTE *)uint64_t v3 = 40;
    if (v11 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v11,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v11;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if (*((int *)this + 10) >= 1)
  {
    __int128 v12 = 0LL;
    while (1)
    {
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 4) + 4 * v12);
      *(_BYTE *)uint64_t v3 = 48;
      __int128 v14 = (unint64_t)v3 + 1;
      if (v13 > 0x7F)
      {
        uint64_t v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v13,  v14,  a3);
        goto LABEL_31;
      }

      *((_BYTE *)v3 + 1) = (_BYTE)v13;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
LABEL_32:
    }

    uint64_t v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v13,  v14,  a3);
LABEL_31:
    uint64_t v3 = v15;
    goto LABEL_32;
  }

  if (*((int *)this + 6) >= 1)
  {
    id v6 = 0LL;
    do
    {
      __double2 v7 = *(_DWORD *)(*((void *)this + 2) + 4 * v6);
      *a2 = 21;
      *(_DWORD *)(a2 + 1) = v7;
      a2 += 5;
      ++v6;
    }

    while (v6 < *((int *)this + 6));
  }

  __int128 v10 = (void *)*((void *)this + 1);
  double v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  __double2 v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }
  else {
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v9,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  __double2 v7 = *((void *)this + 4);
  *(_BYTE *)a2 = 25;
  *(void *)(a2 + 1) = v7;
  a2 += 9LL;
  if ((*((_DWORD *)this + 14) & 8) == 0) {
    goto LABEL_12;
  }
LABEL_9:
  __double2 v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  *(_BYTE *)a2 = 32;
  if (v8 > 0x7F)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v8,  (int)a2 + 1,  a3);
  }

  else
  {
    *(_BYTE *)(a2 + 1) = (_BYTE)v8;
    a2 += 2LL;
  }

  id v6 = *((_DWORD *)this + 16);
  if ((v6 & 2) != 0)
  {
    __int128 v12 = *((void *)this + 2);
    *a2 = 17;
    *(void *)(a2 + 1) = v12;
    a2 += 9;
    id v6 = *((_DWORD *)this + 16);
    if ((v6 & 4) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_20;
    }
  }

  else if ((v6 & 4) == 0)
  {
    goto LABEL_10;
  }

  uint64_t v13 = *((void *)this + 3);
  *a2 = 25;
  *(void *)(a2 + 1) = v13;
  a2 += 9;
  id v6 = *((_DWORD *)this + 16);
  if ((v6 & 8) == 0)
  {
LABEL_11:
    if ((v6 & 0x10) == 0) {
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v15 = *((void *)this + 5);
    *a2 = 41;
    *(void *)(a2 + 1) = v15;
    a2 += 9;
    if ((*((_DWORD *)this + 16) & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

  if ((*((_BYTE *)this + 32) & 2) != 0)
  {
    id v6 = *((void *)this + 2);
    *a2 = 17;
    *(void *)(a2 + 1) = v6;
    a2 += 9;
  }

  double v9 = (void *)*((void *)this + 1);
  __double2 v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  __double2 v7 = v9;
  if (!v9 || *v7 == v7[1]) {
    return a2;
  }
  else {
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v8,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  if ((*((_BYTE *)this + 252) & 2) == 0) {
    goto LABEL_15;
  }
  double v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
  *(_BYTE *)__int128 v4 = 16;
  __int128 v10 = (unint64_t)v4 + 1;
  if ((v9 & 0x80000000) != 0)
  {
    uint64_t v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v9,  v10,  a3);
  }

  else
  {
    if (v9 <= 0x7F)
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v9;
      __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_15;
    }

    uint64_t v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v9,  v10,  a3);
  }

  __int128 v4 = v11;
LABEL_15:
  __int128 v12 = *((_DWORD *)this + 63);
  if ((v12 & 4) != 0)
  {
    uint64_t v13 = (unsigned int *)*((void *)this + 3);
    if (!v13) {
      uint64_t v13 = *(unsigned int **)(qword_1008001F0 + 24);
    }
    *(_BYTE *)__int128 v4 = 26;
    __int128 v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[6];
    if (v14 > 0x7F)
    {
      uint64_t v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v14;
      uint64_t v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }

    __int128 v4 = sub_100080AA0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
    __int128 v12 = *((_DWORD *)this + 63);
    if ((v12 & 8) == 0)
    {
LABEL_17:
      if ((v12 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_56;
    }
  }

  else if ((v12 & 8) == 0)
  {
    goto LABEL_17;
  }

  __int128 v16 = (unsigned int *)*((void *)this + 4);
  if (!v16) {
    __int128 v16 = *(unsigned int **)(qword_1008001F0 + 32);
  }
  *(_BYTE *)__int128 v4 = 34;
  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[16];
  if (v17 > 0x7F)
  {
    __int128 v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v17;
    __int128 v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  __int128 v4 = sub_1000816A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, v18, a3);
  __int128 v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x10) == 0)
  {
LABEL_18:
    if ((v12 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_62;
  }

  if ((*((_BYTE *)this + 32) & 2) != 0)
  {
    __double2 v8 = (unsigned int *)*((void *)this + 2);
    if (!v8) {
      __double2 v8 = *(unsigned int **)(qword_100800200 + 16);
    }
    *(_BYTE *)uint64_t v3 = 18;
    double v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[7];
    if (v9 > 0x7F)
    {
      __int128 v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v9,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v9;
      __int128 v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }

    uint64_t v3 = sub_10007FBB4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, v10, a3);
  }

  uint64_t v13 = (void *)*((void *)this + 1);
  __int128 v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v11 = v13;
  if (!v13 || *v11 == v11[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v12,  v3,  a3);
  }
}

  if (*((int *)this + 6) >= 1)
  {
    double v9 = 0LL;
    do
    {
      __int128 v10 = *(unsigned int **)(*((void *)this + 2) + 8 * v9);
      *(_BYTE *)__int128 v4 = 18;
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[7];
      if (v11 > 0x7F)
      {
        __int128 v12 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v11,  (int)v4 + 1,  a3);
      }

      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v11;
        __int128 v12 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }

      __int128 v4 = sub_1000862A0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v12, a3, a4);
      ++v9;
    }

    while (v9 < *((int *)this + 6));
  }

  uint64_t v15 = (void *)*((void *)this + 1);
  __int128 v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return v4;
  }
  else {
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v14,  v4,  a3);
  }
}

  if ((*((_BYTE *)this + 32) & 2) != 0)
  {
    __double2 v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(_BYTE *)uint64_t v3 = 16;
    if (v8 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v8,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 32) & 4) != 0)
  {
    double v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(_BYTE *)uint64_t v3 = 24;
    if (v9 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v9,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v9;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  __int128 v12 = (void *)*((void *)this + 1);
  uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  __int128 v10 = v12;
  if (!v12 || *v10 == v10[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v11,  v3,  a3);
  }
}

  if ((*((_BYTE *)this + 52) & 2) == 0) {
    goto LABEL_15;
  }
  __double2 v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
  *(_BYTE *)uint64_t v3 = 16;
  double v9 = (unint64_t)v3 + 1;
  if ((v8 & 0x80000000) != 0)
  {
    __int128 v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v8,  v9,  a3);
  }

  else
  {
    if (v8 <= 0x7F)
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_15;
    }

    __int128 v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v8,  v9,  a3);
  }

  uint64_t v3 = v10;
LABEL_15:
  if ((*((_BYTE *)this + 52) & 4) == 0) {
    goto LABEL_22;
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
  *(_BYTE *)uint64_t v3 = 24;
  __int128 v12 = (unint64_t)v3 + 1;
  if ((v11 & 0x80000000) != 0)
  {
    uint64_t v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v11,  v12,  a3);
  }

  else
  {
    if (v11 <= 0x7F)
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v11;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_22;
    }

    uint64_t v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v11,  v12,  a3);
  }

  uint64_t v3 = v13;
LABEL_22:
  if ((*((_BYTE *)this + 52) & 8) == 0) {
    goto LABEL_29;
  }
  __int128 v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 7);
  *(_BYTE *)uint64_t v3 = 32;
  uint64_t v15 = (unint64_t)v3 + 1;
  if ((v14 & 0x80000000) != 0)
  {
    __int128 v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v14,  v15,  a3);
  }

  else
  {
    if (v14 <= 0x7F)
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v14;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_29;
    }

    __int128 v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  v15,  a3);
  }

  uint64_t v3 = v16;
LABEL_29:
  if ((*((_BYTE *)this + 52) & 0x10) == 0) {
    goto LABEL_36;
  }
  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
  *(_BYTE *)uint64_t v3 = 40;
  __int128 v18 = (unint64_t)v3 + 1;
  if ((v17 & 0x80000000) != 0)
  {
    dispatch_source_t v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v17,  v18,  a3);
  }

  else
  {
    if (v17 <= 0x7F)
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v17;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_36;
    }

    dispatch_source_t v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  v18,  a3);
  }

  uint64_t v3 = v19;
LABEL_36:
  if ((*((_BYTE *)this + 52) & 0x20) == 0) {
    goto LABEL_43;
  }
  __int128 v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 9);
  *(_BYTE *)uint64_t v3 = 48;
  uint64_t v21 = (unint64_t)v3 + 1;
  if ((v20 & 0x80000000) != 0)
  {
    __int128 v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v20,  v21,  a3);
  }

  else
  {
    if (v20 <= 0x7F)
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v20;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_43;
    }

    __int128 v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v20,  v21,  a3);
  }

  uint64_t v3 = v22;
LABEL_43:
  if ((*((_BYTE *)this + 52) & 0x40) == 0) {
    goto LABEL_50;
  }
  unint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 10);
  *(_BYTE *)uint64_t v3 = 56;
  __int128 v24 = (unint64_t)v3 + 1;
  if ((v23 & 0x80000000) != 0)
  {
    uint64_t v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v23,  v24,  a3);
  }

  else
  {
    if (v23 <= 0x7F)
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v23;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_50;
    }

    uint64_t v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v23,  v24,  a3);
  }

  uint64_t v3 = v25;
LABEL_50:
  if ((*((_BYTE *)this + 52) & 0x80) != 0)
  {
    __int128 v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 11);
    *(_BYTE *)uint64_t v3 = 64;
    uint64_t v27 = (unint64_t)v3 + 1;
    if ((v26 & 0x80000000) != 0)
    {
      __int128 v28 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v26,  v27,  a3);
    }

    else
    {
      if (v26 <= 0x7F)
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v26;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_57;
      }

      __int128 v28 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v26,  v27,  a3);
    }

    uint64_t v3 = v28;
  }

  if ((*((_BYTE *)this + 28) & 2) != 0)
  {
    id v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
    *(_BYTE *)a2 = 16;
    if ((v6 & 0x80000000) != 0)
    {
      __double2 v7 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v6,  (unint64_t)a2 + 1,  a3);
    }

    else
    {
      if (v6 <= 0x7F)
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v6;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_15;
      }

      __double2 v7 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v6,  (int)a2 + 1,  a3);
    }

    a2 = v7;
  }

  if ((*((_BYTE *)this + 100) & 2) != 0)
  {
    double v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(_BYTE *)__int128 v4 = 16;
    if (v9 > 0x7F)
    {
      __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v9,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v9;
      __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  __int128 v10 = *((_DWORD *)this + 25);
  if ((v10 & 4) != 0)
  {
    __int128 v20 = *((void *)this + 3);
    *(_BYTE *)__int128 v4 = 26;
    else {
      uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v20 + 23);
    }
    if (v21 > 0x7F)
    {
      __int128 v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v21,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v21;
      __int128 v22 = (_DWORD)v4 + 2;
    }

    unint64_t v23 = *(char *)(v20 + 23);
    if (v23 >= 0) {
      __int128 v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20;
    }
    else {
      __int128 v24 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v20;
    }
    if (v23 >= 0) {
      uint64_t v25 = (const void *)*(unsigned __int8 *)(v20 + 23);
    }
    else {
      uint64_t v25 = (const void *)*(unsigned int *)(v20 + 8);
    }
    __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v24,  v25,  v22,  a4);
    __int128 v10 = *((_DWORD *)this + 25);
    if ((v10 & 8) == 0)
    {
LABEL_14:
      if ((v10 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_55;
    }
  }

  else if ((v10 & 8) == 0)
  {
    goto LABEL_14;
  }

  __int128 v26 = *((void *)this + 4);
  *(_BYTE *)__int128 v4 = 34;
  else {
    uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v26 + 23);
  }
  if (v27 > 0x7F)
  {
    __int128 v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v27,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v27;
    __int128 v28 = (_DWORD)v4 + 2;
  }

  uint64_t v29 = *(char *)(v26 + 23);
  if (v29 >= 0) {
    __int128 v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26;
  }
  else {
    __int128 v30 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v26;
  }
  if (v29 >= 0) {
    uint64_t v31 = (const void *)*(unsigned __int8 *)(v26 + 23);
  }
  else {
    uint64_t v31 = (const void *)*(unsigned int *)(v26 + 8);
  }
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v30,  v31,  v28,  a4);
  __int128 v10 = *((_DWORD *)this + 25);
  if ((v10 & 0x10) == 0)
  {
LABEL_15:
    if ((v10 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_61;
  }

  if ((*((_BYTE *)this + 32) & 2) != 0)
  {
    id v6 = *((void *)this + 2);
    *a2 = 17;
    *(void *)(a2 + 1) = v6;
    a2 += 9;
  }

  double v9 = (void *)*((void *)this + 1);
  __double2 v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  __double2 v7 = v9;
  if (!v9 || *v7 == v7[1]) {
    return a2;
  }
  else {
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v8,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  if ((*((_BYTE *)this + 104) & 2) != 0)
  {
    __double2 v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(_BYTE *)uint64_t v3 = 16;
    if (v8 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v8,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 104) & 4) != 0)
  {
    double v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(_BYTE *)uint64_t v3 = 24;
    if (v9 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v9,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v9;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 104) & 8) != 0)
  {
    __int128 v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(_BYTE *)uint64_t v3 = 32;
    if (v10 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v10,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v10;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 104) & 0x20) != 0)
  {
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 9);
    *(_BYTE *)uint64_t v3 = 40;
    __int128 v12 = (unint64_t)v3 + 1;
    if ((v11 & 0x80000000) != 0)
    {
      uint64_t v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v11,  v12,  a3);
    }

    else
    {
      if (v11 <= 0x7F)
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v11;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_27;
      }

      uint64_t v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v11,  v12,  a3);
    }

    uint64_t v3 = v13;
  }

  if (*((int *)this + 6) >= 1)
  {
    __double2 v8 = 0LL;
    do
    {
      double v9 = *(unsigned int **)(*((void *)this + 2) + 8 * v8);
      *(_BYTE *)uint64_t v3 = 18;
      __int128 v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9[6];
      if (v10 > 0x7F)
      {
        uint64_t v11 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v10,  (int)v3 + 1,  a3);
      }

      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v10;
        uint64_t v11 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }

      uint64_t v3 = sub_100090984((wireless_diagnostics::google::protobuf::internal::WireFormat *)v9, v11, a3);
      ++v8;
    }

    while (v8 < *((int *)this + 6));
  }

  __int128 v12 = *((_DWORD *)this + 22);
  if ((v12 & 4) != 0)
  {
    uint64_t v13 = *((void *)this + 5);
    *(_BYTE *)uint64_t v3 = 25;
    *(void *)((char *)v3 + 1) = v13;
    uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    __int128 v12 = *((_DWORD *)this + 22);
    if ((v12 & 8) == 0)
    {
LABEL_16:
      if ((v12 & 0x10) == 0) {
        goto LABEL_23;
      }
      goto LABEL_20;
    }
  }

  else if ((v12 & 8) == 0)
  {
    goto LABEL_16;
  }

  __int128 v14 = *((void *)this + 7);
  *(_BYTE *)uint64_t v3 = 33;
  *(void *)((char *)v3 + 1) = v14;
  uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  if ((*((_DWORD *)this + 22) & 0x10) == 0) {
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  *(_BYTE *)uint64_t v3 = 40;
  if (v15 > 0x7F)
  {
    uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v15;
    uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }

  if ((*((_BYTE *)this + 52) & 2) != 0)
  {
    __double2 v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(_BYTE *)uint64_t v3 = 16;
    if (v8 > 0x7F)
    {
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v8,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  double v9 = *((_DWORD *)this + 13);
  if ((v9 & 4) != 0)
  {
    __int128 v10 = (unsigned int *)*((void *)this + 3);
    if (!v10) {
      __int128 v10 = *(unsigned int **)(qword_100800328 + 24);
    }
    *(_BYTE *)uint64_t v3 = 26;
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[6];
    if (v11 > 0x7F)
    {
      __int128 v12 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v11,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v11;
      __int128 v12 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }

    uint64_t v3 = sub_100090984((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v12, a3);
    double v9 = *((_DWORD *)this + 13);
    if ((v9 & 8) == 0)
    {
LABEL_14:
      if ((v9 & 0x10) == 0) {
        goto LABEL_31;
      }
      goto LABEL_28;
    }
  }

  else if ((v9 & 8) == 0)
  {
    goto LABEL_14;
  }

  uint64_t v13 = (unsigned int *)*((void *)this + 4);
  if (!v13) {
    uint64_t v13 = *(unsigned int **)(qword_100800328 + 32);
  }
  *(_BYTE *)uint64_t v3 = 34;
  __int128 v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[6];
  if (v14 > 0x7F)
  {
    uint64_t v15 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v14;
    uint64_t v15 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }

  uint64_t v3 = sub_100090984((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
  if ((*((_DWORD *)this + 13) & 0x10) != 0)
  {
LABEL_28:
    __int128 v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    *(_BYTE *)uint64_t v3 = 40;
    if (v16 > 0x7F)
    {
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v16,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v16;
      uint64_t v3 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  v95[3] = v91;
  __int128 v96 = qword_1008004A0;
  if (qword_1008004A0)
  {
    v95[4] = qword_1008004A0;
  }

  else
  {
    unint64_t v87 = sub_1000CB968(v87);
    __int128 v96 = qword_1008004A0;
    v95[4] = qword_1008004A0;
    if (!v96)
    {
      unint64_t v87 = sub_1000CB968(v87);
      __int128 v96 = qword_1008004A0;
    }
  }

  v95[5] = v96;
  uint64_t v97 = qword_1008004D0;
  unint64_t v98 = qword_1008004A8;
  if (qword_1008004A8)
  {
    *(void *)(qword_1008004D0 + 40) = qword_1008004A8;
    unint64_t v99 = qword_1008004D8;
    unsigned __int16 v100 = (void *)&unk_100800000;
  }

  else
  {
    unint64_t v87 = sub_1000CB968(v87);
    unint64_t v98 = qword_1008004A8;
    *(void *)(v97 + 40) = qword_1008004A8;
    unint64_t v99 = qword_1008004D8;
    unsigned __int16 v100 = &unk_100800000;
    if (!v98)
    {
      unint64_t v87 = sub_1000CB968(v87);
      unint64_t v98 = qword_1008004A8;
    }
  }

  *(void *)(v99 + 40) = v98;
  unint64_t v101 = qword_1008004F0;
  __int128 v102 = v100[157];
  if (v102)
  {
    *(void *)(qword_1008004F0 + 16) = v102;
  }

  else
  {
    unint64_t v87 = sub_1000CB968(v87);
    __int128 v102 = v100[157];
    *(void *)(v101 + 16) = v102;
    if (!v102)
    {
      unint64_t v87 = sub_1000CB968(v87);
      __int128 v102 = v100[157];
    }
  }

  *(void *)(v101 + 24) = v102;
  __int128 v103 = (void *)qword_100800500;
  __int128 v104 = sub_10007578C(v87, v88, v89, v90);
  v103[5] = v104;
  __int128 v108 = sub_1000757B8(v104, v105, v106, v107);
  v103[6] = v108;
  __int128 v112 = sub_1000B90B0(v108, v109, v110, v111);
  v103[7] = v112;
  __int128 v113 = qword_100800508;
  uint64_t v114 = qword_1008004A8;
  if (!qword_1008004A8)
  {
    __int128 v112 = sub_1000CB968(v112);
    uint64_t v114 = qword_1008004A8;
  }

  *(void *)(v113 + sub_100012358(v1 - 32) = v114;
  uint64_t v115 = qword_100800538;
  uint64_t v116 = qword_100800530;
  if (!qword_100800530)
  {
    __int128 v112 = sub_1000CB968(v112);
    uint64_t v116 = qword_100800530;
  }

  *(void *)(v115 + 24) = v116;
  uint64_t v117 = qword_100800548;
  uint64_t v118 = qword_100800540;
  if (qword_100800540)
  {
    *(void *)(qword_100800548 + 24) = qword_100800540;
  }

  else
  {
    __int128 v112 = sub_1000CB968(v112);
    uint64_t v118 = qword_100800540;
    *(void *)(v117 + 24) = qword_100800540;
    if (!v118)
    {
      __int128 v112 = sub_1000CB968(v112);
      uint64_t v118 = qword_100800540;
    }
  }

  *(void *)(v117 + sub_100012358(v1 - 32) = v118;
  uint64_t v119 = qword_100800550;
  int v120 = qword_100800530;
  if (!qword_100800530)
  {
    sub_1000CB968(v112);
    int v120 = qword_100800530;
  }

  *(void *)(v119 + 56) = v120;
  int v121 = sub_1000CDF90(qword_100800558);
  uint64_t v125 = (void *)qword_100800590;
  uint64_t v126 = qword_100800588;
  if (qword_100800588)
  {
    *(void *)(qword_100800590 + 48) = qword_100800588;
  }

  else
  {
    int v121 = sub_1000CB968(v121);
    uint64_t v126 = qword_100800588;
    v125[6] = qword_100800588;
    if (!v126)
    {
      int v121 = sub_1000CB968(v121);
      uint64_t v126 = qword_100800588;
      v125[7] = qword_100800588;
      if (!v126)
      {
        int v121 = sub_1000CB968(v121);
        uint64_t v126 = qword_100800588;
      }

      goto LABEL_34;
    }
  }

  v125[7] = v126;
LABEL_34:
  v125[8] = v126;
  __int16 v127 = qword_1008005A8;
  double v128 = qword_1008005A0;
  if (!qword_1008005A0)
  {
    int v121 = sub_1000CB968(v121);
    double v128 = qword_1008005A0;
  }

  *(void *)(v127 + 16) = v128;
  unsigned int v129 = (void *)qword_1008005B8;
  uint64_t v130 = qword_1008005B0;
  if (!qword_1008005B0)
  {
    int v121 = sub_1000CB968(v121);
    uint64_t v130 = qword_1008005B0;
  }

  v129[4] = v130;
  id v131 = qword_100800598;
  if (!qword_100800598)
  {
    int v121 = sub_1000CB968(v121);
    id v131 = qword_100800598;
  }

  v129[5] = v131;
  char v132 = qword_1008005A8;
  if (!qword_1008005A8)
  {
    int v121 = sub_1000CB968(v121);
    id v131 = qword_100800598;
    char v132 = qword_1008005A8;
  }

  v129[6] = v132;
  __int128 v133 = qword_1008005C0;
  if (!v131)
  {
    int v121 = sub_1000CB968(v121);
    id v131 = qword_100800598;
  }

  *(void *)(v133 + 16) = v131;
  unint64_t v134 = (void *)qword_1008005E0;
  v135 = qword_1008005C8;
  if (!qword_1008005C8)
  {
    int v121 = sub_1000CB968(v121);
    v135 = qword_1008005C8;
  }

  v134[2] = v135;
  v136 = qword_1008005D0;
  if (!qword_1008005D0)
  {
    int v121 = sub_1000CB968(v121);
    v136 = qword_1008005D0;
  }

  v134[3] = v136;
  int v137 = qword_1008005D8;
  if (!qword_1008005D8)
  {
    int v121 = sub_1000CB968(v121);
    int v137 = qword_1008005D8;
  }

  v134[4] = v137;
  uint64_t v138 = qword_1008005E8;
  v139 = sub_10004D388(v121, v122, v123, v124);
  *(void *)(v138 + sub_100012358(v1 - 32) = v139;
  int v143 = qword_100800618;
  v144 = qword_100800610;
  if (!qword_100800610)
  {
    v139 = sub_1000CB968(v139);
    v144 = qword_100800610;
  }

  *(void *)(v143 + 16) = v144;
  v145 = qword_100800638;
  *(void *)(v145 + 24) = sub_1000B9A8C(v139, v140, v141, v142);
  uint64_t v149 = sub_1000CE054(qword_100800658, v146, v147, v148);
  v151 = qword_1008006A8;
  int v152 = qword_1008006A0;
  if (!qword_1008006A0)
  {
    uint64_t v149 = sub_1000CB968(v149);
    int v152 = qword_1008006A0;
  }

  *(void *)(v151 + 16) = v152;
  uint64_t v153 = qword_1008006B8;
  unsigned __int8 v154 = qword_1008006B0;
  if (!qword_1008006B0)
  {
    sub_1000CB968(v149);
    unsigned __int8 v154 = qword_1008006B0;
  }

  *(void *)(v153 + 24) = v154;
  wireless_diagnostics::google::protobuf::internal::OnShutdown( (wireless_diagnostics::google::protobuf::internal *)sub_1000CC584,  v150);
}

      id v6 = *(_BYTE *)(a2 + 48);
      *(_DWORD *)(a1 + 56) |= 8u;
      *(_BYTE *)(a1 + 48) = v6;
      id v5 = *(_DWORD *)(a2 + 56);
      goto LABEL_9;
    }

  id v6 = *((_DWORD *)this + 12);
  if ((v6 & 2) == 0)
  {
    if ((v6 & 4) == 0) {
      goto LABEL_10;
    }
LABEL_17:
    uint64_t v13 = *((void *)this + 3);
    *a2 = 25;
    *(void *)(a2 + 1) = v13;
    a2 += 9;
    if ((*((_DWORD *)this + 12) & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

  __int128 v12 = *((void *)this + 2);
  *a2 = 17;
  *(void *)(a2 + 1) = v12;
  a2 += 9;
  id v6 = *((_DWORD *)this + 12);
  if ((v6 & 4) != 0) {
    goto LABEL_17;
  }
LABEL_10:
  if ((v6 & 8) != 0)
  {
LABEL_11:
    __double2 v7 = *((void *)this + 4);
    *a2 = 33;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(void *)(v5 + 32),  (unint64_t)a2,  a4);
  if ((*(_DWORD *)(v5 + 52) & 8) == 0) {
    goto LABEL_12;
  }
LABEL_9:
  __double2 v7 = *(void *)(v5 + 40);
  if (!v7) {
    __double2 v7 = *(void *)(qword_1008004D0 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v7,  a2,  a4);
LABEL_12:
  __int128 v10 = *(void **)(v5 + 8);
  double v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  __double2 v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

  if (*(int *)(a1 + 72) >= 1)
  {
    id v5 = 0LL;
    do
    {
      id v6 = *(void *)(*(void *)(a1 + 64) + 8 * v5);
      *(_BYTE *)a2 = 57;
      *(void *)(a2 + 1) = v6;
      a2 += 9LL;
      ++v5;
    }

    while (v5 < *(int *)(a1 + 72));
  }

  if (*(int *)(a1 + 88) >= 1)
  {
    __double2 v7 = 0LL;
    do
    {
      __double2 v8 = *(void *)(*(void *)(a1 + 80) + 8 * v7);
      *(_BYTE *)a2 = 65;
      *(void *)(a2 + 1) = v8;
      a2 += 9LL;
      ++v7;
    }

    while (v7 < *(int *)(a1 + 88));
  }

  if (*(int *)(a1 + 104) >= 1)
  {
    double v9 = 0LL;
    do
    {
      __int128 v10 = *(void *)(*(void *)(a1 + 96) + 8 * v9);
      *(_BYTE *)a2 = 73;
      *(void *)(a2 + 1) = v10;
      a2 += 9LL;
      ++v9;
    }

    while (v9 < *(int *)(a1 + 104));
  }

  if (*(int *)(a1 + 120) >= 1)
  {
    uint64_t v11 = 0LL;
    do
    {
      __int128 v12 = *(void *)(*(void *)(a1 + 112) + 8 * v11);
      *(_BYTE *)a2 = 81;
      *(void *)(a2 + 1) = v12;
      a2 += 9LL;
      ++v11;
    }

    while (v11 < *(int *)(a1 + 120));
  }

  uint64_t v15 = *(void **)(a1 + 8);
  uint64_t v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  __int128 v14 = v15;
  if (!v15 || *v14 == v14[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v13,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  double v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 4);
  *(_BYTE *)__int128 v4 = 24;
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v9,  (unint64_t)v4 + 1,  a3);
  if ((*((_DWORD *)this + 18) & 8) == 0) {
    goto LABEL_12;
  }
LABEL_9:
  __int128 v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  *(_BYTE *)__int128 v4 = 32;
  if (v10 > 0x7F)
  {
    __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v10,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v10;
    __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  if ((*((_BYTE *)this + 28) & 2) != 0)
  {
    id v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
    *(_BYTE *)a2 = 16;
    if ((v6 & 0x80000000) != 0)
    {
      __double2 v7 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v6,  (unint64_t)a2 + 1,  a3);
    }

    else
    {
      if (v6 <= 0x7F)
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v6;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_15;
      }

      __double2 v7 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v6,  (int)a2 + 1,  a3);
    }

    a2 = v7;
  }

  __double2 v7 = *(void *)(v5 + 24);
  if (!v7) {
    __double2 v7 = *(void *)(qword_100800548 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v7,  a2,  a4);
  if ((*(_DWORD *)(v5 + 44) & 8) != 0)
  {
LABEL_11:
    __double2 v8 = *(void *)(v5 + 32);
    if (!v8) {
      __double2 v8 = *(void *)(qword_100800548 + 32);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v8,  a2,  a4);
  }

  __double2 v7 = *((_DWORD *)this + 5);
  *a2 = 29;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  if ((*((_DWORD *)this + 10) & 8) == 0) {
    goto LABEL_15;
  }
LABEL_9:
  __double2 v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
  *a2 = 32;
  if ((v8 & 0x80000000) != 0)
  {
    double v9 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v8,  (unint64_t)(a2 + 1),  a3);
  }

  else
  {
    if (v8 <= 0x7F)
    {
      a2[1] = (_BYTE)v8;
      a2 += 2;
      goto LABEL_15;
    }

    double v9 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v8,  (int)a2 + 1,  a3);
  }

  a2 = v9;
LABEL_15:
  if ((*((_BYTE *)this + 40) & 0x10) != 0)
  {
    __int128 v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 3);
    *a2 = 40;
    a2 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v10,  (unint64_t)(a2 + 1),  a3);
  }

  uint64_t v13 = (void *)*((void *)this + 1);
  __int128 v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v11 = v13;
  if (!v13 || *v11 == v11[1]) {
    return a2;
  }
  else {
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v12,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  __double2 v8 = *((void *)this + 4);
  *(_BYTE *)a2 = 25;
  *(void *)(a2 + 1) = v8;
  a2 += 9LL;
  if ((*((_DWORD *)this + 13) & 8) != 0) {
    goto LABEL_9;
  }
LABEL_22:
  uint64_t v17 = (void *)*((void *)this + 1);
  __int128 v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v15 = v17;
  if (!v17 || *v15 == v15[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v16,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  if ((*((_BYTE *)this + 64) & 2) == 0) {
    goto LABEL_15;
  }
  id v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
  *a2 = 16;
  if ((v6 & 0x80000000) != 0)
  {
    __double2 v7 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v6,  (unint64_t)(a2 + 1),  a3);
  }

  else
  {
    if (v6 <= 0x7F)
    {
      a2[1] = (_BYTE)v6;
      a2 += 2;
      goto LABEL_15;
    }

    __double2 v7 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v6,  (int)a2 + 1,  a3);
  }

  a2 = v7;
LABEL_15:
  __double2 v8 = *((_DWORD *)this + 16);
  if ((v8 & 4) != 0)
  {
    __int128 v14 = *((void *)this + 3);
    *a2 = 25;
    *(void *)(a2 + 1) = v14;
    a2 += 9;
    __double2 v8 = *((_DWORD *)this + 16);
    if ((v8 & 8) == 0)
    {
LABEL_17:
      if ((v8 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_28;
    }
  }

  else if ((v8 & 8) == 0)
  {
    goto LABEL_17;
  }

  uint64_t v15 = *((void *)this + 4);
  *a2 = 33;
  *(void *)(a2 + 1) = v15;
  a2 += 9;
  __double2 v8 = *((_DWORD *)this + 16);
  if ((v8 & 0x10) == 0)
  {
LABEL_18:
    if ((v8 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_29;
  }

  id v6 = *((_DWORD *)this + 7);
  if ((v6 & 2) != 0)
  {
    __int128 v12 = *((_BYTE *)this + 20);
    *(_BYTE *)a2 = 16;
    *((_BYTE *)a2 + 1) = v12;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    id v6 = *((_DWORD *)this + 7);
    if ((v6 & 4) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_11;
      }
LABEL_19:
      __int128 v14 = *((_BYTE *)this + 22);
      *(_BYTE *)a2 = 32;
      *((_BYTE *)a2 + 1) = v14;
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      if ((*((_DWORD *)this + 7) & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
  }

  else if ((v6 & 4) == 0)
  {
    goto LABEL_10;
  }

  uint64_t v13 = *((_BYTE *)this + 21);
  *(_BYTE *)a2 = 24;
  *((_BYTE *)a2 + 1) = v13;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  id v6 = *((_DWORD *)this + 7);
  if ((v6 & 8) != 0) {
    goto LABEL_19;
  }
LABEL_11:
  if ((v6 & 0x10) != 0)
  {
LABEL_12:
    __double2 v7 = *((_BYTE *)this + 23);
    *(_BYTE *)a2 = 40;
    *((_BYTE *)a2 + 1) = v7;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  }

  __double2 v8 = (void *)*((void *)this + 1);
  __double2 v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  id v6 = v8;
  if (!v8 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v7,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  if ((*((_BYTE *)this + 52) & 2) == 0) {
    goto LABEL_15;
  }
  __double2 v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
  *(_BYTE *)uint64_t v3 = 16;
  double v9 = (unint64_t)v3 + 1;
  if ((v8 & 0x80000000) != 0)
  {
    __int128 v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v8,  v9,  a3);
  }

  else
  {
    if (v8 <= 0x7F)
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_15;
    }

    __int128 v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v8,  v9,  a3);
  }

  uint64_t v3 = v10;
LABEL_15:
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v11 = 0LL;
    do
    {
      __int128 v12 = *(void *)(*((void *)this + 3) + 8 * v11);
      *(_BYTE *)uint64_t v3 = 26;
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v12 + 32);
      if (v13 > 0x7F)
      {
        __int128 v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v13,  (int)v3 + 1,  a3);
      }

      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v13;
        __int128 v14 = (uint64_t)v3 + 2;
      }

      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010DFF0(v12, v14, a3);
      ++v11;
    }

    while (v11 < *((int *)this + 8));
  }

  uint64_t v17 = (void *)*((void *)this + 1);
  __int128 v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v15 = v17;
  if (!v17 || *v15 == v15[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v16,  v3,  a3);
  }
}

  __double2 v7 = *(void **)(a1 + 8);
  id v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  id v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  sub_10001E548(a1, (uint64_t)v3, v5, (uint64_t *)a2);
  return a2;
}

  sub_10001E548(a1, (uint64_t)v6, v8, v4);
  return v4;
}

  *(_BYTE *)(a1 + 4sub_100012358(v1 - 32) = 0;
}
}

    -[NIServerNBAMMSSession _updateSessionPayload](self, "_updateSessionPayload");
  }
}

  sub_10001E548(a1, (uint64_t)v3, v5, (uint64_t *)a2);
  return a2;
}

  sub_10001E548(a1, (uint64_t)v6, v8, v4);
  return v4;
}

    __double2 v8 = 0LL;
    goto LABEL_9;
  }

  __double2 v8 = 1LL;
LABEL_9:
  std::mutex::unlock(v4);
  return v8;
}

          if (!*(_BYTE *)(a1 + 32)) {
            sub_100006080();
          }
          sub_1002C91D0(v6, (_DWORD *)(a2 + 232));
          if (*(void *)&buf[16])
          {
            v135 = *(uint64_t *)&buf[16];
            operator delete(*(void **)&buf[16]);
          }

          break;
        default:
          goto LABEL_8;
      }
    }

    else
    {
      *(void *)a2 = 0LL;
    }
  }

  if (!*(_BYTE *)(a1 + 448)) {
    goto LABEL_87;
  }
  __double2 v8 = *(double *)(a1 + 376);
  double v9 = *(_DWORD *)(a1 + 408);
  if (v9 >= 2)
  {
    if (v9 != 2) {
      goto LABEL_87;
    }
    if (!*(_BYTE *)(a1 + 32)) {
      sub_100006080();
    }
    unint64_t v23 = *(double *)(a1 + 24);
    if (v23 - v8 >= 10.0)
    {
      unint64_t v42 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)pthread_attr_t buf = 134218240;
        *(double *)&uint8_t buf[4] = v8;
        *(_WORD *)&buf[12] = 2048;
        *(double *)&buf[14] = v23;
        _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEFAULT,  "#sa_algo,Not populating direction or range output from AoA meas with VIO, measurement time %f s is too stale c ompared to current time %f s",  buf,  0x16u);
        unint64_t v42 = (os_log_s *)qword_1008000A0;
      }

      if (!os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_51;
      }
      if (!*(_BYTE *)(a1 + 32)) {
        sub_100006080();
      }
      __int128 v45 = *(void *)(a1 + 24);
      *(_DWORD *)pthread_attr_t buf = 134218240;
      *(double *)&uint8_t buf[4] = v8;
      *(_WORD *)&buf[12] = 2048;
      *(void *)&buf[14] = v45;
      uint64_t v44 = "#sa_algo,Removing AoA measurement from cache, measurement time %f s is too stale compared to current time %f"
            " s and measurement is not usable anymore";
      goto LABEL_50;
    }

    int64_t v81 = *(float64x2_t *)(a1 + 416);
    __int128 v24 = *(double *)(a1 + 432);
    uint64_t v25 = *(unsigned __int8 *)(a1 + 440);
    __int128 v26 = *(void *)(a1 + 496) + *(void *)(a1 + 488) - 1LL;
    uint64_t v27 = *(void *)(*(void *)(a1 + 464) + ((v26 >> 2) & 0x3FFFFFFFFFFFFFF8LL)) + ((v26 & 0x1F) << 7);
    uint64_t v85 = *(_OWORD *)(v27 + 64);
    *(double *)&__int128 v28 = sub_1002C94C0( *(int8x16_t *)(v27 + 16),  *(int8x16_t *)(v27 + 32),  *(__n128 *)(v27 + 48),  *(double *)(v27 + 64),  a3);
    unint64_t v88 = v28;
    __int128 v109 = 0x100000003LL;
    __int128 v107 = &off_1007BC4C0;
    __int128 v108 = xmmword_10042DB70;
    __int128 v110 = &v111;
    sub_1002CAEDC(&v107, 3, 1);
    sub_1002CAF28((uint64_t)&v107, 0.0);
    __int128 v104 = 0x100000004LL;
    *(void *)__int128 v103 = &off_1007BC550;
    *(_OWORD *)&v103[8] = xmmword_10042DB80;
    __int128 v105 = &v106;
    sub_1002CAEDC(v103, 4, 1);
    sub_1002CAF28((uint64_t)v103, 0.0);
    for (uint64_t i = 0; i != 3; ++i)
    {
      __int128 v30 = (double *)sub_1002CB32C((uint64_t)&v107, i);
      unint64_t v92 = v85;
      char *v30 = *(float *)((unint64_t)&v92 & 0xFFFFFFFFFFFFFFF3LL | (4LL * (i & 3)));
      uint64_t v31 = (double *)sub_1002CB32C((uint64_t)v103, i);
      uint64_t v91 = v88;
      std::string *v31 = *(float *)((unint64_t)&v91 & 0xFFFFFFFFFFFFFFF3LL | (4LL * (i & 3)));
    }

    *(double *)sub_1002CB32C((uint64_t)v103, 3u) = *((float *)&v88 + 3);
    sub_1003198FC((uint64_t)v103, (uint64_t)v122);
    if (!v25) {
      sub_100006080();
    }
    unsigned __int16 v100 = 0x100000003LL;
    unint64_t v98 = &off_1007BC4C0;
    unint64_t v99 = xmmword_10042DB70;
    unint64_t v101 = &v102;
    sub_1002CAEDC(&v98, 3, 1);
    sub_1002CAF28((uint64_t)&v98, 0.0);
    *(float64_t *)sub_1002CB32C((uint64_t)&v98, 0) = v81.f64[0];
    *(float64_t *)sub_1002CB32C((uint64_t)&v98, 1u) = v81.f64[1];
    *(double *)sub_1002CB32C((uint64_t)&v98, 2u) = v24;
    v135 = 0x300000003LL;
    *(void *)&v136[0] = 0LL;
    *(void *)&uint8_t buf[16] = 0LL;
    *(void *)&uint8_t buf[8] = 0LL;
    *(void *)pthread_attr_t buf = &off_1007BC508;
    if (*(_DWORD *)v124 > 3u)
    {
      unint64_t v79 = "this->max_num_rows_ >= num_rows";
      unint64_t v80 = 422;
    }

    else
    {
      if (HIDWORD(v123) < 4)
      {
        *(_DWORD *)&uint8_t buf[8] = *(_DWORD *)v124;
        *(_DWORD *)&buf[12] = HIDWORD(v123);
        *(_DWORD *)&uint8_t buf[16] = HIDWORD(v123) * *(_DWORD *)v124;
        *(_DWORD *)&buf[20] = *(_DWORD *)v124;
        *(void *)&v136[0] = (char *)v136 + 8;
        sub_1002CB364((uint64_t)v122, buf);
        uint64_t v119 = 0x100000003LL;
        uint64_t v117 = &off_1007BC4C0;
        uint64_t v118 = xmmword_10042DB70;
        int v120 = v121;
        sub_1002CB44C((uint64_t)&v98, (uint64_t)&v107, (uint64_t)&v117);
        uint64_t v95 = 0x100000003LL;
        uint64_t v93 = &off_1007BC4C0;
        unint64_t v94 = xmmword_10042DB70;
        __int128 v96 = &v97;
        sub_1002CB548((uint64_t)buf, (uint64_t)&v117, (uint64_t)&v93);
        uint64_t v119 = 0x100000003LL;
        uint64_t v117 = &off_1007BC4C0;
        uint64_t v118 = xmmword_10042DB70;
        int v120 = v121;
        v135 = 0x100000134LL;
        *(void *)pthread_attr_t buf = &off_1007BC598;
        *(_OWORD *)&uint8_t buf[8] = xmmword_10042DB90;
        *(void *)&v136[0] = (char *)v136 + 8;
        uint64_t v114 = 0x100000003LL;
        __int128 v112 = &off_1007BC4C0;
        __int128 v113 = xmmword_10042DB70;
        uint64_t v115 = &v116;
        sub_1002CB6A8((uint64_t)&v93, (uint64_t)&v117, (uint64_t)buf, (uint64_t)&v112, "2");
        uint64_t v33 = v32;
        if (v32 <= 0.001)
        {
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
            sub_1003A78EC();
          }
        }

        else
        {
          __int128 v34 = sub_1002405E4((uint64_t)&v93, 0);
          uint64_t v35 = sub_1002405E4((uint64_t)&v93, 1u);
          __int128 v36 = sub_1002405E4((uint64_t)&v93, 2u);
          *(float *)&std::string v37 = v34 / v33;
          std::string v38 = v35 / v33;
          unint64_t v39 = v36 / v33;
          uint64_t v86 = v39;
          __int128 v89 = *(float *)&v37;
          __int128 v40 = v37;
          unint64_t v83 = v38;
          *((float *)&v40 + 1) = v38;
          *((float *)&v40 + 2) = v39;
          if (!*(_BYTE *)(a2 + 272)) {
            *(_BYTE *)(a2 + 272) = 1;
          }
          *(_OWORD *)(a2 + 256) = v40;
          unint64_t v41 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)pthread_attr_t buf = 134218752;
            *(double *)&uint8_t buf[4] = v8;
            *(_WORD *)&buf[12] = 2048;
            *(double *)&buf[14] = v89;
            *(_WORD *)&_BYTE buf[22] = 2048;
            *(double *)&v135 = v83;
            LOWORD(v136[0]) = 2048;
            *(double *)((char *)v136 + 2) = v86;
            _os_log_debug_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEBUG,  "#sa_algo,Populating direction output from AoA meas with VIO, timestamp: %f s, direction [%4.3f, %4.3f, %4.3f]",  buf,  0x2Au);
          }
        }

        if (!*(_BYTE *)(a2 + 192))
        {
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
            sub_1003A7888();
          }
          if (!*(_BYTE *)(a1 + 16) || !*(_BYTE *)(a1 + 32)) {
            sub_100006080();
          }
          __int128 v53 = *(void *)(a1 + 8);
          uint64_t v54 = *(void *)(a1 + 24);
          if (*(_BYTE *)(a2 + 192)) {
            *(_BYTE *)(a2 + 192) = 0;
          }
          *(void *)(a2 + 8) = v53;
          *(void *)(a2 + 16) = v54;
          __int128 v55 = v33;
          *(float *)(a2 + 24) = v55;
          *(_DWORD *)(a2 + 28) = 1;
          *(_BYTE *)(a2 + 56) = 0;
          *(void *)(a2 + sub_100012358(v1 - 32) = 0LL;
          *(void *)(a2 + 40) = 0LL;
          *(_BYTE *)(a2 + 60) = 0;
          *(_BYTE *)(a2 + 64) = 0;
          *(_BYTE *)(a2 + 68) = 0;
          *(void *)(a2 + 72) = 0LL;
          *(void *)(a2 + 80) = 0LL;
          *(_WORD *)(a2 + 88) = 0;
          *(_OWORD *)(a2 + 96) = 0u;
          *(_OWORD *)(a2 + 112) = 0u;
          *(_OWORD *)(a2 + 121) = 0u;
          *(_BYTE *)(a2 + 160) = 0;
          *(void *)(a2 + 176) = 0LL;
          *(void *)(a2 + 184) = 0LL;
          *(void *)(a2 + 168) = 0LL;
          *(_BYTE *)(a2 + 192) = 1;
        }

        if (*(_BYTE *)(a2 + 304)) {
          goto LABEL_87;
        }
        uint64_t v56 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)pthread_attr_t buf = 134218496;
          *(float64_t *)&uint8_t buf[4] = v81.f64[0];
          *(_WORD *)&buf[12] = 2048;
          *(float64_t *)&buf[14] = v81.f64[1];
          *(_WORD *)&_BYTE buf[22] = 2048;
          *(double *)&v135 = v24;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEBUG,  "#sa_algo,Populating world position output from AoA meas with VIO, object position is [%4.2f, %4.2f, %4.2f] m",  buf,  0x20u);
          *(float *)&uint64_t v58 = v81.f64[0];
          __int128 v76 = v81.f64[1];
          *(float *)&uint64_t v77 = v24;
          *((float *)&v58 + 1) = v76;
          *((void *)&v58 + 1) = __PAIR64__(HIDWORD(v81.f64[1]), v77);
          if (*(_BYTE *)(a2 + 304)) {
            goto LABEL_86;
          }
        }

        else
        {
          *(float32x2_t *)&uint64_t v58 = vcvt_f32_f64(v81);
          *(float *)&id v57 = v24;
          *((void *)&v58 + 1) = __PAIR64__(HIDWORD(v81.f64[1]), v57);
        }

        *(_BYTE *)(a2 + 304) = 1;
LABEL_86:
        *(_OWORD *)(a2 + 288) = v58;
        goto LABEL_87;
      }

      unint64_t v79 = "this->max_num_cols_ >= num_cols";
      unint64_t v80 = 423;
    }

    __assert_rtn("SetMatrixSize", "cnmatrixbase.h", v80, v79);
  }

  if (!*(_BYTE *)(a1 + 32)) {
    sub_100006080();
  }
  if (*(double *)(a1 + 24) - v8 < *(double *)(a1 + 552))
  {
    __int128 v10 = *(double *)(a1 + 384);
    uint64_t v11 = *(double *)(a1 + 392);
    __int128 v12 = *(double *)(a1 + 400);
    sub_10031981C((uint64_t)buf, 1.0, v11, v12);
    uint64_t v13 = sub_1002405E4((uint64_t)buf, 0);
    __int128 v14 = sub_1002405E4((uint64_t)buf, 1u);
    uint64_t v15 = sub_1002405E4((uint64_t)buf, 2u);
    *(float *)&__int128 v16 = v13;
    uint64_t v17 = v14;
    __int128 v18 = v15;
    uint64_t v82 = v17;
    uint64_t v84 = *(float *)&v16;
    dispatch_source_t v19 = v16;
    *((float *)&v19 + 1) = v17;
    unint64_t v87 = v18;
    *((float *)&v19 + 2) = v18;
    if (!*(_BYTE *)(a2 + 272)) {
      *(_BYTE *)(a2 + 272) = 1;
    }
    *(_OWORD *)(a2 + 256) = v19;
    __int128 v20 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int v122 = 134219264;
      v123 = v11 * 180.0 / 3.14159265;
      *(_WORD *)uint64_t v124 = 2048;
      *(double *)&v124[2] = v12 * 180.0 / 3.14159265;
      uint64_t v125 = 2048;
      uint64_t v126 = v8;
      __int16 v127 = 2048;
      double v128 = v84;
      unsigned int v129 = 2048;
      uint64_t v130 = v82;
      id v131 = 2048;
      char v132 = v87;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "#sa_algo,Populating direction output from AoA meas without VIO, az %f deg, el %f deg, timestamp: %f s, direction [%4.3f, %4.3f, %4.3f]",  v122,  0x3Eu);
    }

    if (!*(_BYTE *)(a2 + 192))
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
        sub_1003A77C0();
      }
      if (!*(_BYTE *)(a1 + 16)) {
        sub_100006080();
      }
      uint64_t v21 = *(void *)(a1 + 8);
      if (*(_BYTE *)(a2 + 192)) {
        *(_BYTE *)(a2 + 192) = 0;
      }
      *(void *)(a2 + 8) = v21;
      *(double *)(a2 + 16) = v8;
      __int128 v22 = v10;
      *(float *)(a2 + 24) = v22;
      *(_DWORD *)(a2 + 28) = 1;
      *(_BYTE *)(a2 + 56) = 0;
      *(void *)(a2 + sub_100012358(v1 - 32) = 0LL;
      *(void *)(a2 + 40) = 0LL;
      *(_BYTE *)(a2 + 60) = 0;
      *(_BYTE *)(a2 + 64) = 0;
      *(_BYTE *)(a2 + 68) = 0;
      *(void *)(a2 + 72) = 0LL;
      *(void *)(a2 + 80) = 0LL;
      *(_WORD *)(a2 + 88) = 0;
      *(_OWORD *)(a2 + 96) = 0u;
      *(_OWORD *)(a2 + 112) = 0u;
      *(_OWORD *)(a2 + 121) = 0u;
      *(_BYTE *)(a2 + 160) = 0;
      *(void *)(a2 + 176) = 0LL;
      *(void *)(a2 + 184) = 0LL;
      *(void *)(a2 + 168) = 0LL;
      *(_BYTE *)(a2 + 192) = 1;
    }

    goto LABEL_87;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
    sub_1003A7824();
  }
  if (!v9)
  {
    unint64_t v42 = (os_log_s *)qword_1008000A0;
    if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
LABEL_51:
      if (*(_BYTE *)(a1 + 448)) {
        *(_BYTE *)(a1 + 448) = 0;
      }
      sub_1002C9304(a1);
      goto LABEL_87;
    }

    if (!*(_BYTE *)(a1 + 32)) {
      sub_100006080();
    }
    int v43 = *(void *)(a1 + 24);
    *(_DWORD *)pthread_attr_t buf = 134218240;
    *(double *)&uint8_t buf[4] = v8;
    *(_WORD *)&buf[12] = 2048;
    *(void *)&buf[14] = v43;
    uint64_t v44 = "#sa_algo,Removing AoA measurement from cache, measurement time %f s is too stale compared to current time %f s"
          " and measurement can't be interpolated anymore.";
LABEL_50:
    _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, v44, buf, 0x16u);
    goto LABEL_51;
  }

  if (*(_BYTE *)(a1 + 820) && *(_DWORD *)(a1 + 816) == 1) {
    __int128 v22 = 1;
  }
  if (*v8 && a4 - *(double *)(a1 + 4136) < 1.0)
  {
    unint64_t v23 = *(void *)(a1 + 4176);
    __int128 v24 = *(_BYTE *)(a1 + 4184);
    uint64_t v25 = *(void *)(a1 + 4192);
    __int128 v26 = *(_BYTE *)(a1 + 4200);
  }

  if (!*(_BYTE *)(a1 + 3632)) {
    goto LABEL_20;
  }
  __int128 v12 = 0.1;
  if (a2) {
    __int128 v12 = 0.2;
  }
  if (a4 - *(double *)(a1 + 3624) < v12)
  {
    sub_1002FD9C0((void *)(a1 + 3976), (uint64_t)v19);
    uint64_t v13 = qword_1008000A0;
    if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    __int128 v14 = *(void *)(a1 + 4016);
    *(_DWORD *)pthread_attr_t buf = 134218496;
    __int128 v28 = a4;
    uint64_t v29 = 2048;
    __int128 v30 = a3;
    uint64_t v31 = 2048;
    __int128 v32 = v14;
    uint64_t v15 = "#sa_algo_particlefilter,measurement queued, time: %f, range: %f, queue size: %lu";
    __int128 v16 = (os_log_s *)v13;
    uint64_t v17 = 32;
  }

  else
  {
LABEL_20:
    __int128 v18 = qword_1008000A0;
    if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_WORD *)pthread_attr_t buf = 0;
    uint64_t v15 = "#sa_algo_particlefilter,measurement not queued due to lack of recent motion data";
    __int128 v16 = (os_log_s *)v18;
    uint64_t v17 = 2;
  }

  _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, v15, buf, v17);
}

      if (!*(_BYTE *)(a1 + 24)) {
        sub_100006080();
      }
      sub_10031DB10(v5, (_DWORD *)(a2 + 232));
      __double2 v7 = 1;
LABEL_10:
      if (__p)
      {
        unint64_t v62 = __p;
        operator delete(__p);
      }

      if ((v7 & 1) != 0)
      {
        if (*(_BYTE *)(a2 + 192)
          && !*(_DWORD *)a2
          && *(_DWORD *)(a1 + 416) != 2
          && *(_BYTE *)(a1 + 432)
          && *(double *)(a1 + 424) < 500.0)
        {
          *(_BYTE *)(a2 + 7) = 1;
        }

        goto LABEL_5;
      }

      return;
    default:
      goto LABEL_8;
  }

void sub_10002F4CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, void *a44)
{
  _Unwind_Resume(a1);
}

id sub_10002FBBC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_10002FBC4(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_10002FBCC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_10002FBD4(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_10002FDC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000302C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100030348(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_100030374(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100030724(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100030798(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_1000309DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100030A5C(void *a1)
{
  int v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  a1[5] = 0LL;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      int v2 = (void **)(a1[1] + 8LL);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }

    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }

  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 16LL;
  }

  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 32LL;
  }

  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    __double2 v7 = *v2++;
    operator delete(v7);
  }

  return sub_100030AF0((uint64_t)a1);
}

uint64_t sub_100030AF0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3) {
    *(void *)(a1 + 16) = v2 + ((v3 - v2 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  }
  unint64_t v4 = *(void **)a1;
  if (*(void *)a1) {
    operator delete(v4);
  }
  return a1;
}

void *sub_100030B3C(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    uint64_t v6 = result;
    double result = sub_1000242D4(result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      double result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }

  return result;
}

void sub_100030B98(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_100030BB4(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0LL;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_100030BEC(int a1, void **__p)
{
  if (__p)
  {
    uint64_t v2 = __p;
    do
    {
      uint64_t v3 = (void **)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }

    while (v3);
  }

void *sub_100030C30(uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }

    __int128 v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      uint64_t v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == (_DWORD)v7) {
              return v11;
            }
          }

          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }

            else
            {
              v12 &= v8 - 1;
            }

            if (v12 != v4) {
              break;
            }
          }

          uint64_t v11 = (void *)*v11;
        }

        while (v11);
      }
    }
  }

  uint64_t v11 = operator new(0x18uLL);
  void *v11 = 0LL;
  v11[1] = v7;
  *((_DWORD *)v11 + 4) = **a4;
  *((_BYTE *)v11 + 20) = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1LL;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_100021B74(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }

    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }

  uint64_t v19 = *(void *)a1;
  __int128 v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    void *v11 = *v20;
LABEL_38:
    void *v20 = v11;
    goto LABEL_39;
  }

  void *v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8LL);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }

    else
    {
      v21 &= v8 - 1;
    }

    __int128 v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }

void sub_100030E3C(_Unwind_Exception *a1)
{
}

unsigned __int8 *sub_100030E50(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  unint64_t v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_10003118C(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }

    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }

    float v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if ((sub_100031634(a1 + 32, i + 16, a2) & 1) != 0) {
            return i;
          }
        }

        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }

          else
          {
            v16 &= v11 - 1;
          }

          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }

  sub_1000310E4(a1, v10, a4, (uint64_t)v26);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1LL;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_100021B74(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }

    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }

  unint64_t v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *(void *)v26[0] = *v23;
    void *v23 = v26[0];
  }

  else
  {
    *(void *)v26[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v26[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v26[0])
    {
      unint64_t v24 = *(void *)(*(void *)v26[0] + 8LL);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11) {
          v24 %= v11;
        }
      }

      else
      {
        v24 &= v11 - 1;
      }

      *(void *)(*(void *)a1 + 8 * v24) = v26[0];
    }
  }

  uint64_t i = (unsigned __int8 *)v26[0];
  ++*v8;
  return i;
}

void sub_1000310C0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **__p, uint64_t a13)
{
  if (__p) {
    sub_1000316D8((uint64_t)&a13, __p);
  }
  _Unwind_Resume(exception_object);
}

_BYTE *sub_1000310E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = (char *)operator new(0x30uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *(void *)unint64_t v8 = 0LL;
  *((void *)v8 + 1) = a2;
  double result = v8 + 16;
  unint64_t v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    double result = sub_1000063A8(result, *(void **)v10, *((void *)v10 + 1));
  }

  else
  {
    __int128 v11 = *v10;
    *((void *)v8 + 4) = *((void *)v10 + 2);
    *(_OWORD *)double result = v11;
  }

  v8[40] = 0;
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_100031170(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  sub_1000316D8(v3, v2);
  _Unwind_Resume(a1);
}

unint64_t sub_10003118C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  }

  else
  {
    a2 = *(void *)a2;
    unint64_t v3 = v2;
  }

  return sub_1000311C8((uint64_t)&v5, (uint64_t *)a2, v3);
}

unint64_t sub_1000311C8(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  if (a3 > 0x20)
  {
    if (a3 > 0x40)
    {
      uint64_t v4 = *(uint64_t *)((char *)a2 + a3 - 48);
      uint64_t v5 = *(uint64_t *)((char *)a2 + a3 - 40);
      uint64_t v6 = *(uint64_t *)((char *)a2 + a3 - 24);
      uint64_t v8 = *(uint64_t *)((char *)a2 + a3 - 64);
      uint64_t v7 = *(uint64_t *)((char *)a2 + a3 - 56);
      uint64_t v9 = *(uint64_t *)((char *)a2 + a3 - 16);
      uint64_t v10 = *(uint64_t *)((char *)a2 + a3 - 8);
      unint64_t v11 = v7 + v9;
      unint64_t v12 = 0x9DDFEA08EB382D69LL
          * (v6 ^ ((0x9DDFEA08EB382D69LL * (v6 ^ (v4 + a3))) >> 47) ^ (0x9DDFEA08EB382D69LL * (v6 ^ (v4 + a3))));
      unint64_t v13 = 0x9DDFEA08EB382D69LL * (v12 ^ (v12 >> 47));
      unint64_t v14 = v8 + a3 + v7 + v4;
      uint64_t v15 = v14 + v5;
      unint64_t v16 = __ROR8__(v14, 44) + v8 + a3 + __ROR8__(v5 + v8 + a3 - 0x622015F714C7D297LL * (v12 ^ (v12 >> 47)), 21);
      uint64_t v17 = v7 + v9 + *(uint64_t *)((char *)a2 + a3 - 32) - 0x4B6D499041670D8DLL;
      uint64_t v18 = v17 + v6 + v9;
      uint64_t v19 = __ROR8__(v18, 44);
      uint64_t v20 = v18 + v10;
      uint64_t v21 = v19 + v17 + __ROR8__(v17 + v5 + v10, 21);
      uint64_t v23 = *a2;
      size_t v22 = a2 + 4;
      unint64_t v24 = v23 - 0x4B6D499041670D8DLL * v5;
      uint64_t v25 = -(uint64_t)((a3 - 1) & 0xFFFFFFFFFFFFFFC0LL);
      do
      {
        uint64_t v26 = *(v22 - 3);
        uint64_t v27 = v24 + v15 + v11 + v26;
        uint64_t v28 = v22[2];
        uint64_t v29 = v22[3];
        uint64_t v30 = v22[1];
        unint64_t v11 = v30 + v15 - 0x4B6D499041670D8DLL * __ROR8__(v11 + v16 + v28, 42);
        uint64_t v31 = v13 + v20;
        uint64_t v32 = *(v22 - 2);
        uint64_t v33 = *(v22 - 1);
        uint64_t v34 = *(v22 - 4) - 0x4B6D499041670D8DLL * v16;
        uint64_t v35 = v34 + v20 + v33;
        uint64_t v36 = v34 + v26 + v32;
        uint64_t v15 = v36 + v33;
        uint64_t v37 = __ROR8__(v36, 44) + v34;
        unint64_t v38 = (0xB492B66FBE98F273LL * __ROR8__(v27, 37)) ^ v21;
        unint64_t v24 = 0xB492B66FBE98F273LL * __ROR8__(v31, 33);
        unint64_t v16 = v37 + __ROR8__(v35 + v38, 21);
        unint64_t v39 = v24 + v21 + *v22;
        uint64_t v20 = v39 + v30 + v28 + v29;
        uint64_t v21 = __ROR8__(v39 + v30 + v28, 44) + v39 + __ROR8__(v11 + v32 + v39 + v29, 21);
        v22 += 8;
        unint64_t v13 = v38;
        v25 += 64LL;
      }

      while (v25);
      unint64_t v40 = v24
          - 0x622015F714C7D297LL
          * ((0x9DDFEA08EB382D69LL
            * (v21 ^ ((0x9DDFEA08EB382D69LL * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69LL * (v21 ^ v16)))) ^ ((0x9DDFEA08EB382D69LL * (v21 ^ ((0x9DDFEA08EB382D69LL * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69LL * (v21 ^ v16)))) >> 47));
      unint64_t v41 = 0x9DDFEA08EB382D69LL
          * (v40 ^ (v38
                  - 0x4B6D499041670D8DLL * (v11 ^ (v11 >> 47))
                  - 0x622015F714C7D297LL
                  * ((0x9DDFEA08EB382D69LL
                    * (v20 ^ ((0x9DDFEA08EB382D69LL * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69LL * (v20 ^ v15)))) ^ ((0x9DDFEA08EB382D69LL * (v20 ^ ((0x9DDFEA08EB382D69LL * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69LL * (v20 ^ v15)))) >> 47))));
      return 0x9DDFEA08EB382D69LL
           * ((0x9DDFEA08EB382D69LL * (v40 ^ (v41 >> 47) ^ v41)) ^ ((0x9DDFEA08EB382D69LL * (v40 ^ (v41 >> 47) ^ v41)) >> 47));
    }

    else
    {
      return sub_100031574(a2, a3);
    }
  }

  else if (a3 > 0x10)
  {
    return sub_1000314C8(a2, a3);
  }

  else
  {
    return sub_1000313D0(a2, a3);
  }

unint64_t sub_1000313D0(_DWORD *a1, unint64_t a2)
{
  if (a2 < 9)
  {
    if (a2 < 4)
    {
      unint64_t result = 0x9AE16A3B2F90404FLL;
      if (a2)
      {
        unint64_t v8 = (0xC949D7C7509E6557LL * (a2 + 4LL * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                      * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
        return 0x9AE16A3B2F90404FLL * (v8 ^ (v8 >> 47));
      }
    }

    else
    {
      uint64_t v6 = *(unsigned int *)((char *)a1 + a2 - 4);
      unint64_t v7 = 0x9DDFEA08EB382D69LL * (((8 * *a1) + a2) ^ v6);
      return 0x9DDFEA08EB382D69LL
           * ((0x9DDFEA08EB382D69LL * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69LL * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
    }
  }

  else
  {
    uint64_t v3 = *(void *)((char *)a1 + a2 - 8);
    uint64_t v4 = __ROR8__(v3 + a2, a2);
    return (0x9DDFEA08EB382D69LL
          * ((0x9DDFEA08EB382D69LL
            * (v4 ^ ((0x9DDFEA08EB382D69LL * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69LL * (v4 ^ *(void *)a1)))) ^ ((0x9DDFEA08EB382D69LL * (v4 ^ ((0x9DDFEA08EB382D69LL * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69LL * (v4 ^ *(void *)a1)))) >> 47))) ^ v3;
  }

  return result;
}

unint64_t sub_1000314C8(void *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = 0xB492B66FBE98F273LL * *a1;
  uint64_t v4 = __ROR8__(0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8), 30) + __ROR8__(v3 - v2, 43);
  unint64_t v5 = v3 + a2 + __ROR8__(v2 ^ 0xC949D7C7509E6557LL, 20) - 0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8);
  unint64_t v6 = 0x9DDFEA08EB382D69LL * (v5 ^ (v4 - 0x3C5A37A36834CED9LL * *(void *)((char *)a1 + a2 - 16)));
  return 0x9DDFEA08EB382D69LL
       * ((0x9DDFEA08EB382D69LL * (v5 ^ (v6 >> 47) ^ v6)) ^ ((0x9DDFEA08EB382D69LL * (v5 ^ (v6 >> 47) ^ v6)) >> 47));
}

unint64_t sub_100031574(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)((char *)a1 + a2 - 16);
  uint64_t v3 = *a1 - 0x3C5A37A36834CED9LL * (v2 + a2);
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = __ROR8__(v3 + v4, 52);
  uint64_t v7 = v3 + a1[1];
  uint64_t v8 = __ROR8__(v7, 7);
  uint64_t v9 = v7 + v5;
  uint64_t v10 = *(void *)((char *)a1 + a2 - 32) + v5;
  uint64_t v11 = v8 + __ROR8__(*a1 - 0x3C5A37A36834CED9LL * (v2 + a2), 37) + v6 + __ROR8__(v9, 31);
  uint64_t v12 = *(void *)((char *)a1 + a2 - 24) + v10 + v2;
  unint64_t v13 = 0xC3A5C85C97CB3127LL * (v12 + *(void *)((char *)a1 + a2 - 8) + v4 + v11)
      - 0x651E95C4D06FBFB1LL
      * (v9
       + v4
       + __ROR8__(v10, 37)
       + __ROR8__(*(void *)((char *)a1 + a2 - 24) + v10, 7)
  return 0x9AE16A3B2F90404FLL
       * ((v11 - 0x3C5A37A36834CED9LL * (v13 ^ (v13 >> 47))) ^ ((v11 - 0x3C5A37A36834CED9LL * (v13 ^ (v13 >> 47))) >> 47));
}

uint64_t sub_100031634(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2[23];
  if ((v4 & 0x80u) == 0LL) {
    uint64_t v5 = a2[23];
  }
  else {
    uint64_t v5 = *((void *)a2 + 1);
  }
  uint64_t v6 = a3[23];
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0LL) {
    uint64_t v6 = *((void *)a3 + 1);
  }
  if (v5 != v6) {
    return 0LL;
  }
  if (v7 < 0) {
    uint64_t v3 = *(unsigned __int8 **)a3;
  }
  if ((v4 & 0x80) != 0) {
    return memcmp(*(const void **)a2, v3, *((void *)a2 + 1)) == 0;
  }
  if (!a2[23]) {
    return 1LL;
  }
  uint64_t v8 = v4 - 1;
  do
  {
    int v10 = *a2++;
    int v9 = v10;
    int v12 = *v3++;
    int v11 = v12;
    BOOL v14 = v8-- != 0;
    uint64_t result = v9 == v11;
  }

  while (v9 == v11 && v14);
  return result;
}

void sub_1000316D8(uint64_t a1, void **__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
  }

  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void *sub_100031724(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_10001D350();
  }
  return operator new(4 * a2);
}

void *sub_100031758(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_1000317D0(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }

  return result;
}

void sub_1000317B4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

char *sub_1000317D0(void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_10001E11C();
  }
  uint64_t result = (char *)sub_100031724((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void sub_100031810()
{
  uint64_t v0 = objc_autoreleasePoolPush();
  qword_1007F50F0 = 0LL;
  unk_1007F50F8 = 0LL;
  qword_1007F50E8 = 0LL;
  uint64_t v1 = operator new(0x40uLL);
  qword_1007F50F0 = (uint64_t)(v1 + 4);
  unk_1007F50F8 = v1 + 4;
  _OWORD *v1 = xmmword_10040C930;
  v1[1] = unk_10040C940;
  v1[2] = xmmword_10040C950;
  v1[3] = unk_10040C960;
  qword_1007F50E8 = (uint64_t)v1;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007F50E8, (void *)&_mh_execute_header);
  qword_1007F5108 = 0LL;
  unk_1007F5110 = 0LL;
  qword_1007F5100 = 0LL;
  uint64_t v2 = operator new(0x10uLL);
  qword_1007F5108 = (uint64_t)(v2 + 1);
  unk_1007F5110 = v2 + 1;
  _OWORD *v2 = xmmword_10040C970;
  qword_1007F5100 = (uint64_t)v2;
  __cxa_atexit((void (*)(void *))sub_100028CC4, &qword_1007F5100, (void *)&_mh_execute_header);
  __cxa_atexit((void (*)(void *))&std::mutex::~mutex, &stru_1007F2500, (void *)&_mh_execute_header);
  xmmword_1007F5118 = 0u;
  unk_1007F5128 = 0u;
  dword_1007F5138 = 1065353216;
  __cxa_atexit((void (*)(void *))sub_100028CF4, &xmmword_1007F5118, (void *)&_mh_execute_header);
  xmmword_1007F5140 = 0u;
  *(_OWORD *)algn_1007F5150 = 0u;
  dword_1007F5160 = 1065353216;
  __cxa_atexit((void (*)(void *))sub_100028CF8, &xmmword_1007F5140, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void *sub_100031940@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2C28[a1]);
}

void *sub_100031954@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2C80[a1]);
}

void *sub_100031968@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2CC8[a1]);
}

void *sub_10003197C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2CE8[a1]);
}

void sub_100031B4C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_100031CAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100031D88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)&OBJC_CLASS___PRBeaconRangingClientProxy;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_100031F00( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, char a11, uint64_t a12, char a13)
{
  if (a10) {
    std::__shared_weak_count::__release_weak(a10);
  }
  sub_100012390((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_100031FCC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10003205C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100032074(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038AC1C();
    }
  }

  else
  {
    [v5 didFailWithError:*(void *)(a1 + 32)];
  }
}

void sub_1000320F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100032358( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29)
{
  std::mutex::unlock(a10);
  sub_100012358((uint64_t)&a29);

  _Unwind_Resume(a1);
}

void sub_1000323BC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038AC1C();
    }
  }

  else
  {
    [v5 didReceiveNewSolutions:*(void *)(a1 + 32)];
  }
}

void sub_100032438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003249C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038AC1C();
    }
  }

  else
  {
    [v5 rangingServiceDidUpdateState:*(void *)(a1 + 32) cause:*(void *)(a1 + 40)];
  }
}

void sub_100032518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000325A8(_Unwind_Exception *a1)
{
}

void sub_1000325BC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038AC1C();
    }
  }

  else
  {
    [v5 rangingRequestDidUpdateStatus:*(void *)(a1 + 32)];
  }
}

void sub_100032638(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100032810(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100032A1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100032F94( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void *a22)
{
  uint64_t v25 = *(void **)(v23 - 144);
  if (v25)
  {
    *(void *)(v23 - 136) = v25;
    operator delete(v25);
  }

  _Unwind_Resume(a1);
}

char *sub_1000330D0(void **a1, int *a2)
{
  id v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  id v5 = v6;
  unint64_t v7 = *(void *)(v4 - 8);
  if (v7 >= (unint64_t)v6)
  {
    unint64_t v10 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v7 - (void)*a1) >> 3);
    unint64_t v11 = v10 + 1;
    if (v10 + 1 > 0x666666666666666LL) {
      sub_10001E11C();
    }
    unint64_t v12 = 0xCCCCCCCCCCCCCCCDLL * ((v5 - (_BYTE *)*a1) >> 3);
    if (2 * v12 > v11) {
      unint64_t v11 = 2 * v12;
    }
    if (v12 >= 0x333333333333333LL) {
      unint64_t v13 = 0x666666666666666LL;
    }
    else {
      unint64_t v13 = v11;
    }
    BOOL v14 = (char *)sub_1000347D8(v4, v13);
    uint64_t v15 = &v14[40 * v10];
    uint64_t v17 = &v14[40 * v16];
    *(_DWORD *)uint64_t v15 = 2;
    v15[4] = 0;
    *((_WORD *)v15 + 10) = 0;
    v15[29] = 0;
    int v18 = *a2;
    *((_WORD *)v15 + 17) = *((_WORD *)a2 + 2);
    *(_DWORD *)(v15 + 30) = v18;
    v15[36] = 1;
    int v9 = v15 + 40;
    uint64_t v20 = (char *)*a1;
    uint64_t v19 = (char *)a1[1];
    if (v19 != *a1)
    {
      do
      {
        __int128 v21 = *(_OWORD *)(v19 - 40);
        __int128 v22 = *(_OWORD *)(v19 - 24);
        *(void *)(v15 - 11) = *(void *)(v19 - 11);
        *(_OWORD *)(v15 - 24) = v22;
        *(_OWORD *)(v15 - 40) = v21;
        v15 -= 40;
        v19 -= 40;
      }

      while (v19 != v20);
      uint64_t v19 = (char *)*a1;
    }

    *a1 = v15;
    a1[1] = v9;
    a1[2] = v17;
    if (v19) {
      operator delete(v19);
    }
  }

  else
  {
    *(_DWORD *)unint64_t v7 = 2;
    *(_BYTE *)(v7 + 4) = 0;
    *(_WORD *)(v7 + 20) = 0;
    *(_BYTE *)(v7 + 29) = 0;
    int v8 = *a2;
    *(_WORD *)(v7 + 34) = *((_WORD *)a2 + 2);
    *(_DWORD *)(v7 + 30) = v8;
    *(_BYTE *)(v7 + 36) = 1;
    int v9 = (char *)(v7 + 40);
  }

  a1[1] = v9;
  return v9 - 40;
}

void sub_1000333A0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

LABEL_41:
}

  if ((v14 & 0xFF0000) == 0) {
    goto LABEL_51;
  }
  if ((v14 & 0x10000) != 0)
  {
    uint64_t v31 = *(void *)(a2 + 96);
    *(_DWORD *)(a1 + 468) |= 0x10000u;
    *(void *)(a1 + 96) = v31;
    BOOL v14 = *(_DWORD *)(a2 + 468);
    if ((v14 & 0x20000) == 0)
    {
LABEL_44:
      if ((v14 & 0x40000) == 0) {
        goto LABEL_45;
      }
      goto LABEL_82;
    }
  }

  else if ((v14 & 0x20000) == 0)
  {
    goto LABEL_44;
  }

  uint64_t v32 = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 468) |= 0x20000u;
  *(void *)(a1 + 104) = v32;
  BOOL v14 = *(_DWORD *)(a2 + 468);
  if ((v14 & 0x40000) == 0)
  {
LABEL_45:
    if ((v14 & 0x80000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_83;
  }

  if (!HIBYTE(v5)) {
    goto LABEL_50;
  }
  if ((v5 & 0x1000000) != 0)
  {
    unint64_t v39 = *(void *)(a2 + 200);
    *(_DWORD *)(a1 + 300) |= 0x1000000u;
    *(void *)(a1 + 200) = v39;
    id v5 = *(_DWORD *)(a2 + 300);
    if ((v5 & 0x2000000) == 0)
    {
LABEL_44:
      if ((v5 & 0x4000000) == 0) {
        goto LABEL_45;
      }
      goto LABEL_89;
    }
  }

  else if ((v5 & 0x2000000) == 0)
  {
    goto LABEL_44;
  }

  unint64_t v40 = *(void *)(a2 + 208);
  *(_DWORD *)(a1 + 300) |= 0x2000000u;
  *(void *)(a1 + 208) = v40;
  id v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_45:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_90;
  }

    uint64_t v36 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 132) |= 4u;
    *(_DWORD *)(a1 + 28) = v36;
    uint64_t v29 = *(_DWORD *)(a2 + 132);
    if ((v29 & 8) == 0)
    {
LABEL_32:
      if ((v29 & 0x10) == 0) {
        goto LABEL_34;
      }
      goto LABEL_33;
    }

  __int128 v21 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 88) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v21;
  id v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x20) != 0) {
    goto LABEL_42;
  }
LABEL_17:
  if ((v5 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_43:
  uint64_t v23 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 88) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v23;
  id v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x80) != 0)
  {
LABEL_19:
    int v9 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 88) |= 0x80u;
    *(_DWORD *)(a1 + 48) = v9;
    id v5 = *(_DWORD *)(a2 + 88);
  }

  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    uint64_t v3 = *(_DWORD *)(a1 + 84);
  }

  else
  {
    int v18 = 2;
  }

  v4 += v18;
  if ((v3 & 0x40) == 0)
  {
LABEL_24:
    if ((v3 & 0x80) == 0) {
      goto LABEL_25;
    }
    goto LABEL_49;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  (int)a2,  *(double *)(v5 + 72),  a3);
  id v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_43;
  }

  if ((v3 & 0xFF00) == 0) {
    goto LABEL_84;
  }
  if ((v3 & 0x100) != 0)
  {
    int v18 = *(void *)(a1 + 64);
    uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
    uint64_t v20 = v19;
    __int128 v21 = *(void *)(v18 + 8);
    if ((v19 & 0x80u) == 0) {
      __int128 v22 = *(unsigned __int8 *)(v18 + 23);
    }
    else {
      __int128 v22 = v21;
    }
    if (v22 >= 0x80)
    {
      uint64_t v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v22,  a2);
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      __int128 v21 = *(void *)(v18 + 8);
      uint64_t v3 = *(_DWORD *)(a1 + 160);
      uint64_t v20 = *(_BYTE *)(v18 + 23);
    }

    else
    {
      uint64_t v23 = 1;
    }

    if (v20 < 0) {
      uint64_t v19 = v21;
    }
    v5 += v23 + v19 + 1;
  }

  if ((v3 & 0x200) != 0)
  {
    unint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
    if (v24 >= 0x80)
    {
      uint64_t v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
      uint64_t v3 = *(_DWORD *)(a1 + 160);
    }

    else
    {
      uint64_t v25 = 1;
    }

    v5 += v25 + 1;
  }

  uint64_t v26 = v5 + 9;
  if ((v3 & 0x400) == 0) {
    uint64_t v26 = v5;
  }
  if ((v3 & 0x800) != 0) {
    v26 += 9;
  }
  if ((v3 & 0x1000) != 0) {
    id v5 = v26 + 9;
  }
  else {
    id v5 = v26;
  }
  if ((v3 & 0x2000) != 0)
  {
    uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 92);
    if ((v27 & 0x80000000) != 0)
    {
      uint64_t v28 = 10;
    }

    else if (v27 >= 0x80)
    {
      uint64_t v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2);
      uint64_t v3 = *(_DWORD *)(a1 + 160);
    }

    else
    {
      uint64_t v28 = 1;
    }

    v5 += v28 + 1;
    if ((v3 & 0x4000) == 0)
    {
LABEL_66:
      if ((v3 & 0x8000) == 0) {
        goto LABEL_84;
      }
      goto LABEL_80;
    }
  }

  else if ((v3 & 0x4000) == 0)
  {
    goto LABEL_66;
  }

  uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 104);
  if ((v29 & 0x80000000) != 0)
  {
    uint64_t v30 = 11;
  }

  else if (v29 >= 0x80)
  {
    uint64_t v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2) + 1;
    uint64_t v3 = *(_DWORD *)(a1 + 160);
  }

  else
  {
    uint64_t v30 = 2;
  }

  v5 += v30;
  if ((v3 & 0x8000) != 0)
  {
LABEL_80:
    uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 108);
    if (v31 >= 0x80)
    {
      uint64_t v3 = *(_DWORD *)(a1 + 160);
    }

    else
    {
      uint64_t v32 = 3;
    }

    v5 += v32;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF,  *(_DWORD *)(v5 + 76),  (int)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x10) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_43;
  }

  uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if (v19 >= 0x80)
  {
    uint64_t v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
    uint64_t v3 = *(_DWORD *)(a1 + 88);
  }

  else
  {
    uint64_t v20 = 1;
  }

  uint64_t v4 = (v4 + v20 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_45:
    __int128 v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if (v21 >= 0x80)
    {
      __int128 v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
      uint64_t v3 = *(_DWORD *)(a1 + 88);
    }

    else
    {
      __int128 v22 = 1;
    }

    uint64_t v4 = (v4 + v22 + 1);
  }

  uint64_t v27 = *((void *)this + 5);
  *(_BYTE *)a2 = 33;
  *(void *)((char *)a2 + 1) = v27;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
  id v5 = *((_DWORD *)this + 31);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_61;
    }
    goto LABEL_58;
  }

  uint64_t v25 = (void *)*((void *)this + 1);
  unint64_t v24 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v23 = v25;
  if (!v25 || *v23 == v23[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v24,  v3,  a3);
  }
}

  uint64_t v25 = *((_DWORD *)this + 21);
  if ((v25 & 0x80) != 0)
  {
    uint64_t v26 = *((void *)this + 8);
    *(_BYTE *)uint64_t v4 = 65;
    *(void *)((char *)v4 + 1) = v26;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    uint64_t v25 = *((_DWORD *)this + 21);
  }

  if ((v25 & 0x100) != 0)
  {
    uint64_t v27 = *((void *)this + 9);
    *(_BYTE *)uint64_t v4 = 73;
    *(void *)((char *)v4 + 1) = v27;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  }

  uint64_t v30 = (void *)*((void *)this + 1);
  uint64_t v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v28 = v30;
  if (!v30 || *v28 == v28[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v29,  v4,  a3);
  }
}

  uint64_t v20 = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 124) |= 0x2000u;
  *(_DWORD *)(a1 + 96) = v20;
  id v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x4000) == 0)
  {
LABEL_21:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11,  (int)a2,  *(float *)(v5 + 108),  a3);
  id v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }

  uint64_t v23 = *(_DWORD *)(a1 + 48);
  unint64_t v24 = (v23 + v3);
  if (v23 >= 1)
  {
    uint64_t v25 = 0LL;
    do
    {
      uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100107B9C( *(void *)(*(void *)(a1 + 40) + 8 * v25),  a2);
      uint64_t v27 = (int)v26;
      else {
        uint64_t v28 = 1;
      }
      unint64_t v24 = (v27 + v24 + v28);
      ++v25;
    }

    while (v25 < *(int *)(a1 + 48));
  }

  uint64_t v29 = *(void **)(a1 + 8);
  if (v29 && *v29 != v29[1]) {
    unint64_t v24 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v24;
  *(_DWORD *)(a1 + 76) = v24;
  return v24;
}
}

    sub_1002EB5E8((uint64_t)&v125, (uint64_t)v21, (uint64_t)v20);
    unint64_t v24 = 126 - 2 * __clz(0x51B3BEA3677D46CFLL * ((uint64_t)&v126[-v125] >> 3));
    else {
      uint64_t v25 = v24;
    }
    sub_1002EE63C(v125, v126, v25, 1);
    uint64_t v27 = sub_1002EB670(v26, v125, (uint64_t *)(a1 + 664));
    *(double *)(a1 + 648) = v27;
    *(_BYTE *)(a1 + 656) = 1;
    uint64_t v28 = *(double *)(a1 + 976);
    if (v27 > v28)
    {
      uint64_t v29 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)pthread_attr_t buf = 134218240;
        *(double *)&uint8_t buf[4] = v27;
        *(_WORD *)&buf[12] = 2048;
        *(double *)&buf[14] = v28;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "#sa_algo_batchfilter,Batch filter has detected an issue with the measurements - rms normalized error (%f) is a bove the threshold (%f)",  buf,  0x16u);
      }

      sub_1002E5894(a1);
      int v9 = 0LL;
      *(_BYTE *)(a1 + 927) = 1;
      goto LABEL_156;
    }

    v123 = 0LL;
    int v122 = 0LL;
    uint64_t v124 = 0LL;
    uint64_t v30 = sub_1002EFBC4(&v122, v125);
    uint64_t v31 = v30;
    uint64_t v32 = v125;
    v123 = v30;
    if ((unint64_t)(0x51B3BEA3677D46CFLL * ((uint64_t)&v126[-v125] >> 3)) >= 2)
    {
      uint64_t v33 = 1LL;
      uint64_t v34 = v30;
      do
      {
        if (v34 == v122)
        {
          uint64_t v37 = v34;
        }

        else
        {
          uint64_t v35 = 0LL;
          uint64_t v36 = 1;
          uint64_t v34 = v122;
          uint64_t v37 = v31;
          do
          {
            unint64_t v38 = v34 + 376 * v35 + 8;
            while (!v36)
            {
              uint64_t v36 = 0;
              ++v35;
              v38 += 376LL;
              if (0x51B3BEA3677D46CFLL * ((uint64_t)(v37 - v34) >> 3) <= v35)
              {
                uint64_t v32 = v125;
                uint64_t v31 = v37;
                goto LABEL_66;
              }
            }

            uint64_t v119 = 0x100000003LL;
            uint64_t v117 = &off_1007BC4C0;
            uint64_t v118 = xmmword_10042DB70;
            int v120 = v121;
            sub_1002CB44C(v125 + 376 * v33 + 8, v38, (uint64_t)&v117);
            __int128 v111 = 0x100000003LL;
            __int128 v109 = &off_1007BC4C0;
            __int128 v110 = xmmword_10042DB70;
            __int128 v112 = v113;
            int v137 = 0x100000134LL;
            *(void *)pthread_attr_t buf = &off_1007BC598;
            *(_OWORD *)&uint8_t buf[8] = xmmword_10042DB90;
            uint64_t v138 = v139;
            __int128 v106 = 0x100000003LL;
            __int128 v104 = &off_1007BC4C0;
            __int128 v105 = xmmword_10042DB70;
            __int128 v107 = v108;
            sub_1002CB6A8((uint64_t)&v117, (uint64_t)&v109, (uint64_t)buf, (uint64_t)&v104, "2");
            uint64_t v36 = v39 > 0.1;
            uint64_t v37 = v123;
            uint64_t v34 = v122;
            ++v35;
          }

          while (0x51B3BEA3677D46CFLL * ((v123 - v122) >> 3) > v35);
          uint64_t v32 = v125;
          uint64_t v31 = v123;
          if (v39 <= 0.1) {
            goto LABEL_66;
          }
        }

        if (exp(*(double *)(v34 + 360) - *(double *)(v32 + 376 * v33 + 360)) > 0.01)
        {
          if (v37 >= v124)
          {
            uint64_t v31 = sub_1002EFBC4(&v122, v32 + 376 * v33);
          }

          else
          {
            sub_1002EE480((uint64_t)&v124, v37, v32 + 376 * v33);
            uint64_t v31 = v37 + 376;
          }

          v123 = v31;
          uint64_t v32 = v125;
          uint64_t v37 = v31;
        }

void sub_10003392C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  sub_100012390((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void sub_100033DF0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  _Unwind_Resume(a1);
}

id sub_100033E7C(uint64_t a1)
{
  v6[0] = @"numOfResponders";
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 40)));
  v6[1] = @"sessionDuration";
  v7[0] = v2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 32)));
  v7[1] = v3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v7,  v6,  2LL));

  return v4;
}

void sub_100033F48(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

id sub_100033F70(uint64_t a1)
{
  v6[0] = @"responderLatency";
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 32)));
  v6[1] = @"numOfResponders";
  v7[0] = v2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 40)));
  v7[1] = v3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v7,  v6,  2LL));

  return v4;
}

void sub_10003403C(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100034528( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  sub_100012390((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void sub_10003466C(void **a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x48uLL);
  sub_1000346CC(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_100012538((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_1000346B8(_Unwind_Exception *a1)
{
}

void *sub_1000346CC(void *a1, void **a2)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_1007A2120;
  sub_10026398C((uint64_t)(a1 + 3), *a2);
  return a1;
}

void sub_100034704(_Unwind_Exception *a1)
{
}

uint64_t *sub_100034718(uint64_t **a1, unint64_t *a2, uint64_t *a3)
{
  id v6 = a1 + 1;
  id v5 = a1[1];
  if (v5)
  {
    unint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        int v8 = (uint64_t **)v5;
        unint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        id v5 = *v8;
        id v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (v9 >= v7) {
        break;
      }
      id v5 = v8[1];
      if (!v5)
      {
        id v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    int v8 = a1 + 1;
LABEL_10:
    unint64_t v10 = (uint64_t *)operator new(0x30uLL);
    v10[4] = *a3;
    v10[5] = a3[1];
    sub_10001E548(a1, (uint64_t)v8, v6, v10);
    return v10;
  }

  return (uint64_t *)v8;
}

void *sub_1000347D8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667LL) {
    sub_10001D350();
  }
  return operator new(40 * a2);
}

void *sub_100034824(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_1007A2B28;
  result[1] = v3;
  return result;
}

uint64_t sub_100034858(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_1007A2B28;
  a2[1] = v2;
  return result;
}

void sub_100034874(uint64_t a1, id *a2)
{
  id v3 = *a2;
  (*(void (**)(void))(**(void **)(a1 + 8) + 16LL))();
}

void sub_1000348D8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

uint64_t sub_1000348EC(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_100034928()
{
  return &off_1007A2B98;
}

BOOL sub_100034934(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1LL;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0LL;
}

void *sub_100034988(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_1007A2BB8;
  result[1] = v3;
  return result;
}

uint64_t sub_1000349BC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_1007A2BB8;
  a2[1] = v2;
  return result;
}

void sub_1000349D8(uint64_t a1, id *a2)
{
  id v3 = *a2;
  (*(void (**)(void))(**(void **)(a1 + 8) + 16LL))();
}

void sub_100034A3C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

uint64_t sub_100034A50(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_100034A8C()
{
  return &off_1007A2C18;
}

void sub_100034A98(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100034A98(a1, *a2);
    sub_100034A98(a1, a2[1]);
    operator delete(a2);
  }

void sub_100034AD8()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_100034B54(_Unwind_Exception *a1)
{
}

void sub_100034B6C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10040C9F8;
      v1[1] = unk_10040CA08;
      v1[2] = xmmword_10040CA18;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_100034C0C(_Unwind_Exception *a1)
{
}

void sub_100034C24()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  uint64_t v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  id v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F5180 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F5170 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5170, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  id v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F5198 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F5188 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5188, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  unint64_t v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F51B0 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F51A0 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F51A0, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  unint64_t v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F51C8 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F51B8 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F51B8, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  uint64_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F51E0 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F51D0 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F51D0, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  __int128 v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F51F8 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F51E8 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F51E8, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  uint64_t v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F5210 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F5200 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5200, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  uint64_t v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F5228 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F5218 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5218, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  uint64_t v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F5240 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F5230 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5230, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100035218( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_10003528C(float a1, float a2)
{
  __float2 v3 = __sincosf_stret(a1 * 0.5);
  float32x4_t v10 = vmulq_n_f32((float32x4_t)xmmword_10040CBD0, v3.__sinval);
  __float2 v4 = __sincosf_stret(a2 * 0.5);
  float32x4_t v5 = vmulq_n_f32((float32x4_t)xmmword_10040CBE0, v4.__sinval);
  v6.i32[0] = LODWORD(v4.__cosval);
  v6.f32[1] = -v5.f32[2];
  v6.i32[2] = v5.i32[1];
  *(float32x2_t *)v7.f32 = vneg_f32(*(float32x2_t *)v5.f32);
  v6.i32[3] = v7.i32[0];
  v8.i32[0] = vdupq_laneq_s32((int32x4_t)v5, 2).u32[0];
  v8.i32[1] = LODWORD(v4.__cosval);
  v8.i64[1] = v7.i64[0];
  v7.i32[0] = vdup_lane_s32(*(int32x2_t *)v7.f32, 1).u32[0];
  v7.i32[1] = v5.i32[0];
  v7.i32[2] = LODWORD(v4.__cosval);
  v7.f32[3] = -v5.f32[2];
  v5.i32[3] = LODWORD(v4.__cosval);
  *(void *)&double result = vmlaq_n_f32( vmlaq_laneq_f32( vmlaq_lane_f32(vmulq_n_f32(v6, v10.f32[0]), v8, *(float32x2_t *)v10.f32, 1),  v7,  v10,  2),  v5,  v3.__cosval).u64[0];
  return result;
}

double sub_100035338(float *a1)
{
  __float2 v2 = __sincosf_stret(*a1);
  return COERCE_DOUBLE(__PAIR64__(v2.__cosval * __sincosf_stret(a1[1]).__sinval, LODWORD(v2.__sinval)));
}

void sub_1000353D0(_Unwind_Exception *exception_object)
{
  __float2 v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

void sub_1000353EC(unint64_t *a1, size_t a2)
{
  float32x4_t v5 = (char *)a1[1];
  __float2 v4 = (char *)a1[2];
  if (v4 - v5 >= a2)
  {
    if (a2)
    {
      bzero((void *)a1[1], a2);
      v5 += a2;
    }

    a1[1] = (unint64_t)v5;
  }

  else
  {
    unint64_t v6 = *a1;
    float32x4_t v7 = &v5[-*a1];
    unint64_t v8 = (unint64_t)&v7[a2];
    unint64_t v9 = (unint64_t)&v4[-v6];
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v10 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v10 = v8;
    }
    if (v10) {
      unint64_t v11 = (unint64_t)operator new(v10);
    }
    else {
      unint64_t v11 = 0LL;
    }
    __int128 v12 = &v7[v11];
    unint64_t v13 = (char *)(v11 + v10);
    bzero(v12, a2);
    if (v5 == (char *)v6)
    {
      unint64_t v11 = (unint64_t)v12;
    }

    else
    {
      __int128 v14 = &v5[~v6];
      do
      {
        char v15 = *--v5;
        (v14--)[v11] = v15;
      }

      while (v5 != (char *)v6);
      float32x4_t v5 = (char *)*a1;
    }

    *a1 = v11;
    a1[1] = (unint64_t)&v12[a2];
    a1[2] = (unint64_t)v13;
    if (v5) {
      operator delete(v5);
    }
  }

void *sub_100035514@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2D30[a1]);
}

void *sub_100035528@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2D88[a1]);
}

void *sub_10003553C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2DD0[a1]);
}

void *sub_100035550@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A2DF0[a1]);
}

void sub_100035714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100035980( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1000359A0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    float32x4_t v7 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038ADB8((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13);
    }
  }

  else
  {
    [v5 didFailWithError:*(void *)(a1 + 32)];
  }
}

void sub_100035A1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100035B60(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained handleError:*(void *)(a1 + 32)];
}

void sub_100035B9C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100035C30( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100035C48(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    float32x4_t v7 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038ADB8((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13);
    }
  }

  else
  {
    [v5 didStopOwnerRangingOnDevice:*(void *)(a1 + 32) withError:0];
  }
}

void sub_100035CC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100035E0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100035EEC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100035F7C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100035FE8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100036074( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000360E4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_1000361D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000362F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000363C8()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_100036444(_Unwind_Exception *a1)
{
}

void sub_10003645C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10040CBF8;
      v1[1] = unk_10040CC08;
      v1[2] = xmmword_10040CC18;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_1000364FC(_Unwind_Exception *a1)
{
}

void sub_100036514()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  uint64_t v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  __float2 v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F5258 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F5248 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5248, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  id v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  float32x4_t v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F5270 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F5260 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5260, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  uint64_t v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F5288 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F5278 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5278, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  uint64_t v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  char v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F52A0 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F5290 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5290, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  uint64_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F52B8 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F52A8 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F52A8, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  __int128 v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F52D0 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F52C0 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F52C0, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  uint64_t v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F52E8 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F52D8 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F52D8, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  uint64_t v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F5300 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F52F0 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F52F0, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  uint64_t v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F5318 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F5308 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5308, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100036B08( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100036B7C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007A2E58)[a1]);
}

void *sub_100036B90@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007A2EB0)[a1]);
}

void *sub_100036BA4@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007A2EF8)[a1]);
}

void *sub_100036BB8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, (&off_1007A2F18)[a1]);
}

void sub_100036DC0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id location)
{
  uint64_t v17 = v16;

  _Unwind_Resume(a1);
}

void sub_100036F34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100037008( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)&OBJC_CLASS___PRRangingServiceProxy;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_100037180( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, char a11, uint64_t a12, char a13)
{
  if (a10) {
    std::__shared_weak_count::__release_weak(a10);
  }
  sub_100012390((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_100037248( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000372D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1000372F0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038AE20();
    }
  }

  else
  {
    [v5 didFailWithError:*(void *)(a1 + 32)];
  }
}

void sub_10003736C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000373F8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100037410(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038AE20();
    }
  }

  else
  {
    [v5 didReceiveNewSolutions:*(void *)(a1 + 32)];
  }
}

void sub_10003748C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000374F0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038AE20();
    }
  }

  else
  {
    [v5 rangingServiceDidUpdateState:*(void *)(a1 + 32) cause:*(void *)(a1 + 40)];
  }
}

void sub_10003756C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000375D0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038AE20();
    }
  }

  else
  {
    [v5 rangingRequestDidUpdateStatus:*(void *)(a1 + 32)];
  }
}

void sub_10003764C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000376DC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1000376F4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038AE20();
    }
  }

  else
  {
    [v5 remoteDevice:*(void *)(a1 + 32) didChangeState:*(void *)(a1 + 40)];
  }
}

void sub_100037770(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

LABEL_80:
      goto LABEL_81;
    }

    __int128 v107 = NSLocalizedDescriptionKey;
    __int128 v108 = @"Failed to find usable UWB channel for service request.";
    uint64_t v59 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v108,  &v107,  1LL));
    id v60 = PRErrorWithCodeAndUserInfo(999LL, v59);
    unint64_t v61 = (void *)objc_claimAutoreleasedReturnValue(v60);

    v10[2](v10, 0LL, v61);
  }

  else
  {
    uint64_t v116 = NSLocalizedDescriptionKey;
    uint64_t v117 = @"Configuration Manager Error.";
    id v57 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v117,  &v116,  1LL));
    uint64_t v58 = PRErrorWithCodeAndUserInfo(999LL, v57);
    uint64_t v86 = (void *)objc_claimAutoreleasedReturnValue(v58);

    v10[2](v10, 0LL, v86);
  }

  __int128 v22 = *(void *)(v5 + 136);
  if (!v22) {
    __int128 v22 = *(void *)(qword_100800158 + 136);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11,  v22,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_86;
  }

  uint64_t v31 = (unsigned int *)*((void *)this + 9);
  if (!v31) {
    uint64_t v31 = *(unsigned int **)(qword_1008001F0 + 72);
  }
  *(_BYTE *)__int128 v4 = 74;
  __int128 v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v31[7];
  if (v32 > 0x7F)
  {
    uint64_t v33 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v32,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v32;
    uint64_t v33 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  __int128 v4 = sub_100084D04((wireless_diagnostics::google::protobuf::internal::WireFormat *)v31, v33, a3);
  __int128 v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x200) == 0)
  {
LABEL_23:
    if ((v12 & 0x400) == 0) {
      goto LABEL_24;
    }
    goto LABEL_92;
  }

  uint64_t v29 = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 232) |= 0x40000u;
  *(void *)(a1 + 112) = v29;
  id v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x80000) == 0)
  {
LABEL_28:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_82;
  }

  __int128 v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 92);
  if (v34 >= 0x80)
  {
    uint64_t v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34, a2);
    __float2 v3 = *(_DWORD *)(a1 + 468);
  }

  else
  {
    uint64_t v35 = 1;
  }

  v4 += v35 + 1;
  if ((v3 & 0x8000) != 0)
  {
LABEL_84:
    __int128 v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 136);
    if (v36 >= 0x80)
    {
      std::string v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36, a2);
      __float2 v3 = *(_DWORD *)(a1 + 468);
    }

    else
    {
      std::string v37 = 1;
    }

    v4 += v37 + 2;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24,  *(void *)(v5 + 280),  (unint64_t)a2,  a4);
  if ((*(_DWORD *)(v5 + 304) & 0x10) != 0) {
LABEL_38:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25,  *(void *)(v5 + 288),  (unint64_t)a2,  a4);
LABEL_39:
  __int128 v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  __int128 v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

  unint64_t v42 = *((void *)this + 25);
  *(_WORD *)__int128 v4 = 457;
  *(void *)((char *)v4 + 2) = v42;
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
  __int128 v16 = *((_DWORD *)this + 75);
  if ((v16 & 0x2000000) == 0)
  {
LABEL_45:
    if ((v16 & 0x4000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_82;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3FD,  *(_DWORD *)(v5 + 164),  (int)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 232);
  if ((v6 & 0x40000000) != 0) {
    goto LABEL_81;
  }
LABEL_32:
  if ((v6 & 0x80000000) == 0) {
    goto LABEL_33;
  }
LABEL_82:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3FF,  *(_DWORD *)(v5 + 172),  a2,  a4);
LABEL_33:
  float32x4_t v7 = *(_DWORD *)(v5 + 236);
  if ((v7 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x400,  *(_DWORD *)(v5 + 176),  (int)a2,  a4);
    float32x4_t v7 = *(_DWORD *)(v5 + 236);
    if ((v7 & 2) == 0)
    {
LABEL_35:
      if ((v7 & 4) == 0) {
        goto LABEL_36;
      }
      goto LABEL_85;
    }
  }

  else if ((v7 & 2) == 0)
  {
    goto LABEL_35;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x401,  *(_DWORD *)(v5 + 180),  (int)a2,  a4);
  float32x4_t v7 = *(_DWORD *)(v5 + 236);
  if ((v7 & 4) == 0)
  {
LABEL_36:
    if ((v7 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_86;
  }

      unint64_t v41 = (os_log_s *)(id)qword_1007F9AA0;
      if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)pthread_attr_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "PRRose:applyConfigOptions,regulatory,sendingPowerTable,success",  buf,  2u);
      }

      goto LABEL_82;
    }

    uint64_t v17 = [v89 BOOLForKey:@"NBUWBTxPowerTablesMaxOverride"];
    __int128 v18 = (os_log_s *)(id)qword_1007F9AA0;
    uint64_t v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);
    uint64_t v93 = v17;
    if (v17)
    {
      if (v19)
      {
        *(_WORD *)pthread_attr_t buf = 0;
        __int128 v20 = "PRRose:applyConfigOptions,regulatory,sendingPowerTable,nbUwbTxPowerTablesMaxOverride";
LABEL_99:
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v20, buf, 2u);
      }
    }

    else if (v19)
    {
      *(_WORD *)pthread_attr_t buf = 0;
      __int128 v20 = "PRRose:applyConfigOptions,regulatory,sendingPowerTable";
      goto LABEL_99;
    }

    __int128 v45 = *(void *)(a2 + 8);
    unsigned __int8 v46 = *(void *)(a2 + 16);
    if (v45 != v46)
    {
      char v47 = v45 + 8;
      uint64_t v91 = 1;
      while (1)
      {
        __int128 v48 = *(const void **)(v47 - 8);
        memset(&__p, 0, sizeof(__p));
        sub_100030B3C(&__p, v48, (uint64_t)v48 + 33, 0x21uLL);
        if (v93)
        {
          id v49 = __p.__r_.__value_.__r.__words[0];
          if (__p.__r_.__value_.__l.__size_ - __p.__r_.__value_.__r.__words[0] != 33) {
            __assert_rtn( "applyConfigOptions",  "PRRose.mm",  1141,  "r2UWBPowerTableEntry.size() == sizeof(set_cfg_pwrtbl_entry_v3_t)");
          }
          if (*__p.__r_.__value_.__l.__data_ != 3) {
            __assert_rtn( "applyConfigOptions",  "PRRose.mm",  1143,  "ptEntry->pwr_tbl_ver == SET_CFG_PWRTBL_ENTRY_V3_VERSION");
          }
          id v50 = (os_log_s *)(id)qword_1007F9AA0;
          if (os_log_type_enabled(v50, OS_LOG_TYPE_DEBUG))
          {
            sub_1001D48C8((uint64_t *)&__p, (std::stringbuf::string_type *)buf);
            id v57 = buf;
            if (buf[23] < 0) {
              id v57 = *(_BYTE **)buf;
            }
            LODWORD(v127.__r_.__value_.__l.__data_) = 136380675;
            *(std::string::size_type *)((char *)v127.__r_.__value_.__r.__words + 4) = (std::string::size_type)v57;
            _os_log_debug_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_DEBUG,  "PwrTblMax before: %{private}s",  (uint8_t *)&v127,  0xCu);
            if ((buf[23] & 0x80000000) != 0) {
              operator delete(*(void **)buf);
            }
          }

          *(void *)(v49 + 19) = 0x50005000500050LL;
          uint64_t v51 = (os_log_s *)(id)qword_1007F9AA0;
          if (os_log_type_enabled(v51, OS_LOG_TYPE_DEBUG))
          {
            sub_1001D48C8((uint64_t *)&__p, (std::stringbuf::string_type *)buf);
            uint64_t v58 = buf;
            if (buf[23] < 0) {
              uint64_t v58 = *(_BYTE **)buf;
            }
            LODWORD(v127.__r_.__value_.__l.__data_) = 136380675;
            *(std::string::size_type *)((char *)v127.__r_.__value_.__r.__words + 4) = (std::string::size_type)v58;
            _os_log_debug_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEBUG,  "           after: %{private}s",  (uint8_t *)&v127,  0xCu);
            if ((buf[23] & 0x80000000) != 0) {
              operator delete(*(void **)buf);
            }
          }
        }

        buf[0] = 41;
        memset(&buf[8], 0, 24);
        sub_1001309C0( &buf[8],  __p.__r_.__value_.__l.__data_,  __p.__r_.__value_.__l.__size_,  __p.__r_.__value_.__l.__size_ - __p.__r_.__value_.__r.__words[0]);
        v127.__r_.__value_.__s.__data_[0] = buf[0];
        double v128 = 0LL;
        *(_OWORD *)&v127.__r_.__value_.__r.__words[1] = 0uLL;
        sub_1001309C0( &v127.__r_.__value_.__l.__size_,  *(const void **)&buf[8],  *(uint64_t *)&buf[16],  *(void *)&buf[16] - *(void *)&buf[8]);
        unint64_t v101 = 0LL;
        __int128 v102 = 0LL;
        __int128 v103 = 0LL;
        uint64_t v125 = &v101;
        uint64_t v126 = 0;
        unint64_t v101 = (char *)operator new(0x20uLL);
        __int128 v102 = v101;
        __int128 v103 = v101 + 32;
        __int128 v102 = (_BYTE *)sub_1001DFBF4((uint64_t)&v103, (uint64_t)&v127, (uint64_t)buf, (uint64_t)v101);
        __int128 v105 = 0LL;
        __int128 v106 = 0LL;
        __int128 v104 = 0LL;
        sub_1001DF8D4(&v104, (uint64_t)v101, (uint64_t)v102, (v102 - v101) >> 5);
        uint64_t v125 = &v101;
        sub_100130C0C((void ***)&v125);
        if (v127.__r_.__value_.__l.__size_)
        {
          v127.__r_.__value_.__l.__cap_ = v127.__r_.__value_.__l.__size_;
          operator delete((void *)v127.__r_.__value_.__l.__size_);
        }

        v127.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1007B5C70;
        v127.__r_.__value_.__l.__size_ = (std::string::size_type)&v107;
        double v128 = &v127;
        uint64_t v52 = sub_100369520(v6, &v104, (uint64_t)&v127);
        __int128 v53 = v128;
        if (v128 == &v127) {
          break;
        }
        if (v128)
        {
          uint64_t v54 = 5LL;
LABEL_114:
          (*(void (**)(void))(v53->__r_.__value_.__r.__words[0] + 8 * v54))();
        }

        if (!v52)
        {
          __int128 v55 = (os_log_s *)(id)qword_1007F9AA0;
          if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR)) {
            sub_10039A31C(&v99, v100);
          }

          uint64_t v91 = 0;
        }

        v127.__r_.__value_.__r.__words[0] = (std::string::size_type)&v104;
        sub_100130C0C((void ***)&v127);
        if (*(void *)&buf[8])
        {
          *(void *)&uint8_t buf[16] = *(void *)&buf[8];
          operator delete(*(void **)&buf[8]);
        }

        if (__p.__r_.__value_.__r.__words[0])
        {
          __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0];
          operator delete(__p.__r_.__value_.__l.__data_);
        }

        uint64_t v56 = v47 != v46 && v52;
        v47 += 8LL;
        if (!v56) {
          goto LABEL_137;
        }
      }

      __int128 v53 = &v127;
      uint64_t v54 = 4LL;
      goto LABEL_114;
    }

    uint64_t v91 = 1;
LABEL_137:
    uint64_t v59 = *(void *)(a2 + 56);
    id v60 = *(void *)(a2 + 64);
    if (v59 != v60)
    {
      unint64_t v61 = v59 + 8;
      while (1)
      {
        unint64_t v62 = *(const void **)(v61 - 8);
        memset(&__p, 0, sizeof(__p));
        sub_100030B3C(&__p, v62, (uint64_t)v62 + 18, 0x12uLL);
        if (v93)
        {
          uint64_t v63 = __p.__r_.__value_.__r.__words[0];
          if (__p.__r_.__value_.__l.__size_ - __p.__r_.__value_.__r.__words[0] != 18) {
            __assert_rtn( "applyConfigOptions",  "PRRose.mm",  1168,  "r2NBPowerTableEntry.size() == sizeof(set_cfg_nb_reg_tbl_entry_t)");
          }
          if (*__p.__r_.__value_.__l.__data_ != 1) {
            __assert_rtn( "applyConfigOptions",  "PRRose.mm",  1170,  "ptEntry->ver_type == SET_CFG_NB_REG_TBL_ENTRY_VERSION");
          }
          uint64_t v64 = (os_log_s *)(id)qword_1007F9AA0;
          if (os_log_type_enabled(v64, OS_LOG_TYPE_DEBUG))
          {
            sub_1001D48C8((uint64_t *)&__p, (std::stringbuf::string_type *)buf);
            unint64_t v71 = buf;
            if (buf[23] < 0) {
              unint64_t v71 = *(_BYTE **)buf;
            }
            LODWORD(v127.__r_.__value_.__l.__data_) = 136380675;
            *(std::string::size_type *)((char *)v127.__r_.__value_.__r.__words + 4) = (std::string::size_type)v71;
            _os_log_debug_impl( (void *)&_mh_execute_header,  v64,  OS_LOG_TYPE_DEBUG,  "NBRegPwrTblMax before: %{private}s",  (uint8_t *)&v127,  0xCu);
            if ((buf[23] & 0x80000000) != 0) {
              operator delete(*(void **)buf);
            }
          }

          *(_DWORD *)(v63 + 6) = 26214800;
          *(_DWORD *)(v63 + 14) = 26214800;
          uint64_t v65 = (os_log_s *)(id)qword_1007F9AA0;
          if (os_log_type_enabled(v65, OS_LOG_TYPE_DEBUG))
          {
            sub_1001D48C8((uint64_t *)&__p, (std::stringbuf::string_type *)buf);
            unint64_t v72 = buf;
            if (buf[23] < 0) {
              unint64_t v72 = *(_BYTE **)buf;
            }
            LODWORD(v127.__r_.__value_.__l.__data_) = 136380675;
            *(std::string::size_type *)((char *)v127.__r_.__value_.__r.__words + 4) = (std::string::size_type)v72;
            _os_log_debug_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_DEBUG,  "              after: %{private}s",  (uint8_t *)&v127,  0xCu);
            if ((buf[23] & 0x80000000) != 0) {
              operator delete(*(void **)buf);
            }
          }
        }

        buf[0] = 46;
        memset(&buf[8], 0, 24);
        sub_1001309C0( &buf[8],  __p.__r_.__value_.__l.__data_,  __p.__r_.__value_.__l.__size_,  __p.__r_.__value_.__l.__size_ - __p.__r_.__value_.__r.__words[0]);
        v127.__r_.__value_.__s.__data_[0] = buf[0];
        double v128 = 0LL;
        *(_OWORD *)&v127.__r_.__value_.__r.__words[1] = 0uLL;
        sub_1001309C0( &v127.__r_.__value_.__l.__size_,  *(const void **)&buf[8],  *(uint64_t *)&buf[16],  *(void *)&buf[16] - *(void *)&buf[8]);
        unint64_t v101 = 0LL;
        __int128 v102 = 0LL;
        __int128 v103 = 0LL;
        uint64_t v125 = &v101;
        uint64_t v126 = 0;
        unint64_t v101 = (char *)operator new(0x20uLL);
        __int128 v102 = v101;
        __int128 v103 = v101 + 32;
        __int128 v102 = (_BYTE *)sub_1001DFBF4((uint64_t)&v103, (uint64_t)&v127, (uint64_t)buf, (uint64_t)v101);
        __int128 v105 = 0LL;
        __int128 v106 = 0LL;
        __int128 v104 = 0LL;
        sub_1001DF8D4(&v104, (uint64_t)v101, (uint64_t)v102, (v102 - v101) >> 5);
        uint64_t v125 = &v101;
        sub_100130C0C((void ***)&v125);
        if (v127.__r_.__value_.__l.__size_)
        {
          v127.__r_.__value_.__l.__cap_ = v127.__r_.__value_.__l.__size_;
          operator delete((void *)v127.__r_.__value_.__l.__size_);
        }

        v127.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1007B5C70;
        v127.__r_.__value_.__l.__size_ = (std::string::size_type)&v107;
        double v128 = &v127;
        int64_t v66 = sub_100369520(v6, &v104, (uint64_t)&v127);
        int64_t v67 = v128;
        if (v128 == &v127) {
          break;
        }
        if (v128)
        {
          int64_t v68 = 5LL;
LABEL_151:
          (*(void (**)(void))(v67->__r_.__value_.__r.__words[0] + 8 * v68))();
        }

        if (!v66)
        {
          uint64_t v69 = (os_log_s *)(id)qword_1007F9AA0;
          if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR)) {
            sub_10039A374(&v97, v98);
          }

          uint64_t v91 = 0;
        }

        v127.__r_.__value_.__r.__words[0] = (std::string::size_type)&v104;
        sub_100130C0C((void ***)&v127);
        if (*(void *)&buf[8])
        {
          *(void *)&uint8_t buf[16] = *(void *)&buf[8];
          operator delete(*(void **)&buf[8]);
        }

        if (__p.__r_.__value_.__r.__words[0])
        {
          __p.__r_.__value_.__l.__size_ = __p.__r_.__value_.__r.__words[0];
          operator delete(__p.__r_.__value_.__l.__data_);
        }

        unint64_t v70 = v61 != v60 && v66;
        v61 += 8LL;
        if (!v70) {
          goto LABEL_173;
        }
      }

      int64_t v67 = &v127;
      int64_t v68 = 4LL;
      goto LABEL_151;
    }

    __int128 v18 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue(-[NIServerNBAMMSSession _getState](self, "_getState"));
      *(_DWORD *)pthread_attr_t buf = 138412290;
      *(void *)&uint8_t buf[4] = v44;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "#find-range,NBAMMS session state (after unregister): %@",  buf,  0xCu);
    }

      sub_100306B4C(a1, a2);
      return;
    }

  if (!v48) {
    goto LABEL_84;
  }
  id v49 = 5LL;
LABEL_83:
  (*((void (**)(void))*v48 + v49))();
LABEL_84:
  uint64_t v84 = (unint64_t *)&v12->__shared_owners_;
  do
    uint64_t v85 = __ldaxr(v84);
  while (__stlxr(v85 - 1, v84));
  if (!v85)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }

LABEL_81:
  if (v87)
  {
    unint64_t v83 = (unint64_t *)&v87->__shared_owners_;
    do
      uint64_t v84 = __ldaxr(v83);
    while (__stlxr(v84 - 1, v83));
    if (!v84)
    {
      ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
      std::__shared_weak_count::__release_weak(v87);
    }
  }

  uint64_t v35 = *(const std::string **)(a2 + 32);
  *(_DWORD *)(a1 + 300) |= 0x10u;
  __int128 v36 = *(std::string **)(a1 + 32);
  if (v36 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    __int128 v36 = (std::string *)operator new(0x18uLL);
    v36->__r_.__value_.__l.__size_ = 0LL;
    v36->__r_.__value_.__l.__cap_ = 0LL;
    v36->__r_.__value_.__r.__words[0] = 0LL;
    *(void *)(a1 + sub_100012358(v1 - 32) = v36;
  }

  std::string::operator=(v36, v35);
  id v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x20) != 0) {
    goto LABEL_84;
  }
LABEL_18:
  if ((v5 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_85:
  std::string v38 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 300) |= 0x40u;
  *(void *)(a1 + 48) = v38;
  id v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x80) != 0)
  {
LABEL_20:
    uint64_t v9 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 300) |= 0x80u;
    *(void *)(a1 + 56) = v9;
    id v5 = *(_DWORD *)(a2 + 300);
  }

  __int128 v30 = *(void *)(a2 + 120);
  *(_DWORD *)(a1 + 232) |= 0x80000u;
  *(void *)(a1 + 120) = v30;
  id v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x100000) == 0)
  {
LABEL_29:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_83;
  }

  int v43 = *((void *)this + 26);
  *(_WORD *)__int128 v4 = 465;
  *(void *)((char *)v4 + 2) = v43;
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
  __int128 v16 = *((_DWORD *)this + 75);
  if ((v16 & 0x4000000) == 0)
  {
LABEL_46:
    if ((v16 & 0x8000000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_83;
  }

  uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[18];
  if (v31 >= 0x80)
  {
    __int128 v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2) + 1;
    __float2 v3 = a1[26];
  }

  else
  {
    __int128 v32 = 2;
  }

  __int128 v4 = (v32 + v4);
  if ((v3 & 0x8000) != 0)
  {
LABEL_85:
    uint64_t v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[19];
    if ((v33 & 0x80000000) != 0)
    {
      __int128 v34 = 11;
    }

    else if (v33 >= 0x80)
    {
      __float2 v3 = a1[26];
    }

    else
    {
      __int128 v34 = 2;
    }

    __int128 v4 = (v34 + v4);
  }

  __int128 v48 = (unsigned int *)*((void *)this + 12);
  if (!v48) {
    __int128 v48 = *(unsigned int **)(qword_100800558 + 96);
  }
  *(_BYTE *)__int128 v4 = 74;
  id v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v48[21];
  if (v49 > 0x7F)
  {
    id v50 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v49,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v49;
    id v50 = (char *)v4 + 2;
  }

  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000E0FD8( (wireless_diagnostics::google::protobuf::internal::WireFormat *)v48,  v50,  a3);
  uint64_t v17 = *((_DWORD *)this + 30);
  if ((v17 & 0x200) != 0) {
    goto LABEL_87;
  }
LABEL_29:
  if ((v17 & 0x400) != 0)
  {
LABEL_30:
    __int128 v18 = *((_DWORD *)this + 28);
    *(_BYTE *)__int128 v4 = 93;
    *(_DWORD *)((char *)v4 + 1) = v18;
    __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
  }

void sub_1000381E8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, std::__shared_weak_count *a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20, uint64_t a21, std::__shared_weak_count *a22, uint64_t a23, uint64_t a24, char a25, uint64_t a26, void *__p, uint64_t a28, int a29, __int16 a30, char a31, char a32)
{
  _Unwind_Resume(a1);
}

LABEL_16:
  v8[2](v8, 1LL, 0LL);
LABEL_21:
}

  v8[2](v8, 1LL, 0LL);
LABEL_21:
}

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 2u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

  __int128 v8 = *(void *)(v5 + 24);
  if (!v8) {
    __int128 v8 = *(void *)(qword_1008000E8 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v8,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 2u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_100800100 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v9,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }

    if (v9 == 4) {
      return 1LL;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField( this,  TagFallback,  v6,  a4) & 1) == 0) {
      return 0LL;
    }
  }

    if (v9 == 4) {
      return 1LL;
    }
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 48),  a2,  a4);
  if ((*(_DWORD *)(v5 + 56) & 0x20) != 0) {
LABEL_7:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(void *)(v5 + 40),  (unint64_t)a2,  a4);
LABEL_8:
  uint64_t v9 = *(void **)(v5 + 8);
  __int128 v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  float32x4_t v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  uint64_t v11 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 64) |= 8u;
  *(void *)(a1 + sub_100012358(v1 - 32) = v11;
  id v5 = *(_DWORD *)(a2 + 64);
  if ((v5 & 0x10) != 0) {
    goto LABEL_17;
  }
LABEL_11:
  if ((v5 & 0x20) != 0)
  {
LABEL_12:
    float32x4_t v7 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 64) |= 0x20u;
    *(void *)(a1 + 48) = v7;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 40),  a3);
  if ((*(_DWORD *)(v5 + 64) & 0x20) != 0) {
LABEL_7:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 48),  a3);
LABEL_8:
  uint64_t v9 = *(void **)(v5 + 8);
  __int128 v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  float32x4_t v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

    uint64_t v9 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 116) |= 8u;
    *(void *)(a1 + 40) = v9;
    id v5 = *(_DWORD *)(a2 + 116);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }

  __int128 v10 = *(_DWORD *)(a2 + 28);
  if ((sub_10007560C(v10) & 1) == 0) {
    sub_10038C06C();
  }
  *(_DWORD *)(a1 + 68) |= 4u;
  *(_DWORD *)(a1 + 28) = v10;
  id v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }

  uint64_t v11 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 76) |= 8u;
  *(void *)(a1 + 40) = v11;
  id v5 = *(_DWORD *)(a2 + 76);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_18:
    uint64_t v13 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 76) |= 0x20u;
    *(void *)(a1 + 56) = v13;
    if ((*(_DWORD *)(a2 + 76) & 0x40) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_11;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v4 + 40),  a3);
  id v5 = *(_DWORD *)(v4 + 76);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }

  __int128 v12 = *(void *)(a1 + 40);
  *(_BYTE *)a2 = 33;
  *(void *)(a2 + 1) = v12;
  a2 += 9LL;
  __float2 v3 = *(_DWORD *)(a1 + 76);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_18:
    __int128 v14 = *(void *)(a1 + 56);
    *(_BYTE *)a2 = 49;
    *(void *)(a2 + 1) = v14;
    a2 += 9LL;
    if ((*(_DWORD *)(a1 + 76) & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 24),  (int)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }

    if (v9 == 4) {
      return 1LL;
    }
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 28),  (int)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }

  if ((v3 & 4) != 0)
  {
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
    if (v9 >= 0x80)
    {
      __int128 v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      __float2 v3 = a1[26];
    }

    else
    {
      __int128 v10 = 1;
    }

    LODWORD(v4) = v4 + v10 + 1;
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_29;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }

  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v11 >= 0x80)
  {
    __int128 v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    __float2 v3 = a1[26];
  }

  else
  {
    __int128 v12 = 1;
  }

  LODWORD(v4) = v4 + v12 + 1;
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }

  uint64_t v9 = *(void *)(v5 + 40);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1008003E8 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v9,  a2,  a4);
  id v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }

  __int128 v10 = *((void *)this + 4);
  if (!v10) {
    __int128 v10 = *(void *)(qword_1008003E8 + 32);
  }
  *(_BYTE *)__float2 v3 = 26;
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v10 + 40);
  if (v11 > 0x7F)
  {
    __int128 v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v11,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v11;
    __int128 v12 = (uint64_t)v3 + 2;
  }

  __float2 v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000B7C80(v10, v12, a3);
  id v5 = *((_DWORD *)this + 19);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }

  __int128 v12 = *(void **)(v5 + 8);
  uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  __int128 v10 = v12;
  if (v12)
  {
    if (*v10 != v10[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, a3);
    }
  }

  return this;
}

  if ((*((_BYTE *)this + 100) & 0x40) != 0)
  {
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    *(_BYTE *)a2 = 56;
    if (v11 > 0x7F)
    {
      a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v11,  (int)a2 + 1,  a3);
    }

    else
    {
      *(_BYTE *)(a2 + 1) = (_BYTE)v11;
      a2 += 2LL;
    }
  }

  __int128 v12 = *((_DWORD *)this + 25);
  if ((v12 & 0x80) != 0)
  {
    __int128 v18 = *((void *)this + 8);
    *(_BYTE *)a2 = 65;
    *(void *)(a2 + 1) = v18;
    a2 += 9LL;
    __int128 v12 = *((_DWORD *)this + 25);
    if ((v12 & 0x100) == 0)
    {
LABEL_22:
      if ((v12 & 0x200) == 0) {
        goto LABEL_23;
      }
LABEL_31:
      __int128 v20 = *((void *)this + 10);
      *(_BYTE *)a2 = 81;
      *(void *)(a2 + 1) = v20;
      a2 += 9LL;
      if ((*((_DWORD *)this + 25) & 0x400) == 0) {
        goto LABEL_25;
      }
      goto LABEL_24;
    }
  }

  else if ((v12 & 0x100) == 0)
  {
    goto LABEL_22;
  }

  uint64_t v19 = *((void *)this + 9);
  *(_BYTE *)a2 = 73;
  *(void *)(a2 + 1) = v19;
  a2 += 9LL;
  __int128 v12 = *((_DWORD *)this + 25);
  if ((v12 & 0x200) != 0) {
    goto LABEL_31;
  }
LABEL_23:
  if ((v12 & 0x400) != 0)
  {
LABEL_24:
    uint64_t v13 = *((void *)this + 11);
    *(_BYTE *)a2 = 89;
    *(void *)(a2 + 1) = v13;
    a2 += 9LL;
  }

        if (v10 == 4) {
          return 1LL;
        }
      }

      __int128 v10 = TagFallback & 7;
      uint64_t v13 = (char *)*((void *)this + 1);
      __int128 v12 = *((void *)this + 2);
      if ((unint64_t)v13 >= v12 || *v13 < 0)
      {
        double result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!(_DWORD)result) {
          return result;
        }
        __int128 v14 = (_BYTE *)*((void *)this + 1);
        __int128 v12 = *((void *)this + 2);
      }

      else
      {
        _BYTE *v6 = *v13;
        __int128 v14 = v13 + 1;
        *((void *)this + 1) = v14;
      }

      uint64_t v11 = *(_DWORD *)(a1 + 32) | 1;
      *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v11;
    }

    while ((unint64_t)v14 >= v12 || *v14 != 18);
    *((void *)this + 1) = v14 + 1;
LABEL_24:
    *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v11 | 2;
    __int128 v16 = *(void **)(a1 + 16);
    if (!v16)
    {
      __int128 v16 = operator new(0x30uLL);
      sub_1000C8850((uint64_t)v16);
      *(void *)(a1 + 16) = v16;
    }

    uint64_t v17 = (char *)*((void *)this + 1);
    if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
    {
    }

    else
    {
      __int128 v26 = *v17;
      *((void *)this + 1) = v17 + 1;
    }

    __int128 v18 = *((_DWORD *)this + 14);
    uint64_t v19 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v18 + 1;
    if (v18 >= v19) {
      return 0LL;
    }
    __int128 v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
    uint64_t v23 = *((_DWORD *)this + 14);
    __int128 v24 = __OFSUB__(v23, 1);
    uint64_t v25 = v23 - 1;
    if (v25 < 0 == v24) {
      *((_DWORD *)this + 14) = v25;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      double result = 1LL;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }

  __int128 v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    __int128 v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

  uint64_t v11 = (unsigned int *)*((void *)this + 4);
  if (!v11) {
    uint64_t v11 = *(unsigned int **)(qword_1008004C8 + 32);
  }
  *(_BYTE *)__int128 v4 = 26;
  __int128 v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[13];
  if (v12 > 0x7F)
  {
    uint64_t v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v12,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v12;
    uint64_t v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  __int128 v4 = sub_1000D333C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v13, a3);
  id v6 = *((_DWORD *)this + 17);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }

  __int128 v8 = *(void *)(v5 + 48);
  if (!v8) {
    __int128 v8 = *(void *)(qword_100800500 + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  v8,  a2,  a4);
  if ((*(_DWORD *)(v5 + 72) & 0x40) != 0)
  {
LABEL_19:
    uint64_t v9 = *(void *)(v5 + 56);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_100800500 + 56);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  v9,  a2,  a4);
  }

  float32x4_t v7 = *(void *)(a1 + 40);
  if (!v7) {
    float32x4_t v7 = *(void *)(qword_100800500 + 40);
  }
  __int128 v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10008F2A8(v7, a2);
  uint64_t v9 = (int)v8;
  else {
    __int128 v10 = 1;
  }
  __int128 v4 = (v4 + v9 + v10 + 1);
  __float2 v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0) {
      goto LABEL_34;
    }
    goto LABEL_28;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 40),  (int)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }

    if (v9 == 4) {
      return 1LL;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField( this,  TagFallback,  v6,  a4) & 1) == 0) {
      return 0LL;
    }
  }

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0) {
      return 0LL;
    }
    a1[5] = v12;
    a1[7] |= 2u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(float *)(v5 + 32),  a3);
  id v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }

  uint64_t v9 = *((_DWORD *)this + 8);
  *(_BYTE *)a2 = 45;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5LL;
  __int128 v4 = *((_DWORD *)this + 18);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }

  __int128 v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    __int128 v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v4;
  return v4;
}

  __int128 v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    __int128 v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v4;
  return v4;
}

  __int128 v10 = *(_BYTE *)(a2 + 25);
  *(_DWORD *)(a1 + 52) |= 4u;
  *(_BYTE *)(a1 + 25) = v10;
  id v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(unsigned __int8 *)(v5 + 25),  (BOOL)a2,  a4);
  id v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }

  uint64_t v11 = *(_BYTE *)(a1 + 25);
  *(_BYTE *)a2 = 24;
  *(_BYTE *)(a2 + 1) = v11;
  a2 += 2LL;
  __float2 v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }

  __int128 v8 = *(void *)(v5 + 40);
  if (!v8) {
    __int128 v8 = *(void *)(qword_1008005B8 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  v8,  a2,  a4);
  if ((*(_DWORD *)(v5 + 64) & 0x40) != 0)
  {
LABEL_19:
    uint64_t v9 = *(void *)(v5 + 48);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1008005B8 + 48);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  v9,  a2,  a4);
  }

  __int128 v12 = *((_BYTE *)this + 35);
  *(_BYTE *)__int128 v4 = 48;
  *((_BYTE *)v4 + 1) = v12;
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  id v6 = *((_DWORD *)this + 14);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }

    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 2u;
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  double result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(double *)(v5 + 24),  a3);
  id v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }

  uint64_t v11 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 68) |= 8u;
  *(void *)(a1 + 40) = v11;
  id v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_18:
    uint64_t v13 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 68) |= 0x20u;
    *(_DWORD *)(a1 + 56) = v13;
    if ((*(_DWORD *)(a2 + 68) & 0x40) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_11;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 40),  a3);
  id v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }

        if (v10 == 4) {
          return 1LL;
        }
      }

      __int128 v10 = TagFallback & 7;
      uint64_t v13 = (char *)*((void *)this + 1);
      __int128 v12 = *((void *)this + 2);
      if ((unint64_t)v13 >= v12 || *v13 < 0)
      {
        double result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!(_DWORD)result) {
          return result;
        }
        __int128 v14 = (_BYTE *)*((void *)this + 1);
        __int128 v12 = *((void *)this + 2);
      }

      else
      {
        _BYTE *v6 = *v13;
        __int128 v14 = v13 + 1;
        *((void *)this + 1) = v14;
      }

      uint64_t v11 = *(_DWORD *)(a1 + 32) | 1;
      *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v11;
    }

    while ((unint64_t)v14 >= v12 || *v14 != 18);
    *((void *)this + 1) = v14 + 1;
LABEL_24:
    *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v11 | 2;
    __int128 v16 = *(void **)(a1 + 16);
    if (!v16)
    {
      __int128 v16 = operator new(0x48uLL);
      sub_1001021C8((uint64_t)v16);
      *(void *)(a1 + 16) = v16;
    }

    uint64_t v17 = (char *)*((void *)this + 1);
    if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
    {
    }

    else
    {
      __int128 v26 = *v17;
      *((void *)this + 1) = v17 + 1;
    }

    __int128 v18 = *((_DWORD *)this + 14);
    uint64_t v19 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v18 + 1;
    if (v18 >= v19) {
      return 0LL;
    }
    __int128 v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
    uint64_t v23 = *((_DWORD *)this + 14);
    __int128 v24 = __OFSUB__(v23, 1);
    uint64_t v25 = v23 - 1;
    if (v25 < 0 == v24) {
      *((_DWORD *)this + 14) = v25;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      double result = 1LL;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }

  __int128 v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    __int128 v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(unsigned __int8 *)(v5 + 41),  (BOOL)a2,  a4);
  if ((*(_DWORD *)(v5 + 48) & 0x20) != 0) {
LABEL_7:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(unsigned __int8 *)(v5 + 42),  (BOOL)a2,  a4);
LABEL_8:
  uint64_t v9 = *(void **)(v5 + 8);
  __int128 v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  float32x4_t v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  __int128 v12 = *(void *)(v5 + 32);
  if (!v12) {
    __int128 v12 = *(void *)(qword_100800710 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v12,  a2,  a4);
  if ((*(_DWORD *)(v5 + 48) & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 40),  (int)a2,  a4);
LABEL_6:
  uint64_t v9 = *(void **)(v5 + 8);
  __int128 v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  float32x4_t v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  __int128 v12 = *((void *)this + 7);
  *(_BYTE *)__int128 v4 = 49;
  *(void *)((char *)v4 + 1) = v12;
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  id v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v4 + 48),  a3);
  if ((*(_DWORD *)(v4 + 68) & 0x20) != 0) {
LABEL_7:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v4 + 56),  a3);
LABEL_8:
  __int128 v8 = *(void **)(v4 + 8);
  float32x4_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  id v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
    }
  }

  return this;
}

      if (v11 > (v9.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
      {
        v12.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_19:
        std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 32), &__lk, v12);
        std::chrono::steady_clock::now();
        continue;
      }

      if (v11 > (v9.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
      {
        v12.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_19:
        std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 32), &__lk, v12);
        std::chrono::steady_clock::now();
        continue;
      }

      if (v5 > (v3.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
      {
        v6.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_19:
        std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 32), &__lk, v6);
        std::chrono::steady_clock::now();
        continue;
      }

      if (v15 > (v13.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
      {
        v16.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_19:
        std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 32), &__lk, v16);
        std::chrono::steady_clock::now();
        continue;
      }
}

  return v8;
}

  __int128 v10 = (os_log_s *)qword_1007FBF90;
  if (os_log_type_enabled((os_log_t)qword_1007FBF90, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = "__";
    if (*(char *)(a1 + 31) < 0)
    {
      if (*(void *)(a1 + 16)) {
        __int128 v12 = (const char *)v4->__r_.__value_.__r.__words[0];
      }
      else {
        __int128 v12 = "__";
      }
    }

    else if (*(_BYTE *)(a1 + 31))
    {
      __int128 v12 = (const char *)v4;
    }

    else
    {
      __int128 v12 = "__";
    }

    if ((char)v2->__r_.__value_.__s.__size_ < 0)
    {
      if (v2->__r_.__value_.__l.__size_) {
        uint64_t v11 = (const char *)v2->__r_.__value_.__r.__words[0];
      }
      else {
        uint64_t v11 = "__";
      }
    }

    else if (v2->__r_.__value_.__s.__size_)
    {
      uint64_t v11 = (const char *)v2;
    }

    *(_DWORD *)pthread_attr_t buf = 136315394;
    *(void *)&uint8_t buf[4] = v12;
    *(_WORD *)&buf[12] = 2080;
    *(void *)&buf[14] = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "regulatory,settings,setIsoCountry,current:%s,new:%s",  buf,  0x16u);
  }

  uint64_t v69 = 0;
  int64_t v68 = 0u;
  memset(buf, 0, sizeof(buf));
  unint64_t v70 = -1;
  uint64_t v17 = *(void *)a1;
  else {
    __dst = *v2;
  }
  __int128 v18 = sub_10034F45C(v17, &__dst, (std::string *)buf);
  uint64_t v19 = v18;
  if ((char)__dst.__r_.__value_.__s.__size_ < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if (v19) {
      goto LABEL_38;
    }
LABEL_50:
    uint64_t v13 = 0;
    __int128 v14 = 0;
    goto LABEL_66;
  }

  if (!v18) {
    goto LABEL_50;
  }
LABEL_38:
  std::mutex::lock((std::mutex *)(a1 + 152));
  __int128 v20 = (os_log_s *)(id)qword_1007FBF90;
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v21 = SHIBYTE(v68);
    __int128 v22 = *(_BYTE **)&buf[24];
    uint64_t v23 = buf[23];
    __int128 v24 = *(_BYTE **)buf;
    uint64_t v25 = v69;
    __int128 v26 = HIBYTE(v69);
    sub_10034D81C(v70, &__p);
    uint64_t v27 = buf;
    __int128 v28 = &buf[24];
    if (v23 < 0) {
      uint64_t v27 = v24;
    }
    if (v21 < 0) {
      __int128 v28 = v22;
    }
    *(_DWORD *)unint64_t v61 = 136316162;
    p_p = &__p;
    if (v66 < 0) {
      p_p = __p;
    }
    *(void *)&v61[4] = v28;
    *(_WORD *)&v61[12] = 2080;
    *(void *)&v61[14] = v27;
    *(_WORD *)&v61[22] = 1024;
    *(_DWORD *)&v61[24] = v25;
    *(_WORD *)&v61[28] = 1024;
    *(_DWORD *)&v61[30] = v26;
    *(_WORD *)&v61[34] = 2080;
    *(void *)&v61[36] = p_p;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "regulatory,settings,countryAvailable,U,iso,%s,name,%s,ch5,%d,ch9,%d,group,%s",  v61,  0x2Cu);
    if (v66 < 0) {
      operator delete(__p);
    }
  }

  __int128 v30 = sub_10025C1DC(a1);
  uint64_t v31 = v69;
  *(void *)unint64_t v61 = &unk_10042A950;
  __int128 v32 = sub_10025D324((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_10042A950, (uint64_t)&unk_1004242F8, (_BYTE **)v61);
  *(void *)unint64_t v61 = &unk_10042A960;
  *((_BYTE *)sub_100160F94(v32 + 5, (int *)&unk_10042A960, (uint64_t)&unk_1004242F8, (_DWORD **)v61) + sub_100012358(v1 - 32) = v31;
  uint64_t v33 = HIBYTE(v69);
  *(void *)unint64_t v61 = &unk_10042A951;
  __int128 v34 = sub_10025D324((uint64_t **)(a1 + 56), (unsigned __int8 *)&unk_10042A951, (uint64_t)&unk_1004242F8, (_BYTE **)v61);
  *(void *)unint64_t v61 = &unk_10042A960;
  *((_BYTE *)sub_100160F94(v34 + 5, (int *)&unk_10042A960, (uint64_t)&unk_1004242F8, (_DWORD **)v61) + sub_100012358(v1 - 32) = v33;
  uint64_t v35 = sub_10025AF40(a1, 5);
  __int128 v36 = sub_10025AF40(a1, 9);
  std::string::operator=(v4, v2);
  if (*(unsigned __int8 *)(a1 + 32) == v70)
  {
    std::string v37 = 0;
  }

  else
  {
    *(_BYTE *)(a1 + sub_100012358(v1 - 32) = v70;
    std::string v37 = 1;
  }

  __int128 v14 = v35 || v36;
  if (sub_10025C1DC(a1) && v30) {
    std::string v38 = v37;
  }
  else {
    std::string v38 = 0;
  }
  if (*(_BYTE *)(a1 + 216))
  {
    unint64_t v39 = 1;
  }

  else
  {
    unint64_t v40 = (os_log_s *)qword_1007FBF90;
    if (os_log_type_enabled((os_log_t)qword_1007FBF90, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)unint64_t v61 = 67109376;
      *(_DWORD *)&v61[4] = v14;
      *(_WORD *)&v61[8] = 1024;
      *(_DWORD *)&v61[10] = v38;
      _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEFAULT,  "regulatory,settings,setIsoCountry,ignoreUpdates,isChannelSettingChanged,%d,isPowerTableChanged,%d",  v61,  0xEu);
    }

    unint64_t v39 = *(unsigned __int8 *)(a1 + 216);
  }

  std::mutex::unlock((std::mutex *)(a1 + 152));
  unint64_t v41 = sub_1001A8438();
  if (!v39) {
    __int128 v14 = 0;
  }
  if (v38) {
    uint64_t v13 = v39 != 0;
  }
  else {
    uint64_t v13 = 0;
  }
  sub_100351330((uint64_t)v41, v4);
LABEL_66:
  memset(v61, 0, sizeof(v61));
  unint64_t v62 = -1;
  unint64_t v42 = *(void *)a1;
  else {
    uint64_t v59 = *v2;
  }
  int v43 = sub_10034F704(v42, &v59, (uint64_t)v61);
  uint64_t v44 = v43;
  if ((char)v59.__r_.__value_.__s.__size_ < 0)
  {
    operator delete(v59.__r_.__value_.__l.__data_);
    if (v44) {
      goto LABEL_71;
    }
  }

  else if (v43)
  {
LABEL_71:
    __int128 v45 = (std::mutex *)(a1 + 152);
    std::mutex::lock((std::mutex *)(a1 + 152));
    unsigned __int8 v46 = sub_10025C240(a1);
    id v49 = HIBYTE(v62) < 0xFEu && v62 != 254 && v62 != 255;
    __p = byte_10042A952;
    id v50 = sub_10025D324((uint64_t **)(a1 + 104), byte_10042A952, (uint64_t)&unk_1004242F8, (_BYTE **)&__p);
    __p = &unk_10042A960;
    *((_BYTE *)sub_100160F94(v50 + 5, (int *)&unk_10042A960, (uint64_t)&unk_1004242F8, (_DWORD **)&__p) + sub_100012358(v1 - 32) = v49;
    char v15 = sub_10025A910(a1, 1);
    uint64_t v51 = v62;
    if (__PAIR64__(*(unsigned __int8 *)(a1 + 34), *(unsigned __int8 *)(a1 + 33)) == __PAIR64__( v62,  HIBYTE(v62)))
    {
      uint64_t v52 = 0;
    }

    else
    {
      *(_BYTE *)(a1 + 33) = HIBYTE(v62);
      *(_BYTE *)(a1 + 34) = v51;
      uint64_t v52 = 1;
    }

    __int128 v53 = sub_10025C240(a1);
    if (v46) {
      uint64_t v54 = v52;
    }
    else {
      uint64_t v54 = 1;
    }
    if (v53) {
      __int128 v55 = v54;
    }
    else {
      __int128 v55 = 0;
    }
    if (*(_BYTE *)(a1 + 216))
    {
      uint64_t v56 = 1;
    }

    else
    {
      id v57 = (os_log_s *)qword_1007FBF90;
      if (os_log_type_enabled((os_log_t)qword_1007FBF90, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(__p) = 67109376;
        HIDWORD(__p) = v15;
        uint64_t v64 = 1024;
        uint64_t v65 = v55;
        _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_DEFAULT,  "regulatory,settings,setIsoCountry,ignoreUpdates,N,isChannelSettingChanged,%d,isPowerTableChanged,%d",  (uint8_t *)&__p,  0xEu);
      }

      uint64_t v56 = *(_BYTE *)(a1 + 216) != 0;
    }

    if (v55) {
      __int128 v16 = v56;
    }
    else {
      __int128 v16 = 0;
    }
    std::mutex::unlock(v45);
    goto LABEL_100;
  }

  char v15 = 0;
  __int128 v16 = 0;
LABEL_100:
  if (SHIBYTE(v68) < 0) {
    operator delete(*(void **)&buf[24]);
  }
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  return (v15 << 16) | (v16 << 24) | (v13 << 8) | v14;
}

  return v6;
}

  sub_100314E00((uint64_t)v3, &v19, (__int128 *)v12);
  sub_100314E00(a1 + 336, &v19, &__dst);
  float32x4_t v7 = 1LL;
LABEL_19:
  if (v15 && v13 < 0) {
    operator delete(v12[0]);
  }
  if (v18 && v17 < 0) {
    operator delete((void *)__dst);
  }
  return v7;
}

  if (*(void *)(a1 + 1184))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 0x40000000LL;
    block[2] = sub_10036A18C;
    block[3] = &unk_1007BF4B0;
    void block[4] = a1;
    dispatch_async_and_wait(*(dispatch_queue_t *)(a1 + 1192), block);
  }

  return v49;
}

void sub_10003876C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  _Unwind_Resume(a1);
}

void sub_100038B2C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(a1);
}

void sub_100038C24(id *a1@<X1>, void *a2@<X8>)
{
  __int128 v4 = operator new(0x48uLL);
  sub_100038C84(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_100012538((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_100038C70(_Unwind_Exception *a1)
{
}

void *sub_100038C84(void *a1, id *location)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_1007A2120;
  sub_100038CE0((int)&v4, (uint64_t)(a1 + 3), location);
  return a1;
}

void sub_100038CCC(_Unwind_Exception *a1)
{
}

void sub_100038CE0(int a1, uint64_t a2, id *location)
{
  id WeakRetained = objc_loadWeakRetained(location);
  sub_10026398C(a2, WeakRetained);
}

void sub_100038D20( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100038D34()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_100038DB0(_Unwind_Exception *a1)
{
}

void sub_100038DC8()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10040CC28;
      v1[1] = unk_10040CC38;
      v1[2] = xmmword_10040CC48;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_100038E68(_Unwind_Exception *a1)
{
}

void sub_100038E80()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  uint64_t v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  __float2 v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F5330 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F5320 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5320, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  id v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  float32x4_t v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F5348 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F5338 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5338, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  uint64_t v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F5360 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F5350 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5350, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  uint64_t v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  char v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F5378 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F5368 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5368, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  uint64_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F5390 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F5380 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5380, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  __int128 v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F53A8 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F5398 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5398, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  uint64_t v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F53C0 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F53B0 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F53B0, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  uint64_t v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F53D8 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F53C8 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F53C8, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  uint64_t v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F53F0 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F53E0 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F53E0, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100039474( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1000394E8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A30A0[a1]);
}

void *sub_1000394FC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A30F8[a1]);
}

void *sub_100039510@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A3140[a1]);
}

void *sub_100039524@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A3160[a1]);
}

void sub_10003961C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t v17 = a15;
  if (a15 == &a12)
  {
    uint64_t v18 = 4LL;
    uint64_t v17 = &a12;
  }

  else
  {
    if (!a15) {
      goto LABEL_6;
    }
    uint64_t v18 = 5LL;
  }

  (*(void (**)(void))(*(void *)v17 + 8 * v18))();
LABEL_6:

  _Unwind_Resume(a1);
}

void sub_1000397EC(id a1, OS_xpc_object *a2)
{
  __int128 v2 = a2;
  string = xpc_dictionary_get_string(v2, _xpc_event_key_name);
  __int128 v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 136315138;
    __int128 v6 = string;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "[PRDaemon] Got iokit XPC event: %s",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_1000398B0(_Unwind_Exception *exception_object)
{
}

void sub_1000398C8(id a1, OS_xpc_object *a2)
{
  __int128 v2 = a2;
  string = xpc_dictionary_get_string(v2, _xpc_event_key_name);
  __int128 v4 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 136315138;
    __int128 v6 = string;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "[PRDaemon] Got notifyd XPC event: %s",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_10003998C(_Unwind_Exception *exception_object)
{
}

void sub_1000399A4(id a1, OS_xpc_object *a2)
{
  __int128 v2 = a2;
  __float2 v3 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = CUPrintXPC(v2);
    int v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    int v6 = 138477827;
    float32x4_t v7 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "[PRDaemon] Got CBDiscovery XPC event: %{private}@",  (uint8_t *)&v6,  0xCu);
  }
}

void sub_100039A70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100039B8C(uint64_t a1)
{
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterAddObserver( DarwinNotifyCenter,  *(const void **)(a1 + 32),  (CFNotificationCallback)sub_100039C94,  @"com.apple.mobile.keybagd.first_unlock",  0LL,  CFNotificationSuspensionBehaviorDeliverImmediately);
  __float2 v3 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterAddObserver( v3,  *(const void **)(a1 + 32),  (CFNotificationCallback)sub_100039C94,  @"com.apple.mobile.keybagd.lock_status",  0LL,  CFNotificationSuspensionBehaviorDeliverImmediately);
  int v5 = MKBDeviceUnlockedSinceBoot(v4);
  int v6 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 67109120;
    v7[1] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[PRDaemon] Registered for MobileKeybag notifications. Checking MKBDeviceUnlockedSinceBoot: %d [<0 = error, 0 = no, 1 = yes]",  (uint8_t *)v7,  8u);
  }

  if (v5 == 1) {
    [*(id *)(a1 + 32) deviceHasUnlockedSinceBoot];
  }
}

void sub_100039C94(uint64_t a1, void *a2, uint64_t a3)
{
  int v5 = MKBDeviceUnlockedSinceBoot(a1);
  int v6 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138412546;
    uint64_t v8 = a3;
    __int16 v9 = 1024;
    int v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[PRDaemon] MobileKeybag notification %@ fired. Checking MKBDeviceUnlockedSinceBoot: %d [<0 = error, 0 = no, 1 = yes]",  (uint8_t *)&v7,  0x12u);
  }

  if (v5 == 1) {
    [a2 deviceHasUnlockedSinceBoot];
  }
}

void sub_100039DD4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  __int128 v2 = *(dispatch_queue_s **)(v1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100039E2C;
  block[3] = &unk_1007A3000;
  void block[4] = v1;
  dispatch_async(v2, block);
}

void sub_100039E2C(uint64_t a1)
{
  __int128 v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "[PRDaemon] Device unlocked since boot: performing actions",  v8,  2u);
  }

  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveObserver( DarwinNotifyCenter,  *(const void **)(a1 + 32),  @"com.apple.mobile.keybagd.first_unlock",  0LL);
  uint64_t v4 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveObserver(v4, *(const void **)(a1 + 32), @"com.apple.mobile.keybagd.lock_status", 0LL);
  int v5 = sub_100288340();
  sub_100288688((uint64_t)v5);
  int v6 = (void *)objc_claimAutoreleasedReturnValue( +[NIServerFindableDeviceProxySessionManager sharedInstance]( &OBJC_CLASS___NIServerFindableDeviceProxySessionManager,  "sharedInstance"));
  [v6 notifyDeviceUnlockedSinceBoot];

  int v7 = (void *)objc_claimAutoreleasedReturnValue( +[NIServerSystemConfigurator sharedInstance]( &OBJC_CLASS___NIServerSystemConfigurator,  "sharedInstance"));
  [v7 activate];
}

void sub_100039F04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_100039F5C()
{
  double result = operator new(0x10uLL);
  void *result = &off_1007A3030;
  return result;
}

void sub_100039F80(uint64_t a1, void *a2)
{
  *a2 = &off_1007A3030;
}

void sub_100039F98(uint64_t a1, id *a2)
{
  id v2 = *a2;
  __float2 v3 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
  {
    int v5 = 138412290;
    id v6 = v2;
    _os_log_error_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "[PRDaemon] PRRangingManager default error handler. Got error: %@",  (uint8_t *)&v5,  0xCu);
  }

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "PRRangingManager default error handler.");
}

void sub_10003A04C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10003A074(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_10003A0B0()
{
  return &off_1007A3090;
}

void sub_10003A0BC()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_10003A138(_Unwind_Exception *a1)
{
}

void sub_10003A150()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10040CC58;
      v1[1] = unk_10040CC68;
      v1[2] = xmmword_10040CC78;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_10003A1F0(_Unwind_Exception *a1)
{
}

void sub_10003A208()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  uint64_t v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  __float2 v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F5408 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F53F8 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F53F8, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  int v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  int v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F5420 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F5410 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5410, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  __int16 v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F5438 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F5428 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5428, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  uint64_t v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  char v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F5450 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F5440 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5440, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  uint64_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F5468 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F5458 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5458, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  __int128 v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F5480 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F5470 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5470, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  uint64_t v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F5498 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F5488 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5488, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  uint64_t v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F54B0 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F54A0 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F54A0, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  uint64_t v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F54C8 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F54B8 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F54B8, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_10003A7FC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10003A870( uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, void *a10, uint64_t a11)
{
  id v18 = a2;
  id v19 = a3;
  id v20 = a4;
  id v21 = a5;
  id v52 = a10;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + sub_100012358(v1 - 32) = 0u;
  sub_10001E914(a1 + 48, a6);
  sub_10001E914(a1 + 80, a7);
  sub_10001E914(a1 + 112, a8);
  *(_DWORD *)(a1 + 144) = a9;
  id v22 = v52;
  *(void *)(a1 + 152) = v22;
  *(void *)(a1 + 160) = a11;
  id v23 = [v18 copy];
  __int128 v24 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v23;

  id v25 = [v19 copy];
  __int128 v26 = *(void **)a1;
  *(void *)a1 = v25;

  id v27 = [v20 copy];
  __int128 v28 = *(void **)(a1 + 32);
  *(void *)(a1 + sub_100012358(v1 - 32) = v27;

  id v29 = [v21 copy];
  __int128 v30 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v29;

  if ((unint64_t)[*(id *)a1 length] > 6)
  {
    __int128 v32 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038AF14(v32, v33, v34, v35, v36, v37, v38, v39);
    }
    uint64_t v40 = *(void *)(a1 + 104);
    if (v40)
    {
      LODWORD(v53) = 2;
      (*(void (**)(uint64_t, uint64_t *))(*(void *)v40 + 48LL))(v40, &v53);
    }

    uint64_t v31 = 0xDEADDEADBEEFLL;
  }

  else
  {
    uint64_t v53 = 0LL;
    objc_msgSend(*(id *)a1, "getBytes:length:", &v53, objc_msgSend(*(id *)a1, "length"));
    uint64_t v31 = v53;
  }

  *(void *)(a1 + 16) = v31;
  if ((unint64_t)[*(id *)(a1 + 8) length] > 6)
  {
    unint64_t v42 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038AEE0(v42, v43, v44, v45, v46, v47, v48, v49);
    }
    uint64_t v50 = *(void *)(a1 + 104);
    if (v50)
    {
      LODWORD(v53) = 2;
      (*(void (**)(uint64_t, uint64_t *))(*(void *)v50 + 48LL))(v50, &v53);
    }

    uint64_t v41 = 0xDEADDEADBEEFLL;
  }

  else
  {
    uint64_t v53 = 0LL;
    objc_msgSend(*(id *)(a1 + 8), "getBytes:length:", &v53, objc_msgSend(*(id *)(a1 + 8), "length"));
    uint64_t v41 = v53;
  }

  *(void *)(a1 + 24) = v41;

  return a1;
}

void sub_10003AAFC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  id v19 = *(void **)(v12 + 136);
  if (v19 == v17)
  {
    uint64_t v20 = 4LL;
    id v19 = v17;
  }

  else
  {
    if (!v19) {
      goto LABEL_6;
    }
    uint64_t v20 = 5LL;
  }

  (*(void (**)(void))(*v19 + 8 * v20))();
LABEL_6:
  id v21 = *(void **)(v12 + 104);
  if (v21 == v16)
  {
    uint64_t v22 = 4LL;
    id v21 = v16;
  }

  else
  {
    if (!v21) {
      goto LABEL_11;
    }
    uint64_t v22 = 5LL;
  }

  (*(void (**)(void))(*v21 + 8 * v22))();
LABEL_11:
  id v23 = *(void **)(v12 + 72);
  if (v23 == v15)
  {
    uint64_t v24 = 4LL;
    id v23 = v15;
  }

  else
  {
    if (!v23) {
      goto LABEL_16;
    }
    uint64_t v24 = 5LL;
  }

  (*(void (**)(void))(*v23 + 8 * v24))();
LABEL_16:

  _Unwind_Resume(a1);
}

uint64_t sub_10003ABF4( uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, void *a10, uint64_t a11)
{
  return sub_10003A870(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

BOOL sub_10003AC08(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a1;
  id v5 = *(id *)a2;
  if ([v4 isEqualToData:v5])
  {
    id v6 = *(id *)(a1 + 32);
    id v7 = *(id *)(a2 + 32);
    if ([v6 isEqualToData:v7])
    {
      id v8 = *(id *)(a1 + 40);
      id v9 = *(id *)(a2 + 40);
      BOOL v11 = [v8 isEqualToNumber:v9]
         && *(_DWORD *)(a1 + 144) == *(_DWORD *)(a2 + 144)
         && *(void *)(a1 + 152) == *(void *)(a2 + 152)
         && *(void *)(a1 + 160) == *(void *)(a2 + 160);
    }

    else
    {
      BOOL v11 = 0LL;
    }
  }

  else
  {
    BOOL v11 = 0LL;
  }

  return v11;
}

void sub_10003AD10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10003AD44(id *a1)
{
  return *a1;
}

id sub_10003AD4C(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_10003AD54(uint64_t a1)
{
  return *(id *)(a1 + 40);
}

uint64_t sub_10003AD5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 144);
}

id sub_10003AD64(uint64_t a1)
{
  return *(id *)(a1 + 152);
}

uint64_t sub_10003AD6C(uint64_t a1)
{
  return *(void *)(a1 + 160);
}

id sub_10003AD74(uint64_t a1)
{
  return *(id *)(a1 + 8);
}

uint64_t sub_10003AD7C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_10003AD84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001E914(a2, a1 + 48);
}

uint64_t sub_10003AD90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001E914(a2, a1 + 80);
}

uint64_t sub_10003AD9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001E914(a2, a1 + 112);
}

void sub_10003B798()
{
  os_log_t v0 = os_log_create("com.apple.nearbyd", "general");
  uint64_t v1 = (void *)qword_1008000A0;
  qword_1008000A0 = (uint64_t)v0;
}

void *sub_10003B7C8@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A3248[a1]);
}

void *sub_10003B7DC@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A32A0[a1]);
}

void *sub_10003B7F0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A32E8[a1]);
}

void *sub_10003B804@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A3308[a1]);
}

void sub_10003B84C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003BB70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003BCC8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  __int128 v10 = v9;

  a9.super_class = (Class)&OBJC_CLASS___NIServerSessionContainer;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_10003BDC4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10003BE5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003BF3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003BFC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003C108(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003C558(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003D558( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
  _Unwind_Resume(a1);
}

void sub_10003D768(uint64_t a1, void *a2)
{
  __int128 v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handleSpecializedSessionInvalidation:v3];
}

void sub_10003D7B0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10003D7C8(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleSpecializedSessionBackgroundSupportUpdate:a2];
}

void sub_10003D804( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10003DA58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003DBC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003DF14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003E08C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003E2DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003E554(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003E6D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003E834(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003EA94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003ED18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003EF40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003F138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003F3A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003F5AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003F7AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003F908(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003FA94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003FC48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003FE00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003FFAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100040148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000402C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100040354( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  BOOL v11 = v10;

  _Unwind_Resume(a1);
}

void sub_1000403EC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  BOOL v11 = v10;

  _Unwind_Resume(a1);
}

void sub_1000404CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100040548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100040594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100040618( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100040958( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, id a22)
{
  __int128 v26 = v24;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100040A04(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100040A14(uint64_t a1)
{
}

void sub_100040A1C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 tokenVariant] == (id)1)
  {
    if (*(_BYTE *)(a1 + 56))
    {
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObject:v3];
    }

    else
    {
      uint64_t v4 = *(void *)(a1 + 40);
      NSErrorUserInfoKey v8 = NSLocalizedFailureReasonErrorKey;
      id v9 = @"Not allowed to configure findable local device.";
      id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v9,  &v8,  1LL));
      id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"com.apple.NearbyInteraction",  -10020LL,  v5));
      (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v6);

      id v7 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_FAULT))
      {
        objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) signingIdentity]);
        [*(id *)(a1 + 32) pid];
        sub_10038B5C4();
      }
    }
  }
}

void sub_100040B84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100040E24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100040EC0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 tokenVariant] == (id)1)
  {
    if (*(_BYTE *)(a1 + 56))
    {
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObject:v3];
    }

    else
    {
      uint64_t v4 = *(void *)(a1 + 40);
      NSErrorUserInfoKey v8 = NSLocalizedFailureReasonErrorKey;
      id v9 = @"Not allowed to configure findable local device.";
      id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v9,  &v8,  1LL));
      id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"com.apple.NearbyInteraction",  -10020LL,  v5));
      (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v6);

      id v7 = (os_log_s *)(id)qword_1008000A0;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_FAULT))
      {
        objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) signingIdentity]);
        [*(id *)(a1 + 32) pid];
        sub_10038B5C4();
      }
    }
  }
}

void sub_100041028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000412A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000414CC(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1000416E0(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_100041974(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000419CC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v20 = WeakRetained;
    id v3 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    id v4 = objc_loadWeakRetained(v20 + 38);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 allSessionsPrintableState]);
    -[NSMutableDictionary addEntriesFromDictionary:](v3, "addEntriesFromDictionary:", v5);

    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NIServerSystemConfigurator sharedInstance]( &OBJC_CLASS___NIServerSystemConfigurator,  "sharedInstance"));
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 printableState]);
    -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v7, @"System Configurator");

    NSErrorUserInfoKey v8 = (void *)objc_claimAutoreleasedReturnValue( +[NIServerHomeDeviceService sharedInstance]( &OBJC_CLASS___NIServerHomeDeviceService,  "sharedInstance"));
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 printableState]);
    -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v9, @"Home Device Service");

    __int128 v10 = (void *)objc_claimAutoreleasedReturnValue( +[NIServerAccessoryGATTServiceManager sharedInstance]( &OBJC_CLASS___NIServerAccessoryGATTServiceManager,  "sharedInstance"));
    BOOL v11 = (void *)objc_claimAutoreleasedReturnValue([v10 printableState]);
    -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v11, @"Accessory GATT Service");

    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[NIServerNearbyAccessoryRangingService sharedInstance]( &OBJC_CLASS___NIServerNearbyAccessoryRangingService,  "sharedInstance"));
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 printableState]);
    -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v13, @"Accessory Ranging Service");

    __int128 v14 = (void *)objc_claimAutoreleasedReturnValue( +[NIServerFindingSession sharedServicePrintableState]( &OBJC_CLASS___NIServerFindingSession,  "sharedServicePrintableState"));
    -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v14, @"Finding Service");

    char v15 = (void *)objc_claimAutoreleasedReturnValue( +[NIServerFindableDeviceProxySessionManager sharedInstance]( &OBJC_CLASS___NIServerFindableDeviceProxySessionManager,  "sharedInstance"));
    __int128 v16 = (void *)objc_claimAutoreleasedReturnValue([v15 printableState]);
    -[NSMutableDictionary setObject:forKey:](v3, "setObject:forKey:", v16, @"Findable Device");

    uint64_t v17 = sub_100288340();
    id v18 = sub_100287584((uint64_t)v17);
    id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
    -[NSMutableDictionary addEntriesFromDictionary:](v3, "addEntriesFromDictionary:", v19);

    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
    id WeakRetained = v20;
  }
}

void sub_100041BDC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100041DF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100041FFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100042210(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004234C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000425B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100042818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000429A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000429C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained remote]);
    [v3 uwbSessionDidInvalidateWithError:*(void *)(a1 + 32)];

    id WeakRetained = v4;
  }
}

void sub_100042A10( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100042B7C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100042BA4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained) {
    [WeakRetained _updateClientAppVisibilityInterruption];
  }
}

void sub_100042BE0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100042DD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100043034(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000430C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000431A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000432C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000433E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100043860( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  _Unwind_Resume(a1);
}

void sub_100043A78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100043BF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100043CA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100043EE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000442AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000443D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000444A4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000444C8(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained[23] consumeBluetoothSample:v5];
  }
}

void sub_100044518( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100044884( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p, uint64_t a21, int a22, __int16 a23, char a24, char a25, char a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, void *a31)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void sub_100044918(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"    %@", a2));
  objc_msgSend(v2, "addObject:");
}

void sub_100044974( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_100044BA8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100044BD4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (!WeakRetained) {
    goto LABEL_22;
  }
  sub_1000065CC(v11, off_1007A3368[*(int *)(a1 + 40)]);
  sub_1000065CC(__p, off_1007A3390[*(int *)(a1 + 44)]);
  id v3 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = v11;
    if (v12 < 0) {
      id v4 = (void **)v11[0];
    }
    id v5 = __p;
    if (v10 < 0) {
      id v5 = (void **)__p[0];
    }
    *(_DWORD *)pthread_attr_t buf = 136315394;
    __int128 v14 = v4;
    __int16 v15 = 2080;
    __int128 v16 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#ses-container,UWB system changed state: '%s' with cause: '%s'. Sending to specialized session",  buf,  0x16u);
  }

  id v6 = WeakRetained[23];
  if (v6)
  {
    if ([v6 requiresNarrowbandToRun] == (id)2)
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue( [WeakRetained _fatalErrorForUwbServiceState:*(unsigned int *)(a1 + 40) cause:*(unsigned int *)(a1 + 44)]);
      if (v7) {
        goto LABEL_14;
      }
      [WeakRetained _updateInterruptionForUWBServiceState:*(unsigned int *)(a1 + 40) cause:*(unsigned int *)(a1 + 44) requiresNarrowBand:1];
    }

    else if ([WeakRetained[23] requiresUWBToRun] == (id)2)
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue( [WeakRetained _fatalErrorForUwbServiceState:*(unsigned int *)(a1 + 40) cause:*(unsigned int *)(a1 + 44)]);
      if (v7)
      {
LABEL_14:
        NSErrorUserInfoKey v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained remote]);
        [v8 uwbSessionDidFailWithError:v7];

        goto LABEL_18;
      }

      [WeakRetained _updateInterruptionForUWBServiceState:*(unsigned int *)(a1 + 40) cause:*(unsigned int *)(a1 + 44) requiresNarrowBand:0];
    }

    [WeakRetained[23] rangingServiceDidUpdateState:*(unsigned int *)(a1 + 40) cause:*(unsigned int *)(a1 + 44)];
  }

void sub_100044DD8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  id v23 = v21;

  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }

  _Unwind_Resume(a1);
}

void sub_1000450F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000451C4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100045254( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000452CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000453C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100045404(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100045458(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100045724(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100045754(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  uint64_t v3 = a1 + 24;
  *(void *)a1 = v4;
  *(void *)(a1 + *(void *)(v4 - 24)) = v5;
  *(void *)(a1 + 8) = 0LL;
  id v6 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24LL));
  std::ios_base::init(v6, (void *)(a1 + 24));
  v6[1].__vftable = 0LL;
  v6[1].__fmtflags_ = -1;
  *(void *)(a1 + 16) = v7;
  *(void *)(v2 + *(void *)(v7 - 24)) = v8;
  *(void *)a1 = v9;
  std::streambuf::basic_streambuf(v3);
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = 24;
  return a1;
}

void sub_100045858(_Unwind_Exception *a1)
{
}

uint64_t sub_100045880(uint64_t a1)
{
  uint64_t v4 = a1 + 24;
  *(void *)(a1 + 16) = v3;
  std::streambuf::~streambuf(v4);
  std::ios::~ios(a1 + 128);
  return a1;
}

void sub_100045A28( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100045C7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100045E30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100045F74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004615C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100046380( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100046560( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100046658(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000466A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000466F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004673C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100046904(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_100046B94(void *a1, uint64_t a2, uint64_t a3)
{
  if (v13[0])
  {
    uint64_t v6 = (uint64_t)a1 + *(void *)(*a1 - 24LL);
    uint64_t v7 = *(void *)(v6 + 40);
    int v8 = *(_DWORD *)(v6 + 8);
    int v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24LL)));
      char v10 = std::locale::use_facet(&v14, &std::ctype<char>::id);
      int v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32LL);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }

    if ((v8 & 0xB0) == 0x20) {
      uint64_t v11 = a2 + a3;
    }
    else {
      uint64_t v11 = a2;
    }
    if (!sub_100046CF8(v7, a2, v11, a2 + a3, v6, (char)v9)) {
      std::ios_base::clear( (std::ios_base *)((char *)a1 + *(void *)(*a1 - 24LL)),  *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24LL) + 32) | 5);
    }
  }

  std::ostream::sentry::~sentry(v13);
  return a1;
}

void sub_100046C9C( void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
}

void sub_100046CE4(_Unwind_Exception *a1)
{
}

uint64_t sub_100046CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6 = a1;
  if (a1)
  {
    uint64_t v11 = *(void *)(a5 + 24);
    if (v11 <= a4 - a2) {
      int64_t v12 = 0LL;
    }
    else {
      int64_t v12 = v11 - (a4 - a2);
    }
    if (v12 >= 1)
    {
      sub_100046E34(__p, v12, __c);
      uint64_t v13 = v18 >= 0 ? __p : (void **)__p[0];
      uint64_t v14 = (*(uint64_t (**)(uint64_t, void **, int64_t))(*(void *)v6 + 96LL))(v6, v13, v12);
      if (v18 < 0) {
        operator delete(__p[0]);
      }
      if (v14 != v12) {
        return 0LL;
      }
    }

    uint64_t v15 = a4 - a3;
    else {
      return 0LL;
    }
  }

  return v6;
}

void sub_100046E18( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100046E34(void *__b, size_t __len, int __c)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8LL) {
    sub_100006434();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8LL) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000LL;
    *__b = v6;
  }

  else
  {
    *((_BYTE *)__b + 23) = __len;
    uint64_t v6 = __b;
    if (!__len) {
      goto LABEL_9;
    }
  }

  memset(v6, __c, __len);
LABEL_9:
  *((_BYTE *)v6 + __len) = 0;
  return __b;
}

void sub_100046EDC(void *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x48uLL);
  sub_100046F3C(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_100012538((uint64_t)a2, v4 + 4, (uint64_t)(v4 + 3));
}

void sub_100046F28(_Unwind_Exception *a1)
{
}

void *sub_100046F3C(void *a1, void *a2)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_1007A2120;
  sub_100263A1C(a1 + 3, *a2);
  return a1;
}

void sub_100046F74(_Unwind_Exception *a1)
{
}

void *sub_100046F88(void *result)
{
  if (result[3])
  {
    uint64_t v1 = result;
    double result = (void *)result[2];
    if (result)
    {
      do
      {
        uint64_t v2 = (void *)*result;
        operator delete(result);
        double result = v2;
      }

      while (v2);
    }

    v1[2] = 0LL;
    uint64_t v3 = v1[1];
    if (v3)
    {
      for (uint64_t i = 0LL; i != v3; ++i)
        *(void *)(*v1 + 8 * i) = 0LL;
    }

    v1[3] = 0LL;
  }

  return result;
}

void *sub_100046FEC(void *a1, unint64_t *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0LL;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (v3 >= *(void *)&v2) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }

  else
  {
    unint64_t v5 = (*(void *)&v2 - 1LL) & v3;
  }

  uint64_t v6 = *(void **)(*a1 + 8 * v5);
  if (!v6) {
    return 0LL;
  }
  double result = (void *)*v6;
  if (*v6)
  {
    do
    {
      unint64_t v8 = result[1];
      if (v8 == v3)
      {
        if (result[2] == v3) {
          return result;
        }
      }

      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(void *)&v2) {
            v8 %= *(void *)&v2;
          }
        }

        else
        {
          v8 &= *(void *)&v2 - 1LL;
        }

        if (v8 != v5) {
          return 0LL;
        }
      }

      double result = (void *)*result;
    }

    while (result);
  }

  return result;
}

void *sub_1000470A0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v6 >= v7) {
        unint64_t v3 = v6 % v7;
      }
    }

    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }

    int v9 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      for (uint64_t i = *v9; i; uint64_t i = (void *)*i)
      {
        unint64_t v11 = i[1];
        if (v11 == v6)
        {
          if (i[2] == v6) {
            return i;
          }
        }

        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
          }

          else
          {
            v11 &= v7 - 1;
          }

          if (v11 != v3) {
            break;
          }
        }
      }
    }
  }

  uint64_t i = operator new(0x28uLL);
  *uint64_t i = 0LL;
  i[1] = v6;
  *((_OWORD *)i + 1) = *(_OWORD *)a3;
  i[4] = *(void *)(a3 + 16);
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1LL;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    sub_100021B74(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }

    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }

  uint64_t v18 = *(void *)a1;
  id v19 = *(void **)(*(void *)a1 + 8 * v3);
  if (v19)
  {
    *uint64_t i = *v19;
LABEL_38:
    void *v19 = i;
    goto LABEL_39;
  }

  *uint64_t i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v18 + 8 * v3) = a1 + 16;
  if (*i)
  {
    unint64_t v20 = *(void *)(*i + 8LL);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7) {
        v20 %= v7;
      }
    }

    else
    {
      v20 &= v7 - 1;
    }

    id v19 = (void *)(*(void *)a1 + 8 * v20);
    goto LABEL_38;
  }

void sub_1000472AC(_Unwind_Exception *a1)
{
}

void *sub_1000472C0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_10001D350();
  }
  return operator new(8 * a2);
}

void sub_1000472F4( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

uint64_t sub_10004732C(uint64_t result, uint64_t a2, int a3, float a4)
{
  *(float *)a2 = a4;
  *(void *)(a2 + 4) = result;
  *(_WORD *)(a2 + 12) = 1024;
  *(_DWORD *)(a2 + 14) = a3;
  return result;
}

void sub_100047344(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, os_log_s *a4@<X8>)
{
}

  ;
}

void sub_100047364(uint64_t a1@<X8>)
{
  *(void *)(v1 - std::iostream::~basic_iostream(v2, v3 + 8) = a1;
}

  ;
}

void sub_100047384()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_100047400(_Unwind_Exception *a1)
{
}

void sub_100047418()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      uint64_t v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10040CD50;
      v1[1] = unk_10040CD60;
      v1[2] = xmmword_10040CD70;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_1000474B8(_Unwind_Exception *a1)
{
}

void sub_1000474D0()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  uint64_t v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F54E8 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F54D8 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F54D8, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  unint64_t v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F5500 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F54F0 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F54F0, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  int v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F5518 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F5508 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5508, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  float v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F5530 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F5520 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5520, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  size_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  id v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F5548 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F5538 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5538, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  id v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  id v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F5560 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F5550 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5550, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  id v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  id v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F5578 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F5568 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5568, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  id v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F5590 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F5580 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5580, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  uint64_t v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F55A8 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F5598 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5598, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_100047AC4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100047B38@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A3460[a1]);
}

void *sub_100047B4C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A34B8[a1]);
}

void *sub_100047B60@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A3500[a1]);
}

void *sub_100047B74@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A3520[a1]);
}

void sub_100047B88(void *a1)
{
  id v1 = a1;
  char v2 = os_variant_allows_internal_security_policies("com.apple.nearbyd");
  if (v1) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  if ((v3 & 1) == 0) {
    goto LABEL_27;
  }
  __int128 v4 = sub_100288340();
  uint64_t v6 = *((void *)v4 + 20);
  unint64_t v5 = (std::__shared_weak_count *)*((void *)v4 + 21);
  uint64_t v20 = v6;
  id v21 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }

  if (v6)
  {
    __int128 v10 = (void *)objc_claimAutoreleasedReturnValue([v1 objectForKeyedSubscript:@"Label"]);
    if (!v10) {
      goto LABEL_21;
    }
    uint64_t v11 = objc_opt_class(&OBJC_CLASS___NSString, v9);
    if ((objc_opt_isKindOfClass(v10, v11) & 1) == 0) {
      goto LABEL_21;
    }
    float v13 = (void *)objc_claimAutoreleasedReturnValue([v1 objectForKeyedSubscript:@"Source"]);
    if (!v13 || (uint64_t v14 = objc_opt_class(&OBJC_CLASS___NSString, v12), (objc_opt_isKindOfClass(v13, v14) & 1) == 0))
    {
LABEL_20:

LABEL_21:
      goto LABEL_22;
    }

    sub_1000065CC(&__p, (char *)[v10 UTF8String]);
    if ([v13 isEqualToString:@"DirectUserInput"])
    {
      int v15 = 1;
    }

    else
    {
      int v15 = 2;
    }

    double v16 = sub_100023CC4();
    sub_10023BD50(v6, &__p, v15, v16);
LABEL_18:
    goto LABEL_20;
  }

LABEL_27:
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(_DWORD *)(v5 + 56),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(_DWORD *)(v5 + 56),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

  uint64_t v11 = *(void *)(v5 + 64);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008000E8 + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  v11,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_36;
    }
    goto LABEL_33;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 24),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  (int)a2,  *(double *)(v4 + 88),  a3);
  unint64_t v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

  *(_DWORD *)(a1 + 96) |= 8u;
  uint64_t v20 = *(void **)(a1 + 32);
  if (!v20)
  {
    uint64_t v20 = operator new(0x28uLL);
    sub_10007F6B8((uint64_t)v20);
    *(void *)(a1 + sub_100012358(v1 - 32) = v20;
  }

  id v21 = *(void *)(a2 + 32);
  if (!v21) {
    id v21 = *(void *)(qword_1008002E0 + 32);
  }
  sub_10007F70C((uint64_t)v20, v21);
  float v13 = *(_DWORD *)(a2 + 96);
  if ((v13 & 0x10) == 0)
  {
LABEL_17:
    if ((v13 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_33:
    id v23 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 96) |= 0x20u;
    *(_DWORD *)(a1 + 44) = v23;
    float v13 = *(_DWORD *)(a2 + 96);
    if ((v13 & 0x40) == 0)
    {
LABEL_19:
      if ((v13 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }

    goto LABEL_34;
  }

    *(_DWORD *)(a1 + 32) |= 2u;
    uint64_t v14 = *(void **)(a1 + 16);
    if (!v14)
    {
      uint64_t v14 = operator new(0x28uLL);
      sub_10007F6B8((uint64_t)v14);
      *(void *)(a1 + 16) = v14;
    }

    int v15 = (char *)*((void *)this + 1);
    if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
    {
    }

    else
    {
      id v25 = *v15;
      *((void *)this + 1) = v15 + 1;
    }

    double v16 = *((_DWORD *)this + 14);
    size_t v17 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v16 + 1;
    if (v16 >= v17) {
      return 0LL;
    }
    unint64_t v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v25);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
    id v21 = *((_DWORD *)this + 14);
    __int128 v22 = __OFSUB__(v21, 1);
    id v23 = v21 - 1;
    if (v23 < 0 == v22) {
      *((_DWORD *)this + 14) = v23;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
      double result = 1LL;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(_DWORD *)(v5 + 48),  a2,  a4);
  if ((*(_DWORD *)(v5 + 84) & 0x100) != 0) {
LABEL_10:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(_DWORD *)(v5 + 52),  a2,  a4);
LABEL_11:
  if (*(int *)(v5 + 64) >= 1)
  {
    unint64_t v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(void *)(*(void *)(v5 + 56) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 64));
  }

  __int128 v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unint64_t v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

  if ((v3 & 0x20) != 0) {
    unint64_t v5 = v4 + 9;
  }
  else {
    unint64_t v5 = v4;
  }
  if ((v3 & 0x200) != 0)
  {
LABEL_31:
    double v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
    if (v16 >= 0x80) {
    else
    }
      size_t v17 = 2;
    v5 += v17;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(double *)(v5 + 48),  a3);
  if ((*(_DWORD *)(v5 + 96) & 0x80) != 0) {
LABEL_9:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  (int)a2,  *(double *)(v5 + 56),  a3);
LABEL_10:
  if (*(int *)(v5 + 72) >= 1)
  {
    unint64_t v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(void *)(*(void *)(v5 + 64) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 72));
  }

  if ((*(_BYTE *)(v5 + 97) & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(_DWORD *)(v5 + 88),  a2,  a4);
  }
  __int128 v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unint64_t v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

  uint64_t v14 = *((_DWORD *)this + 26);
  if ((v14 & 0x40) != 0)
  {
    int v15 = *((_BYTE *)this + 40);
    *(_BYTE *)char v3 = 48;
    *((_BYTE *)v3 + 1) = v15;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    uint64_t v14 = *((_DWORD *)this + 26);
  }

  if ((v14 & 0x80) != 0)
  {
    double v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    *(_BYTE *)char v3 = 56;
    if (v16 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v16,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v16;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 105) & 1) != 0)
  {
    size_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(_BYTE *)char v3 = 64;
    if (v17 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v17;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 105) & 2) != 0)
  {
    unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(_BYTE *)char v3 = 72;
    if (v18 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v18,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v18;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 105) & 4) != 0)
  {
    id v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(_BYTE *)char v3 = 80;
    if (v19 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v19,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v19;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 105) & 8) != 0)
  {
    uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    *(_BYTE *)char v3 = 88;
    if (v20 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v20,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v20;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 105) & 0x10) != 0)
  {
    id v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(_BYTE *)char v3 = 96;
    if (v21 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v21,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v21;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 105) & 0x20) != 0)
  {
    __int128 v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    *(_BYTE *)char v3 = 104;
    if (v22 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v22,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v22;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 105) & 0x40) != 0)
  {
    id v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    *(_BYTE *)char v3 = 112;
    if (v23 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v23,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v23;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 105) & 0x80) != 0)
  {
    __int128 v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 19);
    *(_BYTE *)char v3 = 120;
    id v25 = (unint64_t)v3 + 1;
    if ((v24 & 0x80000000) != 0)
    {
      __int128 v26 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v24,  v25,  a3);
    }

    else
    {
      if (v24 <= 0x7F)
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v24;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_68;
      }

      __int128 v26 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v24,  v25,  a3);
    }

    char v3 = v26;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 32),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }

    unint64_t v18 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 124) |= 4u;
    *(void *)(a1 + sub_100012358(v1 - 32) = v18;
    float v13 = *(_DWORD *)(a2 + 124);
    if ((v13 & 8) == 0)
    {
LABEL_16:
      if ((v13 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }

  id v19 = (void *)*((void *)this + 1);
  unint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  size_t v17 = v19;
  if (!v19 || *v17 == v17[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v18,  v3,  a3);
  }
}

  uint64_t v14 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 60) |= 0x10u;
  *(void *)(a1 + 40) = v14;
  unint64_t v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  double v16 = *(_BYTE *)(a2 + 49);
  *(_DWORD *)(a1 + 60) |= 0x40u;
  *(_BYTE *)(a1 + 49) = v16;
  unint64_t v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v6 = *(_BYTE *)(a2 + 50);
    *(_DWORD *)(a1 + 60) |= 0x80u;
    *(_BYTE *)(a1 + 50) = v6;
    unint64_t v5 = *(_DWORD *)(a2 + 60);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(unsigned __int8 *)(v5 + 51),  (BOOL)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }

  __int128 v10 = *(void *)(v5 + 40);
  if (!v10) {
    __int128 v10 = *(void *)(qword_100800498 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v10,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_33;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v4 + 40),  a3);
  unint64_t v5 = *(_DWORD *)(v4 + 132);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }

  uint64_t v20 = *(void *)(a1 + 40);
  *(_BYTE *)a2 = 33;
  *(void *)(a2 + 1) = v20;
  a2 += 9LL;
  char v3 = *(_DWORD *)(a1 + 132);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  (int)a2,  *(double *)(v5 + 64),  a3);
  __int128 v10 = *(_DWORD *)(v5 + 96);
  if ((v10 & 0x80) == 0)
  {
LABEL_19:
    if ((v10 & 0x100) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }

  unint64_t v18 = *((void *)this + 7);
  *a2 = 65;
  *(void *)(a2 + 1) = v18;
  a2 += 9;
  unint64_t v8 = *((_DWORD *)this + 22);
  if ((v8 & 0x100) != 0) {
    goto LABEL_28;
  }
LABEL_17:
  if ((v8 & 0x200) != 0)
  {
LABEL_18:
    uint64_t v9 = *((void *)this + 9);
    *a2 = 81;
    *(void *)(a2 + 1) = v9;
    a2 += 9;
  }

  int v15 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 72) |= 0x10u;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v15;
  unint64_t v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  size_t v17 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) |= 0x40u;
  *(_DWORD *)(a1 + 64) = v17;
  unint64_t v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v6 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(void *)(a1 + 40) = v6;
    unint64_t v5 = *(_DWORD *)(a2 + 72);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(float *)(v5 + 40),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }

  unint64_t v18 = *((_BYTE *)this + 37);
  *(_BYTE *)char v3 = 32;
  *((_BYTE *)v3 + 1) = v18;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  unint64_t v5 = *((_DWORD *)this + 21);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }

  float v13 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 72) |= 0x10u;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v13;
  unint64_t v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  int v15 = *(_BYTE *)(a2 + 37);
  *(_DWORD *)(a1 + 72) |= 0x40u;
  *(_BYTE *)(a1 + 37) = v15;
  unint64_t v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v6 = *(_BYTE *)(a2 + 38);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(_BYTE *)(a1 + 3std::iostream::~basic_iostream(v2, v3 + 8) = v6;
    unint64_t v5 = *(_DWORD *)(a2 + 72);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(unsigned __int8 *)(v5 + 37),  (BOOL)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(double *)(v5 + 32),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_29;
  }

  id v19 = *((void *)this + 11);
  *(_BYTE *)__int128 v4 = 81;
  *(void *)((char *)v4 + 1) = v19;
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 35) & 0x400) == 0) {
    goto LABEL_34;
  }
LABEL_28:
  uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 24);
  *(_BYTE *)__int128 v4 = 88;
  id v21 = (unint64_t)v4 + 1;
  if ((v20 & 0x80000000) != 0)
  {
    __int128 v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v20,  v21,  a3);
  }

  else
  {
    if (v20 <= 0x7F)
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v20;
      __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_34;
    }

    __int128 v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v20,  v21,  a3);
  }

  __int128 v4 = v22;
LABEL_34:
  if ((*((_BYTE *)this + 141) & 8) == 0) {
    goto LABEL_41;
  }
  id v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 25);
  *(_BYTE *)__int128 v4 = 96;
  __int128 v24 = (unint64_t)v4 + 1;
  if ((v23 & 0x80000000) != 0)
  {
    id v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v23,  v24,  a3);
  }

  else
  {
    if (v23 <= 0x7F)
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v23;
      __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_41;
    }

    id v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v23,  v24,  a3);
  }

  __int128 v4 = v25;
LABEL_41:
  __int128 v26 = *((_DWORD *)this + 35);
  if ((v26 & 0x1000) != 0)
  {
    id v27 = *((void *)this + 13);
    *(_BYTE *)__int128 v4 = 105;
    *(void *)((char *)v4 + 1) = v27;
    __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    __int128 v26 = *((_DWORD *)this + 35);
    if ((v26 & 0x2000) == 0)
    {
LABEL_43:
      if ((v26 & 0x4000) == 0) {
        goto LABEL_53;
      }
      goto LABEL_47;
    }
  }

  else if ((v26 & 0x2000) == 0)
  {
    goto LABEL_43;
  }

  __int128 v28 = *((void *)this + 14);
  *(_BYTE *)__int128 v4 = 113;
  *(void *)((char *)v4 + 1) = v28;
  __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 35) & 0x4000) == 0) {
    goto LABEL_53;
  }
LABEL_47:
  id v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 30);
  *(_BYTE *)__int128 v4 = 120;
  __int128 v30 = (unint64_t)v4 + 1;
  if ((v29 & 0x80000000) != 0)
  {
    uint64_t v31 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v29,  v30,  a3);
  }

  else
  {
    if (v29 <= 0x7F)
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v29;
      __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_53;
    }

    uint64_t v31 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v29,  v30,  a3);
  }

  __int128 v4 = v31;
LABEL_53:
  if ((*((_BYTE *)this + 141) & 0x80) == 0) {
    goto LABEL_60;
  }
  __int128 v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 31);
  *(_WORD *)__int128 v4 = 384;
  uint64_t v33 = (unint64_t)v4 + 2;
  if ((v32 & 0x80000000) != 0)
  {
    __int128 v34 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v32,  v33,  a3);
  }

  else
  {
    if (v32 <= 0x7F)
    {
      *((_BYTE *)v4 + 2) = (_BYTE)v32;
      __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
      goto LABEL_60;
    }

    __int128 v34 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v32,  v33,  a3);
  }

  __int128 v4 = v34;
LABEL_60:
  if ((*((_BYTE *)this + 142) & 1) != 0)
  {
    uint64_t v35 = *((void *)this + 16);
    *(_WORD *)__int128 v4 = 394;
    else {
      __int128 v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v35 + 23);
    }
    if (v36 > 0x7F)
    {
      std::string v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v36,  (int)v4 + 2,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 2) = (_BYTE)v36;
      std::string v37 = (_DWORD)v4 + 3;
    }

    std::string v38 = *(char *)(v35 + 23);
    if (v38 >= 0) {
      uint64_t v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35;
    }
    else {
      uint64_t v39 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v35;
    }
    if (v38 >= 0) {
      uint64_t v40 = (const void *)*(unsigned __int8 *)(v35 + 23);
    }
    else {
      uint64_t v40 = (const void *)*(unsigned int *)(v35 + 8);
    }
    __int128 v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v39,  v40,  v37,  a4);
  }

  uint64_t v43 = (void *)*((void *)this + 1);
  unint64_t v42 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v41 = v43;
  if (!v43 || *v41 == v41[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v42,  v4,  a3);
  }
}

  uint64_t v14 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 112) |= 0x10u;
  *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v14;
  unint64_t v5 = *(_DWORD *)(a2 + 112);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  double v16 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 112) |= 0x40u;
  *(_DWORD *)(a1 + 64) = v16;
  unint64_t v5 = *(_DWORD *)(a2 + 112);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v6 = *(_DWORD *)(a2 + 68);
    *(_DWORD *)(a1 + 112) |= 0x80u;
    *(_DWORD *)(a1 + 6std::iostream::~basic_iostream(v2, v3 + 8) = v6;
    unint64_t v5 = *(_DWORD *)(a2 + 112);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  (int)a2,  *(double *)(v5 + 72),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 72),  (int)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }

  size_t v17 = (unsigned int *)*((void *)this + 4);
  if (!v17) {
    size_t v17 = *(unsigned int **)(qword_100800658 + 32);
  }
  *(_BYTE *)__int128 v4 = 26;
  unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17[27];
  if (v18 > 0x7F)
  {
    id v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v18,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v18;
    id v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  __int128 v4 = sub_1000FA0F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v17, v19, a3, a4);
  uint64_t v6 = *((_DWORD *)this + 26);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_34;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(float *)(v5 + 28),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_29;
  }

  uint64_t v11 = *((_DWORD *)this + 11);
  *(_BYTE *)a2 = 61;
  *(_DWORD *)(a2 + 1) = v11;
  a2 += 5LL;
  __int128 v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }

      LODWORD(v5) = v5
                  + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 88),  (unint64_t)a2)
                  + 1;
      char v3 = *(_DWORD *)(a1 + 124);
      goto LABEL_28;
    }

  uint64_t v11 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 140) |= 8u;
  *(void *)(a1 + 40) = v11;
  uint64_t v6 = *(_DWORD *)(a2 + 140);
  if ((v6 & 0x10) == 0)
  {
LABEL_11:
    if ((v6 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_29:
    float v13 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 140) |= 0x20u;
    *(void *)(a1 + 56) = v13;
    uint64_t v6 = *(_DWORD *)(a2 + 140);
    if ((v6 & 0x40) == 0)
    {
LABEL_13:
      if ((v6 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }

    goto LABEL_30;
  }

  float v13 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 148) |= 0x10u;
  *(void *)(a1 + 56) = v13;
  uint64_t v6 = *(_DWORD *)(a2 + 148);
  if ((v6 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_11:
  if ((v6 & 0x40) == 0) {
    goto LABEL_12;
  }
LABEL_29:
  int v15 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 148) |= 0x40u;
  *(void *)(a1 + 72) = v15;
  uint64_t v6 = *(_DWORD *)(a2 + 148);
  if ((v6 & 0x80) != 0)
  {
LABEL_13:
    unint64_t v7 = *(void *)(a2 + 80);
    *(_DWORD *)(a1 + 148) |= 0x80u;
    *(void *)(a1 + 80) = v7;
    uint64_t v6 = *(_DWORD *)(a2 + 148);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 64),  a3);
  unint64_t v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x40) == 0)
  {
LABEL_12:
    if ((v8 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }

  if (v35 < 0) {
    operator delete(__p[0]);
  }
}

  if (v9[55] < 0)
  {
    sub_1000063A8(a4, *((void **)v9 + 4), *((void *)v9 + 5));
  }

  else
  {
    id v23 = *v13;
    a4->__r_.__value_.__l.__cap_ = *((void *)v9 + 6);
    *(_OWORD *)&a4->__r_.__value_.__l.__data_ = v23;
  }

    unint64_t v18 = v27;
    if ((v27 & 0x80u) != 0) {
      unint64_t v18 = (unint64_t)__p[1];
    }
    if (v13 != v18) {
      goto LABEL_54;
    }
    if ((v27 & 0x80u) == 0) {
      id v19 = __p;
    }
    else {
      id v19 = (void **)__p[0];
    }
    if ((v11 & 0x80) != 0)
    {
      if (memcmp(__s1, v19, v12)) {
        goto LABEL_54;
      }
    }

    else if (v11)
    {
      uint64_t v20 = &__s1;
      while (*(unsigned __int8 *)v20 == *(unsigned __int8 *)v19)
      {
        uint64_t v20 = (void **)((char *)v20 + 1);
        id v19 = (void **)((char *)v19 + 1);
        if (!--v10) {
          goto LABEL_42;
        }
      }

  return v21;
}

        abort();
      }

      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
        sub_1003A3B58();
      }
      uint64_t v9 = (os_log_s *)qword_1008000A0;
      if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO)) {
        goto LABEL_27;
      }
      *(_DWORD *)pthread_attr_t buf = 136315650;
      int v15 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      double v16 = 1024;
      LODWORD(v17[0]) = 793;
      WORD2(v17[0]) = 2080;
      *(void *)((char *)v17 + 6) = "convertBtClkToUwbClk";
    }

    else
    {
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
        sub_1003A3B84();
      }
      uint64_t v9 = (os_log_s *)qword_1008000A0;
      if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO)) {
        goto LABEL_27;
      }
      *(_DWORD *)pthread_attr_t buf = 136315650;
      int v15 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/Services/NearbyInteraction/UWB/NIServerRoseSession.mm";
      double v16 = 1024;
      LODWORD(v17[0]) = 792;
      WORD2(v17[0]) = 2080;
      *(void *)((char *)v17 + 6) = "convertBtClkToUwbClk";
    }

  __int128 v32 = sub_10028D608((uint64_t)&__dst, &v99, &v98, (uint64_t *)&v97, (void *)(a1 + 160));
  if (MKBDeviceUnlockedSinceBoot(v32))
  {
    if ((!sub_1002335A0(*v10) || !sub_10023C050(*v10))
      && os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
    {
      sub_1003A44F4();
    }

    uint64_t v33 = *(std::__shared_weak_count **)(a1 + 168);
    *(void *)&__int128 v96 = *(void *)(a1 + 160);
    *((void *)&v96 + 1) = v33;
    if (v33)
    {
      __int128 v34 = (unint64_t *)&v33->__shared_owners_;
      do
        uint64_t v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
    }

    __int128 v36 = sub_100288874((uint64_t *)&v96);
    std::string v37 = v36;
    if (!v33) {
      goto LABEL_39;
    }
    std::string v38 = (unint64_t *)&v33->__shared_owners_;
    do
      uint64_t v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
      if ((v37 & 1) == 0)
      {
LABEL_40:
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          sub_1003A44C8();
        }
      }
    }

    else
    {
LABEL_39:
      if ((v36 & 1) == 0) {
        goto LABEL_40;
      }
    }
  }

  uint64_t v40 = (std::__shared_weak_count *)*((void *)&v97 + 1);
  if (*((void *)&v97 + 1))
  {
    uint64_t v41 = (unint64_t *)(*((void *)&v97 + 1) + 8LL);
    do
      unint64_t v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }

  uint64_t v43 = v98;
  unint64_t v98 = 0LL;
  if (v43) {
    (*((void (**)(std::__shared_weak_count_vtbl *))v43->~__shared_weak_count + 1))(v43);
  }
  uint64_t v44 = v99;
  unint64_t v99 = 0LL;
  if (v44) {
    (*(void (**)(uint64_t))(*(void *)v44 + 8LL))(v44);
  }
  if (SHIBYTE(v105) < 0) {
    operator delete((void *)__dst);
  }
  float v13 = v4;
  sub_10015B4D0((uint64_t)v100, (char *)v100[1]);
  if (SHIBYTE(v102) < 0) {
    operator delete(*(void **)buf);
  }
  uint64_t v14 = v3;
LABEL_57:
  *(void *)(a1 + 176) = 0LL;
  *(void *)(a1 + 216) = 0LL;
  *(void *)(a1 + 20std::iostream::~basic_iostream(v2, v3 + 8) = a1 + 216;
  *(void *)(a1 + 224) = 0LL;
  *(void *)(a1 + 184) = 0LL;
  *(void *)(a1 + 192) = 0LL;
  *(_BYTE *)(a1 + 200) = 0;
  *(_OWORD *)(a1 + 2sub_100012358(v1 - 32) = 0u;
  *(_OWORD *)(a1 + 24std::iostream::~basic_iostream(v2, v3 + 8) = 0u;
  *(_DWORD *)(a1 + 264) = 1065353216;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_DWORD *)(a1 + 304) = 1065353216;
  *(_OWORD *)(a1 + 28std::iostream::~basic_iostream(v2, v3 + 8) = 0u;
  uint64_t v86 = a1 + 312;
  sub_1001484B8(a1 + 312, a1 + 3264);
  sub_1001479B0(a1 + 408, a1 + 856);
  sub_10012AF14(a1 + 504, a1 + 904);
  sub_100142A38(a1 + 592, a1 + 1000);
  sub_10014B1D0(a1 + 680, 0LL);
  sub_100147870(a1 + 768, a1 + 1064);
  sub_10026E1B4((void *)(a1 + 856), *v87, a1 + 408, 0.02);
  sub_100252B0C(a1 + 904, *v87, a1 + 504);
  sub_1002857A4(a1 + 1000, *v87, a1 + 592);
  sub_100295864(a1 + 1064, *v87, a1 + 768);
  sub_10028D918(a1 + 1000, a1 + 1064, (void *)(a1 + 3248));
  uint64_t v45 = *(void *)(a1 + 56);
  uint64_t v46 = *(std::__shared_weak_count **)(a1 + 3256);
  uint64_t v93 = *(void *)(a1 + 3248);
  unint64_t v94 = v46;
  if (v46)
  {
    uint64_t v47 = (unint64_t *)&v46->__shared_owners_;
    do
      uint64_t v48 = __ldxr(v47);
    while (__stxr(v48 + 1, v47));
  }

  uint64_t v49 = *(std::__shared_weak_count **)(a1 + 168);
  uint64_t v91 = *(void *)(a1 + 160);
  unint64_t v92 = v49;
  if (v49)
  {
    uint64_t v50 = (unint64_t *)&v49->__shared_owners_;
    do
      uint64_t v51 = __ldxr(v50);
    while (__stxr(v51 + 1, v50));
  }

  sub_100173BD4(a1 + 3264, v45, &v93, v86, v2, v14, v13, &v91, a1 + 3248, a1 + 272, a1 + 232, a1 + 208, v85);
  id v52 = v92;
  if (v92)
  {
    uint64_t v53 = (unint64_t *)&v92->__shared_owners_;
    do
      uint64_t v54 = __ldaxr(v53);
    while (__stlxr(v54 - 1, v53));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
      std::__shared_weak_count::__release_weak(v52);
    }
  }

  __int128 v55 = v94;
  if (v94)
  {
    uint64_t v56 = (unint64_t *)&v94->__shared_owners_;
    do
      id v57 = __ldaxr(v56);
    while (__stlxr(v57 - 1, v56));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
      std::__shared_weak_count::__release_weak(v55);
    }
  }

  *(void *)(a1 + 6376) = v86;
  *(void *)(a1 + 6384) = a1 + 408;
  *(void *)(a1 + 6392) = a1 + 504;
  *(void *)(a1 + 6400) = a1 + 592;
  *(void *)(a1 + 640std::iostream::~basic_iostream(v2, v3 + 8) = a1 + 680;
  *(void *)(a1 + 6416) = a1 + 768;
  *(void *)(a1 + 6424) = a1 + 1008;
  *(void *)(a1 + 64sub_100012358(v1 - 32) = a1 + 912;
  *(void *)(a1 + 6440) = a1 + 864;
  *(void *)(a1 + 644std::iostream::~basic_iostream(v2, v3 + 8) = a1 + 1072;
  *(void *)(a1 + 6456) = a1 + 3272;
  *(_OWORD *)(a1 + 6464) = 0u;
  sub_10025DF4C(a1 + 6480);
  uint64_t v58 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_DEFAULT, "PRRangingManager construction", buf, 2u);
  }

  if (sub_1001CDB48())
  {
    v100[0] = (const void **)a1;
    sub_10028DBAC(a1 + 6376, a1 + 6424, (uint64_t *)v100, (uint64_t *)v87, (uint64_t *)(a1 + 160), buf);
    sub_10000EE54(a1 + 6464, (__int128 *)buf);
    uint64_t v59 = *(std::__shared_weak_count **)&buf[8];
    if (!*(void *)&buf[8]) {
      goto LABEL_87;
    }
    id v60 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v61 = __ldaxr(v60);
    while (__stlxr(v61 - 1, v60));
    goto LABEL_85;
  }

  unint64_t v62 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEFAULT,  "PRRangingManager: Not a supported platform.",  buf,  2u);
  }

  v100[0] = (const void **)a1;
  sub_10028DD8C((uint64_t *)v100, v87, buf);
  sub_10000EE54(a1 + 6464, (__int128 *)buf);
  uint64_t v59 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v63 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v61 = __ldaxr(v63);
    while (__stlxr(v61 - 1, v63));
LABEL_85:
    if (!v61)
    {
      ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
      std::__shared_weak_count::__release_weak(v59);
    }
  }

      *(void *)&v19 += 96LL;
      if (*(void *)&v19 == v20) {
        goto LABEL_28;
      }
    }

    sub_1002FC32C((double *)a1, *(uint64_t *)&v19, (uint64_t)buf, a5, a2 / a5, v17);
LABEL_25:
    *(_OWORD *)(*(void *)&v19 + 32LL) = *(_OWORD *)v27;
    *(_OWORD *)(*(void *)&v19 + 48LL) = *(_OWORD *)&v27[16];
    *(_OWORD *)(*(void *)&v19 + 64LL) = v28;
    *(_OWORD *)(*(void *)&v19 + 8sub_10001E864(v1, 0LL) = v29;
    **(_OWORD **)&id v19 = *(_OWORD *)buf;
    *(_OWORD *)(*(void *)&v19 + 16LL) = *(_OWORD *)&buf[16];
    goto LABEL_27;
  }

void sub_100047D2C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_100012390((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_100047D88()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_100047E04(_Unwind_Exception *a1)
{
}

void sub_100047E1C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      id v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10040CDA8;
      v1[1] = unk_10040CDB8;
      v1[2] = xmmword_10040CDC8;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_100047EBC(_Unwind_Exception *a1)
{
}

void sub_100047ED4()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  id v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  char v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F55C0 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F55B0 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F55B0, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  unint64_t v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F55D8 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F55C8 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F55C8, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  uint64_t v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F55F0 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F55E0 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F55E0, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  float v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  int v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F5608 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F55F8 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F55F8, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  size_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  id v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F5620 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F5610 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5610, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  id v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  id v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F5638 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F5628 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5628, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  id v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  id v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F5650 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F5640 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5640, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  id v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F5668 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F5658 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5658, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  uint64_t v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F5680 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F5670 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5670, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_1000484C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t start()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_10003B798();
  if ((_set_user_dir_suffix("com.apple.nearbyd") & 1) == 0)
  {
    id v1 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
      sub_10038BAFC(v1, v2, v3, v4, v5, v6, v7, v8);
    }
  }

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  NSFileAttributeKey v43 = NSFilePosixPermissions;
  uint64_t v44 = &off_1007D2310;
  __int128 v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v44,  &v43,  1LL));
  uint64_t v11 = NSTemporaryDirectory();
  __int128 v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  id v36 = 0LL;
  [v9 setAttributes:v10 ofItemAtPath:v12 error:&v36];
  id v13 = v36;

  if (v13)
  {
    __int128 v14 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      id v25 = objc_claimAutoreleasedReturnValue([v13 description]);
      __int128 v26 = (const char *)[v25 UTF8String];
      *(_DWORD *)pthread_attr_t buf = 136315138;
      std::string v38 = v26;
      _os_log_error_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "Error while trying to set permissions on temporary directory: %s",  buf,  0xCu);
    }
  }

  int v15 = objc_autoreleasePoolPush();
  __int128 v16 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "starting daemon - ranging service", buf, 2u);
  }

  if (+[NIPlatformInfo isInternalBuild](&OBJC_CLASS___NIPlatformInfo, "isInternalBuild"))
  {
    size_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
    unsigned int v18 = [v17 BOOLForKey:@"ForceCrash_Startup"];

    if (v18)
    {
      id v27 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT)) {
        sub_10038BAC8(v27, v28, v29, v30, v31, v32, v33, v34);
      }
      uint64_t v35 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)pthread_attr_t buf = 136315650;
        std::string v38 = "/Library/Caches/com.apple.xbs/Sources/Proximity/Daemon/nearbyd.mm";
        __int16 v39 = 1024;
        int v40 = 48;
        __int16 v41 = 2080;
        unint64_t v42 = "main";
        _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_INFO, "%s:%d: assertion failure in %s", buf, 0x1Cu);
      }

      abort();
    }
  }

  id v19 = objc_alloc_init(&OBJC_CLASS___PRDaemon);
  -[PRDaemon run](v19, "run");
  objc_autoreleasePoolPop(v15);
  do
  {
    __int128 v20 = objc_autoreleasePoolPush();
    id v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSRunLoop currentRunLoop](&OBJC_CLASS___NSRunLoop, "currentRunLoop"));
    __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate distantFuture](&OBJC_CLASS___NSDate, "distantFuture"));
    unsigned __int8 v23 = [v21 runMode:NSDefaultRunLoopMode beforeDate:v22];

    objc_autoreleasePoolPop(v20);
  }

  while ((v23 & 1) != 0);

  objc_autoreleasePoolPop(v0);
  return 0LL;
}

void sub_1000488A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_100048928@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A3540[a1]);
}

void *sub_10004893C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A3598[a1]);
}

void *sub_100048950@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A35E0[a1]);
}

void *sub_100048964@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_1000065CC(a2, off_1007A3600[a1]);
}

void sub_100048A60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100048AC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100048D30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100048DA4(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "connection interrupted for pid: %d",  (uint8_t *)v6,  8u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained handleXPCDisconnection:v5];
  }
}

void sub_100048E78(_Unwind_Exception *a1)
{
  int v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100048E98(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    v6[0] = 67109120;
    v6[1] = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "connection invalidated for pid: %d",  (uint8_t *)v6,  8u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained handleXPCDisconnection:v5];
  }
}

void sub_100048F6C(_Unwind_Exception *a1)
{
  int v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100049124(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000491F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004923C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D58);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D58))
    {
      sub_1000065CC(qword_1007F1D40, "PRRoseProviderNetworkListener");
      __cxa_atexit((void (*)(void *))&std::string::~string, qword_1007F1D40, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D58);
    }
  }

void sub_1000492B8(_Unwind_Exception *a1)
{
}

void sub_1000492D0()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1007F1D78);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1007F1D78))
    {
      qword_1007F1D60 = 0LL;
      qword_1007F1D68 = 0LL;
      qword_1007F1D70 = 0LL;
      id v1 = operator new(0x30uLL);
      qword_1007F1D68 = (uint64_t)(v1 + 3);
      qword_1007F1D70 = (uint64_t)(v1 + 3);
      _OWORD *v1 = xmmword_10040CDD8;
      v1[1] = unk_10040CDE8;
      v1[2] = xmmword_10040CDF8;
      qword_1007F1D60 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1000040CC, &qword_1007F1D60, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1007F1D78);
    }
  }

void sub_100049370(_Unwind_Exception *a1)
{
}

void sub_100049388()
{
  unsigned __int8 v0 = objc_autoreleasePoolPush();
  sub_100320A4C(0LL, &v37);
  id v1 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v1->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v2;
  v1->__r_.__value_.__l.__size_ = 0LL;
  v1->__r_.__value_.__l.__cap_ = 0LL;
  v1->__r_.__value_.__r.__words[0] = 0LL;
  int v3 = std::string::append(&v38, ".bin");
  __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  qword_1007F5698 = v3->__r_.__value_.__l.__cap_;
  xmmword_1007F5688 = v4;
  v3->__r_.__value_.__l.__size_ = 0LL;
  v3->__r_.__value_.__l.__cap_ = 0LL;
  v3->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5688, (void *)&_mh_execute_header);
  sub_100320A4C(1LL, &v37);
  id v5 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v7 = std::string::append(&v38, ".bin");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  qword_1007F56B0 = v7->__r_.__value_.__l.__cap_;
  xmmword_1007F56A0 = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F56A0, (void *)&_mh_execute_header);
  sub_100320A4C(2LL, &v37);
  uint64_t v9 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v11 = std::string::append(&v38, ".bin");
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  qword_1007F56C8 = v11->__r_.__value_.__l.__cap_;
  xmmword_1007F56B8 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F56B8, (void *)&_mh_execute_header);
  sub_100320A4C(3LL, &v37);
  id v13 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  int v15 = std::string::append(&v38, ".bin");
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  qword_1007F56E0 = v15->__r_.__value_.__l.__cap_;
  xmmword_1007F56D0 = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F56D0, (void *)&_mh_execute_header);
  sub_100320A4C(4LL, &v37);
  size_t v17 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  id v19 = std::string::append(&v38, ".bin");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  qword_1007F56F8 = v19->__r_.__value_.__l.__cap_;
  xmmword_1007F56E8 = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F56E8, (void *)&_mh_execute_header);
  sub_100320A4C(5LL, &v37);
  id v21 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  unsigned __int8 v23 = std::string::append(&v38, ".bin");
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_1007F5710 = v23->__r_.__value_.__l.__cap_;
  xmmword_1007F5700 = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5700, (void *)&_mh_execute_header);
  sub_100320A4C(6LL, &v37);
  id v25 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  id v27 = std::string::append(&v38, ".bin");
  __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  qword_1007F5728 = v27->__r_.__value_.__l.__cap_;
  xmmword_1007F5718 = v28;
  v27->__r_.__value_.__l.__size_ = 0LL;
  v27->__r_.__value_.__l.__cap_ = 0LL;
  v27->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5718, (void *)&_mh_execute_header);
  sub_100320A4C(7LL, &v37);
  uint64_t v29 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v31 = std::string::append(&v38, ".bin");
  __int128 v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  qword_1007F5740 = v31->__r_.__value_.__l.__cap_;
  xmmword_1007F5730 = v32;
  v31->__r_.__value_.__l.__size_ = 0LL;
  v31->__r_.__value_.__l.__cap_ = 0LL;
  v31->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5730, (void *)&_mh_execute_header);
  sub_100320A4C(8LL, &v37);
  uint64_t v33 = std::string::insert(&v37, 0LL, "reverseLUT_A");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v35 = std::string::append(&v38, ".bin");
  __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  qword_1007F5758 = v35->__r_.__value_.__l.__cap_;
  xmmword_1007F5748 = v36;
  v35->__r_.__value_.__l.__size_ = 0LL;
  v35->__r_.__value_.__l.__cap_ = 0LL;
  v35->__r_.__value_.__r.__words[0] = 0LL;
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1007F5748, (void *)&_mh_execute_header);
  objc_autoreleasePoolPop(v0);
}

void sub_10004997C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000499F0()
{
  unsigned __int8 v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_10004A444();
  uint64_t v1 = wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  sub_1000065CC(__p, "CLPVisionEvent.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(v1, __p);
  uint64_t v3 = FileByName;
  if (v113 < 0)
  {
    operator delete(__p[0]);
    if (!v3)
    {
LABEL_5:
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( __p,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  102LL);
      uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: file != NULL: ");
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v111, v4);
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
    }
  }

  else if (!FileByName)
  {
    goto LABEL_5;
  }

  qword_1007F5760 = *(void *)(v3 + 80);
  uint64_t v5 = qword_1007F5760;
  __int128 v6 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v7 = qword_1008000A8;
  __int128 v8 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v6);
  uint64_t v9 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v8);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v6,  v5,  v7,  &unk_10040CE4C,  44LL,  8LL,  0xFFFFFFFFLL,  v8,  v9,  48);
  qword_1007F5768 = (uint64_t)v6;
  qword_1007F5770 = *(void *)(v3 + 80) + 120LL;
  uint64_t v10 = qword_1007F5770;
  uint64_t v11 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v12 = qword_1008000B0;
  id v13 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v11);
  uint64_t v14 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v13);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v11,  v10,  v12,  &unk_10040CE58,  36LL,  8LL,  0xFFFFFFFFLL,  v13,  v14,  40);
  qword_1007F5778 = (uint64_t)v11;
  qword_1007F5780 = *(void *)(v3 + 80) + 240LL;
  uint64_t v15 = qword_1007F5780;
  __int128 v16 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v17 = qword_1008000B8;
  __int128 v18 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v16);
  uint64_t v19 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v18);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v16,  v15,  v17,  &unk_10040CE5C,  36LL,  8LL,  0xFFFFFFFFLL,  v18,  v19,  40);
  qword_1007F5788 = (uint64_t)v16;
  qword_1007F5790 = *(void *)(v3 + 80) + 360LL;
  uint64_t v20 = qword_1007F5790;
  id v21 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v22 = qword_1008000C0;
  unsigned __int8 v23 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v21);
  uint64_t v24 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v23);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v21,  v20,  v22,  &unk_10040CE60,  44LL,  8LL,  0xFFFFFFFFLL,  v23,  v24,  48);
  qword_1007F5798 = (uint64_t)v21;
  qword_1007F57A0 = *(void *)(v3 + 80) + 480LL;
  uint64_t v25 = qword_1007F57A0;
  __int128 v26 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v27 = qword_1008000C8;
  __int128 v28 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v26);
  uint64_t v29 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v28);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v26,  v25,  v27,  &unk_10040CE64,  44LL,  8LL,  0xFFFFFFFFLL,  v28,  v29,  48);
  qword_1007F57A8 = (uint64_t)v26;
  qword_1007F57B0 = *(void *)(v3 + 80) + 600LL;
  uint64_t v30 = qword_1007F57B0;
  uint64_t v31 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v32 = qword_1008000D0;
  uint64_t v33 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v31);
  uint64_t v34 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v33);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v31,  v30,  v32,  &unk_10040CE68,  36LL,  8LL,  0xFFFFFFFFLL,  v33,  v34,  40);
  qword_1007F57B8 = (uint64_t)v31;
  qword_1007F57C0 = *(void *)(v3 + 80) + 720LL;
  uint64_t v35 = qword_1007F57C0;
  __int128 v36 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v37 = qword_1008000D8;
  std::string v38 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v36);
  uint64_t v39 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v38);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v36,  v35,  v37,  &unk_10040CE70,  72LL,  8LL,  0xFFFFFFFFLL,  v38,  v39,  80);
  qword_1007F57C8 = (uint64_t)v36;
  qword_1007F57D0 = *(void *)(v3 + 80) + 840LL;
  uint64_t v40 = qword_1007F57D0;
  __int16 v41 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v42 = qword_1008000E0;
  NSFileAttributeKey v43 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v41);
  uint64_t v44 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v43);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v41,  v40,  v42,  &unk_10040CEA0,  72LL,  8LL,  0xFFFFFFFFLL,  v43,  v44,  80);
  qword_1007F57D8 = (uint64_t)v41;
  qword_1007F57E0 = *(void *)(v3 + 80) + 960LL;
  uint64_t v45 = qword_1007F57E0;
  uint64_t v46 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v47 = qword_1008000E8;
  uint64_t v48 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v46);
  uint64_t v49 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v48);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v46,  v45,  v47,  &unk_10040CED0,  96LL,  8LL,  0xFFFFFFFFLL,  v48,  v49,  104);
  qword_1007F57E8 = (uint64_t)v46;
  qword_1007F57F0 = *(void *)(v3 + 80) + 1080LL;
  uint64_t v50 = qword_1007F57F0;
  uint64_t v51 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v52 = qword_1008000F0;
  uint64_t v53 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v51);
  uint64_t v54 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v53);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v51,  v50,  v52,  &unk_10040CEF8,  36LL,  8LL,  0xFFFFFFFFLL,  v53,  v54,  40);
  qword_1007F57F8 = (uint64_t)v51;
  qword_1007F5800 = *(void *)(v3 + 80) + 1200LL;
  uint64_t v55 = qword_1007F5800;
  uint64_t v56 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v57 = qword_1008000F8;
  uint64_t v58 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v56);
  uint64_t v59 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v58);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v56,  v55,  v57,  &unk_10040CF00,  44LL,  8LL,  0xFFFFFFFFLL,  v58,  v59,  48);
  qword_1007F5808 = (uint64_t)v56;
  qword_1007F5810 = *(void *)(v3 + 80) + 1320LL;
  uint64_t v60 = qword_1007F5810;
  unint64_t v61 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v62 = qword_100800100;
  uint64_t v63 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v61);
  uint64_t v64 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v63);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v61,  v60,  v62,  &unk_10040CF0C,  80LL,  8LL,  0xFFFFFFFFLL,  v63,  v64,  88);
  qword_1007F5818 = (uint64_t)v61;
  qword_1007F5820 = *(void *)(v3 + 80) + 1440LL;
  uint64_t v65 = qword_1007F5820;
  int64_t v66 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v67 = qword_100800108;
  int64_t v68 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v66);
  uint64_t v69 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v68);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v66,  v65,  v67,  &unk_10040CF2C,  52LL,  8LL,  0xFFFFFFFFLL,  v68,  v69,  56);
  qword_1007F5828 = (uint64_t)v66;
  qword_1007F5830 = *(void *)(v3 + 80) + 1560LL;
  uint64_t v70 = qword_1007F5830;
  unint64_t v71 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v72 = qword_100800110;
  unint64_t v73 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v71);
  uint64_t v74 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v73);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v71,  v70,  v72,  &unk_10040CF34,  28LL,  8LL,  0xFFFFFFFFLL,  v73,  v74,  32);
  qword_1007F5838 = (uint64_t)v71;
  qword_1007F5840 = *(void *)(v3 + 80) + 1680LL;
  uint64_t v75 = qword_1007F5840;
  __int128 v76 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v77 = qword_100800118;
  uint64_t v78 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v76);
  uint64_t v79 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v78);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v76,  v75,  v77,  &unk_10040CF38,  52LL,  8LL,  0xFFFFFFFFLL,  v78,  v79,  56);
  qword_1007F5848 = (uint64_t)v76;
  qword_1007F5850 = *(void *)(v3 + 80) + 1800LL;
  uint64_t v80 = qword_1007F5850;
  int64_t v81 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v82 = qword_100800120;
  unint64_t v83 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v81);
  uint64_t v84 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v83);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v81,  v80,  v82,  &unk_10040CF44,  36LL,  8LL,  0xFFFFFFFFLL,  v83,  v84,  40);
  qword_1007F5858 = (uint64_t)v81;
  qword_1007F5860 = *(void *)(v3 + 80) + 1920LL;
  uint64_t v85 = qword_1007F5860;
  uint64_t v86 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v87 = qword_100800128;
  unint64_t v88 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v86);
  uint64_t v89 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v88);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v86,  v85,  v87,  &unk_10040CF4C,  36LL,  8LL,  0xFFFFFFFFLL,  v88,  v89,  40);
  qword_1007F5868 = (uint64_t)v86;
  qword_1007F5870 = *(void *)(v3 + 80) + 2040LL;
  uint64_t v90 = qword_1007F5870;
  uint64_t v91 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v92 = qword_100800130;
  uint64_t v93 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v91);
  uint64_t v94 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v93);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v91,  v90,  v92,  &unk_10040CF50,  44LL,  8LL,  0xFFFFFFFFLL,  v93,  v94,  48);
  qword_1007F5878 = (uint64_t)v91;
  qword_1007F5880 = *(void *)(v3 + 80) + 2160LL;
  uint64_t v95 = qword_1007F5880;
  __int128 v96 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v97 = qword_100800138;
  unint64_t v98 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v96);
  uint64_t v99 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v98);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v96,  v95,  v97,  &unk_10040CF54,  284LL,  8LL,  0xFFFFFFFFLL,  v98,  v99,  288);
  qword_1007F5888 = (uint64_t)v96;
  qword_1007F5890 = *(void *)(v3 + 80) + 2280LL;
  uint64_t v100 = qword_1007F5890;
  unint64_t v101 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v102 = qword_100800140;
  __int128 v103 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v101);
  uint64_t v104 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v103);
  wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v101,  v100,  v102,  &unk_10040CFA0,  20LL,  8LL,  0xFFFFFFFFLL,  v103,  v104,  24);
  qword_1007F5898 = (uint64_t)v101;
  qword_1007F58A0 = *(void *)(v3 + 80) + 2400LL;
  uint64_t v105 = qword_1007F58A0;
  __int128 v106 = (wireless_diagnostics::google::protobuf::DescriptorPool *)operator new(0x40uLL);
  uint64_t v107 = qword_100800148;
  __int128 v108 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v106);
  uint64_t v109 = wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v108);
  uint64_t result = wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection( v106,  v105,  v107,  &unk_10040CFA4,  64LL,  8LL,  0xFFFFFFFFLL,  v108,  v109,  72);
  qword_1007F58A8 = (uint64_t)v106;
  qword_1007F58B0 = *(void *)(v3 + 96);
  qword_1007F58B8 = qword_1007F58B0 + 56;
  qword_1007F58C0 = qword_1007F58B0 + 112;
  qword_1007F58C8 = qword_1007F58B0 + 168;
  qword_1007F58D0 = qword_1007F58B0 + 224;
  return result;
}

void sub_10004A3B8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_10004A444(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_1007F58D8 & 1) == 0)
  {
    byte_1007F58D8 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion( (wireless_diagnostics::google::protobuf::internal *)0x1E9808,  2005000,  (int)"/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile( (wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_10040CFBC,  (const void *)0x13B4,  v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile( "CLPVisionEvent.proto",  sub_10004ABCC);
    uint64_t v5 = operator new(0x30uLL);
    sub_10004B148((uint64_t)v5);
    qword_1008000A8 = (uint64_t)v5;
    __int128 v6 = operator new(0x28uLL);
    sub_10004B8F0(v6);
    qword_1008000B0 = (uint64_t)v6;
    uint64_t v7 = operator new(0x28uLL);
    sub_10004C13C(v7);
    qword_1008000B8 = (uint64_t)v7;
    __int128 v8 = operator new(0x30uLL);
    sub_10004C984((uint64_t)v8);
    qword_1008000C0 = (uint64_t)v8;
    uint64_t v9 = operator new(0x30uLL);
    sub_10004D194((uint64_t)v9);
    qword_1008000C8 = (uint64_t)v9;
    uint64_t v10 = operator new(0x28uLL);
    sub_10004D9D0(v10);
    qword_1008000D0 = (uint64_t)v10;
    uint64_t v11 = operator new(0x50uLL);
    sub_10004E060((uint64_t)v11);
    qword_1008000D8 = (uint64_t)v11;
    uint64_t v12 = operator new(0x50uLL);
    sub_10004F27C((uint64_t)v12);
    qword_1008000E0 = (uint64_t)v12;
    id v13 = operator new(0x68uLL);
    sub_100050498((uint64_t)v13);
    qword_1008000E8 = (uint64_t)v13;
    uint64_t v14 = operator new(0x28uLL);
    sub_100051F84(v14);
    qword_1008000F0 = (uint64_t)v14;
    uint64_t v15 = operator new(0x30uLL);
    sub_100052614((uint64_t)v15);
    qword_1008000F8 = (uint64_t)v15;
    __int128 v16 = operator new(0x58uLL);
    sub_10005310C((uint64_t)v16);
    qword_100800100 = (uint64_t)v16;
    uint64_t v17 = operator new(0x38uLL);
    sub_100054788((uint64_t)v17);
    qword_100800108 = (uint64_t)v17;
    __int128 v18 = operator new(0x20uLL);
    sub_1000550AC(v18);
    qword_100800110 = (uint64_t)v18;
    uint64_t v19 = operator new(0x38uLL);
    sub_100055690((uint64_t)v19);
    qword_100800118 = (uint64_t)v19;
    uint64_t v20 = operator new(0x28uLL);
    sub_100056184(v20);
    qword_100800120 = (uint64_t)v20;
    id v21 = operator new(0x28uLL);
    sub_1000569DC(v21);
    qword_100800128 = (uint64_t)v21;
    uint64_t v22 = operator new(0x30uLL);
    sub_10005710C((uint64_t)v22);
    qword_100800130 = (uint64_t)v22;
    unsigned __int8 v23 = operator new(0x120uLL);
    sub_10005791C((uint64_t)v23);
    qword_100800138 = (uint64_t)v23;
    uint64_t v24 = operator new(0x18uLL);
    sub_10005AB34(v24);
    qword_100800140 = (uint64_t)v24;
    uint64_t v25 = operator new(0x48uLL);
    sub_10005AF6C((uint64_t)v25);
    qword_100800148 = (uint64_t)v25;
    uint64_t v26 = sub_10004AF44(qword_1008000E8);
    uint64_t v27 = qword_1008000F8;
    uint64_t v28 = qword_1008000F0;
    if (!qword_1008000F0)
    {
      uint64_t v26 = sub_10004A444(v26);
      uint64_t v28 = qword_1008000F0;
    }

    *(void *)(v27 + 16) = v28;
    uint64_t v29 = qword_1008000A8;
    if (!qword_1008000A8)
    {
      sub_10004A444(v26);
      uint64_t v29 = qword_1008000A8;
    }

    *(void *)(v27 + sub_100012358(v1 - 32) = v29;
    uint64_t v30 = sub_10004B008(qword_100800100);
    uint64_t v31 = qword_100800110;
    uint64_t v32 = qword_100800108;
    if (!qword_100800108)
    {
      uint64_t v30 = sub_10004A444(v30);
      uint64_t v32 = qword_100800108;
    }

    *(void *)(v31 + 16) = v32;
    uint64_t v33 = qword_100800120;
    uint64_t v34 = qword_1008000B8;
    if (!qword_1008000B8)
    {
      sub_10004A444(v30);
      uint64_t v34 = qword_1008000B8;
    }

    *(void *)(v33 + 16) = v34;
    sub_10004B0B4(qword_100800148);
    wireless_diagnostics::google::protobuf::internal::OnShutdown( (wireless_diagnostics::google::protobuf::internal *)sub_10004A7C8,  v35);
  }

void sub_10004A764(_Unwind_Exception *a1)
{
}

uint64_t sub_10004A7C8()
{
  if (qword_1008000A8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008000A8 + 8LL))(qword_1008000A8);
  }
  if (qword_1007F5768) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F5768 + 8LL))(qword_1007F5768);
  }
  if (qword_1008000B0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008000B0 + 8LL))(qword_1008000B0);
  }
  if (qword_1007F5778) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F5778 + 8LL))(qword_1007F5778);
  }
  if (qword_1008000B8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008000B8 + 8LL))(qword_1008000B8);
  }
  if (qword_1007F5788) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F5788 + 8LL))(qword_1007F5788);
  }
  if (qword_1008000C0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008000C0 + 8LL))(qword_1008000C0);
  }
  if (qword_1007F5798) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F5798 + 8LL))(qword_1007F5798);
  }
  if (qword_1008000C8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008000C8 + 8LL))(qword_1008000C8);
  }
  if (qword_1007F57A8) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F57A8 + 8LL))(qword_1007F57A8);
  }
  if (qword_1008000D0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008000D0 + 8LL))(qword_1008000D0);
  }
  if (qword_1007F57B8) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F57B8 + 8LL))(qword_1007F57B8);
  }
  if (qword_1008000D8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008000D8 + 8LL))(qword_1008000D8);
  }
  if (qword_1007F57C8) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F57C8 + 8LL))(qword_1007F57C8);
  }
  if (qword_1008000E0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008000E0 + 8LL))(qword_1008000E0);
  }
  if (qword_1007F57D8) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F57D8 + 8LL))(qword_1007F57D8);
  }
  if (qword_1008000E8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008000E8 + 8LL))(qword_1008000E8);
  }
  if (qword_1007F57E8) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F57E8 + 8LL))(qword_1007F57E8);
  }
  if (qword_1008000F0) {
    (*(void (**)(uint64_t))(*(void *)qword_1008000F0 + 8LL))(qword_1008000F0);
  }
  if (qword_1007F57F8) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F57F8 + 8LL))(qword_1007F57F8);
  }
  if (qword_1008000F8) {
    (*(void (**)(uint64_t))(*(void *)qword_1008000F8 + 8LL))(qword_1008000F8);
  }
  if (qword_1007F5808) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F5808 + 8LL))(qword_1007F5808);
  }
  if (qword_100800100) {
    (*(void (**)(uint64_t))(*(void *)qword_100800100 + 8LL))(qword_100800100);
  }
  if (qword_1007F5818) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F5818 + 8LL))(qword_1007F5818);
  }
  if (qword_100800108) {
    (*(void (**)(uint64_t))(*(void *)qword_100800108 + 8LL))(qword_100800108);
  }
  if (qword_1007F5828) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F5828 + 8LL))(qword_1007F5828);
  }
  if (qword_100800110) {
    (*(void (**)(uint64_t))(*(void *)qword_100800110 + 8LL))(qword_100800110);
  }
  if (qword_1007F5838) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F5838 + 8LL))(qword_1007F5838);
  }
  if (qword_100800118) {
    (*(void (**)(uint64_t))(*(void *)qword_100800118 + 8LL))(qword_100800118);
  }
  if (qword_1007F5848) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F5848 + 8LL))(qword_1007F5848);
  }
  if (qword_100800120) {
    (*(void (**)(uint64_t))(*(void *)qword_100800120 + 8LL))(qword_100800120);
  }
  if (qword_1007F5858) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F5858 + 8LL))(qword_1007F5858);
  }
  if (qword_100800128) {
    (*(void (**)(uint64_t))(*(void *)qword_100800128 + 8LL))(qword_100800128);
  }
  if (qword_1007F5868) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F5868 + 8LL))(qword_1007F5868);
  }
  if (qword_100800130) {
    (*(void (**)(uint64_t))(*(void *)qword_100800130 + 8LL))(qword_100800130);
  }
  if (qword_1007F5878) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F5878 + 8LL))(qword_1007F5878);
  }
  if (qword_100800138) {
    (*(void (**)(uint64_t))(*(void *)qword_100800138 + 8LL))(qword_100800138);
  }
  if (qword_1007F5888) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F5888 + 8LL))(qword_1007F5888);
  }
  if (qword_100800140) {
    (*(void (**)(uint64_t))(*(void *)qword_100800140 + 8LL))(qword_100800140);
  }
  if (qword_1007F5898) {
    (*(void (**)(uint64_t))(*(void *)qword_1007F5898 + 8LL))(qword_1007F5898);
  }
  if (qword_100800148) {
    (*(void (**)(uint64_t))(*(void *)qword_100800148 + 8LL))(qword_100800148);
  }
  uint64_t result = qword_1007F58A8;
  if (qword_1007F58A8) {
    return (*(uint64_t (**)(uint64_t))(*(void *)qword_1007F58A8 + 8LL))(qword_1007F58A8);
  }
  return result;
}

uint64_t sub_10004ABCC()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v43[1] = sub_1000499F0;
    char v44 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v43);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v43);
  }

  uint64_t v1 = qword_1007F5760;
  if (!qword_1008000A8) {
    ((void (*)(void))sub_10004A444)();
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v1);
  uint64_t v3 = qword_1007F5770;
  if (!qword_1008000B0) {
    sub_10004A444(v2);
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v3);
  uint64_t v5 = qword_1007F5780;
  if (!qword_1008000B8) {
    sub_10004A444(v4);
  }
  uint64_t v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v5);
  uint64_t v7 = qword_1007F5790;
  if (!qword_1008000C0) {
    sub_10004A444(v6);
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v7);
  uint64_t v9 = qword_1007F57A0;
  if (!qword_1008000C8) {
    sub_10004A444(v8);
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v9);
  uint64_t v11 = qword_1007F57B0;
  if (!qword_1008000D0) {
    sub_10004A444(v10);
  }
  uint64_t v12 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v11);
  uint64_t v13 = qword_1007F57C0;
  if (!qword_1008000D8) {
    sub_10004A444(v12);
  }
  uint64_t v14 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v13);
  uint64_t v15 = qword_1007F57D0;
  if (!qword_1008000E0) {
    sub_10004A444(v14);
  }
  uint64_t v16 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v15);
  uint64_t v17 = qword_1007F57E0;
  if (!qword_1008000E8) {
    sub_10004A444(v16);
  }
  uint64_t v18 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v17);
  uint64_t v19 = qword_1007F57F0;
  if (!qword_1008000F0) {
    sub_10004A444(v18);
  }
  uint64_t v20 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v19);
  uint64_t v21 = qword_1007F5800;
  if (!qword_1008000F8) {
    sub_10004A444(v20);
  }
  uint64_t v22 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v21);
  uint64_t v23 = qword_1007F5810;
  if (!qword_100800100) {
    sub_10004A444(v22);
  }
  uint64_t v24 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v23);
  uint64_t v25 = qword_1007F5820;
  if (!qword_100800108) {
    sub_10004A444(v24);
  }
  uint64_t v26 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v25);
  uint64_t v27 = qword_1007F5830;
  if (!qword_100800110) {
    sub_10004A444(v26);
  }
  uint64_t v28 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v27);
  uint64_t v29 = qword_1007F5840;
  if (!qword_100800118) {
    sub_10004A444(v28);
  }
  uint64_t v30 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v29);
  uint64_t v31 = qword_1007F5850;
  if (!qword_100800120) {
    sub_10004A444(v30);
  }
  uint64_t v32 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v31);
  uint64_t v33 = qword_1007F5860;
  if (!qword_100800128) {
    sub_10004A444(v32);
  }
  uint64_t v34 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v33);
  uint64_t v35 = qword_1007F5870;
  if (!qword_100800130) {
    sub_10004A444(v34);
  }
  uint64_t v36 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v35);
  uint64_t v37 = qword_1007F5880;
  if (!qword_100800138) {
    sub_10004A444(v36);
  }
  uint64_t v38 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v37);
  uint64_t v39 = qword_1007F5890;
  if (!qword_100800140) {
    sub_10004A444(v38);
  }
  uint64_t v40 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v39);
  uint64_t v41 = qword_1007F58A0;
  if (!qword_100800148) {
    sub_10004A444(v40);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v41);
}

void sub_10004AF28(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10004AF44(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1008000A8;
  if (qword_1008000A8)
  {
    *(void *)(result + 16) = qword_1008000A8;
  }

  else
  {
    uint64_t result = sub_10004A444(result);
    uint64_t v2 = qword_1008000A8;
    v1[2] = qword_1008000A8;
    if (!v2)
    {
      uint64_t result = sub_10004A444(result);
      uint64_t v2 = qword_1008000A8;
    }
  }

  v1[3] = v2;
  uint64_t v3 = qword_1008000D8;
  if (!qword_1008000D8)
  {
    uint64_t result = sub_10004A444(result);
    uint64_t v3 = qword_1008000D8;
  }

  v1[4] = v3;
  uint64_t v4 = qword_1008000E0;
  if (!qword_1008000E0)
  {
    uint64_t result = sub_10004A444(result);
    uint64_t v4 = qword_1008000E0;
  }

  v1[6] = v4;
  uint64_t v5 = qword_1008000C0;
  if (qword_1008000C0)
  {
    v1[8] = qword_1008000C0;
  }

  else
  {
    uint64_t result = sub_10004A444(result);
    uint64_t v5 = qword_1008000C0;
    v1[8] = qword_1008000C0;
    if (!v5)
    {
      uint64_t result = sub_10004A444(result);
      uint64_t v5 = qword_1008000C0;
    }
  }

  v1[9] = v5;
  uint64_t v6 = qword_1008000D0;
  if (!qword_1008000D0)
  {
    uint64_t result = sub_10004A444(result);
    uint64_t v6 = qword_1008000D0;
  }

  v1[10] = v6;
  return result;
}

uint64_t sub_10004B008(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1008000A8;
  if (!qword_1008000A8)
  {
    uint64_t result = sub_10004A444(result);
    uint64_t v2 = qword_1008000A8;
  }

  v1[2] = v2;
  uint64_t v3 = qword_1008000C8;
  if (qword_1008000C8)
  {
    v1[3] = qword_1008000C8;
  }

  else
  {
    uint64_t result = sub_10004A444(result);
    uint64_t v3 = qword_1008000C8;
    v1[3] = qword_1008000C8;
    if (!v3)
    {
      uint64_t result = sub_10004A444(result);
      uint64_t v3 = qword_1008000C8;
    }
  }

  v1[4] = v3;
  uint64_t v4 = qword_1008000B8;
  if (!qword_1008000B8)
  {
    uint64_t result = sub_10004A444(result);
    uint64_t v4 = qword_1008000B8;
  }

  v1[5] = v4;
  uint64_t v5 = qword_1008000F8;
  if (!qword_1008000F8)
  {
    uint64_t result = sub_10004A444(result);
    uint64_t v5 = qword_1008000F8;
  }

  v1[7] = v5;
  uint64_t v6 = qword_100800110;
  if (!qword_100800110)
  {
    uint64_t result = sub_10004A444(result);
    uint64_t v6 = qword_100800110;
  }

  v1[8] = v6;
  return result;
}

uint64_t sub_10004B0B4(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1008000A8;
  if (!qword_1008000A8)
  {
    uint64_t result = sub_10004A444(result);
    uint64_t v2 = qword_1008000A8;
  }

  v1[2] = v2;
  uint64_t v3 = qword_100800120;
  if (!qword_100800120)
  {
    uint64_t result = sub_10004A444(result);
    uint64_t v3 = qword_100800120;
  }

  v1[3] = v3;
  uint64_t v4 = qword_1008000C8;
  if (!qword_1008000C8)
  {
    uint64_t result = sub_10004A444(result);
    uint64_t v4 = qword_1008000C8;
  }

  v1[4] = v4;
  uint64_t v5 = qword_100800130;
  if (!qword_100800130)
  {
    uint64_t result = sub_10004A444(result);
    uint64_t v5 = qword_100800130;
  }

  v1[5] = v5;
  uint64_t v6 = qword_100800140;
  if (!qword_100800140)
  {
    uint64_t result = sub_10004A444(result);
    uint64_t v6 = qword_100800140;
  }

  v1[6] = v6;
  return result;
}

uint64_t sub_10004B148(uint64_t a1)
{
  *(void *)a1 = off_1007A3630;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + sub_100012358(v1 - 32) = 0u;
  return a1;
}

void sub_10004B180(_Unwind_Exception *a1)
{
}

uint64_t sub_10004B194(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  1103LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(v5) = *(_BYTE *)(a2 + 44);
  if (!(_BYTE)v5) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(_BYTE *)(a2 + 44) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v9 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(void *)(a1 + 24) = v9;
    if ((*(_DWORD *)(a2 + 44) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }

  uint64_t v8 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(void *)(a1 + 16) = v8;
  int v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v5 & 4) != 0)
  {
LABEL_7:
    uint64_t v6 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(void *)(a1 + sub_100012358(v1 - 32) = v6;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10004B270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_10004B288(uint64_t a1)
{
  *(void *)a1 = off_1007A3630;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10004B2B8(uint64_t a1)
{
  *(void *)a1 = off_1007A3630;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete(v2);
}

uint64_t sub_10004B2EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void *sub_10004B2F4()
{
  uint64_t v0 = operator new(0x30uLL);
  sub_10004B148((uint64_t)v0);
  return v0;
}

void sub_10004B320(_Unwind_Exception *a1)
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10004B334(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 44))
  {
    *(void *)(a1 + 16) = 0LL;
    *(void *)(a1 + 24) = 0LL;
    *(void *)(a1 + sub_100012358(v1 - 32) = 0LL;
  }

  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10004B358( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        unsigned int v9 = TagFallback >> 3;
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v11 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
LABEL_18:
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
            return 0LL;
          }
          *(void *)(a1 + 24) = v14;
          *(_DWORD *)(a1 + 44) |= 2u;
          uint64_t v12 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 25)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_22;
          }
        }
      }

      if (v9 == 2)
      {
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        goto LABEL_18;
      }

      if (v9 != 3)
      {
        int v10 = TagFallback & 7;
        goto LABEL_28;
      }

      int v10 = TagFallback & 7;
      if (v10 == 1) {
        break;
      }
LABEL_28:
      if (v10 == 4) {
        return 1LL;
      }
    }

uint64_t sub_10004B520( uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 44);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  (int)a2,  *(double *)(this + 16),  a3);
    int v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v4 + 24),  a3);
  if ((*(_DWORD *)(v4 + 44) & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(double *)(v4 + 32),  a3);
LABEL_5:
  uint64_t v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
    }
  }

  return this;
}

uint64_t sub_10004B5BC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v10 = *(void *)(a1 + 24);
    *(_BYTE *)a2 = 17;
    *(void *)(a2 + 1) = v10;
    a2 += 9LL;
    if ((*(_DWORD *)(a1 + 44) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }

  uint64_t v9 = *(void *)(a1 + 16);
  *(_BYTE *)a2 = 9;
  *(void *)(a2 + 1) = v9;
  a2 += 9LL;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v3 & 4) != 0)
  {
LABEL_4:
    uint64_t v4 = *(void *)(a1 + 32);
    *(_BYTE *)a2 = 25;
    *(void *)(a2 + 1) = v4;
    a2 += 9LL;
  }

LABEL_5:
  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  if (*((int *)this + 12) >= 1)
  {
    uint64_t v7 = 0LL;
    do
    {
      uint64_t v8 = *(unsigned int **)(*((void *)this + 5) + 8 * v7);
      *(_BYTE *)int v3 = 34;
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[8];
      if (v9 > 0x7F)
      {
        uint64_t v10 = (_BYTE *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v9,  (int)v3 + 1,  a3);
      }

      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v9;
        uint64_t v10 = (char *)v3 + 2;
      }

      int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000B07B4( (wireless_diagnostics::google::protobuf::internal::WireFormat *)v8,  v10,  a3);
      ++v7;
    }

    while (v7 < *((int *)this + 12));
  }

  if (*((int *)this + 18) >= 1)
  {
    uint64_t v11 = 0LL;
    do
    {
      uint64_t v12 = *(unsigned int **)(*((void *)this + 8) + 8 * v11);
      *(_BYTE *)int v3 = 42;
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12[6];
      if (v13 > 0x7F)
      {
        unint64_t v14 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v13,  (int)v3 + 1,  a3);
      }

      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v13;
        unint64_t v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }

      int v3 = sub_1000B0F64((wireless_diagnostics::google::protobuf::internal::WireFormat *)v12, v14, a3);
      ++v11;
    }

    while (v11 < *((int *)this + 18));
  }

  uint64_t v17 = (void *)*((void *)this + 1);
  uint64_t v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v15 = v17;
  if (!v17 || *v15 == v15[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v16,  v3,  a3);
  }
}

  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  uint64_t v9 = (void *)*((void *)this + 1);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v7 = v9;
  if (!v9 || *v7 == v7[1]) {
    return a2;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v8,  a2,  a3);
  }
}

  if (*((int *)this + 12) >= 1)
  {
    uint64_t v7 = 0LL;
    do
    {
      uint64_t v8 = *(unsigned int **)(*((void *)this + 5) + 8 * v7);
      *(_BYTE *)int v3 = 34;
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[13];
      if (v9 > 0x7F)
      {
        uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v9,  (int)v3 + 1,  a3);
      }

      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v9;
        uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }

      int v3 = sub_1000D333C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, v10, a3);
      ++v7;
    }

    while (v7 < *((int *)this + 12));
  }

  if ((*((_BYTE *)this + 72) & 0x10) != 0)
  {
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 16);
    *(_BYTE *)int v3 = 40;
    uint64_t v12 = (unint64_t)v3 + 1;
    if ((v11 & 0x80000000) != 0)
    {
      uint64_t v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v11,  v12,  a3);
    }

    else
    {
      if (v11 <= 0x7F)
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v11;
        int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_21;
      }

      uint64_t v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v11,  v12,  a3);
    }

    int v3 = v15;
  }

  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  uint64_t v7 = *(void **)(a1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0xFF0uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0xFF0uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1080uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1080uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0xF30uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0xF30uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

  if (error)
  {
    uint64_t v13 = sub_100192A50(-5888LL, 0LL);
    unint64_t v14 = 0;
    *error = (NSError *)(id)objc_claimAutoreleasedReturnValue(v13);
  }

  else
  {
    unint64_t v14 = 0;
  }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0xFF0uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0xFF0uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0xFF0uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0xFF0uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0xFD0uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0xFD0uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0xFC0uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0xFC0uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0xFF8uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0xFF8uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0xFF0uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0xFF0uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0xFD0uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0xFD0uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0xF70uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0xF70uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

  if (v21)
  {
    uint64_t v22 = v21;
    operator delete(v21);
  }

  return v7;
}

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0xFF0uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0xFF0uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0x1000uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0x1000uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

    uint64_t v13 = v12 >> 3;
    unint64_t v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    uint64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }

    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }

  uint64_t v21 = a1[2];
  uint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&uint64_t v54 = operator new(0xFA0uLL);
      sub_10011C958(a1, &v54);
      return;
    }

    *(void *)&uint64_t v54 = operator new(0xFA0uLL);
    sub_10011CA6C((uint64_t)a1, &v54);
    char v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        uint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000472C0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8LL;
        }

        while (v50);
      }

uint64_t sub_10004B6E4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if (*(_BYTE *)(a1 + 44)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0LL;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
  *(_DWORD *)(a1 + 40) = v5;
  }
  return v5;
}

uint64_t sub_10004B754( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  1091LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_10004B194((uint64_t)a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_10004B7FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10004B814(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_10004B85C()
{
  return 1LL;
}

uint64_t sub_10004B864()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F5760;
}

void sub_10004B8DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_10004B8F0(void *a1)
{
  *a1 = off_1007A36E0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0LL;
  a1[3] = 0LL;
  a1[4] = 0LL;
  return a1;
}

void sub_10004B928(_Unwind_Exception *a1)
{
}

uint64_t sub_10004B93C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  1323LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_10005C1F0(a1 + 16, *(_DWORD *)(a1 + 24) + v5);
    memcpy((void *)(*(void *)(a1 + 16) + 4LL * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4LL * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10004B9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_10004BA10(void *a1)
{
  *a1 = off_1007A36E0;
  uint64_t v2 = (void *)a1[2];
  if (v2) {
    operator delete[](v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10004BA54(void *a1)
{
}

uint64_t sub_10004BA68(uint64_t result, int a2)
{
  *(_DWORD *)(result + sub_100012358(v1 - 32) = a2;
  return result;
}

uint64_t sub_10004BA70(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008000B0;
  if (!qword_1008000B0)
  {
    sub_10004A444(0LL, a2, a3, a4);
    return qword_1008000B0;
  }

  return result;
}

void *sub_10004BA9C()
{
  uint64_t v0 = operator new(0x28uLL);
  sub_10004B8F0(v0);
  return v0;
}

void sub_10004BAC8(_Unwind_Exception *a1)
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10004BADC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10004BAF4( uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = a1 + 16;
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      char v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      int v10 = TagFallback & 7;
      if (v10 != 2)
      {
        if (v10 != 5) {
          break;
        }
        goto LABEL_15;
      }

      uint64_t result = sub_10004BD70(this, v6);
      if (!(_DWORD)result) {
        return result;
      }
      while (1)
      {
        uint64_t v23 = (_BYTE *)*((void *)this + 1);
        uint64_t v24 = (_BYTE *)*((void *)this + 2);
        if (v23 >= v24 || *v23 != 13) {
          break;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_15:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0) {
          return 0LL;
        }
        unsigned int v12 = v26[0];
        int v13 = *(_DWORD *)(a1 + 24);
        if (v13 == *(_DWORD *)(a1 + 28))
        {
          sub_10005C1F0(v6, v13 + 1);
          int v13 = *(_DWORD *)(a1 + 24);
        }

        uint64_t v14 = *(void *)(a1 + 16);
        int v15 = v13 + 1;
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(_DWORD *)(v14 + 4LL * v13) = v12;
        uint64_t v16 = *((void *)this + 1);
        int v17 = *((_DWORD *)this + 4) - v16;
        if (v17 >= 1)
        {
          signed int v18 = v17 / 5u;
          int v19 = v18 >= *(_DWORD *)(a1 + 28) - v15 ? *(_DWORD *)(a1 + 28) - v15 : v18;
          if (v19 >= 1)
          {
            int v20 = 0;
            while (*(_BYTE *)v16 == 13)
            {
              int v21 = *(_DWORD *)(v16 + 1);
              if (v15 >= *(_DWORD *)(a1 + 28))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v26,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-89cb-6e654a286000/Applications/Xcode.app/Contents /Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/local/include/go ogle/protobuf/repeated_field.h",  602LL);
                uint64_t v22 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v26,  "CHECK failed: (size()) < (Capacity()): ");
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v25, v22);
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
                int v15 = *(_DWORD *)(a1 + 24);
                uint64_t v14 = *(void *)(a1 + 16);
              }

              *(_DWORD *)(a1 + 24) = v15 + 1;
              *(_DWORD *)(v14 + 4LL * v15) = v21;
              ++v20;
              v16 += 5LL;
              ++v15;
              if (v19 == v20)
              {
                int v20 = v19;
                break;
              }
            }

            if (v20) {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v20);
            }
          }
        }
      }

      if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    if (v10 == 4) {
      return 1LL;
    }
  }

void sub_10004BD58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10004BD70(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
    if (!(_DWORD)result) {
      return result;
    }
    unsigned int v5 = v11;
  }

  else
  {
    unsigned int v5 = *v4;
    unsigned int v11 = v5;
    *((void *)this + 1) = v4 + 1;
  }

  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
  {
LABEL_11:
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
    return 1LL;
  }

  else
  {
    while (1)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12);
      if (!(_DWORD)result) {
        break;
      }
      unsigned int v8 = v12;
      int v9 = *(_DWORD *)(a2 + 8);
      if (v9 == *(_DWORD *)(a2 + 12))
      {
        sub_10005C1F0(a2, v9 + 1);
        int v9 = *(_DWORD *)(a2 + 8);
      }

      uint64_t v10 = *(void *)a2;
      *(_DWORD *)(a2 + std::iostream::~basic_iostream(v2, v3 + 8) = v9 + 1;
      *(_DWORD *)(v10 + 4LL * v9) = v8;
    }
  }

  return result;
}

uint64_t sub_10004BE60( uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v5 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  (int)a2,  *(float *)(*(void *)(v4 + 16) + 4 * v5++),  a3);
    while (v5 < *(int *)(v4 + 24));
  }

  unsigned int v8 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
    }
  }

  return this;
}

uint64_t sub_10004BEE8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v3 = 0LL;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 16) + 4 * v3);
      *(_BYTE *)a2 = 13;
      *(_DWORD *)(a2 + 1) = v4;
      a2 += 5LL;
      ++v3;
    }

    while (v3 < *(int *)(a1 + 24));
  }

  int v7 = *(void **)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

uint64_t sub_10004BF58(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v5 = *(void **)(a1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v4 = v5;
  uint64_t v6 = (5 * *((_DWORD *)v3 + 4));
  if (v5 && *v4 != v4[1]) {
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v6;
  }
  return v6;
}

uint64_t sub_10004BFA0( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  1311LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_10004B93C((uint64_t)a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_10004C048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10004C060(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_10004C0A8()
{
  return 1LL;
}

uint64_t sub_10004C0B0()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F5770;
}

void sub_10004C128(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_10004C13C(void *a1)
{
  *a1 = off_1007A3790;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0LL;
  a1[3] = 0LL;
  a1[4] = 0LL;
  return a1;
}

void sub_10004C174(_Unwind_Exception *a1)
{
}

uint64_t sub_10004C188(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  1531LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_10005C268(a1 + 16, *(_DWORD *)(a1 + 24) + v5);
    memcpy((void *)(*(void *)(a1 + 16) + 8LL * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 8LL * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10004C244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_10004C25C(void *a1)
{
  *a1 = off_1007A3790;
  uint64_t v2 = (void *)a1[2];
  if (v2) {
    operator delete[](v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10004C2A0(void *a1)
{
}

uint64_t sub_10004C2B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + sub_100012358(v1 - 32) = a2;
  return result;
}

void *sub_10004C2BC()
{
  uint64_t v0 = operator new(0x28uLL);
  sub_10004C13C(v0);
  return v0;
}

void sub_10004C2E8(_Unwind_Exception *a1)
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10004C2FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10004C314( uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = a1 + 16;
  unsigned int v7 = a1 + 8;
  while (1)
  {
LABEL_2:
    char v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    int v10 = TagFallback & 7;
    if ((TagFallback & 0xFFFFFFF8) == 8)
    {
      if (v10 == 1)
      {
        while ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v26) & 1) != 0)
        {
          unint64_t v12 = v26[0];
          int v13 = *(_DWORD *)(a1 + 24);
          if (v13 == *(_DWORD *)(a1 + 28))
          {
            sub_10005C268(v6, v13 + 1);
            int v13 = *(_DWORD *)(a1 + 24);
          }

          uint64_t v14 = *(void *)(a1 + 16);
          int v15 = v13 + 1;
          *(_DWORD *)(a1 + 24) = v13 + 1;
          *(void *)(v14 + 8LL * v13) = v12;
          uint64_t v16 = *((void *)this + 1);
          int v17 = *((_DWORD *)this + 4) - v16;
          if (v17 >= 1)
          {
            signed int v18 = v17 / 9u;
            int v19 = v18 >= *(_DWORD *)(a1 + 28) - v15 ? *(_DWORD *)(a1 + 28) - v15 : v18;
            if (v19 >= 1)
            {
              int v20 = 0;
              while (*(_BYTE *)v16 == 9)
              {
                uint64_t v21 = *(void *)(v16 + 1);
                if (v15 >= *(_DWORD *)(a1 + 28))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v26,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-89cb-6e654a286000/Applications/Xcode.app/Conten ts/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/local/includ e/google/protobuf/repeated_field.h",  602LL);
                  uint64_t v22 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v26,  "CHECK failed: (size()) < (Capacity()): ");
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v25, v22);
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
                  int v15 = *(_DWORD *)(a1 + 24);
                  uint64_t v14 = *(void *)(a1 + 16);
                }

                *(_DWORD *)(a1 + 24) = v15 + 1;
                *(void *)(v14 + 8LL * v15) = v21;
                ++v20;
                v16 += 9LL;
                ++v15;
                if (v19 == v20)
                {
                  int v20 = v19;
                  break;
                }
              }

              if (v20) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v20);
              }
            }
          }

void sub_10004C580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10004C598(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
    if (!(_DWORD)result) {
      return result;
    }
    unsigned int v5 = v11;
  }

  else
  {
    unsigned int v5 = *v4;
    unsigned int v11 = v5;
    *((void *)this + 1) = v4 + 1;
  }

  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
  {
LABEL_11:
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
    return 1LL;
  }

  else
  {
    while (1)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12);
      if (!(_DWORD)result) {
        break;
      }
      unint64_t v8 = v12;
      int v9 = *(_DWORD *)(a2 + 8);
      if (v9 == *(_DWORD *)(a2 + 12))
      {
        sub_10005C268(a2, v9 + 1);
        int v9 = *(_DWORD *)(a2 + 8);
      }

      uint64_t v10 = *(void *)a2;
      *(_DWORD *)(a2 + std::iostream::~basic_iostream(v2, v3 + 8) = v9 + 1;
      *(void *)(v10 + 8LL * v9) = v8;
    }
  }

  return result;
}

uint64_t sub_10004C688( uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v5 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  (int)a2,  *(double *)(*(void *)(v4 + 16) + 8 * v5++),  a3);
    while (v5 < *(int *)(v4 + 24));
  }

  unint64_t v8 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
    }
  }

  return this;
}

uint64_t sub_10004C710(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v3 = 0LL;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v3);
      *(_BYTE *)a2 = 9;
      *(void *)(a2 + 1) = v4;
      a2 += 9LL;
      ++v3;
    }

    while (v3 < *(int *)(a1 + 24));
  }

  int v7 = *(void **)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

uint64_t sub_10004C7A0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v5 = *(void **)(a1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v4 = v5;
  uint64_t v6 = (9 * *((_DWORD *)v3 + 4));
  if (v5 && *v4 != v4[1]) {
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v6;
  }
  return v6;
}

uint64_t sub_10004C7E8( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  1519LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_10004C188((uint64_t)a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_10004C890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10004C8A8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_10004C8F0()
{
  return 1LL;
}

uint64_t sub_10004C8F8()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F5780;
}

void sub_10004C970(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10004C984(uint64_t a1)
{
  *(void *)a1 = off_1007A3840;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = 0;
  *(void *)(a1 + 40) = 0LL;
  return a1;
}

void sub_10004C9C0(_Unwind_Exception *a1)
{
}

uint64_t sub_10004C9D4(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v15,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  1734LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v15,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4),  *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 16) + 8 * v5);
      int v7 = a1[7];
      uint64_t v8 = (int)a1[6];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4),  v7 + 1);
          int v7 = a1[7];
        }

        a1[7] = v7 + 1;
        uint64_t v10 = sub_10005C2E0();
        uint64_t v11 = *((void *)a1 + 2);
        uint64_t v12 = (int)a1[6];
        a1[6] = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *((void *)a1 + 2);
        a1[6] = v8 + 1;
        uint64_t v10 = *(void **)(v9 + 8 * v8);
      }

      sub_10004B93C((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 24));
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10004CB04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_10004CB1C(uint64_t a1)
{
  *(void *)a1 = off_1007A3840;
  sub_10005C420(a1 + 16);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10004CB5C(uint64_t a1)
{
}

uint64_t sub_10004CB70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void *sub_10004CB78()
{
  uint64_t v0 = operator new(0x30uLL);
  sub_10004C984((uint64_t)v0);
  return v0;
}

void sub_10004CBA4(_Unwind_Exception *a1)
{
}

uint64_t sub_10004CBB8(uint64_t this)
{
  uint64_t v1 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v2 = 0LL;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32LL))(v3);
      ++v2;
    }

    while (v2 < *(int *)(v1 + 24));
  }

  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 9) = 0;
  if (v5) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_10004CC28( int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  unsigned int v7 = (_DWORD)a1 + 8;
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v8 + 1;
    }

    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        int v10 = a1[7];
        uint64_t v11 = a1[6];
        if ((int)v11 >= v10)
        {
          if (v10 == a1[8])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
            int v10 = a1[7];
          }

          a1[7] = v10 + 1;
          int v13 = sub_10005C2E0();
          uint64_t v14 = *((void *)a1 + 2);
          uint64_t v15 = a1[6];
          a1[6] = v15 + 1;
          *(void *)(v14 + 8 * v15) = v13;
        }

        else
        {
          uint64_t v12 = *((void *)a1 + 2);
          a1[6] = v11 + 1;
          int v13 = *(void **)(v12 + 8 * v11);
        }

        uint64_t v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v28)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v28 = *v16;
          *((void *)this + 1) = v16 + 1;
        }

        int v17 = *((_DWORD *)this + 14);
        int v18 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0LL;
        }
        int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
        int v22 = *((_DWORD *)this + 14);
        BOOL v23 = __OFSUB__(v22, 1);
        int v24 = v22 - 1;
        if (v24 < 0 == v23) {
          *((_DWORD *)this + 14) = v24;
        }
        char v25 = (_BYTE *)*((void *)this + 1);
        uint64_t v26 = (_BYTE *)*((void *)this + 2);
        if (v25 >= v26 || *v25 != 10)
        {
          if (v25 == v26 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          goto LABEL_2;
        }

        *((void *)this + 1) = v25 + 1;
      }
    }
  }

uint64_t sub_10004CE1C( uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v6 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(*(void *)(v5 + 16) + 8 * v6++),  a2,  a4);
    while (v6 < *(int *)(v5 + 24));
  }

  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10004CEA4( wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*((void *)this + 2) + 8 * v5);
      *(_BYTE *)a2 = 10;
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 32);
      if (v7 > 0x7F)
      {
        uint64_t v8 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v7,  (int)a2 + 1,  a3);
      }

      else
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v7;
        uint64_t v8 = (char *)a2 + 2;
      }

      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10004BEE8(v6, (uint64_t)v8, a3);
      ++v5;
    }

    while (v5 < *((int *)this + 6));
  }

  uint64_t v11 = (void *)*((void *)this + 1);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v10,  a2,  a3);
  }
}

uint64_t sub_10004CF5C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0LL;
    do
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10004BF58( *(void *)(*(void *)(a1 + 16) + 8 * v4),  a2);
      int v6 = (int)v5;
      else {
        int v7 = 1;
      }
      uint64_t v3 = (v6 + v3 + v7);
      ++v4;
    }

    while (v4 < *(int *)(a1 + 24));
  }

  uint64_t v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v3;
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_10004CFF8( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  1722LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_10004C9D4(a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_10004D0A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10004D0B8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_10004D100()
{
  return 1LL;
}

uint64_t sub_10004D108()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F5790;
}

void sub_10004D180(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10004D194(uint64_t a1)
{
  *(void *)a1 = off_1007A38F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = 0;
  *(void *)(a1 + 40) = 0LL;
  return a1;
}

void sub_10004D1D0(_Unwind_Exception *a1)
{
}

uint64_t sub_10004D1E4(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v15,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  1937LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v15,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4),  *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 16) + 8 * v5);
      int v7 = a1[7];
      uint64_t v8 = (int)a1[6];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4),  v7 + 1);
          int v7 = a1[7];
        }

        a1[7] = v7 + 1;
        int v10 = sub_10005C320();
        uint64_t v11 = *((void *)a1 + 2);
        uint64_t v12 = (int)a1[6];
        a1[6] = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *((void *)a1 + 2);
        a1[6] = v8 + 1;
        int v10 = *(void **)(v9 + 8 * v8);
      }

      sub_10004C188((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 24));
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10004D314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_10004D32C(uint64_t a1)
{
  *(void *)a1 = off_1007A38F0;
  sub_10005C420(a1 + 16);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10004D36C(uint64_t a1)
{
}

uint64_t sub_10004D380(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

uint64_t sub_10004D388(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1008000C8;
  if (!qword_1008000C8)
  {
    sub_10004A444(0LL, a2, a3, a4);
    return qword_1008000C8;
  }

  return result;
}

void *sub_10004D3B4()
{
  uint64_t v0 = operator new(0x30uLL);
  sub_10004D194((uint64_t)v0);
  return v0;
}

void sub_10004D3E0(_Unwind_Exception *a1)
{
}

uint64_t sub_10004D3F4(uint64_t this)
{
  uint64_t v1 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v2 = 0LL;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32LL))(v3);
      ++v2;
    }

    while (v2 < *(int *)(v1 + 24));
  }

  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 9) = 0;
  if (v5) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_10004D464( int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  unsigned int v7 = (_DWORD)a1 + 8;
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v8 + 1;
    }

    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        int v10 = a1[7];
        uint64_t v11 = a1[6];
        if ((int)v11 >= v10)
        {
          if (v10 == a1[8])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
            int v10 = a1[7];
          }

          a1[7] = v10 + 1;
          int v13 = sub_10005C320();
          uint64_t v14 = *((void *)a1 + 2);
          uint64_t v15 = a1[6];
          a1[6] = v15 + 1;
          *(void *)(v14 + 8 * v15) = v13;
        }

        else
        {
          uint64_t v12 = *((void *)a1 + 2);
          a1[6] = v11 + 1;
          int v13 = *(void **)(v12 + 8 * v11);
        }

        uint64_t v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v28)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v28 = *v16;
          *((void *)this + 1) = v16 + 1;
        }

        int v17 = *((_DWORD *)this + 14);
        int v18 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0LL;
        }
        int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
        int v22 = *((_DWORD *)this + 14);
        BOOL v23 = __OFSUB__(v22, 1);
        int v24 = v22 - 1;
        if (v24 < 0 == v23) {
          *((_DWORD *)this + 14) = v24;
        }
        char v25 = (_BYTE *)*((void *)this + 1);
        uint64_t v26 = (_BYTE *)*((void *)this + 2);
        if (v25 >= v26 || *v25 != 10)
        {
          if (v25 == v26 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          goto LABEL_2;
        }

        *((void *)this + 1) = v25 + 1;
      }
    }
  }

uint64_t sub_10004D658( uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v6 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(*(void *)(v5 + 16) + 8 * v6++),  a2,  a4);
    while (v6 < *(int *)(v5 + 24));
  }

  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10004D6E0( wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*((void *)this + 2) + 8 * v5);
      *(_BYTE *)a2 = 10;
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 32);
      if (v7 > 0x7F)
      {
        uint64_t v8 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v7,  (int)a2 + 1,  a3);
      }

      else
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v7;
        uint64_t v8 = (char *)a2 + 2;
      }

      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10004C710(v6, (uint64_t)v8, a3);
      ++v5;
    }

    while (v5 < *((int *)this + 6));
  }

  uint64_t v11 = (void *)*((void *)this + 1);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v10,  a2,  a3);
  }
}

uint64_t sub_10004D798(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0LL;
    do
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10004C7A0( *(void *)(*(void *)(a1 + 16) + 8 * v4),  a2);
      int v6 = (int)v5;
      else {
        int v7 = 1;
      }
      uint64_t v3 = (v6 + v3 + v7);
      ++v4;
    }

    while (v4 < *(int *)(a1 + 24));
  }

  uint64_t v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v3;
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_10004D834( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  1925LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_10004D1E4(a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_10004D8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10004D8F4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_10004D93C()
{
  return 1LL;
}

uint64_t sub_10004D944()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F57A0;
}

void sub_10004D9BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_10004D9D0(void *a1)
{
  *a1 = off_1007A39A0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0LL;
  a1[3] = 0LL;
  a1[4] = 0LL;
  return a1;
}

void sub_10004DA08(_Unwind_Exception *a1)
{
}

uint64_t sub_10004DA1C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  2173LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 16) = v6;
      int v5 = *(_DWORD *)(a2 + 36);
    }

    if ((v5 & 2) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 24) = v7;
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10004DAD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_10004DAE8(uint64_t a1)
{
  *(void *)a1 = off_1007A39A0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10004DB18(uint64_t a1)
{
  *(void *)a1 = off_1007A39A0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete(v2);
}

uint64_t sub_10004DB4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + sub_100012358(v1 - 32) = a2;
  return result;
}

void *sub_10004DB54()
{
  uint64_t v0 = operator new(0x28uLL);
  sub_10004D9D0(v0);
  return v0;
}

void sub_10004DB80(_Unwind_Exception *a1)
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10004DB94(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0LL;
    *(void *)(a1 + 24) = 0LL;
  }

  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10004DBB4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_22;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        int v10 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 17)
        {
          *((void *)this + 1) = v10 + 1;
          goto LABEL_16;
        }
      }

      if (TagFallback >> 3 != 2)
      {
        int v9 = TagFallback & 7;
        goto LABEL_22;
      }

      int v9 = TagFallback & 7;
      if (v9 == 1) {
        break;
      }
LABEL_22:
      if (v9 == 4) {
        return 1LL;
      }
    }

uint64_t sub_10004DD20( uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  (int)a2,  *(double *)(this + 16),  a3);
    int v5 = *(_DWORD *)(v4 + 36);
  }

  if ((v5 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v4 + 24),  a3);
  }
  char v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
    }
  }

  return this;
}

uint64_t sub_10004DD98(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 1) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    *(_BYTE *)a2 = 9;
    *(void *)(a2 + 1) = v4;
    a2 += 9LL;
    int v3 = *(_DWORD *)(a1 + 36);
  }

  if ((v3 & 2) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    *(_BYTE *)a2 = 17;
    *(void *)(a2 + 1) = v5;
    a2 += 9LL;
  }

  char v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (!v8 || *v7 == v7[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v6,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

uint64_t sub_10004DE60(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if (*(_BYTE *)(a1 + 36)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0LL;
  }
  char v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v5;
  }
  return v5;
}

uint64_t sub_10004DEC4( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  2161LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_10004DA1C((uint64_t)a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_10004DF6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10004DF84(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_10004DFCC()
{
  return 1LL;
}

uint64_t sub_10004DFD4()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F57B0;
}

void sub_10004E04C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10004E060(uint64_t a1)
{
  *(void *)a1 = off_1007A3A50;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 60) = 0u;
  *(_OWORD *)(a1 + sub_100012358(v1 - 32) = 0u;
  *(_OWORD *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_10004E0A0(_Unwind_Exception *a1)
{
}

uint64_t sub_10004E0B4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v20,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  2785LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v20,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v19, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }

  int v5 = *(_DWORD *)(a2 + 72);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if ((v5 & 1) != 0)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 72) |= 1u;
    *(void *)(a1 + 16) = v9;
    int v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }

  int v10 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 72) |= 2u;
  *(_DWORD *)(a1 + 24) = v10;
  int v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }

LABEL_24:
  int v13 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 72) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v13;
  int v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_26:
  int v15 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 72) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v15;
  int v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    int v6 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(_DWORD *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v6;
    int v5 = *(_DWORD *)(a2 + 72);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 44),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }

  int v13 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 72) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v13;
  int v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_26:
  int v15 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 72) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v15;
  int v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    int v6 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(_DWORD *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v6;
    int v5 = *(_DWORD *)(a2 + 72);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 44),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }

  int v11 = *(void *)(v5 + 56);
  if (!v11) {
    int v11 = *(void *)(qword_100800100 + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  v11,  a2,  a4);
  if ((*(_DWORD *)(v5 + 80) & 0x80) != 0)
  {
LABEL_27:
    int v12 = *(void *)(v5 + 64);
    if (!v12) {
      int v12 = *(void *)(qword_100800100 + 64);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  v12,  a2,  a4);
  }

  int v18 = *(void **)(a1 + 8);
  if (v18 && *v18 != v18[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v4;
  return v4;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(unsigned __int8 *)(v5 + 30),  (BOOL)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }

  int v16 = *(_BYTE *)(a1 + 30);
  *(_BYTE *)a2 = 64;
  *(_BYTE *)(a2 + 1) = v16;
  a2 += 2LL;
  char v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x100) == 0)
  {
LABEL_10:
    if ((v3 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_26:
    int v18 = *(_BYTE *)(a1 + 32);
    *(_BYTE *)a2 = 80;
    *(_BYTE *)(a2 + 1) = v18;
    a2 += 2LL;
    if ((*(_DWORD *)(a1 + 40) & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }

    int v18 = *(_DWORD *)(a2 + 56);
    a1[17] |= 0x10u;
    a1[14] = v18;
    if ((*(_DWORD *)(a2 + 68) & 0x40) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_25;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  int v17 = *((void *)this + 5);
  *(_BYTE *)uint64_t v4 = 34;
  else {
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v17 + 23);
  }
  if (v18 > 0x7F)
  {
    char v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v18,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v18;
    char v19 = (_DWORD)v4 + 2;
  }

  uint64_t v20 = *(char *)(v17 + 23);
  if (v20 >= 0) {
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17;
  }
  else {
    uint64_t v21 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v17;
  }
  if (v20 >= 0) {
    int v22 = (const void *)*(unsigned __int8 *)(v17 + 23);
  }
  else {
    int v22 = (const void *)*(unsigned int *)(v17 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v21,  v22,  v19,  a4);
  int v6 = *((_DWORD *)this + 24);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_43;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(double *)(v4 + 64),  a3);
  int v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }

  int v17 = *((void *)this + 8);
  *(_BYTE *)a2 = 57;
  *(void *)(a2 + 1) = v17;
  a2 += 9LL;
  int v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_38;
  }

  int v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v4;
  return v4;
}

  int v14 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 68) |= 8u;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v14;
  int v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_26:
    int v16 = *(const std::string **)(a2 + 40);
    *(_DWORD *)(a1 + 68) |= 0x20u;
    int v17 = *(std::string **)(a1 + 40);
    if (v17 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      int v17 = (std::string *)operator new(0x18uLL);
      v17->__r_.__value_.__l.__size_ = 0LL;
      v17->__r_.__value_.__l.__cap_ = 0LL;
      v17->__r_.__value_.__r.__words[0] = 0LL;
      *(void *)(a1 + 40) = v17;
    }

    std::string::operator=(v17, v16);
    int v5 = *(_DWORD *)(a2 + 68);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    goto LABEL_29;
  }

  int v12 = *(uint64_t **)(v5 + 40);
  if (*((char *)v12 + 23) < 0)
  {
    int v12 = (uint64_t *)*v12;
    int v13 = *(void *)(*(void *)(v5 + 40) + 8LL);
  }

  else
  {
    int v13 = *((unsigned __int8 *)v12 + 23);
  }

  wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v12, v13, 1LL);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(6LL, *(void *)(v5 + 40), a2);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 36),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }

  int v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v4;
  return v4;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 48),  a3);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }

  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
    char v3 = *(_DWORD *)(a1 + 96);
  }

  else
  {
    int v15 = 2;
  }

  v4 += v15;
  if ((v3 & 0x20) != 0)
  {
LABEL_28:
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if (v16 >= 0x80)
    {
      char v3 = *(_DWORD *)(a1 + 96);
    }

    else
    {
      int v17 = 2;
    }

    v4 += v17;
  }

  LODWORD(v4) = v4
              + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32),  (unint64_t)a2)
              + 1;
  char v3 = *(_DWORD *)(a1 + 232);
  if ((v3 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_7:
  if ((v3 & 0x40) != 0) {
    goto LABEL_26;
  }
LABEL_32:
  if ((v3 & 0x80) != 0) {
    uint64_t v4 = (v4 + 9);
  }
  else {
    uint64_t v4 = v4;
  }
LABEL_35:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_71;
  }
  if ((v3 & 0x100) != 0)
  {
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
      char v3 = *(_DWORD *)(a1 + 232);
    }

    else
    {
      int v14 = 1;
    }

    uint64_t v4 = (v4 + v14 + 2);
    if ((v3 & 0x200) == 0)
    {
LABEL_38:
      if ((v3 & 0x400) == 0) {
        goto LABEL_39;
      }
      goto LABEL_53;
    }
  }

  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_38;
  }

  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    char v3 = *(_DWORD *)(a1 + 232);
  }

  else
  {
    int v16 = 1;
  }

  uint64_t v4 = (v4 + v16 + 2);
  if ((v3 & 0x400) == 0)
  {
LABEL_39:
    if ((v3 & 0x800) == 0) {
      goto LABEL_40;
    }
    goto LABEL_57;
  }

  LODWORD(v4) = v4
              + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32),  (unint64_t)a2)
              + 1;
  char v3 = *(_DWORD *)(a1 + 68);
  if ((v3 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_7:
  if ((v3 & 0x40) != 0) {
    goto LABEL_26;
  }
LABEL_32:
  if ((v3 & 0x80) != 0) {
    uint64_t v4 = (v4 + 9);
  }
  else {
    uint64_t v4 = v4;
  }
LABEL_35:
  int v13 = *(void **)(a1 + 8);
  if (v13 && *v13 != v13[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(_DWORD *)(v5 + 72),  (int)a2,  a4);
  int v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 0x100) == 0)
  {
LABEL_13:
    if ((v7 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }

  int v18 = *(void **)(a1 + 8);
  if (v18 && *v18 != v18[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v4;
  return v4;
}

  int v18 = *(_DWORD *)(a1 + 40);
  char v19 = v18 + v4;
  if (v18 >= 1)
  {
    uint64_t v20 = 0LL;
    do
    {
      uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000ACA74( *(void *)(*(void *)(a1 + 32) + 8 * v20),  a2);
      int v22 = (int)v21;
      else {
        BOOL v23 = 1;
      }
      v19 += v22 + v23;
      ++v20;
    }

    while (v20 < *(int *)(a1 + 40));
  }

  int v24 = *(_DWORD *)(a1 + 64);
  char v25 = (v24 + v19);
  if (v24 >= 1)
  {
    uint64_t v26 = 0LL;
    do
    {
      uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000AD350( *(void *)(*(void *)(a1 + 56) + 8 * v26),  a2);
      unsigned int v28 = (int)v27;
      else {
        uint64_t v29 = 1;
      }
      char v25 = (v28 + v25 + v29);
      ++v26;
    }

    while (v26 < *(int *)(a1 + 64));
  }

  uint64_t v30 = *(void **)(a1 + 8);
  if (v30 && *v30 != v30[1]) {
    char v25 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v25;
  *(_DWORD *)(a1 + 80) = v25;
  return v25;
}

  int v18 = *(void **)(a1 + 8);
  if (v18 && *v18 != v18[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v4;
  return v4;
}

  int v18 = v4 + 9;
  if ((v3 & 4) == 0) {
    int v18 = v4;
  }
  if ((v3 & 8) != 0) {
    int v5 = v18 + 9;
  }
  else {
    int v5 = v18;
  }
  if ((v3 & 0x10) != 0)
  {
    char v19 = *(void *)(a1 + 48);
    uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
    uint64_t v21 = v20;
    int v22 = *(void *)(v19 + 8);
    if ((v20 & 0x80u) == 0) {
      BOOL v23 = *(unsigned __int8 *)(v19 + 23);
    }
    else {
      BOOL v23 = v22;
    }
    if (v23 >= 0x80)
    {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23,  a2);
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      int v22 = *(void *)(v19 + 8);
      char v3 = *(_DWORD *)(a1 + 124);
      uint64_t v21 = *(_BYTE *)(v19 + 23);
    }

    else
    {
      int v24 = 1;
    }

    if (v21 < 0) {
      uint64_t v20 = v22;
    }
    v5 += v24 + v20 + 1;
    if ((v3 & 0x20) == 0)
    {
LABEL_31:
      if ((v3 & 0x40) == 0) {
        goto LABEL_32;
      }
LABEL_47:
      uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
      if (v27 >= 0x80)
      {
        char v3 = *(_DWORD *)(a1 + 124);
      }

      else
      {
        unsigned int v28 = 2;
      }

      v5 += v28;
      if ((v3 & 0x80) == 0) {
        goto LABEL_60;
      }
      goto LABEL_51;
    }
  }

  else if ((v3 & 0x20) == 0)
  {
    goto LABEL_31;
  }

  char v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if (v25 >= 0x80)
  {
    uint64_t v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    char v3 = *(_DWORD *)(a1 + 124);
  }

  else
  {
    uint64_t v26 = 2;
  }

  v5 += v26;
  if ((v3 & 0x40) != 0) {
    goto LABEL_47;
  }
LABEL_32:
  if ((v3 & 0x80) == 0) {
    goto LABEL_60;
  }
LABEL_51:
  uint64_t v29 = *(void *)(a1 + 64);
  uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
  uint64_t v31 = v30;
  uint64_t v32 = *(void *)(v29 + 8);
  if ((v30 & 0x80u) == 0) {
    uint64_t v33 = *(unsigned __int8 *)(v29 + 23);
  }
  else {
    uint64_t v33 = v32;
  }
  if (v33 >= 0x80)
  {
    uint64_t v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v33,  a2);
    uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
    uint64_t v32 = *(void *)(v29 + 8);
    char v3 = *(_DWORD *)(a1 + 124);
    uint64_t v31 = *(_BYTE *)(v29 + 23);
  }

  else
  {
    uint64_t v34 = 1;
  }

  if (v31 < 0) {
    uint64_t v30 = v32;
  }
  v5 += v34 + v30 + 1;
LABEL_60:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v35 = *(void *)(a1 + 72);
      uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
      uint64_t v37 = v36;
      uint64_t v38 = *(void *)(v35 + 8);
      if ((v36 & 0x80u) == 0) {
        uint64_t v39 = *(unsigned __int8 *)(v35 + 23);
      }
      else {
        uint64_t v39 = v38;
      }
      if (v39 >= 0x80)
      {
        uint64_t v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v39,  a2);
        uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
        uint64_t v38 = *(void *)(v35 + 8);
        char v3 = *(_DWORD *)(a1 + 124);
        uint64_t v37 = *(_BYTE *)(v35 + 23);
      }

      else
      {
        uint64_t v40 = 1;
      }

      if (v37 < 0) {
        uint64_t v36 = v38;
      }
      v5 += v40 + v36 + 1;
    }

    if ((v3 & 0x200) != 0)
    {
      uint64_t v41 = *(void *)(a1 + 80);
      uint64_t v42 = *(unsigned __int8 *)(v41 + 23);
      NSFileAttributeKey v43 = v42;
      char v44 = *(void *)(v41 + 8);
      if ((v42 & 0x80u) == 0) {
        uint64_t v45 = *(unsigned __int8 *)(v41 + 23);
      }
      else {
        uint64_t v45 = v44;
      }
      if (v45 >= 0x80)
      {
        uint64_t v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v45,  a2);
        uint64_t v42 = *(unsigned __int8 *)(v41 + 23);
        char v44 = *(void *)(v41 + 8);
        char v3 = *(_DWORD *)(a1 + 124);
        NSFileAttributeKey v43 = *(_BYTE *)(v41 + 23);
      }

      else
      {
        uint64_t v46 = 1;
      }

      if (v43 < 0) {
        uint64_t v42 = v44;
      }
      v5 += v46 + v42 + 1;
    }

    if ((v3 & 0x400) != 0) {
      v5 += 9;
    }
  }

  uint64_t v47 = *(_DWORD *)(a1 + 104);
  uint64_t v48 = (v47 + v5);
  if (v47 >= 1)
  {
    uint64_t v49 = 0LL;
    do
    {
      uint64_t v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000AC26C( *(void *)(*(void *)(a1 + 96) + 8 * v49),  a2);
      uint64_t v51 = (int)v50;
      else {
        uint64_t v52 = 1;
      }
      uint64_t v48 = (v51 + v48 + v52);
      ++v49;
    }

    while (v49 < *(int *)(a1 + 104));
  }

  uint64_t v53 = *(void **)(a1 + 8);
  if (v53 && *v53 != v53[1]) {
    uint64_t v48 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v48;
  *(_DWORD *)(a1 + 120) = v48;
  return v48;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  (int)a2,  *(double *)(v5 + 64),  a3);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(unsigned __int8 *)(v5 + 48),  (BOOL)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }

  int v18 = *(void **)(a1 + 8);
  if (v18 && *v18 != v18[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v4;
  return v4;
}

  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_100800498 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v9,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_30;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  (int)a2,  *(double *)(v5 + 64),  a3);
  if ((*(_DWORD *)(v5 + 84) & 0x100) != 0) {
LABEL_10:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  (int)a2,  *(double *)(v5 + 72),  a3);
LABEL_11:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(unsigned __int8 *)(v5 + 52),  (BOOL)a2,  a4);
  if ((*(_DWORD *)(v5 + 68) & 0x40) != 0) {
LABEL_8:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(7LL, *(void *)(v5 + 56), a2);
LABEL_9:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  (int)a2,  *(double *)(v5 + 64),  a3);
  if ((*(_DWORD *)(v5 + 88) & 0x200) != 0) {
LABEL_11:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  (int)a2,  *(double *)(v5 + 72),  a3);
LABEL_12:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(unsigned __int8 *)(v5 + 37),  (BOOL)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(float *)(v5 + 28),  a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }

  int v14 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 60) |= 0x10u;
  *(void *)(a1 + 40) = v14;
  int v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_10:
  if ((v5 & 0x40) != 0)
  {
LABEL_11:
    int v6 = *(_BYTE *)(a2 + 53);
    *(_DWORD *)(a1 + 60) |= 0x40u;
    *(_BYTE *)(a1 + 53) = v6;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  int v13 = *(_BYTE *)(a2 + 32);
  *(_DWORD *)(a1 + 56) |= 4u;
  *(_BYTE *)(a1 + sub_100012358(v1 - 32) = v13;
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(_DWORD *)(v5 + 48),  (int)a2,  a4);
  if ((*(_DWORD *)(v5 + 56) & 0x200) != 0) {
LABEL_11:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(10LL, *(void *)(v5 + 40), a2);
LABEL_12:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  int v16 = *((void *)this + 8);
  *(_BYTE *)uint64_t v4 = 57;
  *(void *)((char *)v4 + 1) = v16;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }

      if (v9 == 4) {
        return 1LL;
      }
    }

    uint64_t v9 = TagFallback & 7;
    if (v9 != 1) {
      goto LABEL_24;
    }
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0LL;
    }
    *(void *)(a1 + 16) = v14;
    int v10 = *(_DWORD *)(a1 + 36) | 1;
    *(_DWORD *)(a1 + 36) = v10;
    int v11 = (_BYTE *)*((void *)this + 1);
    if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
    {
      *((void *)this + 1) = v11 + 1;
LABEL_16:
      *(_DWORD *)(a1 + 36) = v10 | 2;
      int v12 = *(void **)(a1 + 24);
      if (v12 == (void *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        int v12 = operator new(0x18uLL);
        v12[1] = 0LL;
        v12[2] = 0LL;
        *int v12 = 0LL;
        *(void *)(a1 + 24) = v12;
      }

      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes(this, v12);
      if (!(_DWORD)result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }

  *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
  uint64_t result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 56),  a3);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }

  int v16 = *((void *)this + 5);
  *(_BYTE *)uint64_t v4 = 33;
  *(void *)((char *)v4 + 1) = v16;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 28);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }

  char v8 = *((_DWORD *)this + 8);
  *(_BYTE *)a2 = 37;
  *(_DWORD *)(a2 + 1) = v8;
  a2 += 5LL;
  uint64_t v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }

  int v14 = (void *)*((void *)this + 1);
  int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v12 = v14;
  if (!v14 || *v12 == v12[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v13,  v3,  a3);
  }
}

        int v14 = 1000 * v13.__d_.__rep_;
LABEL_25:
        if (v14 > (v12.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
        {
          v15.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_28:
          std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 32), &__lk, v15);
          std::chrono::steady_clock::now();
          goto LABEL_29;
        }
      }

      v15.__d_.__rep_ = v14 + v12.__d_.__rep_;
      goto LABEL_28;
    }

  _BYTE *v10 = v19 || v21;
  if (v15 || v16)
  {
    sub_1001A9A1C(v24, a2, v10, a4);
    goto LABEL_31;
  }

  if (!v14)
  {
    a4->__r_.__value_.__r.__words[0] = 0LL;
    a4->__r_.__value_.__l.__size_ = 0LL;
    a4->__r_.__value_.__l.__cap_ = 0LL;
    goto LABEL_31;
  }

  return v9;
}

  if (*(_BYTE *)(a2 + 72))
  {
    char v19 = *(double *)(a2 + 24);
    sub_1000065CC(__p, "measured displacement enter timestamp");
    sub_1001E23EC((uint64_t)&v45, 0xCu, 0.0, 409.5, 0.1, v19);
    if (v44 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v20 = *(double *)(a2 + 32);
    sub_1000065CC(__p, "measured displacement applicability timestamp");
    sub_1001E23EC((uint64_t)&v45, 6u, 0.0, 6.3, 0.1, v20);
    if (v44 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v21 = *(_DWORD *)(a2 + 40);
    if (v21)
    {
      if (v21 != 1)
      {
LABEL_43:
        uint64_t v26 = *(double *)(a2 + 48);
        sub_1000065CC(__p, "measured displacement h1");
        sub_1001E23EC((uint64_t)&v45, 0xDu, -409.6, 409.5, 0.1, v26);
        if (v44 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v27 = *(double *)(a2 + 56);
        sub_1000065CC(__p, "measured displacement h2");
        sub_1001E23EC((uint64_t)&v45, 0xDu, -409.6, 409.5, 0.1, v27);
        if (v44 < 0) {
          operator delete(__p[0]);
        }
        unsigned int v28 = *(double *)(a2 + 64);
        sub_1000065CC(__p, "measured displacement v");
        sub_1001E23EC((uint64_t)&v45, 9u, -25.6, 25.5, 0.1, v28);
        goto LABEL_48;
      }

      sub_1000065CC(__p, "measured displacement source::INERTIAL");
      sub_1001E22FC((uint64_t)&v45, 1u, 1u);
    }

    else
    {
      sub_1000065CC(__p, "measured displacement source::VIO");
      sub_1001E22FC((uint64_t)&v45, 1u, 0);
    }

    if (v44 < 0) {
      operator delete(__p[0]);
    }
    goto LABEL_43;
  }

  if (!*(_BYTE *)(a2 + 112)) {
    goto LABEL_50;
  }
  int v22 = *v15;
  sub_1000065CC(__p, "measured velocity enter timestamp");
  sub_1001E23EC((uint64_t)&v45, 0xCu, 0.0, 409.5, 0.1, v22);
  if (v44 < 0) {
    operator delete(__p[0]);
  }
  BOOL v23 = *(double *)(a2 + 88);
  sub_1000065CC(__p, "measured velocity applicability timestamp");
  sub_1001E23EC((uint64_t)&v45, 6u, 0.0, 6.3, 0.1, v23);
  if (v44 < 0) {
    operator delete(__p[0]);
  }
  int v24 = *(double *)(a2 + 96);
  sub_1000065CC(__p, "measured velocity change h1");
  sub_1001E23EC((uint64_t)&v45, 8u, -6.4, 6.35, 0.05, v24);
  if (v44 < 0) {
    operator delete(__p[0]);
  }
  char v25 = *(double *)(a2 + 104);
  sub_1000065CC(__p, "measured velocity change h2");
  sub_1001E23EC((uint64_t)&v45, 8u, -6.4, 6.35, 0.05, v25);
LABEL_48:
  if (v44 < 0) {
    operator delete(__p[0]);
  }
LABEL_50:
  if (*(_BYTE *)(a2 + 160))
  {
    uint64_t v29 = *(double *)(a2 + 136);
    sub_1000065CC(__p, "northerly offset");
    sub_1001E23EC((uint64_t)&v45, 0xAu, -512.0, 511.0, 1.0, v29);
    if (v44 < 0) {
      operator delete(__p[0]);
    }
    if (*(_BYTE *)(a2 + 160))
    {
      uint64_t v30 = *(double *)(a2 + 144);
      sub_1000065CC(__p, "easterly offset");
      sub_1001E23EC((uint64_t)&v45, 0xAu, -512.0, 511.0, 1.0, v30);
      if (v44 < 0) {
        operator delete(__p[0]);
      }
      if (*(_BYTE *)(a2 + 160))
      {
        uint64_t v31 = *(_DWORD *)(a2 + 152);
        sub_1000065CC(__p, "location data uncertainty");
        sub_1001E22FC((uint64_t)&v45, 4u, v31);
        if (v44 < 0) {
          operator delete(__p[0]);
        }
        goto LABEL_59;
      }
    }

  if ((v6 & 8) == 0) {
    goto LABEL_30;
  }
LABEL_25:
  uint64_t v33 = sub_1001E2B94((uint64_t)__p, 0xAu, (double *)&v55, -512.0, 1.0);
  uint64_t v34 = sub_1001E2B94((uint64_t)__p, 0xAu, &v53, -512.0, 1.0);
  uint64_t v35 = sub_1001E2A94((uint64_t)__p, 4u, (int *)&v52);
  uint64_t v36 = v33 && v34;
  if (!v35) {
    uint64_t v36 = 0;
  }
  v12 &= v36;
  uint64_t v37 = v55;
  uint64_t v38 = v53;
  uint64_t v39 = v52;
  if (!*(_BYTE *)(a2 + 160)) {
    *(_BYTE *)(a2 + 160) = 1;
  }
  *(void *)(a2 + 136) = v37;
  *(double *)(a2 + 144) = v38;
  *(_DWORD *)(a2 + 152) = v39;
LABEL_30:
  else {
    uint64_t v40 = 0;
  }
  if (v57 == 1)
  {
    uint64_t v41 = 257;
  }

  else
  {
    if (v57) {
      goto LABEL_72;
    }
    uint64_t v41 = 256;
  }

  *(_WORD *)a3 = v41;
  if (v57 == 1)
  {
    uint64_t v42 = 257;
  }

  else
  {
    if (v57) {
      goto LABEL_72;
    }
    uint64_t v42 = 256;
  }

  *(_WORD *)(a3 + 2) = v42;
  if (v57 == 1)
  {
    NSFileAttributeKey v43 = 257;
  }

  else
  {
    if (v57) {
      goto LABEL_72;
    }
    NSFileAttributeKey v43 = 256;
  }

  *(_WORD *)(a3 + 4) = v43;
  if (v57 == 1)
  {
    uint64_t v45 = 257;
  }

  else
  {
    if (v57) {
      goto LABEL_72;
    }
    uint64_t v45 = 256;
  }

  *(_WORD *)(a3 + 6) = v45;
  uint64_t v46 = 1;
  if (v57 != 1)
  {
    if (v57) {
      goto LABEL_72;
    }
    uint64_t v46 = 0;
  }

  *(_BYTE *)(a3 + std::iostream::~basic_iostream(v2, v3 + 8) = v46;
  else {
    uint64_t v47 = 0LL;
  }
  if (!v57)
  {
    uint64_t v48 = 256;
    goto LABEL_77;
  }

  if (v57 != 1)
  {
LABEL_72:
    uint64_t v47 = 0LL;
    goto LABEL_73;
  }

  uint64_t v48 = 257;
LABEL_77:
  *(_WORD *)(a2 + 16std::iostream::~basic_iostream(v2, v3 + 8) = v48;
LABEL_73:
  if (*(void *)__p)
  {
    *(void *)&__p[8] = *(void *)__p;
    operator delete(*(void **)__p);
  }

  return v47;
}

  if (*((_BYTE *)a3 + 72))
  {
    v8[24] |= 0x80u;
    int v15 = (char *)*((void *)v8 + 9);
    if (!v15)
    {
      int v15 = (char *)operator new(0x48uLL);
      sub_10005D948((uint64_t)v15);
      *((void *)v8 + 9) = v15;
      if (!*((_BYTE *)a3 + 72)) {
LABEL_34:
      }
        sub_100006080();
    }

    int v16 = *((_DWORD *)a3 + 10);
    if (v16)
    {
      if (v16 != 1)
      {
        int v17 = *((_DWORD *)v15 + 16);
LABEL_36:
        *((_OWORD *)v15 + 1) = *((_OWORD *)a3 + 3);
        *((void *)v15 + 4) = a3[8];
        *((_DWORD *)v15 + 16) = v17 | 0x3E;
        *(_OWORD *)(v15 + 40) = *(_OWORD *)(a3 + 3);
        goto LABEL_37;
      }

      if (sub_10005E498(2u))
      {
        int v17 = *((_DWORD *)v15 + 16) | 1;
        *((_DWORD *)v15 + 16) = v17;
        int v18 = 2;
        goto LABEL_33;
      }
    }

    else if (sub_10005E498(1u))
    {
      int v17 = *((_DWORD *)v15 + 16) | 1;
      *((_DWORD *)v15 + 16) = v17;
      int v18 = 1;
LABEL_33:
      *((_DWORD *)v15 + 14) = v18;
      if (!*((_BYTE *)a3 + 72)) {
        goto LABEL_34;
      }
      goto LABEL_36;
    }

    __assert_rtn( "set_source",  "CLPNearbyd.pb.h",  4520,  "::CLP::LogEntry::Nearbyd::NearbydEntry_FindeeDisplacementSource_IsValid(value)");
  }

      if (v12 > (v10.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
      {
        v13.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_27:
        std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 840), &__lk, v13);
        std::chrono::steady_clock::now();
        continue;
      }

  v47.receiver = self;
  v47.super_class = (Class)&OBJC_CLASS___NIServerFindingDiscoveryProvider;
  int v24 = -[NIServerFindingDiscoveryProvider init](&v47, "init");
  char v25 = v24;
  if (v24)
  {
    std::string::operator=((std::string *)(v24 + 8), (const std::string *)a3);
    v25[32] = v16;
    objc_storeWeak((id *)v25 + 5, v19);
    objc_storeStrong((id *)v25 + 6, a11);
    v25[56] = v15;
    v25[57] = v14;
    *((_DWORD *)v25 + 15) = a7;
    uint64_t v26 = (void *)*((void *)v25 + 8);
    *((void *)v25 + std::iostream::~basic_iostream(v2, v3 + 8) = 0LL;

    v25[72] = 0;
    uint64_t v27 = (void *)*((void *)v25 + 10);
    *((void *)v25 + 10) = 0LL;

    v25[88] = 0;
    unsigned int v28 = (void *)*((void *)v25 + 12);
    *((void *)v25 + 12) = 0LL;

    uint64_t v29 = (void *)*((void *)v25 + 13);
    *((void *)v25 + 13) = 0LL;

    uint64_t v30 = (void *)*((void *)v25 + 25);
    *((void *)v25 + 25) = 0LL;

    v25[112] = 0;
    uint64_t v31 = (void *)*((void *)v25 + 15);
    *((void *)v25 + 15) = 0LL;

    uint64_t v32 = objc_opt_new(&OBJC_CLASS___NSMutableSet);
    uint64_t v33 = (void *)*((void *)v25 + 16);
    *((void *)v25 + 16) = v32;

    uint64_t v34 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    uint64_t v35 = (void *)*((void *)v25 + 17);
    *((void *)v25 + 17) = v34;

    uint64_t v36 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    uint64_t v37 = (void *)*((void *)v25 + 18);
    *((void *)v25 + 1std::iostream::~basic_iostream(v2, v3 + 8) = v36;

    uint64_t v38 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    uint64_t v39 = (void *)*((void *)v25 + 19);
    *((void *)v25 + 19) = v38;

    *((double *)v25 + 20) = fmax(a8, 30.0);
    uint64_t v40 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    uint64_t v41 = (void *)*((void *)v25 + 21);
    *((void *)v25 + 21) = v40;

    uint64_t v42 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    NSFileAttributeKey v43 = (void *)*((void *)v25 + 22);
    *((void *)v25 + 22) = v42;

    char v44 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    uint64_t v45 = (void *)*((void *)v25 + 23);
    *((void *)v25 + 23) = v44;

    *((double *)v25 + 24) = a9;
  }

  return (NIServerFindingDiscoveryProvider *)v25;
}

void sub_10004E2BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_10004E2D4(uint64_t a1)
{
  *(void *)a1 = off_1007A3A50;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10004E304(uint64_t a1)
{
  *(void *)a1 = off_1007A3A50;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete(v2);
}

uint64_t sub_10004E338(uint64_t result, int a2)
{
  *(_DWORD *)(result + 6std::iostream::~basic_iostream(v2, v3 + 8) = a2;
  return result;
}

void *sub_10004E340()
{
  uint64_t v0 = operator new(0x50uLL);
  sub_10004E060((uint64_t)v0);
  return v0;
}

void sub_10004E36C(_Unwind_Exception *a1)
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10004E380(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 72);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + sub_100012358(v1 - 32) = 0u;
  }

  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(a1 + 60) = 0LL;
    *(void *)(a1 + 52) = 0LL;
  }

  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 16) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10004E3BC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v42 = (unint64_t *)(a1 + 16);
  NSFileAttributeKey v43 = (unsigned int *)(a1 + 24);
  char v44 = (unsigned int *)(a1 + 28);
  uint64_t v45 = (unsigned int *)(a1 + 32);
  uint64_t v46 = (unsigned int *)(a1 + 36);
  uint64_t v47 = (unsigned int *)(a1 + 40);
  int v6 = (unsigned int *)(a1 + 44);
  int v7 = (unsigned int *)(a1 + 48);
  char v8 = (unsigned int *)(a1 + 52);
  uint64_t v9 = (unsigned int *)(a1 + 56);
  int v10 = (unsigned int *)(a1 + 60);
  int v11 = (unsigned int *)(a1 + 64);
  unsigned int v12 = a1 + 8;
  while (2)
  {
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v13;
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v13 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v15 = TagFallback & 7;
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v17 < v16 && (*v17 & 0x80000000) == 0)
        {
          *uint64_t v42 = *v17;
          int v18 = v17 + 1;
          *((void *)this + 1) = v18;
LABEL_40:
          *(_DWORD *)(a1 + 72) |= 1u;
          if ((unint64_t)v18 < v16 && *v18 == 16)
          {
            char v19 = v18 + 1;
            *((void *)this + 1) = v19;
            goto LABEL_43;
          }

          continue;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v42);
        if ((_DWORD)result)
        {
          int v18 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
          goto LABEL_40;
        }

        break;
      case 2u:
        int v15 = TagFallback & 7;
        char v19 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_43:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v30 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int *v43 = *v19;
          uint64_t v30 = v19 + 1;
          *((void *)this + 1) = v30;
        }

        *(_DWORD *)(a1 + 72) |= 2u;
        uint64_t v20 = v30 + 1;
        *((void *)this + 1) = v20;
LABEL_51:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v44);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v31 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          *char v44 = *v20;
          uint64_t v31 = v20 + 1;
          *((void *)this + 1) = v31;
        }

        *(_DWORD *)(a1 + 72) |= 4u;
        uint64_t v21 = v31 + 1;
        *((void *)this + 1) = v21;
LABEL_59:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v45);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v32 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v45 = *v21;
          uint64_t v32 = v21 + 1;
          *((void *)this + 1) = v32;
        }

        *(_DWORD *)(a1 + 72) |= 8u;
        int v22 = v32 + 1;
        *((void *)this + 1) = v22;
LABEL_67:
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v33 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int *v46 = *v22;
          uint64_t v33 = v22 + 1;
          *((void *)this + 1) = v33;
        }

        *(_DWORD *)(a1 + 72) |= 0x10u;
        BOOL v23 = v33 + 1;
        *((void *)this + 1) = v23;
LABEL_75:
        if ((unint64_t)v23 >= v16 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v47);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v34 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v47 = *v23;
          uint64_t v34 = v23 + 1;
          *((void *)this + 1) = v34;
        }

        *(_DWORD *)(a1 + 72) |= 0x20u;
        int v24 = v34 + 1;
        *((void *)this + 1) = v24;
LABEL_83:
        if ((unint64_t)v24 >= v16 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v35 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int *v6 = *v24;
          uint64_t v35 = v24 + 1;
          *((void *)this + 1) = v35;
        }

        *(_DWORD *)(a1 + 72) |= 0x40u;
        char v25 = v35 + 1;
        *((void *)this + 1) = v25;
LABEL_91:
        if ((unint64_t)v25 >= v16 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v36 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          *int v7 = *v25;
          uint64_t v36 = v25 + 1;
          *((void *)this + 1) = v36;
        }

        *(_DWORD *)(a1 + 72) |= 0x80u;
        uint64_t v26 = v36 + 1;
        *((void *)this + 1) = v26;
LABEL_99:
        if ((unint64_t)v26 >= v16 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v37 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int *v8 = *v26;
          uint64_t v37 = v26 + 1;
          *((void *)this + 1) = v37;
        }

        *(_DWORD *)(a1 + 72) |= 0x100u;
        uint64_t v27 = v37 + 1;
        *((void *)this + 1) = v27;
LABEL_107:
        if ((unint64_t)v27 >= v16 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v38 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v9 = *v27;
          uint64_t v38 = v27 + 1;
          *((void *)this + 1) = v38;
        }

        *(_DWORD *)(a1 + 72) |= 0x200u;
        unsigned int v28 = v38 + 1;
        *((void *)this + 1) = v28;
LABEL_115:
        if ((unint64_t)v28 >= v16 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v39 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int *v10 = *v28;
          uint64_t v39 = v28 + 1;
          *((void *)this + 1) = v39;
        }

        *(_DWORD *)(a1 + 72) |= 0x400u;
        uint64_t v29 = v39 + 1;
        *((void *)this + 1) = v29;
LABEL_123:
        if ((unint64_t)v29 >= v16 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v40 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int *v11 = *v29;
          uint64_t v40 = (unsigned __int8 *)(v29 + 1);
          *((void *)this + 1) = v40;
        }

        *(_DWORD *)(a1 + 72) |= 0x800u;
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v15 = TagFallback & 7;
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_51;
      case 4u:
        int v15 = TagFallback & 7;
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_59;
      case 5u:
        int v15 = TagFallback & 7;
        int v22 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_67;
      case 6u:
        int v15 = TagFallback & 7;
        BOOL v23 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_75;
      case 7u:
        int v15 = TagFallback & 7;
        int v24 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_83;
      case 8u:
        int v15 = TagFallback & 7;
        char v25 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_91;
      case 9u:
        int v15 = TagFallback & 7;
        uint64_t v26 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_99;
      case 0xAu:
        int v15 = TagFallback & 7;
        uint64_t v27 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_107;
      case 0xBu:
        int v15 = TagFallback & 7;
        unsigned int v28 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_115;
      case 0xCu:
        int v15 = TagFallback & 7;
        uint64_t v29 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_123;
      default:
        int v15 = TagFallback & 7;
LABEL_34:
        if (v15 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_10004EA44( uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 72);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(this + 16),  (unint64_t)a2,  a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 24),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }

LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 28),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 28),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }

  int v13 = (unsigned int *)*((void *)this + 4);
  if (!v13) {
    int v13 = *(unsigned int **)(qword_100800100 + 32);
  }
  *(_BYTE *)uint64_t v3 = 26;
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[10];
  if (v14 > 0x7F)
  {
    int v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v14;
    int v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }

  uint64_t v3 = sub_10004D6E0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
  uint64_t v5 = *((_DWORD *)this + 20);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(float *)(v5 + 56),  a3);
  if ((*(_DWORD *)(v5 + 64) & 0x20) == 0) {
    goto LABEL_24;
  }
LABEL_21:
  int v11 = *(void *)(v5 + 48);
  if (!v11) {
    int v11 = *(void *)(qword_100800148 + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  v11,  a2,  a4);
LABEL_24:
  int v14 = *(void **)(v5 + 8);
  int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v12 = v14;
  if (v14)
  {
    if (*v12 != v12[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v13, a2, a3);
    }
  }

  return this;
}

  int v13 = (unsigned int *)*((void *)this + 4);
  if (!v13) {
    int v13 = *(unsigned int **)(qword_100800148 + 32);
  }
  *(_BYTE *)uint64_t v3 = 26;
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[10];
  if (v14 > 0x7F)
  {
    int v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v14;
    int v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }

  uint64_t v3 = sub_10004D6E0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v15, a3);
  uint64_t v5 = *((_DWORD *)this + 16);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_32:
    char v19 = *((_DWORD *)this + 14);
    *(_BYTE *)uint64_t v3 = 45;
    *(_DWORD *)((char *)v3 + 1) = v19;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    if ((*((_DWORD *)this + 16) & 0x20) == 0) {
      goto LABEL_41;
    }
    goto LABEL_33;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(unsigned __int8 *)(v5 + 26),  (BOOL)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }

  unsigned int v12 = *(_BYTE *)(a1 + 26);
  *(_BYTE *)a2 = 32;
  *(_BYTE *)(a2 + 1) = v12;
  a2 += 2LL;
  uint64_t v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }

  if ((v9 & 0x200) != 0)
  {
    unsigned int v12 = *(_DWORD *)(a2 + 68);
    if (!sub_10005DC4C(v12)) {
      sub_10038BCD4();
    }
    *(_DWORD *)(a1 + 108) |= 0x200u;
    *(_DWORD *)(a1 + 6std::iostream::~basic_iostream(v2, v3 + 8) = v12;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  int v14 = *((void *)this + 4);
  *a2 = 33;
  *(void *)(a2 + 1) = v14;
  a2 += 9;
  int v6 = *((_DWORD *)this + 16);
  if ((v6 & 0x10) != 0) {
    goto LABEL_21;
  }
LABEL_12:
  if ((v6 & 0x20) != 0)
  {
LABEL_13:
    int v7 = *((void *)this + 6);
    *a2 = 49;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(double *)(v4 + 32),  a3);
  uint64_t v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }

  int v13 = *((void *)this + 4);
  *(_BYTE *)a2 = 25;
  *(void *)(a2 + 1) = v13;
  a2 += 9LL;
  uint64_t v5 = *((_DWORD *)this + 29);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }

  int v14 = (unsigned int *)*((void *)this + 4);
  if (!v14) {
    int v14 = *(unsigned int **)(qword_100800158 + 32);
  }
  *(_BYTE *)uint64_t v4 = 26;
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[6];
  if (v15 > 0x7F)
  {
    unint64_t v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v15;
    unint64_t v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_1000A9CB8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v16, a3, a4);
  int v6 = *((_DWORD *)this + 98);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_32:
    uint64_t v20 = (unsigned int *)*((void *)this + 6);
    if (!v20) {
      uint64_t v20 = *(unsigned int **)(qword_100800158 + 48);
    }
    *(_BYTE *)uint64_t v4 = 42;
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20[19];
    if (v21 > 0x7F)
    {
      int v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v21,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v21;
      int v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }

    uint64_t v4 = sub_1001089D4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v20, v22, a3);
    if ((*((_DWORD *)this + 98) & 0x20) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }

  int v13 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 68) |= 0x20u;
  *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v13;
  uint64_t v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x40) != 0) {
    goto LABEL_21;
  }
LABEL_11:
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    int v6 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 68) |= 0x80u;
    *(void *)(a1 + 56) = v6;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  if ((v5 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v5 & 0x100) != 0)
  {
    unsigned int v12 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 88) |= 0x100u;
    *(_DWORD *)(a1 + 52) = v12;
    uint64_t v5 = *(_DWORD *)(a2 + 88);
    if ((v5 & 0x200) == 0)
    {
LABEL_23:
      if ((v5 & 0x400) == 0) {
        goto LABEL_24;
      }
      goto LABEL_33;
    }
  }

  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_23;
  }

  int v13 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 88) |= 0x200u;
  *(_DWORD *)(a1 + 56) = v13;
  uint64_t v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x400) == 0)
  {
LABEL_24:
    if ((v5 & 0x800) == 0) {
      goto LABEL_25;
    }
    goto LABEL_34;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 40),  (int)a2,  a4);
  if ((*(_DWORD *)(v5 + 52) & 0x80) != 0) {
LABEL_9:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(_DWORD *)(v5 + 44),  (int)a2,  a4);
LABEL_10:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(4LL, *(void *)(v5 + 32), a2);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }

  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    uint64_t v3 = *(_DWORD *)(a1 + 232);
  }

  else
  {
    int v10 = 1;
  }

  LODWORD(v4) = v4 + v10 + 1;
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_25:
    LODWORD(v4) = v4
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 48),  (unint64_t)a2)
                + 1;
    uint64_t v3 = *(_DWORD *)(a1 + 232);
    if ((v3 & 0x40) == 0) {
      goto LABEL_32;
    }
LABEL_26:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if ((v11 & 0x80000000) != 0)
    {
      unsigned int v12 = 10;
    }

    else if (v11 >= 0x80)
    {
      unsigned int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      uint64_t v3 = *(_DWORD *)(a1 + 232);
    }

    else
    {
      unsigned int v12 = 1;
    }

    LODWORD(v4) = v4 + v12 + 1;
    goto LABEL_32;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 44),  (int)a2,  a4);
  if ((*(_DWORD *)(v5 + 68) & 0x80) != 0) {
LABEL_9:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  (int)a2,  *(double *)(v5 + 56),  a3);
LABEL_10:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    uint64_t v3 = *(_DWORD *)(a1 + 68);
  }

  else
  {
    int v10 = 2;
  }

  LODWORD(v4) = v10 + v4;
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_25:
    LODWORD(v4) = v4
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 48),  (unint64_t)a2)
                + 1;
    uint64_t v3 = *(_DWORD *)(a1 + 68);
    if ((v3 & 0x40) == 0) {
      goto LABEL_32;
    }
LABEL_26:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if ((v11 & 0x80000000) != 0)
    {
      unsigned int v12 = 11;
    }

    else if (v11 >= 0x80)
    {
      uint64_t v3 = *(_DWORD *)(a1 + 68);
    }

    else
    {
      unsigned int v12 = 2;
    }

    LODWORD(v4) = v12 + v4;
    goto LABEL_32;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 40),  a2,  a4);
  if ((*(_DWORD *)(v5 + 52) & 0x20) != 0) {
LABEL_7:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 44),  a2,  a4);
LABEL_8:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 64),  (int)a2,  a4);
  if ((*(_DWORD *)(v5 + 72) & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(4LL, *(void *)(v5 + 32), a2);
LABEL_6:
  if (*(int *)(v5 + 48) >= 1)
  {
    int v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(void *)(*(void *)(v5 + 40) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 48));
  }

  int v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

  int v13 = *(_DWORD *)(a1 + 48);
  int v14 = v13 + v3;
  if (v13 >= 1)
  {
    int v15 = 0LL;
    do
    {
      unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B08A4( *(void *)(*(void *)(a1 + 40) + 8 * v15),  a2);
      int v17 = (int)v16;
      else {
        int v18 = 1;
      }
      v14 += v17 + v18;
      ++v15;
    }

    while (v15 < *(int *)(a1 + 48));
  }

  char v19 = *(_DWORD *)(a1 + 72);
  uint64_t v20 = (v19 + v14);
  if (v19 >= 1)
  {
    uint64_t v21 = 0LL;
    do
    {
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B1000( *(void *)(*(void *)(a1 + 64) + 8 * v21),  a2);
      BOOL v23 = (int)v22;
      else {
        int v24 = 1;
      }
      uint64_t v20 = (v23 + v20 + v24);
      ++v21;
    }

    while (v21 < *(int *)(a1 + 72));
  }

  char v25 = *(void **)(a1 + 8);
  if (v25 && *v25 != v25[1]) {
    uint64_t v20 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v20;
  *(_DWORD *)(a1 + 8std::iostream::~basic_iostream(v2, v3 + 8) = v20;
  return v20;
}

  int v10 = *(void *)(v5 + 56);
  if (!v10) {
    int v10 = *(void *)(qword_1008003E8 + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  v10,  a2,  a4);
  if ((*(_DWORD *)(v5 + 76) & 0x40) != 0)
  {
LABEL_23:
    int v11 = *(void *)(v5 + 64);
    if (!v11) {
      int v11 = *(void *)(qword_1008003E8 + 64);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  v11,  a2,  a4);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 40),  a3);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 36),  (int)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

  unsigned int v12 = *(void *)(v5 + 40);
  if (!v12) {
    unsigned int v12 = *(void *)(qword_1008004C8 + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v12,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 32),  a3);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(void *)(v5 + 48),  (unint64_t)a2,  a4);
  if ((*(_DWORD *)(v5 + 72) & 0x200) == 0) {
    goto LABEL_24;
  }
LABEL_21:
  int v7 = *(void *)(v5 + 56);
  if (!v7) {
    int v7 = *(void *)(qword_100800550 + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  v7,  a2,  a4);
LABEL_24:
  int v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

  int v10 = *(void *)(v5 + 48);
  if (!v10) {
    int v10 = *(void *)(qword_100800590 + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  v10,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }

  int v15 = *((void *)this + 4);
  *(_BYTE *)uint64_t v3 = 33;
  *(void *)((char *)v3 + 1) = v15;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v7 = *((_DWORD *)this + 22);
  if ((v7 & 0x10) == 0)
  {
LABEL_9:
    if ((v7 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(float *)(v5 + 40),  a3);
  if ((*(_DWORD *)(v5 + 52) & 0x80) != 0) {
LABEL_9:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  (int)a2,  *(float *)(v5 + 44),  a3);
LABEL_10:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(unsigned __int8 *)(v5 + 52),  (BOOL)a2,  a4);
  if ((*(_DWORD *)(v5 + 60) & 0x40) != 0) {
LABEL_8:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(unsigned __int8 *)(v5 + 53),  (BOOL)a2,  a4);
LABEL_9:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  unsigned int v12 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 80) |= 4u;
  *(_DWORD *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v12;
  uint64_t v5 = *(_DWORD *)(a2 + 80);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 56),  a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(unsigned __int8 *)(v5 + 34),  (BOOL)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }

  unsigned int v12 = *((void *)this + 4);
  *(_BYTE *)uint64_t v4 = 25;
  *(void *)((char *)v4 + 1) = v12;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }

  int v13 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 64) |= 0x20u;
  *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v13;
  uint64_t v5 = *(_DWORD *)(a2 + 64);
  if ((v5 & 0x40) != 0) {
    goto LABEL_21;
  }
LABEL_13:
  if ((v5 & 0x80) != 0)
  {
LABEL_14:
    int v7 = *(_BYTE *)(a2 + 57);
    *(_DWORD *)(a1 + 64) |= 0x80u;
    *(_BYTE *)(a1 + 57) = v7;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(unsigned __int8 *)(v5 + 56),  (BOOL)a2,  a4);
  if ((*(_DWORD *)(v5 + 64) & 0x80) != 0) {
LABEL_9:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(unsigned __int8 *)(v5 + 57),  (BOOL)a2,  a4);
LABEL_10:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  int v13 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 92) |= 0x10u;
  *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v13;
  uint64_t v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x20) != 0) {
    goto LABEL_21;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_22:
  int v15 = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 92) |= 0x40u;
  *(void *)(a1 + 64) = v15;
  uint64_t v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    int v6 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 92) |= 0x80u;
    *(void *)(a1 + 72) = v6;
    uint64_t v5 = *(_DWORD *)(a2 + 92);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v4 + 56),  a3);
  uint64_t v5 = *(_DWORD *)(v4 + 92);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }

  int v14 = *(void *)(a1 + 56);
  *(_BYTE *)a2 = 49;
  *(void *)(a2 + 1) = v14;
  a2 += 9LL;
  uint64_t v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x40) == 0)
  {
LABEL_8:
    if ((v3 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_22:
    unint64_t v16 = *(void *)(a1 + 72);
    *(_BYTE *)a2 = 65;
    *(void *)(a2 + 1) = v16;
    a2 += 9LL;
    if ((*(_DWORD *)(a1 + 92) & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 48),  a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }

  uint64_t result = sub_10014943C(a1, 0);
  if ((result & 1) == 0) {
    sub_10038F63C();
  }
  return result;
}

      if (v20 > (v18.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
      {
        v21.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_23:
        std::condition_variable::__do_timed_wait(v13, &__lk, v21);
        std::chrono::steady_clock::now();
        continue;
      }

      if (v15 > (v13.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
      {
        v16.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_23:
        std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 32), &__lk, v16);
        std::chrono::steady_clock::now();
        continue;
      }

      v12.__d_.__rep_ = v11 + v9.__d_.__rep_;
      goto LABEL_21;
    }
  }

  while (std::chrono::steady_clock::now().__d_.__rep_ < v7.__d_.__rep_);
  int v13 = atomic_load((unsigned __int8 *)(a1 + 25));
  if ((v13 & 1) != 0)
  {
LABEL_39:
    int v17 = *(_OWORD *)(a1 + 2592);
    *(_OWORD *)a3 = *(_OWORD *)(a1 + 2576);
    *(_OWORD *)(a3 + 16) = v17;
    int v18 = *(_OWORD *)(a1 + 2624);
    *(_OWORD *)(a3 + sub_100012358(v1 - 32) = *(_OWORD *)(a1 + 2608);
    *(_OWORD *)(a3 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v18;
    goto LABEL_34;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_100393CEC();
  }
LABEL_33:
  *(_BYTE *)a3 = 0;
  *(_BYTE *)(a3 + 60) = 0;
LABEL_34:
  if (__lk.__owns_) {
    std::mutex::unlock(__lk.__m_);
  }
  if (v24)
  {
    char v25 = v24;
    operator delete(v24);
  }

  *unsigned int v12 = &v9[v17];
  return result;
}

        int v22 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)BOOL v23 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "#find-range,Setting findee_gone bit",  v23,  2u);
        }

        *(_WORD *)&uint8_t buf[4] = 257;
        goto LABEL_23;
      }
    }

    else if (!v7)
    {
      goto LABEL_12;
    }

    uint64_t v21 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v23 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "#find-range,Setting finder_gone bit",  v23,  2u);
    }

    *(_WORD *)&_OWORD buf[2] = 257;
    if (!v6) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }

  int v13 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "#find-range,Would set hangup bit, but it's disabled in defaults writes",  buf,  2u);
  }

  return 0LL;
}

    int v6 = "?";
    goto LABEL_21;
  }

  if (consumer_high > 19)
  {
    if (consumer_high == 20)
    {
      int v6 = "Background";
      goto LABEL_21;
    }

    if (consumer_high == 30)
    {
      int v6 = "Low";
      goto LABEL_21;
    }

    goto LABEL_20;
  }

  if (!consumer_high)
  {
    int v6 = "Default";
    goto LABEL_21;
  }

  if (consumer_high != 10) {
    goto LABEL_20;
  }
  int v6 = "Periodic";
LABEL_21:
  int v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Discovery provider (%s). EnableBT: %d. LaunchOnDemand: %d. ScanRate: %s. DiscTimeout: %0.1f s. OOBRefresh: %0.1f s",  v4,  LOBYTE(self->_consumer),  BYTE1(self->_consumer),  v6,  self->_didDiscoverPeerTimestamps,  self->_advertisingOOBRefreshTimers));
  [v3 addObject:v7];

  consumerQueue = self->_consumerQueue;
  if (consumerQueue && self->_enableBluetooth)
  {
    uint64_t v9 = (void *)v86[5];
    int v10 = (unint64_t)-[OS_dispatch_queue bluetoothState](consumerQueue, "bluetoothState");
    if (v10 > 0xA) {
      int v11 = "?";
    }
    else {
      int v11 = off_1007BBBD0[v10];
    }
    int v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"    BT state: %s",  v11));
    [v9 addObject:v13];
  }

  else
  {
    unsigned int v12 = (void *)v86[5];
    int v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"    BT state unknown. Controller: %d. Activated: %d",  consumerQueue != 0LL,  self->_enableBluetooth));
    [v12 addObject:v13];
  }

  controller = self->_controller;
  if (controller && self->_activatedController)
  {
    int v15 = (void *)v86[5];
    unint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( -[CBController advertisingAddressDataNonConnectable]( controller,  "advertisingAddressDataNonConnectable"));
    int v17 = CUPrintNSDataAddress();
    int v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    char v19 = (void *)objc_claimAutoreleasedReturnValue( -[CBController advertisingAddressDataConnectable]( self->_controller,  "advertisingAddressDataConnectable"));
    uint64_t v20 = CUPrintNSDataAddress();
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
    int v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"    Addresses: NCA %@, CA %@.",  v18,  v21));
    [v15 addObject:v22];
  }

  else
  {
    BOOL v23 = (void *)v86[5];
    unint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"    Address unknown. Observer: %d. Activated: %d",  controller != 0LL,  self->_activatedController));
    [v23 addObject:v16];
  }

  addressObserver = self->_addressObserver;
  if (addressObserver)
  {
    char v25 = (void *)v86[5];
    if (LOBYTE(self->_nearbyActionNoWakeScanner))
    {
      uint64_t v26 = -[CBAdvertiser bleScanRate](addressObserver, "bleScanRate");
      if (v26 > 34)
      {
        if (v26 > 49)
        {
          if (v26 == 50)
          {
            uint64_t v27 = "High";
            goto LABEL_62;
          }

          if (v26 == 60)
          {
            uint64_t v27 = "Max";
            goto LABEL_62;
          }
        }

        else
        {
          if (v26 == 35)
          {
            uint64_t v27 = "MediumLow";
            goto LABEL_62;
          }

          if (v26 == 40)
          {
            uint64_t v27 = "Medium";
            goto LABEL_62;
          }
        }
      }

      else if (v26 > 19)
      {
        if (v26 == 20)
        {
          uint64_t v27 = "Background";
          goto LABEL_62;
        }

        if (v26 == 30)
        {
          uint64_t v27 = "Low";
          goto LABEL_62;
        }
      }

      else
      {
        if (!v26)
        {
          uint64_t v27 = "Default";
          goto LABEL_62;
        }

        if (v26 == 10)
        {
          uint64_t v27 = "Periodic";
LABEL_62:
          uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(-[CBAdvertiser oobKeys](self->_addressObserver, "oobKeys"));
          uint64_t v32 = [v30 count];
          if (self->_spatialInteractionScanner) {
            uint64_t v33 = "Y";
          }
          else {
            uint64_t v33 = "N";
          }
          uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"    T26 scan rate: %s. OOB keys: %d. Disabling scan dupes pending: %s",  v27,  v32,  v33));
          [v25 addObject:v34];

          goto LABEL_66;
        }
      }

      uint64_t v27 = "?";
      goto LABEL_62;
    }

    if (self->_spatialInteractionScanner) {
      uint64_t v31 = "Y";
    }
    else {
      uint64_t v31 = "N";
    }
    uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"    T26 scanner still activating. Disabling scan dupes pending: %s",  v31));
    [v25 addObject:v30];
  }

  else
  {
    unsigned int v28 = (void *)v86[5];
    if (self->_spatialInteractionScanner) {
      uint64_t v29 = "Y";
    }
    else {
      uint64_t v29 = "N";
    }
    uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"    T26 scanner nil. Disabling scan dupes pending: %s",  v29));
    [v28 addObject:v30];
  }

  if (*(_BYTE *)(a1 + 249)) {
    LODWORD(v4) = 1;
  }
  if (*(_BYTE *)(a1 + 296))
  {
    unint64_t v16 = *(unsigned __int8 *)(a1 + 272);
    *(double *)(a1 + 280) = a2;
    if (v16 != (_DWORD)v4) {
      *(double *)(a1 + 28std::iostream::~basic_iostream(v2, v3 + 8) = a2;
    }
  }

  else
  {
    *(double *)(a1 + 280) = a2;
    *(double *)(a1 + 28std::iostream::~basic_iostream(v2, v3 + 8) = a2;
    *(_BYTE *)(a1 + 296) = 1;
  }

  *(_BYTE *)(a1 + 272) = v4;
}

        uint64_t v60 = v6 + 600;
        uint64_t v62 = v6 + 488;
        int v6 = v15;
        if (v15 < (unint64_t)v17)
        {
          uint64_t v21 = v17;
          do
          {
            sub_1002D8D28((char *)v6, v21);
            do
            {
              int v22 = *(double *)(v6 + 1216);
              v6 += 616LL;
            }

            while (v22 < v77);
            do
            {
              BOOL v23 = *((double *)v21 - 2);
              v21 -= 616;
            }

            while (v23 >= v77);
          }

          while (v6 < (unint64_t)v21);
        }

        int v24 = (char *)(v6 - 616);
        if (v6 - 616 != a1)
        {
          *(_BYTE *)a1 = *v24;
          sub_1002CBDC8(a1 + 8, v6 - 608);
          sub_1002CBDC8(a1 + 80, v6 - 536);
          sub_1002CBDC8(a1 + 144, v6 - 472);
          sub_1002CBDC8(a1 + 208, v6 - 408);
          sub_1002CBDC8(a1 + 376, v6 - 240);
          sub_1002CBDC8(v62, v6 - 128);
          char v25 = *(_DWORD *)(v6 - 8);
          *(void *)uint64_t v60 = *(void *)(v6 - 16);
          *(_DWORD *)(v60 + std::iostream::~basic_iostream(v2, v3 + 8) = v25;
        }

        *int v24 = v67;
        sub_1002CBDC8(v6 - 608, (uint64_t)v71);
        sub_1002CBDC8(v6 - 536, (uint64_t)v72);
        sub_1002CBDC8(v6 - 472, (uint64_t)v73);
        sub_1002CBDC8(v6 - 408, (uint64_t)v74);
        sub_1002CBDC8(v6 - 240, (uint64_t)v75);
        sub_1002CBDC8(v6 - 128, (uint64_t)v76);
        uint64_t v26 = v78;
        *(double *)(v6 - 16) = v77;
        *(_DWORD *)(v6 - std::iostream::~basic_iostream(v2, v3 + 8) = v26;
        if (v15 < (unint64_t)v17)
        {
LABEL_31:
          sub_1002D77B8(a1, v6 - 616, a3, a4 & 1);
          a4 = 0;
          continue;
        }

        uint64_t v27 = sub_1002D897C(a1, v6 - 616);
        if (!sub_1002D897C(v6, a2))
        {
          if (v27) {
            continue;
          }
          goto LABEL_31;
        }

        a2 = v6 - 616;
        if (!v27) {
          goto LABEL_1;
        }
        return;
    }
  }

        int v6 = v21;
        if (v21 < (unint64_t)v23)
        {
          uint64_t v27 = v23;
          do
          {
            sub_1002EF9DC((char *)v6, v27);
            do
            {
              unsigned int v28 = *(double *)(v6 + 736);
              v6 += 376LL;
            }

            while (v28 < v133);
            do
            {
              uint64_t v29 = *((double *)v27 - 2);
              v27 -= 376;
            }

            while (v29 >= v133);
          }

          while (v6 < (unint64_t)v27);
        }

        uint64_t v30 = (char *)(v6 - 376);
        if (v6 - 376 != a1)
        {
          *(_BYTE *)a1 = *v30;
          sub_1002CBDC8(v13, v6 - 368);
          sub_1002CBDC8(v14, v6 - 304);
          sub_1002CBDC8(v15, v6 - 240);
          sub_1002CBDC8(v16, v6 - 128);
          uint64_t v31 = *(_DWORD *)(v6 - 8);
          *(void *)int v18 = *(void *)(v6 - 16);
          *(_DWORD *)(v18 + std::iostream::~basic_iostream(v2, v3 + 8) = v31;
        }

        _BYTE *v30 = v128;
        sub_1002CBDC8(v6 - 368, (uint64_t)v129);
        sub_1002CBDC8(v6 - 304, (uint64_t)v130);
        sub_1002CBDC8(v6 - 240, (uint64_t)v131);
        uint64_t v32 = sub_1002CBDC8(v6 - 128, (uint64_t)v132);
        a3 = v116;
        uint64_t v33 = v134;
        *(double *)(v6 - 16) = v133;
        *(_DWORD *)(v6 - std::iostream::~basic_iostream(v2, v3 + 8) = v33;
        a2 = (char *)v119;
        if (v21 < (unint64_t)v23)
        {
LABEL_31:
          sub_1002EE63C(a1, v6 - 376, v116, a4 & 1, v32);
          a4 = 0;
          continue;
        }

        uint64_t v34 = sub_1002EF69C(a1, v6 - 376);
        if (!sub_1002EF69C(v6, v119))
        {
          if (v34) {
            continue;
          }
          goto LABEL_31;
        }

        a2 = (char *)(v6 - 376);
        if (!v34) {
          goto LABEL_1;
        }
        return;
    }
  }

LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(_DWORD *)(v5 + 48),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(_DWORD *)(v5 + 48),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(unsigned __int8 *)(v5 + 31),  (BOOL)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }

  int v17 = *(_BYTE *)(a1 + 31);
  *(_BYTE *)a2 = 72;
  *(_BYTE *)(a2 + 1) = v17;
  a2 += 2LL;
  uint64_t v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x200) != 0) {
    goto LABEL_26;
  }
LABEL_11:
  if ((v3 & 0x400) != 0)
  {
LABEL_12:
    uint64_t v4 = *(_BYTE *)(a1 + 33);
    *(_BYTE *)a2 = 88;
    *(_BYTE *)(a2 + 1) = v4;
    a2 += 2LL;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 56),  a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(8LL, *(void *)(v4 + 72), a2);
  uint64_t v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }

  int v18 = *((void *)this + 9);
  *(_BYTE *)a2 = 66;
  else {
    char v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v18 + 23);
  }
  if (v19 > 0x7F)
  {
    uint64_t v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v19,  (int)a2 + 1,  a3);
  }

  else
  {
    *(_BYTE *)(a2 + 1) = (_BYTE)v19;
    uint64_t v20 = a2 + 2;
  }

  uint64_t v21 = *(char *)(v18 + 23);
  if (v21 >= 0) {
    int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18;
  }
  else {
    int v22 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v18;
  }
  if (v21 >= 0) {
    BOOL v23 = (const void *)*(unsigned __int8 *)(v18 + 23);
  }
  else {
    BOOL v23 = (const void *)*(unsigned int *)(v18 + 8);
  }
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v22, v23, v20, a4);
  uint64_t v5 = *((_DWORD *)this + 29);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_39;
  }

  int v15 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 68) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v15;
  uint64_t v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  int v18 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 68) |= 0x40u;
  *(_DWORD *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v18;
  uint64_t v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    int v6 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 68) |= 0x80u;
    *(_DWORD *)(a1 + 52) = v6;
    uint64_t v5 = *(_DWORD *)(a2 + 68);
  }

  if ((v5 & 0xFF0000) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v5 & 0x10000) != 0)
  {
    int v18 = *(_DWORD *)(a2 + 80);
    *(_DWORD *)(a1 + 104) |= 0x10000u;
    *(_DWORD *)(a1 + 80) = v18;
    uint64_t v5 = *(_DWORD *)(a2 + 104);
    if ((v5 & 0x20000) == 0)
    {
LABEL_28:
      if ((v5 & 0x40000) == 0) {
        goto LABEL_29;
      }
      goto LABEL_43;
    }
  }

  else if ((v5 & 0x20000) == 0)
  {
    goto LABEL_28;
  }

  char v19 = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 104) |= 0x20000u;
  *(_DWORD *)(a1 + 84) = v19;
  uint64_t v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x40000) == 0)
  {
LABEL_29:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_30;
    }
LABEL_44:
    uint64_t v21 = *(_DWORD *)(a2 + 92);
    *(_DWORD *)(a1 + 104) |= 0x80000u;
    *(_DWORD *)(a1 + 92) = v21;
    if ((*(_DWORD *)(a2 + 104) & 0x100000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_31;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 40),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(double *)(v5 + 56),  a3);
  if ((*(_DWORD *)(v5 + 100) & 0x80) != 0) {
LABEL_9:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(void *)(v5 + 64),  (unint64_t)a2,  a4);
LABEL_10:
  if (*(int *)(v5 + 80) >= 1)
  {
    int v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x64,  *(void *)(*(void *)(v5 + 72) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 80));
  }

  int v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 28),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_29;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 40),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }

  unsigned int v12 = *(_DWORD *)(a1 + 40);
  int v13 = (v12 + v4);
  if (v12 >= 1)
  {
    int v14 = 0LL;
    do
    {
      int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100090A58( *(void *)(*(void *)(a1 + 32) + 8 * v14),  a2);
      unint64_t v16 = (int)v15;
      else {
        int v17 = 1;
      }
      int v13 = (v16 + v13 + v17);
      ++v14;
    }

    while (v14 < *(int *)(a1 + 40));
  }

  int v18 = *(void **)(a1 + 8);
  if (v18 && *v18 != v18[1]) {
    int v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v13;
  *(_DWORD *)(a1 + 56) = v13;
  return v13;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(_DWORD *)(v5 + 76),  a2,  a4);
  if ((*(_DWORD *)(v5 + 88) & 0x200) != 0) {
LABEL_14:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(_DWORD *)(v5 + 80),  a2,  a4);
LABEL_15:
  int v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

  int v17 = *(void **)(a1 + 8);
  if (v17 && *v17 != v17[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

  int v17 = *(void **)(a1 + 8);
  if (v17 && *v17 != v17[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

  if ((v3 & 0x10) != 0) {
    uint64_t v5 = v4 + 9;
  }
  else {
    uint64_t v5 = v4;
  }
  if ((v3 & 0x20) != 0)
  {
    int v18 = *(void *)(a1 + 56);
    if (!v18) {
      int v18 = *(void *)(qword_1008003E8 + 56);
    }
    char v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B8CF8(v18, a2);
    uint64_t v20 = (int)v19;
    else {
      uint64_t v21 = 1;
    }
    uint64_t v5 = (v5 + v20 + v21 + 1);
    uint64_t v3 = *(_DWORD *)(a1 + 76);
  }

  if ((v3 & 0x40) != 0)
  {
    int v22 = *(void *)(a1 + 64);
    if (!v22) {
      int v22 = *(void *)(qword_1008003E8 + 64);
    }
    BOOL v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000B94CC(v22, a2);
    int v24 = (int)v23;
    else {
      char v25 = 1;
    }
    uint64_t v5 = (v5 + v24 + v25 + 1);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  (int)a2,  *(double *)(v5 + 72),  a3);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }

  unint64_t v16 = (void *)*((void *)this + 1);
  int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v15,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(unsigned __int8 *)(v5 + 49),  (BOOL)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }

  if ((v6 & 0x100) != 0)
  {
    int v13 = *(void *)(a2 + 80);
    *(_DWORD *)(a1 + 96) |= 0x100u;
    *(void *)(a1 + 80) = v13;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

      if (v11 == 4) {
        return 1LL;
      }
    }

    int v11 = TagFallback & 7;
    if (v11 != 2) {
      goto LABEL_25;
    }
    int v14 = *(_DWORD *)(a1 + 44);
LABEL_19:
    *(_DWORD *)(a1 + 44) = v14 | 2;
    unint64_t v16 = *(void **)(a1 + 24);
    if (!v16)
    {
      unint64_t v16 = operator new(0x58uLL);
      sub_1000D4184((uint64_t)v16);
      *(void *)(a1 + 24) = v16;
    }

    int v17 = (char *)*((void *)this + 1);
    if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
    {
    }

    else
    {
      uint64_t v30 = *v17;
      *((void *)this + 1) = v17 + 1;
    }

    int v18 = *((_DWORD *)this + 14);
    char v19 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v18 + 1;
    if (v18 >= v19) {
      return 0LL;
    }
    uint64_t v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v30);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
    BOOL v23 = *((_DWORD *)this + 14);
    int v24 = __OFSUB__(v23, 1);
    char v25 = v23 - 1;
    if (v25 < 0 == v24) {
      *((_DWORD *)this + 14) = v25;
    }
    uint64_t v26 = (_BYTE *)*((void *)this + 1);
    unsigned int v12 = *((void *)this + 2);
    if ((unint64_t)v26 < v12 && *v26 == 24)
    {
      int v13 = v26 + 1;
      *((void *)this + 1) = v13;
LABEL_37:
      if ((unint64_t)v13 >= v12 || *v13 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
        if (!(_DWORD)result) {
          return result;
        }
        uint64_t v27 = (unsigned __int8 *)*((void *)this + 1);
        unsigned int v12 = *((void *)this + 2);
      }

      else
      {
        unsigned int *v6 = *v13;
        uint64_t v27 = (unsigned __int8 *)(v13 + 1);
        *((void *)this + 1) = v27;
      }

      *(_DWORD *)(a1 + 44) |= 4u;
      if (v27 == (unsigned __int8 *)v12 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
  }

  int v18 = v4 + 5;
  if ((v3 & 0x10) == 0) {
    int v18 = v4;
  }
  if ((v3 & 0x20) != 0) {
    uint64_t v5 = v18 + 2;
  }
  else {
    uint64_t v5 = v18;
  }
  if ((v3 & 0x40) != 0)
  {
    char v19 = *(void *)(a1 + 56);
    uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
    uint64_t v21 = v20;
    int v22 = *(void *)(v19 + 8);
    if ((v20 & 0x80u) == 0) {
      BOOL v23 = *(unsigned __int8 *)(v19 + 23);
    }
    else {
      BOOL v23 = v22;
    }
    if (v23 >= 0x80)
    {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23,  a2);
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      int v22 = *(void *)(v19 + 8);
      uint64_t v21 = *(_BYTE *)(v19 + 23);
    }

    else
    {
      int v24 = 1;
    }

    if (v21 < 0) {
      uint64_t v20 = v22;
    }
    uint64_t v5 = (v5 + v24 + v20 + 1);
  }

  unint64_t v16 = *((void *)this + 5);
  *a2 = 49;
  *(void *)(a2 + 1) = v16;
  a2 += 9;
  char v8 = *((_DWORD *)this + 22);
  if ((v8 & 0x40) == 0)
  {
LABEL_15:
    if ((v8 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }

  int v13 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 24) = v13;
  uint64_t v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(float *)(v5 + 28),  a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }

  int v11 = *(void *)(a1 + 32);
  if (!v11) {
    int v11 = *(void *)(qword_1008005B8 + 32);
  }
  unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000EB0BC(v11, a2);
  int v13 = (int)v12;
  else {
    int v14 = 1;
  }
  uint64_t v4 = (v4 + v13 + v14 + 1);
  uint64_t v3 = *(_DWORD *)(a1 + 64);
  if ((v3 & 0x20) == 0)
  {
LABEL_15:
    if ((v3 & 0x40) == 0) {
      goto LABEL_43;
    }
    goto LABEL_37;
  }

  int v11 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 24) = v11;
  uint64_t v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 32),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }

  int v15 = *((_BYTE *)this + 38);
  *(_BYTE *)uint64_t v3 = 64;
  *((_BYTE *)v3 + 1) = v15;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  if ((*((_DWORD *)this + 18) & 0x100) == 0) {
    goto LABEL_29;
  }
LABEL_26:
  unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  *(_BYTE *)uint64_t v3 = 72;
  if (v16 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v16,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v16;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }

  int v17 = *(void **)(a1 + 8);
  if (v17 && *v17 != v17[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

  int v14 = *(_BYTE *)(a2 + 33);
  *(_DWORD *)(a1 + 56) |= 8u;
  *(_BYTE *)(a1 + 33) = v14;
  uint64_t v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_27:
    unint64_t v16 = *(_BYTE *)(a2 + 35);
    *(_DWORD *)(a1 + 56) |= 0x20u;
    *(_BYTE *)(a1 + 35) = v16;
    uint64_t v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    goto LABEL_28;
  }

  int v17 = *((void *)this + 9);
  *(_BYTE *)uint64_t v4 = 65;
  *(void *)((char *)v4 + 1) = v17;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }

  unsigned int v12 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 112) |= 4u;
  *(void *)(a1 + sub_100012358(v1 - 32) = v12;
  uint64_t v5 = *(_DWORD *)(a2 + 112);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 64),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }

  int v17 = *((void *)this + 6);
  *(_BYTE *)uint64_t v4 = 41;
  *(void *)((char *)v4 + 1) = v17;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 28);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_30;
    }
    goto LABEL_27;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 40),  a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }

  uint64_t v9 = *((_DWORD *)this + 9);
  *(_BYTE *)a2 = 45;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5LL;
  uint64_t v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }

  int v17 = *(_DWORD *)(a1 + 32);
  int v18 = (v17 + v4);
  if (v17 >= 1)
  {
    char v19 = 0LL;
    do
    {
      uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011228C( *(void *)(*(void *)(a1 + 24) + 8 * v19),  a2);
      uint64_t v21 = (int)v20;
      else {
        int v22 = 1;
      }
      int v18 = (v21 + v18 + v22);
      ++v19;
    }

    while (v19 < *(int *)(a1 + 32));
  }

  BOOL v23 = *(void **)(a1 + 8);
  if (v23 && *v23 != v23[1]) {
    int v18 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v18;
  *(_DWORD *)(a1 + 64) = v18;
  return v18;
}

  int v15 = *(void **)(a1 + 8);
  if (v15 && *v15 != v15[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

        *(_DWORD *)uint64_t v32 = 11;
        *(_WORD *)&v32[4] = 0;
        uint64_t v33 = 0;
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        uint64_t v52 = 0;
        uint64_t v53 = 0;
        uint64_t v56 = 0;
        uint64_t v57 = 0;
        uint64_t v60 = 0;
        memset(v61, 0, 3);
        uint64_t v62 = 0;
        uint64_t v63 = 0;
        uint64_t v64 = 0;
        uint64_t v65 = 0;
        int64_t v66 = 0;
        uint64_t v67 = 0;
        sub_1001441E8(a1, (uint64_t)v32);
        goto LABEL_42;
      }

        return;
      }
    }

    else
    {
      int v22 = *(_DWORD *)(a1 + 80);
      if (v22 != 1)
      {
        if (!v22)
        {
          BOOL v23 = objc_claimAutoreleasedReturnValue( [v5 registerNBAMMSSessionWithToken:*(void *)(a1 + 40) isFinder:*(unsigned __int8 *)(a1 + 84) client:*(void *)(a1 + 48) serviceRequest:*(void *)(a1 + 64) startRangingOptions:*(void *)(a1 + 72) sharedProtocol:0]);
          int v24 = *(void *)(*(void *)(a1 + 56) + 8LL);
          char v25 = *(void **)(v24 + 40);
          *(void *)(v24 + 40) = v23;

          uint64_t v26 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
          -[NSMutableArray addObject:](v26, "addObject:", *(void *)(*(void *)(a1 + 32) + 8LL));
          [*(id *)(*(void *)(a1 + 32) + 32) setObject:v26 forKey:*(void *)(a1 + 40)];
        }

        goto LABEL_25;
      }
    }

    uint64_t v27 = objc_claimAutoreleasedReturnValue( [v8 registerNBAMMSSessionWithToken:*(void *)(a1 + 40) isFinder:*(unsigned __int8 *)(a1 + 84) client:*(void *)(a1 + 48) serviceRequest:*(void *)(a1 + 64) startRangingOptions:*(void *)(a1 + 72) sharedProtocol:1]);
    unsigned int v28 = *(void *)(*(void *)(a1 + 56) + 8LL);
    uint64_t v29 = *(void **)(v28 + 40);
    *(void *)(v28 + 40) = v27;

    if (([*(id *)(a1 + 32) _isReciprocalFindingPossibleRoleIsFinder:*(unsigned __int8 *)(a1 + 84) rangingSession:v5] & 1) == 0) {
      [*(id *)(a1 + 32) _updateAnalyticsWithSuccessfulRangingRequest];
    }
    goto LABEL_25;
  }

  int v14 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  int v15 = *(_DWORD *)(a1 + 80);
  if (v15 != [*(id *)(*(void *)(a1 + 32) + 8) sharedProtocol])
  {
    uint64_t v21 = 0;
    goto LABEL_40;
  }

  unint64_t v16 = *(void *)(a1 + 32);
  int v17 = *(void **)(v16 + 8);
  if (v17)
  {
    [v17 attachedRoles];
    unint64_t v16 = *(void *)(a1 + 32);
  }

  else
  {
    std::string __p = 0LL;
    uint64_t v47 = 0LL;
    uint64_t v48 = 0LL;
  }

  uint64_t v30 = objc_msgSend(*(id *)(v16 + 8), "sessionState", __p);
  uint64_t v31 = __p;
  uint64_t v32 = v47 - (_BYTE *)__p == 4 && v30 == 2;
  uint64_t v21 = v32;
  if (!v32)
  {
LABEL_38:
    if (!v31) {
      goto LABEL_40;
    }
    goto LABEL_39;
  }

  uint64_t v33 = *(unsigned __int8 *)(a1 + 84);
  if (v33 != (*(_DWORD *)__p == 0))
  {
    uint64_t v34 =  [*(id *)(*(void *)(a1 + 32) + 8) registerNBAMMSSessionWithToken:*(void *)(a1 + 40) isFinder:v33 != 0 client:*(void *)(a1 + 48) serviceRequest:*(void *)(a1 + 64) startRangingOptions:*(void *)(a1 + 72) sharedProtocol:*(unsigned int *)(a1 + 80)];
    -[NSMutableArray addObject:](v14, "addObject:", *(void *)(*(void *)(a1 + 32) + 8LL));
    uint64_t v31 = __p;
    goto LABEL_38;
  }

  uint64_t v21 = 0;
LABEL_39:
  uint64_t v47 = v31;
  operator delete(v31);
LABEL_40:
  uint64_t v35 = *(_DWORD *)(a1 + 80);
  if (v35 == [*(id *)(*(void *)(a1 + 32) + 16) sharedProtocol])
  {
    uint64_t v36 = *(void **)(*(void *)(a1 + 32) + 16LL);
    if (v36)
    {
      [v36 attachedRoles];
      uint64_t v36 = *(void **)(*(void *)(a1 + 32) + 16LL);
    }

    else
    {
      std::string __p = 0LL;
      uint64_t v47 = 0LL;
      uint64_t v48 = 0LL;
    }

    uint64_t v37 = objc_msgSend(v36, "sessionState", __p);
    uint64_t v38 = __p;
    if (v47 - (_BYTE *)__p == 4 && v37 == 2)
    {
      uint64_t v39 = *(unsigned __int8 *)(a1 + 84);
      if (v39 == (*(_DWORD *)__p == 0))
      {
LABEL_51:
        uint64_t v47 = v38;
        operator delete(v38);
LABEL_52:
        if ((v21 & 1) == 0) {
          goto LABEL_53;
        }
        goto LABEL_44;
      }

      uint64_t v40 =  [*(id *)(*(void *)(a1 + 32) + 16) registerNBAMMSSessionWithToken:*(void *)(a1 + 40) isFinder:v39 != 0 client:*(void *)(a1 + 48) serviceRequest:*(void *)(a1 + 64) startRangingOptions:*(void *)(a1 + 72) sharedProtocol:*(unsigned int *)(a1 + 80)];
      -[NSMutableArray addObject:](v14, "addObject:", *(void *)(*(void *)(a1 + 32) + 16LL));
      LOBYTE(v21) = 1;
      uint64_t v38 = __p;
    }

    if (!v38) {
      goto LABEL_52;
    }
    goto LABEL_51;
  }

  if (!v21)
  {
LABEL_53:
    uint64_t v41 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(__p) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "#find-range,Reached maximum NMI sessions",  (uint8_t *)&__p,  2u);
    }

    uint64_t v49 = NSLocalizedFailureReasonErrorKey;
    uint64_t v50 = @"Reached maximum NMI sessions";
    uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v50,  &v49,  1LL));
    NSFileAttributeKey v43 = objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"com.apple.NearbyInteraction",  -10020LL,  v42));
    char v44 = *(void *)(*(void *)(a1 + 56) + 8LL);
    uint64_t v45 = *(void **)(v44 + 40);
    *(void *)(v44 + 40) = v43;

    [*(id *)(a1 + 32) _updateAnalyticsWithFailedRangingRequestToken:*(void *)(a1 + 40) isFinder:*(unsigned __int8 *)(a1 + 84)];
    goto LABEL_56;
  }
}

    unsigned int v12 = 0;
    *(_DWORD *)a2 = v14;
    goto LABEL_26;
  }

  int v17 = *(_DWORD *)&v39[2];
  int v18 = (os_log_s *)qword_1008000A0;
  char v19 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
  if (v17 != a1)
  {
    if (v19)
    {
      uint64_t v30 = 67109376;
      *(_DWORD *)uint64_t v31 = *(_DWORD *)&v39[2];
      *(_WORD *)&v31[4] = 1024;
      *(_DWORD *)&v31[6] = a1;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,AlishaSubsystem: get key complete event uwb session id: %u, does not match requested id: %u",  (uint8_t *)&v30,  0xEu);
    }

    unsigned int v12 = 0;
    int v10 = -1008;
    goto LABEL_13;
  }

  if (v19)
  {
    uint64_t v30 = 67109632;
    *(_DWORD *)uint64_t v31 = *(_DWORD *)&v39[2];
    *(_WORD *)&v31[4] = 1024;
    *(_DWORD *)&v31[6] = v40;
    *(_WORD *)uint64_t v32 = 1024;
    *(_DWORD *)&v32[2] = HIDWORD(v40);
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,AlishaSubsystem: get key complete event success for uwb session id: %u, sts_index_0: %u, hop_key: %u",  (uint8_t *)&v30,  0x14u);
  }

  sub_10021DA8C();
  sub_10021DBAC();
  uint64_t v20 = *(_DWORD *)&v39[2];
  *(_DWORD *)a2 = 0;
  *(_DWORD *)(a2 + 4) = v20;
  *(void *)(a2 + std::iostream::~basic_iostream(v2, v3 + 8) = v40;
  unsigned int v12 = 1;
LABEL_27:
  *(_BYTE *)(a2 + 16) = v12;
}

        operator delete(v15);
        goto LABEL_26;
      }

      char v19 = begin + 1;
      uint64_t v20 = (int *)v15;
      do
      {
        uint64_t v21 = *v20++;
        int v22 = *(v19 - 1);
        BOOL v23 = v22 != v21;
      }

      while (v22 == v21 && v19++ != end);
    }

    else
    {
      BOOL v23 = 1;
    }

    if (!v15) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }

  int v10 = 0;
LABEL_57:

  return v10;
}

      sub_10031D9D8(a1, 0);
      char v19 = (os_log_s *)qword_1008000A0;
      uint64_t v5 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG);
      if ((_DWORD)v5)
      {
        if (!*(_BYTE *)(a1 + 24)) {
          sub_100006080();
        }
        sub_1003AC988(a1, v57, (uint64_t)v65, v19);
      }

      if (!*(_BYTE *)(a1 + 8) || !*(_BYTE *)(a1 + 24)) {
        sub_100006080();
      }
      uint64_t v20 = *(void *)a1;
      uint64_t v21 = *(void *)(a1 + 16);
      int v22 = v57[0];
      if (*(_BYTE *)(a2 + 192)) {
        *(_BYTE *)(a2 + 192) = 0;
      }
      *(void *)(a2 + std::iostream::~basic_iostream(v2, v3 + 8) = v20;
      *(void *)(a2 + 16) = v21;
      *(float *)(a2 + 24) = v22;
      *(_DWORD *)(a2 + 2std::iostream::~basic_iostream(v2, v3 + 8) = 1;
      *(_BYTE *)(a2 + 56) = 0;
      *(void *)(a2 + sub_100012358(v1 - 32) = 0LL;
      *(void *)(a2 + 40) = 0LL;
      *(_BYTE *)(a2 + 60) = 0;
      *(_BYTE *)(a2 + 64) = 0;
      *(_BYTE *)(a2 + 6std::iostream::~basic_iostream(v2, v3 + 8) = 0;
      *(void *)(a2 + 72) = 0LL;
      *(void *)(a2 + 80) = 0LL;
      *(_WORD *)(a2 + 8std::iostream::~basic_iostream(v2, v3 + 8) = 0;
      *(_OWORD *)(a2 + 96) = 0u;
      *(_OWORD *)(a2 + 112) = 0u;
      *(_OWORD *)(a2 + 121) = 0u;
      *(_BYTE *)(a2 + 160) = 0;
      *(void *)(a2 + 176) = 0LL;
      *(void *)(a2 + 184) = 0LL;
      *(void *)(a2 + 16std::iostream::~basic_iostream(v2, v3 + 8) = 0LL;
      *(_BYTE *)(a2 + 192) = 1;
      BOOL v23 = v57[2];
      if (!*(_BYTE *)(a2 + 224)) {
        *(_BYTE *)(a2 + 224) = 1;
      }
      *(double *)(a2 + 216) = v23;
      if (v59)
      {
        *(double *)(a2 + 200) = v57[1] * 180.0 / 3.14159265;
        *(_BYTE *)(a2 + 20std::iostream::~basic_iostream(v2, v3 + 8) = 1;
        *(_DWORD *)(a2 + 364) = 1;
        *(_BYTE *)(a2 + 36std::iostream::~basic_iostream(v2, v3 + 8) = 1;
        uint64_t v5 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG);
        if ((_DWORD)v5) {
          sub_1003AC920();
        }
      }

      if (!*(_BYTE *)(a1 + 120)) {
        sub_100006080();
      }
      int v24 = *(_DWORD *)(a1 + 80);
      switch(v24)
      {
        case 2:
          *(_DWORD *)a2 = 1;
          uint64_t v45 = v58;
          if (!*(_BYTE *)(a2 + 248)) {
            *(_BYTE *)(a2 + 24std::iostream::~basic_iostream(v2, v3 + 8) = 1;
          }
          *(double *)(a2 + 240) = v45;
          uint64_t v46 = (os_log_s *)qword_1008000A0;
          uint64_t v5 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG);
          if ((_DWORD)v5) {
            sub_1003AC89C((uint64_t)buf, v46, v47, v48, v49, v50, v51, v52);
          }
          *(float32x2_t *)&uint64_t v54 = vcvt_f32_f64(*(float64x2_t *)buf);
          *(float *)&uint64_t v53 = *(double *)&buf[16];
          *((void *)&v54 + 1) = __PAIR64__(*(unsigned int *)&buf[12], v53);
          if (!*(_BYTE *)(a2 + 304)) {
            *(_BYTE *)(a2 + 304) = 1;
          }
          *(_OWORD *)(a2 + 28std::iostream::~basic_iostream(v2, v3 + 8) = v54;
          if (v58 >= 2.5)
          {
            uint64_t v55 = 2;
          }

          else if (v58 <= -2.5)
          {
            uint64_t v55 = 3;
          }

          else
          {
            uint64_t v55 = 1;
          }

          *(_DWORD *)(a2 + 2sub_100012358(v1 - 32) = v55;
          break;
        case 1:
          if (v58 > -2.5 && v58 < 2.5) {
            char v44 = 1;
          }
          else {
            char v44 = 4;
          }
          *(_DWORD *)(a2 + 2sub_100012358(v1 - 32) = v44;
          *(_DWORD *)a2 = 0;
          goto LABEL_62;
        case 0:
          *(_DWORD *)a2 = 0;
          *(_DWORD *)(a2 + 2sub_100012358(v1 - 32) = 0;
LABEL_62:
          *(_BYTE *)(a2 + 6) = 1;
          break;
      }

  int v13 = *__str;
  if (*__str)
  {
    int v14 = 0LL;
    LOBYTE(v15) = 1;
    while (1)
    {
      if ((v15 & 1) != 0
        && ((v13 - 46) > 0x37 || ((1LL << (v13 - 46)) & 0x80000000800001LL) == 0))
      {
        if (++v14 == 64) {
          goto LABEL_46;
        }
        int v15 = 1;
      }

      else
      {
        if (++v14 == 64) {
          return;
        }
        int v15 = 0;
      }

      int v13 = __str[v14];
      if (!__str[v14]) {
        goto LABEL_37;
      }
    }
  }

  int v14 = 0LL;
  int v15 = 1;
LABEL_37:
  if (v15)
  {
    if (v14 >= 0x3E) {
LABEL_46:
    }
      sub_1003ADCA0();
    if (!__str[v14 - 1]) {
      sub_1003ADC50();
    }
    *(_WORD *)&__str[v14] = 12334;
    if (__str[v14 + 2]) {
      sub_1003ADC78();
    }
  }

LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(_DWORD *)(v5 + 52),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }

  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v11 >= 0x80)
  {
    unsigned int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    uint64_t v3 = *(_DWORD *)(a1 + 72);
  }

  else
  {
    unsigned int v12 = 1;
  }

  uint64_t v4 = (v4 + v12 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_15:
    if ((v3 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(_DWORD *)(v5 + 52),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }

  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v11 >= 0x80)
  {
    unsigned int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    uint64_t v3 = *(_DWORD *)(a1 + 72);
  }

  else
  {
    unsigned int v12 = 1;
  }

  uint64_t v4 = (v4 + v12 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_15:
    if ((v3 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(7LL, *(void *)(v5 + 56), a2);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_30;
  }

  unint64_t v16 = *((void *)this + 5);
  if (!v16) {
    unint64_t v16 = *(void *)(qword_100800100 + 40);
  }
  *(_BYTE *)uint64_t v3 = 34;
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v16 + 32);
  if (v17 > 0x7F)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v17;
    int v18 = (uint64_t)v3 + 2;
  }

  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10004C710(v16, v18, a3);
  uint64_t v5 = *((_DWORD *)this + 20);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }

  unint64_t v16 = (unsigned int *)*((void *)this + 5);
  if (!v16) {
    unint64_t v16 = *(unsigned int **)(qword_100800148 + 40);
  }
  *(_BYTE *)uint64_t v3 = 34;
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[10];
  if (v17 > 0x7F)
  {
    int v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v17;
    int v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }

  uint64_t v3 = sub_10005762C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, v18, a3);
  uint64_t v5 = *((_DWORD *)this + 16);
  if ((v5 & 0x10) != 0) {
    goto LABEL_32;
  }
LABEL_6:
  if ((v5 & 0x20) == 0) {
    goto LABEL_41;
  }
LABEL_33:
  uint64_t v20 = *((void *)this + 6);
  if (!v20) {
    uint64_t v20 = *(void *)(qword_100800148 + 48);
  }
  *(_BYTE *)uint64_t v3 = 50;
  uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v20 + 16);
  if (v21 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v21,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v21;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }

  int v24 = *(void **)(v20 + 8);
  BOOL v23 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v20 + 8);
  int v22 = v24;
  if (v24 && *v22 != v22[1]) {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v23,  v3,  a3);
  }
LABEL_41:
  uint64_t v27 = (void *)*((void *)this + 1);
  uint64_t v26 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  char v25 = v27;
  if (!v27 || *v25 == v25[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v26,  v3,  a3);
  }
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(unsigned __int8 *)(v5 + 32),  (BOOL)a2,  a4);
  if ((*(_DWORD *)(v5 + 40) & 0x400) != 0) {
LABEL_12:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  *(unsigned __int8 *)(v5 + 33),  (BOOL)a2,  a4);
LABEL_13:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

    if (v11 == 4) {
      return 1LL;
    }
  }

  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, TagFallback, v7, a4) & 1) != 0);
  return 0LL;
}

  unsigned int v12 = *(void *)(v5 + 64);
  if (!v12) {
    unsigned int v12 = *(void *)(qword_1008001D0 + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  v12,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  (int)a2,  *(double *)(v4 + 80),  a3);
  uint64_t v5 = *(_DWORD *)(v4 + 116);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }

  int v17 = (unsigned int *)*((void *)this + 5);
  if (!v17) {
    int v17 = *(unsigned int **)(qword_100800158 + 40);
  }
  *(_BYTE *)uint64_t v4 = 34;
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17[8];
  if (v18 > 0x7F)
  {
    char v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v18,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v18;
    char v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_1000AA4BC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v17, v19, a3, a4);
  int v6 = *((_DWORD *)this + 98);
  if ((v6 & 0x10) != 0) {
    goto LABEL_32;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    goto LABEL_44;
  }
LABEL_38:
  BOOL v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 96);
  *(_BYTE *)uint64_t v4 = 48;
  int v24 = (unint64_t)v4 + 1;
  if ((v23 & 0x80000000) != 0)
  {
    char v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v23,  v24,  a3);
  }

  else
  {
    if (v23 <= 0x7F)
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v23;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_44;
    }

    char v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v23,  v24,  a3);
  }

  uint64_t v4 = v25;
LABEL_44:
  uint64_t v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x40) != 0)
  {
    uint64_t v27 = *((void *)this + 7);
    if (!v27) {
      uint64_t v27 = *(void *)(qword_100800158 + 56);
    }
    *(_BYTE *)uint64_t v4 = 58;
    unsigned int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v27 + 36);
    if (v28 > 0x7F)
    {
      uint64_t v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v28,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v28;
      uint64_t v29 = (uint64_t)v4 + 2;
    }

    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005F93C(v27, v29, a3);
    uint64_t v26 = *((_DWORD *)this + 98);
    if ((v26 & 0x80) == 0)
    {
LABEL_46:
      if ((v26 & 0x100) == 0) {
        goto LABEL_47;
      }
      goto LABEL_83;
    }
  }

  else if ((v26 & 0x80) == 0)
  {
    goto LABEL_46;
  }

  uint64_t v30 = (unsigned int *)*((void *)this + 8);
  if (!v30) {
    uint64_t v30 = *(unsigned int **)(qword_100800158 + 64);
  }
  *(_BYTE *)uint64_t v4 = 66;
  uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30[16];
  if (v31 > 0x7F)
  {
    uint64_t v32 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v31,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v31;
    uint64_t v32 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_100060E90((wireless_diagnostics::google::protobuf::internal::WireFormat *)v30, v32, a3);
  uint64_t v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x100) == 0)
  {
LABEL_47:
    if ((v26 & 0x200) == 0) {
      goto LABEL_48;
    }
    goto LABEL_89;
  }

  char v19 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 96) |= 4u;
  *(_DWORD *)(a1 + 2std::iostream::~basic_iostream(v2, v3 + 8) = v19;
  int v13 = *(_DWORD *)(a2 + 96);
  if ((v13 & 8) == 0)
  {
LABEL_16:
    if ((v13 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 44),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

  int v13 = *(void *)(v5 + 32);
  if (!v13) {
    int v13 = *(void *)(qword_1008002D8 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v13,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 44),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 28),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }

  int v14 = *(void **)(v5 + 8);
  int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v12 = v14;
  if (v14)
  {
    if (*v12 != v12[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v13, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  (int)a2,  *(double *)(v5 + 80),  a3);
  if ((*(_DWORD *)(v5 + 100) & 0x400) != 0) {
LABEL_12:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  (int)a2,  *(double *)(v5 + 88),  a3);
LABEL_13:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  int v13 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 60) |= 8u;
  *(void *)(a1 + sub_100012358(v1 - 32) = v13;
  uint64_t v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    int v15 = *(_BYTE *)(a2 + 48);
    *(_DWORD *)(a1 + 60) |= 0x20u;
    *(_BYTE *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v15;
    uint64_t v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    goto LABEL_29;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(unsigned __int8 *)(v5 + 50),  (BOOL)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(double *)(v4 + 32),  a3);
  uint64_t v5 = *(_DWORD *)(v4 + 132);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }

  char v19 = *(void *)(a1 + 32);
  *(_BYTE *)a2 = 25;
  *(void *)(a2 + 1) = v19;
  a2 += 9LL;
  uint64_t v3 = *(_DWORD *)(a1 + 132);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }

  int v17 = *((void *)this + 6);
  *a2 = 57;
  *(void *)(a2 + 1) = v17;
  a2 += 9;
  char v8 = *((_DWORD *)this + 22);
  if ((v8 & 0x80) == 0)
  {
LABEL_16:
    if ((v8 & 0x100) == 0) {
      goto LABEL_17;
    }
LABEL_28:
    char v19 = *((void *)this + 8);
    *a2 = 73;
    *(void *)(a2 + 1) = v19;
    a2 += 9;
    if ((*((_DWORD *)this + 22) & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }

  int v14 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 72) |= 8u;
  *(_DWORD *)(a1 + 2std::iostream::~basic_iostream(v2, v3 + 8) = v14;
  uint64_t v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    unint64_t v16 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(_DWORD *)(a1 + 36) = v16;
    uint64_t v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    goto LABEL_29;
  }

  int v13 = *(void *)(v5 + 64);
  if (!v13) {
    int v13 = *(void *)(qword_100800558 + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  v13,  a2,  a4);
  int v7 = *(_DWORD *)(v5 + 120);
  if ((v7 & 0x20) == 0)
  {
LABEL_10:
    if ((v7 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }

  unsigned int v12 = *(void *)(v5 + 64);
  if (!v12) {
    unsigned int v12 = *(void *)(qword_100800590 + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  v12,  a2,  a4);
  if ((*(_DWORD *)(v5 + 88) & 0x100) != 0) {
LABEL_10:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  (int)a2,  *(double *)(v5 + 72),  a3);
LABEL_11:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(float *)(v5 + 32),  a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }

  int v17 = *((_DWORD *)this + 6);
  *(_BYTE *)uint64_t v3 = 29;
  *(_DWORD *)((char *)v3 + 1) = v17;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  uint64_t v5 = *((_DWORD *)this + 21);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }

  unsigned int v12 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 72) |= 8u;
  *(_DWORD *)(a1 + 2std::iostream::~basic_iostream(v2, v3 + 8) = v12;
  uint64_t v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    int v14 = *(_BYTE *)(a2 + 36);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(_BYTE *)(a1 + 36) = v14;
    uint64_t v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    goto LABEL_29;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(unsigned __int8 *)(v5 + 36),  (BOOL)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }

  int v15 = *(_BYTE *)(a2 + 34);
  *(_DWORD *)(a1 + 56) |= 0x10u;
  *(_BYTE *)(a1 + 34) = v15;
  uint64_t v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 0x20) != 0) {
    goto LABEL_27;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_28:
  int v17 = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 56) |= 0x40u;
  *(_BYTE *)(a1 + 36) = v17;
  uint64_t v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    int v6 = *(_BYTE *)(a2 + 37);
    *(_DWORD *)(a1 + 56) |= 0x80u;
    *(_BYTE *)(a1 + 37) = v6;
    uint64_t v5 = *(_DWORD *)(a2 + 56);
  }

  int v18 = *((void *)this + 10);
  *(_BYTE *)uint64_t v4 = 73;
  *(void *)((char *)v4 + 1) = v18;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 35);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_34;
    }
    goto LABEL_28;
  }

  int v13 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 112) |= 8u;
  *(void *)(a1 + 40) = v13;
  uint64_t v5 = *(_DWORD *)(a2 + 112);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    int v15 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 112) |= 0x20u;
    *(void *)(a1 + 56) = v15;
    uint64_t v5 = *(_DWORD *)(a2 + 112);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    goto LABEL_29;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(_DWORD *)(v5 + 68),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }

  int v18 = *((void *)this + 7);
  *(_BYTE *)uint64_t v4 = 49;
  *(void *)((char *)v4 + 1) = v18;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 28) & 0x40) == 0) {
    goto LABEL_30;
  }
LABEL_27:
  char v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  *(_BYTE *)uint64_t v4 = 56;
  if (v19 > 0x7F)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v19,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v19;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 48),  a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }

  int v10 = *((_DWORD *)this + 10);
  *(_BYTE *)a2 = 53;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5LL;
  uint64_t v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }

  unint64_t v16 = (void *)*((void *)this + 1);
  int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v15,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

  int v10 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 140) |= 4u;
  *(void *)(a1 + sub_100012358(v1 - 32) = v10;
  int v6 = *(_DWORD *)(a2 + 140);
  if ((v6 & 8) == 0)
  {
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }

  unsigned int v12 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 148) |= 8u;
  *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v12;
  int v6 = *(_DWORD *)(a2 + 148);
  if ((v6 & 0x10) == 0)
  {
LABEL_10:
    if ((v6 & 0x20) == 0) {
      goto LABEL_11;
    }
LABEL_28:
    int v14 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 148) |= 0x20u;
    *(void *)(a1 + 64) = v14;
    int v6 = *(_DWORD *)(a2 + 148);
    if ((v6 & 0x40) == 0)
    {
LABEL_12:
      if ((v6 & 0x80) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }

    goto LABEL_29;
  }

  uint64_t v9 = *(void *)(v5 + 72);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_100800708 + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  v9,  a2,  a4);
  if ((*(_DWORD *)(v5 + 92) & 0x400) != 0)
  {
LABEL_29:
    int v10 = *(void *)(v5 + 80);
    if (!v10) {
      int v10 = *(void *)(qword_100800708 + 80);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  v10,  a2,  a4);
  }

  int v17 = *((void *)this + 6);
  *(_BYTE *)uint64_t v3 = 49;
  *(void *)((char *)v3 + 1) = v17;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  if ((*((_DWORD *)this + 23) & 0x40) == 0) {
    goto LABEL_33;
  }
LABEL_27:
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 14);
  *(_BYTE *)uint64_t v3 = 56;
  char v19 = (unint64_t)v3 + 1;
  if ((v18 & 0x80000000) != 0)
  {
    uint64_t v20 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v18,  v19,  a3);
  }

  else
  {
    if (v18 <= 0x7F)
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v18;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_33;
    }

    uint64_t v20 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v18,  v19,  a3);
  }

  uint64_t v3 = v20;
LABEL_33:
  if ((*((_BYTE *)this + 92) & 0x80) == 0) {
    goto LABEL_40;
  }
  uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 15);
  *(_BYTE *)uint64_t v3 = 64;
  int v22 = (unint64_t)v3 + 1;
  if ((v21 & 0x80000000) != 0)
  {
    BOOL v23 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v21,  v22,  a3);
  }

  else
  {
    if (v21 <= 0x7F)
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v21;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_40;
    }

    BOOL v23 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v21,  v22,  a3);
  }

  uint64_t v3 = v23;
LABEL_40:
  int v24 = *((_DWORD *)this + 23);
  if ((v24 & 0x100) != 0)
  {
    char v25 = (unsigned int *)*((void *)this + 8);
    if (!v25) {
      char v25 = *(unsigned int **)(qword_100800708 + 64);
    }
    *(_BYTE *)uint64_t v3 = 74;
    uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[11];
    if (v26 > 0x7F)
    {
      uint64_t v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v26,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v26;
      uint64_t v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }

    uint64_t v3 = sub_10010F610((wireless_diagnostics::google::protobuf::internal::WireFormat *)v25, v27, a3);
    int v24 = *((_DWORD *)this + 23);
    if ((v24 & 0x200) == 0)
    {
LABEL_42:
      if ((v24 & 0x400) == 0) {
        goto LABEL_62;
      }
      goto LABEL_56;
    }
  }

  else if ((v24 & 0x200) == 0)
  {
    goto LABEL_42;
  }

  unsigned int v28 = *((void *)this + 9);
  if (!v28) {
    unsigned int v28 = *(void *)(qword_100800708 + 72);
  }
  *(_BYTE *)uint64_t v3 = 82;
  uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v28 + 40);
  if (v29 > 0x7F)
  {
    uint64_t v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v29,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v29;
    uint64_t v30 = (uint64_t)v3 + 2;
  }

  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010FF2C(v28, v30, a3);
  if ((*((_DWORD *)this + 23) & 0x400) != 0)
  {
LABEL_56:
    uint64_t v31 = *((void *)this + 10);
    if (!v31) {
      uint64_t v31 = *(void *)(qword_100800708 + 80);
    }
    *(_BYTE *)uint64_t v3 = 90;
    uint64_t v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v31 + 88);
    if (v32 > 0x7F)
    {
      uint64_t v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v32,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v32;
      uint64_t v33 = (uint64_t)v3 + 2;
    }

    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100110A60(v31, v33, a3);
  }

    char v25 = (os_log_s *)qword_1008000A0;
    if (!BYTE4(v88[0]))
    {
      uint64_t v37 = 1;
      unsigned int v28 = a1;
LABEL_42:
      if (v15 >= -0.5) {
        uint64_t v38 = v37;
      }
      else {
        uint64_t v38 = 0;
      }
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)pthread_attr_t buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v38;
        _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "#me,handleReceivedRoseMeasurements: okToPublishToClient %d",  buf,  8u);
      }

      uint64_t v39 = LOBYTE(v99[26]) != 5 || v28[17].__m_.__opaque[12] != 0;
      uint64_t v50 = v39;
      if ((_BYTE)v89) {
        LOBYTE(v89) = 0;
      }
      uint64_t v40 = v119[153];
      if (v119[153] >= 0x100u)
      {
        if ((BYTE4(v113) & 0xFE) == 0x1A)
        {
          uint64_t v41 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v42 = "Y";
            if (!v38) {
              uint64_t v42 = "N";
            }
            *(_DWORD *)pthread_attr_t buf = 67109378;
            *(_DWORD *)&uint8_t buf[4] = v40;
            *(_WORD *)&uint8_t buf[8] = 2080;
            *(void *)&buf[10] = v42;
            _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "#me,handleReceivedRoseMeasurements: mmsValStatus = %d, Used = %s",  buf,  0x12u);
          }
        }

        LOBYTE(v3std::iostream::~basic_iostream(v2, v3 + 8) = v38 != 0;
      }

      uint64_t v56 = v91;
      uint64_t v58 = v93;
      unint64_t v61 = v96;
      *(_OWORD *)&buf[32] = v89;
      uint64_t v55 = v90;
      *(_OWORD *)pthread_attr_t buf = v88[0];
      *(_OWORD *)&uint8_t buf[16] = v88[1];
      *(_OWORD *)uint64_t v57 = v92;
      uint64_t v92 = 0uLL;
      uint64_t v93 = 0LL;
      uint64_t v59 = v94;
      uint64_t v60 = v95;
      NSFileAttributeKey v43 = v97;
      uint64_t v63 = v98;
      uint64_t v97 = 0uLL;
      unint64_t v98 = 0LL;
      std::string __p = v43;
      memcpy(v64, v99, sizeof(v64));
      unint64_t v71 = v126;
      uint64_t v72 = v127;
      uint64_t v67 = v122;
      int64_t v68 = v123;
      uint64_t v69 = v124;
      uint64_t v70 = v125;
      uint64_t v65 = v120;
      int64_t v66 = v121;
      unint64_t v73 = v128;
      __int128 v76 = v131;
      uint64_t v77 = v132;
      uint64_t v78 = v133;
      uint64_t v79 = v134;
      uint64_t v74 = v129;
      uint64_t v75 = v130;
      uint64_t v84 = v139;
      v85[0] = v140[0];
      *(_OWORD *)((char *)v85 + 9) = *(_OWORD *)((char *)v140 + 9);
      uint64_t v80 = v135;
      int64_t v81 = v136;
      uint64_t v82 = v137;
      unint64_t v83 = v138;
      memcpy(v86, v141, sizeof(v86));
      sub_100129624((uint64_t)v87, (uint64_t)v88);
      char v44 = v50;
      if (!v100) {
        char v44 = 0;
      }
      v87[616] = v44;
      v87[617] = v38;
      uint64_t v45 = *(void *)&v28->__m_.__opaque[24];
      if (!v45) {
        sub_10001EEF0();
      }
      (*(void (**)(uint64_t, _BYTE *))(*(void *)v45 + 48LL))(v45, buf);
      sub_10011B444((uint64_t)v87);
      if ((void)__p)
      {
        *((void *)&__p + 1) = __p;
        operator delete((void *)__p);
      }

      if (v57[0])
      {
        v57[1] = v57[0];
        operator delete(v57[0]);
      }

      if ((void)v97)
      {
        *((void *)&v97 + 1) = v97;
        operator delete((void *)v97);
      }

      if ((void)v92)
      {
        *((void *)&v92 + 1) = v92;
        operator delete((void *)v92);
      }

      sub_10011B444((uint64_t)&v107);
      sub_10011B444((uint64_t)&v106);
      if (v104)
      {
        uint64_t v105 = v104;
        operator delete(v104);
      }

      if (v102)
      {
        __int128 v103 = v102;
        operator delete(v102);
      }

      sub_10011B444((uint64_t)v142);
      if (v116)
      {
        uint64_t v117 = v116;
        operator delete(v116);
      }

      if (v110)
      {
        char v111 = v110;
        operator delete(v110);
      }

      return sub_100124BFC((uint64_t)v144);
    }

    uint64_t v26 = WORD4(v90);
    uint64_t v52 = WORD4(v90);
    uint64_t v27 = v91;
    uint64_t v53 = v91;
    v51.n128_u64[0] = v90;
    v51.n128_f64[1] = v99[18];
    unsigned int v28 = v49;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)pthread_attr_t buf = 67109376;
      *(_DWORD *)&uint8_t buf[4] = v26;
      *(_WORD *)&uint8_t buf[8] = 2048;
      *(void *)&buf[10] = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "#me,handleReceivedRoseMeasurements: addRangeMeasurement for ticket %d mac 0x%016llx",  buf,  0x12u);
    }

    *(void *)pthread_attr_t buf = &v52;
    uint64_t v29 = sub_100129848((uint64_t **)&v49[15].__m_.__opaque[32], &v52, (uint64_t)&unk_1004242F8, (__int128 **)buf);
    uint64_t v30 = COERCE_DOUBLE(sub_10011BB28(v29 + 6, &v51));
    uint64_t v32 = v31;
    uint64_t v33 = (os_log_s *)qword_1008000A0;
    uint64_t v34 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
    if (v32)
    {
      if (v34)
      {
        *(_DWORD *)pthread_attr_t buf = 134217984;
        *(double *)&uint8_t buf[4] = v30;
        _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "#me,handleReceivedRoseMeasurements: rangeOffsetFromMedian %.3f",  buf,  0xCu);
      }

      if (v30 > 1.0)
      {
        uint64_t v35 = (os_log_s *)qword_1008000A0;
        uint64_t v36 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
        uint64_t v37 = 0;
        if (v36)
        {
          *(_DWORD *)pthread_attr_t buf = 134218240;
          *(double *)&uint8_t buf[4] = v30;
          *(_WORD *)&buf[12] = 2048;
          *(void *)&buf[14] = 0x3FF0000000000000LL;
          _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEFAULT,  "#me,handleReceivedRoseMeasurements: range offset %.3f exceeds max %.3f - not okToPublishToClient",  buf,  0x16u);
          uint64_t v37 = 0;
        }

        goto LABEL_41;
      }
    }

    else if (v34)
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "#me,handleReceivedRoseMeasurements: no rangeOffsetFromMedian",  buf,  2u);
    }

    uint64_t v37 = 1;
LABEL_41:
    char v25 = (os_log_s *)qword_1008000A0;
    goto LABEL_42;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_10038CCF4();
  }
  return sub_100124BFC((uint64_t)v144);
}

  return (NIServerDevicePresenceSession *)v15;
}

  if (v3) {
    [v5 addEntriesFromDictionary:v3];
  }
  char v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"com.apple.NearbyInteraction",  a1,  v5));

  return v8;
}

    p_nbammsSession = (shared_ptr<rose::objects::NBAMMSSession> *)v22;
LABEL_94:

    goto LABEL_95;
  }

  -[NIServerNBAMMSSession _buildNbammsSession:](self, "_buildNbammsSession:", a6);
  if (!(void)v108)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10039D1F8();
    }
    __int128 v106 = NSLocalizedFailureReasonErrorKey;
    uint64_t v107 = @"Could not build ranging session";
    uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v107,  &v106,  1LL,  v98));
    p_nbammsSession = (shared_ptr<rose::objects::NBAMMSSession> *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"com.apple.NearbyInteraction",  -10020LL,  v26));

    goto LABEL_30;
  }

  BOOL v23 = sub_100272BA0(v108, (__int128 *)v98);
  if (v23)
  {
    int v24 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      sub_100275DD0(v23, buf);
      sub_10039D224();
    }

    p_nbammsSession = (shared_ptr<rose::objects::NBAMMSSession> *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"com.apple.NearbyInteraction",  -5887LL,  0LL));
LABEL_30:
    uint64_t v27 = 0;
    goto LABEL_86;
  }

  if (v11)
  {
    self->_finderAttached = 1;
    objc_storeWeak((id *)&self->_finderClient, v14);
    objc_storeStrong((id *)&self->_finderToken, a3);
    uint64_t v47 = v14;
    uint64_t v48 = self->_finderRoseServiceRequest.var0.__val_.range_enable_params.nbamms.mms_pkt_type.__engaged_;
    memcpy(&self->_finderRoseServiceRequest, a6, 0x1F8uLL);
    if (!v48) {
      self->_finderRoseServiceRequest.var0.__val_.range_enable_params.nbamms.mms_pkt_type.__engaged_ = 1;
    }
    uint64_t v49 = LOBYTE(self->_finderStartRangingOptions.var0.__val_.scheduling_interval_usec);
    uint64_t v51 = *((_OWORD *)v98 + 1);
    uint64_t v50 = *((_OWORD *)v98 + 2);
    *(_OWORD *)&self->_finderRoseServiceRequest.var0.__val_.range_enable_params.nbamms.mms_bch.var0.__null_state_ = *(_OWORD *)v98;
    *(_OWORD *)self->_finderRoseServiceRequest.var0.__val_.range_enable_params.nbamms.irk = v51;
    *(_OWORD *)&self->_finderRoseServiceRequest.var0.__val_.range_enable_params.nbamms.antenna_diversity_mask.var0.__null_state_ = v50;
    uint64_t v52 = *((_OWORD *)v98 + 6);
    uint64_t v54 = *((_OWORD *)v98 + 3);
    uint64_t v53 = *(($25E378AB494A1B43CDE6C204EF466DCF *)v98 + 4);
    *(_OWORD *)&self->_finderStartRangingOptions.var0.__val_.peer.var0.__val_.bt_adv_address.var0.__val_.__elems_[2] = *((_OWORD *)v98 + 5);
    *(_OWORD *)&self->_finderStartRangingOptions.var0.__val_.start_time_or_offset_usec = v52;
    *(_OWORD *)&self->_finderStartRangingOptions.var0.__null_state_ = v54;
    *($25E378AB494A1B43CDE6C204EF466DCF *)((char *)&self->_finderStartRangingOptions.var0.__val_.peer.var0.__val_.uuid.var0
                                         + 12) = v53;
    if (!v49) {
      LOBYTE(self->_finderStartRangingOptions.var0.__val_.scheduling_interval_usec) = 1;
    }
    int v14 = v47;
    if (self->_finderStartRangingOptions.var0.__val_.dither_constant_msec.__engaged_) {
      self->_finderStartRangingOptions.var0.__val_.dither_constant_msec.__engaged_ = 0;
    }
    sub_1001EAC44((uint64_t)&self->_finderMutualAuthState);
    self->_finderMutualAuthState.outboundAuthState = 1;
    uint64_t v55 = (BOOL *)&self->_finderStartRangingOptions.var0.__val_.secondary_scheduling_interval_usec + 2;
  }

  else
  {
    HIBYTE(self->_finderStartRangingOptions.var0.__val_.secondary_scheduling_interval_usec.var0.__val_) = 1;
    objc_storeWeak((id *)&self->_finderStartRangingOptions.var0.__val_.secondary_duty_cycle, v14);
    objc_storeStrong((id *)&self->_findeeMutualAuthState.outboundChallenge, a3);
    uint64_t v56 = v14;
    uint64_t v57 = self->_findeeRoseServiceRequest.var0.__val_.range_enable_params.fira.local_addr.__engaged_;
    memcpy(&self->_findeeMutualAuthState.outboundResponse, a6, 0x1F8uLL);
    if (!v57) {
      self->_findeeRoseServiceRequest.var0.__val_.range_enable_params.fira.local_addr.__engaged_ = 1;
    }
    uint64_t v58 = self->_findeeStartRangingOptions.var0.__val_.peer.var0.__val_.uuid.var0.__val_.__elems_[12];
    uint64_t v60 = *((_OWORD *)v98 + 1);
    uint64_t v59 = *((_OWORD *)v98 + 2);
    self->_findeeRoseServiceRequest.var0.__val_.range_enable_params.fira.peer_addr = *(optional<unsigned long long> *)v98;
    *(_OWORD *)&self->_findeeRoseServiceRequest.var0.__val_.range_enable_params.fira.contention_based_ranging_type.var0.__null_state_ = v60;
    *(_OWORD *)&self->_findeeRoseServiceRequest.var0.__val_.range_enable_params.nbamms.nb_bch.var0.__null_state_ = v59;
    unint64_t v61 = *((_OWORD *)v98 + 6);
    uint64_t v63 = *((_OWORD *)v98 + 3);
    uint64_t v62 = *((_OWORD *)v98 + 4);
    *(_OWORD *)&self->_findeeRoseServiceRequest.var0.__val_.range_enable_params.nbamms.antenna_diversity_mask.var0.__null_state_ = *((_OWORD *)v98 + 5);
    *(_OWORD *)&self->_findeeStartRangingOptions.var0.__null_state_ = v61;
    *(_OWORD *)&self->_findeeRoseServiceRequest.var0.__val_.range_enable_params.nbamms.mms_bch.var0.__null_state_ = v63;
    *(_OWORD *)self->_findeeRoseServiceRequest.var0.__val_.range_enable_params.nbamms.irk = v62;
    if (!v58) {
      self->_findeeStartRangingOptions.var0.__val_.peer.var0.__val_.uuid.var0.__val_.__elems_[12] = 1;
    }
    int v14 = v56;
    if (self->_findeeAlgorithmAidingData.var0.__val_.measured_velocity_change.var0.__null_state_) {
      self->_findeeAlgorithmAidingData.var0.__val_.measured_velocity_change.var0.__null_state_ = 0;
    }
    if (BYTE1(self->_findeeAlgorithmAidingData.var0.__val_.measured_velocity_change.var0.__val_.velocityChangeH1)) {
      BYTE1(self->_findeeAlgorithmAidingData.var0.__val_.measured_velocity_change.var0.__val_.velocityChangeH1) = 0;
    }
    sub_1001EAC44((uint64_t)&self->_finderStartRangingOptions.__engaged_);
    self->_finderStartRangingOptions.__engaged_ = 1;
    if (!*(&self->_findeeAlgorithmAidingData.var0.__val_.measured_velocity_change.__engaged_ + 2)) {
      goto LABEL_81;
    }
    uint64_t v55 = &self->_findeeAlgorithmAidingData.var0.__val_.measured_velocity_change.__engaged_ + 2;
  }

  *uint64_t v55 = 0;
LABEL_81:
  sub_100018E60(&self->_nbammsSession.__ptr_, (uint64_t *)&v108);
  self->_sharedProtocol = a8;
  objc_storeStrong((id *)&self->_sessionToken, a3);
  self->_sessionState = 1;
  uint64_t v64 = self->_findeeAlgorithmAidingData.var0.__val_.mach_absolute_receipt_timestamp.var0.__val_;
  if (v64 != 0.0) {
    (*(void (**)(double, NIServerNBAMMSSession *, uint64_t))(*(void *)&v64 + 16LL))( COERCE_DOUBLE(*(void *)&v64),  self,  1LL);
  }
  uint64_t v65 = self->_sessionStartRangingOptions.__engaged_;
  uint64_t v67 = *(($25E378AB494A1B43CDE6C204EF466DCF *)v98 + 1);
  int64_t v66 = *((_OWORD *)v98 + 2);
  *(_OWORD *)&self->_sessionStartRangingOptions.var0.__null_state_ = *(_OWORD *)v98;
  *($25E378AB494A1B43CDE6C204EF466DCF *)((char *)&self->_sessionStartRangingOptions.var0.__val_.peer.var0.__val_.uuid.var0
                                       + 12) = v67;
  *(_OWORD *)&self->_sessionStartRangingOptions.var0.__val_.peer.var0.__val_.bt_adv_address.var0.__val_.__elems_[2] = v66;
  int64_t v68 = *((_OWORD *)v98 + 5);
  uint64_t v69 = *((_OWORD *)v98 + 6);
  uint64_t v70 = *((_OWORD *)v98 + 4);
  *(_OWORD *)&self->_sessionStartRangingOptions.var0.__val_.start_time_or_offset_usec = *((_OWORD *)v98 + 3);
  *(_OWORD *)&self->_sessionStartRangingOptions.var0.__val_.secondary_scheduling_interval_usec.var0.__null_state_ = v69;
  *(_OWORD *)&self->_sessionStartRangingOptions.var0.__val_.dither_constant_msec.var0.__null_state_ = v68;
  *(_OWORD *)&self->_sessionStartRangingOptions.var0.__val_.scheduling_interval_usec = v70;
  if (!v65) {
    self->_sessionStartRangingOptions.__engaged_ = 1;
  }
  -[NIServerNBAMMSSession _resetStatistics](self, "_resetStatistics", v98);
  -[NIServerNBAMMSSession _resetCryptoStateIncludingFailures:](self, "_resetCryptoStateIncludingFailures:", 1LL);
  -[NIServerNBAMMSSession _updateSessionPayload](self, "_updateSessionPayload");
  uint64_t v27 = 1;
LABEL_86:
  unint64_t v71 = (std::__shared_weak_count *)*((void *)&v108 + 1);
  if (*((void *)&v108 + 1))
  {
    uint64_t v72 = (unint64_t *)(*((void *)&v108 + 1) + 8LL);
    do
      unint64_t v73 = __ldaxr(v72);
    while (__stlxr(v73 - 1, v72));
    if (!v73)
    {
      ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
      std::__shared_weak_count::__release_weak(v71);
      if ((v27 & 1) == 0) {
        goto LABEL_95;
      }
      goto LABEL_91;
    }
  }

  if ((v27 & 1) != 0)
  {
LABEL_91:
    uint64_t v21 = (os_log_s *)(id)qword_1008000A0;
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v74 = (void *)objc_claimAutoreleasedReturnValue(-[NIServerNBAMMSSession _getState](self, "_getState"));
      LODWORD(v10std::iostream::~basic_iostream(v2, v3 + 8) = 138412290;
      *(void *)((char *)&v108 + 4) = v74;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "#find-range,NBAMMS session state (after register): %@",  (uint8_t *)&v108,  0xCu);
    }

    goto LABEL_93;
  }
}

    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "#rose-ses,%s:%d: assertion failure in %s",  buf,  0x1Cu);
    goto LABEL_27;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_1003A3B00();
  }
  char v8 = 0;
  *(_DWORD *)a2 = -1026;
  *(_BYTE *)(a2 + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
LABEL_13:
  *(_BYTE *)(a2 + 16) = v8;
}

      v13.__d_.__rep_ = v12 + v10.__d_.__rep_;
      goto LABEL_27;
    }
  }

  while (std::chrono::steady_clock::now().__d_.__rep_ < v9.__d_.__rep_);
  if (!*v6 && !*(_BYTE *)(a1 + 984))
  {
    unsigned int *v6 = 0LL;
    char v8 = -1001;
    goto LABEL_10;
  }

  uint64_t v5 = v8;
LABEL_27:
  int v14 = sub_1002405E4((uint64_t)(v7 + 5), 0);
  int v15 = sub_1002405E4((uint64_t)(v5 + 5), 0);
  int v17 = *a1;
  unint64_t v16 = (__int128 *)a1[1];
  uint64_t v63 = v17;
  v64[0] = v17;
  int v18 = v17 + 14;
  int64_t v66 = (__int128 *)(v17 + 14);
  if (sub_1002ECF40(&v66, (uint64_t *)&v63))
  {
    uint64_t v63 = v17 + 14;
  }

  else
  {
    v64[0] = v17 + 14;
    int v18 = v17;
  }

  char v19 = (__int128 *)(v17 + 28);
  if (v17 + 28 == (uint64_t *)v16)
  {
LABEL_45:
    int v17 = v18;
    goto LABEL_46;
  }

  uint64_t v20 = v17 + 42;
  while (2)
  {
    int v17 = v20 - 14;
    uint64_t v65 = (__int128 *)(v20 - 14);
    int64_t v66 = v19 + 7;
    if (v19 + 7 != v16)
    {
      if (sub_1002ECF40(&v66, (uint64_t *)&v65))
      {
        if (sub_1002ECF40(&v66, (uint64_t *)&v63))
        {
          uint64_t v63 = v20;
          int v18 = v20;
        }

        uint64_t v21 = sub_1002ECF40(&v65, (uint64_t *)v64);
        int v22 = v19;
        if (v21) {
          goto LABEL_44;
        }
      }

      else
      {
        if (sub_1002ECF40(&v65, (uint64_t *)&v63))
        {
          uint64_t v63 = v20 - 14;
          int v18 = v20 - 14;
        }

        BOOL v23 = sub_1002ECF40(&v66, (uint64_t *)v64);
        int v22 = v20;
        if (v23)
        {
LABEL_44:
          v19 += 14;
          int64_t v66 = v19;
          v20 += 28;
          if (v19 == v16) {
            goto LABEL_45;
          }
          continue;
        }
      }

      v64[0] = v22;
      goto LABEL_44;
    }

    break;
  }

  if (!sub_1002ECF40(&v65, (uint64_t *)&v63))
  {
    sub_1002ECF40(&v65, (uint64_t *)v64);
    int v17 = v18;
  }

      sub_100006080();
    }
  }

  *(_BYTE *)a3 = 0;
  *(_BYTE *)(a3 + 624) = 0;
  return result;
}

      return &qword_1007FFAE0;
    }
  }

  if (*((_BYTE *)v7 + 152))
  {
    int v10 = sub_1003534F8(v7 + 14, &v18);
    if (!*((_BYTE *)v7 + 152)) {
      sub_100006080();
    }
    if (v10) {
      return (uint64_t *)(v10 + 3);
    }
    unsigned int v12 = (os_log_s *)(id)qword_1007FFAA8;
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = v18;
      sub_100320A4C(v17, &__p);
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)pthread_attr_t buf = 67109634;
      uint64_t v20 = v13;
      uint64_t v21 = 1024;
      int v22 = a3;
      BOOL v23 = 2080;
      int v24 = p_p;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "regulatory,comp,getTx_NB_UNII3_PowerTableFromIsoGroup,iso table group not found,isoGroup,%d,flags,%d,accessory,%s",  buf,  0x18u);
    }

    goto LABEL_26;
  }

  return &qword_1007FFAE0;
}

LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  *(_DWORD *)(v5 + 60),  a2,  a4);
  if ((*(_DWORD *)(v5 + 72) & 0x800) != 0) {
LABEL_13:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  *(_DWORD *)(v5 + 64),  a2,  a4);
LABEL_14:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  *(_DWORD *)(v5 + 60),  a2,  a4);
  if ((*(_DWORD *)(v5 + 72) & 0x800) != 0) {
LABEL_13:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  *(_DWORD *)(v5 + 64),  a2,  a4);
LABEL_14:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 28),  a2,  a4);
  if ((*(_DWORD *)(v5 + 108) & 0x10) != 0) {
LABEL_6:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 64),  a2,  a4);
LABEL_7:
  if (*(int *)(v5 + 40) >= 1)
  {
    int v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(*(void *)(v5 + 32) + 4 * v7++),  (int)a2,  a4);
    while (v7 < *(int *)(v5 + 40));
  }

  if (*(int *)(v5 + 56) >= 1)
  {
    char v8 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(*(void *)(v5 + 48) + 4 * v8++),  (int)a2,  a4);
    while (v8 < *(int *)(v5 + 56));
  }

  if (*(int *)(v5 + 80) >= 1)
  {
    uint64_t v9 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(_DWORD *)(*(void *)(v5 + 72) + 4 * v9++),  (int)a2,  a4);
    while (v9 < *(int *)(v5 + 80));
  }

  if (*(int *)(v5 + 96) >= 1)
  {
    int v10 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(_DWORD *)(*(void *)(v5 + 88) + 4 * v10++),  (int)a2,  a4);
    while (v10 < *(int *)(v5 + 96));
  }

  if ((*(_BYTE *)(v5 + 109) & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(_DWORD *)(v5 + 68),  (int)a2,  a4);
  }
  int v13 = *(void **)(v5 + 8);
  unsigned int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v11 = v13;
  if (v13)
  {
    if (*v11 != v11[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v12, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  (int)a2,  *(double *)(v4 + 96),  a3);
  if ((*(_DWORD *)(v4 + 116) & 0x800) != 0) {
LABEL_13:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  (int)a2,  *(double *)(v4 + 104),  a3);
LABEL_14:
  char v8 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  int v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 48),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_30;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 36),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }

    char v19 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 124) |= 8u;
    *(void *)(a1 + 40) = v19;
    int v13 = *(_DWORD *)(a2 + 124);
    if ((v13 & 0x10) == 0)
    {
LABEL_17:
      if ((v13 & 0x20) == 0) {
        goto LABEL_18;
      }
      goto LABEL_32;
    }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(double *)(v5 + 32),  a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_30;
  }

  unint64_t v16 = *((void *)this + 6);
  *(_BYTE *)uint64_t v3 = 41;
  *(void *)((char *)v3 + 1) = v16;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  uint64_t v5 = *((_DWORD *)this + 19);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_41;
    }
    goto LABEL_35;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(unsigned __int8 *)(v5 + 52),  (BOOL)a2,  a4);
  if ((*(_DWORD *)(v5 + 60) & 0x400) != 0) {
LABEL_12:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  *(unsigned __int8 *)(v5 + 53),  (BOOL)a2,  a4);
LABEL_13:
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  int v17 = *((_DWORD *)this + 12);
  *(_BYTE *)uint64_t v4 = 45;
  *(_DWORD *)((char *)v4 + 1) = v17;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
  int v6 = *((_DWORD *)this + 17);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_43;
    }
LABEL_30:
    char v19 = *((void *)this + 7);
    *(_BYTE *)uint64_t v4 = 58;
    else {
      uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v19 + 23);
    }
    if (v20 > 0x7F)
    {
      uint64_t v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v20,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v20;
      uint64_t v21 = (_DWORD)v4 + 2;
    }

    int v22 = *(char *)(v19 + 23);
    if (v22 >= 0) {
      BOOL v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19;
    }
    else {
      BOOL v23 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v19;
    }
    if (v22 >= 0) {
      int v24 = (const void *)*(unsigned __int8 *)(v19 + 23);
    }
    else {
      int v24 = (const void *)*(unsigned int *)(v19 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v23,  v24,  v21,  a4);
    goto LABEL_43;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v4 + 48),  a3);
  if ((*(_DWORD *)(v4 + 132) & 0x20) != 0) {
LABEL_7:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v4 + 56),  a3);
LABEL_8:
  if (*(int *)(v4 + 72) >= 1)
  {
    int v6 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(double *)(*(void *)(v4 + 64) + 8 * v6++),  a3);
    while (v6 < *(int *)(v4 + 72));
  }

  if (*(int *)(v4 + 88) >= 1)
  {
    int v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  (int)a2,  *(double *)(*(void *)(v4 + 80) + 8 * v7++),  a3);
    while (v7 < *(int *)(v4 + 88));
  }

  if (*(int *)(v4 + 104) >= 1)
  {
    char v8 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  (int)a2,  *(double *)(*(void *)(v4 + 96) + 8 * v8++),  a3);
    while (v8 < *(int *)(v4 + 104));
  }

  if (*(int *)(v4 + 120) >= 1)
  {
    uint64_t v9 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  (int)a2,  *(double *)(*(void *)(v4 + 112) + 8 * v9++),  a3);
    while (v9 < *(int *)(v4 + 120));
  }

  unsigned int v12 = *(void **)(v4 + 8);
  int v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  int v10 = v12;
  if (v12)
  {
    if (*v10 != v10[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, a3);
    }
  }

  return this;
}

  uint64_t v21 = *(void *)(a1 + 48);
  *(_BYTE *)a2 = 41;
  *(void *)(a2 + 1) = v21;
  a2 += 9LL;
  if ((*(_DWORD *)(a1 + 132) & 0x20) != 0)
  {
LABEL_7:
    uint64_t v4 = *(void *)(a1 + 56);
    *(_BYTE *)a2 = 49;
    *(void *)(a2 + 1) = v4;
    a2 += 9LL;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(void *)(v5 + 72),  (unint64_t)a2,  a4);
  if ((*(_DWORD *)(v5 + 96) & 0x100) != 0) {
LABEL_20:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(void *)(v5 + 80),  (unint64_t)a2,  a4);
LABEL_21:
  int v13 = *(void **)(v5 + 8);
  unsigned int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v11 = v13;
  if (v13)
  {
    if (*v11 != v11[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v12, a2, a3);
    }
  }

  return this;
}

  uint64_t v20 = (void *)*((void *)this + 1);
  char v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v18 = v20;
  if (!v20 || *v18 == v18[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v19,  v3,  a3);
  }
}

  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if ((v14 & 0x80000000) != 0)
  {
    int v15 = 11;
  }

  else if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
    uint64_t v3 = *(_DWORD *)(a1 + 76);
  }

  else
  {
    int v15 = 2;
  }

  uint64_t v5 = (v15 + v5);
  if ((v3 & 0x20) == 0)
  {
LABEL_9:
    if ((v3 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }

        if (v10 == 4) {
          return 1LL;
        }
      }

      int v10 = TagFallback & 7;
      if (v10 != 5) {
        goto LABEL_28;
      }
LABEL_18:
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v25) & 1) == 0) {
        return 0LL;
      }
      *(_DWORD *)(a1 + 20) = v25;
      int v11 = *(_DWORD *)(a1 + 36) | 2;
      *(_DWORD *)(a1 + 36) = v11;
      int v13 = (_BYTE *)*((void *)this + 1);
    }

    while ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 26);
    *((void *)this + 1) = v13 + 1;
LABEL_22:
    *(_DWORD *)(a1 + 36) = v11 | 4;
    int v14 = *(void **)(a1 + 24);
    if (!v14)
    {
      int v14 = operator new(0x20uLL);
      sub_1000DF758(v14);
      *(void *)(a1 + 24) = v14;
    }

    int v15 = (char *)*((void *)this + 1);
    if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
    {
    }

    else
    {
      uint64_t v27 = *v15;
      *((void *)this + 1) = v15 + 1;
    }

    unint64_t v16 = *((_DWORD *)this + 14);
    int v17 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v16 + 1;
    if (v16 >= v17) {
      return 0LL;
    }
    int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
    uint64_t v21 = *((_DWORD *)this + 14);
    int v22 = __OFSUB__(v21, 1);
    BOOL v23 = v21 - 1;
    if (v23 < 0 == v22) {
      *((_DWORD *)this + 14) = v23;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
      uint64_t result = 1LL;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }

  uint64_t v20 = *((void *)this + 7);
  if (!v20) {
    uint64_t v20 = *(void *)(qword_100800590 + 56);
  }
  *(_BYTE *)uint64_t v3 = 58;
  uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v20 + 40);
  if (v21 > 0x7F)
  {
    int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v21,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v21;
    int v22 = (uint64_t)v3 + 2;
  }

  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000E6E20(v20, v22, a3);
  int v7 = *((_DWORD *)this + 22);
  if ((v7 & 0x80) != 0) {
    goto LABEL_34;
  }
LABEL_12:
  if ((v7 & 0x100) != 0)
  {
LABEL_13:
    char v8 = *((void *)this + 9);
    *(_BYTE *)uint64_t v3 = 73;
    *(void *)((char *)v3 + 1) = v8;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  (int)a2,  *(float *)(v5 + 44),  a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }

  char v19 = *((_DWORD *)this + 7);
  *(_BYTE *)uint64_t v3 = 45;
  *(_DWORD *)((char *)v3 + 1) = v19;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  uint64_t v5 = *((_DWORD *)this + 21);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(unsigned __int8 *)(v5 + 38),  (BOOL)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }

  int v18 = v4 + 9;
  if ((v3 & 0x10) == 0) {
    int v18 = v4;
  }
  if ((v3 & 0x20) != 0) {
    v18 += 2;
  }
  if ((v3 & 0x40) != 0) {
    uint64_t v5 = v18 + 2;
  }
  else {
    uint64_t v5 = v18;
  }
LABEL_35:
  char v19 = *(void **)(a1 + 8);
  if (v19 && *v19 != v19[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v5;
  *(_DWORD *)(a1 + 56) = v5;
  return v5;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 40),  a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_30;
  }

  unint64_t v16 = *((void *)this + 5);
  *a2 = 41;
  *(void *)(a2 + 1) = v16;
  a2 += 9;
  char v8 = *((_DWORD *)this + 16);
  if ((v8 & 0x20) == 0)
  {
LABEL_19:
    if ((v8 & 0x40) == 0) {
      goto LABEL_20;
    }
LABEL_30:
    int v18 = *((_BYTE *)this + 56);
    *a2 = 56;
    a2[1] = v18;
    a2 += 2;
    if ((*((_DWORD *)this + 16) & 0x80) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(_DWORD *)(v5 + 104),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(double *)(v5 + 56),  a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(float *)(v5 + 32),  a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_30;
  }

  unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 6);
  *(_BYTE *)a2 = 64;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, a2 + 1, a3);
  uint64_t v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x100) == 0)
  {
LABEL_10:
    if ((v4 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }

  unsigned int v12 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 140) |= 0x10u;
  *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v12;
  int v6 = *(_DWORD *)(a2 + 140);
  if ((v6 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_12:
  if ((v6 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_30:
  int v14 = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 140) |= 0x40u;
  *(void *)(a1 + 64) = v14;
  int v6 = *(_DWORD *)(a2 + 140);
  if ((v6 & 0x80) != 0)
  {
LABEL_14:
    int v7 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 140) |= 0x80u;
    *(void *)(a1 + 72) = v7;
    int v6 = *(_DWORD *)(a2 + 140);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(double *)(v5 + 72),  a3);
  char v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x80) == 0)
  {
LABEL_13:
    if ((v8 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(double *)(v5 + 32),  a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_30;
  }

  return v36;
}

        sub_1002BFAFC(a1);
        int v15 = 0;
        int v17 = -3010;
      }

      else
      {
        if (*(_BYTE *)(a1 + 168))
        {
          if (a2 == 2)
          {
            int v18 = 0;
          }

          else
          {
            if (a2 != 3)
            {
              uint64_t v31 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_FAULT))
              {
                sub_1002C18FC(a2, v35);
                if (SBYTE3(v39) >= 0) {
                  uint64_t v32 = v35;
                }
                else {
                  uint64_t v32 = *(_BYTE **)v35;
                }
                *(_DWORD *)std::string __p = 136315138;
                *(void *)&__p[4] = v32;
                _os_log_fault_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_FAULT,  "#alisha-sm,Cannot translate ranging timeout %s to a reason for session end",  __p,  0xCu);
                if (SBYTE3(v39) < 0) {
                  operator delete(*(void **)v35);
                }
                uint64_t v31 = (os_log_s *)qword_1008000A0;
              }

              if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)uint64_t v35 = 136315650;
                *(void *)&v35[4] = "/Library/Caches/com.apple.xbs/Sources/Proximity/Libraries/AlishaSupport/AlishaStateMachine.cpp";
                uint64_t v36 = 1024;
                uint64_t v37 = 450;
                uint64_t v38 = 2080;
                uint64_t v39 = "suspendOnTimeout";
                _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_INFO,  "#alisha-sm,%s:%d: assertion failure in %s",  v35,  0x1Cu);
              }

              abort();
            }

            int v18 = 1;
          }

          *(_DWORD *)(a1 + 18std::iostream::~basic_iostream(v2, v3 + 8) = v18;
          if (*(void *)(a1 + 152))
          {
            sub_1002C1B28(a1 + 128, 3, 4);
            uint64_t v20 = *(unsigned __int8 *)(a1 + 168);
            *(_BYTE *)(a1 + 160) = 4;
            if (!v20) {
              sub_100006080();
            }
          }

          else
          {
            *(_BYTE *)(a1 + 160) = 4;
          }

          int v22 = *(_DWORD *)(a1 + 164);
          *(_DWORD *)a3 = 0;
          *(_DWORD *)(a3 + 4) = v22;
          *(_DWORD *)(a3 + 12) = 0;
          int v15 = 1;
          goto LABEL_52;
        }

        sub_1002BFAFC(a1);
        int v15 = 0;
        int v17 = -3002;
      }

      *(_DWORD *)a3 = v17;
LABEL_51:
      *(_BYTE *)(a3 + 4) = 0;
LABEL_52:
      *(_BYTE *)(a3 + 16) = v15;
      return;
    case 4:
      int v11 = *(unsigned __int8 *)(a1 + 160);
LABEL_26:
      switch(v11)
      {
        case 1u:
        case 2u:
          unint64_t v16 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
          {
            sub_1002C18FC(a2, v35);
            uint64_t v27 = SBYTE3(v39);
            unsigned int v28 = *(_BYTE **)v35;
            sub_1002BF78C(*(_BYTE *)(a1 + 160), __p);
            uint64_t v29 = v35;
            if (v27 < 0) {
              uint64_t v29 = v28;
            }
            if (v41 >= 0) {
              uint64_t v30 = __p;
            }
            else {
              uint64_t v30 = *(_BYTE **)__p;
            }
            *(_DWORD *)pthread_attr_t buf = 136315394;
            NSFileAttributeKey v43 = v29;
            char v44 = 2080;
            uint64_t v45 = v30;
            _os_log_error_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "#alisha-sm,suspendOnTimeout error: %s event is received but state is %s",  buf,  0x16u);
            if (v41 < 0) {
              operator delete(*(void **)__p);
            }
            if (SBYTE3(v39) < 0) {
              goto LABEL_75;
            }
          }

          goto LABEL_28;
        case 3u:
          int v14 = sub_1002C0768(a1, *(unsigned int *)(a1 + 188));
          if (v14) {
            goto LABEL_40;
          }
          uint64_t v21 = *(unsigned __int8 *)(a1 + 160);
          if (v21 == 5) {
            goto LABEL_24;
          }
          if (*(void *)(a1 + 152)) {
            sub_1002C1B28(a1 + 128, v21, 5);
          }
          goto LABEL_23;
        case 4u:
          int v14 = sub_1002C0768(a1, *(unsigned int *)(a1 + 188));
          if (v14) {
            goto LABEL_40;
          }
          char v19 = *(unsigned __int8 *)(a1 + 160);
          if (v19 == 5) {
            goto LABEL_50;
          }
          if (*(void *)(a1 + 152)) {
            goto LABEL_48;
          }
          goto LABEL_49;
        default:
          goto LABEL_50;
      }

    case 5:
      if (*(_BYTE *)(a1 + 160) != 4) {
        goto LABEL_50;
      }
      int v14 = sub_1002C0768(a1, *(unsigned int *)(a1 + 188));
      if (v14)
      {
LABEL_40:
        sub_1002BFAFC(a1);
        int v15 = 0;
        *(_DWORD *)a3 = v14;
      }

      else
      {
        char v19 = *(unsigned __int8 *)(a1 + 160);
        if (v19 != 5)
        {
          if (*(void *)(a1 + 152)) {
LABEL_48:
          }
            sub_1002C1B28(a1 + 128, v19, 5);
LABEL_49:
          *(_BYTE *)(a1 + 160) = 5;
        }

  sub_1002C68A4(a1, a2);
  sub_1002C8054(a1, (float32x2_t *)a2, 0);
LABEL_29:
  char v25 = *(double *)(a2 + 8);
  if (!*(_BYTE *)(a1 + 32) || *(double *)(a1 + 24) < v25)
  {
    *(double *)(a1 + 24) = v25;
    *(_BYTE *)(a1 + sub_100012358(v1 - 32) = 1;
  }

    uint64_t v70 = 0x200000002LL;
    int64_t v68 = &off_1007BCB28;
    uint64_t v69 = xmmword_10042DF00;
    unint64_t v71 = v72;
    uint64_t v65 = 0x200000002LL;
    uint64_t v63 = &off_1007BCB28;
    uint64_t v64 = xmmword_10042DF00;
    int64_t v66 = v67;
    sub_1002D59DC((uint64_t)&v73, (uint64_t)&v68, (uint64_t)&v63);
    uint64_t v60 = 0x200000002LL;
    uint64_t v57 = &off_1007BCB28;
    if (DWORD1(v69) > 2)
    {
      uint64_t v49 = "this->max_num_rows_ >= num_rows";
      uint64_t v50 = 422;
    }

    else
    {
      if (v69 < 3)
      {
        uint64_t v58 = __PAIR64__(v69, DWORD1(v69));
        LODWORD(v59) = v69 * DWORD1(v69);
        HIDWORD(v59) = DWORD1(v69);
        unint64_t v61 = v62;
        sub_1002CB364((uint64_t)&v68, &v57);
        uint64_t v33 = v88;
        uint64_t v34 = v89;
        if (v88 == v89)
        {
          uint64_t v42 = 0.0;
          NSFileAttributeKey v43 = 0.0;
        }

        else
        {
          uint64_t v35 = 0.0;
          uint64_t v36 = 0.0;
          uint64_t v37 = 0.0;
          uint64_t v38 = 0.0;
          do
          {
            uint64_t v54 = 0x100000002LL;
            uint64_t v52 = &off_1007BCA98;
            uint64_t v53 = xmmword_10042DEE0;
            uint64_t v55 = &v56;
            sub_1002CB548((uint64_t)&v57, v33, (uint64_t)&v52);
            uint64_t v39 = sub_1002405E4((uint64_t)&v52, 0);
            uint64_t v40 = sub_1002405E4((uint64_t)&v52, 1u);
            if (v39 < v35) {
              uint64_t v41 = v39;
            }
            else {
              uint64_t v41 = v35;
            }
            if (v39 <= v36) {
              uint64_t v35 = v41;
            }
            else {
              uint64_t v36 = v39;
            }
            if (v40 <= v37)
            {
              if (v40 < v38) {
                uint64_t v38 = v40;
              }
            }

            else
            {
              uint64_t v37 = v40;
            }

            v33 += 56LL;
          }

          while (v33 != v34);
          uint64_t v42 = v36 - v35;
          NSFileAttributeKey v43 = v37 - v38;
        }

        if (v43 >= v42) {
          char v44 = v42;
        }
        else {
          char v44 = v43;
        }
        uint64_t v45 = *(double *)(v51 + 3696);
        if (v44 >= v45)
        {
          uint64_t v46 = 0;
          *(_BYTE *)(v51 + 368std::iostream::~basic_iostream(v2, v3 + 8) = 1;
        }

        else
        {
          if (v42 < v43) {
            uint64_t v42 = v43;
          }
          if (v42 < v45) {
            goto LABEL_55;
          }
          uint64_t v46 = 1;
        }

        *(_BYTE *)(v51 + 3689) = v46;
LABEL_55:
        unint64_t v73 = (uint64_t (**)())&v88;
        sub_1002DA2F4((void ***)&v73);
        return;
      }

      uint64_t v49 = "this->max_num_cols_ >= num_cols";
      uint64_t v50 = 423;
    }

    __assert_rtn("SetMatrixSize", "cnmatrixbase.h", v50, v49);
  }

  BOOL v23 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)pthread_attr_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "#sa_algo_particlefilter,peer kinematic data ingested",  buf,  2u);
  }

  *(double *)(a1 + 3920) = a4;
  *(_BYTE *)(a1 + 392std::iostream::~basic_iostream(v2, v3 + 8) = 1;
  *(double *)(a1 + 3936) = a4;
  *(_BYTE *)(a1 + 3944) = 1;
  *(double *)(a1 + 3736) = a4;
  *(_BYTE *)(a1 + 3744) = 1;
  if (*v10) {
    unsigned int *v10 = 0;
  }
}

    sub_100006080();
  }

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10004EBDC( wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 18);
  if ((v5 & 1) != 0)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(_BYTE *)a2 = 8;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v6,  (unint64_t)a2 + 1,  a3);
    int v5 = *((_DWORD *)this + 18);
  }

  if ((v5 & 2) != 0)
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(_BYTE *)uint64_t v3 = 16;
    if (v7 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v7,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v7;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 72) & 4) != 0)
  {
    char v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(_BYTE *)uint64_t v3 = 24;
    if (v8 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v8,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 72) & 8) != 0)
  {
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(_BYTE *)uint64_t v3 = 32;
    if (v9 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v9,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v9;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 72) & 0x10) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(_BYTE *)uint64_t v3 = 40;
    if (v10 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v10,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v10;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 72) & 0x20) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    *(_BYTE *)uint64_t v3 = 48;
    if (v11 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v11,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v11;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 72) & 0x40) != 0)
  {
    unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    *(_BYTE *)uint64_t v3 = 56;
    if (v12 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v12,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v12;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 72) & 0x80) != 0)
  {
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(_BYTE *)uint64_t v3 = 64;
    if (v13 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v13,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v13;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 73) & 1) != 0)
  {
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(_BYTE *)uint64_t v3 = 72;
    if (v14 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v14;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 73) & 2) != 0)
  {
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(_BYTE *)uint64_t v3 = 80;
    if (v15 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v15;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 73) & 4) != 0)
  {
    unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    *(_BYTE *)uint64_t v3 = 88;
    if (v16 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v16,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v16;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 73) & 8) != 0)
  {
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(_BYTE *)uint64_t v3 = 96;
    if (v17 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v17;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  uint64_t v20 = (void *)*((void *)this + 1);
  char v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v18 = v20;
  if (!v20 || *v18 == v18[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v19,  v3,  a3);
  }
}

uint64_t sub_10004EE84(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_42;
  }

  if ((v3 & 1) != 0)
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16),  (unint64_t)a2)
       + 1;
    int v3 = *(_DWORD *)(a1 + 72);
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }

  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 72);
  }

  else
  {
    int v6 = 1;
  }

  uint64_t v4 = (v4 + v6 + 1);
LABEL_11:
  if ((v3 & 4) != 0)
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 72);
    }

    else
    {
      int v8 = 1;
    }

    uint64_t v4 = (v4 + v8 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_13:
      if ((v3 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_26;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_13;
  }

  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    int v3 = *(_DWORD *)(a1 + 72);
  }

  else
  {
    int v10 = 1;
  }

  uint64_t v4 = (v4 + v10 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_14:
    if ((v3 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_30;
  }

LABEL_30:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 72);
  }

  else
  {
    int v14 = 2;
  }

  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_16:
    if ((v3 & 0x80) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }

  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 72);
  }

  else
  {
    int v14 = 2;
  }

  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_16:
    if ((v3 & 0x80) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }

  int v12 = *(void *)(v5 + 72);
  if (!v12) {
    int v12 = *(void *)(qword_1008000E8 + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  v12,  a2,  a4);
  if ((*(_DWORD *)(v5 + 96) & 0x200) != 0)
  {
LABEL_33:
    int v13 = *(void *)(v5 + 80);
    if (!v13) {
      int v13 = *(void *)(qword_1008000E8 + 80);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  v13,  a2,  a4);
  }

  int v16 = (unsigned int *)*((void *)this + 4);
  if (!v16) {
    int v16 = *(unsigned int **)(qword_1008000E8 + 32);
  }
  *(_BYTE *)uint64_t v4 = 34;
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[17];
  if (v17 > 0x7F)
  {
    int v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v17;
    int v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_10004EBDC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, v18, a3);
  uint64_t v9 = *((_DWORD *)this + 24);
  if ((v9 & 0x10) == 0)
  {
LABEL_12:
    if ((v9 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_49;
  }

  int v15 = *(void **)(v5 + 8);
  int v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v13 = v15;
  if (v15)
  {
    if (*v13 != v13[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v14, a2, a3);
    }
  }

  return this;
}

  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }

  else
  {
    int v13 = 2;
  }

  v4 += v13;
  if ((v3 & 0x40) != 0)
  {
LABEL_34:
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if ((v14 & 0x80000000) != 0)
    {
      int v15 = 11;
    }

    else if (v14 >= 0x80)
    {
    }

    else
    {
      int v15 = 2;
    }

    v4 += v15;
  }

  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    int v3 = *(_DWORD *)(a1 + 108);
  }

  else
  {
    int v14 = 1;
  }

  v4 += v14 + 1;
  if ((v3 & 0x200) != 0)
  {
LABEL_34:
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
    if ((v15 & 0x80000000) != 0)
    {
      int v16 = 11;
    }

    else if (v15 >= 0x80)
    {
    }

    else
    {
      int v16 = 2;
    }

    v4 += v16;
  }

  uint64_t v21 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 88) |= 0x10u;
  *(_DWORD *)(a1 + 52) = v21;
  int v13 = *(_DWORD *)(a2 + 88);
  if ((v13 & 0x20) != 0) {
    goto LABEL_31;
  }
LABEL_19:
  if ((v13 & 0x40) == 0) {
    goto LABEL_20;
  }
LABEL_32:
  BOOL v23 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 88) |= 0x40u;
  *(_DWORD *)(a1 + 6std::iostream::~basic_iostream(v2, v3 + 8) = v23;
  int v13 = *(_DWORD *)(a2 + 88);
  if ((v13 & 0x80) != 0)
  {
LABEL_21:
    int v15 = *(_DWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 88) |= 0x80u;
    *(_DWORD *)(a1 + 72) = v15;
    int v13 = *(_DWORD *)(a2 + 88);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(_DWORD *)(v5 + 56),  a2,  a4);
  if ((*(_DWORD *)(v5 + 68) & 0x200) != 0) {
LABEL_11:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(_DWORD *)(v5 + 60),  a2,  a4);
LABEL_12:
  uint64_t v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    int v3 = *(_DWORD *)(a1 + 468);
  }

  else
  {
    int v14 = 1;
  }

  v4 += v14 + 1;
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_43;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 28),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x20) == 0)
  {
LABEL_6:
    if ((v6 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  *(_DWORD *)(v5 + 44),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }

  int v15 = *(uint64_t **)(v5 + 48);
  if (*((char *)v15 + 23) < 0)
  {
    int v15 = (uint64_t *)*v15;
    int v16 = *(void *)(*(void *)(v5 + 48) + 8LL);
  }

  else
  {
    int v16 = *((unsigned __int8 *)v15 + 23);
  }

  wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v15, v16, 1LL);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(5LL, *(void *)(v5 + 48), a2);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_35;
  }

  int v18 = *((void *)this + 5);
  *(_BYTE *)int v3 = 41;
  *(void *)((char *)v3 + 1) = v18;
  int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v8 = *((_DWORD *)this + 15);
  if ((v8 & 0x20) == 0)
  {
LABEL_13:
    if ((v8 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }

  int v11 = *(void *)(v5 + 48);
  if (!v11) {
    int v11 = *(void *)(qword_100800498 + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  v11,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_36;
  }

  int v14 = (unsigned int *)*((void *)this + 4);
  if (!v14) {
    int v14 = *(unsigned int **)(qword_100800498 + 32);
  }
  *(_BYTE *)uint64_t v4 = 26;
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[16];
  if (v15 > 0x7F)
  {
    int v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v15;
    int v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_1000D699C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v16, a3, a4);
  int v6 = *((_DWORD *)this + 37);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_42;
  }

        if (v10 == 4) {
          return 1LL;
        }
      }

      int v10 = TagFallback & 7;
      if (v10 != 1) {
        goto LABEL_30;
      }
LABEL_20:
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v26) & 1) == 0) {
        return 0LL;
      }
      *(void *)(a1 + 24) = v26;
      int v11 = *(_DWORD *)(a1 + 44) | 2;
      *(_DWORD *)(a1 + 44) = v11;
      int v15 = (_BYTE *)*((void *)this + 1);
    }

    while ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 26);
    *((void *)this + 1) = v15 + 1;
LABEL_24:
    *(_DWORD *)(a1 + 44) = v11 | 4;
    int v16 = *(void **)(a1 + 32);
    if (!v16)
    {
      int v16 = operator new(0x58uLL);
      sub_1000D4184((uint64_t)v16);
      *(void *)(a1 + sub_100012358(v1 - 32) = v16;
    }

    int v17 = (char *)*((void *)this + 1);
    if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
    {
    }

    else
    {
      uint64_t v27 = *v17;
      *((void *)this + 1) = v17 + 1;
    }

    int v18 = *((_DWORD *)this + 14);
    char v19 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v18 + 1;
    if (v18 >= v19) {
      return 0LL;
    }
    int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
    BOOL v23 = *((_DWORD *)this + 14);
    int v24 = __OFSUB__(v23, 1);
    char v25 = v23 - 1;
    if (v25 < 0 == v24) {
      *((_DWORD *)this + 14) = v25;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
      uint64_t result = 1LL;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }

  char v19 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 84) |= 4u;
  *(_DWORD *)(a1 + 24) = v19;
  int v13 = *(_DWORD *)(a2 + 84);
  if ((v13 & 8) == 0)
  {
LABEL_16:
    if ((v13 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(unsigned __int8 *)(v5 + 38),  (BOOL)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

  uint64_t v21 = *((_DWORD *)this + 10);
  *(_BYTE *)int v3 = 61;
  *(_DWORD *)((char *)v3 + 1) = v21;
  int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  int v5 = *((_DWORD *)this + 21);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  (int)a2,  *(float *)(v5 + 44),  a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 56),  a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  (int)a2,  *(double *)(v5 + 88),  a3);
  if ((*(_DWORD *)(v5 + 112) & 0x1000) != 0) {
LABEL_14:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD,  (int)a2,  *(double *)(v5 + 96),  a3);
LABEL_15:
  uint64_t v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  if ((*((_BYTE *)this + 112) & 0x80) != 0)
  {
    int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    *(_BYTE *)uint64_t v4 = 64;
    if (v20 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v20,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v20;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  uint64_t v21 = *((_DWORD *)this + 28);
  if ((v21 & 0x100) != 0)
  {
    int v22 = *((void *)this + 9);
    *(_BYTE *)uint64_t v4 = 73;
    *(void *)((char *)v4 + 1) = v22;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    uint64_t v21 = *((_DWORD *)this + 28);
  }

  if ((v21 & 0x200) != 0)
  {
    BOOL v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 26);
    *(_BYTE *)uint64_t v4 = 80;
    if (v23 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v23,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v23;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
  }

  int v24 = *((_DWORD *)this + 28);
  if ((v24 & 0x400) == 0)
  {
    if ((v24 & 0x800) == 0) {
      goto LABEL_42;
    }
LABEL_49:
    uint64_t v31 = *((void *)this + 11);
    *(_BYTE *)uint64_t v4 = 97;
    *(void *)((char *)v4 + 1) = v31;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    if ((*((_DWORD *)this + 28) & 0x1000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_43;
  }

  uint64_t v30 = *((void *)this + 10);
  *(_BYTE *)uint64_t v4 = 89;
  *(void *)((char *)v4 + 1) = v30;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v24 = *((_DWORD *)this + 28);
  if ((v24 & 0x800) != 0) {
    goto LABEL_49;
  }
LABEL_42:
  if ((v24 & 0x1000) != 0)
  {
LABEL_43:
    char v25 = *((void *)this + 12);
    *(_BYTE *)uint64_t v4 = 105;
    *(void *)((char *)v4 + 1) = v25;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  }

  int v10 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 124) |= 4u;
  *(_DWORD *)(a1 + 2std::iostream::~basic_iostream(v2, v3 + 8) = v10;
  int v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(float *)(v5 + 40),  a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }

  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 8);
  *(_BYTE *)a2 = 80;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v14, a2 + 1, a3);
  uint64_t v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x400) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  (int)a2,  *(double *)(v5 + 88),  a3);
  int v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x200) == 0)
  {
LABEL_15:
    if ((v8 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }

  int v18 = *((void *)this + 8);
  *(_BYTE *)int v3 = 49;
  *(void *)((char *)v3 + 1) = v18;
  int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x40) == 0)
  {
LABEL_15:
    if ((v10 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 48),  a3);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_32;
  }

  if (*((int *)this + 30) >= 1)
  {
    char v19 = 0LL;
    do
    {
      int v20 = *(void *)(*((void *)this + 14) + 8 * v19);
      *(_BYTE *)uint64_t v4 = 113;
      *(void *)((char *)v4 + 1) = v20;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
      ++v19;
    }

    while (v19 < *((int *)this + 30));
  }

  if ((*((_BYTE *)this + 141) & 0x40) != 0)
  {
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 32);
    *(_BYTE *)uint64_t v4 = 120;
    int v22 = (unint64_t)v4 + 1;
    if ((v21 & 0x80000000) != 0)
    {
      char v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v21,  v22,  a3);
    }

    else
    {
      if (v21 <= 0x7F)
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v21;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        goto LABEL_55;
      }

      char v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v21,  v22,  a3);
    }

    uint64_t v4 = v25;
  }

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0x1000uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0x1000uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFF0uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0x1080uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xF30uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0x1000uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0x1000uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

    if (v14 > (v12.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
    {
      v15.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_33:
      std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 840), &__lk, v15);
      std::chrono::steady_clock::now();
      goto LABEL_34;
    }

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFF0uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

    sub_100006080();
  }

  if (BYTE4(v2) == 2)
  {
    if ((_BYTE)v3)
    {
      int v5 = HIBYTE(v2) - 1;
      goto LABEL_18;
    }

    goto LABEL_30;
  }

  if (BYTE4(v2) != 1) {
    goto LABEL_18;
  }
  if ((v2 & 0xFF000000000000LL) == 0) {
    goto LABEL_30;
  }
  if (BYTE5(v2) == 2) {
    return 4294967196LL;
  }
  if (BYTE5(v2) == 255 || BYTE5(v2) == 133) {
    return 4294967194LL;
  }
LABEL_18:
  uint64_t v4 = 0LL;
  if ((int)v2 <= -1034)
  {
    if ((v2 + 4026) >= 0x1B)
    {
      if ((v2 + 2024) > 0x18)
      {
      }

      else if (((1 << (v2 - 24)) & 0x73FFEF) != 0)
      {
        return 4294967194LL;
      }
    }

    return 4294967196LL;
  }

  switch((int)v2)
  {
    case 6:
    case 8:
    case 12:
    case 13:
    case 14:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 28:
    case 29:
    case 31:
    case 32:
    case 39:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 62:
    case 63:
    case 64:
    case 65:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 98:
    case 99:
    case 100:
    case 101:
    case 112:
    case 113:
    case 114:
    case 115:
      return 4294967196LL;
    case 7:
    case 9:
    case 10:
    case 11:
    case 15:
    case 16:
    case 17:
    case 24:
    case 25:
    case 26:
    case 27:
    case 30:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 58:
    case 59:
    case 60:
    case 61:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
      return v4;
    default:
      break;
  }

  return v4;
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0x1000uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFF0uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFD0uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFC0uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

    sub_100006080();
  }

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFF8uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFF0uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0x1000uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0x1000uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFD0uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0x1000uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xF70uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0x1000uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

    uint64_t v63 = 0LL;
    *uint64_t v9 = 1;
LABEL_31:
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }

    std::filebuf::~filebuf(v79);
    std::ios::~ios(&v80);
    if (v74 < 0) {
      operator delete(v73[0]);
    }
    if (v76 < 0) {
      operator delete(v75[0]);
    }
  }

  else
  {
    sub_10032C3DC("Firmware logs are disabled", (uint64_t)a2, (uint64_t)a3, a4, (uint64_t)a5, a6, a7, a8, v66);
    return 1LL;
  }

  return v63;
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFF0uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0x1000uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

      NSFileAttributeKey v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }

      goto LABEL_33;
    }

    goto LABEL_5;
  }

  if (v23 == *a1) {
    char v25 = 1LL;
  }
  else {
    char v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&uint64_t v54 = sub_1000472C0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&uint64_t v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFA0uLL);
  sub_10011CB88(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  unsigned int v28 = -7LL - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8LL;
    sub_10011CC9C((uint64_t)&v54, v27);
  }

  uint64_t v29 = (char *)*a1;
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  *(void *)&uint64_t v54 = *a1;
  *((void *)&v54 + 1) = v27;
  uint64_t v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  uint64_t v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&uint64_t v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8LL);
  }
  if (v29) {
    operator delete(v29);
  }
}

LABEL_42:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      char v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
      if (v19 >= 0x80)
      {
        int v3 = *(_DWORD *)(a1 + 72);
      }

      else
      {
        int v20 = 2;
      }

      uint64_t v4 = (v20 + v4);
      if ((v3 & 0x200) == 0)
      {
LABEL_45:
        if ((v3 & 0x400) == 0) {
          goto LABEL_46;
        }
        goto LABEL_56;
      }
    }

    else if ((v3 & 0x200) == 0)
    {
      goto LABEL_45;
    }

    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if (v21 >= 0x80)
    {
      int v3 = *(_DWORD *)(a1 + 72);
    }

    else
    {
      int v22 = 2;
    }

    uint64_t v4 = (v22 + v4);
    if ((v3 & 0x400) == 0)
    {
LABEL_46:
      if ((v3 & 0x800) == 0) {
        goto LABEL_64;
      }
LABEL_60:
      char v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
      if (v25 >= 0x80) {
      else
      }
        int v26 = 2;
      uint64_t v4 = (v26 + v4);
      goto LABEL_64;
    }

  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      char v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
      if (v19 >= 0x80)
      {
        int v3 = *(_DWORD *)(a1 + 72);
      }

      else
      {
        int v20 = 2;
      }

      uint64_t v4 = (v20 + v4);
      if ((v3 & 0x200) == 0)
      {
LABEL_45:
        if ((v3 & 0x400) == 0) {
          goto LABEL_46;
        }
        goto LABEL_56;
      }
    }

    else if ((v3 & 0x200) == 0)
    {
      goto LABEL_45;
    }

    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if (v21 >= 0x80)
    {
      int v3 = *(_DWORD *)(a1 + 72);
    }

    else
    {
      int v22 = 2;
    }

    uint64_t v4 = (v22 + v4);
    if ((v3 & 0x400) == 0)
    {
LABEL_46:
      if ((v3 & 0x800) == 0) {
        goto LABEL_64;
      }
LABEL_60:
      char v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
      if (v25 >= 0x80) {
      else
      }
        int v26 = 2;
      uint64_t v4 = (v26 + v4);
      goto LABEL_64;
    }

  if (*((int *)this + 20) >= 1)
  {
    int v20 = 0LL;
    while (1)
    {
      uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 9) + 4 * v20);
      *(_BYTE *)int v3 = 64;
      int v22 = (unint64_t)v3 + 1;
      if (v21 > 0x7F)
      {
        BOOL v23 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v21,  v22,  a3);
        goto LABEL_49;
      }

      *((_BYTE *)v3 + 1) = (_BYTE)v21;
      int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
LABEL_50:
    }

    BOOL v23 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v21,  v22,  a3);
LABEL_49:
    int v3 = v23;
    goto LABEL_50;
  }

    *(_DWORD *)(a1 + 132) |= 8u;
    uint64_t v37 = *(void **)(a1 + 32);
    if (!v37)
    {
      uint64_t v37 = operator new(0x28uLL);
      sub_10007F6B8((uint64_t)v37);
      *(void *)(a1 + sub_100012358(v1 - 32) = v37;
    }

    uint64_t v38 = *(void *)(a2 + 32);
    if (!v38) {
      uint64_t v38 = *(void *)(qword_1008002D8 + 32);
    }
    sub_10007F70C((uint64_t)v37, v38);
    uint64_t v29 = *(_DWORD *)(a2 + 132);
    if ((v29 & 0x10) == 0) {
      goto LABEL_34;
    }
LABEL_33:
    uint64_t v30 = *(_DWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 132) |= 0x10u;
    *(_DWORD *)(a1 + 72) = v30;
    uint64_t v29 = *(_DWORD *)(a2 + 132);
LABEL_34:
    if ((v29 & 0x20) != 0)
    {
      uint64_t v31 = *(void *)(a2 + 40);
      *(_DWORD *)(a1 + 132) |= 0x20u;
      *(void *)(a1 + 40) = v31;
      uint64_t v29 = *(_DWORD *)(a2 + 132);
    }
  }

  if ((v29 & 0x200) != 0)
  {
    uint64_t v32 = *(_DWORD *)(a2 + 76);
    *(_DWORD *)(a1 + 132) |= 0x200u;
    *(_DWORD *)(a1 + 76) = v32;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  uint64_t v21 = *(_DWORD *)(a1 + 72);
  int v22 = (v21 + v5);
  if (v21 >= 1)
  {
    BOOL v23 = 0LL;
    do
    {
      int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100090A58( *(void *)(*(void *)(a1 + 64) + 8 * v23),  a2);
      char v25 = (int)v24;
      else {
        int v26 = 1;
      }
      int v22 = (v25 + v22 + v26);
      ++v23;
    }

    while (v23 < *(int *)(a1 + 72));
  }

  uint64_t v27 = *(void **)(a1 + 8);
  if (v27 && *v27 != v27[1]) {
    int v22 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v22;
  *(_DWORD *)(a1 + 92) = v22;
  return v22;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  (int)a2,  *(double *)(v5 + 80),  a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_44;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10,  *(_DWORD *)(v5 + 32),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_44;
  }

  unsigned int v28 = (uint64_t *)*((void *)this + 6);
  if (*((char *)v28 + 23) < 0)
  {
    unsigned int v28 = (uint64_t *)*v28;
    uint64_t v29 = *(void *)(*((void *)this + 6) + 8LL);
  }

  else
  {
    uint64_t v29 = *((unsigned __int8 *)v28 + 23);
  }

  wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v28, v29, 1LL);
  uint64_t v32 = *((void *)this + 6);
  *(_BYTE *)a2 = 42;
  else {
    uint64_t v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v32 + 23);
  }
  if (v33 > 0x7F)
  {
    uint64_t v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v33,  (int)a2 + 1,  v30);
  }

  else
  {
    *((_BYTE *)a2 + 1) = (_BYTE)v33;
    uint64_t v34 = (_DWORD)a2 + 2;
  }

  uint64_t v35 = *(char *)(v32 + 23);
  if (v35 >= 0) {
    uint64_t v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v32;
  }
  else {
    uint64_t v36 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v32;
  }
  if (v35 >= 0) {
    uint64_t v37 = (const void *)*(unsigned __int8 *)(v32 + 23);
  }
  else {
    uint64_t v37 = (const void *)*(unsigned int *)(v32 + 8);
  }
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v36,  v37,  v34,  v31);
  if ((*((_DWORD *)this + 31) & 0x20) != 0)
  {
LABEL_58:
    uint64_t v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(_BYTE *)a2 = 48;
    if (v38 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v38,  (int)a2 + 1,  a3);
    }

    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v38;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }

  int v26 = *(void **)(a1 + 8);
  if (v26 && *v26 != v26[1]) {
    int v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v5;
  *(_DWORD *)(a1 + 72) = v5;
  return v5;
}

  int v15 = *(void *)(v5 + 80);
  if (!v15) {
    int v15 = *(void *)(qword_100800498 + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  v15,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_48;
  }

  int v20 = (unsigned int *)*((void *)this + 6);
  if (!v20) {
    int v20 = *(unsigned int **)(qword_100800498 + 48);
  }
  *(_BYTE *)uint64_t v4 = 42;
  uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20[6];
  if (v21 > 0x7F)
  {
    int v22 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v21,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v21;
    int v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_1000E4B38((wireless_diagnostics::google::protobuf::internal::WireFormat *)v20, v22, a3, a4);
  int v6 = *((_DWORD *)this + 37);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_54;
  }

  char v19 = *(void *)(v5 + 104);
  if (!v19) {
    char v19 = *(void *)(qword_100800558 + 104);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  v19,  a2,  a4);
  if ((*(_DWORD *)(v5 + 120) & 0x400) != 0) {
LABEL_15:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  (int)a2,  *(float *)(v5 + 112),  a3);
LABEL_16:
  int v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

  uint64_t v21 = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 124) |= 0x4000u;
  *(_DWORD *)(a1 + 100) = v21;
  int v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x8000) != 0)
  {
LABEL_22:
    int v7 = *(_DWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 124) |= 0x8000u;
    *(_DWORD *)(a1 + 104) = v7;
    int v5 = *(_DWORD *)(a2 + 124);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12,  (int)a2,  *(float *)(v5 + 112),  a3);
  if ((*(_DWORD *)(v5 + 124) & 0x40000) != 0) {
LABEL_20:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13,  *(_DWORD *)(v5 + 116),  (int)a2,  a4);
LABEL_21:
  uint64_t v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

    int v17 = (double *)(a1 + 1);
LABEL_43:
    *a3 = v17;
    return v5;
  }

  if (v7 <= v6)
  {
    *a3 = a2;
    *(void *)a4 = a2;
    return a4;
  }

  int v11 = *((void *)a2 + 1);
  if (v11)
  {
    int v12 = (double *)*((void *)a2 + 1);
    do
    {
      a4 = v12;
      int v12 = *(double **)v12;
    }

    while (v12);
  }

  else
  {
    char v19 = a2;
    do
    {
      a4 = (double *)*((void *)v19 + 2);
      int v14 = *(void *)a4 == (void)v19;
      char v19 = a4;
    }

    while (!v14);
  }

  if (a4 != v5 && v6 <= a4[4])
  {
    int v20 = *(double **)v5;
    if (*(void *)v5)
    {
      do
      {
        while (1)
        {
          int v17 = v20;
          uint64_t v21 = v20[4];
          if (v6 <= v21) {
            break;
          }
          int v20 = *(double **)v20;
          int v5 = v17;
          if (!*(void *)v17) {
            goto LABEL_43;
          }
        }

        if (v21 <= v6) {
          break;
        }
        int v5 = v20 + 1;
        int v20 = (double *)*((void *)v20 + 1);
      }

      while (v20);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v11)
  {
    *a3 = a4;
  }

  else
  {
    *a3 = a2;
    return a2 + 1;
  }

  return a4;
}

    *(_BYTE *)(a1 + 1689) = 1;
    if (!*(_BYTE *)(a1 + 1688)) {
      goto LABEL_46;
    }
    goto LABEL_43;
  }

  return result;
}

  ++*(void *)(a1 + 24);
  return i;
}

    int v17 = (double *)(a1 + 1);
LABEL_43:
    *a3 = v17;
    return v5;
  }

  if (v7 >= v6)
  {
    *a3 = a2;
    *(void *)a4 = a2;
    return a4;
  }

  int v11 = *((void *)a2 + 1);
  if (v11)
  {
    int v12 = (double *)*((void *)a2 + 1);
    do
    {
      a4 = v12;
      int v12 = *(double **)v12;
    }

    while (v12);
  }

  else
  {
    char v19 = a2;
    do
    {
      a4 = (double *)*((void *)v19 + 2);
      int v14 = *(void *)a4 == (void)v19;
      char v19 = a4;
    }

    while (!v14);
  }

  if (a4 != v5 && v6 >= a4[5])
  {
    int v20 = *(double **)v5;
    if (*(void *)v5)
    {
      do
      {
        while (1)
        {
          int v17 = v20;
          uint64_t v21 = v20[5];
          if (v6 >= v21) {
            break;
          }
          int v20 = *(double **)v20;
          int v5 = v17;
          if (!*(void *)v17) {
            goto LABEL_43;
          }
        }

        if (v21 >= v6) {
          break;
        }
        int v5 = v20 + 1;
        int v20 = (double *)*((void *)v20 + 1);
      }

      while (v20);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v11)
  {
    *a3 = a4;
  }

  else
  {
    *a3 = a2;
    return a2 + 1;
  }

  return a4;
}

    int v17 = (double *)(a1 + 1);
LABEL_43:
    *a3 = v17;
    return v5;
  }

  if (v7 >= v6)
  {
    *a3 = a2;
    *(void *)a4 = a2;
    return a4;
  }

  int v11 = *((void *)a2 + 1);
  if (v11)
  {
    int v12 = (double *)*((void *)a2 + 1);
    do
    {
      a4 = v12;
      int v12 = *(double **)v12;
    }

    while (v12);
  }

  else
  {
    char v19 = a2;
    do
    {
      a4 = (double *)*((void *)v19 + 2);
      int v14 = *(void *)a4 == (void)v19;
      char v19 = a4;
    }

    while (!v14);
  }

  if (a4 != v5 && v6 >= a4[4])
  {
    int v20 = *(double **)v5;
    if (*(void *)v5)
    {
      do
      {
        while (1)
        {
          int v17 = v20;
          uint64_t v21 = v20[4];
          if (v6 >= v21) {
            break;
          }
          int v20 = *(double **)v20;
          int v5 = v17;
          if (!*(void *)v17) {
            goto LABEL_43;
          }
        }

        if (v21 >= v6) {
          break;
        }
        int v5 = v20 + 1;
        int v20 = (double *)*((void *)v20 + 1);
      }

      while (v20);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v11)
  {
    *a3 = a4;
  }

  else
  {
    *a3 = a2;
    return a2 + 1;
  }

  return a4;
}

LABEL_43:
          goto LABEL_44;
        }

        uint64_t v55 = "normalizedFftCirPacket1.size() == normalizedFftCirPacket2.size()";
        uint64_t v56 = 257;
      }

      else
      {
        uint64_t v55 = "normalizedFftCirPacket1.size() == kDimExtractedFftCir";
        uint64_t v56 = 256;
      }

      __assert_rtn( "-[RangeBiasEstimatorSingleAntennaModel consumeInputFeatures:]",  "NRBYRangeBiasEstimator.mm",  v56,  v55);
    }

    uint64_t v40 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)pthread_attr_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEFAULT,  "#bias-est, Scaling CIRs failed, not calculating bias estimate.",  buf,  2u);
    }

    uint64_t v39 = 0LL;
    goto LABEL_42;
  }

  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
    sub_1003AA738();
  }
  uint64_t v39 = 0LL;
LABEL_44:

  return v39;
}

      a2[1] = v23;
      ++v19;
      uint64_t v9 = (_BYTE *)v23;
    }

    while (v19 != v20);
  }

  return 0LL;
}

LABEL_56:
    BOOL v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v23 >= 0x80)
    {
      int v3 = *(_DWORD *)(a1 + 72);
    }

    else
    {
      int v24 = 2;
    }

    uint64_t v4 = (v24 + v4);
    if ((v3 & 0x800) == 0) {
      goto LABEL_64;
    }
    goto LABEL_60;
  }

    BOOL v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v23 >= 0x80)
    {
      int v3 = *(_DWORD *)(a1 + 72);
    }

    else
    {
      int v24 = 2;
    }

    uint64_t v4 = (v24 + v4);
    if ((v3 & 0x800) == 0) {
      goto LABEL_64;
    }
    goto LABEL_60;
  }

  int v14 = *(void *)(v5 + 72);
  if (!v14) {
    int v14 = *(void *)(qword_100800158 + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  v14,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_62;
  }

  char v19 = (unsigned int *)*((void *)this + 5);
  if (!v19) {
    char v19 = *(unsigned int **)(qword_1008001F0 + 40);
  }
  *(_BYTE *)uint64_t v4 = 42;
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19[20];
  if (v20 > 0x7F)
  {
    uint64_t v21 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v20,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v20;
    uint64_t v21 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_100082D88((wireless_diagnostics::google::protobuf::internal::WireFormat *)v19, v21, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x20) == 0)
  {
LABEL_19:
    if ((v12 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_68;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  (int)a2,  *(double *)(v5 + 88),  a3);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_58;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(void *)(v5 + 48),  (unint64_t)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 232);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_58;
  }

  v15[30] |= 4u;
  uint64_t v41 = (_DWORD *)*((void *)v15 + 6);
  if (!v41)
  {
    uint64_t v41 = operator new(0x28uLL);
    sub_1000CDD54(v41);
    *((void *)v15 + 6) = v41;
  }

  uint64_t v42 = v41[9];
  *((void *)v41 + 2) = *(void *)(a4 + 24);
  v41[9] = v42 | 7;
  NSFileAttributeKey v43 = (_DWORD *)*((void *)v41 + 3);
  if (!v43)
  {
    NSFileAttributeKey v43 = operator new(0x20uLL);
    sub_1000CDD50(v43);
    *((void *)v41 + 3) = v43;
  }

  v43[7] |= 3u;
  *((void *)v43 + 2) = *(void *)(a4 + 32);
  v15[30] |= 0x10u;
  char v44 = (char *)*((void *)v15 + 8);
  if (!v44)
  {
    char v44 = (char *)operator new(0x50uLL);
    sub_1000CDD60((uint64_t)v44);
    *((void *)v15 + std::iostream::~basic_iostream(v2, v3 + 8) = v44;
  }

  uint64_t v45 = *((_DWORD *)v44 + 18);
  *((float32x4_t *)v44 + 1) = vcvt_hight_f32_f64( (int32x2_t)vcvt_f32_f64(*(float64x2_t *)(a4 + 264)),  *(float64x2_t *)(a4 + 280));
  *((float32x2_t *)v44 + 4) = vcvt_f32_f64(*(float64x2_t *)(a4 + 296));
  uint64_t v46 = *(double *)(a4 + 312);
  *((float *)v44 + 16) = v46;
  *(_OWORD *)(v44 + 40) = *(_OWORD *)(a4 + 320);
  *((_DWORD *)v44 + 1std::iostream::~basic_iostream(v2, v3 + 8) = v45 | 0x3FF;
  uint64_t v47 = (_DWORD *)*((void *)v44 + 7);
  if (!v47)
  {
    uint64_t v47 = operator new(0x20uLL);
    sub_1000CDD50(v47);
    *((void *)v44 + 7) = v47;
  }

  v47[7] |= 3u;
  *((void *)v47 + 2) = *(void *)(a4 + 336);
  v15[30] |= 0x40u;
  uint64_t v48 = (_DWORD *)*((void *)v15 + 10);
  if (!v48)
  {
    uint64_t v48 = operator new(0x30uLL);
    sub_1000CDD48((uint64_t)v48);
    *((void *)v15 + 10) = v48;
  }

  uint64_t v49 = v48[10];
  v48[4] = *(_DWORD *)(a4 + 424);
  uint64_t v50 = *(_BYTE *)(a4 + 536);
  v48[10] = v49 | 9;
  *((_BYTE *)v48 + sub_100012358(v1 - 32) = v50;
  v15[30] |= 0x200u;
  uint64_t v51 = (_DWORD *)*((void *)v15 + 13);
  if (!v51)
  {
    uint64_t v51 = operator new(0x30uLL);
    sub_1000CDD5C((uint64_t)v51);
    *((void *)v15 + 13) = v51;
  }

  uint64_t v52 = *(_BYTE *)(a4 + 120);
  uint64_t v53 = v51[11];
  v51[11] = v53 | 1;
  *((_BYTE *)v51 + 16) = v52;
  v51[5] = *(_DWORD *)(a4 + 124);
  v51[11] = v53 | 7;
  uint64_t v54 = (char *)*((void *)v51 + 3);
  if (!v54)
  {
    uint64_t v54 = (char *)operator new(0x60uLL);
    sub_1000CDD58((uint64_t)v54);
    *((void *)v51 + 3) = v54;
  }

  uint64_t v55 = *((_DWORD *)v54 + 22);
  *((_DWORD *)v54 + 20) = *(_DWORD *)(a4 + 128);
  *(_OWORD *)(v54 + 24) = *(_OWORD *)(a4 + 136);
  *(_OWORD *)(v54 + 40) = *(_OWORD *)(a4 + 152);
  *(_OWORD *)(v54 + 56) = *(_OWORD *)(a4 + 168);
  uint64_t v56 = *(void *)(a4 + 184);
  *((_DWORD *)v54 + 22) = v55 | 0x3FC;
  *((void *)v54 + 9) = v56;
  v51[11] |= 8u;
  uint64_t v57 = (char *)*((void *)v51 + 4);
  if (!v57)
  {
    uint64_t v57 = (char *)operator new(0x60uLL);
    sub_1000CDD58((uint64_t)v57);
    *((void *)v51 + 4) = v57;
  }

  uint64_t v58 = *((_DWORD *)v57 + 22);
  *((_DWORD *)v57 + 20) = *(_DWORD *)(a4 + 192);
  *(_OWORD *)(v57 + 24) = *(_OWORD *)(a4 + 200);
  *(_OWORD *)(v57 + 40) = *(_OWORD *)(a4 + 216);
  *(_OWORD *)(v57 + 56) = *(_OWORD *)(a4 + 232);
  uint64_t v59 = *(void *)(a4 + 248);
  *((_DWORD *)v57 + 22) = v58 | 0x3FC;
  *((void *)v57 + 9) = v59;
  uint64_t v60 = *(float *)v18;
  if (!*(_BYTE *)(v18 + 4)) {
    uint64_t v60 = 0.0;
  }
  v15[30] |= 0x400u;
  *((float *)v15 + 2std::iostream::~basic_iostream(v2, v3 + 8) = v60;
  unint64_t v61 = sub_1002338C4(v66, (wireless_diagnostics::google::protobuf::MessageLite *)v67);
  sub_10010686C(v67);
  if (v71) {
    sub_10010686C(v70);
  }
  return v61;
}

    sub_1002C6058(a1 + 4944, (uint64_t)buf);
    if (!v123) {
      goto LABEL_70;
    }
    sub_1002E064C((void *)(a1 + 8872), (uint64_t)buf, v87, v88, v89, v90, v91);
    sub_1002FC9A4(a1 + 448, (uint64_t)buf);
    if (*(_DWORD *)&v120[16] == 2)
    {
      if (v123)
      {
        uint64_t v92 = (_OWORD *)(a1 + 9520);
        uint64_t v93 = *(_OWORD *)&v120[16];
        if (v4[1928])
        {
          *(_OWORD *)(a1 + 9584) = *(_OWORD *)v120;
          *(_OWORD *)(a1 + 9600) = v93;
          *(_OWORD *)(a1 + 9616) = v121;
          *(void *)(a1 + 96sub_100012358(v1 - 32) = v122;
          uint64_t v94 = *(_OWORD *)&buf[16];
          *uint64_t v92 = *(_OWORD *)buf;
          *(_OWORD *)(a1 + 9536) = v94;
          uint64_t v95 = *(_OWORD *)&v119[16];
          *(_OWORD *)(a1 + 9552) = *(_OWORD *)v119;
          *(_OWORD *)(a1 + 956std::iostream::~basic_iostream(v2, v3 + 8) = v95;
        }

        else
        {
          *(_OWORD *)(a1 + 9584) = *(_OWORD *)v120;
          *(_OWORD *)(a1 + 9600) = v93;
          __int128 v96 = v122;
          *(_OWORD *)(a1 + 9616) = v121;
          *(_OWORD *)(a1 + 96sub_100012358(v1 - 32) = v96;
          uint64_t v97 = *(_OWORD *)&buf[16];
          *uint64_t v92 = *(_OWORD *)buf;
          *(_OWORD *)(a1 + 9536) = v97;
          unint64_t v98 = *(_OWORD *)&v119[16];
          *(_OWORD *)(a1 + 9552) = *(_OWORD *)v119;
          *(_OWORD *)(a1 + 956std::iostream::~basic_iostream(v2, v3 + 8) = v98;
          v4[1928] = 1;
        }

        uint64_t v99 = v128;
        *(_OWORD *)(a1 + 9744) = v129;
        uint64_t v100 = v131;
        *(_OWORD *)(a1 + 9760) = v130;
        *(_OWORD *)(a1 + 9776) = v100;
        unint64_t v101 = v124;
        *(_OWORD *)(a1 + 9680) = v125;
        uint64_t v102 = v127;
        *(_OWORD *)(a1 + 9696) = v126;
        *(_OWORD *)(a1 + 9712) = v102;
        *(_OWORD *)(a1 + 972std::iostream::~basic_iostream(v2, v3 + 8) = v99;
        *(_OWORD *)(a1 + 9664) = v101;
        *(_BYTE *)(a1 + 9792) = v132;
        goto LABEL_63;
      }

LABEL_64:
  uint64_t v27 = *(void **)(a1 + 8);
  if (v27 && *v27 != v27[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 6std::iostream::~basic_iostream(v2, v3 + 8) = v4;
  return v4;
}

  uint64_t v27 = *(void **)(a1 + 8);
  if (v27 && *v27 != v27[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 6std::iostream::~basic_iostream(v2, v3 + 8) = v4;
  return v4;
}

  int v17 = *(void *)(v5 + 104);
  if (!v17) {
    int v17 = *(void *)(qword_1008001F0 + 104);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD,  v17,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_70;
  }

  uint64_t v21 = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 300) |= 0x4000u;
  *(void *)(a1 + 112) = v21;
  int v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x8000) != 0)
  {
LABEL_30:
    int v10 = *(void *)(a2 + 128);
    *(_DWORD *)(a1 + 300) |= 0x8000u;
    *(void *)(a1 + 12std::iostream::~basic_iostream(v2, v3 + 8) = v10;
    int v5 = *(_DWORD *)(a2 + 300);
  }

  int v16 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 232) |= 8u;
  *(_DWORD *)(a1 + 40) = v16;
  int v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_66:
    int v18 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 232) |= 0x20u;
    *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v18;
    int v5 = *(_DWORD *)(a2 + 232);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }

    goto LABEL_67;
  }

  uint64_t v34 = *(_DWORD *)(a2 + 104);
  if (v34 >= 4) {
    sub_10038C15C();
  }
  *(_DWORD *)(a1 + 160) |= 0x4000u;
  *(_DWORD *)(a1 + 104) = v34;
  int v13 = *(_DWORD *)(a2 + 160);
  if ((v13 & 0x8000) != 0)
  {
LABEL_31:
    int v16 = *(_DWORD *)(a2 + 108);
    *(_DWORD *)(a1 + 160) |= 0x8000u;
    *(_DWORD *)(a1 + 10std::iostream::~basic_iostream(v2, v3 + 8) = v16;
    int v13 = *(_DWORD *)(a2 + 160);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14,  (int)a2,  *(double *)(v5 + 160),  a3);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_66;
  }

  int v26 = *((void *)this + 8);
  *(_BYTE *)uint64_t v4 = 73;
  *(void *)((char *)v4 + 1) = v26;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v16 = *((_DWORD *)this + 75);
  if ((v16 & 0x200) == 0)
  {
LABEL_29:
    if ((v16 & 0x400) == 0) {
      goto LABEL_30;
    }
    goto LABEL_66;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3ED,  *(void *)(v5 + 80),  (unint64_t)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 232);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_66;
  }

            uint64_t v29 = (_BYTE *)*((void *)this + 1);
            int v14 = *((void *)this + 2);
            uint64_t v42 = *v29;
            if (v42 == 26) {
              goto LABEL_68;
            }
          }

          while (v42 == 16);
          goto LABEL_2;
        }

        if (v30 != 8) {
          goto LABEL_2;
        }
        int v15 = v29 + 1;
        *((void *)this + 1) = v15;
LABEL_26:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v59)) {
            return 0LL;
          }
        }

        else
        {
          uint64_t v59 = *v15;
          *((void *)this + 1) = v15 + 1;
        }

        int v18 = *(_DWORD *)(a1 + 24);
        if (v18 == *(_DWORD *)(a1 + 28))
        {
          sub_10005C1F0(v7, v18 + 1);
          int v18 = *(_DWORD *)(a1 + 24);
        }

        char v19 = v59;
        int v20 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v18 + 1;
        *(_DWORD *)(v20 + 4LL * v1std::iostream::~basic_iostream(v2, v3 + 8) = v19;
        uint64_t v21 = *(_DWORD *)(a1 + 28) - *(_DWORD *)(a1 + 24);
        if (v21 >= 1)
        {
          int v22 = v21 + 1;
          do
          {
            BOOL v23 = (_BYTE *)*((void *)this + 1);
            int v24 = *((void *)this + 2);
            *((void *)this + 1) = v23 + 1;
            if ((unint64_t)(v23 + 1) >= v24 || (char)v23[1] < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v59)) {
                return 0LL;
              }
            }

            else
            {
              uint64_t v59 = v23[1];
              *((void *)this + 1) = v23 + 2;
            }

            char v25 = *(_DWORD *)(a1 + 24);
            if (v25 >= *(_DWORD *)(a1 + 28))
            {
              wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v61,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-89cb-6e654a286000/Applications/Xcode.app/Contents/D eveloper/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/local/include/google /protobuf/repeated_field.h",  602LL);
              int v26 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v61,  "CHECK failed: (size()) < (Capacity()): ");
              wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v60, v26);
              wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v61);
              char v25 = *(_DWORD *)(a1 + 24);
            }

            uint64_t v27 = v59;
            unsigned int v28 = *(void *)(a1 + 16);
            *(_DWORD *)(a1 + 24) = v25 + 1;
            *(_DWORD *)(v28 + 4LL * v25) = v27;
            --v22;
          }

          while (v22 > 1);
        }
      }
    }

    if ((TagFallback & 7) == 0)
    {
      int v15 = (char *)*((void *)this + 1);
      int v14 = *((void *)this + 2);
      goto LABEL_26;
    }
}

uint64_t sub_10004F0E0( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  2773LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_10004E0B4((uint64_t)a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_10004F188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10004F1A0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_10004F1E8()
{
  return 1LL;
}

uint64_t sub_10004F1F0()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F57C0;
}

void sub_10004F268(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10004F27C(uint64_t a1)
{
  *(void *)a1 = off_1007A3B00;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 60) = 0u;
  *(_OWORD *)(a1 + sub_100012358(v1 - 32) = 0u;
  *(_OWORD *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_10004F2BC(_Unwind_Exception *a1)
{
}

uint64_t sub_10004F2D0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v20,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  3439LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v20,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v19, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }

  int v5 = *(_DWORD *)(a2 + 72);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if ((v5 & 1) != 0)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 72) |= 1u;
    *(void *)(a1 + 16) = v9;
    int v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }

  int v10 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 72) |= 2u;
  *(_DWORD *)(a1 + 24) = v10;
  int v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }

void sub_10004F4D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_10004F4F0(uint64_t a1)
{
  *(void *)a1 = off_1007A3B00;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10004F520(uint64_t a1)
{
  *(void *)a1 = off_1007A3B00;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete(v2);
}

uint64_t sub_10004F554(uint64_t result, int a2)
{
  *(_DWORD *)(result + 6std::iostream::~basic_iostream(v2, v3 + 8) = a2;
  return result;
}

void *sub_10004F55C()
{
  uint64_t v0 = operator new(0x50uLL);
  sub_10004F27C((uint64_t)v0);
  return v0;
}

void sub_10004F588(_Unwind_Exception *a1)
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10004F59C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 72);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + sub_100012358(v1 - 32) = 0u;
  }

  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(a1 + 60) = 0LL;
    *(void *)(a1 + 52) = 0LL;
  }

  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 16) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10004F5D8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v42 = (unint64_t *)(a1 + 16);
  NSFileAttributeKey v43 = (unsigned int *)(a1 + 24);
  char v44 = (unsigned int *)(a1 + 28);
  uint64_t v45 = (unsigned int *)(a1 + 32);
  uint64_t v46 = (unsigned int *)(a1 + 36);
  uint64_t v47 = (unsigned int *)(a1 + 40);
  int v6 = (unsigned int *)(a1 + 44);
  int v7 = (unsigned int *)(a1 + 48);
  char v8 = (unsigned int *)(a1 + 52);
  uint64_t v9 = (unsigned int *)(a1 + 56);
  int v10 = (unsigned int *)(a1 + 60);
  int v11 = (unsigned int *)(a1 + 64);
  unsigned int v12 = a1 + 8;
  while (2)
  {
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v13;
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v13 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v15 = TagFallback & 7;
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v17 < v16 && (*v17 & 0x80000000) == 0)
        {
          *uint64_t v42 = *v17;
          int v18 = v17 + 1;
          *((void *)this + 1) = v18;
LABEL_40:
          *(_DWORD *)(a1 + 72) |= 1u;
          if ((unint64_t)v18 < v16 && *v18 == 16)
          {
            char v19 = v18 + 1;
            *((void *)this + 1) = v19;
            goto LABEL_43;
          }

          continue;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v42);
        if ((_DWORD)result)
        {
          int v18 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
          goto LABEL_40;
        }

        break;
      case 2u:
        int v15 = TagFallback & 7;
        char v19 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_43:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v30 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int *v43 = *v19;
          uint64_t v30 = v19 + 1;
          *((void *)this + 1) = v30;
        }

        *(_DWORD *)(a1 + 72) |= 2u;
        int v20 = v30 + 1;
        *((void *)this + 1) = v20;
LABEL_51:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v44);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v31 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          *char v44 = *v20;
          uint64_t v31 = v20 + 1;
          *((void *)this + 1) = v31;
        }

        *(_DWORD *)(a1 + 72) |= 4u;
        uint64_t v21 = v31 + 1;
        *((void *)this + 1) = v21;
LABEL_59:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v45);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v32 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v45 = *v21;
          uint64_t v32 = v21 + 1;
          *((void *)this + 1) = v32;
        }

        *(_DWORD *)(a1 + 72) |= 8u;
        int v22 = v32 + 1;
        *((void *)this + 1) = v22;
LABEL_67:
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v33 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int *v46 = *v22;
          uint64_t v33 = v22 + 1;
          *((void *)this + 1) = v33;
        }

        *(_DWORD *)(a1 + 72) |= 0x10u;
        BOOL v23 = v33 + 1;
        *((void *)this + 1) = v23;
LABEL_75:
        if ((unint64_t)v23 >= v16 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v47);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v34 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v47 = *v23;
          uint64_t v34 = v23 + 1;
          *((void *)this + 1) = v34;
        }

        *(_DWORD *)(a1 + 72) |= 0x20u;
        int v24 = v34 + 1;
        *((void *)this + 1) = v24;
LABEL_83:
        if ((unint64_t)v24 >= v16 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v35 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int *v6 = *v24;
          uint64_t v35 = v24 + 1;
          *((void *)this + 1) = v35;
        }

        *(_DWORD *)(a1 + 72) |= 0x40u;
        char v25 = v35 + 1;
        *((void *)this + 1) = v25;
LABEL_91:
        if ((unint64_t)v25 >= v16 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v36 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          *int v7 = *v25;
          uint64_t v36 = v25 + 1;
          *((void *)this + 1) = v36;
        }

        *(_DWORD *)(a1 + 72) |= 0x80u;
        int v26 = v36 + 1;
        *((void *)this + 1) = v26;
LABEL_99:
        if ((unint64_t)v26 >= v16 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v37 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int *v8 = *v26;
          uint64_t v37 = v26 + 1;
          *((void *)this + 1) = v37;
        }

        *(_DWORD *)(a1 + 72) |= 0x100u;
        uint64_t v27 = v37 + 1;
        *((void *)this + 1) = v27;
LABEL_107:
        if ((unint64_t)v27 >= v16 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v38 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v9 = *v27;
          uint64_t v38 = v27 + 1;
          *((void *)this + 1) = v38;
        }

        *(_DWORD *)(a1 + 72) |= 0x200u;
        unsigned int v28 = v38 + 1;
        *((void *)this + 1) = v28;
LABEL_115:
        if ((unint64_t)v28 >= v16 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v39 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int *v10 = *v28;
          uint64_t v39 = v28 + 1;
          *((void *)this + 1) = v39;
        }

        *(_DWORD *)(a1 + 72) |= 0x400u;
        uint64_t v29 = v39 + 1;
        *((void *)this + 1) = v29;
LABEL_123:
        if ((unint64_t)v29 >= v16 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v40 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int *v11 = *v29;
          uint64_t v40 = (unsigned __int8 *)(v29 + 1);
          *((void *)this + 1) = v40;
        }

        *(_DWORD *)(a1 + 72) |= 0x800u;
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v15 = TagFallback & 7;
        int v20 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_51;
      case 4u:
        int v15 = TagFallback & 7;
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_59;
      case 5u:
        int v15 = TagFallback & 7;
        int v22 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_67;
      case 6u:
        int v15 = TagFallback & 7;
        BOOL v23 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_75;
      case 7u:
        int v15 = TagFallback & 7;
        int v24 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_83;
      case 8u:
        int v15 = TagFallback & 7;
        char v25 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_91;
      case 9u:
        int v15 = TagFallback & 7;
        int v26 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_99;
      case 0xAu:
        int v15 = TagFallback & 7;
        uint64_t v27 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_107;
      case 0xBu:
        int v15 = TagFallback & 7;
        unsigned int v28 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_115;
      case 0xCu:
        int v15 = TagFallback & 7;
        uint64_t v29 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_123;
      default:
        int v15 = TagFallback & 7;
LABEL_34:
        if (v15 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_10004FC60( uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 72);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(this + 16),  (unint64_t)a2,  a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 24),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10004FDF8( wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 18);
  if ((v5 & 1) != 0)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(_BYTE *)a2 = 8;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v6,  (unint64_t)a2 + 1,  a3);
    int v5 = *((_DWORD *)this + 18);
  }

  if ((v5 & 2) != 0)
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(_BYTE *)uint64_t v3 = 16;
    if (v7 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v7,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v7;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 72) & 4) != 0)
  {
    char v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(_BYTE *)uint64_t v3 = 24;
    if (v8 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v8,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 72) & 8) != 0)
  {
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(_BYTE *)uint64_t v3 = 32;
    if (v9 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v9,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v9;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 72) & 0x10) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(_BYTE *)uint64_t v3 = 40;
    if (v10 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v10,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v10;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 72) & 0x20) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    *(_BYTE *)uint64_t v3 = 48;
    if (v11 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v11,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v11;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 72) & 0x40) != 0)
  {
    unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    *(_BYTE *)uint64_t v3 = 56;
    if (v12 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v12,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v12;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 72) & 0x80) != 0)
  {
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(_BYTE *)uint64_t v3 = 64;
    if (v13 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v13,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v13;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 73) & 1) != 0)
  {
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    *(_BYTE *)uint64_t v3 = 72;
    if (v14 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v14,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v14;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 73) & 2) != 0)
  {
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(_BYTE *)uint64_t v3 = 80;
    if (v15 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v15,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v15;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 73) & 4) != 0)
  {
    unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    *(_BYTE *)uint64_t v3 = 88;
    if (v16 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v16,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v16;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  if ((*((_BYTE *)this + 73) & 8) != 0)
  {
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(_BYTE *)uint64_t v3 = 96;
    if (v17 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v17,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v17;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }
  }

  int v20 = (void *)*((void *)this + 1);
  char v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v18 = v20;
  if (!v20 || *v18 == v18[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v19,  v3,  a3);
  }
}

uint64_t sub_1000500A0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_42;
  }

  if ((v3 & 1) != 0)
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16),  (unint64_t)a2)
       + 1;
    int v3 = *(_DWORD *)(a1 + 72);
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }

  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 72);
  }

  else
  {
    int v6 = 1;
  }

  uint64_t v4 = (v4 + v6 + 1);
LABEL_11:
  if ((v3 & 4) != 0)
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 72);
    }

    else
    {
      int v8 = 1;
    }

    uint64_t v4 = (v4 + v8 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_13:
      if ((v3 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_26;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_13;
  }

  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    int v3 = *(_DWORD *)(a1 + 72);
  }

  else
  {
    int v10 = 1;
  }

  uint64_t v4 = (v4 + v10 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_14:
    if ((v3 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_30;
  }

uint64_t sub_1000502FC( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  3427LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_10004F2D0((uint64_t)a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_1000503A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1000503BC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_100050404()
{
  return 1LL;
}

uint64_t sub_10005040C()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F57D0;
}

void sub_100050484(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100050498(uint64_t a1)
{
  *(void *)a1 = off_1007A3BB0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 8std::iostream::~basic_iostream(v2, v3 + 8) = 0xFFFFFFFFLL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + sub_100012358(v1 - 32) = 0LL;
  *(void *)(a1 + 40) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = 0LL;
  *(void *)(a1 + 56) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(a1 + 96) = 0;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  return a1;
}

void sub_1000504F0(_Unwind_Exception *a1)
{
}

uint64_t sub_100050504(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v27,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  4078LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v27,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v26, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v27);
  }

  int v5 = *(_DWORD *)(a2 + 96);
  if ((_BYTE)v5)
  {
    if ((v5 & 1) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 88);
      *(_DWORD *)(a1 + 96) |= 1u;
      *(_DWORD *)(a1 + 8std::iostream::~basic_iostream(v2, v3 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 96);
    }

    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 2u;
      int v7 = *(void **)(a1 + 16);
      if (!v7)
      {
        int v7 = operator new(0x30uLL);
        sub_10004B148((uint64_t)v7);
        *(void *)(a1 + 16) = v7;
      }

      uint64_t v8 = *(void *)(a2 + 16);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1008000E8 + 16);
      }
      sub_10004B194((uint64_t)v7, v8);
      int v5 = *(_DWORD *)(a2 + 96);
    }

    if ((v5 & 4) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 4u;
      uint64_t v9 = *(void **)(a1 + 24);
      if (!v9)
      {
        uint64_t v9 = operator new(0x30uLL);
        sub_10004B148((uint64_t)v9);
        *(void *)(a1 + 24) = v9;
      }

      uint64_t v10 = *(void *)(a2 + 24);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_1008000E8 + 24);
      }
      sub_10004B194((uint64_t)v9, v10);
      int v5 = *(_DWORD *)(a2 + 96);
    }

    if ((v5 & 8) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 8u;
      int v11 = *(void **)(a1 + 32);
      if (!v11)
      {
        int v11 = operator new(0x50uLL);
        sub_10004E060((uint64_t)v11);
        *(void *)(a1 + sub_100012358(v1 - 32) = v11;
      }

      uint64_t v12 = *(void *)(a2 + 32);
      if (!v12) {
        uint64_t v12 = *(void *)(qword_1008000E8 + 32);
      }
      sub_10004E0B4((uint64_t)v11, v12);
      int v5 = *(_DWORD *)(a2 + 96);
    }

    if ((v5 & 0x10) != 0)
    {
      int v13 = *(const std::string **)(a2 + 40);
      *(_DWORD *)(a1 + 96) |= 0x10u;
      int v14 = *(std::string **)(a1 + 40);
      if (v14 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        int v14 = (std::string *)operator new(0x18uLL);
        v14->__r_.__value_.__l.__size_ = 0LL;
        v14->__r_.__value_.__l.__cap_ = 0LL;
        v14->__r_.__value_.__r.__words[0] = 0LL;
        *(void *)(a1 + 40) = v14;
      }

      std::string::operator=(v14, v13);
      int v5 = *(_DWORD *)(a2 + 96);
    }

    if ((v5 & 0x20) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x20u;
      int v15 = *(void **)(a1 + 48);
      if (!v15)
      {
        int v15 = operator new(0x50uLL);
        sub_10004F27C((uint64_t)v15);
        *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v15;
      }

      uint64_t v16 = *(void *)(a2 + 48);
      if (!v16) {
        uint64_t v16 = *(void *)(qword_1008000E8 + 48);
      }
      sub_10004F2D0((uint64_t)v15, v16);
      int v5 = *(_DWORD *)(a2 + 96);
    }

    if ((v5 & 0x40) != 0)
    {
      int v17 = *(const std::string **)(a2 + 56);
      *(_DWORD *)(a1 + 96) |= 0x40u;
      int v18 = *(std::string **)(a1 + 56);
      if (v18 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        int v18 = (std::string *)operator new(0x18uLL);
        v18->__r_.__value_.__l.__size_ = 0LL;
        v18->__r_.__value_.__l.__cap_ = 0LL;
        v18->__r_.__value_.__r.__words[0] = 0LL;
        *(void *)(a1 + 56) = v18;
      }

      std::string::operator=(v18, v17);
      int v5 = *(_DWORD *)(a2 + 96);
    }

    if ((v5 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x80u;
      char v19 = *(_DWORD **)(a1 + 64);
      if (!v19)
      {
        char v19 = operator new(0x30uLL);
        sub_10004C984((uint64_t)v19);
        *(void *)(a1 + 64) = v19;
      }

      uint64_t v20 = *(void *)(a2 + 64);
      if (!v20) {
        uint64_t v20 = *(void *)(qword_1008000E8 + 64);
      }
      sub_10004C9D4(v19, v20);
      int v5 = *(_DWORD *)(a2 + 96);
    }
  }

  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x100u;
      uint64_t v21 = *(_DWORD **)(a1 + 72);
      if (!v21)
      {
        uint64_t v21 = operator new(0x30uLL);
        sub_10004C984((uint64_t)v21);
        *(void *)(a1 + 72) = v21;
      }

      uint64_t v22 = *(void *)(a2 + 72);
      if (!v22) {
        uint64_t v22 = *(void *)(qword_1008000E8 + 72);
      }
      sub_10004C9D4(v21, v22);
      int v5 = *(_DWORD *)(a2 + 96);
    }

    if ((v5 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x200u;
      BOOL v23 = *(void **)(a1 + 80);
      if (!v23)
      {
        BOOL v23 = operator new(0x28uLL);
        sub_10004D9D0(v23);
        *(void *)(a1 + 80) = v23;
      }

      uint64_t v24 = *(void *)(a2 + 80);
      if (!v24) {
        uint64_t v24 = *(void *)(qword_1008000E8 + 80);
      }
      sub_10004DA1C((uint64_t)v23, v24);
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100050864( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_1000508A4(void *a1)
{
  *a1 = off_1007A3BB0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1000508E0(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000508E0(void *a1)
{
  uint64_t v2 = a1[5];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    operator delete((void *)v2);
  }

  uint64_t v4 = a1[7];
  if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v4 != 0)
  {
    operator delete((void *)v4);
  }

  if ((void *)qword_1008000E8 != a1)
  {
    uint64_t v6 = a1[2];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    uint64_t v7 = a1[3];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
    uint64_t v8 = a1[4];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
    }
    uint64_t v9 = a1[6];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    }
    uint64_t v10 = a1[8];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
    uint64_t v11 = a1[9];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
    }
    uint64_t v12 = a1[10];
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
  }

void sub_100050A08(void *a1)
{
}

uint64_t sub_100050A1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 92) = a2;
  return result;
}

void *sub_100050A24()
{
  uint64_t v0 = operator new(0x68uLL);
  sub_100050498((uint64_t)v0);
  return v0;
}

void sub_100050A50(_Unwind_Exception *a1)
{
}

uint64_t sub_100050A64(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 96);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 8std::iostream::~basic_iostream(v2, v3 + 8) = -1;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(_BYTE *)(this + 44))
        {
          *(void *)(this + 16) = 0LL;
          *(void *)(this + 24) = 0LL;
          *(void *)(this + sub_100012358(v1 - 32) = 0LL;
        }

        uint64_t v3 = *(void *)(this + 8);
        this += 8LL;
        *(_DWORD *)(this + 36) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }

    if ((*(_BYTE *)(v1 + 96) & 4) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        if (*(_BYTE *)(this + 44))
        {
          *(void *)(this + 16) = 0LL;
          *(void *)(this + 24) = 0LL;
          *(void *)(this + sub_100012358(v1 - 32) = 0LL;
        }

        uint64_t v4 = *(void *)(this + 8);
        this += 8LL;
        *(_DWORD *)(this + 36) = 0;
        if (v4) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }

    int v5 = *(_DWORD *)(v1 + 96);
    if ((v5 & 8) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = (uint64_t)sub_10004E380(this);
        int v5 = *(_DWORD *)(v1 + 96);
      }
    }

    if ((v5 & 0x10) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 40);
      if ((_UNKNOWN *)v6 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(_BYTE **)uint64_t v6 = 0;
          *(void *)(v6 + std::iostream::~basic_iostream(v2, v3 + 8) = 0LL;
        }

        else
        {
          *(_BYTE *)uint64_t v6 = 0;
          *(_BYTE *)(v6 + 23) = 0;
        }
      }
    }

    int v7 = *(_DWORD *)(v1 + 96);
    if ((v7 & 0x20) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this)
      {
        this = (uint64_t)sub_10004F59C(this);
        int v7 = *(_DWORD *)(v1 + 96);
      }
    }

    if ((v7 & 0x40) != 0)
    {
      uint64_t v8 = *(void *)(v1 + 56);
      if ((_UNKNOWN *)v8 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v8 + 23) < 0)
        {
          **(_BYTE **)uint64_t v8 = 0;
          *(void *)(v8 + std::iostream::~basic_iostream(v2, v3 + 8) = 0LL;
        }

        else
        {
          *(_BYTE *)uint64_t v8 = 0;
          *(_BYTE *)(v8 + 23) = 0;
        }
      }
    }

    int v2 = *(_DWORD *)(v1 + 96);
    if ((v2 & 0x80) != 0)
    {
      this = *(void *)(v1 + 64);
      if (this)
      {
        this = sub_10004CBB8(this);
        int v2 = *(_DWORD *)(v1 + 96);
      }
    }
  }

  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      this = *(void *)(v1 + 72);
      if (this)
      {
        this = sub_10004CBB8(this);
        int v2 = *(_DWORD *)(v1 + 96);
      }
    }

    if ((v2 & 0x200) != 0)
    {
      this = *(void *)(v1 + 80);
      if (this)
      {
        if (*(_BYTE *)(this + 36))
        {
          *(void *)(this + 16) = 0LL;
          *(void *)(this + 24) = 0LL;
        }

        uint64_t v9 = *(void *)(this + 8);
        this += 8LL;
        *(_DWORD *)(this + 2std::iostream::~basic_iostream(v2, v3 + 8) = 0;
        if (v9) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }

  uint64_t v11 = *(void *)(v1 + 8);
  uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v10 + 22) = 0;
  if (v11) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v10);
  }
  return this;
}

uint64_t sub_100050C00( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 < *((void *)this + 2) && (*v10 & 0x80000000) == 0)
        {
          signed int v11 = *v10;
          *((void *)this + 1) = v10 + 1;
          goto LABEL_35;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88);
        if ((_DWORD)result)
        {
          signed int v11 = v88;
LABEL_35:
          if ((v11 + 1) > 5)
          {
            wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v11);
          }

          else
          {
            *(_DWORD *)(a1 + 96) |= 1u;
            *(_DWORD *)(a1 + 8std::iostream::~basic_iostream(v2, v3 + 8) = v11;
          }

          int v13 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v13 < *((void *)this + 2) && *v13 == 18)
          {
            *((void *)this + 1) = v13 + 1;
            goto LABEL_40;
          }

          continue;
        }

        break;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_30;
        }
LABEL_40:
        *(_DWORD *)(a1 + 96) |= 2u;
        int v14 = *(void **)(a1 + 16);
        if (!v14)
        {
          int v14 = operator new(0x30uLL);
          sub_10004B148((uint64_t)v14);
          *(void *)(a1 + 16) = v14;
        }

        int v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v88)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v88 = *v15;
          *((void *)this + 1) = v15 + 1;
        }

        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0LL;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v21 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)this + 14) = v23;
        }
        uint64_t v24 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v24 + 1;
LABEL_54:
        *(_DWORD *)(a1 + 96) |= 4u;
        char v25 = *(void **)(a1 + 24);
        if (!v25)
        {
          char v25 = operator new(0x30uLL);
          sub_10004B148((uint64_t)v25);
          *(void *)(a1 + 24) = v25;
        }

        char v26 = (char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v88)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v88 = *v26;
          *((void *)this + 1) = v26 + 1;
        }

        int v27 = *((_DWORD *)this + 14);
        int v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0LL;
        }
        int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
        int v32 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v32, 1);
        int v33 = v32 - 1;
        if (v33 < 0 == v22) {
          *((_DWORD *)this + 14) = v33;
        }
        uint64_t v34 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v34 + 1;
LABEL_68:
        *(_DWORD *)(a1 + 96) |= 8u;
        uint64_t v35 = *(void **)(a1 + 32);
        if (!v35)
        {
          uint64_t v35 = operator new(0x50uLL);
          sub_10004E060((uint64_t)v35);
          *(void *)(a1 + sub_100012358(v1 - 32) = v35;
        }

        uint64_t v36 = (char *)*((void *)this + 1);
        if ((unint64_t)v36 >= *((void *)this + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v88)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v88 = *v36;
          *((void *)this + 1) = v36 + 1;
        }

        int v37 = *((_DWORD *)this + 14);
        int v38 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v37 + 1;
        if (v37 >= v38) {
          return 0LL;
        }
        int v39 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v39);
        int v42 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v22) {
          *((_DWORD *)this + 14) = v43;
        }
        char v44 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v44 + 1;
LABEL_82:
        *(_DWORD *)(a1 + 96) |= 0x10u;
        uint64_t v45 = *(void **)(a1 + 40);
        if (v45 == (void *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        {
          uint64_t v45 = operator new(0x18uLL);
          v45[1] = 0LL;
          v45[2] = 0LL;
          *uint64_t v45 = 0LL;
          *(void *)(a1 + 40) = v45;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes(this, v45);
        if (!(_DWORD)result) {
          return result;
        }
        uint64_t v46 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v46 + 1;
LABEL_88:
        *(_DWORD *)(a1 + 96) |= 0x20u;
        uint64_t v47 = *(void **)(a1 + 48);
        if (!v47)
        {
          uint64_t v47 = operator new(0x50uLL);
          sub_10004F27C((uint64_t)v47);
          *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v47;
        }

        uint64_t v48 = (char *)*((void *)this + 1);
        if ((unint64_t)v48 >= *((void *)this + 2) || *v48 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v88)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v88 = *v48;
          *((void *)this + 1) = v48 + 1;
        }

        int v49 = *((_DWORD *)this + 14);
        int v50 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v49 + 1;
        if (v49 >= v50) {
          return 0LL;
        }
        int v51 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v51);
        int v54 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v54, 1);
        int v55 = v54 - 1;
        if (v55 < 0 == v22) {
          *((_DWORD *)this + 14) = v55;
        }
        uint64_t v56 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v56 + 1;
LABEL_102:
        *(_DWORD *)(a1 + 96) |= 0x40u;
        uint64_t v57 = *(void **)(a1 + 56);
        if (v57 == (void *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        {
          uint64_t v57 = operator new(0x18uLL);
          v57[1] = 0LL;
          v57[2] = 0LL;
          void *v57 = 0LL;
          *(void *)(a1 + 56) = v57;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes(this, v57);
        if (!(_DWORD)result) {
          return result;
        }
        uint64_t v58 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v58 + 1;
LABEL_108:
        *(_DWORD *)(a1 + 96) |= 0x80u;
        uint64_t v59 = *(int **)(a1 + 64);
        if (!v59)
        {
          uint64_t v59 = (int *)operator new(0x30uLL);
          sub_10004C984((uint64_t)v59);
          *(void *)(a1 + 64) = v59;
        }

        uint64_t v60 = (char *)*((void *)this + 1);
        if ((unint64_t)v60 >= *((void *)this + 2) || *v60 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v88)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v88 = *v60;
          *((void *)this + 1) = v60 + 1;
        }

        int v61 = *((_DWORD *)this + 14);
        int v62 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v61 + 1;
        if (v61 >= v62) {
          return 0LL;
        }
        int v63 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v63);
        int v66 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v66, 1);
        int v67 = v66 - 1;
        if (v67 < 0 == v22) {
          *((_DWORD *)this + 14) = v67;
        }
        int64_t v68 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v68 + 1;
LABEL_122:
        *(_DWORD *)(a1 + 96) |= 0x100u;
        uint64_t v69 = *(int **)(a1 + 72);
        if (!v69)
        {
          uint64_t v69 = (int *)operator new(0x30uLL);
          sub_10004C984((uint64_t)v69);
          *(void *)(a1 + 72) = v69;
        }

        uint64_t v70 = (char *)*((void *)this + 1);
        if ((unint64_t)v70 >= *((void *)this + 2) || *v70 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v88)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v88 = *v70;
          *((void *)this + 1) = v70 + 1;
        }

        int v71 = *((_DWORD *)this + 14);
        int v72 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v71 + 1;
        if (v71 >= v72) {
          return 0LL;
        }
        int v73 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v73);
        int v76 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v76, 1);
        int v77 = v76 - 1;
        if (v77 < 0 == v22) {
          *((_DWORD *)this + 14) = v77;
        }
        uint64_t v78 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v78 + 1;
LABEL_136:
        *(_DWORD *)(a1 + 96) |= 0x200u;
        uint64_t v79 = *(void **)(a1 + 80);
        if (!v79)
        {
          uint64_t v79 = operator new(0x28uLL);
          sub_10004D9D0(v79);
          *(void *)(a1 + 80) = v79;
        }

        uint64_t v80 = (char *)*((void *)this + 1);
        if ((unint64_t)v80 >= *((void *)this + 2) || *v80 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v88)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v88 = *v80;
          *((void *)this + 1) = v80 + 1;
        }

        int v81 = *((_DWORD *)this + 14);
        int v82 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v81 + 1;
        if (v81 >= v82) {
          return 0LL;
        }
        int v83 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v83);
        int v86 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v86, 1);
        int v87 = v86 - 1;
        if (v87 < 0 == v22) {
          *((_DWORD *)this + 14) = v87;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }

        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_54;
        }
        goto LABEL_30;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_68;
        }
        goto LABEL_30;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_82;
        }
        goto LABEL_30;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_88;
        }
        goto LABEL_30;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_102;
        }
        goto LABEL_30;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_108;
        }
        goto LABEL_30;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_122;
        }
        goto LABEL_30;
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_30;
        }
        goto LABEL_136;
      default:
        int v9 = TagFallback & 7;
LABEL_30:
        if (v9 == 4) {
          return 1LL;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField( this,  TagFallback,  v6,  a4) & 1) == 0) {
          return 0LL;
        }
        continue;
    }

    return result;
  }

void sub_1000514B8(_Unwind_Exception *a1)
{
}

uint64_t sub_1000514E4( uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 96);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(this + 88),  (int)a2,  a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1008000E8 + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }

LABEL_36:
  int v16 = *(void **)(v5 + 8);
  int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v14 = v16;
  if (v16)
  {
    if (*v14 != v14[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v15, a2, a3);
    }
  }

  return this;
}

  uint64_t v19 = *((void *)this + 5);
  *(_BYTE *)uint64_t v4 = 42;
  else {
    uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v19 + 23);
  }
  if (v20 > 0x7F)
  {
    int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v20,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v20;
    int v21 = (_DWORD)v4 + 2;
  }

  BOOL v22 = *(char *)(v19 + 23);
  if (v22 >= 0) {
    int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19;
  }
  else {
    int v23 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v19;
  }
  if (v22 >= 0) {
    uint64_t v24 = (const void *)*(unsigned __int8 *)(v19 + 23);
  }
  else {
    uint64_t v24 = (const void *)*(unsigned int *)(v19 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray( v23,  v24,  v21,  a4);
  uint64_t v9 = *((_DWORD *)this + 24);
  if ((v9 & 0x20) == 0)
  {
LABEL_13:
    if ((v9 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_55;
  }

  if ((v19 & 0xFF00) != 0)
  {
    if ((v19 & 0x100) != 0)
    {
      int v21 = *(const std::string **)(a2 + 120);
      *(_DWORD *)(a1 + 284) |= 0x100u;
      BOOL v22 = *(std::string **)(a1 + 120);
      if (v22 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        BOOL v22 = (std::string *)operator new(0x18uLL);
        v22->__r_.__value_.__l.__size_ = 0LL;
        v22->__r_.__value_.__l.__cap_ = 0LL;
        v22->__r_.__value_.__r.__words[0] = 0LL;
        *(void *)(a1 + 120) = v22;
      }

      std::string::operator=(v22, v21);
      uint64_t v19 = *(_DWORD *)(a2 + 284);
    }

    if ((v19 & 0x1000) != 0)
    {
      int v23 = *(void *)(a2 + 176);
      *(_DWORD *)(a1 + 284) |= 0x1000u;
      *(void *)(a1 + 176) = v23;
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  int v14 = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 104) |= 0x800u;
  *(_DWORD *)(a1 + 60) = v14;
  uint64_t v5 = *(_DWORD *)(a2 + 104);
  if ((v5 & 0x1000) == 0)
  {
LABEL_21:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_38;
  }

  int v17 = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 88) |= 0x2000u;
  *(_DWORD *)(a1 + 72) = v17;
  uint64_t v5 = *(_DWORD *)(a2 + 88);
  if ((v5 & 0x4000) != 0) {
    goto LABEL_37;
  }
LABEL_28:
  if ((v5 & 0x8000) != 0)
  {
LABEL_29:
    uint64_t v10 = *(_BYTE *)(a2 + 80);
    *(_DWORD *)(a1 + 88) |= 0x8000u;
    *(_BYTE *)(a1 + 80) = v10;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(_DWORD *)(v5 + 48),  (int)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_38;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(_DWORD *)(v5 + 56),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x800) == 0)
  {
LABEL_12:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD,  *(_DWORD *)(v5 + 68),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }

  int v17 = *(uint64_t **)(v5 + 64);
  if (*((char *)v17 + 23) < 0)
  {
    int v17 = (uint64_t *)*v17;
    int v18 = *(void *)(*(void *)(v5 + 64) + 8LL);
  }

  else
  {
    int v18 = *((unsigned __int8 *)v17 + 23);
  }

  wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(v17, v18, 1LL);
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(8LL, *(void *)(v5 + 64), a2);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_44;
  }

  uint64_t v13 = *(void *)(v5 + 64);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_100800498 + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  v13,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_42;
  }

  int v17 = (unsigned int *)*((void *)this + 5);
  if (!v17) {
    int v17 = *(unsigned int **)(qword_100800498 + 40);
  }
  *(_BYTE *)uint64_t v4 = 34;
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17[8];
  if (v18 > 0x7F)
  {
    uint64_t v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v18,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v18;
    uint64_t v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_1000D5E38((wireless_diagnostics::google::protobuf::internal::WireFormat *)v17, v19, a3, a4);
  int v6 = *((_DWORD *)this + 37);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_48;
  }

  uint64_t v24 = (void *)*((void *)this + 1);
  int v23 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  BOOL v22 = v24;
  if (!v24 || *v22 == v22[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v23,  v4,  a3);
  }
}

  int v15 = *(_DWORD *)(a2 + 120);
  if (v15 >= 8) {
    sub_10038C594();
  }
  *(_DWORD *)(a1 + 140) |= 0x4000u;
  *(_DWORD *)(a1 + 120) = v15;
  uint64_t v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 0x8000) == 0)
  {
LABEL_27:
    if ((v5 & 0x10000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_40;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  *(_DWORD *)(v5 + 100),  (int)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_38;
  }

      if (v10 == 4) {
        return 1LL;
      }
    }

    if (TagFallback >> 3 != 2)
    {
      uint64_t v10 = TagFallback & 7;
      goto LABEL_36;
    }

    uint64_t v10 = TagFallback & 7;
    if (v10 != 2) {
      goto LABEL_36;
    }
LABEL_10:
    *(_DWORD *)(a1 + 52) |= 2u;
    uint64_t v11 = *(void **)(a1 + 40);
    if (v11 == (void *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      uint64_t v11 = operator new(0x18uLL);
      v11[1] = 0LL;
      _DWORD v11[2] = 0LL;
      void *v11 = 0LL;
      *(void *)(a1 + 40) = v11;
    }

    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes(this, v11);
    if (!(_DWORD)result) {
      return result;
    }
  }

  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
  uint64_t result = 1LL;
  *((_BYTE *)this + 36) = 1;
  return result;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  *(_DWORD *)(v5 + 76),  (int)a2,  a4);
  if ((*(_DWORD *)(v5 + 104) & 0x800) != 0) {
LABEL_13:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  *(_DWORD *)(v5 + 96),  (int)a2,  a4);
LABEL_14:
  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  *(void *)(v5 + 80),  (unint64_t)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_38;
  }

  uint64_t v20 = *((_DWORD *)this + 26);
  *(_WORD *)a2 = 389;
  *(_DWORD *)(a2 + 2) = v20;
  a2 += 6LL;
  uint64_t v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x10000) == 0)
  {
LABEL_18:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }

  uint64_t v24 = *((void *)this + 14);
  *(_BYTE *)uint64_t v3 = 97;
  *(void *)((char *)v3 + 1) = v24;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  uint64_t v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x1000) == 0)
  {
LABEL_21:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_22;
    }
LABEL_38:
    char v26 = *((void *)this + 16);
    *(_BYTE *)uint64_t v3 = 113;
    *(void *)((char *)v3 + 1) = v26;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    if ((*((_DWORD *)this + 37) & 0x4000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(11LL, *(void *)(v5 + 88), a2);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }

      v18.__d_.__rep_ = v17 + v15.__d_.__rep_;
      goto LABEL_37;
    }
  }

  while (std::chrono::steady_clock::now().__d_.__rep_ < v13.__d_.__rep_);
  if (atomic_load((unsigned int *)(a1 + 2392)))
  {
LABEL_40:
    uint64_t v20 = atomic_load((unsigned int *)(a1 + 2392));
    if (v20 == 1)
    {
      atomic_store(0xFFFFFFFF, (unsigned int *)(a1 + 2404));
      int v21 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)pthread_attr_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "registerForService: fNewRequestSuccess success is true.",  buf,  2u);
      }

      memcpy((void *)(a3 + 8), __src, 0x280uLL);
      v41[0] = 0;
      char v44 = 0;
      *(_DWORD *)(a3 + 64std::iostream::~basic_iostream(v2, v3 + 8) = 1;
      sub_100137614((_BYTE *)(a3 + 656), (uint64_t)v41);
      if (v44 && v43 < 0)
      {
        BOOL v22 = v42;
LABEL_77:
        operator delete(v22);
        goto LABEL_78;
      }

      goto LABEL_78;
    }

    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038DACC();
    }
    sub_1000065CC(v35, "ingestServiceRequest failed");
    *(void *)pthread_attr_t buf = 999LL;
    if (SHIBYTE(v36) < 0)
    {
      sub_1000063A8(&v52, v35[0], (unint64_t)v35[1]);
      uint64_t v24 = *(void *)buf;
    }

    else
    {
      uint64_t v52 = *(_OWORD *)v35;
      uint64_t v53 = v36;
      uint64_t v24 = 999LL;
    }

    int v37 = v24;
    int v38 = v52;
    int v39 = v53;
    uint64_t v52 = 0uLL;
    uint64_t v53 = 0LL;
    uint64_t v40 = 1;
    *(_BYTE *)(a3 + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
    *(_BYTE *)(a3 + 640) = 0;
    *(_DWORD *)(a3 + 64std::iostream::~basic_iostream(v2, v3 + 8) = 1;
    sub_100137614((_BYTE *)(a3 + 656), (uint64_t)&v37);
    if (v40 && SHIBYTE(v39) < 0)
    {
      char v26 = (void *)v38;
      goto LABEL_72;
    }
  }

  else
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
      sub_10038DAA0();
    }
    sub_1000065CC(v35, "Timed out while waiting for ingestServiceRequest to complete");
    *(void *)pthread_attr_t buf = 110LL;
    if (SHIBYTE(v36) < 0)
    {
      sub_1000063A8(&v52, v35[0], (unint64_t)v35[1]);
      char v25 = *(void *)buf;
    }

    else
    {
      uint64_t v52 = *(_OWORD *)v35;
      uint64_t v53 = v36;
      char v25 = 110LL;
    }

    uint64_t v31 = v25;
    *(_OWORD *)int v32 = v52;
    int v33 = v53;
    uint64_t v52 = 0uLL;
    uint64_t v53 = 0LL;
    uint64_t v34 = 1;
    *(_BYTE *)(a3 + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
    *(_BYTE *)(a3 + 640) = 0;
    *(_DWORD *)(a3 + 64std::iostream::~basic_iostream(v2, v3 + 8) = 1;
    sub_100137614((_BYTE *)(a3 + 656), (uint64_t)&v31);
    if (v34 && SHIBYTE(v33) < 0)
    {
      char v26 = v32[0];
LABEL_72:
      operator delete(v26);
    }
  }

  if (SHIBYTE(v53) < 0) {
    operator delete((void *)v52);
  }
  if (SHIBYTE(v36) < 0)
  {
    BOOL v22 = v35[0];
    goto LABEL_77;
  }

  *(_DWORD *)a7 = v10;
  *(double *)(a7 + std::iostream::~basic_iostream(v2, v3 + 8) = v15;
  *(_BYTE *)(a7 + 16) = 0;
}

    if ((_DWORD)v12 != 1) {
      return v12;
    }
    int v18 = 0;
    uint64_t v12 = 0LL;
    *a1 = 0;
    a1[2] = 0;
LABEL_56:
    *((_BYTE *)a1 + 24) = v18;
    return v12;
  }

  if (v14)
  {
    if (!*((_BYTE *)a1 + 112)) {
      goto LABEL_36;
    }
    int v15 = 1;
    uint64_t v13 = *((double *)a1 + 15);
  }

  else
  {
    int v15 = *((_BYTE *)a1 + 112) != 0 && v13 > *((double *)a1 + 15);
  }

    uint64_t v34 = *(double *)sub_1002CB32C(v29 + 456, 0);
    uint64_t v35 = *(double *)sub_1002CB32C(v29 + 456, 1u);
    uint64_t v36 = *(double *)sub_1002CB32C(v29 + 456, 2u);
    sub_100382ABC(v29 + 8, v34);
    sub_100382ABC(v29 + 152, v35);
    sub_100382ABC(v29 + 296, v36);
    sub_100382580(v29);
    if (__p)
    {
      int v155 = __p;
      operator delete(__p);
    }

    if (v152)
    {
      uint64_t v153 = v152;
      operator delete(v152);
    }

    if (v150)
    {
      v151 = v150;
      operator delete(v150);
    }

    if (v148)
    {
      uint64_t v149 = v148;
      operator delete(v148);
    }

    if (*((void *)&v146 + 1))
    {
      unsigned __int16 v147 = *((void *)&v146 + 1);
      operator delete(*((void **)&v146 + 1));
    }

    if (buf.__r_.__value_.__l.__cap_)
    {
      cap = buf.__r_.__value_.__l.__cap_;
      operator delete((void *)buf.__r_.__value_.__l.__cap_);
    }

    goto LABEL_117;
  }

  if (v17)
  {
    uint64_t v90 = *((void *)a2 + 6);
    uint64_t v92 = *((void *)a2 + 8);
    uint64_t v91 = *((void *)a2 + 9);
    LODWORD(buf.__r_.__value_.__l.__data_) = 134218752;
    *(double *)((char *)buf.__r_.__value_.__r.__words + 4) = v124;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v90;
    HIWORD(buf.__r_.__value_.__r.__words[2]) = 2048;
    cap = v91;
    LOWORD(v146) = 2048;
    *(void *)((char *)&v146 + 2) = v92;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "#sf,RoseEKF: Measurement update with a delayed measurement at t = %f s, range = %f m, Az = %f rad, El = %f rad",  (uint8_t *)&buf,  0x2Au);
  }

  int v18 = a3[10];
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)(v19 + 8 * (v18 >> 9));
  if (a3[8] == v19)
  {
    int v21 = 0LL;
    char v25 = 0LL;
    BOOL v22 = a3 + 11;
    uint64_t v24 = (char *)(v19 + 8 * ((a3[11] + v18) >> 9));
  }

  else
  {
    int v21 = (double *)(*(void *)v20 + 8 * (a3[10] & 0x1FFLL));
    BOOL v22 = a3 + 11;
    int v23 = a3[11] + v18;
    uint64_t v24 = (char *)(v19 + 8 * (v23 >> 9));
    char v25 = (double *)(*(void *)v24 + 8 * (v23 & 0x1FF));
  }

  int v37 = sub_100383CC0(v20, v21, v24, v25, (double *)(a1 + 872));
  int v39 = v38;
  uint64_t v40 = a3[10];
  uint64_t v41 = a3[7];
  int v42 = (char *)(v41 + 8 * (v40 >> 9));
  if (a3[8] == v41)
  {
    int v43 = 0LL;
    uint64_t v46 = 0LL;
    uint64_t v45 = (char *)(v41 + 8 * ((*v22 + v40) >> 9));
  }

  else
  {
    int v43 = (double *)(*(void *)v42 + 8 * (a3[10] & 0x1FFLL));
    char v44 = *v22 + v40;
    uint64_t v45 = (char *)(v41 + 8 * (v44 >> 9));
    uint64_t v46 = (double *)(*(void *)v45 + 8 * (v44 & 0x1FF));
  }

  uint64_t v48 = sub_100383CC0(v42, v43, v45, v46, &v124);
  int v49 = v47;
  int v50 = a3[7];
  if (a3[8] == v50)
  {
    if (!v39) {
      goto LABEL_65;
    }
    int v51 = 0LL;
  }

  else
  {
    if (*(void *)(v50 + ((a3[10] >> 6) & 0x3FFFFFFFFFFFFF8LL)) + 8 * (a3[10] & 0x1FFLL) == v39) {
      goto LABEL_65;
    }
    int v51 = *(void *)(v50 + (((*v22 + a3[10]) >> 6) & 0x3FFFFFFFFFFFFF8LL)) + 8 * ((*v22 + a3[10]) & 0x1FFLL);
    if (v51 == v39) {
      goto LABEL_65;
    }
  }

  if (v51 != v47)
  {
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
      sub_1003AED10();
    }
    uint64_t v52 = a1 + 456;
    sub_1002CBDC8(a1 + 456, a1 + 880);
    sub_1002CBDC8(a1 + 544, a1 + 968);
    *(void *)(a1 + 44std::iostream::~basic_iostream(v2, v3 + 8) = *(void *)(a1 + 872);
    sub_100382640(a1);
    uint64_t v53 = a3[10];
    int v55 = a3[7];
    int v54 = a3[8];
    uint64_t v56 = (char *)(v55 + 8 * (v53 >> 9));
    if (v54 == v55) {
      uint64_t v57 = 0LL;
    }
    else {
      uint64_t v57 = *(void *)v56 + 8 * (a3[10] & 0x1FFLL);
    }
    if (v39 == v57) {
      int64_t v68 = 0LL;
    }
    else {
      int64_t v68 = ((v39 - *(void *)v37) >> 3) + ((v37 - v56) << 6) - ((v57 - *(void *)v56) >> 3);
    }
    if (v54 == v55) {
      uint64_t v69 = 0LL;
    }
    else {
      uint64_t v69 = *(void *)v56 + 8 * (a3[10] & 0x1FFLL);
    }
    if (v49 == v69) {
      uint64_t v70 = 0LL;
    }
    else {
      uint64_t v70 = ((v49 - *(void *)v48) >> 3) + ((v48 - v56) << 6) - ((v69 - *(void *)v56) >> 3);
    }
    int v71 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
    {
      __int128 v106 = *(void *)(*(void *)(v55 + (((v68 - 1 + v53) >> 6) & 0x3FFFFFFFFFFFFF8LL))
                       + 8 * ((v68 - 1 + v53) & 0x1FF));
      uint64_t v107 = *(void *)(*(void *)(v55 + (((v70 - 1 + v53) >> 6) & 0x3FFFFFFFFFFFFF8LL))
                       + 8 * ((v70 - 1 + v53) & 0x1FF));
      LODWORD(buf.__r_.__value_.__l.__data_) = 134218496;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v106;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v68 - 1;
      HIWORD(buf.__r_.__value_.__r.__words[2]) = 2048;
      cap = v107;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_DEBUG,  "#sf,RoseEKF: Will propagate using IMU data from t = %f s (index %ld) to t = %f s",  (uint8_t *)&buf,  0x20u);
    }

    __int128 v108 = v70 - 1;
    if (v68 < 1) {
      sub_1003AEBF4();
    }
    if (v68 < v70)
    {
      do
      {
        int v72 = v68 + a3[4];
        int v73 = ((v72 - 1) * (unsigned __int128)0x47AE147AE147AE15uLL) >> 64;
        uint64_t v74 = (v73 + ((v72 - 1 - v73) >> 1)) >> 4;
        sub_100377AA8( a1,  *(void *)(a3[1] + 8 * v74) + 160 * (v72 - 1 - 25 * v74),  (double *)(*(void *)(a3[1] + 8 * (v72 / 0x19)) + 160 * (v72 % 0x19)));
        uint64_t v75 = *(double *)sub_1002CB32C(v52, 0);
        int v76 = *(double *)sub_1002CB32C(v52, 1u);
        int v77 = *(double *)sub_1002CB32C(v52, 2u);
        sub_100382ABC(a1 + 8, v75);
        sub_100382ABC(a1 + 152, v76);
        sub_100382ABC(a1 + 296, v77);
        ++v68;
      }

      while (v70 != v68);
    }

    uint64_t v78 = a3[4];
    uint64_t v79 = ((unint64_t)(v78 + v108) * (unsigned __int128)0x47AE147AE147AE15uLL) >> 64;
    uint64_t v80 = (v79 + ((unint64_t)(v78 + v108 - v79) >> 1)) >> 4;
    sub_100379288( a1,  *(void *)(a3[1] + 8 * v80) + 160 * (v78 + v108 - 25 * v80),  (void *)(*(void *)(a3[1] + 8 * ((v78 + v70) / 0x19uLL)) + 160 * ((v78 + v70) % 0x19uLL)),  v124);
    sub_100377198(a1);
    int v82 = v81;
    int v83 = a2[9];
    uint64_t v84 = fabs(v83);
    if (1.57079633 - v84 <= 0.01 || 1.57079633 - fabs(v82) <= 0.01)
    {
      uint64_t v85 = a1;
      if (v84 > 1.57079633 || (int v86 = a2[8], fabs(v86) > 3.14159265) || (v87 = a2[6], v87 <= 0.0))
      {
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR))
        {
          sub_1003AECE4();
          uint64_t v85 = a1;
        }

        *(_DWORD *)(v85 + 440) = 3;
        goto LABEL_115;
      }

      v142 = 0x100000003LL;
      *(void *)unsigned __int16 v141 = &off_1007BC4C0;
      *(_OWORD *)&v141[8] = xmmword_10042DB70;
      *(void *)int v143 = &v143[8];
      cap = 0x300000003LL;
      buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1007BC508;
      *(_OWORD *)&buf.__r_.__value_.__r.__words[1] = xmmword_10042DE90;
      *(void *)&id v146 = (char *)&v146 + 8;
      sub_10037E060((uint64_t)v141, (uint64_t)&buf, v87, v86, v83, a2[7], a2[10], a2[11], a2[12]);
      sub_10037ED28(a1, (uint64_t)v141, &buf);
      unsigned int v88 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v89 = *((void *)a2 + 9);
        *(_DWORD *)int v137 = 134218496;
        *(void *)&v137[4] = v89;
        *(_WORD *)&v137[12] = 2048;
        *(double *)&v137[14] = v82;
        *(_WORD *)&v137[22] = 2048;
        uint64_t v138 = *(void *)&v124;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v88,  OS_LOG_TYPE_DEBUG,  "#sf,RoseEKF: Measurement az: %f rad, state az: %f rad. Alternative Range&AoA measurement update done in the de layed measurement at t = %f s",  v137,  0x20u);
      }
    }

    else
    {
      v142 = 0x100000002LL;
      *(void *)unsigned __int16 v141 = &off_1007BCA98;
      *(_OWORD *)&v141[8] = xmmword_10042DEE0;
      *(void *)int v143 = &v143[8];
      cap = 0x200000002LL;
      buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1007BCB28;
      *(_OWORD *)&buf.__r_.__value_.__r.__words[1] = xmmword_10042DF00;
      *(void *)&id v146 = (char *)&v146 + 8;
      uint64_t v85 = a1;
      *(double *)sub_1002CB32C((uint64_t)v141, 0) = v8;
      *(double *)sub_1002CB32C((uint64_t)v141, 1u) = v110;
      *(double *)sub_1002CB40C((uint64_t)&buf, 0, 0) = v9 * v9;
      *(double *)sub_1002CB40C((uint64_t)&buf, 1, 0) = v11;
      *(double *)sub_1002CB40C((uint64_t)&buf, 0, 1) = v11;
      *(double *)sub_1002CB40C((uint64_t)&buf, 1, 1) = v10 * v10;
      sub_10037FDFC(a1, (uint64_t)v141, (uint64_t)&buf);
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG))
      {
        sub_1003AEC80();
        uint64_t v85 = a1;
      }

      if (v6 >= 0.0)
      {
        uint64_t v138 = 0x100000001LL;
        *(void *)int v137 = &off_1007BCA50;
        *(void *)&__int128 v96 = 0x100000001LL;
        *((void *)&v96 + 1) = 0x100000001LL;
        *(_OWORD *)&v137[8] = v96;
        v139 = v140;
        unsigned int v129 = 0x100000001LL;
        __int16 v127 = &off_1007BCA50;
        double v128 = v96;
        uint64_t v130 = v131;
        *(double *)sub_1002CB32C((uint64_t)v137, 0) = v6;
        *(double *)sub_1002CB40C((uint64_t)&v127, 0, 0) = v109 * v109;
        sub_10037F494(v85, (uint64_t)v137, (uint64_t)&v127);
        if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_115;
        }
        sub_1003AEC80();
      }

      else
      {
        if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_ERROR)) {
          goto LABEL_115;
        }
        sub_1003AEC1C();
      }
    }

    uint64_t v85 = a1;
LABEL_115:
    sub_100382580(v85);
    for (; v70 < (unint64_t)sub_10038799C((uint64_t)a3); ++v70)
    {
      uint64_t v97 = v70 + a3[4];
      unint64_t v98 = ((v97 - 1) * (unsigned __int128)0x47AE147AE147AE15uLL) >> 64;
      uint64_t v99 = (v98 + ((v97 - 1 - v98) >> 1)) >> 4;
      sub_100377AA8( a1,  *(void *)(a3[1] + 8 * v99) + 160 * (v97 - 1 - 25 * v99),  (double *)(*(void *)(a3[1] + 8 * (v97 / 0x19)) + 160 * (v97 % 0x19)));
      uint64_t v100 = *(double *)sub_1002CB32C(v52, 0);
      unint64_t v101 = *(double *)sub_1002CB32C(v52, 1u);
      uint64_t v102 = *(double *)sub_1002CB32C(v52, 2u);
      sub_100382ABC(a1 + 8, v100);
      sub_100382ABC(a1 + 152, v101);
      sub_100382ABC(a1 + 296, v102);
    }

    goto LABEL_117;
  }

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000516B4( wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if ((*((_BYTE *)this + 96) & 1) != 0)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 22);
    *(_BYTE *)a2 = 8;
    uint64_t v7 = (char *)a2 + 1;
    if ((v6 & 0x80000000) != 0)
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v6,  (unint64_t)v7,  a3);
    }

    else
    {
      if (v6 <= 0x7F)
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v6;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        goto LABEL_8;
      }

      uint64_t v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v6,  v7,  a3);
    }

    uint64_t v4 = v8;
  }

LABEL_68:
  uint64_t v34 = (unsigned int *)*((void *)this + 8);
  if (!v34) {
    uint64_t v34 = *(unsigned int **)(qword_1008000E8 + 64);
  }
  *(_BYTE *)uint64_t v4 = 66;
  uint64_t v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[10];
  if (v35 > 0x7F)
  {
    uint64_t v36 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v35,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v35;
    uint64_t v36 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_10004CEA4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, v36, a3);
  int v9 = *((_DWORD *)this + 24);
  if ((v9 & 0x100) == 0)
  {
LABEL_16:
    if ((v9 & 0x200) == 0) {
      goto LABEL_86;
    }
    goto LABEL_80;
  }

  int v18 = *(void *)(v5 + 104);
  if (!v18) {
    int v18 = *(void *)(qword_100800158 + 104);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD,  v18,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_74;
  }

  char v25 = (unsigned int *)*((void *)this + 7);
  if (!v25) {
    char v25 = *(unsigned int **)(qword_1008001F0 + 56);
  }
  *(_BYTE *)uint64_t v4 = 58;
  char v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[10];
  if (v26 > 0x7F)
  {
    int v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v26,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v26;
    int v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_100083F5C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v25, v27, a3);
  uint64_t v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x80) == 0)
  {
LABEL_21:
    if ((v12 & 0x100) == 0) {
      goto LABEL_22;
    }
    goto LABEL_80;
  }

  uint64_t v24 = *(void *)(a2 + 152);
  *(_DWORD *)(a1 + 300) |= 0x40000u;
  *(void *)(a1 + 152) = v24;
  uint64_t v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x80000) == 0)
  {
LABEL_36:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_70;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18,  (int)a2,  *(double *)(v5 + 192),  a3);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_70;
  }

  int v30 = *((void *)this + 12);
  *(_BYTE *)uint64_t v4 = 105;
  *(void *)((char *)v4 + 1) = v30;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v16 = *((_DWORD *)this + 75);
  if ((v16 & 0x2000) == 0)
  {
LABEL_33:
    if ((v16 & 0x4000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_70;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F1,  *(_DWORD *)(v5 + 108),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 232);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_70;
  }

  if ((*((_BYTE *)this + 104) & 0x10) != 0)
  {
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(_WORD *)uint64_t v3 = 384;
    if (v27 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v27,  (int)v3 + 2,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 2) = (_BYTE)v27;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
    }
  }

  if ((*((_BYTE *)this + 106) & 1) != 0)
  {
    uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
    *(_WORD *)uint64_t v3 = 392;
    if (v28 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v28,  (int)v3 + 2,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 2) = (_BYTE)v28;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
    }
  }

  if ((*((_BYTE *)this + 106) & 2) != 0)
  {
    int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
    *(_WORD *)uint64_t v3 = 400;
    if (v29 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v29,  (int)v3 + 2,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 2) = (_BYTE)v29;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
    }
  }

  if ((*((_BYTE *)this + 106) & 4) != 0)
  {
    int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
    *(_WORD *)uint64_t v3 = 408;
    if (v30 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v30,  (int)v3 + 2,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 2) = (_BYTE)v30;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
    }
  }

  if ((*((_BYTE *)this + 106) & 8) != 0)
  {
    int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 23);
    *(_WORD *)uint64_t v3 = 416;
    if (v31 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v31,  (int)v3 + 2,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 2) = (_BYTE)v31;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
    }
  }

  if ((*((_BYTE *)this + 106) & 0x10) != 0)
  {
    int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 24);
    *(_WORD *)uint64_t v3 = 424;
    if (v32 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v32,  (int)v3 + 2,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 2) = (_BYTE)v32;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
    }
  }

  uint64_t v35 = (void *)*((void *)this + 1);
  uint64_t v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v33 = v35;
  if (!v35 || *v33 == v33[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v34,  v3,  a3);
  }
}

  int v30 = *(void **)(a1 + 8);
  if (v30 && *v30 != v30[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v5;
  *(_DWORD *)(a1 + 8std::iostream::~basic_iostream(v2, v3 + 8) = v5;
  return v5;
}

  if (v53 < 0) {
    operator delete(__p[0]);
  }

  result.__cntrl_ = v49;
  result.__ptr_ = v48;
  return result;
}

  sub_1002D144C(a1);
  *a3 = *(void *)(a1 + 24);
  *(void *)((char *)a3 + 5) = *(void *)(a1 + 29);
  a3[3] = 0LL;
  a3[4] = 0LL;
  a3[2] = 0LL;
  uint64_t result = sub_1002D5CBC( a3 + 2,  *(const void **)(a1 + 40),  *(void *)(a1 + 48),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 48) - *(void *)(a1 + 40)) >> 6));
  a3[5] = *(void *)(a1 + 64);
  return result;
}

LABEL_74:
  int v37 = (unsigned int *)*((void *)this + 9);
  if (!v37) {
    int v37 = *(unsigned int **)(qword_1008000E8 + 72);
  }
  *(_BYTE *)uint64_t v4 = 74;
  int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v37[10];
  if (v38 > 0x7F)
  {
    int v39 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v38,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v38;
    int v39 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_10004CEA4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v37, v39, a3);
  if ((*((_DWORD *)this + 24) & 0x200) != 0)
  {
LABEL_80:
    uint64_t v40 = *((void *)this + 10);
    if (!v40) {
      uint64_t v40 = *(void *)(qword_1008000E8 + 80);
    }
    *(_BYTE *)uint64_t v4 = 82;
    uint64_t v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v40 + 32);
    if (v41 > 0x7F)
    {
      uint64_t v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v41,  (int)v4 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v41;
      uint64_t v42 = (uint64_t)v4 + 2;
    }

    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10004DD98(v40, v42, a3);
  }

  if (*((int *)this + 52) >= 1)
  {
    int v43 = 0LL;
    do
    {
      char v44 = *(_DWORD *)(*((void *)this + 25) + 4 * v43);
      *(_BYTE *)uint64_t v4 = 125;
      *(_DWORD *)((char *)v4 + 1) = v44;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
      ++v43;
    }

    while (v43 < *((int *)this + 52));
  }

  if (*((int *)this + 56) >= 1)
  {
    uint64_t v45 = 0LL;
    do
    {
      uint64_t v46 = *(_DWORD *)(*((void *)this + 27) + 4 * v45);
      *(_WORD *)uint64_t v4 = 389;
      *(_DWORD *)((char *)v4 + 2) = v46;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 6);
      ++v45;
    }

    while (v45 < *((int *)this + 56));
  }

  if (*((int *)this + 60) >= 1)
  {
    uint64_t v47 = 0LL;
    do
    {
      uint64_t v48 = *(_DWORD *)(*((void *)this + 29) + 4 * v47);
      *(_WORD *)uint64_t v4 = 397;
      *(_DWORD *)((char *)v4 + 2) = v48;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 6);
      ++v47;
    }

    while (v47 < *((int *)this + 60));
  }

  if (*((int *)this + 64) >= 1)
  {
    int v49 = 0LL;
    do
    {
      int v50 = *(void *)(*((void *)this + 31) + 8 * v49);
      *(_WORD *)uint64_t v4 = 401;
      *(void *)((char *)v4 + 2) = v50;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
      ++v49;
    }

    while (v49 < *((int *)this + 64));
  }

  if (*((int *)this + 68) >= 1)
  {
    int v51 = 0LL;
    do
    {
      uint64_t v52 = *(void *)(*((void *)this + 33) + 8 * v51);
      *(_WORD *)uint64_t v4 = 409;
      *(void *)((char *)v4 + 2) = v52;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
      ++v51;
    }

    while (v51 < *((int *)this + 68));
  }

  int v55 = (void *)*((void *)this + 1);
  int v54 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v53 = v55;
  if (!v55 || *v53 == v53[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v54,  v4,  a3);
  }
}

  uint64_t v20 = *(void *)(v5 + 120);
  if (!v20) {
    uint64_t v20 = *(void *)(qword_100800158 + 120);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF,  v20,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_80;
  }

  uint64_t v28 = (unsigned int *)*((void *)this + 8);
  if (!v28) {
    uint64_t v28 = *(unsigned int **)(qword_1008001F0 + 64);
  }
  *(_BYTE *)uint64_t v4 = 66;
  int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v28[6];
  if (v29 > 0x7F)
  {
    int v30 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v29,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v29;
    int v30 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_100084658((wireless_diagnostics::google::protobuf::internal::WireFormat *)v28, v30, a3);
  uint64_t v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x100) == 0)
  {
LABEL_22:
    if ((v12 & 0x200) == 0) {
      goto LABEL_23;
    }
    goto LABEL_86;
  }

  char v26 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 468) |= 0x400u;
  *(void *)(a1 + 72) = v26;
  int v14 = *(_DWORD *)(a2 + 468);
  if ((v14 & 0x800) == 0)
  {
LABEL_36:
    if ((v14 & 0x1000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_76;
  }

  uint64_t v24 = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 232) |= 0x1000u;
  *(_DWORD *)(a1 + 8std::iostream::~basic_iostream(v2, v3 + 8) = v24;
  uint64_t v5 = *(_DWORD *)(a2 + 232);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_76;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E,  *(void *)(v5 + 232),  (unint64_t)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x40000000) != 0) {
    goto LABEL_75;
  }
LABEL_32:
  if ((v6 & 0x80000000) == 0) {
    goto LABEL_33;
  }
LABEL_76:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20,  *(void *)(v5 + 248),  (unint64_t)a2,  a4);
LABEL_33:
  uint64_t v7 = *(_DWORD *)(v5 + 304);
  if ((v7 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21,  *(void *)(v5 + 256),  (unint64_t)a2,  a4);
    uint64_t v7 = *(_DWORD *)(v5 + 304);
    if ((v7 & 2) == 0)
    {
LABEL_35:
      if ((v7 & 4) == 0) {
        goto LABEL_36;
      }
      goto LABEL_79;
    }
  }

  else if ((v7 & 2) == 0)
  {
    goto LABEL_35;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22,  *(void *)(v5 + 264),  (unint64_t)a2,  a4);
  uint64_t v7 = *(_DWORD *)(v5 + 304);
  if ((v7 & 4) == 0)
  {
LABEL_36:
    if ((v7 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_80;
  }

  uint64_t v36 = *((void *)this + 19);
  *(_WORD *)uint64_t v4 = 409;
  *(void *)((char *)v4 + 2) = v36;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
  int v16 = *((_DWORD *)this + 75);
  if ((v16 & 0x80000) == 0)
  {
LABEL_39:
    if ((v16 & 0x100000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_76;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F7,  *(_DWORD *)(v5 + 140),  (int)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 232);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_76;
  }

  int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
  if (v31 >= 0x80)
  {
    int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2) + 1;
    uint64_t v3 = *(_DWORD *)(a1 + 88);
  }

  else
  {
    int v32 = 2;
  }

  LODWORD(v4) = v32 + v4;
  if ((v3 & 0x2000) != 0) {
    goto LABEL_78;
  }
LABEL_56:
  if ((v3 & 0x4000) != 0)
  {
LABEL_82:
    uint64_t v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
    if (v35 >= 0x80)
    {
      uint64_t v3 = *(_DWORD *)(a1 + 88);
    }

    else
    {
      uint64_t v36 = 2;
    }

    LODWORD(v4) = v36 + v4;
  }

  uint64_t v42 = (void *)*((void *)this + 1);
  uint64_t v41 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v40 = v42;
  if (!v42 || *v40 == v40[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v41,  v4,  a3);
  }
}

LABEL_86:
  uint64_t v45 = (void *)*((void *)this + 1);
  char v44 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v43 = v45;
  if (!v45 || *v43 == v43[1]) {
    return v4;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v44,  v4,  a3);
  }
}

  uint64_t v24 = *(void *)(v5 + 152);
  if (!v24) {
    uint64_t v24 = *(void *)(qword_100800158 + 152);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13,  v24,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_92;
  }

  uint64_t v34 = (unsigned int *)*((void *)this + 10);
  if (!v34) {
    uint64_t v34 = *(unsigned int **)(qword_1008001F0 + 80);
  }
  *(_BYTE *)uint64_t v4 = 82;
  uint64_t v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[6];
  if (v35 > 0x7F)
  {
    uint64_t v36 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v35,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v35;
    uint64_t v36 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_100085370((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, v36, a3);
  uint64_t v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x400) == 0)
  {
LABEL_24:
    if ((v12 & 0x800) == 0) {
      goto LABEL_25;
    }
    goto LABEL_98;
  }

  int v37 = *(void *)(a2 + 152);
  *(_DWORD *)(a1 + 468) |= 0x400000u;
  *(void *)(a1 + 152) = v37;
  int v14 = *(_DWORD *)(a2 + 468);
  if ((v14 & 0x800000) != 0)
  {
LABEL_50:
    uint64_t v20 = *(void *)(a2 + 160);
    *(_DWORD *)(a1 + 468) |= 0x800000u;
    *(void *)(a1 + 160) = v20;
    int v14 = *(_DWORD *)(a2 + 468);
  }

  uint64_t v46 = *((_DWORD *)this + 75);
  if ((v46 & 0x10000000) != 0)
  {
    uint64_t v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 28);
    *(_WORD *)uint64_t v4 = 488;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v53,  (unint64_t)v4 + 2,  a3);
    uint64_t v46 = *((_DWORD *)this + 75);
    if ((v46 & 0x20000000) == 0)
    {
LABEL_88:
      if ((v46 & 0x40000000) == 0) {
        goto LABEL_89;
      }
LABEL_102:
      int v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 30);
      *(_WORD *)uint64_t v4 = 504;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v55,  (unint64_t)v4 + 2,  a3);
      if ((*((_DWORD *)this + 75) & 0x80000000) == 0) {
        goto LABEL_90;
      }
      goto LABEL_103;
    }
  }

  else if ((v46 & 0x20000000) == 0)
  {
    goto LABEL_88;
  }

  int v54 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 29);
  *(_WORD *)uint64_t v4 = 496;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v54,  (unint64_t)v4 + 2,  a3);
  uint64_t v46 = *((_DWORD *)this + 75);
  if ((v46 & 0x40000000) != 0) {
    goto LABEL_102;
  }
LABEL_89:
  if ((v46 & 0x80000000) == 0) {
    goto LABEL_90;
  }
LABEL_103:
  uint64_t v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 31);
  *(_WORD *)uint64_t v4 = 640;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v56,  (unint64_t)v4 + 2,  a3);
LABEL_90:
  uint64_t v47 = *((_DWORD *)this + 76);
  if ((v47 & 1) != 0)
  {
    uint64_t v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 32);
    *(_WORD *)uint64_t v4 = 648;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v57,  (unint64_t)v4 + 2,  a3);
    uint64_t v47 = *((_DWORD *)this + 76);
    if ((v47 & 2) == 0)
    {
LABEL_92:
      if ((v47 & 4) == 0) {
        goto LABEL_93;
      }
      goto LABEL_106;
    }
  }

  else if ((v47 & 2) == 0)
  {
    goto LABEL_92;
  }

  uint64_t v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 33);
  *(_WORD *)uint64_t v4 = 656;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v58,  (unint64_t)v4 + 2,  a3);
  uint64_t v47 = *((_DWORD *)this + 76);
  if ((v47 & 4) == 0)
  {
LABEL_93:
    if ((v47 & 8) == 0) {
      goto LABEL_94;
    }
LABEL_107:
    uint64_t v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 35);
    *(_WORD *)uint64_t v4 = 672;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v60,  (unint64_t)v4 + 2,  a3);
    if ((*((_DWORD *)this + 76) & 0x10) == 0) {
      goto LABEL_96;
    }
    goto LABEL_95;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x403,  *(_DWORD *)(v5 + 188),  (int)a2,  a4);
  uint64_t v7 = *(_DWORD *)(v5 + 236);
  if ((v7 & 0x10) == 0)
  {
LABEL_38:
    if ((v7 & 0x20) == 0) {
      goto LABEL_39;
    }
    goto LABEL_88;
  }

  if ((v3 & 0x8000) != 0) {
    uint64_t v4 = (v4 + 3);
  }
  else {
    uint64_t v4 = v4;
  }
LABEL_89:
  int v37 = *(void **)(a1 + 8);
  if (v37 && *v37 != v37[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 84) = v4;
  return v4;
}

      v14 += 24LL;
    }

    else {
      int v18 = *(void *)(a1 + 16);
    }
    sub_10015CEB8((uint64_t)&buf, v18 + 1);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_pthread_attr_t buf = &buf;
    }
    else {
      p_pthread_attr_t buf = (std::string *)buf.__r_.__value_.__r.__words[0];
    }
    if (v18)
    {
      if (*v2 >= 0) {
        uint64_t v20 = v2 - 23;
      }
      else {
        uint64_t v20 = (char *)*v3;
      }
      memmove(p_buf, v20, v18);
    }

    *(_WORD *)((char *)&p_buf->__r_.__value_.__l.__data_ + v1std::iostream::~basic_iostream(v2, v3 + 8) = 47;
    int v21 = *(char *)(v14 + 23);
    if (v21 >= 0) {
      int v22 = (const std::string::value_type *)v14;
    }
    else {
      int v22 = *(const std::string::value_type **)v14;
    }
    if (v21 >= 0) {
      int v23 = *(unsigned __int8 *)(v14 + 23);
    }
    else {
      int v23 = *(void *)(v14 + 8);
    }
    uint64_t v24 = std::string::append(&buf, v22, v23);
    char v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    cap = v24->__r_.__value_.__l.__cap_;
    *(_OWORD *)std::string __p = v25;
    v24->__r_.__value_.__l.__size_ = 0LL;
    v24->__r_.__value_.__l.__cap_ = 0LL;
    v24->__r_.__value_.__r.__words[0] = 0LL;
    if (sub_10015AB70((const char *)__p, &v50, &v49))
    {
      char v26 = v15;
      int v27 = v49;
      uint64_t v28 = v49 + v44;
      int v29 = (os_log_s *)qword_1008000A0;
      int v30 = os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT);
      tv_sec = v50.tv_sec;
      if (v30)
      {
        int v32 = __p;
        if (cap < 0) {
          int v32 = (void **)__p[0];
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 136316162;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v32;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v50.tv_sec;
        HIWORD(buf.__r_.__value_.__r.__words[2]) = 2048;
        uint64_t v57 = v45;
        uint64_t v58 = 2048;
        uint64_t v59 = v27;
        uint64_t v60 = 2048;
        int v61 = v28;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "pruneLogFiles: looking at %s, modTime %ld floorTime %ld size %lld new total %lld",  (uint8_t *)&buf,  0x34u);
      }

      int v33 = v26 + 1;
      if (tv_sec >= v45)
      {
        if (v26 < 250)
        {
          if (v27)
          {
            int v39 = v28;
            if (v28 >= 314572801 && sub_10015A654((const char *)__p))
            {
              uint64_t v15 = v33;
              uint64_t v40 = (os_log_s *)qword_1008000A0;
              if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v41 = __p;
                if (cap < 0) {
                  uint64_t v41 = (void **)__p[0];
                }
                LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
                *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v41;
                _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEFAULT,  "pruneLogFiles: deleted due to size: %s",  (uint8_t *)&buf,  0xCu);
              }
            }

            else
            {
              uint64_t v15 = v33;
            }

            char v44 = v39;
            goto LABEL_84;
          }

          uint64_t v34 = v26 + 1;
          sub_10015A654((const char *)__p);
          uint64_t v42 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
          {
            int v43 = __p;
            if (cap < 0) {
              int v43 = (void **)__p[0];
            }
            LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
            *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v43;
            _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEFAULT,  "pruneLogFiles: deleted due to zero size: %s",  (uint8_t *)&buf,  0xCu);
          }
        }

        else
        {
          uint64_t v34 = v26 + 1;
          sub_10015A654((const char *)__p);
          int v37 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
          {
            int v38 = __p;
            if (cap < 0) {
              int v38 = (void **)__p[0];
            }
            LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
            *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v38;
            WORD2(buf.__r_.__value_.__r.__words[1]) = 1024;
            uint64_t v15 = v34;
            *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v34;
            _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "pruneLogFiles: deleted due to num files: %s num files %d",  (uint8_t *)&buf,  0x12u);
            goto LABEL_84;
          }
        }
      }

      else
      {
        uint64_t v34 = v26 + 1;
        sub_10015A654((const char *)__p);
        uint64_t v35 = (os_log_s *)qword_1008000A0;
        if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v36 = __p;
          if (cap < 0) {
            uint64_t v36 = (void **)__p[0];
          }
          LODWORD(buf.__r_.__value_.__l.__data_) = 136315650;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v36;
          WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
          *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = tv_sec;
          HIWORD(buf.__r_.__value_.__r.__words[2]) = 2048;
          uint64_t v57 = v45;
          _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEFAULT,  "pruneLogFiles: deleted due to age %s fileTime %ld targetTime %ld",  (uint8_t *)&buf,  0x20u);
        }
      }

      uint64_t v15 = v34;
    }

        v48.__d_.__rep_ = v47 + v45.__d_.__rep_;
        goto LABEL_87;
      }

    sub_10001E11C();
  }

  if (v10 >= v13)
  {
    uint64_t v20 = v12 + 1;
    if (v12 + 1 > 0xAAAAAAAAAAAAAAALL) {
      goto LABEL_86;
    }
    int v21 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v13 - (void)v11) >> 3);
    if (2 * v21 > v20) {
      uint64_t v20 = 2 * v21;
    }
    if (v21 >= 0x555555555555555LL) {
      int v22 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      int v22 = v20;
    }
    if (v22)
    {
      int v23 = (char *)sub_10001E130(a1 + 584, v22);
      uint64_t v10 = *(void *)(a1 + 576);
      uint64_t v11 = *(void **)(a1 + 568);
    }

    else
    {
      int v23 = 0LL;
    }

    int v27 = &v23[24 * v12];
    uint64_t v28 = &v23[24 * v22];
    *(double *)int v27 = v7;
    *((void *)v27 + 1) = v6;
    *((_DWORD *)v27 + 4) = v8;
    uint64_t v15 = v27 + 24;
    if ((void *)v10 != v11)
    {
      do
      {
        int v29 = *(_OWORD *)(v10 - 24);
        *((void *)v27 - 1) = *(void *)(v10 - 8);
        *(_OWORD *)(v27 - 24) = v29;
        v27 -= 24;
        v10 -= 24LL;
      }

      while ((void *)v10 != v11);
      uint64_t v11 = *v9;
    }

    *(void *)(a1 + 56std::iostream::~basic_iostream(v2, v3 + 8) = v27;
    *(void *)(a1 + 576) = v15;
    *(void *)(a1 + 584) = v28;
    if (v11) {
      operator delete(v11);
    }
  }

  else
  {
    *(double *)uint64_t v10 = v7;
    *(void *)(v10 + std::iostream::~basic_iostream(v2, v3 + 8) = v6;
    uint64_t v15 = (char *)(v10 + 24);
    *(_DWORD *)(v10 + 16) = v8;
  }

  *(void *)(a1 + 576) = v15;
  int v30 = *(void *)(a1 + 568);
  int v31 = (size_t)&v15[-v30 - 24];
  if (v31) {
    memmove(*(void **)(a1 + 568), (const void *)(v30 + 24), v31);
  }
  int v14 = v30 + v31;
LABEL_37:
  *(void *)(a1 + 576) = v14;
  int v32 = off_1007F3598[*(int *)(a1 + 84)];
  uint64_t v60 = 0LL;
  int v61 = 0LL;
  std::string __p = 0LL;
  sub_10014C4C4(&__p, *(const void **)(a1 + 568), v14, 0xAAAAAAAAAAAAAAABLL * ((v14 - *(void *)(a1 + 568)) >> 3));
  *(double *)(a1 + 600) = (*(double (**)(uint64_t (*)[4], void **))((*v32)[0] + 16))(v32, &__p);
  *(_BYTE *)(a1 + 60std::iostream::~basic_iostream(v2, v3 + 8) = 1;
  if (__p)
  {
    uint64_t v60 = __p;
    operator delete(__p);
  }

  int v33 = *(unsigned __int8 *)(a1 + 192);
  if (*(_BYTE *)(a1 + 192))
  {
    uint64_t v34 = *(void *)(a1 + 592);
    int v51 = *a2;
    uint64_t v52 = *((_DWORD *)a2 + 4);
    if (*((char *)a2 + 47) < 0)
    {
      sub_1000063A8(&v53, *((void **)a2 + 3), *((void *)a2 + 4));
    }

    else
    {
      uint64_t v53 = *(__int128 *)((char *)a2 + 24);
      int v54 = *((void *)a2 + 5);
    }

    int v55 = 0LL;
    uint64_t v56 = 0LL;
    uint64_t v57 = 0LL;
    sub_1001309C0(&v55, *((const void **)a2 + 6), *((void *)a2 + 7), *((void *)a2 + 7) - *((void *)a2 + 6));
    uint64_t v58 = *(__int128 *)((char *)a2 + 72);
    (*(void (**)(_BYTE *__return_ptr, uint64_t, __int128 *, void))(*(void *)v34 + 24LL))( buf,  v34,  &v51,  0LL);
    if (v55)
    {
      uint64_t v56 = v55;
      operator delete(v55);
    }

    if (SHIBYTE(v54) < 0) {
      operator delete((void *)v53);
    }
    if (!v69 || !buf[8]) {
      goto LABEL_83;
    }
    *(void *)(a1 + 600) = *(void *)buf;
    *(_BYTE *)(a1 + 60std::iostream::~basic_iostream(v2, v3 + 8) = 1;
  }

  uint64_t v35 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 576) - *(void *)(a1 + 568)) >> 3);
  uint64_t v36 = *(int *)(a1 + 80);
  if (!*(_BYTE *)(a1 + 636))
  {
    if (v35 < v36) {
      goto LABEL_55;
    }
LABEL_66:
    if (!*(_BYTE *)(a1 + 608)) {
      sub_100006080();
    }
    *(_DWORD *)(a1 + 6sub_100012358(v1 - 32) = sub_1002CCF48((unsigned int *)(a1 + 680), *(double *)(a1 + 600), *(double *)a2);
    goto LABEL_73;
  }

  if (v35 >= v36) {
    goto LABEL_66;
  }
  if (*(_DWORD *)(a1 + 632)) {
    goto LABEL_74;
  }
LABEL_55:
  int v37 = *(double **)(a1 + 96);
  if (v37 == (double *)(a1 + 104))
  {
    int v38 = 0;
  }

  else
  {
    int v38 = 0;
    int v39 = *(double *)(a1 + 600);
    while (1)
    {
      if (*(_BYTE *)(a1 + 608))
      {
        uint64_t v40 = v37[4];
        if (v39 > v40 + 3.0) {
          break;
        }
      }

      uint64_t v41 = (double *)*((void *)v37 + 1);
      if (v41)
      {
        do
        {
          uint64_t v42 = v41;
          uint64_t v41 = *(double **)v41;
        }

        while (v41);
      }

      else
      {
        do
        {
          uint64_t v42 = (double *)*((void *)v37 + 2);
          int v43 = *(void *)v42 == (void)v37;
          int v37 = v42;
        }

        while (!v43);
      }

      ++v38;
      int v37 = v42;
    }

    char v44 = (os_log_s *)qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v45 = *(void *)(a1 + 112);
      *(_DWORD *)pthread_attr_t buf = 134218752;
      *(void *)&uint8_t buf[4] = v45;
      int v63 = 2048;
      uint64_t v64 = v39;
      uint64_t v65 = 2048;
      int v66 = v40;
      int v67 = 2048;
      int64_t v68 = 0x4008000000000000LL;
      _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEFAULT,  "#threshold-detector, threshsize:%zu [in early] rssi: %f, rssiBorder: %f, rssiEarlyOffset: %f",  buf,  0x2Au);
    }
  }

uint64_t sub_100051A88(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 96);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_67;
  }

  if ((v3 & 1) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
    if ((v5 & 0x80000000) != 0)
    {
      int v6 = 10;
    }

    else if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      int v3 = *(_DWORD *)(a1 + 96);
    }

    else
    {
      int v6 = 1;
    }

    uint64_t v4 = (v6 + 1);
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
  }

  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1008000E8 + 16);
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10004B6E4(v7, a2);
  int v9 = (int)v8;
  else {
    int v10 = 1;
  }
  uint64_t v4 = (v4 + v9 + v10 + 1);
  int v3 = *(_DWORD *)(a1 + 96);
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v11 = *(void *)(a1 + 24);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1008000E8 + 24);
    }
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10004B6E4(v11, a2);
    int v13 = (int)v12;
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
    int v3 = *(_DWORD *)(a1 + 96);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }

  uint64_t v15 = *(void *)(a1 + 32);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_1008000E8 + 32);
  }
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10004EE84(v15, a2);
  int v17 = (int)v16;
  else {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v17 + v18 + 1);
  int v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_46;
  }

LABEL_52:
  uint64_t v29 = *(void *)(a1 + 56);
  int v30 = *(unsigned __int8 *)(v29 + 23);
  char v31 = v30;
  uint64_t v32 = *(void *)(v29 + 8);
  if ((v30 & 0x80u) == 0) {
    unint64_t v33 = *(unsigned __int8 *)(v29 + 23);
  }
  else {
    unint64_t v33 = v32;
  }
  if (v33 >= 0x80)
  {
    int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v33,  a2);
    int v30 = *(unsigned __int8 *)(v29 + 23);
    uint64_t v32 = *(void *)(v29 + 8);
    int v3 = *(_DWORD *)(a1 + 96);
    char v31 = *(_BYTE *)(v29 + 23);
  }

  else
  {
    int v34 = 1;
  }

  if (v31 < 0) {
    int v30 = v32;
  }
  uint64_t v4 = (v4 + v34 + v30 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_61:
    uint64_t v35 = *(void *)(a1 + 64);
    if (!v35) {
      uint64_t v35 = *(void *)(qword_1008000E8 + 64);
    }
    uint64_t v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10004CF5C(v35, a2);
    int v37 = (int)v36;
    else {
      int v38 = 1;
    }
    uint64_t v4 = (v4 + v37 + v38 + 1);
    int v3 = *(_DWORD *)(a1 + 96);
  }

  int v13 = *(void *)(v5 + 72);
  if (!v13) {
    int v13 = *(void *)(qword_1008001F0 + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  v13,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_58;
  }

  if ((v9 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v9 & 0x100) != 0)
  {
    int v41 = *(_DWORD *)(a2 + 208);
    *(_DWORD *)(a1 + 236) |= 0x100u;
    *(_DWORD *)(a1 + 20std::iostream::~basic_iostream(v2, v3 + 8) = v41;
    int v9 = *(_DWORD *)(a2 + 236);
    if ((v9 & 0x200) == 0)
    {
LABEL_55:
      if ((v9 & 0x400) == 0) {
        goto LABEL_56;
      }
      goto LABEL_96;
    }
  }

  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_55;
  }

  int v42 = *(_DWORD *)(a2 + 212);
  *(_DWORD *)(a1 + 236) |= 0x200u;
  *(_DWORD *)(a1 + 212) = v42;
  int v9 = *(_DWORD *)(a2 + 236);
  if ((v9 & 0x400) == 0)
  {
LABEL_56:
    if ((v9 & 0x800) == 0) {
      goto LABEL_57;
    }
LABEL_97:
    char v44 = *(_DWORD *)(a2 + 220);
    *(_DWORD *)(a1 + 236) |= 0x800u;
    *(_DWORD *)(a1 + 220) = v44;
    if ((*(_DWORD *)(a2 + 236) & 0x1000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_58;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  (int)a2,  *(double *)(v5 + 56),  a3);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_54;
  }

  if (HIBYTE(v184))
  {
    LODWORD(__rhs.__sb_.__vftable) = 5;
    uint64_t v57 = *(void *)(a1 + 80);
    if (!v57) {
      goto LABEL_156;
    }
    (*(void (**)(uint64_t, std::basic_stringstream<char> *))(*(void *)v57 + 48LL))(v57, &__rhs);
  }

  if (!(_BYTE)v184) {
    goto LABEL_58;
  }
  LODWORD(__rhs.__sb_.__vftable) = 6;
  uint64_t v58 = *(void *)(a1 + 80);
  if (!v58) {
LABEL_156:
  }
    sub_10001EEF0();
  (*(void (**)(uint64_t, std::basic_stringstream<char> *))(*(void *)v58 + 48LL))(v58, &__rhs);
LABEL_58:
  __p[0] = v185;
  sub_10011E3B8((void ***)__p);
  std::filebuf::~filebuf(v203);
  std::ios::~ios(&v204);
  sub_10035FFE8(v186);
  sub_10035FFE8(v187);
  if (SHIBYTE(v189) < 0) {
    operator delete((void *)v188);
  }
  if (SHIBYTE(binp) < 0) {
    operator delete((void *)v191);
  }
  *(std::stringbuf_vtbl **)((char *)&v193.__sb_.__vftable
  v193.__sb_.__binp_ = v59;
  if (v194 < 0) {
    operator delete(v193.__sb_.__hm_);
  }
  std::streambuf::~streambuf(&v193.__sb_.__ninp_);
  std::ios::~ios(&v195);
  return v31;
}

LABEL_67:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v39 = *(void *)(a1 + 72);
      if (!v39) {
        uint64_t v39 = *(void *)(qword_1008000E8 + 72);
      }
      uint64_t v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10004CF5C(v39, a2);
      int v41 = (int)v40;
      else {
        int v42 = 1;
      }
      uint64_t v4 = (v4 + v41 + v42 + 1);
      int v3 = *(_DWORD *)(a1 + 96);
    }

    if ((v3 & 0x200) != 0)
    {
      uint64_t v43 = *(void *)(a1 + 80);
      if (!v43) {
        uint64_t v43 = *(void *)(qword_1008000E8 + 80);
      }
      char v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10004DE60(v43, a2);
      int v45 = (int)v44;
      else {
        int v46 = 1;
      }
      uint64_t v4 = (v4 + v45 + v46 + 1);
    }
  }

  uint64_t v47 = *(void **)(a1 + 8);
  if (v47 && *v47 != v47[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v4;
  *(_DWORD *)(a1 + 92) = v4;
  return v4;
}

  unint64_t v33 = (void *)*((void *)this + 1);
  uint64_t v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  char v31 = v33;
  if (!v33 || *v31 == v31[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v32,  v3,  a3);
  }
}

  int v18 = *(void *)(v5 + 112);
  if (!v18) {
    int v18 = *(void *)(qword_1008001F0 + 112);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE,  v18,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_73;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17,  (int)a2,  *(double *)(v5 + 184),  a3);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_69;
  }

  uint64_t v29 = *((void *)this + 11);
  *(_BYTE *)uint64_t v4 = 97;
  *(void *)((char *)v4 + 1) = v29;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v16 = *((_DWORD *)this + 75);
  if ((v16 & 0x1000) == 0)
  {
LABEL_32:
    if ((v16 & 0x2000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_69;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F0,  *(_DWORD *)(v5 + 104),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 232);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_69;
  }

    sub_100006080();
  }

  if (!*(_BYTE *)(a1 + 680))
  {
    unint64_t v23 = 0.0;
    int v6 = 0.2;
    uint64_t v22 = 0.0;
    goto LABEL_55;
  }

  int v28 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v54 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: AOA CIR Data Event",  v54,  2u);
  }

  if (!*(_BYTE *)(a1 + 200) || !*(_BYTE *)(a1 + 216) || !*(_BYTE *)(a1 + 232))
  {
    uint64_t v40 = qword_1008000A0;
    int v6 = 0.2;
    if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT)) {
      return v6;
    }
    *(_WORD *)int v54 = 0;
    uint64_t v7 = "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: AOA one or more FPSNRs not available";
LABEL_45:
    uint64_t v8 = (os_log_s *)v40;
    int v9 = 2;
    goto LABEL_59;
  }

  uint64_t v29 = *(double *)(a1 + 224);
  int v30 = *(double *)(a1 + 208);
  char v31 = *(double *)(a1 + 192);
  uint64_t v32 = (double *)&v54[8];
  *(double *)int v54 = v31;
  *(double *)&v54[8] = v30;
  *(double *)&v54[16] = v29;
  if (v31 >= v30)
  {
    int v30 = v31;
    uint64_t v32 = (double *)v54;
  }

  if (v30 < v29) {
    uint64_t v32 = (double *)&v54[16];
  }
  uint64_t v22 = *v32;
  unint64_t v33 = (char *)v32 - v54;
  if (v32 == (double *)v54)
  {
    if (!*(_BYTE *)(a1 + 680)) {
      goto LABEL_67;
    }
    int v34 = (__int16 *)(a1 + 588);
    uint64_t v35 = (__int16 *)(a1 + 590);
    uint64_t v36 = (__int16 *)(a1 + 596);
    int v37 = (__int16 *)(a1 + 598);
  }

  else if (v33 == 16)
  {
    if (!*(_BYTE *)(a1 + 680)) {
      goto LABEL_67;
    }
    int v34 = (__int16 *)(a1 + 652);
    uint64_t v35 = (__int16 *)(a1 + 654);
    uint64_t v36 = (__int16 *)(a1 + 660);
    int v37 = (__int16 *)(a1 + 662);
  }

  else
  {
    if (v33 != 8)
    {
      uint64_t v53 = qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)pthread_attr_t buf = 134217984;
        *(void *)&uint64_t v64 = v33 >> 3;
        int v50 = "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: AOA fpsnrIndex %ld";
        int v51 = (os_log_s *)v53;
        uint64_t v52 = 12;
        goto LABEL_65;
      }

      return 0.2;
    }

    if (!*(_BYTE *)(a1 + 680)) {
      goto LABEL_67;
    }
    int v34 = (__int16 *)(a1 + 620);
    uint64_t v35 = (__int16 *)(a1 + 622);
    uint64_t v36 = (__int16 *)(a1 + 628);
    int v37 = (__int16 *)(a1 + 630);
  }

  int v41 = *v35;
  int v42 = *v34;
  uint64_t v43 = hypot((double)*v36, (double)*v37);
  char v44 = hypot((double)v42, (double)v41);
  int v45 = v44;
  if (v43 <= 0.0 || v44 <= 0.0)
  {
    int v49 = qword_1008000A0;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)pthread_attr_t buf = 134218240;
      uint64_t v64 = v43;
      uint64_t v65 = 2048;
      int v66 = v45;
      int v50 = "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: firstPathPeak(%.2f) or leadingEdgeStartMag(%.2f) are zero";
      int v51 = (os_log_s *)v49;
      uint64_t v52 = 22;
LABEL_65:
      _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, v50, buf, v52);
      return 0.2;
    }

    return 0.2;
  }

  unint64_t v23 = log10(v43 / v44) * 20.0;
  int v46 = v13 - v22 - v23;
  int v6 = v46 * 0.03 + 1.75;
  uint64_t v25 = (os_log_s *)qword_1008000A0;
  if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT)) {
    goto LABEL_55;
  }
  *(_DWORD *)pthread_attr_t buf = 134218240;
  uint64_t v64 = v13 - v22 - v23;
  uint64_t v65 = 2048;
  int v66 = v46 * 0.03 + 1.75;
  char v26 = "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: AOA cirMetric %.2f RangeUnc %.2f";
  int v27 = buf;
LABEL_54:
  _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, v26, v27, 0x16u);
LABEL_55:
  if (v6 < 0.01) {
    int v6 = 0.01;
  }
  uint64_t v47 = qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int v54 = 67110656;
    *(_DWORD *)&v54[4] = v14;
    *(_WORD *)&v54[8] = 2048;
    *(void *)&v54[10] = v15;
    *(_WORD *)&v54[18] = 2048;
    *(void *)&v54[20] = v16;
    int v55 = 2048;
    uint64_t v56 = v13;
    uint64_t v57 = 2048;
    uint64_t v58 = v22;
    uint64_t v59 = 2048;
    uint64_t v60 = v23;
    int v61 = 2048;
    int v62 = v6;
    uint64_t v7 = "#me,MeasEngMetricsCalculator::computeRangeUncertaintyFromCirs: cycleIndex %d machContTime %.3f rm %.3f ppnr %.2"
         "f fpsnr %.2f ler %.2f ru %.2f";
    uint64_t v8 = (os_log_s *)v47;
    int v9 = 68;
    goto LABEL_59;
  }

  return v6;
}

      atomic_store(2u, (unsigned int *)(a1 + 1240));
      v57[0] = _NSConcreteStackBlock;
      v57[1] = 3221225472LL;
      v57[2] = sub_1001DCB9C;
      v57[3] = &unk_1007A2398;
      v57[4] = a1;
      sub_1001CFF84(a1, v57);
      memset(&buf, 0, sizeof(buf));
      if (!sub_10031FEF4(a1 + 1248, 0xD6u, (unint64_t *)&buf))
      {
        if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
          sub_10039B7C4();
        }
        abort_report_np("PRRose::setStateFromUnknownToHost: failed to get AOP property CmdQueueClearAllowed");
LABEL_135:
        __break(1u);
        return;
      }

      uint64_t v39 = *buf.__r_.__value_.__l.__data_;
      __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 1344);
      __lk.__owns_ = 1;
      std::mutex::lock((std::mutex *)(a1 + 1344));
      uint64_t v40 = atomic_load((unsigned __int8 *)(a1 + 1456));
      int v41 = v40 & 1;
      int v42 = (os_log_s *)qword_1007F9AA0;
      if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(v61.__r_.__value_.__l.__data_) = 67109376;
        HIDWORD(v61.__r_.__value_.__r.__words[0]) = v39 != 0;
        LOWORD(v61.__r_.__value_.__r.__words[1]) = 1024;
        *(_DWORD *)((char *)&v61.__r_.__value_.__r.__words[1] + 2) = v41;
        _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEFAULT,  "PRRose aopCmdQueueClearAllowedProperty = %d, fAopResetCompleted = %d",  (uint8_t *)&v61,  0xEu);
      }

      if (!v39 && !v41)
      {
        v43.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_ + 200000000;
        while (1)
        {
          char v44 = atomic_load((unsigned __int8 *)(a1 + 1456));
          if ((v44 & 1) != 0) {
            goto LABEL_98;
          }
          if (std::chrono::steady_clock::now().__d_.__rep_ >= v43.__d_.__rep_) {
            goto LABEL_89;
          }
          v45.__d_.__rep_ = v43.__d_.__rep_ - std::chrono::steady_clock::now().__d_.__rep_;
          if (v45.__d_.__rep_ >= 1) {
            break;
          }
LABEL_88:
          if (std::chrono::steady_clock::now().__d_.__rep_ >= v43.__d_.__rep_)
          {
LABEL_89:
            int v49 = atomic_load((unsigned __int8 *)(a1 + 1456));
            if ((v49 & 1) != 0) {
              goto LABEL_98;
            }
            if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
              sub_10039B798();
            }
            atomic_store(6u, (unsigned int *)(a1 + 1240));
            sub_1000065CC(&v61, "PRRose::setStateFromUnknownToHost: failed to clear AOP command queue.");
            int v50 = sub_1001D2610(a1, 0LL, &v61);
            if ((v50 & 1) == 0)
            {
              if (os_log_type_enabled((os_log_t)qword_1007F9AA0, OS_LOG_TYPE_ERROR)) {
                sub_10039B76C();
              }
              abort_report_np("PRRose::setStateFromUnknownToHost: Failed to trigger fatal crashLog");
              goto LABEL_135;
            }

            goto LABEL_103;
          }
        }

        std::chrono::steady_clock::now();
        v46.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
        if (v46.__d_.__rep_)
        {
          if (v46.__d_.__rep_ < 1)
          {
            if ((unint64_t)v46.__d_.__rep_ < 0xFFDF3B645A1CAC09LL)
            {
              uint64_t v47 = 0x8000000000000000LL;
              goto LABEL_86;
            }
          }

          else if ((unint64_t)v46.__d_.__rep_ > 0x20C49BA5E353F7LL)
          {
            uint64_t v47 = 0x7FFFFFFFFFFFFFFFLL;
            goto LABEL_84;
          }

          uint64_t v47 = 1000 * v46.__d_.__rep_;
        }

        else
        {
          uint64_t v47 = 0LL;
        }

uint64_t sub_100051DE8( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  4066LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_100050504((uint64_t)a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_100051E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100051EA8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_100051EF0()
{
  return 1LL;
}

uint64_t sub_100051EF8()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F57E0;
}

void sub_100051F70(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_100051F84(void *a1)
{
  *a1 = off_1007A3C60;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0LL;
  a1[3] = 0LL;
  a1[4] = 0LL;
  return a1;
}

void sub_100051FBC(_Unwind_Exception *a1)
{
}

uint64_t sub_100051FD0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  4356LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 16) = v6;
      int v5 = *(_DWORD *)(a2 + 36);
    }

    if ((v5 & 2) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 24) = v7;
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100052084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_10005209C(uint64_t a1)
{
  *(void *)a1 = off_1007A3C60;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000520CC(uint64_t a1)
{
  *(void *)a1 = off_1007A3C60;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
  operator delete(v2);
}

uint64_t sub_100052100(uint64_t result, int a2)
{
  *(_DWORD *)(result + sub_100012358(v1 - 32) = a2;
  return result;
}

void *sub_100052108()
{
  uint64_t v0 = operator new(0x28uLL);
  sub_100051F84(v0);
  return v0;
}

void sub_100052134(_Unwind_Exception *a1)
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100052148(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0LL;
    *(void *)(a1 + 24) = 0LL;
  }

  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100052168( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_22;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        int v10 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 17)
        {
          *((void *)this + 1) = v10 + 1;
          goto LABEL_16;
        }
      }

      if (TagFallback >> 3 != 2)
      {
        int v9 = TagFallback & 7;
        goto LABEL_22;
      }

      int v9 = TagFallback & 7;
      if (v9 == 1) {
        break;
      }
LABEL_22:
      if (v9 == 4) {
        return 1LL;
      }
    }

uint64_t sub_1000522D4( uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  (int)a2,  *(double *)(this + 16),  a3);
    int v5 = *(_DWORD *)(v4 + 36);
  }

  if ((v5 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v4 + 24),  a3);
  }
  char v8 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
    }
  }

  return this;
}

uint64_t sub_10005234C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 1) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    *(_BYTE *)a2 = 9;
    *(void *)(a2 + 1) = v4;
    a2 += 9LL;
    int v3 = *(_DWORD *)(a1 + 36);
  }

  if ((v3 & 2) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    *(_BYTE *)a2 = 17;
    *(void *)(a2 + 1) = v5;
    a2 += 9LL;
  }

  char v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (!v8 || *v7 == v7[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v6,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

uint64_t sub_100052414(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if (*(_BYTE *)(a1 + 36)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0LL;
  }
  char v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v5;
  }
  return v5;
}

uint64_t sub_100052478( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  4344LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_100051FD0((uint64_t)a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_100052520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100052538(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_100052580()
{
  return 1LL;
}

uint64_t sub_100052588()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F57F0;
}

void sub_100052600(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100052614(uint64_t a1)
{
  *(void *)a1 = off_1007A3D10;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + sub_100012358(v1 - 32) = 0u;
  return a1;
}

void sub_10005264C(_Unwind_Exception *a1)
{
}

uint64_t sub_100052660(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v13,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  4648LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v13,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }

  LOBYTE(v5) = *(_BYTE *)(a2 + 44);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 44) & 1) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 1u;
      unsigned int v6 = *(void **)(a1 + 16);
      if (!v6)
      {
        unsigned int v6 = operator new(0x28uLL);
        sub_100051F84(v6);
        *(void *)(a1 + 16) = v6;
      }

      uint64_t v7 = *(void *)(a2 + 16);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1008000F8 + 16);
      }
      sub_100051FD0((uint64_t)v6, v7);
      int v5 = *(_DWORD *)(a2 + 44);
    }

    if ((v5 & 2) != 0)
    {
      uint64_t v8 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 44) |= 2u;
      *(void *)(a1 + 24) = v8;
      int v5 = *(_DWORD *)(a2 + 44);
    }

    if ((v5 & 4) != 0)
    {
      *(_DWORD *)(a1 + 44) |= 4u;
      int v9 = *(void **)(a1 + 32);
      if (!v9)
      {
        int v9 = operator new(0x30uLL);
        sub_10004B148((uint64_t)v9);
        *(void *)(a1 + sub_100012358(v1 - 32) = v9;
      }

      uint64_t v10 = *(void *)(a2 + 32);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_1008000F8 + 32);
      }
      sub_10004B194((uint64_t)v9, v10);
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100052798( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_1000527C4(void *a1)
{
  *a1 = off_1007A3D10;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100052800(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_100052800(void *result)
{
  if ((void *)qword_1008000F8 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[4];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100052860(void *a1)
{
}

uint64_t sub_100052874(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void *sub_10005287C()
{
  uint64_t v0 = operator new(0x30uLL);
  sub_100052614((uint64_t)v0);
  return v0;
}

void sub_1000528A8(_Unwind_Exception *a1)
{
}

uint64_t sub_1000528BC(uint64_t this)
{
  uint64_t v1 = this;
  if (*(_BYTE *)(this + 44))
  {
    if ((*(_BYTE *)(this + 44) & 1) != 0)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(_BYTE *)(this + 36))
        {
          *(void *)(this + 16) = 0LL;
          *(void *)(this + 24) = 0LL;
        }

        uint64_t v2 = *(void *)(this + 8);
        this += 8LL;
        *(_DWORD *)(this + 2std::iostream::~basic_iostream(v2, v3 + 8) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }

    *(void *)(v1 + 24) = 0LL;
    if ((*(_BYTE *)(v1 + 44) & 4) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        if (*(_BYTE *)(this + 44))
        {
          *(void *)(this + 16) = 0LL;
          *(void *)(this + 24) = 0LL;
          *(void *)(this + sub_100012358(v1 - 32) = 0LL;
        }

        uint64_t v3 = *(void *)(this + 8);
        this += 8LL;
        *(_DWORD *)(this + 36) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }

  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 9) = 0;
  if (v5) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_100052958( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        unsigned int v9 = TagFallback >> 3;
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_21;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        char v12 = *(void **)(a1 + 16);
        if (!v12)
        {
          char v12 = operator new(0x28uLL);
          sub_100051F84(v12);
          *(void *)(a1 + 16) = v12;
        }

        int v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v34)) {
            return 0LL;
          }
        }

        else
        {
          v34[0] = *v13;
          *((void *)this + 1) = v13 + 1;
        }

        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0LL;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        uint64_t v22 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v22 < *((void *)this + 2) && *v22 == 17)
        {
          *((void *)this + 1) = v22 + 1;
          goto LABEL_33;
        }
      }

      if (v9 != 2) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 1) {
        goto LABEL_21;
      }
LABEL_33:
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v34) & 1) == 0) {
        return 0LL;
      }
      *(void *)(a1 + 24) = *(void *)v34;
      int v11 = *(_DWORD *)(a1 + 44) | 2;
      *(_DWORD *)(a1 + 44) = v11;
      unint64_t v23 = (_BYTE *)*((void *)this + 1);
      if ((unint64_t)v23 < *((void *)this + 2) && *v23 == 26)
      {
        *((void *)this + 1) = v23 + 1;
LABEL_37:
        *(_DWORD *)(a1 + 44) = v11 | 4;
        int v24 = *(void **)(a1 + 32);
        if (!v24)
        {
          int v24 = operator new(0x30uLL);
          sub_10004B148((uint64_t)v24);
          *(void *)(a1 + sub_100012358(v1 - 32) = v24;
        }

        uint64_t v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v34)) {
            return 0LL;
          }
        }

        else
        {
          v34[0] = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0LL;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v31 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v31, 1);
        int v32 = v31 - 1;
        if (v32 < 0 == v20) {
          *((_DWORD *)this + 14) = v32;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }

    if (v9 == 3)
    {
      int v10 = TagFallback & 7;
      if (v10 == 2)
      {
        int v11 = *(_DWORD *)(a1 + 44);
        goto LABEL_37;
      }
    }

    else
    {
      int v10 = TagFallback & 7;
    }

void sub_100052C50(_Unwind_Exception *a1)
{
}

uint64_t sub_100052C68( uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(this + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1008000F8 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 24),  a3);
  if ((*(_DWORD *)(v5 + 44) & 4) == 0) {
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 32);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1008000F8 + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v8,  a2,  a4);
LABEL_12:
  int v11 = *(void **)(v5 + 8);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v9 = v11;
  if (v11)
  {
    if (*v9 != v9[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
    }
  }

  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100052D24( wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 11);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_11:
    uint64_t v10 = *((void *)this + 3);
    *(_BYTE *)uint64_t v3 = 17;
    *(void *)((char *)v3 + 1) = v10;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    if ((*((_DWORD *)this + 11) & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }

  uint64_t v6 = *((void *)this + 2);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1008000F8 + 16);
  }
  *(_BYTE *)a2 = 10;
  unsigned int v7 = (_DWORD)a2 + 1;
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 32);
  if (v8 > 0x7F)
  {
    uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v8;
    uint64_t v9 = (uint64_t)v3 + 2;
  }

  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005234C(v6, v9, a3);
  int v5 = *((_DWORD *)this + 11);
  if ((v5 & 2) != 0) {
    goto LABEL_11;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    goto LABEL_18;
  }
LABEL_12:
  uint64_t v11 = *((void *)this + 4);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1008000F8 + 32);
  }
  *(_BYTE *)uint64_t v3 = 26;
  char v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v11 + 40);
  if (v12 > 0x7F)
  {
    uint64_t v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v12,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v12;
    uint64_t v13 = (uint64_t)v3 + 2;
  }

  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10004B5BC(v11, v13, a3);
LABEL_18:
  int v16 = (void *)*((void *)this + 1);
  int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v15,  v3,  a3);
  }
}

uint64_t sub_100052E78(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 44);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 44) & 1) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1008000F8 + 16);
      }
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100052414(v6, a2);
      int v8 = (int)v7;
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 44);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v10 = *(void *)(a1 + 32);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_1008000F8 + 32);
      }
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10004B6E4(v10, a2);
      int v12 = (int)v11;
      else {
        int v13 = 1;
      }
      uint64_t v5 = (v5 + v12 + v13 + 1);
    }
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  int v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_100052F70( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  4636LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_100052660((uint64_t)a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_100053018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100053030(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_100053078()
{
  return 1LL;
}

uint64_t sub_100053080()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F5800;
}

void sub_1000530F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10005310C(uint64_t a1)
{
  *(void *)a1 = off_1007A3DC0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + sub_100012358(v1 - 32) = 0u;
  *(void *)(a1 + 72) = 0xFFFFFFFFLL;
  *(_DWORD *)(a1 + 80) = 0;
  *(void *)(a1 + 64) = 0LL;
  return a1;
}

void sub_100053158(_Unwind_Exception *a1)
{
}

uint64_t sub_10005316C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v22,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  5150LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v22,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v21, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }

  LOBYTE(v5) = *(_BYTE *)(a2 + 80);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 80) & 1) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 1u;
      uint64_t v6 = *(void **)(a1 + 16);
      if (!v6)
      {
        uint64_t v6 = operator new(0x30uLL);
        sub_10004B148((uint64_t)v6);
        *(void *)(a1 + 16) = v6;
      }

      uint64_t v7 = *(void *)(a2 + 16);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_100800100 + 16);
      }
      sub_10004B194((uint64_t)v6, v7);
      int v5 = *(_DWORD *)(a2 + 80);
    }

    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 2u;
      char v8 = *(_DWORD **)(a1 + 24);
      if (!v8)
      {
        char v8 = operator new(0x30uLL);
        sub_10004D194((uint64_t)v8);
        *(void *)(a1 + 24) = v8;
      }

      uint64_t v9 = *(void *)(a2 + 24);
      if (!v9) {
        uint64_t v9 = *(void *)(qword_100800100 + 24);
      }
      sub_10004D1E4(v8, v9);
      int v5 = *(_DWORD *)(a2 + 80);
    }

    if ((v5 & 4) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 4u;
      uint64_t v10 = *(_DWORD **)(a1 + 32);
      if (!v10)
      {
        uint64_t v10 = operator new(0x30uLL);
        sub_10004D194((uint64_t)v10);
        *(void *)(a1 + sub_100012358(v1 - 32) = v10;
      }

      uint64_t v11 = *(void *)(a2 + 32);
      if (!v11) {
        uint64_t v11 = *(void *)(qword_100800100 + 32);
      }
      sub_10004D1E4(v10, v11);
      int v5 = *(_DWORD *)(a2 + 80);
    }

    if ((v5 & 8) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 8u;
      int v12 = *(void **)(a1 + 40);
      if (!v12)
      {
        int v12 = operator new(0x28uLL);
        sub_10004C13C(v12);
        *(void *)(a1 + 40) = v12;
      }

      uint64_t v13 = *(void *)(a2 + 40);
      if (!v13) {
        uint64_t v13 = *(void *)(qword_100800100 + 40);
      }
      sub_10004C188((uint64_t)v12, v13);
      int v5 = *(_DWORD *)(a2 + 80);
    }

    if ((v5 & 0x10) != 0)
    {
      uint64_t v14 = *(void *)(a2 + 48);
      *(_DWORD *)(a1 + 80) |= 0x10u;
      *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v14;
      int v5 = *(_DWORD *)(a2 + 80);
    }

    if ((v5 & 0x20) != 0)
    {
      int v15 = *(_DWORD *)(a2 + 72);
      *(_DWORD *)(a1 + 80) |= 0x20u;
      *(_DWORD *)(a1 + 72) = v15;
      int v5 = *(_DWORD *)(a2 + 80);
    }

    if ((v5 & 0x40) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 0x40u;
      int v16 = *(void **)(a1 + 56);
      if (!v16)
      {
        int v16 = operator new(0x30uLL);
        sub_100052614((uint64_t)v16);
        *(void *)(a1 + 56) = v16;
      }

      uint64_t v17 = *(void *)(a2 + 56);
      if (!v17) {
        uint64_t v17 = *(void *)(qword_100800100 + 56);
      }
      sub_100052660((uint64_t)v16, v17);
      int v5 = *(_DWORD *)(a2 + 80);
    }

    if ((v5 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 0x80u;
      int v18 = *(void **)(a1 + 64);
      if (!v18)
      {
        int v18 = operator new(0x20uLL);
        sub_1000550AC(v18);
        *(void *)(a1 + 64) = v18;
      }

      uint64_t v19 = *(void *)(a2 + 64);
      if (!v19) {
        uint64_t v19 = *(void *)(qword_100800100 + 64);
      }
      sub_1000545B8((uint64_t)v18, v19);
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100053400( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_10005343C(void *a1)
{
  *a1 = off_1007A3DC0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100053478(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void *sub_100053478(void *result)
{
  if ((void *)qword_100800100 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t v4 = v1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t v5 = v1[5];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
    uint64_t v6 = v1[7];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    uint64_t result = (void *)v1[8];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100053528(void *a1)
{
}

uint64_t sub_10005353C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 76) = a2;
  return result;
}

void *sub_100053544()
{
  uint64_t v0 = operator new(0x58uLL);
  sub_10005310C((uint64_t)v0);
  return v0;
}

void sub_100053570(_Unwind_Exception *a1)
{
}

uint64_t sub_100053584(uint64_t this)
{
  uint64_t v1 = this;
  if (*(_BYTE *)(this + 80))
  {
    if ((*(_BYTE *)(this + 80) & 1) != 0)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(_BYTE *)(this + 44))
        {
          *(void *)(this + 16) = 0LL;
          *(void *)(this + 24) = 0LL;
          *(void *)(this + sub_100012358(v1 - 32) = 0LL;
        }

        uint64_t v2 = *(void *)(this + 8);
        this += 8LL;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }

    int v3 = *(_DWORD *)(v1 + 80);
    if ((v3 & 2) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        this = sub_10004D3F4(this);
        int v3 = *(_DWORD *)(v1 + 80);
      }
    }

    if ((v3 & 4) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = sub_10004D3F4(this);
        int v3 = *(_DWORD *)(v1 + 80);
      }
    }

    if ((v3 & 8) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        uint64_t v4 = *(void *)(this + 8);
        this += 8LL;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 2std::iostream::~basic_iostream(v2, v3 + 8) = 0;
        if (v4) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }

    *(void *)(v1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = 0LL;
    *(_DWORD *)(v1 + 72) = -1;
    int v5 = *(_DWORD *)(v1 + 80);
    if ((v5 & 0x40) != 0)
    {
      this = *(void *)(v1 + 56);
      if (this)
      {
        this = sub_1000528BC(this);
        int v5 = *(_DWORD *)(v1 + 80);
      }
    }

    if ((v5 & 0x80) != 0)
    {
      this = *(void *)(v1 + 64);
      if (this) {
        this = sub_100053670(this);
      }
    }
  }

  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v6 + 1std::iostream::~basic_iostream(v2, v3 + 8) = 0;
  if (v7) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  }
  return this;
}

uint64_t sub_100053670(uint64_t this)
{
  uint64_t v1 = this;
  if ((*(_BYTE *)(this + 28) & 1) != 0)
  {
    this = *(void *)(this + 16);
    if (this) {
      this = sub_1000549DC(this);
    }
  }

  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v2 + 5) = 0;
  if (v3) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  }
  return this;
}

uint64_t sub_1000536BC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 < *((void *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_7;
    }

    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 80) |= 1u;
        uint64_t v10 = *(void **)(a1 + 16);
        if (!v10)
        {
          uint64_t v10 = operator new(0x30uLL);
          sub_10004B148((uint64_t)v10);
          *(void *)(a1 + 16) = v10;
        }

        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v76)) {
            return 0LL;
          }
        }

        else
        {
          v76[0] = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0LL;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        uint64_t v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
        goto LABEL_40;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_28;
        }
LABEL_40:
        *(_DWORD *)(a1 + 80) |= 2u;
        unint64_t v23 = *(int **)(a1 + 24);
        if (!v23)
        {
          unint64_t v23 = (int *)operator new(0x30uLL);
          sub_10004D194((uint64_t)v23);
          *(void *)(a1 + 24) = v23;
        }

        int v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v76)) {
            return 0LL;
          }
        }

        else
        {
          v76[0] = *v24;
          *((void *)this + 1) = v24 + 1;
        }

        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0LL;
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        int v30 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v20) {
          *((_DWORD *)this + 14) = v31;
        }
        int v32 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v32 + 1;
LABEL_54:
        *(_DWORD *)(a1 + 80) |= 4u;
        unint64_t v33 = *(int **)(a1 + 32);
        if (!v33)
        {
          unint64_t v33 = (int *)operator new(0x30uLL);
          sub_10004D194((uint64_t)v33);
          *(void *)(a1 + sub_100012358(v1 - 32) = v33;
        }

        int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v76)) {
            return 0LL;
          }
        }

        else
        {
          v76[0] = *v34;
          *((void *)this + 1) = v34 + 1;
        }

        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0LL;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v40 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v20) {
          *((_DWORD *)this + 14) = v41;
        }
        int v42 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v42 + 1;
LABEL_68:
        *(_DWORD *)(a1 + 80) |= 8u;
        uint64_t v43 = *(void **)(a1 + 40);
        if (!v43)
        {
          uint64_t v43 = operator new(0x28uLL);
          sub_10004C13C(v43);
          *(void *)(a1 + 40) = v43;
        }

        char v44 = (char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v76)) {
            return 0LL;
          }
        }

        else
        {
          v76[0] = *v44;
          *((void *)this + 1) = v44 + 1;
        }

        int v45 = *((_DWORD *)this + 14);
        int v46 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v45 + 1;
        if (v45 >= v46) {
          return 0LL;
        }
        int v47 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v47);
        int v50 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v50, 1);
        int v51 = v50 - 1;
        if (v51 < 0 == v20) {
          *((_DWORD *)this + 14) = v51;
        }
        uint64_t v52 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v52 + 1;
LABEL_82:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v76) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = *(void *)v76;
        *(_DWORD *)(a1 + 80) |= 0x10u;
        uint64_t v53 = (_BYTE *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        uint64_t v13 = v53 + 1;
        *((void *)this + 1) = v13;
LABEL_86:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!(_DWORD)result) {
            return result;
          }
          signed int v54 = v76[0];
        }

        else
        {
          signed int v54 = *v13;
          *((void *)this + 1) = v13 + 1;
        }

        if ((v54 + 1) > 3)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 6, v54);
        }

        else
        {
          *(_DWORD *)(a1 + 80) |= 0x20u;
          *(_DWORD *)(a1 + 72) = v54;
        }

        uint64_t v56 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v56 + 1;
LABEL_97:
        *(_DWORD *)(a1 + 80) |= 0x40u;
        uint64_t v57 = *(void **)(a1 + 56);
        if (!v57)
        {
          uint64_t v57 = operator new(0x30uLL);
          sub_100052614((uint64_t)v57);
          *(void *)(a1 + 56) = v57;
        }

        uint64_t v58 = (char *)*((void *)this + 1);
        if ((unint64_t)v58 >= *((void *)this + 2) || *v58 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v76)) {
            return 0LL;
          }
        }

        else
        {
          v76[0] = *v58;
          *((void *)this + 1) = v58 + 1;
        }

        int v59 = *((_DWORD *)this + 14);
        int v60 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v59 + 1;
        if (v59 >= v60) {
          return 0LL;
        }
        int v61 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v61);
        int v64 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v64, 1);
        int v65 = v64 - 1;
        if (v65 < 0 == v20) {
          *((_DWORD *)this + 14) = v65;
        }
        int v66 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v66 + 1;
LABEL_111:
        *(_DWORD *)(a1 + 80) |= 0x80u;
        int v67 = *(void **)(a1 + 64);
        if (!v67)
        {
          int v67 = operator new(0x20uLL);
          sub_1000550AC(v67);
          *(void *)(a1 + 64) = v67;
        }

        int64_t v68 = (char *)*((void *)this + 1);
        if ((unint64_t)v68 >= *((void *)this + 2) || *v68 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v76)) {
            return 0LL;
          }
        }

        else
        {
          v76[0] = *v68;
          *((void *)this + 1) = v68 + 1;
        }

        int v69 = *((_DWORD *)this + 14);
        int v70 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v69 + 1;
        if (v69 >= v70) {
          return 0LL;
        }
        int v71 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v71);
        int v74 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v74, 1);
        int v75 = v74 - 1;
        if (v75 < 0 == v20) {
          *((_DWORD *)this + 14) = v75;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }

        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_54;
        }
        goto LABEL_28;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_68;
        }
        goto LABEL_28;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_82;
        }
        goto LABEL_28;
      case 6u:
        int v9 = TagFallback & 7;
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_86;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_97;
        }
        goto LABEL_28;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_28;
        }
        goto LABEL_111;
      default:
        int v9 = TagFallback & 7;
LABEL_28:
        if (v9 == 4) {
          return 1LL;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField( this,  TagFallback,  v6,  a4) & 1) == 0) {
          return 0LL;
        }
        continue;
    }
  }

void sub_100053DF4(_Unwind_Exception *a1)
{
}

uint64_t sub_100053E1C( uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 80);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(this + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_100800100 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_100800100 + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100053FA4( wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 20);
  if ((v5 & 1) != 0)
  {
    uint64_t v6 = *((void *)this + 2);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_100800100 + 16);
    }
    *(_BYTE *)a2 = 10;
    unsigned int v7 = (_DWORD)a2 + 1;
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 40);
    if (v8 > 0x7F)
    {
      uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v8;
      uint64_t v9 = (uint64_t)v3 + 2;
    }

    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10004B5BC(v6, v9, a3);
    int v5 = *((_DWORD *)this + 20);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v10 = (unsigned int *)*((void *)this + 3);
  if (!v10) {
    uint64_t v10 = *(unsigned int **)(qword_100800100 + 24);
  }
  *(_BYTE *)uint64_t v3 = 18;
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[10];
  if (v11 > 0x7F)
  {
    uint64_t v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v11,  (int)v3 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v3 + 1) = (_BYTE)v11;
    uint64_t v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  }

  uint64_t v3 = sub_10004D6E0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v12, a3);
  int v5 = *((_DWORD *)this + 20);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }

LABEL_32:
  uint64_t v19 = *((void *)this + 6);
  *(_BYTE *)uint64_t v3 = 41;
  *(void *)((char *)v3 + 1) = v19;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  if ((*((_DWORD *)this + 20) & 0x20) == 0) {
    goto LABEL_39;
  }
LABEL_33:
  BOOL v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 18);
  *(_BYTE *)uint64_t v3 = 48;
  unint64_t v21 = (unint64_t)v3 + 1;
  if ((v20 & 0x80000000) != 0)
  {
    uint64_t v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v20,  v21,  a3);
  }

  else
  {
    if (v20 <= 0x7F)
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v20;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      goto LABEL_39;
    }

    uint64_t v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v20,  v21,  a3);
  }

  uint64_t v3 = v22;
LABEL_39:
  int v23 = *((_DWORD *)this + 20);
  if ((v23 & 0x40) != 0)
  {
    int v24 = (unsigned int *)*((void *)this + 7);
    if (!v24) {
      int v24 = *(unsigned int **)(qword_100800100 + 56);
    }
    *(_BYTE *)uint64_t v3 = 58;
    int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24[10];
    if (v25 > 0x7F)
    {
      int v26 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v25,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v25;
      int v26 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }

    uint64_t v3 = sub_100052D24((wireless_diagnostics::google::protobuf::internal::WireFormat *)v24, v26, a3);
    int v23 = *((_DWORD *)this + 20);
  }

  if ((v23 & 0x80) != 0)
  {
    int v27 = (unsigned int *)*((void *)this + 8);
    if (!v27) {
      int v27 = *(unsigned int **)(qword_100800100 + 64);
    }
    *(_BYTE *)uint64_t v3 = 66;
    uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v27[6];
    if (v28 > 0x7F)
    {
      uint64_t v29 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v28,  (int)v3 + 1,  a3);
    }

    else
    {
      *((_BYTE *)v3 + 1) = (_BYTE)v28;
      uint64_t v29 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    }

    uint64_t v3 = sub_1000553C8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v27, v29, a3);
  }

  int v32 = (void *)*((void *)this + 1);
  int v31 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v30 = v32;
  if (!v32 || *v30 == v30[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v31,  v3,  a3);
  }
}

  int v14 = *(void *)(v5 + 80);
  if (!v14) {
    int v14 = *(void *)(qword_1008001D0 + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  v14,  a2,  a4);
  if ((*(_DWORD *)(v5 + 96) & 0x200) != 0) {
LABEL_11:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(unsigned __int8 *)(v5 + 88),  (BOOL)a2,  a4);
LABEL_12:
  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

  uint64_t v22 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 96) |= 0x10u;
  *(_DWORD *)(a1 + 40) = v22;
  uint64_t v13 = *(_DWORD *)(a2 + 96);
  if ((v13 & 0x20) != 0) {
    goto LABEL_33;
  }
LABEL_18:
  if ((v13 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_34:
  int v24 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 96) |= 0x40u;
  *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v24;
  uint64_t v13 = *(_DWORD *)(a2 + 96);
  if ((v13 & 0x80) != 0)
  {
LABEL_20:
    int v14 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 96) |= 0x80u;
    *(void *)(a1 + 56) = v14;
    uint64_t v13 = *(_DWORD *)(a2 + 96);
  }

  if ((v13 & 0xFF0000) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v13 & 0x10000) != 0)
  {
    uint64_t v17 = *(_DWORD *)(a2 + 120);
    if ((sub_1000756A8(v17) & 1) == 0) {
      sub_10038C134();
    }
    *(_DWORD *)(a1 + 160) |= 0x10000u;
    *(_DWORD *)(a1 + 120) = v17;
    uint64_t v13 = *(_DWORD *)(a2 + 160);
  }

  if ((v13 & 0x20000) == 0)
  {
    if ((v13 & 0x40000) == 0) {
      goto LABEL_38;
    }
LABEL_68:
    int v36 = *(_DWORD *)(a2 + 124);
    *(_DWORD *)(a1 + 160) |= 0x40000u;
    *(_DWORD *)(a1 + 124) = v36;
    if ((*(_DWORD *)(a2 + 160) & 0x80000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_39;
  }

  int v35 = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 160) |= 0x20000u;
  *(void *)(a1 + 112) = v35;
  uint64_t v13 = *(_DWORD *)(a2 + 160);
  if ((v13 & 0x40000) != 0) {
    goto LABEL_68;
  }
LABEL_38:
  if ((v13 & 0x80000) != 0)
  {
LABEL_39:
    uint64_t v18 = *(_DWORD *)(a2 + 152);
    *(_DWORD *)(a1 + 160) |= 0x80000u;
    *(_DWORD *)(a1 + 152) = v18;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

  *(_DWORD *)(a1 + 100) |= 0x10u;
  uint64_t v22 = *(_DWORD **)(a1 + 40);
  if (!v22)
  {
    uint64_t v22 = operator new(0x60uLL);
    sub_100090CBC((uint64_t)v22);
    *(void *)(a1 + 40) = v22;
  }

  int v23 = *(void *)(a2 + 40);
  if (!v23) {
    int v23 = *(void *)(qword_1008002C0 + 40);
  }
  sub_100090D1C(v22, v23);
  uint64_t v13 = *(_DWORD *)(a2 + 100);
  if ((v13 & 0x20) == 0)
  {
LABEL_21:
    if ((v13 & 0x40) == 0) {
      goto LABEL_22;
    }
LABEL_38:
    int v25 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 100) |= 0x40u;
    *(void *)(a1 + 56) = v25;
    if ((*(_DWORD *)(a2 + 100) & 0x80) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_23;
  }

  uint64_t v18 = v4 + 9;
  if ((v3 & 0x40) == 0) {
    uint64_t v18 = v4;
  }
  if ((v3 & 0x80) != 0) {
    int v5 = v18 + 9;
  }
  else {
    int v5 = v18;
  }
  if ((v3 & 0x200) != 0)
  {
LABEL_38:
    uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
    if (v19 >= 0x80) {
    else
    }
      BOOL v20 = 2;
    v5 += v20;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 36),  (int)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(unsigned __int8 *)(v5 + 40),  (BOOL)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x80) == 0)
  {
LABEL_8:
    if ((v6 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(_DWORD *)(v5 + 52),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }

    uint64_t v22 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 124) |= 0x20u;
    *(_DWORD *)(a1 + 56) = v22;
    uint64_t v13 = *(_DWORD *)(a2 + 124);
    if ((v13 & 0x40) == 0)
    {
LABEL_19:
      if ((v13 & 0x80) == 0) {
        goto LABEL_37;
      }
      goto LABEL_34;
    }

  BOOL v20 = *((_BYTE *)this + 49);
  *(_BYTE *)uint64_t v3 = 56;
  *((_BYTE *)v3 + 1) = v20;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  uint64_t v8 = *((_DWORD *)this + 15);
  if ((v8 & 0x80) == 0)
  {
LABEL_15:
    if ((v8 & 0x100) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }

  if ((v3 & 0x100) != 0) {
    v5 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 80),  (unint64_t)a2)
  }
        + 1;
  uint64_t v16 = *(void **)(a1 + 8);
  uint64_t v17 = (9 * *(_DWORD *)(a1 + 40) + v5);
  if (v16 && *v16 != v16[1]) {
    uint64_t v17 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
        + v17;
  *(_DWORD *)(a1 + 92) = v17;
  return v17;
}

  int v15 = *(void *)(v5 + 80);
  if (!v15) {
    int v15 = *(void *)(qword_100800558 + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  v15,  a2,  a4);
  unsigned int v7 = *(_DWORD *)(v5 + 120);
  if ((v7 & 0x80) == 0)
  {
LABEL_12:
    if ((v7 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }

  unint64_t v21 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 84) |= 0x10u;
  *(_DWORD *)(a1 + 2std::iostream::~basic_iostream(v2, v3 + 8) = v21;
  uint64_t v13 = *(_DWORD *)(a2 + 84);
  if ((v13 & 0x20) != 0) {
    goto LABEL_33;
  }
LABEL_18:
  if ((v13 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_34:
  int v23 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 84) |= 0x40u;
  *(_DWORD *)(a1 + 40) = v23;
  uint64_t v13 = *(_DWORD *)(a2 + 84);
  if ((v13 & 0x80) != 0)
  {
LABEL_20:
    int v14 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 84) |= 0x80u;
    *(_DWORD *)(a1 + 44) = v14;
    uint64_t v13 = *(_DWORD *)(a2 + 84);
  }

  int v23 = *((_DWORD *)this + 12);
  *(_BYTE *)uint64_t v3 = 77;
  *(_DWORD *)((char *)v3 + 1) = v23;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  int v5 = *((_DWORD *)this + 21);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  *(_DWORD *)(v5 + 52),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }

  uint64_t v12 = *(_DWORD *)(a2 + 100);
  if (v12 >= 4) {
    sub_10038C5BC();
  }
  *(_DWORD *)(a1 + 140) |= 0x800u;
  *(_DWORD *)(a1 + 100) = v12;
  int v5 = *(_DWORD *)(a2 + 140);
  if ((v5 & 0x1000) == 0)
  {
LABEL_24:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_35;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  (int)a2,  *(double *)(v5 + 72),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_34;
  }

  uint64_t v13 = *(void *)(v5 + 80);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_100800658 + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  v13,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }

  uint64_t v12 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 124) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v12;
  int v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x20) != 0) {
    goto LABEL_33;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_34:
  int v14 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 124) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v14;
  int v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v6 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 124) |= 0x80u;
    *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v6;
    int v5 = *(_DWORD *)(a2 + 124);
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(void *)(v5 + 48),  (unint64_t)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_34;
  }

  uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 10);
  *(_BYTE *)a2 = 96;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v16, a2 + 1, a3);
  uint64_t v4 = *((_DWORD *)this + 31);
  if ((v4 & 0x1000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }

  uint64_t v13 = *(void **)(v5 + 8);
  uint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v11 = v13;
  if (v13)
  {
    if (*v11 != v11[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v12, a2, a3);
    }
  }

  return this;
}

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  (int)a2,  *(double *)(v5 + 104),  a3);
  uint64_t v8 = *(_DWORD *)(v5 + 148);
  if ((v8 & 0x800) == 0)
  {
LABEL_17:
    if ((v8 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_34;
  }

  BOOL v20 = *((void *)this + 10);
  *(_BYTE *)uint64_t v3 = 65;
  *(void *)((char *)v3 + 1) = v20;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  uint64_t v10 = *((_DWORD *)this + 37);
  if ((v10 & 0x100) == 0)
  {
LABEL_17:
    if ((v10 & 0x200) == 0) {
      goto LABEL_18;
    }
    goto LABEL_34;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(double *)(v5 + 64),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }

    sub_1001AA43C(a1);
    return;
  }

  if (a2 == 1)
  {
    if (os_log_type_enabled((os_log_t)qword_1007F9210, OS_LOG_TYPE_DEBUG)) {
      sub_1003975B8();
    }
    sub_1000065CC(&__p, off_1007F4738[0]);
    sub_1001AC868(a1, &__p);
    sub_10022F158(a1 + 936, 1LL);
    uint64_t v8 = 0;
    uint64_t v10 = &v8;
    uint64_t v4 = sub_1001ADE4C(a1 + 256, &v8, (uint64_t)&unk_1004242F8, &v10);
    if (v4[55] < 0)
    {
      **((_BYTE **)v4 + 4) = 0;
      *((void *)v4 + 5) = 0LL;
    }

    else
    {
      v4[32] = 0;
      v4[55] = 0;
    }

    v4[24] = 0;
    *((void *)v4 + 7) = 0LL;
    uint64_t v8 = 1;
    uint64_t v10 = &v8;
    unsigned int v7 = sub_1001ADE4C(a1 + 256, &v8, (uint64_t)&unk_1004242F8, &v10);
    if (v7[55] < 0)
    {
      **((_BYTE **)v7 + 4) = 0;
      *((void *)v7 + 5) = 0LL;
    }

    else
    {
      v7[32] = 0;
      v7[55] = 0;
    }

    v7[24] = 0;
    *((void *)v7 + 7) = 0LL;
    goto LABEL_32;
  }

  if (os_log_type_enabled((os_log_t)qword_1007F9210, OS_LOG_TYPE_ERROR)) {
    sub_10039758C();
  }
}

    v15.__d_.__rep_ = v14 + v12.__d_.__rep_;
    goto LABEL_33;
  }

  uint64_t v9 = (os_log_s *)(id)qword_1008000A0;
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
  {
    sub_1002BEFAC(v8, v17);
    sub_1003A3D8C();
  }

LABEL_9:
  if (*v4)
  {
    uint64_t v10 = *(void **)(a1 + 1000);
    if (v10)
    {
      *(void *)(a1 + 100std::iostream::~basic_iostream(v2, v3 + 8) = v10;
      operator delete(v10);
    }

    wireless_diagnostics::google::protobuf::UnknownFieldSet *v4 = 0;
  }

  a2->n128_u8[0] = 0;
  uint64_t v4 = &a2[3].n128_u8[8];
LABEL_14:
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v4 = 0;
LABEL_15:
  if (__lk.__owns_) {
    std::mutex::unlock(__lk.__m_);
  }
}

        v18 += 12;
      }

      while (v18 != v19);
    }
  }

  *(double *)(a1 + 3936) = v3;
  *(_BYTE *)(a1 + 3944) = 1;
LABEL_34:
  sub_1002FD130(a1, (uint64_t)v102, v2, v95, v4, v96);
  uint64_t v22 = v104;
  int v23 = v2 - v103;
  unint64_t v101 = v2 - v103;
  if (v2 >= 10.0)
  {
    if (v2 >= 20.0)
    {
      if (v2 >= 30.0)
      {
        if (v2 >= 40.0)
        {
          if (v2 >= 50.0)
          {
            if (v2 >= 60.0) {
              int v24 = 3.02;
            }
            else {
              int v24 = 2.37;
            }
          }

          else
          {
            int v24 = 1.8;
          }
        }

        else
        {
          int v24 = 1.56;
        }
      }

      else
      {
        int v24 = 0.89;
      }
    }

    else
    {
      int v24 = 0.69;
    }
  }

  else
  {
    int v24 = 0.433;
  }

  int v31 = *(double *)(a1 + 424);
  int v32 = *(double *)(a1 + 432);
  sub_1002FE7B8((void *)(a1 + 4304), &v101);
  unint64_t v33 = *(void *)(a1 + 4344);
  if (v33 >= 0xB)
  {
    int v34 = *(void *)(a1 + 4336);
    *(void *)(a1 + 4344) = v33 - 1;
    *(void *)(a1 + 4336) = v34 + 1;
    sub_100301000(a1 + 4304, 1);
  }

  int v35 = (v23 - v24) / sqrt(v22 * v31 + v32 * v32);
  if (*(_BYTE *)(a1 + 3504))
  {
    int v36 = *(double *)(a1 + 368);
    if (v35 < v36) {
      *(_BYTE *)(a1 + 3504) = 0;
    }
    if (*(_BYTE *)(a1 + 4352) || *(_DWORD *)(a1 + 3616) == 2) {
      int v37 = (double *)(a1 + 456);
    }
    else {
      int v37 = (double *)(a1 + 376);
    }
    if (v3 - *(double *)(a1 + 3528) <= *v37)
    {
      if (v35 >= v36) {
        goto LABEL_75;
      }
      goto LABEL_74;
    }

    uint64_t v39 = (os_log_s *)qword_1008000A0;
    if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
    {
LABEL_66:
      sub_1002FA034(a1);
      return;
    }

    *(_WORD *)pthread_attr_t buf = 0;
    int v40 = "#sa_algo_particlefilter,PF reset due to nlos timeout";
LABEL_65:
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, v40, buf, 2u);
    goto LABEL_66;
  }

  if (!*(_BYTE *)(a1 + 3520))
  {
LABEL_74:
    sub_1002FA31C(a1, *(double *)(a2 + 16), *(double *)(a2 + 32), *(double *)(a2 + 8));
    goto LABEL_75;
  }

  uint64_t v38 = *(double *)(a1 + 368);
  if (v35 <= v38)
  {
    if (v35 >= -v38)
    {
      if (*(_BYTE *)(a1 + 392)) {
        *(_BYTE *)(a1 + 392) = 0;
      }
    }

    else if (*(_BYTE *)(a1 + 392))
    {
      *(_BYTE *)(a1 + 392) = 0;
      uint64_t v39 = (os_log_s *)qword_1008000A0;
      if (!os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_66;
      }
      *(_WORD *)pthread_attr_t buf = 0;
      int v40 = "#sa_algo_particlefilter,PF reset due to transition from los to nlos detected";
      goto LABEL_65;
    }

    goto LABEL_74;
  }

  *(_BYTE *)(a1 + 3504) = 1;
  *(double *)(a1 + 352std::iostream::~basic_iostream(v2, v3 + 8) = v3;
  *(_BYTE *)(a1 + 392) = 0;
LABEL_75:
  *(double *)(a1 + 3512) = v2;
  *(_BYTE *)(a1 + 3520) = 1;
  int v41 = *(unsigned __int8 *)(a1 + 4296);
  *(_OWORD *)(a1 + 4216) = *(_OWORD *)a2;
  int v42 = *(_OWORD *)(a2 + 64);
  char v44 = *(_OWORD *)(a2 + 16);
  uint64_t v43 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 4264) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 4280) = v42;
  *(_OWORD *)(a1 + 42sub_100012358(v1 - 32) = v44;
  *(_OWORD *)(a1 + 424std::iostream::~basic_iostream(v2, v3 + 8) = v43;
  if (!v41) {
    *(_BYTE *)(a1 + 4296) = 1;
  }
  if (*(_BYTE *)(a1 + 3544) && *(_BYTE *)(a1 + 3576) && *(_BYTE *)(a1 + 3560) && !*(_DWORD *)(a2 + 40))
  {
    int v45 = *(void *)(a1 + 112);
    *(void *)pthread_attr_t buf = 0LL;
    *(void *)&uint8_t buf[8] = v45;
    _BYTE buf[24] = 0;
    if (!*(_BYTE *)(a1 + 688)) {
      sub_100006080();
    }
    if (!*(_BYTE *)(a1 + 24)) {
      sub_100006080();
    }
    int v46 = v95 - *(double *)(a1 + 3536);
    uint64_t v93 = *(double *)(a2 + 8);
    uint64_t v94 = v96 - *(double *)(a1 + 3552);
    uint64_t v92 = *(double *)(a1 + 680);
    int v47 = *(double **)a1;
    uint64_t v48 = *(double **)(a1 + 8);
    if (*(double **)a1 != v48)
    {
      do
      {
        int v49 = sub_1003008C0((uint64_t)buf, a1 + 992, (double *)buf);
        int v50 = v3;
        int v51 = v2;
        uint64_t v52 = v4;
        uint64_t v53 = v47[9];
        signed int v54 = v46 * v53 - v46;
        int v55 = v94 * v53 - v94;
        uint64_t v56 = __sincos_stret(v49);
        *int v47 = *v47 + v56.__sinval * v55 - v56.__cosval * v54;
        v47[2] = v47[2] + -(v55 * v56.__cosval) - v56.__sinval * v54;
        if (*(_BYTE *)(a1 + 88) && *(_BYTE *)(a1 + 80))
        {
          uint64_t v57 = *(double **)(a1 + 56);
          uint64_t v58 = v47[4];
          v47[3] = *v57 + v47[3];
          v47[4] = v57[2] + v58;
        }

        v47 += 12;
        uint64_t v4 = v52;
        uint64_t v2 = v51;
        uint64_t v3 = v50;
      }

      while (v47 != v48);
    }

    *(double *)&uint64_t v118 = v46 / (v93 - v92);
    *((void *)&v118 + 1) = 0LL;
    *(double *)&uint64_t v119 = v94 / (v93 - v92);
    sub_1002F5F0C(__p, &v118, 3uLL);
    sub_1002FE83C(a1 + 56, (__n128 *)__p);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }

    *(_BYTE *)(a1 + 8std::iostream::~basic_iostream(v2, v3 + 8) = 0;
  }

  *(_OWORD *)std::string __p = 0u;
  uint64_t v99 = 0u;
  uint64_t v100 = 0LL;
  uint64_t v118 = 0u;
  uint64_t v119 = 0u;
  int v120 = 0LL;
  if (!*v8)
  {
    int v59 = xmmword_10042FF30;
    int v60 = vdupq_n_s64(0x408F400000000000uLL);
    int v61 = 0x408F400000000000LL;
    uint64_t v62 = v60;
    int v63 = xmmword_10042FF30;
LABEL_105:
    *(double *)(a1 + 680) = v3;
    *(_BYTE *)(a1 + 68std::iostream::~basic_iostream(v2, v3 + 8) = 1;
    int v77 = 384LL;
    if (!*(_BYTE *)(a1 + 3504)) {
      int v77 = 160LL;
    }
    uint64_t v78 = *(void *)(a1 + v77);
    uint64_t v79 = *(unsigned __int8 *)(a1 + 664);
    *(void *)(a1 + 520) = v100;
    uint64_t v80 = v99;
    *(_OWORD *)(a1 + 48std::iostream::~basic_iostream(v2, v3 + 8) = *(_OWORD *)__p;
    *(_OWORD *)(a1 + 504) = v80;
    *(int64x2_t *)(a1 + 52std::iostream::~basic_iostream(v2, v3 + 8) = v60;
    *(int64x2_t *)(a1 + 544) = v62;
    *(double *)(a1 + 560) = v2;
    *(double *)(a1 + 56std::iostream::~basic_iostream(v2, v3 + 8) = v3;
    *(void *)(a1 + 576) = v78;
    *(_OWORD *)(a1 + 584) = v59;
    *(_OWORD *)(a1 + 600) = v63;
    *(void *)(a1 + 616) = v61;
    int v81 = v119;
    *(_OWORD *)(a1 + 624) = v118;
    *(_OWORD *)(a1 + 640) = v81;
    *(void *)(a1 + 656) = v120;
    if (!v79) {
      *(_BYTE *)(a1 + 664) = 1;
    }
    int v82 = *(_OWORD *)(a1 + 816);
    *(_OWORD *)(a1 + 944) = *(_OWORD *)(a1 + 800);
    *(_OWORD *)(a1 + 960) = v82;
    *(_BYTE *)(a1 + 976) = *(_BYTE *)(a1 + 832);
    int v83 = *(_OWORD *)(a1 + 752);
    *(_OWORD *)(a1 + 880) = *(_OWORD *)(a1 + 736);
    *(_OWORD *)(a1 + 896) = v83;
    uint64_t v84 = *(_OWORD *)(a1 + 784);
    *(_OWORD *)(a1 + 912) = *(_OWORD *)(a1 + 768);
    *(_OWORD *)(a1 + 92std::iostream::~basic_iostream(v2, v3 + 8) = v84;
    uint64_t v85 = *(_OWORD *)(a1 + 720);
    *(_OWORD *)(a1 + 84std::iostream::~basic_iostream(v2, v3 + 8) = *(_OWORD *)(a1 + 704);
    *(_OWORD *)(a1 + 864) = v85;
    if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEBUG)) {
      sub_1003AAEA4();
    }
    *(void *)(a1 + 3536) = *(void *)(a2 + 16);
    *(_BYTE *)(a1 + 3544) = 1;
    *(void *)(a1 + 3552) = *(void *)(a2 + 32);
    *(_BYTE *)(a1 + 3560) = 1;
    return;
  }

  if (*(_BYTE *)(a1 + 3504))
  {
    if (!*(_BYTE *)(a1 + 664)) {
      sub_100006080();
    }
    if (!*(_BYTE *)(a1 + 3520)) {
      sub_100006080();
    }
    sub_1002FD130(a1, (uint64_t)buf, *(double *)(a1 + 3512), v95, v4, v96);
LABEL_104:
    *(_OWORD *)std::string __p = *(_OWORD *)buf;
    uint64_t v99 = *(_OWORD *)&buf[16];
    uint64_t v100 = *(void *)v109;
    int v60 = *(int64x2_t *)&v109[8];
    uint64_t v62 = *(int64x2_t *)&v109[24];
    int v59 = v111;
    int v63 = v112;
    int v61 = v113;
    uint64_t v118 = v114;
    uint64_t v119 = v115;
    int v120 = v116;
    goto LABEL_105;
  }

  int v64 = *(void *)(a1 + 4312);
  if (*(void *)(a1 + 4320) != v64)
  {
    int v65 = *(void *)(a1 + 4336);
    int v66 = (double **)(v64 + 8 * (v65 >> 9));
    int v67 = *v66;
    int64_t v68 = &(*v66)[v65 & 0x1FF];
    int v69 = *(void *)(a1 + 4344);
    int v70 = *(void *)(v64 + (((v69 + v65) >> 6) & 0x3FFFFFFFFFFFFF8LL)) + 8 * ((v69 + v65) & 0x1FF);
    if (v68 != (double *)v70)
    {
      int v71 = (double)v69;
      uint64_t v72 = 0.0;
      int v73 = 0.0;
      do
      {
        int v74 = *v68++;
        int v75 = v74;
        if ((char *)v68 - (char *)v67 == 4096)
        {
          int v76 = v66[1];
          ++v66;
          int v67 = v76;
          int64_t v68 = v76;
        }

        uint64_t v72 = v72 + v75 / v71;
        int v73 = v73 + v75 * v75 / v71;
      }

      while (v68 != (double *)v70);
    }
  }

  sub_1002FE898(a1, (uint64_t)buf, v2, v95, v96, v4);
  if (v117) {
    goto LABEL_104;
  }
  int v86 = *(_OWORD *)(a2 + 48);
  v97[2] = *(_OWORD *)(a2 + 32);
  v97[3] = v86;
  v97[4] = *(_OWORD *)(a2 + 64);
  int v87 = *(_OWORD *)(a2 + 16);
  v97[0] = *(_OWORD *)a2;
  v97[1] = v87;
  sub_1002FAEEC(a1, (double *)v97);
  *(double *)(a1 + 680) = v3;
  *(_BYTE *)(a1 + 68std::iostream::~basic_iostream(v2, v3 + 8) = 1;
  unsigned int v88 = 384LL;
  if (!*(_BYTE *)(a1 + 3504)) {
    unsigned int v88 = 160LL;
  }
  uint64_t v89 = *(void *)(a1 + v88);
  uint64_t v90 = *(unsigned __int8 *)(a1 + 664);
  *(void *)(a1 + 520) = 0LL;
  *(_OWORD *)(a1 + 48std::iostream::~basic_iostream(v2, v3 + 8) = 0u;
  *(_OWORD *)(a1 + 504) = 0u;
  uint64_t v91 = vdupq_n_s64(0x408F400000000000uLL);
  *(int64x2_t *)(a1 + 52std::iostream::~basic_iostream(v2, v3 + 8) = v91;
  *(int64x2_t *)(a1 + 544) = v91;
  *(void *)(a1 + 560) = 0LL;
  *(double *)(a1 + 56std::iostream::~basic_iostream(v2, v3 + 8) = v3;
  *(void *)(a1 + 576) = v89;
  *(void *)(a1 + 584) = 0x408F400000000000LL;
  *(_OWORD *)(a1 + 592) = xmmword_10042FF40;
  *(_OWORD *)(a1 + 60std::iostream::~basic_iostream(v2, v3 + 8) = xmmword_10042FF40;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  *(void *)(a1 + 656) = 0LL;
  if (!v90) {
    *(_BYTE *)(a1 + 664) = 1;
  }
}

uint64_t sub_100054294(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 80);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0LL;
    goto LABEL_58;
  }

  if ((*(_BYTE *)(a1 + 80) & 1) == 0)
  {
    unsigned int v4 = 0;
    if ((*(_BYTE *)(a1 + 80) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }

  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_100800100 + 16);
  }
  unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10004B6E4(v6, a2);
  int v8 = (int)v7;
  else {
    int v9 = 1;
  }
  unsigned int v4 = v8 + v9 + 1;
  int v3 = *(_DWORD *)(a1 + 80);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v10 = *(void *)(a1 + 24);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_100800100 + 24);
    }
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10004D798(v10, a2);
    int v12 = (int)v11;
    else {
      int v13 = 1;
    }
    v4 += v12 + v13 + 1;
    int v3 = *(_DWORD *)(a1 + 80);
  }

uint64_t sub_1000544F8( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  5138LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_10005316C((uint64_t)a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_1000545A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1000545B8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  5639LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if ((*(_BYTE *)(a2 + 28) & 1) != 0)
  {
    *(_DWORD *)(a1 + 28) |= 1u;
    uint64_t v5 = *(void **)(a1 + 16);
    if (!v5)
    {
      uint64_t v5 = operator new(0x38uLL);
      sub_100054788((uint64_t)v5);
      *(void *)(a1 + 16) = v5;
    }

    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_100800110 + 16);
    }
    sub_1000547DC((uint64_t)v5, v6);
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100054684( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

uint64_t sub_1000546AC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_1000546F4()
{
  return 1LL;
}

uint64_t sub_1000546FC()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F5810;
}

void sub_100054774(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100054788(uint64_t a1)
{
  *(void *)a1 = off_1007A3E70;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + sub_100012358(v1 - 32) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_1000547C8(_Unwind_Exception *a1)
{
}

uint64_t sub_1000547DC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v16,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  5424LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v16,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24),  *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 24) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 36);
      uint64_t v8 = *(int *)(a1 + 32);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24),  v7 + 1);
          int v7 = *(_DWORD *)(a1 + 36);
        }

        *(_DWORD *)(a1 + 36) = v7 + 1;
        uint64_t v10 = sub_10005C360();
        uint64_t v11 = *(void *)(a1 + 24);
        uint64_t v12 = *(int *)(a1 + 32);
        *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *(void *)(a1 + 24);
        *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v8 + 1;
        uint64_t v10 = *(void **)(v9 + 8 * v8);
      }

      sub_100051FD0((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 32));
  }

  if ((*(_BYTE *)(a2 + 52) & 1) != 0)
  {
    uint64_t v13 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(void *)(a1 + 16) = v13;
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100054928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100054940(uint64_t a1)
{
  *(void *)a1 = off_1007A3E70;
  sub_10005C420(a1 + 24);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100054980(uint64_t a1)
{
}

uint64_t sub_100054994(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4std::iostream::~basic_iostream(v2, v3 + 8) = a2;
  return result;
}

void *sub_10005499C()
{
  uint64_t v0 = operator new(0x38uLL);
  sub_100054788((uint64_t)v0);
  return v0;
}

void sub_1000549C8(_Unwind_Exception *a1)
{
}

uint64_t sub_1000549DC(uint64_t this)
{
  uint64_t v1 = this;
  if (*(_BYTE *)(this + 52)) {
    *(void *)(this + 16) = 0LL;
  }
  if (*(int *)(this + 32) >= 1)
  {
    uint64_t v2 = 0LL;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 24) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32LL))(v3);
      ++v2;
    }

    while (v2 < *(int *)(v1 + 32));
  }

  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 6) = 0;
  *((_DWORD *)v4 + 11) = 0;
  if (v5) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_100054A58( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unint64_t *)(a1 + 16);
  int v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  unsigned int v8 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
          *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v9 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v11 = TagFallback & 7;
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v12 >= v13 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v14 = (_BYTE *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }

        else
        {
          unint64_t *v6 = *v12;
          uint64_t v14 = v12 + 1;
          *((void *)this + 1) = v14;
        }

        *(_DWORD *)(a1 + 52) |= 1u;
      }

      int v11 = TagFallback & 7;
      if (v11 != 2) {
        goto LABEL_16;
      }
      while (1)
      {
        int v16 = *(_DWORD *)(a1 + 36);
        uint64_t v17 = *(int *)(a1 + 32);
        if ((int)v17 >= v16)
        {
          if (v16 == *(_DWORD *)(a1 + 40))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v16 + 1);
            int v16 = *(_DWORD *)(a1 + 36);
          }

          *(_DWORD *)(a1 + 36) = v16 + 1;
          uint64_t v19 = sub_10005C360();
          uint64_t v20 = *(void *)(a1 + 24);
          uint64_t v21 = *(int *)(a1 + 32);
          *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v21 + 1;
          *(void *)(v20 + 8 * v21) = v19;
        }

        else
        {
          uint64_t v18 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v17 + 1;
          uint64_t v19 = *(void **)(v18 + 8 * v17);
        }

        uint64_t v22 = (char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v32)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v32 = *v22;
          *((void *)this + 1) = v22 + 1;
        }

        int v23 = *((_DWORD *)this + 14);
        int v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0LL;
        }
        int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
        int v28 = *((_DWORD *)this + 14);
        BOOL v29 = __OFSUB__(v28, 1);
        int v30 = v28 - 1;
        if (v30 < 0 == v29) {
          *((_DWORD *)this + 14) = v30;
        }
        uint64_t v14 = (_BYTE *)*((void *)this + 1);
        int v31 = (_BYTE *)*((void *)this + 2);
        if (v14 >= v31 || *v14 != 18) {
          break;
        }
LABEL_23:
        *((void *)this + 1) = v14 + 1;
      }

      if (v14 == v31 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v11 = TagFallback & 7;
LABEL_16:
    if (v11 == 4) {
      return 1LL;
    }
  }

uint64_t sub_100054CDC( uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if ((*(_BYTE *)(this + 52) & 1) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(this + 16),  (unint64_t)a2,  a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v6 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(*(void *)(v5 + 24) + 8 * v6++),  a2,  a4);
    while (v6 < *(int *)(v5 + 32));
  }

  uint64_t v9 = *(void **)(v5 + 8);
  unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100054D7C( wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if ((*((_BYTE *)this + 52) & 1) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(_BYTE *)a2 = 8;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v5,  (unint64_t)a2 + 1,  a3);
  }

  if (*((int *)this + 8) >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      uint64_t v7 = *(void *)(*((void *)this + 3) + 8 * v6);
      *(_BYTE *)uint64_t v3 = 18;
      unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v7 + 32);
      if (v8 > 0x7F)
      {
        uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v8,  (int)v3 + 1,  a3);
      }

      else
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v8;
        uint64_t v9 = (uint64_t)v3 + 2;
      }

      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10005234C(v7, v9, a3);
      ++v6;
    }

    while (v6 < *((int *)this + 8));
  }

  uint64_t v12 = (void *)*((void *)this + 1);
  int v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v10 = v12;
  if (!v12 || *v10 == v10[1]) {
    return v3;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v11,  v3,  a3);
  }
}

uint64_t sub_100054E54(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if ((*(_BYTE *)(a1 + 52) & 1) != 0) {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16),  (unint64_t)a2)
  }
       + 1;
  else {
    int v3 = 0;
  }
  int v4 = *(_DWORD *)(a1 + 32);
  uint64_t v5 = (v4 + v3);
  if (v4 >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100052414( *(void *)(*(void *)(a1 + 24) + 8 * v6),  a2);
      int v8 = (int)v7;
      else {
        int v9 = 1;
      }
      uint64_t v5 = (v8 + v5 + v9);
      ++v6;
    }

    while (v6 < *(int *)(a1 + 32));
  }

  uint64_t v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v5;
  *(_DWORD *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v5;
  return v5;
}

uint64_t sub_100054F10( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  5412LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_1000547DC((uint64_t)a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_100054FB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100054FD0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_100055018()
{
  return 1LL;
}

uint64_t sub_100055020()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F5820;
}

void sub_100055098(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_1000550AC(void *a1)
{
  *a1 = off_1007A3F20;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0LL;
  a1[3] = 0LL;
  return a1;
}

void sub_1000550E0(_Unwind_Exception *a1)
{
}

void sub_1000550F4(void *a1)
{
  *a1 = off_1007A3F20;
  if ((void *)qword_100800110 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100055150(void *a1)
{
}

uint64_t sub_100055164(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void *sub_10005516C()
{
  uint64_t v0 = operator new(0x20uLL);
  sub_1000550AC(v0);
  return v0;
}

void sub_100055198(_Unwind_Exception *a1)
{
}

uint64_t sub_1000551AC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v7 + 1;
      }

      if ((_DWORD)TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      int v9 = *(void **)(a1 + 16);
      if (!v9)
      {
        int v9 = operator new(0x38uLL);
        sub_100054788((uint64_t)v9);
        *(void *)(a1 + 16) = v9;
      }

      uint64_t v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v20)) {
          return 0LL;
        }
      }

      else
      {
        unsigned int v20 = *v10;
        *((void *)this + 1) = v10 + 1;
      }

      int v11 = *((_DWORD *)this + 14);
      int v12 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v11 + 1;
      if (v11 >= v12) {
        return 0LL;
      }
      int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v20);
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
      int v16 = *((_DWORD *)this + 14);
      BOOL v17 = __OFSUB__(v16, 1);
      int v18 = v16 - 1;
      if (v18 < 0 == v17) {
        *((_DWORD *)this + 14) = v18;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
  }

  return 1LL;
}

void sub_100055344(_Unwind_Exception *a1)
{
}

uint64_t sub_100055358( uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if ((*(_BYTE *)(this + 28) & 1) != 0)
  {
    uint64_t v6 = *(void *)(this + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_100800110 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v6,  a2,  a4);
  }

  int v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000553C8( wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if ((*((_BYTE *)this + 28) & 1) != 0)
  {
    uint64_t v4 = (unsigned int *)*((void *)this + 2);
    if (!v4) {
      uint64_t v4 = *(unsigned int **)(qword_100800110 + 16);
    }
    *(_BYTE *)a2 = 10;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v4[12];
    if (v5 > 0x7F)
    {
      uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v5,  (int)a2 + 1,  a3);
    }

    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v5;
      uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }

    a2 = sub_100054D7C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v4, v6, a3);
  }

  int v9 = (void *)*((void *)this + 1);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v7 = v9;
  if (!v9 || *v7 == v7[1]) {
    return a2;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v8,  a2,  a3);
  }
}

uint64_t sub_100055464(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if ((*(_BYTE *)(a1 + 28) & 1) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_100800110 + 16);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100054E54(v4, a2);
    int v6 = (int)v5;
    else {
      int v7 = 1;
    }
    uint64_t v3 = (v6 + v7 + 1);
  }

  else
  {
    uint64_t v3 = 0LL;
  }

  char v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v3;
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

uint64_t sub_1000554F4( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  5627LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_1000545B8((uint64_t)a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_10005559C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1000555B4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_1000555FC()
{
  return 1LL;
}

uint64_t sub_100055604()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F5830;
}

void sub_10005567C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100055690(uint64_t a1)
{
  *(void *)a1 = off_1007A3FD0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = 0;
  *(_OWORD *)(a1 + 40) = xmmword_10040E6D0;
  return a1;
}

void sub_1000556D4(_Unwind_Exception *a1)
{
}

uint64_t sub_1000556E8(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v18,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  5933LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v18,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v17, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4),  *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 16) + 8 * v5);
      int v7 = a1[7];
      uint64_t v8 = (int)a1[6];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4),  v7 + 1);
          int v7 = a1[7];
        }

        a1[7] = v7 + 1;
        uint64_t v10 = sub_10005C3A0();
        uint64_t v11 = *((void *)a1 + 2);
        uint64_t v12 = (int)a1[6];
        a1[6] = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *((void *)a1 + 2);
        a1[6] = v8 + 1;
        uint64_t v10 = *(void **)(v9 + 8 * v8);
      }

      sub_10005316C((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 24));
  }

  LOBYTE(v13) = *(_BYTE *)(a2 + 52);
  if ((_BYTE)v13)
  {
    if ((*(_BYTE *)(a2 + 52) & 1) != 0)
    {
      int v14 = *(_DWORD *)(a2 + 40);
      a1[13] |= 1u;
      a1[10] = v14;
      int v13 = *(_DWORD *)(a2 + 52);
    }

    if ((v13 & 4) != 0)
    {
      unsigned int v15 = *(_DWORD *)(a2 + 44);
      if (v15 >= 9) {
        sub_10038BBBC();
      }
      a1[13] |= 4u;
      a1[11] = v15;
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100055870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100055888(uint64_t a1)
{
  *(void *)a1 = off_1007A3FD0;
  sub_10005C420(a1 + 16);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000558C8(uint64_t a1)
{
}

uint64_t sub_1000558DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4std::iostream::~basic_iostream(v2, v3 + 8) = a2;
  return result;
}

void *sub_1000558E4()
{
  uint64_t v0 = operator new(0x38uLL);
  sub_100055690((uint64_t)v0);
  return v0;
}

void sub_100055910(_Unwind_Exception *a1)
{
}

uint64_t sub_100055924(uint64_t this)
{
  uint64_t v1 = this;
  if (*(_BYTE *)(this + 52)) {
    *(void *)(this + 40) = 0x8FFFFFFFFLL;
  }
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v2 = 0LL;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32LL))(v3);
      ++v2;
    }

    while (v2 < *(int *)(v1 + 24));
  }

  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 11) = 0;
  if (v5) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1000559A8( int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2);
  int v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  while (1)
  {
    while (1)
    {
LABEL_2:
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      unsigned int v10 = TagFallback >> 3;
      int v11 = TagFallback & 7;
      int v14 = (char *)*((void *)this + 1);
      if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36);
        if (!(_DWORD)result) {
          return result;
        }
        signed int v15 = v36;
      }

      else
      {
        signed int v15 = *v14;
        *((void *)this + 1) = v14 + 1;
      }

      if ((v15 + 1) > 5)
      {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v15);
      }

      else
      {
        a1[13] |= 1u;
        a1[10] = v15;
      }

      char v17 = (_BYTE *)*((void *)this + 1);
      if ((unint64_t)v17 < *((void *)this + 2) && *v17 == 18)
      {
        while (1)
        {
          *((void *)this + 1) = v17 + 1;
LABEL_31:
          int v18 = a1[7];
          uint64_t v19 = a1[6];
          if ((int)v19 >= v18)
          {
            if (v18 == a1[8])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v18 + 1);
              int v18 = a1[7];
            }

            a1[7] = v18 + 1;
            uint64_t v21 = sub_10005C3A0();
            uint64_t v22 = *((void *)a1 + 2);
            uint64_t v23 = a1[6];
            a1[6] = v23 + 1;
            *(void *)(v22 + 8 * v23) = v21;
          }

          else
          {
            uint64_t v20 = *((void *)a1 + 2);
            a1[6] = v19 + 1;
            uint64_t v21 = *(void **)(v20 + 8 * v19);
          }

          int v24 = (char *)*((void *)this + 1);
          if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v37)) {
              return 0LL;
            }
          }

          else
          {
            unsigned int v37 = *v24;
            *((void *)this + 1) = v24 + 1;
          }

          int v25 = *((_DWORD *)this + 14);
          int v26 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v25 + 1;
          if (v25 >= v26) {
            return 0LL;
          }
          int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
          int v30 = *((_DWORD *)this + 14);
          BOOL v31 = __OFSUB__(v30, 1);
          int v32 = v30 - 1;
          if (v32 < 0 == v31) {
            *((_DWORD *)this + 14) = v32;
          }
          char v17 = (_BYTE *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          int v33 = *v17;
          if (v33 != 18)
          {
            if (v33 == 24)
            {
              uint64_t v12 = v17 + 1;
              *((void *)this + 1) = v12;
LABEL_49:
              if ((unint64_t)v12 >= v13 || *v12 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35);
                if (!(_DWORD)result) {
                  return result;
                }
                unsigned int v34 = v35;
              }

              else
              {
                unsigned int v34 = *v12;
                *((void *)this + 1) = v12 + 1;
              }

              if (v34 > 8)
              {
                wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 3, (int)v34);
              }

              else
              {
                a1[13] |= 4u;
                a1[11] = v34;
              }

              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
                uint64_t result = 1LL;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
            }

            goto LABEL_2;
          }
        }
      }
    }

    if (v10 == 2)
    {
      int v11 = TagFallback & 7;
      if (v11 != 2) {
        goto LABEL_19;
      }
      goto LABEL_31;
    }

    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_49;
      }
    }

    else
    {
      int v11 = TagFallback & 7;
    }

uint64_t sub_100055CD4( uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if ((*(_BYTE *)(this + 52) & 1) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(this + 40),  (int)a2,  a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v6 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(*(void *)(v5 + 16) + 8 * v6++),  a2,  a4);
    while (v6 < *(int *)(v5 + 24));
  }

  if ((*(_BYTE *)(v5 + 52) & 4) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 44),  (int)a2,  a4);
  }
  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100055D8C( wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if ((*((_BYTE *)this + 52) & 1) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 10);
    *(_BYTE *)a2 = 8;
    uint64_t v6 = (char *)a2 + 1;
    if ((v5 & 0x80000000) != 0)
    {
      int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v5,  (unint64_t)v6,  a3);
    }

    else
    {
      if (v5 <= 0x7F)
      {
        *((_BYTE *)v3 + 1) = (_BYTE)v5;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_8;
      }

      int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v5,  v6,  a3);
    }

    uint64_t v3 = v7;
  }

uint64_t sub_100055EC4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3 = *(_BYTE *)(a1 + 52);
  if (!v3)
  {
    int v4 = 0;
    goto LABEL_19;
  }

  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if ((v5 & 0x80000000) != 0)
    {
      int v4 = 11;
      if ((v3 & 4) == 0) {
        goto LABEL_19;
      }
    }

    else if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      if ((*(_DWORD *)(a1 + 52) & 4) == 0) {
        goto LABEL_19;
      }
    }

    else
    {
      int v4 = 2;
      if ((v3 & 4) == 0) {
        goto LABEL_19;
      }
    }
  }

  else
  {
    int v4 = 0;
    if ((*(_BYTE *)(a1 + 52) & 4) == 0) {
      goto LABEL_19;
    }
  }

  uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }

  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
  }

  else
  {
    int v7 = 2;
  }

  v4 += v7;
LABEL_19:
  int v8 = *(_DWORD *)(a1 + 24);
  uint64_t v9 = (v8 + v4);
  if (v8 >= 1)
  {
    uint64_t v10 = 0LL;
    do
    {
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100054294( *(void *)(*(void *)(a1 + 16) + 8 * v10),  a2);
      int v12 = (int)v11;
      else {
        int v13 = 1;
      }
      uint64_t v9 = (v12 + v9 + v13);
      ++v10;
    }

    while (v10 < *(int *)(a1 + 24));
  }

  int v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v9;
  *(_DWORD *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v9;
  return v9;
}

uint64_t sub_100055FE8( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  5921LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_1000556E8(a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_100056090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1000560A8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_1000560F0()
{
  return 1LL;
}

uint64_t sub_1000560F8()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F5840;
}

void sub_100056170(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_100056184(void *a1)
{
  *a1 = off_1007A4080;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0LL;
  a1[3] = 0LL;
  a1[4] = 0LL;
  return a1;
}

void sub_1000561BC(_Unwind_Exception *a1)
{
}

uint64_t sub_1000561D0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  6186LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v6 = *(void **)(a1 + 16);
      if (!v6)
      {
        uint64_t v6 = operator new(0x28uLL);
        sub_10004C13C(v6);
        *(void *)(a1 + 16) = v6;
      }

      uint64_t v7 = *(void *)(a2 + 16);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_100800120 + 16);
      }
      sub_10004C188((uint64_t)v6, v7);
      int v5 = *(_DWORD *)(a2 + 36);
    }

    if ((v5 & 2) != 0)
    {
      uint64_t v8 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 24) = v8;
    }
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000562BC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_1000562E4(void *a1)
{
  *a1 = off_1007A4080;
  if ((void *)qword_100800120 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100056340(void *a1)
{
}

uint64_t sub_100056354(uint64_t result, int a2)
{
  *(_DWORD *)(result + sub_100012358(v1 - 32) = a2;
  return result;
}

void *sub_10005635C()
{
  uint64_t v0 = operator new(0x28uLL);
  sub_100056184(v0);
  return v0;
}

void sub_100056388(_Unwind_Exception *a1)
{
}

uint64_t sub_10005639C(uint64_t this)
{
  uint64_t v1 = this;
  if (*(_BYTE *)(this + 36))
  {
    if ((*(_BYTE *)(this + 36) & 1) != 0)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        uint64_t v2 = *(void *)(this + 8);
        this += 8LL;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 2std::iostream::~basic_iostream(v2, v3 + 8) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }

    *(void *)(v1 + 24) = 0LL;
  }

  uint64_t v4 = *(void *)(v1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 7) = 0;
  if (v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_100056400( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      if (TagFallback >> 3 != 2)
      {
        int v9 = TagFallback & 7;
        goto LABEL_18;
      }

      int v9 = TagFallback & 7;
      if (v9 == 1)
      {
LABEL_30:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v22) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = v22;
        *(_DWORD *)(a1 + 36) |= 2u;
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }

      else
      {
LABEL_18:
        if (v9 == 4) {
          return 1LL;
        }
      }
    }

    int v9 = TagFallback & 7;
    if (v9 != 2) {
      goto LABEL_18;
    }
    *(_DWORD *)(a1 + 36) |= 1u;
    char v10 = *(void **)(a1 + 16);
    if (!v10)
    {
      char v10 = operator new(0x28uLL);
      sub_10004C13C(v10);
      *(void *)(a1 + 16) = v10;
    }

    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
    }

    else
    {
      unsigned int v23 = *v11;
      *((void *)this + 1) = v11 + 1;
    }

    int v12 = *((_DWORD *)this + 14);
    int v13 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v12 + 1;
    if (v12 >= v13) {
      return 0LL;
    }
    int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
    int v17 = *((_DWORD *)this + 14);
    BOOL v18 = __OFSUB__(v17, 1);
    int v19 = v17 - 1;
    if (v19 < 0 == v18) {
      *((_DWORD *)this + 14) = v19;
    }
    uint64_t v20 = (_BYTE *)*((void *)this + 1);
    if ((unint64_t)v20 < *((void *)this + 2) && *v20 == 17)
    {
      *((void *)this + 1) = v20 + 1;
      goto LABEL_30;
    }
  }

void sub_100056608(_Unwind_Exception *a1)
{
}

uint64_t sub_10005661C( uint64_t this, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(this + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_100800120 + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 36);
  }

  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 24),  a3);
  }
  char v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
    }
  }

  return this;
}

_BYTE *sub_1000566A4( wireless_diagnostics::google::protobuf::internal::WireFormat *this, _BYTE *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 9);
  if ((v4 & 1) != 0)
  {
    uint64_t v5 = *((void *)this + 2);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_100800120 + 16);
    }
    *a2 = 10;
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v5 + 32);
    if (v6 > 0x7F)
    {
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v6,  (int)a2 + 1,  a3);
    }

    else
    {
      a2[1] = (_BYTE)v6;
      uint64_t v7 = (uint64_t)(a2 + 2);
    }

    a2 = (_BYTE *)sub_10004C710(v5, v7, a3);
    int v4 = *((_DWORD *)this + 9);
  }

  if ((v4 & 2) != 0)
  {
    uint64_t v8 = *((void *)this + 3);
    *a2 = 17;
    *(void *)(a2 + 1) = v8;
    a2 += 9;
  }

  int v11 = (void *)*((void *)this + 1);
  char v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }
  else {
    return (_BYTE *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v10,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

uint64_t sub_100056794(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 36) & 1) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_100800120 + 16);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10004C7A0(v6, a2);
      int v8 = (int)v7;
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  char v10 = *(void **)(a1 + 8);
  if (v10 && *v10 != v10[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v5;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v5;
  return v5;
}

uint64_t sub_100056840( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  6174LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_1000561D0((uint64_t)a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_1000568E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100056900(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_100056948()
{
  return 1LL;
}

uint64_t sub_100056950()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F5850;
}

void sub_1000569C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_1000569DC(void *a1)
{
  *a1 = off_1007A4130;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0LL;
  a1[3] = 0LL;
  a1[4] = 0LL;
  return a1;
}

void sub_100056A14(_Unwind_Exception *a1)
{
}

uint64_t sub_100056A28(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  6402LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_10005C1F0(a1 + 16, *(_DWORD *)(a1 + 24) + v5);
    memcpy((void *)(*(void *)(a1 + 16) + 4LL * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4LL * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100056AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100056AFC(void *a1)
{
  *a1 = off_1007A4130;
  uint64_t v2 = (void *)a1[2];
  if (v2) {
    operator delete[](v2);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100056B40(void *a1)
{
}

uint64_t sub_100056B54(uint64_t result, int a2)
{
  *(_DWORD *)(result + sub_100012358(v1 - 32) = a2;
  return result;
}

void *sub_100056B5C()
{
  uint64_t v0 = operator new(0x28uLL);
  sub_1000569DC(v0);
  return v0;
}

void sub_100056B88(_Unwind_Exception *a1)
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100056B9C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100056BB4( uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = a1 + 16;
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      char v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      int v10 = TagFallback & 7;
      if (v10 != 2)
      {
        if (v10 != 5) {
          break;
        }
        goto LABEL_15;
      }

      uint64_t result = sub_10004BD70(this, v6);
      if (!(_DWORD)result) {
        return result;
      }
      while (1)
      {
        unsigned int v23 = (_BYTE *)*((void *)this + 1);
        int v24 = (_BYTE *)*((void *)this + 2);
        if (v23 >= v24 || *v23 != 13) {
          break;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_15:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0) {
          return 0LL;
        }
        unsigned int v12 = v26[0];
        int v13 = *(_DWORD *)(a1 + 24);
        if (v13 == *(_DWORD *)(a1 + 28))
        {
          sub_10005C1F0(v6, v13 + 1);
          int v13 = *(_DWORD *)(a1 + 24);
        }

        uint64_t v14 = *(void *)(a1 + 16);
        int v15 = v13 + 1;
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(_DWORD *)(v14 + 4LL * v13) = v12;
        uint64_t v16 = *((void *)this + 1);
        int v17 = *((_DWORD *)this + 4) - v16;
        if (v17 >= 1)
        {
          signed int v18 = v17 / 5u;
          int v19 = v18 >= *(_DWORD *)(a1 + 28) - v15 ? *(_DWORD *)(a1 + 28) - v15 : v18;
          if (v19 >= 1)
          {
            int v20 = 0;
            while (*(_BYTE *)v16 == 13)
            {
              int v21 = *(_DWORD *)(v16 + 1);
              if (v15 >= *(_DWORD *)(a1 + 28))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v26,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-89cb-6e654a286000/Applications/Xcode.app/Contents /Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/local/include/go ogle/protobuf/repeated_field.h",  602LL);
                uint64_t v22 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v26,  "CHECK failed: (size()) < (Capacity()): ");
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v25, v22);
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
                int v15 = *(_DWORD *)(a1 + 24);
                uint64_t v14 = *(void *)(a1 + 16);
              }

              *(_DWORD *)(a1 + 24) = v15 + 1;
              *(_DWORD *)(v14 + 4LL * v15) = v21;
              ++v20;
              v16 += 5LL;
              ++v15;
              if (v19 == v20)
              {
                int v20 = v19;
                break;
              }
            }

            if (v20) {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v20);
            }
          }
        }
      }

      if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    if (v10 == 4) {
      return 1LL;
    }
  }

void sub_100056E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100056E30( uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v5 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  (int)a2,  *(float *)(*(void *)(v4 + 16) + 4 * v5++),  a3);
    while (v5 < *(int *)(v4 + 24));
  }

  char v8 = *(void **)(v4 + 8);
  unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
    }
  }

  return this;
}

uint64_t sub_100056EB8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v3 = 0LL;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 16) + 4 * v3);
      *(_BYTE *)a2 = 13;
      *(_DWORD *)(a2 + 1) = v4;
      a2 += 5LL;
      ++v3;
    }

    while (v3 < *(int *)(a1 + 24));
  }

  unsigned int v7 = *(void **)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v5,  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2,  a3);
  }
}

uint64_t sub_100056F28(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v5 = *(void **)(a1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v4 = v5;
  uint64_t v6 = (5 * *((_DWORD *)v3 + 4));
  if (v5 && *v4 != v4[1]) {
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v6;
  }
  return v6;
}

uint64_t sub_100056F70( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  6390LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_100056A28((uint64_t)a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_100057018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100057030(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_100057078()
{
  return 1LL;
}

uint64_t sub_100057080()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F5860;
}

void sub_1000570F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10005710C(uint64_t a1)
{
  *(void *)a1 = off_1007A41E0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(_DWORD *)(a1 + sub_100012358(v1 - 32) = 0;
  *(void *)(a1 + 40) = 0LL;
  return a1;
}

void sub_100057148(_Unwind_Exception *a1)
{
}

uint64_t sub_10005715C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v15,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  6605LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v15,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4),  *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 16) + 8 * v5);
      int v7 = a1[7];
      uint64_t v8 = (int)a1[6];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4),  v7 + 1);
          int v7 = a1[7];
        }

        a1[7] = v7 + 1;
        int v10 = sub_10005C3E0();
        uint64_t v11 = *((void *)a1 + 2);
        uint64_t v12 = (int)a1[6];
        a1[6] = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *((void *)a1 + 2);
        a1[6] = v8 + 1;
        int v10 = *(void **)(v9 + 8 * v8);
      }

      sub_100056A28((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 24));
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom( (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2),  (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10005728C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1000572A4(uint64_t a1)
{
  *(void *)a1 = off_1007A41E0;
  sub_10005C420(a1 + 16);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000572E4(uint64_t a1)
{
}

uint64_t sub_1000572F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void *sub_100057300()
{
  uint64_t v0 = operator new(0x30uLL);
  sub_10005710C((uint64_t)v0);
  return v0;
}

void sub_10005732C(_Unwind_Exception *a1)
{
}

uint64_t sub_100057340(uint64_t this)
{
  uint64_t v1 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v2 = 0LL;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32LL))(v3);
      ++v2;
    }

    while (v2 < *(int *)(v1 + 24));
  }

  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 9) = 0;
  if (v5) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1000573B0( int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  unsigned int v7 = (_DWORD)a1 + 8;
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v8 + 1;
    }

    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        int v10 = a1[7];
        uint64_t v11 = a1[6];
        if ((int)v11 >= v10)
        {
          if (v10 == a1[8])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
            int v10 = a1[7];
          }

          a1[7] = v10 + 1;
          int v13 = sub_10005C3E0();
          uint64_t v14 = *((void *)a1 + 2);
          uint64_t v15 = a1[6];
          a1[6] = v15 + 1;
          *(void *)(v14 + 8 * v15) = v13;
        }

        else
        {
          uint64_t v12 = *((void *)a1 + 2);
          a1[6] = v11 + 1;
          int v13 = *(void **)(v12 + 8 * v11);
        }

        uint64_t v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v28)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v28 = *v16;
          *((void *)this + 1) = v16 + 1;
        }

        int v17 = *((_DWORD *)this + 14);
        int v18 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0LL;
        }
        int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
        int v22 = *((_DWORD *)this + 14);
        BOOL v23 = __OFSUB__(v22, 1);
        int v24 = v22 - 1;
        if (v24 < 0 == v23) {
          *((_DWORD *)this + 14) = v24;
        }
        char v25 = (_BYTE *)*((void *)this + 1);
        int v26 = (_BYTE *)*((void *)this + 2);
        if (v25 >= v26 || *v25 != 10)
        {
          if (v25 == v26 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          goto LABEL_2;
        }

        *((void *)this + 1) = v25 + 1;
      }
    }
  }

uint64_t sub_1000575A4( uint64_t this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v6 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(*(void *)(v5 + 16) + 8 * v6++),  a2,  a4);
    while (v6 < *(int *)(v5 + 24));
  }

  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
    }
  }

  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005762C( wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*((void *)this + 2) + 8 * v5);
      *(_BYTE *)a2 = 10;
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 32);
      if (v7 > 0x7F)
      {
        uint64_t v8 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v7,  (int)a2 + 1,  a3);
      }

      else
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v7;
        uint64_t v8 = (char *)a2 + 2;
      }

      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100056EB8(v6, (uint64_t)v8, a3);
      ++v5;
    }

    while (v5 < *((int *)this + 6));
  }

  uint64_t v11 = (void *)*((void *)this + 1);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }
  else {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray( v10,  a2,  a3);
  }
}

uint64_t sub_1000576E4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0LL;
    do
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100056F28( *(void *)(*(void *)(a1 + 16) + 8 * v4),  a2);
      int v6 = (int)v5;
      else {
        int v7 = 1;
      }
      uint64_t v3 = (v6 + v3 + v7);
      ++v4;
    }

    while (v4 < *(int *)(a1 + 24));
  }

  uint64_t v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize( (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8),  a2)
  }
       + v3;
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_100057780( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  6593LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_10005715C(a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_100057828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100057840(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_100057888()
{
  return 1LL;
}

uint64_t sub_100057890()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F5870;
}

void sub_100057908(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10005791C(uint64_t a1)
{
  *(void *)a1 = off_1007A4290;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + sub_100012358(v1 - 32) = 0u;
  *(_OWORD *)(a1 + 12std::iostream::~basic_iostream(v2, v3 + 8) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 2sub_100012358(v1 - 32) = 0u;
  *(_OWORD *)(a1 + 24std::iostream::~basic_iostream(v2, v3 + 8) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(void *)(a1 + 280) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 120) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 176) = 0LL;
  return a1;
}

void sub_100057994(_Unwind_Exception *a1)
{
}

uint64_t sub_1000579A8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v28,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  7579LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v28,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v27, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v28);
  }

  int v5 = *(_DWORD *)(a2 + 32);
  if (v5)
  {
    sub_10005C1F0(a1 + 24, *(_DWORD *)(a1 + 32) + v5);
    memcpy((void *)(*(void *)(a1 + 24) + 4LL * *(int *)(a1 + 32)), *(const void **)(a2 + 24), 4LL * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }

  int v6 = *(_DWORD *)(a2 + 48);
  if (v6)
  {
    sub_10005C268(a1 + 40, *(_DWORD *)(a1 + 48) + v6);
    memcpy((void *)(*(void *)(a1 + 40) + 8LL * *(int *)(a1 + 48)), *(const void **)(a2 + 40), 8LL * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }

  int v7 = *(_DWORD *)(a2 + 64);
  if (v7)
  {
    sub_10005C1F0(a1 + 56, *(_DWORD *)(a1 + 64) + v7);
    memcpy((void *)(*(void *)(a1 + 56) + 4LL * *(int *)(a1 + 64)), *(const void **)(a2 + 56), 4LL * *(int *)(a2 + 64));
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
  }

  int v8 = *(_DWORD *)(a2 + 80);
  if (v8)
  {
    sub_10005C268(a1 + 72, *(_DWORD *)(a1 + 80) + v8);
    memcpy((void *)(*(void *)(a1 + 72) + 8LL * *(int *)(a1 + 80)), *(const void **)(a2 + 72), 8LL * *(int *)(a2 + 80));
    *(_DWORD *)(a1 + 80) += *(_DWORD *)(a2 + 80);
  }

  int v9 = *(_DWORD *)(a2 + 104);
  if (v9)
  {
    sub_10005C1F0(a1 + 96, *(_DWORD *)(a1 + 104) + v9);
    memcpy( (void *)(*(void *)(a1 + 96) + 4LL * *(int *)(a1 + 104)),  *(const void **)(a2 + 96),  4LL * *(int *)(a2 + 104));
    *(_DWORD *)(a1 + 104) += *(_DWORD *)(a2 + 104);
  }

  int v10 = *(_DWORD *)(a2 + 136);
  if (v10)
  {
    sub_10005C1F0(a1 + 128, *(_DWORD *)(a1 + 136) + v10);
    memcpy( (void *)(*(void *)(a1 + 128) + 4LL * *(int *)(a1 + 136)),  *(const void **)(a2 + 128),  4LL * *(int *)(a2 + 136));
    *(_DWORD *)(a1 + 136) += *(_DWORD *)(a2 + 136);
  }

  int v11 = *(_DWORD *)(a2 + 152);
  if (v11)
  {
    sub_10005C1F0(a1 + 144, *(_DWORD *)(a1 + 152) + v11);
    memcpy( (void *)(*(void *)(a1 + 144) + 4LL * *(int *)(a1 + 152)),  *(const void **)(a2 + 144),  4LL * *(int *)(a2 + 152));
    *(_DWORD *)(a1 + 152) += *(_DWORD *)(a2 + 152);
  }

  int v12 = *(_DWORD *)(a2 + 168);
  if (v12)
  {
    sub_10005C1F0(a1 + 160, *(_DWORD *)(a1 + 168) + v12);
    memcpy( (void *)(*(void *)(a1 + 160) + 4LL * *(int *)(a1 + 168)),  *(const void **)(a2 + 160),  4LL * *(int *)(a2 + 168));
    *(_DWORD *)(a1 + 168) += *(_DWORD *)(a2 + 168);
  }

  int v13 = *(_DWORD *)(a2 + 192);
  if (v13)
  {
    sub_10005C1F0(a1 + 184, *(_DWORD *)(a1 + 192) + v13);
    memcpy( (void *)(*(void *)(a1 + 184) + 4LL * *(int *)(a1 + 192)),  *(const void **)(a2 + 184),  4LL * *(int *)(a2 + 192));
    *(_DWORD *)(a1 + 192) += *(_DWORD *)(a2 + 192);
  }

  int v14 = *(_DWORD *)(a2 + 208);
  if (v14)
  {
    sub_10005C1F0(a1 + 200, *(_DWORD *)(a1 + 208) + v14);
    memcpy( (void *)(*(void *)(a1 + 200) + 4LL * *(int *)(a1 + 208)),  *(const void **)(a2 + 200),  4LL * *(int *)(a2 + 208));
    *(_DWORD *)(a1 + 208) += *(_DWORD *)(a2 + 208);
  }

  int v15 = *(_DWORD *)(a2 + 224);
  if (v15)
  {
    sub_10005C1F0(a1 + 216, *(_DWORD *)(a1 + 224) + v15);
    memcpy( (void *)(*(void *)(a1 + 216) + 4LL * *(int *)(a1 + 224)),  *(const void **)(a2 + 216),  4LL * *(int *)(a2 + 224));
    *(_DWORD *)(a1 + 224) += *(_DWORD *)(a2 + 224);
  }

  int v16 = *(_DWORD *)(a2 + 240);
  if (v16)
  {
    sub_10005C1F0(a1 + 232, *(_DWORD *)(a1 + 240) + v16);
    memcpy( (void *)(*(void *)(a1 + 232) + 4LL * *(int *)(a1 + 240)),  *(const void **)(a2 + 232),  4LL * *(int *)(a2 + 240));
    *(_DWORD *)(a1 + 240) += *(_DWORD *)(a2 + 240);
  }

  int v17 = *(_DWORD *)(a2 + 256);
  if (v17)
  {
    sub_10005C268(a1 + 248, *(_DWORD *)(a1 + 256) + v17);
    memcpy( (void *)(*(void *)(a1 + 248) + 8LL * *(int *)(a1 + 256)),  *(const void **)(a2 + 248),  8LL * *(int *)(a2 + 256));
    *(_DWORD *)(a1 + 256) += *(_DWORD *)(a2 + 256);
  }

  int v18 = *(_DWORD *)(a2 + 272);
  if (v18)
  {
    sub_10005C268(a1 + 264, *(_DWORD *)(a1 + 272) + v18);
    memcpy( (void *)(*(void *)(a1 + 264) + 8LL * *(int *)(a1 + 272)),  *(const void **)(a2 + 264),  8LL * *(int *)(a2 + 272));
    *(_DWORD *)(a1 + 272) += *(_DWORD *)(a2 + 272);
  }

  int v19 = *(_DWORD *)(a2 + 284);
  if ((_BYTE)v19)
  {
    if ((v19 & 1) != 0)
    {
      uint64_t v25 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 284) |= 1u;
      *(void *)(a1 + 16) = v25;
      int v19 = *(_DWORD *)(a2 + 284);
      if ((v19 & 0x20) == 0)
      {
LABEL_34:
        if ((v19 & 0x80) == 0) {
          goto LABEL_36;
        }
        goto LABEL_35;
      }
    }

    else if ((v19 & 0x20) == 0)
    {
      goto LABEL_34;
    }

    uint64_t v26 = *(void *)(a2 + 88);
    *(_DWORD *)(a1 + 284) |= 0x20u;
    *(void *)(a1 + 8std::iostream::~basic_iostream(v2, v3 + 8) = v26;
    int v19 = *(_DWORD *)(a2 + 284);
    if ((v19 & 0x80) != 0)
    {
LABEL_35:
      uint64_t v20 = *(void *)(a2 + 112);
      *(_DWORD *)(a1 + 284) |= 0x80u;
      *(void *)(a1 + 112) = v20;
      int v19 = *(_DWORD *)(a2 + 284);
    }
  }

void sub_100057EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100057ECC(void *a1)
{
  *a1 = off_1007A4290;
  sub_100057FAC((uint64_t)a1);
  uint64_t v2 = (void *)a1[33];
  if (v2) {
    operator delete[](v2);
  }
  char v3 = (void *)a1[31];
  if (v3) {
    operator delete[](v3);
  }
  uint64_t v4 = (void *)a1[29];
  if (v4) {
    operator delete[](v4);
  }
  int v5 = (void *)a1[27];
  if (v5) {
    operator delete[](v5);
  }
  int v6 = (void *)a1[25];
  if (v6) {
    operator delete[](v6);
  }
  int v7 = (void *)a1[23];
  if (v7) {
    operator delete[](v7);
  }
  int v8 = (void *)a1[20];
  if (v8) {
    operator delete[](v8);
  }
  int v9 = (void *)a1[18];
  if (v9) {
    operator delete[](v9);
  }
  int v10 = (void *)a1[16];
  if (v10) {
    operator delete[](v10);
  }
  int v11 = (void *)a1[12];
  if (v11) {
    operator delete[](v11);
  }
  int v12 = (void *)a1[9];
  if (v12) {
    operator delete[](v12);
  }
  int v13 = (void *)a1[7];
  if (v13) {
    operator delete[](v13);
  }
  int v14 = (void *)a1[5];
  if (v14) {
    operator delete[](v14);
  }
  int v15 = (void *)a1[3];
  if (v15) {
    operator delete[](v15);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100057FAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 120);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    operator delete((void *)v1);
  }

void sub_100058000(void *a1)
{
}

uint64_t sub_100058014(uint64_t result, int a2)
{
  *(_DWORD *)(result + 280) = a2;
  return result;
}

void *sub_10005801C()
{
  uint64_t v0 = operator new(0x120uLL);
  sub_10005791C((uint64_t)v0);
  return v0;
}

void sub_100058048(_Unwind_Exception *a1)
{
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005805C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 284);
  if ((_BYTE)v1)
  {
    *(void *)(a1 + 16) = 0LL;
    *(void *)(a1 + 8std::iostream::~basic_iostream(v2, v3 + 8) = 0LL;
    *(void *)(a1 + 112) = 0LL;
  }

  if ((v1 & 0xFF00) != 0)
  {
    if ((v1 & 0x100) != 0)
    {
      uint64_t v2 = *(void *)(a1 + 120);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)uint64_t v2 = 0;
          *(void *)(v2 + std::iostream::~basic_iostream(v2, v3 + 8) = 0LL;
        }

        else
        {
          *(_BYTE *)uint64_t v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }

    *(void *)(a1 + 176) = 0LL;
  }

  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 6) = 0;
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 14) = 0;
  *((_DWORD *)result + 1std::iostream::~basic_iostream(v2, v3 + 8) = 0;
  *((_DWORD *)result + 24) = 0;
  *((_DWORD *)result + sub_100012358(v1 - 32) = 0;
  *((_DWORD *)result + 36) = 0;
  *((_DWORD *)result + 40) = 0;
  *((_DWORD *)result + 46) = 0;
  *((_DWORD *)result + 50) = 0;
  *((_DWORD *)result + 54) = 0;
  *((_DWORD *)result + 5std::iostream::~basic_iostream(v2, v3 + 8) = 0;
  *((_DWORD *)result + 62) = 0;
  *((_DWORD *)result + 66) = 0;
  *((_DWORD *)result + 69) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100058104( uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v208 = a1 + 248;
  uint64_t v209 = a1 + 232;
  uint64_t v210 = a1 + 216;
  uint64_t v211 = a1 + 264;
  uint64_t v222 = a1 + 144;
  uint64_t v216 = a1 + 184;
  uint64_t v217 = a1 + 128;
  uint64_t v220 = a1 + 160;
  uint64_t v221 = a1 + 96;
  uint64_t v223 = a1 + 72;
  uint64_t v224 = a1 + 200;
  uint64_t v218 = a1 + 40;
  uint64_t v219 = a1 + 56;
  NSErrorUserInfoKey v207 = (unint64_t *)(a1 + 16);
  uint64_t v214 = a1 + 24;
  NSErrorUserInfoKey v215 = (unint64_t *)(a1 + 88);
  v212 = (unint64_t *)(a1 + 176);
  NSErrorUserInfoKey v213 = (unint64_t *)(a1 + 112);
  unsigned int v6 = a1 + 8;
LABEL_2:
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        int v10 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v10 >= v11 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v207);
          if (!(_DWORD)result) {
            return result;
          }
          int v12 = (_BYTE *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }

        else
        {
          *NSErrorUserInfoKey v207 = *v10;
          int v12 = v10 + 1;
          *((void *)this + 1) = v12;
        }

        *(_DWORD *)(a1 + 284) |= 1u;
        goto LABEL_129;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10004BD70(this, v214);
          if (!(_DWORD)result) {
            return result;
          }
          goto LABEL_146;
        }

        if (v9 != 5)
        {
LABEL_67:
          if (v9 == 4) {
            return 1LL;
          }
          continue;
        }

        while (1)
        {
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v226) & 1) == 0) {
            return 0LL;
          }
          unsigned int v43 = v226[0];
          int v44 = *(_DWORD *)(a1 + 32);
          if (v44 == *(_DWORD *)(a1 + 36))
          {
            sub_10005C1F0(v214, v44 + 1);
            int v44 = *(_DWORD *)(a1 + 32);
          }

          uint64_t v45 = *(void *)(a1 + 24);
          int v46 = v44 + 1;
          *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v44 + 1;
          *(_DWORD *)(v45 + 4LL * v44) = v43;
          uint64_t v47 = *((void *)this + 1);
          int v48 = *((_DWORD *)this + 4) - v47;
          if (v48 >= 1)
          {
            signed int v49 = v48 / 5u;
            int v50 = v49 >= *(_DWORD *)(a1 + 36) - v46 ? *(_DWORD *)(a1 + 36) - v46 : v49;
            if (v50 >= 1)
            {
              int v51 = 0;
              while (*(_BYTE *)v47 == 21)
              {
                int v52 = *(_DWORD *)(v47 + 1);
                if (v46 >= *(_DWORD *)(a1 + 36))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-89cb-6e654a286000/Applications/Xcode.app/Conten ts/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/local/includ e/google/protobuf/repeated_field.h",  602LL);
                  uint64_t v53 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (size()) < (Capacity()): ");
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v53);
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                  int v46 = *(_DWORD *)(a1 + 32);
                  uint64_t v45 = *(void *)(a1 + 24);
                }

                *(_DWORD *)(a1 + sub_100012358(v1 - 32) = v46 + 1;
                *(_DWORD *)(v45 + 4LL * v46) = v52;
                ++v51;
                v47 += 5LL;
                ++v46;
                if (v50 == v51)
                {
                  int v51 = v50;
                  break;
                }
              }

              if (v51) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v51);
              }
            }
          }

LABEL_146:
          int v12 = (_BYTE *)*((void *)this + 1);
          int v54 = *v12;
          if (v54 != 21) {
            break;
          }
LABEL_129:
          *((void *)this + 1) = v12 + 1;
        }

        if (v54 != 25) {
          continue;
        }
LABEL_149:
        *((void *)this + 1) = v12 + 1;
LABEL_150:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v226) & 1) != 0)
        {
          uint64_t v55 = *(void *)v226;
          int v56 = *(_DWORD *)(a1 + 48);
          if (v56 == *(_DWORD *)(a1 + 52))
          {
            sub_10005C268(v218, v56 + 1);
            int v56 = *(_DWORD *)(a1 + 48);
          }

          uint64_t v57 = *(void *)(a1 + 40);
          int v58 = v56 + 1;
          *(_DWORD *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v56 + 1;
          *(void *)(v57 + 8LL * v56) = v55;
          uint64_t v59 = *((void *)this + 1);
          int v60 = *((_DWORD *)this + 4) - v59;
          if (v60 >= 1)
          {
            signed int v61 = v60 / 9u;
            int v62 = v61 >= *(_DWORD *)(a1 + 52) - v58 ? *(_DWORD *)(a1 + 52) - v58 : v61;
            if (v62 >= 1)
            {
              int v63 = 0;
              while (*(_BYTE *)v59 == 25)
              {
                uint64_t v64 = *(void *)(v59 + 1);
                if (v58 >= *(_DWORD *)(a1 + 52))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-89cb-6e654a286000/Applications/Xcode.app/Conten ts/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/local/includ e/google/protobuf/repeated_field.h",  602LL);
                  uint64_t v65 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (size()) < (Capacity()): ");
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v65);
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                  int v58 = *(_DWORD *)(a1 + 48);
                  uint64_t v57 = *(void *)(a1 + 40);
                }

                *(_DWORD *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v58 + 1;
                *(void *)(v57 + 8LL * v5std::iostream::~basic_iostream(v2, v3 + 8) = v64;
                ++v63;
                v59 += 9LL;
                ++v58;
                if (v62 == v63)
                {
                  int v63 = v62;
                  break;
                }
              }

              if (v63) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v63);
              }
            }
          }

  uint64_t v64 = (unsigned int *)*((void *)this + 20);
  if (!v64) {
    uint64_t v64 = *(unsigned int **)(qword_1008001F0 + 160);
  }
  *(_WORD *)uint64_t v4 = 418;
  uint64_t v65 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v64[32];
  if (v65 > 0x7F)
  {
    int v66 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v65,  (int)v4 + 2,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 2) = (_BYTE)v65;
    int v66 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  }

  uint64_t v4 = sub_100097BE4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v64, v66, a3);
  int v12 = *((_DWORD *)this + 63);
  if ((v12 & 0x100000) == 0)
  {
LABEL_34:
    if ((v12 & 0x200000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_158;
  }

  int v62 = *(_DWORD *)(a2 + 348);
  *(_DWORD *)(a1 + 472) |= 0x80000u;
  *(_DWORD *)(a1 + 34std::iostream::~basic_iostream(v2, v3 + 8) = v62;
  unint64_t v21 = *(_DWORD *)(a2 + 472);
  if ((v21 & 0x100000) == 0)
  {
LABEL_118:
    if ((v21 & 0x200000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_148;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3C,  *(_DWORD *)(v5 + 400),  a2,  a4);
  unint64_t v11 = *(_DWORD *)(v5 + 472);
  if ((v11 & 0x10000000) == 0)
  {
LABEL_68:
    if ((v11 & 0x20000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_148;
  }

  a1 = v52;
  if (v18)
  {
    std::string::operator=(v50, &__str);
    *(_BYTE *)(v52 + 344) = v51;
    *(_BYTE *)(v52 + 345) = 1;
    if (v51) {
      sub_1001AAF04(v52);
    }
    else {
      sub_1001AAF5C(v52);
    }
  }

LABEL_166:
          int v12 = (_BYTE *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          int v66 = *v12;
          if (v66 == 25) {
            goto LABEL_149;
          }
          if (v66 == 32)
          {
            for (uint64_t i = v12 + 1; ; uint64_t i = (char *)(v27 + 1))
            {
              *((void *)this + 1) = i;
LABEL_171:
              if ((unint64_t)i >= v15 || *i < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v226);
                if (!(_DWORD)result) {
                  return result;
                }
                unsigned int v67 = v226[0];
              }

              else
              {
                unsigned int v67 = *i;
                *((void *)this + 1) = i + 1;
              }

              int v68 = *(_DWORD *)(a1 + 64);
              if (v68 == *(_DWORD *)(a1 + 68))
              {
                sub_10005C1F0(v219, v68 + 1);
                int v68 = *(_DWORD *)(a1 + 64);
              }

              uint64_t v69 = *(void *)(a1 + 56);
              *(_DWORD *)(a1 + 64) = v68 + 1;
              *(_DWORD *)(v69 + 4LL * v6std::iostream::~basic_iostream(v2, v3 + 8) = v67;
              int v70 = *(_DWORD *)(a1 + 68) - *(_DWORD *)(a1 + 64);
              if (v70 >= 1)
              {
                int v71 = v70 + 1;
                do
                {
                  uint64_t v72 = (_BYTE *)*((void *)this + 1);
                  unint64_t v73 = *((void *)this + 2);
                  *((void *)this + 1) = v72 + 1;
                  if ((unint64_t)(v72 + 1) >= v73 || (char)v72[1] < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v226);
                    if (!(_DWORD)result) {
                      return result;
                    }
                    unsigned int v74 = v226[0];
                  }

                  else
                  {
                    unsigned int v74 = v72[1];
                    *((void *)this + 1) = v72 + 2;
                  }

                  int v75 = *(_DWORD *)(a1 + 64);
                  if (v75 >= *(_DWORD *)(a1 + 68))
                  {
                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-89cb-6e654a286000/Applications/Xcode.app/Cont ents/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/local/in clude/google/protobuf/repeated_field.h",  602LL);
                    uint64_t v76 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (size()) < (Capacity()): ");
                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v76);
                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                    int v75 = *(_DWORD *)(a1 + 64);
                  }

                  uint64_t v77 = *(void *)(a1 + 56);
                  *(_DWORD *)(a1 + 64) = v75 + 1;
                  *(_DWORD *)(v77 + 4LL * v75) = v74;
                  --v71;
                }

                while (v71 > 1);
              }

LABEL_190:
              char v27 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v15 = *((void *)this + 2);
              int v78 = *v27;
              if (v78 == 41)
              {
                while (1)
                {
                  *((void *)this + 1) = v27 + 1;
LABEL_195:
                  if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v226) & 1) == 0) {
                    return 0LL;
                  }
                  uint64_t v79 = *(void *)v226;
                  int v80 = *(_DWORD *)(a1 + 80);
                  if (v80 == *(_DWORD *)(a1 + 84))
                  {
                    sub_10005C268(v223, v80 + 1);
                    int v80 = *(_DWORD *)(a1 + 80);
                  }

                  uint64_t v81 = *(void *)(a1 + 72);
                  int v82 = v80 + 1;
                  *(_DWORD *)(a1 + 80) = v80 + 1;
                  *(void *)(v81 + 8LL * v80) = v79;
                  uint64_t v83 = *((void *)this + 1);
                  int v84 = *((_DWORD *)this + 4) - v83;
                  if (v84 >= 1)
                  {
                    signed int v85 = v84 / 9u;
                    int v86 = v85 >= *(_DWORD *)(a1 + 84) - v82 ? *(_DWORD *)(a1 + 84) - v82 : v85;
                    if (v86 >= 1)
                    {
                      int v87 = 0;
                      while (*(_BYTE *)v83 == 41)
                      {
                        uint64_t v88 = *(void *)(v83 + 1);
                        if (v82 >= *(_DWORD *)(a1 + 84))
                        {
                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-89cb-6e654a286000/Applications/Xcode.ap p/Contents/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/ usr/local/include/google/protobuf/repeated_field.h",  602LL);
                          uint64_t v89 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (size()) < (Capacity()): ");
                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v89);
                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                          int v82 = *(_DWORD *)(a1 + 80);
                          uint64_t v81 = *(void *)(a1 + 72);
                        }

                        *(_DWORD *)(a1 + 80) = v82 + 1;
                        *(void *)(v81 + 8LL * v82) = v88;
                        ++v87;
                        v83 += 9LL;
                        ++v82;
                        if (v86 == v87)
                        {
                          int v87 = v86;
                          break;
                        }
                      }

                      if (v87) {
                        wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v87);
                      }
                    }
                  }

LABEL_95:
                  char v27 = (unsigned __int8 *)*((void *)this + 1);
                  unint64_t v16 = *((void *)this + 2);
                  int v28 = *v27;
                  if (v28 != 41)
                  {
                    if (v28 == 48)
                    {
                      int v17 = (char *)(v27 + 1);
                      *((void *)this + 1) = v27 + 1;
LABEL_99:
                      if ((unint64_t)v17 >= v16 || *v17 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback( this,  v215);
                        if (!(_DWORD)result) {
                          return result;
                        }
                        BOOL v29 = (_BYTE *)*((void *)this + 1);
                        unint64_t v16 = *((void *)this + 2);
                      }

                      else
                      {
                        *NSErrorUserInfoKey v215 = *v17;
                        BOOL v29 = v17 + 1;
                        *((void *)this + 1) = v29;
                      }

                      *(_DWORD *)(a1 + 284) |= 0x20u;
                      if ((unint64_t)v29 < v16 && *v29 == 61)
                      {
                        while (1)
                        {
                          *((void *)this + 1) = v29 + 1;
LABEL_212:
                          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback( this,  v226) & 1) == 0) {
                            return 0LL;
                          }
                          unsigned int v90 = v226[0];
                          int v91 = *(_DWORD *)(a1 + 104);
                          if (v91 == *(_DWORD *)(a1 + 108))
                          {
                            sub_10005C1F0(v221, v91 + 1);
                            int v91 = *(_DWORD *)(a1 + 104);
                          }

                          uint64_t v92 = *(void *)(a1 + 96);
                          int v93 = v91 + 1;
                          *(_DWORD *)(a1 + 104) = v91 + 1;
                          *(_DWORD *)(v92 + 4LL * v91) = v90;
                          uint64_t v94 = *((void *)this + 1);
                          int v95 = *((_DWORD *)this + 4) - v94;
                          if (v95 >= 1)
                          {
                            signed int v96 = v95 / 5u;
                            int v97 = v96 >= *(_DWORD *)(a1 + 108) - v93 ? *(_DWORD *)(a1 + 108) - v93 : v96;
                            if (v97 >= 1)
                            {
                              int v98 = 0;
                              while (*(_BYTE *)v94 == 61)
                              {
                                int v99 = *(_DWORD *)(v94 + 1);
                                if (v93 >= *(_DWORD *)(a1 + 108))
                                {
                                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-89cb-6e654a286000/Applications/ Xcode.app/Contents/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18 .2.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h",  602LL);
                                  uint64_t v100 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (size()) < (Capacity()): ");
                                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v225, v100);
                                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                  int v93 = *(_DWORD *)(a1 + 104);
                                  uint64_t v92 = *(void *)(a1 + 96);
                                }

                                *(_DWORD *)(a1 + 104) = v93 + 1;
                                *(_DWORD *)(v92 + 4LL * v93) = v99;
                                ++v98;
                                v94 += 5LL;
                                ++v93;
                                if (v97 == v98)
                                {
                                  int v98 = v97;
                                  break;
                                }
                              }

                              if (v98) {
                                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v98);
                              }
                            }
                          }

  char v27 = *(void *)(v5 + 176);
  if (!v27) {
    char v27 = *(void *)(qword_100800158 + 176);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16,  v27,  a2,  a4);
  unsigned int v6 = *(_DWORD *)(v5 + 392);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_101;
  }

  uint64_t v39 = (unsigned int *)*((void *)this + 11);
  if (!v39) {
    uint64_t v39 = *(unsigned int **)(qword_100800158 + 88);
  }
  *(_BYTE *)uint64_t v4 = 90;
  uint64_t v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v39[8];
  if (v40 > 0x7F)
  {
    int v41 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v40,  (int)v4 + 1,  a3);
  }

  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v40;
    int v41 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  }

  uint64_t v4 = sub_100063920((wireless_diagnostics::google::protobuf::internal::WireFormat *)v39, v41, a3);
  uint64_t v26 = *((_DWORD *)this + 98);
  if ((v26 & 0x800) == 0)
  {
LABEL_50:
    if ((v26 & 0x1000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_107;
  }

  int v51 = *(void *)(a1 + 104);
  if (!v51) {
    int v51 = *(void *)(qword_100800158 + 104);
  }
  int v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100064D74(v51, a2);
  uint64_t v53 = (int)v52;
  else {
    int v54 = 1;
  }
  uint64_t v4 = (v4 + v53 + v54 + 1);
  char v3 = *(_DWORD *)(a1 + 392);
  if ((v3 & 0x2000) == 0)
  {
LABEL_68:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_107;
  }

  signed int v49 = *(void *)(a1 + 104);
  if (!v49) {
    signed int v49 = *(void *)(qword_1008001F0 + 104);
  }
  int v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000871C4(v49, a2);
  int v51 = (int)v50;
  else {
    int v52 = 1;
  }
  uint64_t v4 = (v4 + v51 + v52 + 1);
  char v3 = *(_DWORD *)(a1 + 252);
  if ((v3 & 0x2000) == 0)
  {
LABEL_68:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_107;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9,  *(_DWORD *)(v5 + 60),  a2,  a4);
  unsigned int v6 = *(_DWORD *)(v5 + 468);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_97;
  }

  int v44 = *((void *)this + 20);
  *(_WORD *)uint64_t v4 = 449;
  *(void *)((char *)v4 + 2) = v44;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
  unint64_t v36 = *((_DWORD *)this + 117);
  if ((v36 & 0x1000000) == 0)
  {
LABEL_85:
    if ((v36 & 0x2000000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_97;
  }

  LOBYTE(v26) = *(_BYTE *)(a1 + 304);
  if (!(_BYTE)v26) {
    goto LABEL_102;
  }
  if ((*(_BYTE *)(a1 + 304) & 1) != 0)
  {
    int v5 = v5
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 256),  (unint64_t)a2)
       + 2;
    uint64_t v26 = *(_DWORD *)(a1 + 304);
    if ((v26 & 2) == 0)
    {
LABEL_98:
      if ((v26 & 4) == 0) {
        goto LABEL_99;
      }
      goto LABEL_108;
    }
  }

  else if ((*(_BYTE *)(a1 + 304) & 2) == 0)
  {
    goto LABEL_98;
  }

  int v5 = v5
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 264),  (unint64_t)a2)
     + 2;
  uint64_t v26 = *(_DWORD *)(a1 + 304);
  if ((v26 & 4) == 0)
  {
LABEL_99:
    if ((v26 & 8) == 0) {
      goto LABEL_100;
    }
LABEL_109:
    int v5 = v5
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 280),  (unint64_t)a2)
       + 2;
    if ((*(_DWORD *)(a1 + 304) & 0x10) == 0) {
      goto LABEL_102;
    }
    goto LABEL_101;
  }

  uint64_t v53 = *(void *)(a1 + 112);
  if (!v53) {
    uint64_t v53 = *(void *)(qword_100800498 + 112);
  }
  int v54 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000E5590(v53, a2);
  uint64_t v55 = (int)v54;
  else {
    int v56 = 1;
  }
  uint64_t v4 = (v4 + v55 + v56 + 1);
  char v3 = *(_DWORD *)(a1 + 148);
  if ((v3 & 0x2000) == 0)
  {
LABEL_68:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_107;
  }

                unint64_t v15 = (_BYTE *)*((void *)this + 1);
                uint64_t v40 = *v15;
                if (v40 != 65)
                {
                  if (v40 == 73)
                  {
                    while (1)
                    {
                      *((void *)this + 1) = v15 + 1;
LABEL_99:
                      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  v70) & 1) == 0) {
                        return 0LL;
                      }
                      int v41 = v70[0];
                      int v42 = *(_DWORD *)(a1 + 104);
                      if (v42 == *(_DWORD *)(a1 + 108))
                      {
                        sub_10005C268(v67, v42 + 1);
                        int v42 = *(_DWORD *)(a1 + 104);
                      }

                      unsigned int v43 = *(void *)(a1 + 96);
                      int v44 = v42 + 1;
                      *(_DWORD *)(a1 + 104) = v42 + 1;
                      *(void *)(v43 + 8LL * v42) = v41;
                      uint64_t v45 = *((void *)this + 1);
                      int v46 = *((_DWORD *)this + 4) - v45;
                      if (v46 >= 1)
                      {
                        uint64_t v47 = v46 / 9u;
                        int v48 = v47 >= *(_DWORD *)(a1 + 108) - v44 ? *(_DWORD *)(a1 + 108) - v44 : v47;
                        if (v48 >= 1)
                        {
                          signed int v49 = 0;
                          while (*(_BYTE *)v45 == 73)
                          {
                            int v50 = *(void *)(v45 + 1);
                            if (v44 >= *(_DWORD *)(a1 + 108))
                            {
                              wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v70,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-89cb-6e654a286000/Applications/Xcod e.app/Contents/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Inter nal.sdk/usr/local/include/google/protobuf/repeated_field.h",  602LL);
                              int v51 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v70,  "CHECK failed: (size()) < (Capacity()): ");
                              wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v69, v51);
                              wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v70);
                              int v44 = *(_DWORD *)(a1 + 104);
                              unsigned int v43 = *(void *)(a1 + 96);
                            }

                            *(_DWORD *)(a1 + 104) = v44 + 1;
                            *(void *)(v43 + 8LL * v44) = v50;
                            ++v49;
                            v45 += 9LL;
                            ++v44;
                            if (v48 == v49)
                            {
                              signed int v49 = v48;
                              break;
                            }
                          }

                          if (v49) {
                            wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v49);
                          }
                        }
                      }

  return p_nbammsSession;
}

LABEL_228:
                          BOOL v29 = (_BYTE *)*((void *)this + 1);
                          unint64_t v18 = *((void *)this + 2);
                          int v101 = *v29;
                          if (v101 != 61)
                          {
                            if (v101 == 64)
                            {
                              int v19 = v29 + 1;
                              *((void *)this + 1) = v19;
LABEL_232:
                              if ((unint64_t)v19 >= v18 || *v19 < 0)
                              {
                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback( this,  v213);
                                if (!(_DWORD)result) {
                                  return result;
                                }
                                uint64_t v102 = (_BYTE *)*((void *)this + 1);
                                unint64_t v18 = *((void *)this + 2);
                              }

                              else
                              {
                                *NSErrorUserInfoKey v213 = *v19;
                                uint64_t v102 = v19 + 1;
                                *((void *)this + 1) = v102;
                              }

                              int v20 = *(_DWORD *)(a1 + 284) | 0x80;
                              *(_DWORD *)(a1 + 284) = v20;
                              if ((unint64_t)v102 < v18 && *v102 == 74)
                              {
                                *((void *)this + 1) = v102 + 1;
LABEL_240:
                                *(_DWORD *)(a1 + 284) = v20 | 0x100;
                                __int128 v103 = *(void **)(a1 + 120);
                                if (v103 == (void *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
                                {
                                  __int128 v103 = operator new(0x18uLL);
                                  v103[1] = 0LL;
                                  v103[2] = 0LL;
                                  *__int128 v103 = 0LL;
                                  *(void *)(a1 + 120) = v103;
                                }

                                uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes( this,  v103);
                                if (!(_DWORD)result) {
                                  return result;
                                }
                                uint64_t v104 = (_BYTE *)*((void *)this + 1);
                                unint64_t v21 = *((void *)this + 2);
                                if ((unint64_t)v104 < v21 && *v104 == 80)
                                {
                                  for (j = v104 + 1; ; j = (char *)(v116 + 1))
                                  {
                                    *((void *)this + 1) = j;
LABEL_247:
                                    if ((unint64_t)j >= v21 || *j < 0)
                                    {
                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v226);
                                      if (!(_DWORD)result) {
                                        return result;
                                      }
                                      unsigned int v105 = v226[0];
                                    }

                                    else
                                    {
                                      unsigned int v105 = *j;
                                      *((void *)this + 1) = j + 1;
                                    }

                                    int v106 = *(_DWORD *)(a1 + 136);
                                    if (v106 == *(_DWORD *)(a1 + 140))
                                    {
                                      sub_10005C1F0(v217, v106 + 1);
                                      int v106 = *(_DWORD *)(a1 + 136);
                                    }

                                    uint64_t v107 = *(void *)(a1 + 128);
                                    *(_DWORD *)(a1 + 136) = v106 + 1;
                                    *(_DWORD *)(v107 + 4LL * v106) = v105;
                                    int v108 = *(_DWORD *)(a1 + 140) - *(_DWORD *)(a1 + 136);
                                    if (v108 >= 1)
                                    {
                                      int v109 = v108 + 1;
                                      do
                                      {
                                        __int128 v110 = (_BYTE *)*((void *)this + 1);
                                        unint64_t v111 = *((void *)this + 2);
                                        *((void *)this + 1) = v110 + 1;
                                        if ((unint64_t)(v110 + 1) >= v111 || (char)v110[1] < 0)
                                        {
                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v226);
                                          if (!(_DWORD)result) {
                                            return result;
                                          }
                                          unsigned int v112 = v226[0];
                                        }

                                        else
                                        {
                                          unsigned int v112 = v110[1];
                                          *((void *)this + 1) = v110 + 2;
                                        }

                                        int v113 = *(_DWORD *)(a1 + 136);
                                        if (v113 >= *(_DWORD *)(a1 + 140))
                                        {
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-89cb-6e654a286000/Appli cations/Xcode.app/Contents/Developer/Platforms/AppleTVOS.platform/Developer/ SDKs/AppleTVOS18.2.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h",  602LL);
                                          uint64_t v114 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (size()) < (Capacity()): ");
                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=( &v225,  v114);
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                          int v113 = *(_DWORD *)(a1 + 136);
                                        }

                                        uint64_t v115 = *(void *)(a1 + 128);
                                        *(_DWORD *)(a1 + 136) = v113 + 1;
                                        *(_DWORD *)(v115 + 4LL * v113) = v112;
                                        --v109;
                                      }

                                      while (v109 > 1);
                                    }

LABEL_266:
                                    uint64_t v116 = (unsigned __int8 *)*((void *)this + 1);
                                    unint64_t v21 = *((void *)this + 2);
                                    int v117 = *v116;
                                    if (v117 == 93)
                                    {
                                      while (1)
                                      {
                                        *((void *)this + 1) = v116 + 1;
LABEL_271:
                                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback( this,  v226) & 1) == 0) {
                                          return 0LL;
                                        }
                                        unsigned int v118 = v226[0];
                                        int v119 = *(_DWORD *)(a1 + 152);
                                        if (v119 == *(_DWORD *)(a1 + 156))
                                        {
                                          sub_10005C1F0(v222, v119 + 1);
                                          int v119 = *(_DWORD *)(a1 + 152);
                                        }

                                        uint64_t v120 = *(void *)(a1 + 144);
                                        int v121 = v119 + 1;
                                        *(_DWORD *)(a1 + 152) = v119 + 1;
                                        *(_DWORD *)(v120 + 4LL * v119) = v118;
                                        uint64_t v122 = *((void *)this + 1);
                                        int v123 = *((_DWORD *)this + 4) - v122;
                                        if (v123 >= 1)
                                        {
                                          signed int v124 = v123 / 5u;
                                          int v125 = v124 >= *(_DWORD *)(a1 + 156) - v121
                                               ? *(_DWORD *)(a1 + 156) - v121
                                               : v124;
                                          if (v125 >= 1)
                                          {
                                            int v126 = 0;
                                            while (*(_BYTE *)v122 == 93)
                                            {
                                              int v127 = *(_DWORD *)(v122 + 1);
                                              if (v121 >= *(_DWORD *)(a1 + 156))
                                              {
                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-89cb-6e654a286000 /Applications/Xcode.app/Contents/Developer/Platforms/AppleTVOS.platfor m/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/local/include/google/p rotobuf/repeated_field.h",  602LL);
                                                uint64_t v128 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (size()) < (Capacity()): ");
                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=( &v225,  v128);
                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                int v121 = *(_DWORD *)(a1 + 152);
                                                uint64_t v120 = *(void *)(a1 + 144);
                                              }

                                              *(_DWORD *)(a1 + 152) = v121 + 1;
                                              *(_DWORD *)(v120 + 4LL * v121) = v127;
                                              ++v126;
                                              v122 += 5LL;
                                              ++v121;
                                              if (v125 == v126)
                                              {
                                                int v126 = v125;
                                                break;
                                              }
                                            }

                                            if (v126) {
                                              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip( this,  5 * v126);
                                            }
                                          }
                                        }

LABEL_287:
                                        uint64_t v116 = (unsigned __int8 *)*((void *)this + 1);
                                        unint64_t v24 = *((void *)this + 2);
                                        int v129 = *v116;
                                        if (v129 != 93)
                                        {
                                          if (v129 == 96)
                                          {
                                            for (k = (char *)(v116 + 1); ; k = (char *)(v141 + 1))
                                            {
                                              *((void *)this + 1) = k;
LABEL_292:
                                              if ((unint64_t)k >= v24 || *k < 0)
                                              {
                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v226);
                                                if (!(_DWORD)result) {
                                                  return result;
                                                }
                                                unsigned int v130 = v226[0];
                                              }

                                              else
                                              {
                                                unsigned int v130 = *k;
                                                *((void *)this + 1) = k + 1;
                                              }

                                              int v131 = *(_DWORD *)(a1 + 168);
                                              if (v131 == *(_DWORD *)(a1 + 172))
                                              {
                                                sub_10005C1F0(v220, v131 + 1);
                                                int v131 = *(_DWORD *)(a1 + 168);
                                              }

                                              uint64_t v132 = *(void *)(a1 + 160);
                                              *(_DWORD *)(a1 + 16std::iostream::~basic_iostream(v2, v3 + 8) = v131 + 1;
                                              *(_DWORD *)(v132 + 4LL * v131) = v130;
                                              int v133 = *(_DWORD *)(a1 + 172) - *(_DWORD *)(a1 + 168);
                                              if (v133 >= 1)
                                              {
                                                int v134 = v133 + 1;
                                                do
                                                {
                                                  v135 = (_BYTE *)*((void *)this + 1);
                                                  unint64_t v136 = *((void *)this + 2);
                                                  *((void *)this + 1) = v135 + 1;
                                                  if ((unint64_t)(v135 + 1) >= v136 || (char)v135[1] < 0)
                                                  {
                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v226);
                                                    if (!(_DWORD)result) {
                                                      return result;
                                                    }
                                                    unsigned int v137 = v226[0];
                                                  }

                                                  else
                                                  {
                                                    unsigned int v137 = v135[1];
                                                    *((void *)this + 1) = v135 + 2;
                                                  }

                                                  int v138 = *(_DWORD *)(a1 + 168);
                                                  if (v138 >= *(_DWORD *)(a1 + 172))
                                                  {
                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-89cb-6e654a28 6000/Applications/Xcode.app/Contents/Developer/Platforms/AppleTVOS .platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/local/incl ude/google/protobuf/repeated_field.h",  602LL);
                                                    uint64_t v139 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (size()) < (Capacity()): ");
                                                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=( &v225,  v139);
                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                    int v138 = *(_DWORD *)(a1 + 168);
                                                  }

                                                  uint64_t v140 = *(void *)(a1 + 160);
                                                  *(_DWORD *)(a1 + 16std::iostream::~basic_iostream(v2, v3 + 8) = v138 + 1;
                                                  *(_DWORD *)(v140 + 4LL * v13std::iostream::~basic_iostream(v2, v3 + 8) = v137;
                                                  --v134;
                                                }

                                                while (v134 > 1);
                                              }

LABEL_311:
                                              unsigned __int16 v141 = (unsigned __int8 *)*((void *)this + 1);
                                              unint64_t v24 = *((void *)this + 2);
                                              int v142 = *v141;
                                              if (v142 == 104)
                                              {
                                                uint64_t v25 = v141 + 1;
                                                *((void *)this + 1) = v25;
LABEL_316:
                                                if ((unint64_t)v25 >= v24 || (char)*v25 < 0)
                                                {
                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback( this,  v212);
                                                  if (!(_DWORD)result) {
                                                    return result;
                                                  }
                                                  int v41 = (unsigned __int8 *)*((void *)this + 1);
                                                  unint64_t v24 = *((void *)this + 2);
                                                }

                                                else
                                                {
                                                  unint64_t *v212 = *v25;
                                                  int v41 = v25 + 1;
                                                  *((void *)this + 1) = v41;
                                                }

                                                *(_DWORD *)(a1 + 284) |= 0x1000u;
                                                if ((unint64_t)v41 < v24)
                                                {
                                                  int v42 = *v41;
                                                  while (v42 == 112)
                                                  {
                                                    uint64_t v26 = (char *)(v41 + 1);
                                                    *((void *)this + 1) = v26;
LABEL_107:
                                                    if ((unint64_t)v26 >= v24 || *v26 < 0)
                                                    {
                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v226);
                                                      if (!(_DWORD)result) {
                                                        return result;
                                                      }
                                                      unsigned int v30 = v226[0];
                                                    }

                                                    else
                                                    {
                                                      unsigned int v30 = *v26;
                                                      *((void *)this + 1) = v26 + 1;
                                                    }

                                                    int v31 = *(_DWORD *)(a1 + 192);
                                                    if (v31 == *(_DWORD *)(a1 + 196))
                                                    {
                                                      sub_10005C1F0(v216, v31 + 1);
                                                      int v31 = *(_DWORD *)(a1 + 192);
                                                    }

                                                    uint64_t v32 = *(void *)(a1 + 184);
                                                    *(_DWORD *)(a1 + 192) = v31 + 1;
                                                    *(_DWORD *)(v32 + 4LL * v31) = v30;
                                                    int v33 = *(_DWORD *)(a1 + 196) - *(_DWORD *)(a1 + 192);
                                                    if (v33 >= 1)
                                                    {
                                                      int v34 = v33 + 1;
                                                      do
                                                      {
                                                        unsigned int v35 = (_BYTE *)*((void *)this + 1);
                                                        unint64_t v36 = *((void *)this + 2);
                                                        *((void *)this + 1) = v35 + 1;
                                                        if ((unint64_t)(v35 + 1) >= v36 || (char)v35[1] < 0)
                                                        {
                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v226);
                                                          if (!(_DWORD)result) {
                                                            return result;
                                                          }
                                                          unsigned int v37 = v226[0];
                                                        }

                                                        else
                                                        {
                                                          unsigned int v37 = v35[1];
                                                          *((void *)this + 1) = v35 + 2;
                                                        }

                                                        int v38 = *(_DWORD *)(a1 + 192);
                                                        if (v38 >= *(_DWORD *)(a1 + 196))
                                                        {
                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-89cb-6e 654a286000/Applications/Xcode.app/Contents/Developer/Platfor ms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal. sdk/usr/local/include/google/protobuf/repeated_field.h",  602LL);
                                                          uint64_t v39 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (size()) < (Capacity()): ");
                                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=( &v225,  v39);
                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                          int v38 = *(_DWORD *)(a1 + 192);
                                                        }

                                                        uint64_t v40 = *(void *)(a1 + 184);
                                                        *(_DWORD *)(a1 + 192) = v38 + 1;
                                                        *(_DWORD *)(v40 + 4LL * v3std::iostream::~basic_iostream(v2, v3 + 8) = v37;
                                                        --v34;
                                                      }

                                                      while (v34 > 1);
                                                    }

LABEL_126:
                                                    int v41 = (unsigned __int8 *)*((void *)this + 1);
                                                    unint64_t v24 = *((void *)this + 2);
                                                    int v42 = *v41;
                                                    if (v42 == 125)
                                                    {
                                                      do
                                                      {
                                                        *((void *)this + 1) = v41 + 1;
LABEL_326:
                                                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback( this,  v226) & 1) == 0) {
                                                          return 0LL;
                                                        }
                                                        unsigned int v143 = v226[0];
                                                        int v144 = *(_DWORD *)(a1 + 208);
                                                        if (v144 == *(_DWORD *)(a1 + 212))
                                                        {
                                                          sub_10005C1F0(v224, v144 + 1);
                                                          int v144 = *(_DWORD *)(a1 + 208);
                                                        }

                                                        uint64_t v145 = *(void *)(a1 + 200);
                                                        int v146 = v144 + 1;
                                                        *(_DWORD *)(a1 + 20std::iostream::~basic_iostream(v2, v3 + 8) = v144 + 1;
                                                        *(_DWORD *)(v145 + 4LL * v144) = v143;
                                                        uint64_t v147 = *((void *)this + 1);
                                                        int v148 = *((_DWORD *)this + 4) - v147;
                                                        if (v148 >= 1)
                                                        {
                                                          signed int v149 = v148 / 5u;
                                                          int v150 = v149 >= *(_DWORD *)(a1 + 212) - v146
                                                               ? *(_DWORD *)(a1 + 212) - v146
                                                               : v149;
                                                          if (v150 >= 1)
                                                          {
                                                            int v151 = 0;
                                                            while (*(_BYTE *)v147 == 125)
                                                            {
                                                              int v152 = *(_DWORD *)(v147 + 1);
                                                              if (v146 >= *(_DWORD *)(a1 + 212))
                                                              {
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-8 9cb-6e654a286000/Applications/Xcode.app/Contents/Devel oper/Platforms/AppleTVOS.platform/Developer/SDKs/Apple TVOS18.2.Internal.sdk/usr/local/include/google/protobu f/repeated_field.h",  602LL);
                                                                uint64_t v153 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (size()) < (Capacity()): ");
                                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=( &v225,  v153);
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                int v146 = *(_DWORD *)(a1 + 208);
                                                                uint64_t v145 = *(void *)(a1 + 200);
                                                              }

                                                              *(_DWORD *)(a1 + 20std::iostream::~basic_iostream(v2, v3 + 8) = v146 + 1;
                                                              *(_DWORD *)(v145 + 4LL * v146) = v152;
                                                              ++v151;
                                                              v147 += 5LL;
                                                              ++v146;
                                                              if (v150 == v151)
                                                              {
                                                                int v151 = v150;
                                                                break;
                                                              }
                                                            }

                                                            if (v151) {
                                                              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip( this,  5 * v151);
                                                            }
                                                          }
                                                        }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29,  *(_DWORD *)(v5 + 292),  a2,  a4);
  int v9 = *(_DWORD *)(v5 + 472);
  if ((v9 & 0x200) == 0)
  {
LABEL_46:
    if ((v9 & 0x400) == 0) {
      goto LABEL_47;
    }
    goto LABEL_128;
  }

  signed int v61 = *((_DWORD *)this + 118);
  if ((v61 & 4) != 0)
  {
    int v62 = *((void *)this + 31);
    *(_WORD *)uint64_t v4 = 665;
    *(void *)((char *)v4 + 2) = v62;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
    signed int v61 = *((_DWORD *)this + 118);
    if ((v61 & 8) == 0)
    {
LABEL_128:
      if ((v61 & 0x10) == 0) {
        goto LABEL_129;
      }
      goto LABEL_135;
    }
  }

  else if ((v61 & 8) == 0)
  {
    goto LABEL_128;
  }

  int v63 = *((void *)this + 32);
  *(_WORD *)uint64_t v4 = 673;
  *(void *)((char *)v4 + 2) = v63;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
  signed int v61 = *((_DWORD *)this + 118);
  if ((v61 & 0x10) == 0)
  {
LABEL_129:
    if ((v61 & 0x20) == 0) {
      goto LABEL_130;
    }
    goto LABEL_136;
  }

LABEL_342:
                                                        int v41 = (unsigned __int8 *)*((void *)this + 1);
                                                        unint64_t v154 = *((void *)this + 2);
                                                      }

                                                      while ((unint64_t)v41 < v154 && *v41 == 125);
                                                      if ((int)v154 - (int)v41 >= 2 && *v41 == 133 && v41[1] == 1)
                                                      {
                                                        while (1)
                                                        {
                                                          *((void *)this + 1) = v41 + 2;
LABEL_348:
                                                          if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x85,  TagFallback) != 2)
                                                          {
                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef-89cb- 6e654a286000/Applications/Xcode.app/Contents/Developer/Pla tforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Int ernal.sdk/usr/local/include/google/protobuf/wire_format_lite_inl.h",  247LL);
                                                            uint64_t v155 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (UInt32Size(tag)) == (tag_size): ");
                                                            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=( &v225,  v155);
                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                          }

                                                          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback( this,  v226) & 1) == 0) {
                                                            return 0LL;
                                                          }
                                                          unsigned int v156 = v226[0];
                                                          int v157 = *(_DWORD *)(a1 + 224);
                                                          if (v157 == *(_DWORD *)(a1 + 228))
                                                          {
                                                            sub_10005C1F0(v210, v157 + 1);
                                                            int v157 = *(_DWORD *)(a1 + 224);
                                                          }

                                                          uint64_t v158 = *(void *)(a1 + 216);
                                                          int v159 = v157 + 1;
                                                          *(_DWORD *)(a1 + 224) = v157 + 1;
                                                          *(_DWORD *)(v158 + 4LL * v157) = v156;
                                                          v160 = (unsigned __int8 *)*((void *)this + 1);
                                                          int v161 = *((_DWORD *)this + 4) - (_DWORD)v160;
                                                          if (v161 >= 1)
                                                          {
                                                            signed int v162 = v161 / 6u;
                                                            int v163 = v162 >= *(_DWORD *)(a1 + 228) - v159
                                                                 ? *(_DWORD *)(a1 + 228) - v159
                                                                 : v162;
                                                            if (v163 >= 1)
                                                            {
                                                              int v164 = 0;
                                                              while (*v160 == 133 && v160[1] == 1)
                                                              {
                                                                int v165 = *(_DWORD *)(v160 + 2);
                                                                if (v159 >= *(_DWORD *)(a1 + 228))
                                                                {
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef -89cb-6e654a286000/Applications/Xcode.app/Contents/D eveloper/Platforms/AppleTVOS.platform/Developer/SDKs /AppleTVOS18.2.Internal.sdk/usr/local/include/google /protobuf/repeated_field.h",  602LL);
                                                                  uint64_t v166 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (size()) < (Capacity()): ");
                                                                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=( &v225,  v166);
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                  int v159 = *(_DWORD *)(a1 + 224);
                                                                  uint64_t v158 = *(void *)(a1 + 216);
                                                                }

                                                                *(_DWORD *)(a1 + 224) = v159 + 1;
                                                                *(_DWORD *)(v158 + 4LL * v159) = v165;
                                                                ++v164;
                                                                v160 += 6;
                                                                ++v159;
                                                                if (v163 == v164)
                                                                {
                                                                  int v164 = v163;
                                                                  break;
                                                                }
                                                              }

                                                              if (v164) {
                                                                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip( this,  6 * v164);
                                                              }
                                                            }
                                                          }

LABEL_367:
                                                          int v41 = (unsigned __int8 *)*((void *)this + 1);
                                                          int v167 = *v41;
                                                          if (v167 == 141)
                                                          {
                                                            if (v41[1] == 1)
                                                            {
                                                              while (1)
                                                              {
                                                                *((void *)this + 1) = v41 + 2;
LABEL_374:
                                                                if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x8D,  TagFallback) != 2)
                                                                {
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee5-11ef -89cb-6e654a286000/Applications/Xcode.app/Contents/D eveloper/Platforms/AppleTVOS.platform/Developer/SDKs /AppleTVOS18.2.Internal.sdk/usr/local/include/google /protobuf/wire_format_lite_inl.h",  247LL);
                                                                  uint64_t v168 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (UInt32Size(tag)) == (tag_size): ");
                                                                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=( &v225,  v168);
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                }

                                                                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback( this,  v226) & 1) == 0) {
                                                                  return 0LL;
                                                                }
                                                                unsigned int v169 = v226[0];
                                                                int v170 = *(_DWORD *)(a1 + 240);
                                                                if (v170 == *(_DWORD *)(a1 + 244))
                                                                {
                                                                  sub_10005C1F0(v209, v170 + 1);
                                                                  int v170 = *(_DWORD *)(a1 + 240);
                                                                }

                                                                uint64_t v171 = *(void *)(a1 + 232);
                                                                int v172 = v170 + 1;
                                                                *(_DWORD *)(a1 + 240) = v170 + 1;
                                                                *(_DWORD *)(v171 + 4LL * v170) = v169;
                                                                v173 = (unsigned __int8 *)*((void *)this + 1);
                                                                int v174 = *((_DWORD *)this + 4) - (_DWORD)v173;
                                                                if (v174 >= 1)
                                                                {
                                                                  signed int v175 = v174 / 6u;
                                                                  int v176 = v175 >= *(_DWORD *)(a1 + 244) - v172
                                                                       ? *(_DWORD *)(a1 + 244) - v172
                                                                       : v175;
                                                                  if (v176 >= 1)
                                                                  {
                                                                    int v177 = 0;
                                                                    while (*v173 == 141 && v173[1] == 1)
                                                                    {
                                                                      int v178 = *(_DWORD *)(v173 + 2);
                                                                      if (v172 >= *(_DWORD *)(a1 + 244))
                                                                      {
                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee 5-11ef-89cb-6e654a286000/Applications/Xcode.ap p/Contents/Developer/Platforms/AppleTVOS.platf orm/Developer/SDKs/AppleTVOS18.2.Internal.sdk/ usr/local/include/google/protobuf/repeated_field.h",  602LL);
                                                                        uint64_t v179 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (size()) < (Capacity()): ");
                                                                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=( &v225,  v179);
                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                        int v172 = *(_DWORD *)(a1 + 240);
                                                                        uint64_t v171 = *(void *)(a1 + 232);
                                                                      }

                                                                      *(_DWORD *)(a1 + 240) = v172 + 1;
                                                                      *(_DWORD *)(v171 + 4LL * v172) = v178;
                                                                      ++v177;
                                                                      v173 += 6;
                                                                      ++v172;
                                                                      if (v176 == v177)
                                                                      {
                                                                        int v177 = v176;
                                                                        break;
                                                                      }
                                                                    }

                                                                    if (v177) {
                                                                      wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip( this,  6 * v177);
                                                                    }
                                                                  }
                                                                }

LABEL_393:
                                                                int v41 = (unsigned __int8 *)*((void *)this + 1);
                                                                int v180 = *v41;
                                                                if (v180 == 145)
                                                                {
                                                                  if (v41[1] == 1)
                                                                  {
                                                                    while (1)
                                                                    {
                                                                      *((void *)this + 1) = v41 + 2;
LABEL_400:
                                                                      if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x91,  TagFallback) != 2)
                                                                      {
                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9ee 5-11ef-89cb-6e654a286000/Applications/Xcode.ap p/Contents/Developer/Platforms/AppleTVOS.platf orm/Developer/SDKs/AppleTVOS18.2.Internal.sdk/ usr/local/include/google/protobuf/wire_format_lite_inl.h",  247LL);
                                                                        uint64_t v181 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (UInt32Size(tag)) == (tag_size): ");
                                                                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=( &v225,  v181);
                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                      }

                                                                      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v226) & 1) == 0) {
                                                                        return 0LL;
                                                                      }
                                                                      uint64_t v182 = *(void *)v226;
                                                                      int v183 = *(_DWORD *)(a1 + 256);
                                                                      if (v183 == *(_DWORD *)(a1 + 260))
                                                                      {
                                                                        sub_10005C268(v208, v183 + 1);
                                                                        int v183 = *(_DWORD *)(a1 + 256);
                                                                      }

                                                                      uint64_t v184 = *(void *)(a1 + 248);
                                                                      int v185 = v183 + 1;
                                                                      *(_DWORD *)(a1 + 256) = v183 + 1;
                                                                      *(void *)(v184 + 8LL * v183) = v182;
                                                                      NSErrorUserInfoKey v186 = (unsigned __int8 *)*((void *)this + 1);
                                                                      int v187 = *((_DWORD *)this + 4) - (_DWORD)v186;
                                                                      if (v187 >= 1)
                                                                      {
                                                                        signed int v188 = v187 / 0xAu;
                                                                        int v189 = v188 >= *(_DWORD *)(a1 + 260) - v185
                                                                             ? *(_DWORD *)(a1 + 260) - v185
                                                                             : v188;
                                                                        if (v189 >= 1)
                                                                        {
                                                                          int v190 = 0;
                                                                          while (*v186 == 145 && v186[1] == 1)
                                                                          {
                                                                            uint64_t v191 = *(void *)(v186 + 2);
                                                                            if (v185 >= *(_DWORD *)(a1 + 260))
                                                                            {
                                                                              wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a 17-9ee5-11ef-89cb-6e654a286000/Applicati ons/Xcode.app/Contents/Developer/Platfor ms/AppleTVOS.platform/Developer/SDKs/App leTVOS18.2.Internal.sdk/usr/local/includ e/google/protobuf/repeated_field.h",  602LL);
                                                                              uint64_t v192 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (size()) < (Capacity()): ");
                                                                              wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=( &v225,  v192);
                                                                              wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                              int v185 = *(_DWORD *)(a1 + 256);
                                                                              uint64_t v184 = *(void *)(a1 + 248);
                                                                            }

                                                                            *(_DWORD *)(a1 + 256) = v185 + 1;
                                                                            *(void *)(v184 + 8LL * v185) = v191;
                                                                            ++v190;
                                                                            v186 += 10;
                                                                            ++v185;
                                                                            if (v189 == v190)
                                                                            {
                                                                              int v190 = v189;
                                                                              break;
                                                                            }
                                                                          }

                                                                          if (v190) {
                                                                            wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip( this,  10 * v190);
                                                                          }
                                                                        }
                                                                      }

LABEL_419:
                                                                      int v41 = (unsigned __int8 *)*((void *)this + 1);
                                                                      int v193 = *v41;
                                                                      if (v193 == 153) {
                                                                        break;
                                                                      }
                                                                      if (v193 != 145 || v41[1] != 1) {
                                                                        goto LABEL_2;
                                                                      }
                                                                    }

                                                                    if (v41[1] == 1)
                                                                    {
                                                                      do
                                                                      {
                                                                        *((void *)this + 1) = v41 + 2;
LABEL_426:
                                                                        if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x99,  TagFallback) != 2)
                                                                        {
                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e2a17-9 ee5-11ef-89cb-6e654a286000/Applications/Xcod e.app/Contents/Developer/Platforms/AppleTVOS .platform/Developer/SDKs/AppleTVOS18.2.Inter nal.sdk/usr/local/include/google/protobuf/wi re_format_lite_inl.h",  247LL);
                                                                          uint64_t v194 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (UInt32Size(tag)) == (tag_size): ");
                                                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=( &v225,  v194);
                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                        }

                                                                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v226) & 1) == 0) {
                                                                          return 0LL;
                                                                        }
                                                                        uint64_t v195 = *(void *)v226;
                                                                        int v196 = *(_DWORD *)(a1 + 272);
                                                                        if (v196 == *(_DWORD *)(a1 + 276))
                                                                        {
                                                                          sub_10005C268(v211, v196 + 1);
                                                                          int v196 = *(_DWORD *)(a1 + 272);
                                                                        }

                                                                        uint64_t v197 = *(void *)(a1 + 264);
                                                                        int v198 = v196 + 1;
                                                                        *(_DWORD *)(a1 + 272) = v196 + 1;
                                                                        *(void *)(v197 + 8LL * v196) = v195;
                                                                        v199 = (unsigned __int8 *)*((void *)this + 1);
                                                                        int v200 = *((_DWORD *)this + 4) - (_DWORD)v199;
                                                                        if (v200 >= 1)
                                                                        {
                                                                          signed int v201 = v200 / 0xAu;
                                                                          int v202 = v201 >= *(_DWORD *)(a1 + 276) - v198
                                                                               ? *(_DWORD *)(a1 + 276) - v198
                                                                               : v201;
                                                                          if (v202 >= 1)
                                                                          {
                                                                            int v203 = 0;
                                                                            while (*v199 == 153 && v199[1] == 1)
                                                                            {
                                                                              uint64_t v204 = *(void *)(v199 + 2);
                                                                              if (v198 >= *(_DWORD *)(a1 + 276))
                                                                              {
                                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v226,  3LL,  "/AppleInternal/Library/BuildRoots/ff2e 2a17-9ee5-11ef-89cb-6e654a286000/Appli cations/Xcode.app/Contents/Developer/P latforms/AppleTVOS.platform/Developer/ SDKs/AppleTVOS18.2.Internal.sdk/usr/lo cal/include/google/protobuf/repeated_field.h",  602LL);
                                                                                uint64_t v205 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v226,  "CHECK failed: (size()) < (Capacity()): ");
                                                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=( &v225,  v205);
                                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v226);
                                                                                int v198 = *(_DWORD *)(a1 + 272);
                                                                                uint64_t v197 = *(void *)(a1 + 264);
                                                                              }

                                                                              *(_DWORD *)(a1 + 272) = v198 + 1;
                                                                              *(void *)(v197 + 8LL * v19std::iostream::~basic_iostream(v2, v3 + 8) = v204;
                                                                              ++v203;
                                                                              v199 += 10;
                                                                              ++v198;
                                                                              if (v202 == v203)
                                                                              {
                                                                                int v203 = v202;
                                                                                break;
                                                                              }
                                                                            }

                                                                            if (v203) {
                                                                              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip( this,  10 * v203);
                                                                            }
                                                                          }
                                                                        }

LABEL_445:
                                                                        int v41 = (unsigned __int8 *)*((void *)this + 1);
                                                                        v206 = (unsigned __int8 *)*((void *)this + 2);
                                                                      }

                                                                      while ((int)v206 - (int)v41 > 1
                                                                           && *v41 == 153
                                                                           && v41[1] == 1);
                                                                      if (v41 == v206
                                                                        && (*((_DWORD *)this + 11)
                                                                         || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                                                                      {
                                                                        *((_DWORD *)this + std::iostream::~basic_iostream(v2, v3 + 8) = 0;
                                                                        uint64_t result = 1LL;
                                                                        *((_BYTE *)this + 36) = 1;
                                                                        return result;
                                                                      }
                                                                    }
                                                                  }

                                                                  goto LABEL_2;
                                                                }

                                                                if (v180 != 141 || v41[1] != 1) {
                                                                  goto LABEL_2;
                                                                }
                                                              }
                                                            }

                                                            goto LABEL_2;
                                                          }

                                                          if (v167 != 133 || v41[1] != 1) {
                                                            goto LABEL_2;
                                                          }
                                                        }
                                                      }

                                                      goto LABEL_2;
                                                    }
                                                  }
                                                }

                                                goto LABEL_2;
                                              }

                                              if (v142 != 96) {
                                                goto LABEL_2;
                                              }
                                            }
                                          }

                                          goto LABEL_2;
                                        }
                                      }
                                    }

                                    if (v117 != 80) {
                                      goto LABEL_2;
                                    }
                                  }
                                }
                              }
                            }

                            goto LABEL_2;
                          }
                        }
                      }
                    }

                    goto LABEL_2;
                  }
                }
              }

              if (v78 != 32) {
                goto LABEL_2;
              }
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_150;
        }
        if (v9 != 2) {
          goto LABEL_67;
        }
        uint64_t result = sub_10004C598(this, v218);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_166;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_100059B50(this, v219);
          if (!(_DWORD)result) {
            return result;
          }
          goto LABEL_190;
        }

        uint64_t i = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_171;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_195;
        }
        if (v9 != 2) {
          goto LABEL_67;
        }
        uint64_t result = sub_10004C598(this, v223);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_95;
      case 6u:
        int v9 = TagFallback & 7;
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_99;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10004BD70(this, v221);
          if (!(_DWORD)result) {
            return result;
          }
          goto LABEL_228;
        }

        if (v9 == 5) {
          goto LABEL_212;
        }
        goto LABEL_67;
      case 8u:
        int v9 = TagFallback & 7;
        int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_232;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_67;
        }
        int v20 = *(_DWORD *)(a1 + 284);
        goto LABEL_240;
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_100059B50(this, v217);
          if (!(_DWORD)result) {
            return result;
          }
          goto LABEL_266;
        }

        j = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_247;
      case 0xBu:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10004BD70(this, v222);
          if (!(_DWORD)result) {
            return result;
          }
          goto LABEL_287;
        }

        if (v9 == 5) {
          goto LABEL_271;
        }
        goto LABEL_67;
      case 0xCu:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_100059B50(this, v220);
          if (!(_DWORD)result) {
            return result;
          }
          goto LABEL_311;
        }

        k = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_292;
      case 0xDu:
        int v9 = TagFallback & 7;
        uint64_t v25 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_316;
      case 0xEu:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_100059B50(this, v216);
          if (!(_DWORD)result) {
            return result;
          }
          goto LABEL_126;
        }

        uint64_t v26 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_107;
      case 0xFu:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10004BD70(this, v224);
          if (!(_DWORD)result) {
            return result;
          }
          goto LABEL_342;
        }

        if (v9 == 5) {
          goto LABEL_326;
        }
        goto LABEL_67;
      case 0x10u:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10004BD70(this, v210);
          if (!(_DWORD)result) {
            return result;
          }
          goto LABEL_367;
        }

        if (v9 == 5) {
          goto LABEL_348;
        }
        goto LABEL_67;
      case 0x11u:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10004BD70(this, v209);
          if (!(_DWORD)result) {
            return result;
          }
          goto LABEL_393;
        }

        if (v9 == 5) {
          goto LABEL_374;
        }
        goto LABEL_67;
      case 0x12u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_400;
        }
        if (v9 != 2) {
          goto LABEL_67;
        }
        uint64_t result = sub_10004C598(this, v208);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_419;
      case 0x13u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_426;
        }
        if (v9 != 2) {
          goto LABEL_67;
        }
        uint64_t result = sub_10004C598(this, v211);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_445;
      default:
        int v9 = TagFallback & 7;
        goto LABEL_67;
    }
  }

void sub_100059AB0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, char a28)
{
}

uint64_t sub_100059B50(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
    if (!(_DWORD)result) {
      return result;
    }
    unsigned int v5 = v12;
  }

  else
  {
    unsigned int v5 = *v4;
    unsigned int v12 = v5;
    *((void *)this + 1) = v4 + 1;
  }

  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      int v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
        if (!(_DWORD)result) {
          return result;
        }
        unsigned int v9 = v13;
      }

      else
      {
        unsigned int v9 = *v8;
        *((void *)this + 1) = v8 + 1;
      }

      int v10 = *(_DWORD *)(a2 + 8);
      if (v10 == *(_DWORD *)(a2 + 12))
      {
        sub_10005C1F0(a2, v10 + 1);
        int v10 = *(_DWORD *)(a2 + 8);
      }

      uint64_t v11 = *(void *)a2;
      *(_DWORD *)(a2 + std::iostream::~basic_iostream(v2, v3 + 8) = v10 + 1;
      *(_DWORD *)(v11 + 4LL * v10) = v9;
    }

    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }

  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1LL;
}

uint64_t sub_100059C5C( uint64_t this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if ((*(_BYTE *)(this + 284) & 1) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(this + 16),  (unint64_t)a2,  a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v6 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(float *)(*(void *)(v5 + 24) + 4 * v6++),  a3);
    while (v6 < *(int *)(v5 + 32));
  }

  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(double *)(*(void *)(v5 + 40) + 8 * v7++),  a3);
    while (v7 < *(int *)(v5 + 48));
  }

  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v8 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(*(void *)(v5 + 56) + 4 * v8++),  (int)a2,  a4);
    while (v8 < *(int *)(v5 + 64));
  }

  if (*(int *)(v5 + 80) >= 1)
  {
    uint64_t v9 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(*(void *)(v5 + 72) + 8 * v9++),  a3);
    while (v9 < *(int *)(v5 + 80));
  }

  if ((*(_BYTE *)(v5 + 284) & 0x20) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  *(void *)(v5 + 88),  (unint64_t)a2,  a4);
  }
  if (*(int *)(v5 + 104) >= 1)
  {
    uint64_t v10 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(float *)(*(void *)(v5 + 96) + 4 * v10++),  a3);
    while (v10 < *(int *)(v5 + 104));
  }

  int v11 = *(_DWORD *)(v5 + 284);
  if ((v11 & 0x80) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8,  *(void *)(v5 + 112),  (unint64_t)a2,  a4);
    int v11 = *(_DWORD *)(v5 + 284);
  }

  if ((v11 & 0x100) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes(9LL, *(void *)(v5 + 120), a2);
  }
  if (*(int *)(v5 + 136) >= 1)
  {
    uint64_t v12 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA,  *(_DWORD *)(*(void *)(v5 + 128) + 4 * v12++),  (int)a2,  a4);
    while (v12 < *(int *)(v5 + 136));
  }

  if (*(int *)(v5 + 152) >= 1)
  {
    uint64_t v13 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB,  (int)a2,  *(float *)(*(void *)(v5 + 144) + 4 * v13++),  a3);
    while (v13 < *(int *)(v5 + 152));
  }

  if (*(int *)(v5 + 168) >= 1)
  {
    uint64_t v14 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  *(_DWORD *)(*(void *)(v5 + 160) + 4 * v14++),  (int)a2,  a4);
    while (v14 < *(int *)(v5 + 168));
  }

  if ((*(_BYTE *)(v5 + 285) & 0x10) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD,  *(void *)(v5 + 176),  (unint64_t)a2,  a4);
  }
  if (*(int *)(v5 + 192) >= 1)
  {
    uint64_t v15 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE,  *(_DWORD *)(*(void *)(v5 + 184) + 4 * v15++),  (int)a2,  a4);
    while (v15 < *(int *)(v5 + 192));
  }

  if (*(int *)(v5 + 208) >= 1)
  {
    uint64_t v16 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF,  (int)a2,  *(float *)(*(void *)(v5 + 200) + 4 * v16++),  a3);
    while (v16 < *(int *)(v5 + 208));
  }

  if (*(int *)(v5 + 224) >= 1)
  {
    uint64_t v17 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10,  (int)a2,  *(float *)(*(void *)(v5 + 216) + 4 * v17++),  a3);
    while (v17 < *(int *)(v5 + 224));
  }

  if (*(int *)(v5 + 240) >= 1)
  {
    uint64_t v18 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11,  (int)a2,  *(float *)(*(void *)(v5 + 232) + 4 * v18++),  a3);
    while (v18 < *(int *)(v5 + 240));
  }

  if (*(int *)(v5 + 256) >= 1)
  {
    uint64_t v19 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12,  (int)a2,  *(double *)(*(void *)(v5 + 248) + 8 * v19++),  a3);
    while (v19 < *(int *)(v5 + 256));
  }

  if (*(int *)(v5 + 272) >= 1)
  {
    uint64_t v20 = 0LL;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13,  (int)a2,  *(double *)(*(void *)(v5 + 264) + 8 * v20++),  a3);
    while (v20 < *(int *)(v5 + 272));
  }

  uint64_t v23 = *(void **)(v5 + 8);
  int v22 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unint64_t v21 = v23;
  if (v23)
  {
    if (*v21 != v21[1]) {
      return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v22, a2, a3);
    }
  }

  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10005A000( wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if ((*((_BYTE *)this + 284) & 1) != 0)
  {
    uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(_BYTE *)a2 = 8;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v6,  (unint64_t)a2 + 1,  a3);
  }

  if (*((int *)this + 8) >= 1)
  {
    uint64_t v7 = 0LL;
    do
    {
      int v8 = *(_DWORD *)(*((void *)this + 3) + 4 * v7);
      *(_BYTE *)uint64_t v4 = 21;
      *(_DWORD *)((char *)v4 + 1) = v8;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
      ++v7;
    }

    while (v7 < *((int *)this + 8));
  }

  if (*((int *)this + 12) >= 1)
  {
    uint64_t v9 = 0LL;
    do
    {
      uint64_t v10 = *(void *)(*((void *)this + 5) + 8 * v9);
      *(_BYTE *)uint64_t v4 = 25;
      *(void *)((char *)v4 + 1) = v10;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
      ++v9;
    }

    while (v9 < *((int *)this + 12));
  }

  if (*((int *)this + 16) >= 1)
  {
    uint64_t v11 = 0LL;
    while (1)
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 7) + 4 * v11);
      *(_BYTE *)uint64_t v4 = 32;
      unint64_t v13 = (unint64_t)v4 + 1;
      if (v12 > 0x7F)
      {
        uint64_t v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v12,  v13,  a3);
        goto LABEL_16;
      }

      *((_BYTE *)v4 + 1) = (_BYTE)v12;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_17:
    }

    uint64_t v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v12,  v13,  a3);
LABEL_16:
    uint64_t v4 = v14;
    goto LABEL_17;
  }

LABEL_51:
  if (*((int *)this + 38) >= 1)
  {
    uint64_t v32 = 0LL;
    do
    {
      int v33 = *(_DWORD *)(*((void *)this + 18) + 4 * v32);
      *(_BYTE *)uint64_t v4 = 93;
      *(_DWORD *)((char *)v4 + 1) = v33;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
      ++v32;
    }

    while (v32 < *((int *)this + 38));
  }

  if (*((int *)this + 42) >= 1)
  {
    uint64_t v34 = 0LL;
    while (1)
    {
      unsigned int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 20) + 4 * v34);
      *(_BYTE *)uint64_t v4 = 96;
      unint64_t v36 = (unint64_t)v4 + 1;
      if (v35 > 0x7F)
      {
        unsigned int v37 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v35,  v36,  a3);
        goto LABEL_61;
      }

      *((_BYTE *)v4 + 1) = (_BYTE)v35;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_62:
    }

    unsigned int v37 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v35,  v36,  a3);
LABEL_61:
    uint64_t v4 = v37;
    goto LABEL_62;
  }

  if (*((int *)this + 24) >= 1)
  {
    int v24 = 0LL;
    while (1)
    {
      int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 11) + 4 * v24);
      *(_BYTE *)char v3 = 72;
      uint64_t v26 = (unint64_t)v3 + 1;
      if (v25 > 0x7F)
      {
        char v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v25,  v26,  a3);
        goto LABEL_58;
      }

      *((_BYTE *)v3 + 1) = (_BYTE)v25;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
LABEL_59:
    }

    char v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v25,  v26,  a3);
LABEL_58:
    char v3 = v27;
    goto LABEL_59;
  }

  if (!HIBYTE(v14)) {
    goto LABEL_59;
  }
  if ((v14 & 0x1000000) != 0)
  {
    int v66 = *(void *)(a2 + 168);
    *(_DWORD *)(a1 + 468) |= 0x1000000u;
    *(void *)(a1 + 16std::iostream::~basic_iostream(v2, v3 + 8) = v66;
    uint64_t v14 = *(_DWORD *)(a2 + 468);
    if ((v14 & 0x2000000) == 0)
    {
LABEL_54:
      if ((v14 & 0x4000000) == 0) {
        goto LABEL_55;
      }
      goto LABEL_153;
    }
  }

  else if ((v14 & 0x2000000) == 0)
  {
    goto LABEL_54;
  }

  unsigned int v67 = *(void *)(a2 + 176);
  *(_DWORD *)(a1 + 468) |= 0x2000000u;
  *(void *)(a1 + 176) = v67;
  uint64_t v14 = *(_DWORD *)(a2 + 468);
  if ((v14 & 0x4000000) == 0)
  {
LABEL_55:
    if ((v14 & 0x8000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_154;
  }

    uint64_t v26 = *(_DWORD *)(a2 + 48);
    if (v26 > 0x1B || ((1 << v26) & 0xDDB54EF) == 0) {
      sub_10038C1AC();
    }
    *(_DWORD *)(a1 + 160) |= 0x20u;
    *(_DWORD *)(a1 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v26;
    unint64_t v13 = *(_DWORD *)(a2 + 160);
    if ((v13 & 0x40) == 0) {
      goto LABEL_20;
    }
LABEL_19:
    uint64_t v14 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 160) |= 0x40u;
    *(void *)(a1 + 56) = v14;
    unint64_t v13 = *(_DWORD *)(a2 + 160);
LABEL_20:
    if ((v13 & 0x80) != 0)
    {
      uint64_t v15 = *(_DWORD *)(a2 + 52);
      *(_DWORD *)(a1 + 160) |= 0x80u;
      *(_DWORD *)(a1 + 52) = v15;
      unint64_t v13 = *(_DWORD *)(a2 + 160);
    }
  }

  if ((v13 & 0xFF00) == 0) {
    goto LABEL_32;
  }
  if ((v13 & 0x100) != 0)
  {
    char v27 = *(const std::string **)(a2 + 64);
    *(_DWORD *)(a1 + 160) |= 0x100u;
    uint64_t v28 = *(std::string **)(a1 + 64);
    if (v28 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      uint64_t v28 = (std::string *)operator new(0x18uLL);
      v28->__r_.__value_.__l.__size_ = 0LL;
      v28->__r_.__value_.__l.__cap_ = 0LL;
      v28->__r_.__value_.__r.__words[0] = 0LL;
      *(void *)(a1 + 64) = v28;
    }

    std::string::operator=(v28, v27);
    unint64_t v13 = *(_DWORD *)(a2 + 160);
    if ((v13 & 0x200) == 0)
    {
LABEL_25:
      if ((v13 & 0x400) == 0) {
        goto LABEL_26;
      }
      goto LABEL_59;
    }
  }

  else if ((v13 & 0x200) == 0)
  {
    goto LABEL_25;
  }

  BOOL v29 = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 160) |= 0x200u;
  *(_DWORD *)(a1 + 8std::iostream::~basic_iostream(v2, v3 + 8) = v29;
  unint64_t v13 = *(_DWORD *)(a2 + 160);
  if ((v13 & 0x400) == 0)
  {
LABEL_26:
    if ((v13 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_60;
  }

  if ((v3 & 0xFF00) == 0) {
    goto LABEL_88;
  }
  if ((v3 & 0x100) != 0)
  {
    int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v25 >= 0x80)
    {
      uint64_t v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
      char v3 = *(_DWORD *)(a1 + 468);
    }

    else
    {
      uint64_t v26 = 1;
    }

    v4 += v26 + 1;
  }

  char v27 = v4 + 9;
  if ((v3 & 0x200) == 0) {
    char v27 = v4;
  }
  if ((v3 & 0x400) != 0) {
    uint64_t v4 = v27 + 9;
  }
  else {
    uint64_t v4 = v27;
  }
  if ((v3 & 0x800) != 0)
  {
    uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
    if (v28 >= 0x80)
    {
      BOOL v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2);
      char v3 = *(_DWORD *)(a1 + 468);
    }

    else
    {
      BOOL v29 = 1;
    }

    v4 += v29 + 1;
    if ((v3 & 0x1000) == 0)
    {
LABEL_64:
      if ((v3 & 0x2000) == 0) {
        goto LABEL_65;
      }
      goto LABEL_76;
    }
  }

  else if ((v3 & 0x1000) == 0)
  {
    goto LABEL_64;
  }

  unint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
  if (v30 >= 0x80)
  {
    int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
    char v3 = *(_DWORD *)(a1 + 468);
  }

  else
  {
    int v31 = 1;
  }

  v4 += v31 + 1;
  if ((v3 & 0x2000) == 0)
  {
LABEL_65:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_80;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7,  (int)a2,  *(double *)(v5 + 48),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_53;
  }

  uint64_t v18 = *(void *)(v5 + 104);
  if (!v18) {
    uint64_t v18 = *(void *)(qword_100800498 + 104);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC,  v18,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_57;
  }

    uint64_t v10 = v15[v14];
  }

  uint64_t v28 = sub_1002891C8((uint64_t)v16, &v41, v15);
  if (v42) {
    std::__shared_weak_count::__release_weak(v42);
  }
  BOOL v29 = *(void *)(a1 + 560);
  if (v29) {
    sub_10023BB8C(v29, v15, (const std::string *)(a1 + 536));
  }
  uint64_t v2 = (v28 - 1);
  unint64_t v30 = (os_log_s *)qword_1008000A0;
  if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
  {
    int v31 = (void *)(a1 + 536);
    *(_DWORD *)pthread_attr_t buf = 136315394;
    *(void *)&uint8_t buf[4] = v31;
    *(_WORD *)&buf[12] = 1024;
    *(_DWORD *)&buf[14] = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "#rose-ses,Invalidate session. (Session ID: %s, Ticket: %d)",  buf,  0x12u);
  }

  if (*(_BYTE *)(a1 + 682)) {
    *(_BYTE *)(a1 + 682) = 0;
  }
LABEL_61:
  uint64_t v32 = sub_100288340();
  sub_1000122E4(buf, (void *)(a1 + 16));
  uint64_t v40 = *(_OWORD *)buf;
  *(void *)pthread_attr_t buf = 0LL;
  *(void *)&uint8_t buf[8] = 0LL;
  sub_10028CB38((uint64_t)v32, (unint64_t *)&v40);
  int v33 = (std::__shared_weak_count *)*((void *)&v40 + 1);
  if (*((void *)&v40 + 1))
  {
    uint64_t v34 = (unint64_t *)(*((void *)&v40 + 1) + 8LL);
    do
      unsigned int v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }

  unint64_t v36 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    unsigned int v37 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      int v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }

  atomic_store(0, (unsigned __int8 *)(a1 + 836));
  return v2;
}

  uint64_t v43 = atan2(v14 - a5, v20);
  uint64_t v57 = a5 + v25 * sin(v43);
  int v44 = atan2(v12 - a6, v10 - a4);
  uint64_t v45 = __sincos_stret(v44);
  int v46 = atan2(sqrt(v56 + v49), v20);
  *(void *)(a2 + 80) = 0LL;
  *(void *)(a2 + 8std::iostream::~basic_iostream(v2, v3 + 8) = 0x408F400000000000LL;
  *(double *)a2 = v10;
  *(double *)(a2 + std::iostream::~basic_iostream(v2, v3 + 8) = v12;
  *(double *)(a2 + 16) = v14;
  *(double *)(a2 + 24) = v16;
  *(double *)(a2 + sub_100012358(v1 - 32) = v54;
  *(double *)(a2 + 40) = v56;
  *(double *)(a2 + 4std::iostream::~basic_iostream(v2, v3 + 8) = v49;
  *(double *)(a2 + 56) = v51;
  *(double *)(a2 + 64) = v48;
  *(double *)(a2 + 72) = a3;
  *(double *)(a2 + 96) = v46 * 180.0 / 3.14159265;
  *(double *)(a2 + 104) = v20;
  *(double *)(a2 + 112) = v55 - v20 * v20;
  *(double *)(a2 + 120) = v25;
  *(double *)(a2 + 12std::iostream::~basic_iostream(v2, v3 + 8) = v53 - v25 * v25;
  *(double *)(a2 + 136) = a4 + v20 * v45.__cosval;
  *(double *)(a2 + 144) = v57;
  *(double *)(a2 + 152) = a6 + v20 * v45.__sinval;
  uint64_t result = v50;
  *(double *)(a2 + 160) = v52;
  *(double *)(a2 + 16std::iostream::~basic_iostream(v2, v3 + 8) = v50;
  return result;
}

LABEL_63:
  if ((*((_BYTE *)this + 285) & 0x10) != 0)
  {
    int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 22);
    *(_BYTE *)uint64_t v4 = 104;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v38,  (unint64_t)v4 + 1,  a3);
  }

  if (*((int *)this + 48) >= 1)
  {
    uint64_t v39 = 0LL;
    while (1)
    {
      uint64_t v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 23) + 4 * v39);
      *(_BYTE *)uint64_t v4 = 112;
      unint64_t v41 = (unint64_t)v4 + 1;
      if (v40 > 0x7F)
      {
        int v42 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray( v40,  v41,  a3);
        goto LABEL_72;
      }

      *((_BYTE *)v4 + 1) = (_BYTE)v40;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_73:
    }

    int v42 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray( v40,  v41,  a3);
LABEL_72:
    uint64_t v4 = v42;
    goto LABEL_73;
  }

  int v20 = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 300) |= 0x2000u;
  *(void *)(a1 + 104) = v20;
  uint64_t v5 = *(_DWORD *)(a2 + 300);
  if ((v5 & 0x4000) == 0)
  {
LABEL_29:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13,  (int)a2,  *(double *)(v5 + 152),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_65;
  }

  int v25 = *((void *)this + 7);
  *(_BYTE *)uint64_t v4 = 65;
  *(void *)((char *)v4 + 1) = v25;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  uint64_t v16 = *((_DWORD *)this + 75);
  if ((v16 & 0x100) == 0)
  {
LABEL_28:
    if ((v16 & 0x200) == 0) {
      goto LABEL_29;
    }
    goto LABEL_65;
  }

  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3EC,  *(_DWORD *)(v5 + 88),  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 232);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_65;
  }
}

    sub_1002D47F0((uint64_t)&v111, v37, v35);
    uint64_t v40 = 126 - 2 * __clz(0x4FCACE213F2B3885LL * ((uint64_t)(v112 - (void)v111) >> 3));
    else {
      unint64_t v41 = v40;
    }
    sub_1002D77B8((uint64_t)v111, v112, v41, 1);
    uint64_t v43 = sub_1002D488C(v42, (uint64_t)v111, (uint64_t *)(a1 + 360));
    *(double *)(a1 + 344) = v43;
    *(_BYTE *)(a1 + 352) = 1;
    int v44 = *(double *)(a1 + 616);
    if (v43 > v44)
    {
      uint64_t v45 = (os_log_s *)qword_1008000A0;
      if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)pthread_attr_t buf = 134218240;
        *(double *)&uint8_t buf[4] = v43;
        *(_WORD *)&buf[12] = 2048;
        *(double *)&buf[14] = v44;
        _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "#sa_algo_batchfilter_with,Batch filter has detected an issue with the measurements - rms normalized error (%f) is above the threshold (%f)",  buf,  0x16u);
      }

      sub_1002D2AA0(a1);
      uint64_t v17 = 0LL;
      *(_BYTE *)(a1 + 563) = 1;
      goto LABEL_135;
    }

    int v101 = v5;
    uint64_t v116 = 0LL;
    int v117 = 0LL;
    unsigned int v118 = 0LL;
    int v46 = sub_1002D921C(&v116, (uint64_t)v111);
    uint64_t v47 = v111;
    int v117 = v46;
    if ((unint64_t)(0x4FCACE213F2B3885LL * ((uint64_t)(v112 - (void)v111) >> 3)) >= 2)
    {
      int v48 = 1LL;
      do
      {
        uint64_t v49 = v46;
        if (v46 == v116) {
          goto LABEL_84;
        }
        uint64_t v50 = 0LL;
        uint64_t v51 = 1;
        do
        {
          uint64_t v52 = 0;
          uint64_t v53 = 0.0;
          do
          {
            int v54 = *(double *)sub_1002CB32C((uint64_t)&v111[77 * v48 + 1], v52);
            uint64_t v55 = (double *)sub_1002CB32C(v116 + 616 * v50 + 8, v52);
            uint64_t v53 = v53 + (v54 - *v55) * (v54 - *v55);
            ++v52;
          }

          while (v52 != 3);
          int v56 = *(double *)sub_1002CB32C((uint64_t)&v111[77 * v48 + 1], 3u);
          uint64_t v57 = (double *)sub_1002CB32C(v116 + 616 * v50 + 8, 3u);
          if ((v51 & (sqrt(v53) > 0.5)) != 0)
          {
            int v58 = fmod(v56 - *v57 + 3.14159265, 6.28318531);
            if (v58 < 0.0) {
              int v58 = v58 + 6.28318531;
            }
            uint64_t v51 = fabs(v58 + -3.14159265) > 0.0872664626;
          }

          else
          {
            uint64_t v51 = 0;
          }

          ++v50;
          uint64_t v49 = v116;
          int v46 = v117;
        }

        while (0x4FCACE213F2B3885LL * ((uint64_t)(v117 - v116) >> 3) > v50);
        uint64_t v47 = v111;
        if (v51)
        {
LABEL_84:
          if (exp(*(double *)(v49 + 600) - *(double *)&v47[77 * v48 + 75]) > 0.01)
          {
            if (v46 >= v118)
            {
              int v46 = sub_1002D921C(&v116, (uint64_t)&v47[77 * v48]);
            }

            else
            {
              sub_1002D7588((uint64_t)&v118, v46, (uint64_t)&v47[77 * v48]);
              v46 += 616LL;
            }

            int v117 = v46;
            uint64_t v47 = v111;
          }
        }

        ++v48;
      }

      while (0x4FCACE213F2B3885LL * ((uint64_t)(v112 - (void)v47) >> 3) > v48);
    }

    uint64_t v59 = v116;
    if ((unint64_t)(0x4FCACE213F2B3885LL * ((uint64_t)(v46 - v116) >> 3)) <= 1)
    {
      signed int v61 = v101;
    }

    else
    {
      int v60 = exp(-*(double *)(v116 + 600));
      signed int v61 = v101;
      int v62 = 0.0;
      if (v59 != v46)
      {
        int v63 = v59;
        do
        {
          int v62 = v62 + exp(-*(double *)(v63 + 600));
          v63 += 616LL;
        }

        while (v63 != v46);
      }

      uint64_t v64 = v60 / v62;
      if (v64 < 0.9)
      {
        uint64_t v65 = (double *)sub_1002CB32C(v59 + 144, 1u);
        uint64_t v59 = v116;
        int v46 = v117;
        if ((unint64_t)(0x4FCACE213F2B3885LL * ((uint64_t)(v117 - v116) >> 3)) >= 2)
        {
          int v66 = *v65;
          unsigned int v67 = 1LL;
          int v68 = 760LL;
          while (1)
          {
            uint64_t v69 = (double *)sub_1002CB32C(v59 + v68, 1u);
            int v70 = fmod(*v69 - v66 + 3.14159265, 6.28318531);
            if (v70 < 0.0) {
              int v70 = v70 + 6.28318531;
            }
            int v71 = fabs(v70 + -3.14159265);
            if (v71 > 0.392699082) {
              break;
            }
            ++v67;
            uint64_t v59 = v116;
            int v46 = v117;
            v68 += 616LL;
          }

          signed int v96 = (os_log_s *)qword_1008000A0;
          if (os_log_type_enabled((os_log_t)qword_1008000A0, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)pthread_attr_t buf = 134218240;
            *(double *)&uint8_t buf[4] = v64;
            *(_WORD *)&buf[12] = 2048;
            *(double *)&buf[14] = v71;
            _os_log_impl( (void *)&_mh_execute_header,  v96,  OS_LOG_TYPE_DEFAULT,  "#sa_algo_batchfilter_with,Batch filter clearing solutions since the best one has a low weight (%f) and the horizontal angle difference to a secondary solution is too high (%f)",  buf,  0x16u);
          }

          int v97 = v116;
          for (n = v117; n != v97; *int v99 = off_1007AED90)
          {
            *(void *)(n - 12std::iostream::~basic_iostream(v2, v3 + 8) = off_1007AED90;
            *(void *)(n - 240) = off_1007AED90;
            int v99 = (void *)(n - 608);
            *(void *)(n - 40std::iostream::~basic_iostream(v2, v3 + 8) = off_1007AED90;
            *(void *)(n - 472) = off_1007AED90;
            *(void *)(n - 536) = off_1007AED90;
            n -= 616LL;
          }

          int v117 = v97;
          goto LABEL_133;
        }
      }
    }

    if (*v4)
    {
    }
  }

      a2[1] = (unint64_t)v37;
      uint64_t v49 = (char *)*((void *)v20 + 1);
      uint64_t v50 = (char *)*((void *)v20 + 2);
      if (v49 != v50)
      {
        while (1)
        {
          uint64_t v51 = *v49;
          uint64_t v52 = a2[2];
          if ((unint64_t)v37 >= v52)
          {
            uint64_t v53 = *a2;
            int v54 = &v37[-*a2];
            uint64_t v55 = (unint64_t)(v54 + 1);
            int v56 = v52 - v53;
            if (2 * v56 > v55) {
              uint64_t v55 = 2 * v56;
            }
            if (v56 >= 0x3FFFFFFFFFFFFFFFLL) {
              uint64_t v57 = 0x7FFFFFFFFFFFFFFFLL;
            }
            else {
              uint64_t v57 = v55;
            }
            if (v57) {
              int v58 = (unint64_t)operator new(v57);
            }
            else {
              int v58 = 0LL;
            }
            uint64_t v59 = (char *)(v58 + v57);
            v54[v58] = v51;
            uint64_t v10 = &v54[v58 + 1];
            if (v37 == (_BYTE *)v53)
            {
              *a2 = (unint64_t)&v54[v58];
              a2[1] = (unint64_t)v10;
              a2[2] = (unint64_t)v59;
            }

            else
            {
              int v60 = &v37[~v53];
              do
              {
                signed int v61 = *--v37;
                (v60--)[v58] = v61;
              }

              while (v37 != (_BYTE *)v53);
              unsigned int v37 = (_BYTE *)*a2;
              *a2 = v58;
              a2[1] = (unint64_t)v10;
              a2[2] = (unint64_t)v59;
              if (!v37) {
                goto LABEL_82;
              }
            }

            operator delete(v37);
          }

          else
          {
            *unsigned int v37 = v51;
            uint64_t v10 = v37 + 1;
          }

uint64_t sub_10005A654(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 284);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_10;
  }

  if ((v3 & 1) != 0)
  {
    int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16),  (unint64_t)a2)
       + 1;
    int v3 = *(_DWORD *)(a1 + 284);
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }

  int v4 = 0;
  if ((v3 & 0x20) != 0)
  {
LABEL_7:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 88),  (unint64_t)a2)
        + 1;
    int v3 = *(_DWORD *)(a1 + 284);
  }

uint64_t sub_10005A998( const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/Proximity/protobuf/CLPVisionEvent.pb.cc",  7567LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if (v5) {
    return sub_1000579A8((uint64_t)a1, (uint64_t)v5);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v6);
  }
}

void sub_10005AA40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10005AA58(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 112LL))(v3, a2);
  }

  return result;
}

uint64_t sub_10005AAA0()
{
  return 1LL;
}

uint64_t sub_10005AAA8()
{
  uint64_t v0 = qword_1007F58E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000499F0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl(&qword_1007F58E0, v2);
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }

  return qword_1007F5880;
}