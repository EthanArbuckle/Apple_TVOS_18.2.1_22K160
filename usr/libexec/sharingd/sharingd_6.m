uint64_t sub_100424954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  v1 = *(void *)(*(void *)v0 + 304LL);
  v2 = *(void *)(*(void *)v0 + 208LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 312LL));
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_1004249B4, v2, 0LL);
}

uint64_t sub_1004249B4()
{
  v1 = *(const char **)(v0 + 272);
  v2 = *(const char **)(v0 + 280);
  v4 = *(const char **)(v0 + 256);
  v3 = *(const char **)(v0 + 264);
  v5 = *(const char **)(v0 + 248);
  uint64_t v7 = *(void *)(v0 + 216);
  unint64_t v6 = *(void *)(v0 + 224);
  sub_100189B0C(v7, v6);
  *(void *)&double v8 = swift_bridgeObjectRelease(v1).n128_u64[0];
  *(void *)&double v9 = swift_bridgeObjectRelease(v2, v8).n128_u64[0];
  *(void *)&double v10 = swift_bridgeObjectRelease(v3, v9).n128_u64[0];
  *(void *)&double v11 = swift_bridgeObjectRelease(v4, v10).n128_u64[0];
  swift_bridgeObjectRelease(v5, v11);
  sub_100189B0C(v7, v6);
  uint64_t v12 = *(void *)(v0 + 192);
  uint64_t v13 = *(void *)(v0 + 200);
  uint64_t v14 = *(void *)(v0 + 168);
  uint64_t v16 = *(void *)(v0 + 136);
  uint64_t v15 = *(void *)(v0 + 144);
  uint64_t v18 = *(void *)(v0 + 120);
  uint64_t v17 = *(void *)(v0 + 128);
  uint64_t v20 = *(void *)(v0 + 96);
  uint64_t v19 = *(void *)(v0 + 104);
  uint64_t v22 = *(void *)(v0 + 88);
  uint64_t v23 = *(void *)(v0 + 64);
  sub_100424BF0(*(void *)(v0 + 48));
  swift_task_dealloc(v13);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100424AD0()
{
  v1 = *(const char **)(v0 + 272);
  v2 = *(const char **)(v0 + 280);
  v4 = *(const char **)(v0 + 256);
  v3 = *(const char **)(v0 + 264);
  v5 = *(const char **)(v0 + 248);
  uint64_t v7 = *(void *)(v0 + 216);
  unint64_t v6 = *(void *)(v0 + 224);
  uint64_t v8 = *(void *)(v0 + 48);
  sub_100189B0C(v7, v6);
  *(void *)&double v9 = swift_bridgeObjectRelease(v1).n128_u64[0];
  *(void *)&double v10 = swift_bridgeObjectRelease(v2, v9).n128_u64[0];
  *(void *)&double v11 = swift_bridgeObjectRelease(v3, v10).n128_u64[0];
  *(void *)&double v12 = swift_bridgeObjectRelease(v4, v11).n128_u64[0];
  swift_bridgeObjectRelease(v5, v12);
  sub_100189B0C(v7, v6);
  sub_100424BF0(v8);
  uint64_t v13 = *(void *)(v0 + 192);
  uint64_t v14 = *(void *)(v0 + 168);
  uint64_t v16 = *(void *)(v0 + 136);
  uint64_t v15 = *(void *)(v0 + 144);
  uint64_t v18 = *(void *)(v0 + 120);
  uint64_t v17 = *(void *)(v0 + 128);
  uint64_t v20 = *(void *)(v0 + 96);
  uint64_t v19 = *(void *)(v0 + 104);
  uint64_t v21 = *(void *)(v0 + 88);
  uint64_t v23 = *(void *)(v0 + 64);
  swift_task_dealloc(*(void *)(v0 + 200));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100424BF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropServerConnection(0LL);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_1001A4B84(a1, (uint64_t)v4, v5);
  swift_release(*v4);
  if (qword_100644370 != -1) {
    swift_once(&qword_100644370, sub_10042322C);
  }
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = sub_100186DE4(v7, (uint64_t)qword_100654D20);
  double v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    double v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)double v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Cancelling ASK connection", v11, 2u);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  return sub_1003E8564(0);
}

uint64_t sub_100424D48(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = type metadata accessor for UUID(0LL);
  v2[7] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[8] = v4;
  v2[9] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  v2[10] = v5;
  v2[11] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_1006475B8);
  v2[12] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = _s14descr1005DF7D1C10AskRequestVMa(0LL);
  v2[13] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[14] = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[15] = swift_task_alloc(v9);
  v2[16] = swift_task_alloc(v9);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v10 = static AirDropActor.shared;
  v2[17] = static AirDropActor.shared;
  return swift_task_switch(sub_100424E5C, v10, 0LL);
}

uint64_t sub_100424E5C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 48) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest;
  swift_beginAccess(v4, v0 + 16, 0LL, 0LL);
  sub_1001915A4(v4, v3, &qword_1006475B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1LL, v1) == 1)
  {
    sub_100187100(*(void *)(v0 + 96), &qword_1006475B8);
    uint64_t v5 = type metadata accessor for SFAirDropReceive.Failure(0LL);
    uint64_t v6 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v5, v6, 0LL, 0LL);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104LL))( v7,  enum case for SFAirDropReceive.Failure.badRequest(_:),  v5);
    swift_willThrow(v8);
    uint64_t v28 = *(void *)(v0 + 120);
    uint64_t v30 = *(void *)(v0 + 88);
    uint64_t v29 = *(void *)(v0 + 96);
    uint64_t v31 = *(void *)(v0 + 72);
    swift_task_dealloc(*(void *)(v0 + 128));
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    uint64_t v9 = *(void *)(v0 + 120);
    uint64_t v10 = *(void *)(v0 + 128);
    uint64_t v11 = *(void *)(v0 + 88);
    uint64_t v12 = *(void *)(v0 + 80);
    uint64_t v13 = *(void *)(v0 + 48);
    sub_1001A4B40(*(void *)(v0 + 96), v10, _s14descr1005DF7D1C10AskRequestVMa);
    sub_1001A4B84(v10, v9, _s14descr1005DF7D1C10AskRequestVMa);
    sub_1001A4B84( v13 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity,  v11,  type metadata accessor for SDAirDropServerConnectionIdentity);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
    uint64_t v15 = *(void *)(v0 + 88);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8LL))(v15, v16);
      uint64_t v17 = 3145728LL;
    }

    else
    {
      sub_1001A4BC8(*(void *)(v0 + 88), type metadata accessor for SDAirDropServerConnectionIdentity);
      uint64_t v17 = 0x20000LL;
    }

    uint64_t v18 = *(void *)(v0 + 120);
    uint64_t v19 = *(void *)(v0 + 72);
    uint64_t v20 = *(char **)(v0 + 48);
    (*(void (**)(uint64_t, char *, void))(*(void *)(v0 + 64) + 16LL))( v19,  &v20[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveID],  *(void *)(v0 + 56));
    uint64_t v21 = &v20[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveServiceDelegate];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong( &v20[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveServiceDelegate],  v22);
    uint64_t v24 = *((void *)v21 + 1);
    uint64_t v25 = type metadata accessor for SDAirDropReceiveCompressionAdapter(0LL);
    swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    v26 = v20;
    v27 = sub_10019579C(v18, v17, v19, v20, (uint64_t)&off_1005E1650, Strong, v24);
    *(void *)(v0 + 144) = v27;
    uint64_t v33 = *(void *)(v0 + 48);
    uint64_t v34 = *(void *)(v33 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveCompressionAdapter);
    *(void *)(v33 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveCompressionAdapter) = v27;
    swift_retain(v27);
    swift_release(v34);
    v36 = (uint64_t (__cdecl *)())((char *)&dword_1006456C0 + dword_1006456C0);
    v35 = (void *)swift_task_alloc(unk_1006456C4);
    *(void *)(v0 + 152) = v35;
    void *v35 = v0;
    v35[1] = sub_100425168;
    return v36();
  }

uint64_t sub_100425168()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 152);
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_100425254;
  }
  else {
    uint64_t v4 = sub_1004251CC;
  }
  return swift_task_switch(v4, *(void *)(v2 + 136), 0LL);
}

uint64_t sub_1004251CC()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 72);
  swift_release(*(void *)(v0 + 144));
  sub_1001A4BC8(v2, _s14descr1005DF7D1C10AskRequestVMa);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100425254()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_release(*(void *)(v0 + 144));
  sub_1001A4BC8(v1, _s14descr1005DF7D1C10AskRequestVMa);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 72);
  swift_task_dealloc(*(void *)(v0 + 128));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004252DC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_100183098(&qword_100650B48);
  v2[4] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for SDAirDropServerConnection(0LL);
  v2[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v6 = static AirDropActor.shared;
  v2[8] = static AirDropActor.shared;
  return swift_task_switch(sub_100425394, v6, 0LL);
}

uint64_t sub_100425394()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  sub_1001915A4(*(void *)(v0 + 16), v3, &qword_100650B48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1LL, v1) == 1)
  {
    sub_100187100(*(void *)(v0 + 32), &qword_100650B48);
    if (qword_100644370 != -1) {
      swift_once(&qword_100644370, sub_10042322C);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL);
    uint64_t v5 = sub_100186DE4(v4, (uint64_t)qword_100654D20);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Missing connection", v8, 2u);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    uint64_t v9 = *(void *)(v0 + 32);
    swift_task_dealloc(*(void *)(v0 + 56));
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    sub_1001A4B40(*(void *)(v0 + 32), *(void *)(v0 + 56), type metadata accessor for SDAirDropServerConnection);
    uint64_t v11 = (void *)swift_task_alloc(dword_1006533A4);
    *(void *)(v0 + 72) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_10042551C;
    return sub_1003E9684();
  }

uint64_t sub_10042551C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 72);
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_1004256E8;
  }
  else {
    uint64_t v4 = sub_100425580;
  }
  return swift_task_switch(v4, *(void *)(v2 + 64), 0LL);
}

uint64_t sub_100425580(uint64_t a1, uint64_t a2)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v2 + 24) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_delegate,  a2);
  *(void *)(v2 + 88) = Strong;
  if (Strong)
  {
    uint64_t v4 = *(void *)(v2 + 24) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
    uint64_t v5 = (void *)swift_task_alloc(dword_10064973C);
    *(void *)(v2 + 96) = v5;
    void *v5 = v2;
    v5[1] = sub_100425638;
    return sub_10022EC74(v4, 0LL);
  }

  else
  {
    sub_1001A4BC8(*(void *)(v2 + 56), type metadata accessor for SDAirDropServerConnection);
    uint64_t v7 = *(void *)(v2 + 32);
    swift_task_dealloc(*(void *)(v2 + 56));
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v2 + 8))();
  }

uint64_t sub_100425638()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 64LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 96LL));
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_100425698, v2, 0LL);
}

uint64_t sub_100425698()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_task_dealloc(*(void *)(v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004256E8()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 32);
  sub_1001A4BC8(v1, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10042573C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_100183098(&qword_100650B48);
  v2[4] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for SDAirDropServerConnection(0LL);
  v2[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v6 = static AirDropActor.shared;
  v2[8] = static AirDropActor.shared;
  return swift_task_switch(sub_1004257F4, v6, 0LL);
}

uint64_t sub_1004257F4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  sub_1001915A4(*(void *)(v0 + 16), v3, &qword_100650B48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1LL, v1) == 1)
  {
    sub_100187100(*(void *)(v0 + 32), &qword_100650B48);
    if (qword_100644370 != -1) {
      swift_once(&qword_100644370, sub_10042322C);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL);
    uint64_t v5 = sub_100186DE4(v4, (uint64_t)qword_100654D20);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Missing connection", v8, 2u);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    uint64_t v9 = *(void *)(v0 + 32);
    swift_task_dealloc(*(void *)(v0 + 56));
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    sub_1001A4B40(*(void *)(v0 + 32), *(void *)(v0 + 56), type metadata accessor for SDAirDropServerConnection);
    uint64_t v11 = (void *)swift_task_alloc(dword_10065339C);
    *(void *)(v0 + 72) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1004234FC;
    return sub_1003E9408();
  }

uint64_t sub_10042597C()
{
  v1[8] = v0;
  uint64_t v2 = sub_100183098(&qword_100647608);
  v1[9] = swift_task_alloc((*(void *)(*(void *)(v2 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_100183098(&qword_1006475B8);
  v1[10] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = _s14descr1005DF7D1C10AskRequestVMa(0LL);
  v1[11] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v1[12] = v5;
  v1[13] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SDAirDropMessage(0LL);
  v1[14] = v6;
  v1[15] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_100650B48);
  v1[16] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SDAirDropServerConnection(0LL);
  v1[17] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v1[18] = v9;
  v1[19] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v10 = static AirDropActor.shared;
  v1[20] = static AirDropActor.shared;
  return swift_task_switch(sub_100425AC8, v10, 0LL);
}

uint64_t sub_100425AC8()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
  swift_beginAccess(v4, v0 + 16, 0LL, 0LL);
  sub_1001915A4(v4, v3, &qword_100650B48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1LL, v1) == 1)
  {
    sub_100187100(*(void *)(v0 + 128), &qword_100650B48);
    uint64_t v5 = type metadata accessor for SFAirDropReceive.Failure(0LL);
    uint64_t v6 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v5, v6, 0LL, 0LL);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104LL))( v7,  enum case for SFAirDropReceive.Failure.incompleteTransfer(_:),  v5);
    swift_willThrow(v8);
    uint64_t v10 = *(void *)(v0 + 120);
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v11 = *(void *)(v0 + 104);
    uint64_t v13 = *(void *)(v0 + 72);
    uint64_t v12 = *(void *)(v0 + 80);
    swift_task_dealloc(*(void *)(v0 + 152));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    uint64_t v15 = *(_OWORD **)(v0 + 120);
    uint64_t v16 = *(void *)(v0 + 112);
    sub_1001A4B40(*(void *)(v0 + 128), *(void *)(v0 + 152), type metadata accessor for SDAirDropServerConnection);
    *uint64_t v15 = xmmword_1004D9570;
    swift_storeEnumTagMultiPayload(v15, v16, 7LL);
    uint64_t v17 = (void *)swift_task_alloc(dword_100653384);
    *(void *)(v0 + 168) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_100425C98;
    return sub_1003E89C8(*(void *)(v0 + 120));
  }

uint64_t sub_100425C98()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 168);
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = *(void *)(v2 + 160);
  sub_1001A4BC8(*(void *)(v2 + 120), type metadata accessor for SDAirDropMessage);
  if (v0) {
    uint64_t v5 = sub_1004261C4;
  }
  else {
    uint64_t v5 = sub_100425D18;
  }
  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_100425D18()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest;
  swift_beginAccess(v4, v0 + 40, 0LL, 0LL);
  sub_1001915A4(v4, v3, &qword_1006475B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1LL, v1) != 1)
  {
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v7 = *(void *)(v0 + 72);
    sub_1001A4B40(*(void *)(v0 + 80), v5, _s14descr1005DF7D1C10AskRequestVMa);
    sub_1001915A4(v5 + *(int *)(v6 + 20), v7, &qword_100647608);
    uint64_t v8 = type metadata accessor for SFAirDrop.TransferType(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1LL, v8);
    uint64_t v11 = *(void *)(v0 + 72);
    if (v10 == 1)
    {
      sub_100187100(*(void *)(v0 + 72), &qword_100647608);
    }

    else
    {
      SFAirDrop.TransferType.exchangeType.getter();
      uint64_t v14 = v13;
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
      if (v14)
      {
        uint64_t v15 = *(void *)(v0 + 104);
        swift_bridgeObjectRelease(v14);
        uint64_t v16 = v15;
LABEL_10:
        sub_1001A4BC8(v16, _s14descr1005DF7D1C10AskRequestVMa);
        goto LABEL_11;
      }
    }

    uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v0 + 64) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_delegate,  v12);
    *(void *)(v0 + 184) = Strong;
    if (Strong)
    {
      uint64_t v18 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
      uint64_t v19 = (void *)swift_task_alloc(dword_10064973C);
      *(void *)(v0 + 192) = v19;
      *uint64_t v19 = v0;
      v19[1] = sub_100426008;
      return sub_10022EC74(v18, 0LL);
    }

    uint64_t v16 = *(void *)(v0 + 104);
    goto LABEL_10;
  }

  sub_100187100(*(void *)(v0 + 80), &qword_1006475B8);
LABEL_11:
  if (qword_100644370 != -1) {
    swift_once(&qword_100644370, sub_10042322C);
  }
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = sub_100186DE4(v21, (uint64_t)qword_100654D20);
  uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Cancelling UPLOAD connection", v25, 2u);
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  uint64_t v26 = *(void *)(v0 + 152);
  uint64_t v28 = *(void *)(v0 + 120);
  uint64_t v27 = *(void *)(v0 + 128);
  uint64_t v29 = *(void *)(v0 + 104);
  uint64_t v31 = *(void *)(v0 + 72);
  uint64_t v30 = *(void *)(v0 + 80);

  sub_1003E8564(0);
  sub_1001A4BC8(v26, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100426008()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 184LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 160LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 192LL));
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_100426068, v2, 0LL);
}

uint64_t sub_100426068()
{
  if (qword_100644370 != -1) {
    swift_once(&qword_100644370, sub_10042322C);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100654D20);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Cancelling UPLOAD connection", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  uint64_t v6 = *(void *)(v0 + 152);
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v9 = *(void *)(v0 + 104);
  uint64_t v11 = *(void *)(v0 + 72);
  uint64_t v10 = *(void *)(v0 + 80);

  sub_1003E8564(0);
  sub_1001A4BC8(v6, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004261C4()
{
  if (qword_100644370 != -1) {
    swift_once(&qword_100644370, sub_10042322C);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100654D20);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Cancelling UPLOAD connection", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  uint64_t v6 = *(void *)(v0 + 152);

  sub_1003E8564(0);
  sub_1001A4BC8(v6, type metadata accessor for SDAirDropServerConnection);
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v9 = *(void *)(v0 + 104);
  uint64_t v11 = *(void *)(v0 + 72);
  uint64_t v10 = *(void *)(v0 + 80);
  swift_task_dealloc(*(void *)(v0 + 152));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100426308(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_100183098(&qword_100650B48);
  v2[4] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for SDAirDropServerConnection(0LL);
  v2[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v6 = static AirDropActor.shared;
  v2[8] = static AirDropActor.shared;
  return swift_task_switch(sub_1004263C0, v6, 0LL);
}

uint64_t sub_1004263C0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  sub_1001915A4(*(void *)(v0 + 16), v3, &qword_100650B48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1LL, v1) == 1)
  {
    sub_100187100(*(void *)(v0 + 32), &qword_100650B48);
    if (qword_100644370 != -1) {
      swift_once(&qword_100644370, sub_10042322C);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL);
    uint64_t v5 = sub_100186DE4(v4, (uint64_t)qword_100654D20);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Missing connection", v8, 2u);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    uint64_t v9 = *(void *)(v0 + 32);
    swift_task_dealloc(*(void *)(v0 + 56));
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    sub_1001A4B40(*(void *)(v0 + 32), *(void *)(v0 + 56), type metadata accessor for SDAirDropServerConnection);
    uint64_t v11 = (void *)swift_task_alloc(dword_100653394);
    *(void *)(v0 + 72) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1004234FC;
    return sub_1003E9194();
  }

uint64_t sub_100426548(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_100183098(&qword_1006475C8);
  v2[12] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = _s14descr1005D9BD1C13UploadRequestVMa(0LL);
  v2[13] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[14] = v5;
  v2[15] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_100650B48);
  v2[16] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SDAirDropServerConnection(0LL);
  v2[17] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[18] = v8;
  v2[19] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  v2[20] = static AirDropActor.shared;
  return swift_task_switch(sub_10042664C, v9, 0LL);
}

uint64_t sub_10042664C()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 88) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
  swift_beginAccess(v4, v0 + 16, 0LL, 0LL);
  sub_1001915A4(v4, v3, &qword_100650B48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1LL, v1) == 1)
  {
    sub_100187100(*(void *)(v0 + 128), &qword_100650B48);
    uint64_t v5 = type metadata accessor for SFAirDropReceive.Failure(0LL);
    uint64_t v6 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v5, v6, 0LL, 0LL);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104LL))( v7,  enum case for SFAirDropReceive.Failure.incompleteTransfer(_:),  v5);
    swift_willThrow(v8);
LABEL_5:
    uint64_t v20 = *(void *)(v0 + 120);
    uint64_t v19 = *(void *)(v0 + 128);
    uint64_t v21 = *(void *)(v0 + 96);
    swift_task_dealloc(*(void *)(v0 + 152));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v9 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 112);
  uint64_t v12 = *(void *)(v0 + 88);
  uint64_t v11 = *(void *)(v0 + 96);
  sub_1001A4B40(*(void *)(v0 + 128), *(void *)(v0 + 152), type metadata accessor for SDAirDropServerConnection);
  uint64_t v13 = v12 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadRequest;
  swift_beginAccess(v13, v0 + 40, 0LL, 0LL);
  sub_1001915A4(v13, v11, &qword_1006475C8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1LL, v9) == 1)
  {
    uint64_t v14 = *(void *)(v0 + 152);
    sub_100187100(*(void *)(v0 + 96), &qword_1006475C8);
    uint64_t v15 = type metadata accessor for SFAirDropReceive.Failure(0LL);
    uint64_t v16 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v15, v16, 0LL, 0LL);
    uint64_t v18 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104LL))( v17,  enum case for SFAirDropReceive.Failure.badRequest(_:),  v15);
    swift_willThrow(v18);
    sub_1001A4BC8(v14, type metadata accessor for SDAirDropServerConnection);
    goto LABEL_5;
  }

  uint64_t v23 = *(void *)(v0 + 120);
  uint64_t v24 = *(void *)(v0 + 104);
  sub_1001A4B40(*(void *)(v0 + 96), v23, _s14descr1005D9BD1C13UploadRequestVMa);
  uint64_t v25 = (void *)(v23 + *(int *)(v24 + 28));
  *(void *)(v0 + 168) = *v25;
  unint64_t v26 = v25[1];
  *(void *)(v0 + 176) = v26;
  if (v26 >> 60 != 15) {
    __asm { BR              X9 }
  }

  if ((*(_BYTE *)(*(void *)(v0 + 120) + *(int *)(*(void *)(v0 + 104) + 32LL)) & 1) != 0)
  {
    if (qword_100644370 != -1) {
      swift_once(&qword_100644370, sub_10042322C);
    }
    uint64_t v31 = type metadata accessor for Logger(0LL);
    uint64_t v32 = sub_100186DE4(v31, (uint64_t)qword_100654D20);
    uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v35 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  v34,  "Received all file data from initial request, awaiting decompression",  v35,  2u);
      swift_slowDealloc(v35, -1LL, -1LL);
    }

    v36 = (void *)swift_task_alloc(dword_100654EEC);
    *(void *)(v0 + 208) = v36;
    void *v36 = v0;
    v36[1] = sub_100426E44;
    return sub_100427CA0(*(void *)(v0 + 80));
  }

  else
  {
    uint64_t v27 = sub_100183F14( &qword_1006456A8,  type metadata accessor for SDAirDropReceiveCompressionAdapter,  (uint64_t)&unk_1004CD4F8);
    *(void *)(v0 + 232) = v27;
    *(void *)(v0 + 240) = 0LL;
    uint64_t v28 = type metadata accessor for SDAirDropReceiveCompressionAdapter(0LL);
    uint64_t v29 = dispatch thunk of Actor.unownedExecutor.getter(v28, v27);
    *(void *)(v0 + 248) = v29;
    *(void *)(v0 + 256) = v30;
    return swift_task_switch(sub_100426FB8, v29, v30);
  }

uint64_t sub_100426C5C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 192);
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_100427AF4;
  }
  else {
    uint64_t v4 = sub_100426CC0;
  }
  return swift_task_switch(v4, *(void *)(v2 + 160), 0LL);
}

uint64_t sub_100426CC0()
{
  uint64_t v1 = v0[23];
  sub_100189B0C(v0[21], v0[22]);
  if ((*(_BYTE *)(v0[15] + *(int *)(v0[13] + 32LL)) & 1) != 0)
  {
    if (qword_100644370 != -1) {
      swift_once(&qword_100644370, sub_10042322C);
    }
    uint64_t v7 = type metadata accessor for Logger(0LL);
    uint64_t v8 = sub_100186DE4(v7, (uint64_t)qword_100654D20);
    uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  v10,  "Received all file data from initial request, awaiting decompression",  v11,  2u);
      swift_slowDealloc(v11, -1LL, -1LL);
    }

    uint64_t v12 = (void *)swift_task_alloc(dword_100654EEC);
    v0[26] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_100426E44;
    return sub_100427CA0(v0[10]);
  }

  else
  {
    uint64_t v2 = sub_100183F14( &qword_1006456A8,  type metadata accessor for SDAirDropReceiveCompressionAdapter,  (uint64_t)&unk_1004CD4F8);
    v0[29] = v2;
    v0[30] = v1;
    uint64_t v3 = type metadata accessor for SDAirDropReceiveCompressionAdapter(0LL);
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, v2);
    v0[31] = v4;
    v0[32] = v5;
    return swift_task_switch(sub_100426FB8, v4, v5);
  }

uint64_t sub_100426E44()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = *(void *)(*v1 + 208);
  uint64_t v4 = *v1;
  swift_task_dealloc(v3);
  if (v0)
  {
    v2[28] = v0;
    return swift_task_switch(sub_100426F38, v2[20], 0LL);
  }

  else
  {
    uint64_t v6 = (void *)swift_task_alloc(dword_1006457B4);
    v2[27] = v6;
    *uint64_t v6 = v4;
    v6[1] = sub_100426ED0;
    return sub_100197900();
  }

uint64_t sub_100426ED0()
{
  uint64_t v2 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 216));
  if (v0)
  {
    *(void *)(v2 + 224) = v0;
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = sub_100426F38;
  }

  else
  {
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = sub_100429B78;
  }

  return swift_task_switch(v4, v3, 0LL);
}

uint64_t sub_100426F38()
{
  uint64_t v1 = *(void *)(v0 + 152);
  sub_1001A4BC8(*(void *)(v0 + 120), _s14descr1005D9BD1C13UploadRequestVMa);
  sub_1001A4BC8(v1, type metadata accessor for SDAirDropServerConnection);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 96);
  swift_task_dealloc(*(void *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100426FB8()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[10];
  uint64_t v3 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[33] = v3;
  void *v3 = v0;
  v3[1] = sub_100427050;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 45,  v2,  v1,  0xD000000000000014LL,  0x8000000100503F10LL,  sub_10019BAD0,  v0[10],  &type metadata for Bool);
}

uint64_t sub_100427050()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 264);
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_100427244;
  }
  else {
    uint64_t v4 = sub_1004270B0;
  }
  return swift_task_switch(v4, *(void *)(v2 + 248), *(void *)(v2 + 256));
}

uint64_t sub_1004270B0()
{
  uint64_t v1 = *(void *)(v0 + 160);
  *(_BYTE *)(v0 + 361) = *(_BYTE *)(v0 + 360);
  return swift_task_switch(sub_1004270CC, v1, 0LL);
}

uint64_t sub_1004270CC()
{
  if ((*(_BYTE *)(v0 + 361) & 1) != 0)
  {
    uint64_t v1 = (void *)swift_task_alloc(dword_1006533B4);
    *(void *)(v0 + 280) = v1;
    void *v1 = v0;
    v1[1] = sub_1004272D8;
    return sub_1003E9A50();
  }

  else
  {
    uint64_t v3 = *(void *)(v0 + 240);
    if (qword_100644370 != -1) {
      swift_once(&qword_100644370, sub_10042322C);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL);
    uint64_t v5 = sub_100186DE4(v4, (uint64_t)qword_100654D20);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      *(_DWORD *)uint64_t v8 = 134217984;
      *(void *)(v0 + 64) = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v8 + 4, v8 + 12);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Received %ld total bytes, awaiting decompression", v8, 0xCu);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    uint64_t v9 = (void *)swift_task_alloc(dword_100654EEC);
    *(void *)(v0 + 336) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100427900;
    return sub_100427CA0(*(void *)(v0 + 80));
  }

uint64_t sub_100427244()
{
  return swift_task_switch(sub_100427258, *(void *)(v0 + 160), 0LL);
}

uint64_t sub_100427258()
{
  uint64_t v1 = *(void *)(v0 + 152);
  sub_1001A4BC8(*(void *)(v0 + 120), _s14descr1005D9BD1C13UploadRequestVMa);
  sub_1001A4BC8(v1, type metadata accessor for SDAirDropServerConnection);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 96);
  swift_task_dealloc(*(void *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004272D8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = *v4;
  uint64_t v6 = *(void *)(*v4 + 280);
  *(void *)(v5 + 288) = a1;
  *(void *)(v5 + 296) = a2;
  *(_BYTE *)(v5 + 362) = a3;
  *(void *)(v5 + 304) = v3;
  swift_task_dealloc(v6);
  if (v3) {
    os_log_type_t v7 = sub_100427B80;
  }
  else {
    os_log_type_t v7 = sub_10042734C;
  }
  return swift_task_switch(v7, *(void *)(v5 + 160), 0LL);
}

uint64_t sub_10042734C()
{
  unint64_t v1 = v0[37];
  if (v1 >> 60 != 15) {
    __asm { BR              X9 }
  }

  sub_100189B0C(v0[36], v0[37]);
  uint64_t v2 = v0[30];
  if (qword_100644370 != -1) {
    swift_once(&qword_100644370, sub_10042322C);
  }
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = sub_100186DE4(v3, (uint64_t)qword_100654D20);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)os_log_type_t v7 = 134217984;
    v0[8] = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 8, v0 + 9, v7 + 4, v7 + 12);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received %ld total bytes, awaiting decompression", v7, 0xCu);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  uint64_t v8 = (void *)swift_task_alloc(dword_100654EEC);
  v0[42] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100427900;
  return sub_100427CA0(v0[10]);
}

uint64_t sub_1004276F4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 320);
  *(void *)(*v1 + 328) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_100427C00;
  }
  else {
    uint64_t v4 = sub_100427758;
  }
  return swift_task_switch(v4, *(void *)(v2 + 160), 0LL);
}

uint64_t sub_100427758()
{
  int v1 = *(unsigned __int8 *)(v0 + 362);
  uint64_t v2 = *(void *)(v0 + 288);
  unint64_t v3 = *(void *)(v0 + 296);
  sub_100189B0C(v2, v3);
  sub_100189B0C(v2, v3);
  uint64_t v4 = *(void *)(v0 + 312);
  if (v1 == 1)
  {
    if (qword_100644370 != -1) {
      swift_once(&qword_100644370, sub_10042322C);
    }
    uint64_t v5 = type metadata accessor for Logger(0LL);
    uint64_t v6 = sub_100186DE4(v5, (uint64_t)qword_100654D20);
    os_log_type_t v7 = (os_log_s *)Logger.logObject.getter(v6);
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      *(_DWORD *)uint64_t v9 = 134217984;
      *(void *)(v0 + 64) = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v9 + 4, v9 + 12);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Received %ld total bytes, awaiting decompression", v9, 0xCu);
      swift_slowDealloc(v9, -1LL, -1LL);
    }

    os_log_type_t v10 = (void *)swift_task_alloc(dword_100654EEC);
    *(void *)(v0 + 336) = v10;
    *os_log_type_t v10 = v0;
    v10[1] = sub_100427900;
    return sub_100427CA0(*(void *)(v0 + 80));
  }

  else
  {
    *(void *)(v0 + 240) = v4;
    uint64_t v12 = *(void *)(v0 + 232);
    uint64_t v13 = type metadata accessor for SDAirDropReceiveCompressionAdapter(0LL);
    uint64_t v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, v12);
    *(void *)(v0 + 248) = v14;
    *(void *)(v0 + 256) = v15;
    return swift_task_switch(sub_100426FB8, v14, v15);
  }

uint64_t sub_100427900()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = *(void *)(*v1 + 336);
  uint64_t v4 = *v1;
  swift_task_dealloc(v3);
  if (v0)
  {
    v2[44] = v0;
    return swift_task_switch(sub_100427A74, v2[20], 0LL);
  }

  else
  {
    uint64_t v6 = (void *)swift_task_alloc(dword_1006457B4);
    v2[43] = v6;
    *uint64_t v6 = v4;
    v6[1] = sub_10042798C;
    return sub_100197900();
  }

uint64_t sub_10042798C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 344));
  if (v0)
  {
    *(void *)(v2 + 352) = v0;
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = sub_100427A74;
  }

  else
  {
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = sub_1004279F4;
  }

  return swift_task_switch(v4, v3, 0LL);
}

uint64_t sub_1004279F4()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 96);
  sub_1001A4BC8(v3, _s14descr1005D9BD1C13UploadRequestVMa);
  sub_1001A4BC8(v1, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100427A74()
{
  uint64_t v1 = *(void *)(v0 + 152);
  sub_1001A4BC8(*(void *)(v0 + 120), _s14descr1005D9BD1C13UploadRequestVMa);
  sub_1001A4BC8(v1, type metadata accessor for SDAirDropServerConnection);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 96);
  swift_task_dealloc(*(void *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100427AF4()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 120);
  sub_100189B0C(*(void *)(v0 + 168), *(void *)(v0 + 176));
  sub_1001A4BC8(v2, _s14descr1005D9BD1C13UploadRequestVMa);
  sub_1001A4BC8(v1, type metadata accessor for SDAirDropServerConnection);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 96);
  swift_task_dealloc(*(void *)(v0 + 152));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100427B80()
{
  uint64_t v1 = *(void *)(v0 + 152);
  sub_1001A4BC8(*(void *)(v0 + 120), _s14descr1005D9BD1C13UploadRequestVMa);
  sub_1001A4BC8(v1, type metadata accessor for SDAirDropServerConnection);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 96);
  swift_task_dealloc(*(void *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100427C00()
{
  uint64_t v1 = *(void *)(v0 + 288);
  unint64_t v2 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 120);
  sub_100189B0C(v1, v2);
  sub_100189B0C(v1, v2);
  sub_1001A4BC8(v4, _s14descr1005D9BD1C13UploadRequestVMa);
  sub_1001A4BC8(v3, type metadata accessor for SDAirDropServerConnection);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 96);
  swift_task_dealloc(*(void *)(v0 + 152));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100427CA0(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_100183098(&qword_100654E98);
  v2[12] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[13] = v4;
  v2[14] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_100654E48);
  v2[15] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[16] = v6;
  v2[17] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
  v2[18] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[19] = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[20] = swift_task_alloc(v9);
  v2[21] = swift_task_alloc(v9);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v10 = static AirDropActor.shared;
  v2[22] = static AirDropActor.shared;
  return swift_task_switch(sub_100427D9C, v10, 0LL);
}

uint64_t sub_100427D9C()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))( v1,  v0[11] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation,  v3);
  SFProgressContinuation.task.getter(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[23] = v4;
  void *v4 = v0;
  v4[1] = sub_100427E40;
  return SFProgressTask.finalValue.getter(v0[21], v0[12]);
}

uint64_t sub_100427E40()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 184);
  uint64_t v5 = *(void *)(*v1 + 104);
  uint64_t v4 = *(void *)(*v1 + 112);
  uint64_t v6 = *(void *)(*v1 + 96);
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0) {
    uint64_t v7 = sub_100428298;
  }
  else {
    uint64_t v7 = sub_100427ECC;
  }
  return swift_task_switch(v7, *(void *)(v2 + 176), 0LL);
}

uint64_t sub_100427ECC()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, *(void *)(v0 + 168), v2);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  int v5 = enum case for SFAirDropReceive.AskResponse.accept(_:);
  uint64_t v6 = *(void (**)(void, uint64_t))(v3 + 8);
  *(void *)(v0 + 200) = v6;
  if (v4 == v5)
  {
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v8 = *(void *)(v0 + 144);
    uint64_t v9 = *(void *)(v0 + 152);
    v6(*(void *)(v0 + 168), v8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 96))(v7, v8);
    uint64_t v10 = v7 + *(int *)(sub_100183098(&qword_100646590) + 48);
    uint64_t v11 = type metadata accessor for SFAirDropReceive.AcceptContext(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8LL))(v10, v11);
    uint64_t v12 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8LL))(v7, v12);
    uint64_t v13 = *(void *)(v0 + 160);
    uint64_t v14 = *(void *)(v0 + 136);
    uint64_t v15 = *(void *)(v0 + 112);
    swift_task_dealloc(*(void *)(v0 + 168));
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    v6(*(void *)(v0 + 160), *(void *)(v0 + 144));
    if (qword_100644370 != -1) {
      swift_once(&qword_100644370, sub_10042322C);
    }
    uint64_t v17 = type metadata accessor for Logger(0LL);
    uint64_t v18 = sub_100186DE4(v17, (uint64_t)qword_100654D20);
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  v20,  "ASK declined, cancelling receive compression adapter",  v21,  2u);
      swift_slowDealloc(v21, -1LL, -1LL);
    }

    uint64_t v22 = type metadata accessor for SDAirDropReceiveCompressionAdapter(0LL);
    uint64_t v23 = sub_100183F14( &qword_1006456A8,  type metadata accessor for SDAirDropReceiveCompressionAdapter,  (uint64_t)&unk_1004CD4F8);
    uint64_t v24 = dispatch thunk of Actor.unownedExecutor.getter(v22, v23);
    *(void *)(v0 + 208) = v24;
    *(void *)(v0 + 216) = v25;
    return swift_task_switch(sub_1004280F4, v24, v25);
  }

uint64_t sub_1004280F4()
{
  uint64_t v1 = v0[10];
  [*(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropReceiveCompressionAdapter_zipper) stop];
  uint64_t v2 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropReceiveCompressionAdapter_downloadDestinationProvider;
  swift_beginAccess(v2, v0 + 7, 0LL, 0LL);
  if (*(void *)(v2 + 24))
  {
    sub_10019A6C4(v2, (uint64_t)(v0 + 2));
    uint64_t v3 = v0[5];
    uint64_t v4 = v0[6];
    v0[28] = v3;
    v0[29] = v4;
    v0[30] = sub_10019A708(v0 + 2, v3);
    v0[31] = *(void *)(v4 + 24);
    uint64_t v5 = static AirDropActor.shared;
    uint64_t v6 = sub_1004281B4;
  }

  else
  {
    uint64_t v5 = v0[22];
    uint64_t v6 = sub_10042822C;
  }

  return swift_task_switch(v6, v5, 0LL);
}

uint64_t sub_1004281B4()
{
  return swift_task_switch(sub_1004281F0, *(void *)(v0 + 208), *(void *)(v0 + 216));
}

uint64_t sub_1004281F0()
{
  return swift_task_switch(sub_10042822C, *(void *)(v0 + 176), 0LL);
}

uint64_t sub_10042822C()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 112);
  swift_task_dealloc(*(void *)(v0 + 168));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100428298()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 112);
  swift_task_dealloc(*(void *)(v0 + 168));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004285B8()
{
  return type metadata accessor for SDAirDropReceiveHandler(0LL);
}

uint64_t type metadata accessor for SDAirDropReceiveHandler(uint64_t a1)
{
  uint64_t result = qword_100654DD8;
  if (!qword_100654DD8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropReceiveHandler);
  }
  return result;
}

void sub_1004285FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDrop.TransferIdentifier(319LL);
  if (v3 <= 0x3F)
  {
    v28[0] = *(void *)(v2 - 8) + 64LL;
    uint64_t v4 = type metadata accessor for UUID(319LL);
    if (v5 <= 0x3F)
    {
      v28[1] = *(void *)(v4 - 8) + 64LL;
      uint64_t v6 = type metadata accessor for SDAirDropServerConnectionIdentity(319LL);
      if (v7 <= 0x3F)
      {
        v28[2] = *(void *)(v6 - 8) + 64LL;
        v28[3] = &unk_1004DB7C8;
        v28[4] = &unk_1004DB7C8;
        v28[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
        v28[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
        v28[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
        v28[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
        v28[9] = (char *)&value witness table for Builtin.NativeObject + 64;
        v28[10] = &unk_1004DB7E0;
        sub_100428870(319LL);
        if (v9 <= 0x3F)
        {
          v28[11] = *(void *)(v8 - 8) + 64LL;
          sub_1001D21E0(319LL);
          if (v11 <= 0x3F)
          {
            v28[12] = *(void *)(v10 - 8) + 64LL;
            sub_1004288D4(319LL);
            if (v13 <= 0x3F)
            {
              v28[13] = *(void *)(v12 - 8) + 64LL;
              sub_10042892C();
              if (v15 <= 0x3F)
              {
                v28[14] = *(void *)(v14 - 8) + 64LL;
                sub_1001C1100(319LL, &qword_1006474A0, _s12HelloRequestVMa);
                if (v17 <= 0x3F)
                {
                  v28[15] = *(void *)(v16 - 8) + 64LL;
                  sub_1001C1100(319LL, &qword_1006474B8, _s14descr1005DF7D1C10AskRequestVMa);
                  if (v19 <= 0x3F)
                  {
                    v28[16] = *(void *)(v18 - 8) + 64LL;
                    sub_1001C1100(319LL, &qword_1006474D0, _s14descr1005D9BD1C13UploadRequestVMa);
                    if (v21 <= 0x3F)
                    {
                      v28[17] = *(void *)(v20 - 8) + 64LL;
                      sub_1001C1100(319LL, &qword_100654E00, _s14descr1005DEB71C15ExchangeRequestVMa);
                      if (v23 <= 0x3F)
                      {
                        v28[18] = *(void *)(v22 - 8) + 64LL;
                        sub_1001C1100( 319LL,  (unint64_t *)&qword_10064CB50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date);
                        if (v25 <= 0x3F)
                        {
                          v28[19] = *(void *)(v24 - 8) + 64LL;
                          v28[20] = &unk_1004DB7F8;
                          sub_1001C1100(319LL, &qword_100654E08, type metadata accessor for SDAirDropServerConnection);
                          if (v27 <= 0x3F)
                          {
                            uint64_t v29 = *(void *)(v26 - 8) + 64LL;
                            uint64_t v30 = v29;
                            uint64_t v31 = v29;
                            uint64_t v32 = v29;
                            uint64_t v33 = v29;
                            os_log_type_t v34 = &unk_1004DB810;
                            v35 = &unk_1004DB828;
                            swift_updateClassMetadata2(a1, 256LL, 28LL, v28, a1 + 80);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

void sub_100428870(uint64_t a1)
{
  if (!qword_100654DE8)
  {
    uint64_t v2 = type metadata accessor for SFAirDrop.AskProgress(255LL);
    uint64_t v3 = type metadata accessor for SFAirDropReceive.AskResponse(255LL);
    unint64_t v4 = type metadata accessor for SFProgressContinuation(a1, v2, v3);
    if (!v5) {
      atomic_store(v4, (unint64_t *)&qword_100654DE8);
    }
  }

void sub_1004288D4(uint64_t a1)
{
  if (!qword_100654DF0)
  {
    uint64_t v2 = sub_100183124(&qword_100650B60);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_100654DF0);
    }
  }

void sub_10042892C()
{
  if (!qword_100654DF8)
  {
    unint64_t v0 = type metadata accessor for SFProgressContinuation( 0LL,  &type metadata for SDAirDropReceiveHandler.State,  &type metadata for SDAirDropReceiveHandler.State);
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100654DF8);
    }
  }

uint64_t storeEnumTagSinglePayload for SDAirDropReceiveHandler.State( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_1004289D0 + 4 * byte_1004DB775[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100428A04 + 4 * byte_1004DB770[v4]))();
}

uint64_t sub_100428A04(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100428A0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100428A14LL);
  }
  return result;
}

uint64_t sub_100428A20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100428A28LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_100428A2C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100428A34(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropReceiveHandler.State()
{
  return &type metadata for SDAirDropReceiveHandler.State;
}

unint64_t sub_100428A54()
{
  unint64_t result = qword_100654E10;
  if (!qword_100654E10)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DB888, &type metadata for SDAirDropReceiveHandler.State);
    atomic_store(result, &qword_100654E10);
  }

  return result;
}

uint64_t sub_100428A98()
{
  return sub_100183F14( &qword_100646250,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
}

uint64_t sub_100428AC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_id;
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, v3, v4);
}

uint64_t sub_100428B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = sub_100183098(&qword_1006457D8);
  v4[9] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[10] = v6;
  v4[11] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFAirDrop.Progress(0LL);
  v4[12] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[13] = v8;
  v4[14] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100428BCC, static AirDropActor.shared, 0LL);
}

uint64_t sub_100428BCC()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_totalBytes;
  uint64_t v4 = *(void *)v3;
  char v5 = *(_BYTE *)(v3 + 8);
  __int128 v6 = *(_OWORD *)(v0 + 48);
  *(void *)uint64_t v1 = *(void *)(v0 + 40);
  *(void *)(v1 + 8) = v4;
  *(_BYTE *)(v1 + 16) = v5;
  *(_OWORD *)(v1 + 24) = v6;
  (*(void (**)(void))(v2 + 104))();
  if (qword_100644370 != -1) {
    swift_once(&qword_100644370, sub_10042322C);
  }
  uint64_t v7 = *(void **)(v0 + 64);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v8, (uint64_t)qword_100654D20);
  unint64_t v9 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = *(void *)(v0 + 48);
    uint64_t v12 = swift_slowAlloc(22LL, -1LL);
    uint64_t v13 = swift_slowAlloc(32LL, -1LL);
    uint64_t v27 = v13;
    *(_DWORD *)uint64_t v12 = 134218242;
    *(void *)(v0 + 16) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v12 + 4, v12 + 12);
    *(_WORD *)(v12 + 12) = 2080;
    if ((*(_BYTE *)(v3 + 8) & 1) != 0)
    {
      unint64_t v14 = 0x800000010050F830LL;
      uint64_t v15 = 0xD000000000000019LL;
    }

    else
    {
      *(void *)(v0 + 24) = *(void *)v3;
      unint64_t v17 = sub_1001DFED0();
      uint64_t v15 = BinaryInteger.description.getter(&type metadata for Int, v17);
      unint64_t v14 = v18;
    }

    unint64_t v19 = *(void **)(v0 + 64);
    *(void *)(v0 + 32) = sub_10018CDB4(v15, v14, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v12 + 14, v12 + 22);
    swift_bridgeObjectRelease(v14);

    _os_log_impl( (void *)&_mh_execute_header,  v9,  v10,  "Decompression progress copied: %ld total: %s",  (uint8_t *)v12,  0x16u);
    swift_arrayDestroy(v13, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {
    uint64_t v16 = *(void **)(v0 + 64);
  }

  uint64_t v21 = *(void *)(v0 + 104);
  uint64_t v20 = *(void *)(v0 + 112);
  uint64_t v22 = *(void *)(v0 + 88);
  uint64_t v23 = *(void *)(v0 + 96);
  uint64_t v24 = *(void *)(v0 + 72);
  uint64_t v25 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))( v22,  *(void *)(v0 + 64) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation,  v24);
  SFProgressContinuation.yield(_:)(v20, v24);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v22, v24);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v23);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100428E8C(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = sub_100183098(&qword_1006457D8);
  v2[5] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v5 = static AirDropActor.shared;
  v2[8] = static AirDropActor.shared;
  return swift_task_switch(sub_100428F24, v5, 0LL);
}

uint64_t sub_100428F24()
{
  if (qword_100644370 != -1) {
    swift_once(&qword_100644370, sub_10042322C);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100654D20);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Decompression finished, sending UPLOAD response", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  __int128 v6 = (void *)swift_task_alloc(dword_100654F04);
  *(void *)(v0 + 72) = v6;
  *__int128 v6 = v0;
  v6[1] = sub_100429020;
  return sub_10042597C();
}

uint64_t sub_100429020()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 72);
  uint64_t v4 = *v1;
  swift_task_dealloc(v3);
  if (!v0) {
    return swift_task_switch(sub_100429090, *(void *)(v2 + 64), 0LL);
  }
  swift_task_dealloc(*(void *)(v2 + 56));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_100429090()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))( v1,  *(void *)(v0 + 32) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation,  v3);
  *(void *)(v0 + 16) = v4;
  SFProgressContinuation.finish(with:)(v0 + 16, v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100429114( uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = v11;
  uint64_t v87 = a8;
  v85 = a7;
  uint64_t v83 = a6;
  v81 = a5;
  v80 = a4;
  uint64_t v78 = a2;
  uint64_t v101 = a1;
  uint64_t v84 = a11;
  uint64_t v86 = a10;
  uint64_t v82 = a9;
  ObjectType = (objc_class *)swift_getObjectType(v11);
  uint64_t v14 = type metadata accessor for SFAirDrop.Progress(0LL);
  uint64_t v96 = *(void *)(v14 - 8);
  uint64_t v97 = v14;
  __chkstk_darwin(v14);
  v94 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_100183098(&qword_1006457D8);
  uint64_t v98 = *(void *)(v16 - 8);
  uint64_t v99 = v16;
  __chkstk_darwin(v16);
  v95 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for SFAirDrop.AskProgress(0LL);
  uint64_t v90 = *(void *)(v18 - 8);
  uint64_t v91 = v18;
  __chkstk_darwin(v18);
  v89 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_100183098(&qword_100654E48);
  uint64_t v92 = *(void *)(v20 - 8);
  uint64_t v93 = v20;
  __chkstk_darwin(v20);
  v88 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v79 = sub_100183098(&qword_100650C58);
  uint64_t v77 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  v76 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for UUID(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_delegate];
  *((void *)v27 + 1) = 0LL;
  swift_unknownObjectWeakInit(v27, 0LL);
  uint64_t v28 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveServiceDelegate];
  *((void *)v28 + 1) = 0LL;
  swift_unknownObjectWeakInit(v28, 0LL);
  uint64_t v29 = (uint64_t *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID];
  uint64_t v30 = v12;
  uint64_t v31 = UUID.init()(v30);
  uint64_t v32 = UUID.uuidString.getter(v31);
  uint64_t v34 = v33;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  *uint64_t v29 = v32;
  v29[1] = v34;
  v35 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation];
  uint64_t v36 = sub_100183098(&qword_100650B60);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56LL))(v35, 1LL, 1LL, v36);
  v37 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_helloRequest];
  uint64_t v38 = _s12HelloRequestVMa(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56LL))(v37, 1LL, 1LL, v38);
  v39 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest];
  uint64_t v40 = _s14descr1005DF7D1C10AskRequestVMa(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56LL))(v39, 1LL, 1LL, v40);
  v41 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadRequest];
  uint64_t v42 = _s14descr1005D9BD1C13UploadRequestVMa(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56LL))(v41, 1LL, 1LL, v42);
  v43 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeRequest];
  uint64_t v44 = _s14descr1005DEB71C15ExchangeRequestVMa(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56LL))(v43, 1LL, 1LL, v44);
  v45 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferStart];
  uint64_t v46 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56LL))(v45, 1LL, 1LL, v46);
  *(void *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveCompressionAdapter] = 0LL;
  v47 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_helloConnection];
  uint64_t v48 = type metadata accessor for SDAirDropServerConnection(0LL);
  v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56LL);
  v49(v47, 1LL, 1LL, v48);
  v49(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection], 1LL, 1LL, v48);
  v49(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection], 1LL, 1LL, v48);
  v49(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeConnection], 1LL, 1LL, v48);
  v49(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_errorConnection], 1LL, 1LL, v48);
  v50 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_totalBytes];
  *(void *)v50 = 0LL;
  v50[8] = 1;
  v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_shouldExtractMedia] = 0;
  v51 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_id];
  uint64_t v52 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v75 = *(void *)(v52 - 8);
  uint64_t v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 16))(v51, v101, v52);
  UUID.init()(v53);
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))( &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveID],  v26,  v23);
  uint64_t v54 = v78;
  sub_1001A4B84( v78,  (uint64_t)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity],  type metadata accessor for SDAirDropServerConnectionIdentity);
  *(void *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_deviceStatus] = a3;
  v55 = v80;
  *(void *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_nearbyAgent] = v80;
  v56 = v81;
  *(void *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_endpointService] = v81;
  uint64_t v57 = v83;
  *(void *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_pseudonymService] = v83;
  v58 = v85;
  *(void *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_queue] = v85;
  *((void *)v27 + 1) = v82;
  swift_unknownObjectWeakAssign(v27, v87);
  *((void *)v28 + 1) = v84;
  swift_unknownObjectWeakAssign(v28, v86);
  v103[0] = 0;
  id v59 = a3;
  id v60 = v55;
  id v61 = v56;
  swift_retain(v57);
  id v62 = v58;
  v63 = v76;
  SFProgressContinuation.init(_:initialProgress:file:line:)( 0xD000000000000013LL,  0x800000010050F7C0LL,  v103,  0xD00000000000005ELL,  0x800000010050F760LL,  101LL,  &type metadata for SDAirDropReceiveHandler.State,  &type metadata for SDAirDropReceiveHandler.State);
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))( &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_handlerContinuation],  v63,  v79);
  v64 = v89;
  uint64_t v65 = v91;
  (*(void (**)(char *, void, uint64_t))(v90 + 104))( v89,  enum case for SFAirDrop.AskProgress.notStarted(_:),  v91);
  uint64_t v66 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
  v67 = v88;
  SFProgressContinuation.init(_:initialProgress:file:line:)( 0x69746E6F436B7341LL,  0xEF6E6F697461756ELL,  v64,  0xD00000000000005ELL,  0x800000010050F760LL,  102LL,  v65,  v66);
  (*(void (**)(char *, char *, uint64_t))(v92 + 32))( &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation],  v67,  v93);
  uint64_t v68 = v97;
  v69 = v94;
  (*(void (**)(char *, void, uint64_t))(v96 + 104))( v94,  enum case for SFAirDrop.Progress.notStarted(_:),  v97);
  uint64_t v70 = sub_100183098((uint64_t *)&unk_1006464E0);
  v71 = v95;
  SFProgressContinuation.init(_:initialProgress:file:line:)( 0xD000000000000014LL,  0x800000010050F7E0LL,  v69,  0xD00000000000005ELL,  0x800000010050F760LL,  103LL,  v68,  v70);
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))( &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation],  v71,  v99);

  v102.receiver = v30;
  v102.super_class = ObjectType;
  id v72 = objc_msgSendSuper2(&v102, "init");
  sub_1001A4BC8(v54, type metadata accessor for SDAirDropServerConnectionIdentity);
  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v101, v52);
  return v72;
}

uint64_t sub_1004298A4(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for SDAirDropMessage(0LL);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v4 = static AirDropActor.shared;
  v2[6] = static AirDropActor.shared;
  return swift_task_switch(sub_100429934, v4, 0LL);
}

uint64_t sub_100429934()
{
  if (qword_100644370 != -1) {
    swift_once(&qword_100644370, sub_10042322C);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100654D20);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Sending HELLO response", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  uint64_t v7 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v8 = v0[2];

  *(_DWORD *)uint64_t v6 = v8;
  *(_BYTE *)(v6 + 4) = BYTE4(v8);
  swift_storeEnumTagMultiPayload(v6, v7, 1LL);
  unint64_t v9 = (void *)swift_task_alloc(dword_100653384);
  v0[7] = v9;
  *unint64_t v9 = v0;
  v9[1] = sub_100429A5C;
  return sub_1003E89C8(v0[5]);
}

uint64_t sub_100429A5C()
{
  uint64_t v2 = *(void *)(*v1 + 56);
  uint64_t v3 = *(void *)(*v1 + 40);
  uint64_t v4 = *v1;
  *(void *)(v4 + 64) = v0;
  swift_task_dealloc(v2);
  sub_1001A4BC8(v3, type metadata accessor for SDAirDropMessage);
  if (v0) {
    return swift_task_switch(sub_100429AF0, *(void *)(v4 + 48), 0LL);
  }
  swift_task_dealloc(*(void *)(v4 + 40));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_100429AF0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100429B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_1006527A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100429B8C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100654F08);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100654F08);
  if (qword_100644028 != -1) {
    swift_once(&qword_100644028, sub_10023A59C);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_100429C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v5 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v48 - v14;
  __chkstk_darwin(v13);
  v56 = (char *)&v48 - v16;
  uint64_t v17 = sub_100183098(&qword_1006457E0);
  uint64_t v18 = swift_allocObject(v17, 192LL, 7LL);
  *(_OWORD *)(v18 + 16) = xmmword_1004CE420;
  if (qword_100644380 != -1) {
    swift_once(&qword_100644380, LongHash.storage.getter);
  }
  *(void *)(v18 + 56) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(void *)(v18 + 64) = &off_10064ABB8;
  *(void *)(v18 + 96) = &type metadata for SDAuthentication.Operation.CheckLockRegisteredAndArmedWithAKSManager;
  *(void *)(v18 + 104) = &off_10064A9D8;
  *(void *)(v18 + 136) = &type metadata for SDAuthentication.Operation.IncludeLastRegistrationInMessage;
  *(void *)(v18 + 144) = &off_10064AA38;
  *(void *)(v18 + 176) = &type metadata for SDAuthentication.Operation.SendRequestMessage;
  *(void *)(v18 + 184) = &off_10064AB38;
  *a3 = v18;
  uint64_t v19 = (int *)_s8KeyCheckV18InitialLockContextVMa(0LL);
  uint64_t v20 = (uint64_t)a3 + v19[6];
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v55(v20, 1LL, 1LL, v8);
  *(uint64_t *)((char *)a3 + v19[8]) = 0LL;
  *((_BYTE *)a3 + v19[9]) = 0;
  sub_1001D95A8(a2, (uint64_t)v7);
  uint64_t v21 = a2;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1LL, v8) == 1)
  {
    uint64_t v22 = a2;
    sub_100187100((uint64_t)v7, &qword_1006457E8);
    uint64_t v23 = v57;
    if (qword_100644378 != -1) {
      swift_once(&qword_100644378, sub_100429B8C);
    }
    uint64_t v24 = type metadata accessor for Logger(0LL);
    uint64_t v25 = sub_100186DE4(v24, (uint64_t)qword_100654F08);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = v23;
      uint64_t v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  v27,  "Start key check flow, device hasn't been locked yet",  v29,  2u);
      uint64_t v30 = v29;
      uint64_t v23 = v28;
      swift_slowDealloc(v30, -1LL, -1LL);
    }

    static Date.distantFuture.getter();
    sub_100187100(v22, &qword_1006457E8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))((char *)a3 + v19[7], v12, v8);
  }

  else
  {
    uint64_t v31 = v56;
    uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v54(v56, v7, v8);
    if (qword_100644378 != -1) {
      swift_once(&qword_100644378, sub_100429B8C);
    }
    uint64_t v32 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v32, (uint64_t)qword_100654F08);
    uint64_t v53 = *(uint64_t (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v33 = v53(v15, v31, v8);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v51 = swift_slowAlloc(32LL, -1LL);
      uint64_t v59 = v51;
      uint64_t v52 = v21;
      *(_DWORD *)uint64_t v36 = 136315138;
      v37 = v36 + 12;
      v49 = v36 + 4;
      v50 = v36;
      unint64_t v38 = sub_1002ACCD0();
      uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter(v8, v38);
      unint64_t v41 = v40;
      uint64_t v58 = sub_10018CDB4(v39, v40, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59, v49, v37);
      __n128 v42 = swift_bridgeObjectRelease(v41);
      (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v15, v8, v42);
      v43 = v50;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Start key check flow, unlockDate: %s", v50, 0xCu);
      uint64_t v44 = v51;
      swift_arrayDestroy(v51, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1LL, -1LL);
      swift_slowDealloc(v43, -1LL, -1LL);

      uint64_t v45 = v52;
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
      uint64_t v45 = v21;
    }

    sub_100187100(v45, &qword_1006457E8);
    uint64_t v23 = v57;
    sub_100187100(v20, &qword_1006457E8);
    uint64_t v46 = v56;
    v53((char *)v20, v56, v8);
    v55(v20, 0LL, 1LL, v8);
    v54((char *)a3 + v19[7], v46, v8);
  }

  return sub_1001A4B40(v23, (uint64_t)a3 + v19[5], type metadata accessor for SDAuthenticationSessionMetrics);
}

uint64_t _s8KeyCheckV18InitialLockContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_100655010, (uint64_t)&_s8KeyCheckV18InitialLockContextVMn);
}

id sub_10042A170()
{
  return sub_1001A3224(_s8KeyCheckV18InitialLockContextVMa, (Class *)off_1005C8870);
}

uint64_t sub_10042A194(uint64_t a1, uint64_t a2)
{
  return sub_1001A37A0(a1, a2, _s8KeyCheckV18InitialLockContextVMa, (Class *)off_1005C8870);
}

void sub_10042A1B8(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v6 = sub_100183098(&qword_1006457E0);
  uint64_t v7 = swift_allocObject(v6, 232LL, 7LL);
  *(_OWORD *)(v7 + 16) = xmmword_1004CD1E0;
  if (qword_100644380 != -1) {
    swift_once(&qword_100644380, LongHash.storage.getter);
  }
  unint64_t v8 = 0xD00000000000002ALL;
  *(void *)(v7 + 56) = &type metadata for SDAuthentication.Operation.CheckIsBluetoothEnabled;
  *(void *)(v7 + 64) = &off_10064AC58;
  *(void *)(v7 + 96) = &type metadata for SDAuthentication.Operation.CheckRemoteDeviceOSVersionIsSupported;
  *(void *)(v7 + 104) = &off_10064ABF8;
  *(void *)(v7 + 136) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(void *)(v7 + 144) = &off_10064ABB8;
  *(void *)(v7 + 176) = &type metadata for SDAuthentication.Operation.CheckRegistered;
  *(void *)(v7 + 184) = &off_10064B1F8;
  *(void *)(v7 + 216) = &type metadata for SDAuthentication.Operation.SendConfirmation;
  *(void *)(v7 + 224) = &off_10064B238;
  *a3 = (const char *)v7;
  uint64_t v9 = (int *)_s8KeyCheckV21HandleKeyCheckContextVMa(0LL);
  uint64_t v10 = v9[8];
  *(const char **)((char *)a3 + v10) = 0LL;
  *((_BYTE *)a3 + v9[9]) = 2;
  uint64_t v11 = _s8KeyCheckV17InitialKeyContextVMa(0LL);
  uint64_t v26 = a2;
  uint64_t v12 = (uint64_t)a3 + v9[5];
  sub_1001A4B84(a2 + *(int *)(v11 + 20), v12, type metadata accessor for SDAuthenticationSessionMetrics);
  unsigned int v13 = [a1 hasUnlockDate];
  if (v13)
  {
    Date.init(timeIntervalSince1970:)([a1 unlockDate]);
    unint64_t v14 = 0x800000010050F880LL;
    if ([a1 hasRegistrationID])
    {
      id v15 = [a1 registrationID];
      if (v15)
      {
        uint64_t v16 = v15;
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
        uint64_t v19 = v18;

        sub_1001A4BC8(v26, _s8KeyCheckV17InitialKeyContextVMa);
        uint64_t v20 = (uint64_t *)((char *)a3 + v9[7]);
        *uint64_t v20 = v17;
        v20[1] = v19;
        return;
      }
    }
  }

  else
  {
    unint64_t v8 = 0xD000000000000027LL;
    unint64_t v14 = 0x800000010050F850LL;
  }

  unint64_t v21 = sub_100187014();
  uint64_t v22 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v21, 0LL, 0LL);
  *(_DWORD *)uint64_t v23 = 1;
  *(void *)(v23 + 8) = v8;
  *(void *)(v23 + 16) = v14;
  swift_willThrow(v22);

  sub_1001A4BC8(v26, _s8KeyCheckV17InitialKeyContextVMa);
  swift_bridgeObjectRelease(*a3);
  sub_1001A4BC8(v12, type metadata accessor for SDAuthenticationSessionMetrics);
  if (v13)
  {
    uint64_t v24 = (char *)a3 + v9[6];
    uint64_t v25 = type metadata accessor for Date(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8LL))(v24, v25);
  }
}

uint64_t sub_10042A470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for Date(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, v4, v5);
}

id sub_10042A4B0()
{
  return sub_1001A3224(_s8KeyCheckV21HandleKeyCheckContextVMa, (Class *)off_1005C8838);
}

uint64_t sub_10042A4D4(uint64_t a1, uint64_t a2)
{
  return sub_1001A37A0(a1, a2, _s8KeyCheckV21HandleKeyCheckContextVMa, (Class *)off_1005C8838);
}

void sub_10042A4F8(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v6 = sub_100183098(&qword_1006457E0);
  uint64_t v7 = swift_allocObject(v6, 72LL, 7LL);
  *(_OWORD *)(v7 + 16) = xmmword_1004CDCA0;
  if (qword_100644380 != -1) {
    swift_once(&qword_100644380, LongHash.storage.getter);
  }
  *(void *)(v7 + 56) = &type metadata for SDAuthentication.Operation.HandleSucceededResult;
  *(void *)(v7 + 64) = &off_10064B218;
  *a3 = (const char *)v7;
  if ([a1 hasSuccess])
  {
    uint64_t v8 = a2 + *(int *)(_s8KeyCheckV18InitialLockContextVMa(0LL) + 20);
    uint64_t v9 = _s8KeyCheckV25HandleConfirmationContextVMa(0LL);
    sub_1001A4B84(v8, (uint64_t)a3 + *(int *)(v9 + 20), type metadata accessor for SDAuthenticationSessionMetrics);
    LOBYTE(v8) = [a1 success];

    sub_1001A4BC8(a2, _s8KeyCheckV18InitialLockContextVMa);
    *((_BYTE *)a3 + *(int *)(v9 + 24)) = v8;
  }

  else
  {
    unint64_t v10 = sub_100187014();
    uint64_t v11 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v10, 0LL, 0LL);
    *(_DWORD *)uint64_t v12 = 1;
    *(void *)(v12 + 8) = 0xD000000000000016LL;
    *(void *)(v12 + 16) = 0x8000000100504210LL;
    swift_willThrow(v11);

    sub_1001A4BC8(a2, _s8KeyCheckV18InitialLockContextVMa);
    swift_bridgeObjectRelease(*a3);
  }

void sub_10042A68C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v65 = a3;
  uint64_t v60 = _s8KeyCheckV25HandleConfirmationContextVMa(0LL);
  __chkstk_darwin(v60);
  v64 = (const char **)((char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = sub_100183098(&qword_1006550E8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = _s8KeyCheckV18InitialLockContextVMa(0LL);
  uint64_t v66 = *(void *)(v8 - 8);
  uint64_t v67 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v62 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v63 = (uint64_t)&v59 - v11;
  uint64_t v61 = _s8KeyCheckV21HandleKeyCheckContextVMa(0LL);
  __chkstk_darwin(v61);
  unsigned int v13 = (const char **)((char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v14 = sub_100183098(&qword_1006550F0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = _s8KeyCheckV17InitialKeyContextVMa(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v59 - v22;
  sub_10019A6C4(a1, (uint64_t)v70);
  uint64_t v24 = sub_100183098(&qword_1006500D0);
  uint64_t v25 = sub_100183168(0LL, &qword_100645A08, off_1005C8870);
  if (swift_dynamicCast(&v71, v70, v24, v25, 6LL))
  {
    uint64_t v26 = v71;
    sub_10019A6C4(v69, (uint64_t)v70);
    uint64_t v27 = sub_100183098(&qword_100645A28);
    int v28 = swift_dynamicCast(v16, v70, v27, v17, 6LL);
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    if (!v28)
    {
      v29(v16, 1LL, 1LL, v17);
      sub_100187100((uint64_t)v16, &qword_1006550F0);
      unint64_t v44 = sub_100187014();
      uint64_t v45 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v44, 0LL, 0LL);
      *(_DWORD *)uint64_t v46 = 10;
      *(void *)(v46 + 8) = 0xD000000000000046LL;
      *(void *)(v46 + 16) = 0x80000001005040E0LL;
      swift_willThrow(v45);

      return;
    }

    v29(v16, 0LL, 1LL, v17);
    sub_1001A4B40((uint64_t)v16, (uint64_t)v23, _s8KeyCheckV17InitialKeyContextVMa);
    sub_1001A4B84((uint64_t)v23, (uint64_t)v21, _s8KeyCheckV17InitialKeyContextVMa);
    id v30 = v26;
    uint64_t v31 = v68;
    sub_10042A1B8(v30, (uint64_t)v21, v13);
    if (v31)
    {
      sub_1001A4BC8((uint64_t)v23, _s8KeyCheckV17InitialKeyContextVMa);

      return;
    }

    uint64_t v53 = v65;
    v65[3] = v61;
    v53[4] = &off_1005E19B8;
    uint64_t v54 = sub_1001A4B04(v53);
    sub_1001A4B40((uint64_t)v13, (uint64_t)v54, _s8KeyCheckV21HandleKeyCheckContextVMa);

    v55 = _s8KeyCheckV17InitialKeyContextVMa;
    uint64_t v56 = (uint64_t)v23;
  }

  else
  {
    uint64_t v32 = v69;
    sub_10019A6C4(a1, (uint64_t)v70);
    uint64_t v33 = sub_100183168(0LL, &qword_100645A20, off_1005C8838);
    if (!swift_dynamicCast(&v71, v70, v24, v33, 6LL))
    {
      unint64_t v47 = sub_100187014();
      uint64_t v48 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v47, 0LL, 0LL);
      *(_DWORD *)uint64_t v49 = 10;
      *(void *)(v49 + 8) = 0xD00000000000001FLL;
      *(void *)(v49 + 16) = 0x8000000100503F30LL;
      swift_willThrow(v48);
      return;
    }

    uint64_t v34 = v71;
    sub_10019A6C4(v32, (uint64_t)v70);
    uint64_t v35 = sub_100183098(&qword_100645A28);
    uint64_t v36 = v67;
    int v37 = swift_dynamicCast(v7, v70, v35, v67, 6LL);
    unint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56);
    if (!v37)
    {
      v38(v7, 1LL, 1LL, v36);
      sub_100187100((uint64_t)v7, &qword_1006550E8);
      unint64_t v50 = sub_100187014();
      uint64_t v51 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v50, 0LL, 0LL);
      *(_DWORD *)uint64_t v52 = 10;
      *(void *)(v52 + 8) = 0xD000000000000047LL;
      *(void *)(v52 + 16) = 0x8000000100504040LL;
      swift_willThrow(v51);

      return;
    }

    v38(v7, 0LL, 1LL, v36);
    uint64_t v39 = v63;
    sub_1001A4B40((uint64_t)v7, v63, _s8KeyCheckV18InitialLockContextVMa);
    uint64_t v40 = v62;
    sub_1001A4B84(v39, v62, _s8KeyCheckV18InitialLockContextVMa);
    id v41 = v34;
    __n128 v42 = v64;
    uint64_t v43 = v68;
    sub_10042A4F8(v41, v40, v64);
    if (v43)
    {
      sub_1001A4BC8(v39, _s8KeyCheckV18InitialLockContextVMa);

      return;
    }

    uint64_t v57 = v65;
    v65[3] = v60;
    v57[4] = &off_1005E19D0;
    uint64_t v58 = sub_1001A4B04(v57);
    sub_1001A4B40((uint64_t)v42, (uint64_t)v58, _s8KeyCheckV25HandleConfirmationContextVMa);

    v55 = _s8KeyCheckV18InitialLockContextVMa;
    uint64_t v56 = v39;
  }

  sub_1001A4BC8(v56, v55);
}

void sub_10042AC40(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
}

uint64_t sub_10042AC54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10042AC60);
}

uint64_t sub_10042AC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  return (v9 + 1);
}

uint64_t sub_10042ACE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10042ACEC);
}

uint64_t sub_10042ACEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t _s8KeyCheckV4FlowVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_100654F78, (uint64_t)&_s8KeyCheckV4FlowVMn);
}

uint64_t sub_10042AD7C(uint64_t a1)
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "(";
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

const char *sub_10042ADFC(const char **a1, const char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16LL) & ~(unint64_t)v3];
    swift_retain();
  }

  else
  {
    uint64_t v7 = (const char *)a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date(0LL);
    uint64_t v12 = *(void *)(v11 - 8);
    unsigned int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
    __n128 v14 = swift_bridgeObjectRetain(v4);
    v88 = a2;
    if (v13(v10, 1LL, v11, v14))
    {
      uint64_t v15 = sub_100183098(&qword_1006457E8);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
    }

    uint64_t v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v17 = v16[5];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v17], 1LL, v11))
    {
      uint64_t v20 = sub_100183098(&qword_1006457E8);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v19, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0LL, 1LL, v11);
    }

    uint64_t v21 = v16[6];
    uint64_t v22 = &v9[v21];
    uint64_t v23 = &v10[v21];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v21], 1LL, v11))
    {
      uint64_t v24 = sub_100183098(&qword_1006457E8);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v22, v23, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v22, 0LL, 1LL, v11);
    }

    uint64_t v25 = v16[7];
    uint64_t v26 = &v9[v25];
    uint64_t v27 = &v10[v25];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v25], 1LL, v11))
    {
      uint64_t v28 = sub_100183098(&qword_1006457E8);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v26, v27, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v26, 0LL, 1LL, v11);
    }

    uint64_t v29 = v16[8];
    id v30 = &v9[v29];
    uint64_t v31 = &v10[v29];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v29], 1LL, v11))
    {
      uint64_t v32 = sub_100183098(&qword_1006457E8);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v30, v31, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v30, 0LL, 1LL, v11);
    }

    uint64_t v33 = v16[9];
    uint64_t v34 = &v9[v33];
    uint64_t v35 = &v10[v33];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v33], 1LL, v11))
    {
      uint64_t v36 = sub_100183098(&qword_1006457E8);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v34, v35, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v34, 0LL, 1LL, v11);
    }

    uint64_t v37 = v16[10];
    unint64_t v38 = &v9[v37];
    uint64_t v39 = &v10[v37];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v37], 1LL, v11))
    {
      uint64_t v40 = sub_100183098(&qword_1006457E8);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v38, v39, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v38, 0LL, 1LL, v11);
    }

    uint64_t v41 = v16[11];
    __n128 v42 = &v9[v41];
    uint64_t v43 = &v10[v41];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v41], 1LL, v11))
    {
      uint64_t v44 = sub_100183098(&qword_1006457E8);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v42, v43, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v42, 0LL, 1LL, v11);
    }

    uint64_t v45 = v16[12];
    uint64_t v46 = &v9[v45];
    unint64_t v47 = &v10[v45];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v45], 1LL, v11))
    {
      uint64_t v48 = sub_100183098(&qword_1006457E8);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v46, v47, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v46, 0LL, 1LL, v11);
    }

    v9[v16[13]] = v10[v16[13]];
    uint64_t v49 = v16[14];
    unint64_t v50 = &v9[v49];
    uint64_t v51 = &v10[v49];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v49], 1LL, v11))
    {
      uint64_t v52 = sub_100183098(&qword_1006457E8);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v50, v51, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v50, 0LL, 1LL, v11);
    }

    uint64_t v53 = v16[15];
    uint64_t v54 = &v9[v53];
    v55 = &v10[v53];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v53], 1LL, v11))
    {
      uint64_t v56 = sub_100183098(&qword_1006457E8);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v54, v55, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v54, 0LL, 1LL, v11);
    }

    uint64_t v57 = v16[16];
    uint64_t v58 = &v9[v57];
    uint64_t v59 = &v10[v57];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v57], 1LL, v11))
    {
      uint64_t v60 = sub_100183098(&qword_1006457E8);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v58, v59, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v58, 0LL, 1LL, v11);
    }

    uint64_t v61 = v16[17];
    uint64_t v62 = &v9[v61];
    uint64_t v63 = &v10[v61];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v61], 1LL, v11))
    {
      uint64_t v64 = sub_100183098(&qword_1006457E8);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v62, v63, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v62, 0LL, 1LL, v11);
    }

    uint64_t v65 = v16[18];
    uint64_t v66 = &v9[v65];
    uint64_t v67 = &v10[v65];
    *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
    v66[4] = v67[4];
    v9[v16[19]] = v10[v16[19]];
    uint64_t v68 = v16[20];
    uint64_t v69 = &v9[v68];
    uint64_t v70 = &v10[v68];
    v71 = (const char *)*((void *)v70 + 1);
    *(void *)uint64_t v69 = *(void *)v70;
    *((void *)v69 + 1) = v71;
    uint64_t v72 = v16[21];
    v73 = &v9[v72];
    uint64_t v74 = &v10[v72];
    uint64_t v75 = (const char *)*((void *)v74 + 1);
    *(void *)v73 = *(void *)v74;
    *((void *)v73 + 1) = v75;
    uint64_t v76 = a3[6];
    uint64_t v77 = (char *)&v7[v76];
    uint64_t v78 = (char *)v88 + v76;
    *(void *)&double v79 = swift_bridgeObjectRetain(v71).n128_u64[0];
    __n128 v80 = swift_bridgeObjectRetain(v75, v79);
    if (v13(v78, 1LL, v11, v80))
    {
      uint64_t v81 = sub_100183098(&qword_1006457E8);
      memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64LL));
      (*(void (**)(const char *, char *, uint64_t))(v12 + 16))(&v7[a3[7]], (char *)v88 + a3[7], v11);
    }

    else
    {
      uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      v82(v77, v78, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v77, 0LL, 1LL, v11);
      v82((char *)&v7[a3[7]], (char *)v88 + a3[7], v11);
    }

    uint64_t v83 = a3[8];
    uint64_t v84 = a3[9];
    v85 = *(void **)((char *)v88 + v83);
    *(void *)&v7[v83] = v85;
    v7[v84] = *((_BYTE *)v88 + v84);
    id v86 = v85;
  }

  return v7;
}

void sub_10042B564(const char **a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v9 = &v4[v8[5]];
  if (!v7(v9, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = &v4[v8[6]];
  if (!v7(v10, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = &v4[v8[7]];
  if (!v7(v11, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = &v4[v8[8]];
  if (!v7(v12, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  unsigned int v13 = &v4[v8[9]];
  if (!v7(v13, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  }
  __n128 v14 = &v4[v8[10]];
  if (!v7(v14, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = &v4[v8[11]];
  if (!v7(v15, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = &v4[v8[12]];
  if (!v7(v16, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = &v4[v8[14]];
  if (!v7(v17, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = &v4[v8[15]];
  if (!v7(v18, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = &v4[v8[16]];
  if (!v7(v19, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = &v4[v8[17]];
  if (!v7(v20, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v5);
  }
  *(void *)&double v21 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[20] + 8]).n128_u64[0];
  __n128 v22 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[21] + 8], v21);
  uint64_t v23 = (char *)a1 + a2[6];
  int v24 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v7)(v23, 1LL, v5, v22);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  if (!v24) {
    v25(v23, v5);
  }
  v25((char *)a1 + a2[7], v5);
}

const char **sub_10042B864(const char **a1, const char **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
  __n128 v13 = swift_bridgeObjectRetain(v6);
  uint64_t v87 = a3;
  if (v12(v9, 1LL, v10, v13))
  {
    uint64_t v14 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
  }

  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v16 = v15[5];
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v16], 1LL, v10))
  {
    uint64_t v19 = sub_100183098(&qword_1006457E8);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0LL, 1LL, v10);
  }

  uint64_t v20 = v15[6];
  double v21 = &v8[v20];
  __n128 v22 = &v9[v20];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v20], 1LL, v10))
  {
    uint64_t v23 = sub_100183098(&qword_1006457E8);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v21, v22, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0LL, 1LL, v10);
  }

  uint64_t v24 = v15[7];
  uint64_t v25 = &v8[v24];
  uint64_t v26 = &v9[v24];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v24], 1LL, v10))
  {
    uint64_t v27 = sub_100183098(&qword_1006457E8);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v25, v26, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0LL, 1LL, v10);
  }

  uint64_t v28 = v15[8];
  uint64_t v29 = &v8[v28];
  id v30 = &v9[v28];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v28], 1LL, v10))
  {
    uint64_t v31 = sub_100183098(&qword_1006457E8);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v29, v30, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v29, 0LL, 1LL, v10);
  }

  uint64_t v32 = v15[9];
  uint64_t v33 = &v8[v32];
  uint64_t v34 = &v9[v32];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v32], 1LL, v10))
  {
    uint64_t v35 = sub_100183098(&qword_1006457E8);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v33, v34, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v33, 0LL, 1LL, v10);
  }

  uint64_t v36 = v15[10];
  uint64_t v37 = &v8[v36];
  unint64_t v38 = &v9[v36];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v36], 1LL, v10))
  {
    uint64_t v39 = sub_100183098(&qword_1006457E8);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, v38, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v37, 0LL, 1LL, v10);
  }

  uint64_t v40 = v15[11];
  uint64_t v41 = &v8[v40];
  __n128 v42 = &v9[v40];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v40], 1LL, v10))
  {
    uint64_t v43 = sub_100183098(&qword_1006457E8);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v41, v42, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v41, 0LL, 1LL, v10);
  }

  uint64_t v44 = v15[12];
  uint64_t v45 = &v8[v44];
  uint64_t v46 = &v9[v44];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v44], 1LL, v10))
  {
    uint64_t v47 = sub_100183098(&qword_1006457E8);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v45, v46, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v45, 0LL, 1LL, v10);
  }

  v8[v15[13]] = v9[v15[13]];
  uint64_t v48 = v15[14];
  uint64_t v49 = &v8[v48];
  unint64_t v50 = &v9[v48];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v48], 1LL, v10))
  {
    uint64_t v51 = sub_100183098(&qword_1006457E8);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v49, v50, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v49, 0LL, 1LL, v10);
  }

  uint64_t v52 = v15[15];
  uint64_t v53 = &v8[v52];
  uint64_t v54 = &v9[v52];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v52], 1LL, v10))
  {
    uint64_t v55 = sub_100183098(&qword_1006457E8);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v53, v54, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v53, 0LL, 1LL, v10);
  }

  uint64_t v56 = v15[16];
  uint64_t v57 = &v8[v56];
  uint64_t v58 = &v9[v56];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v56], 1LL, v10))
  {
    uint64_t v59 = sub_100183098(&qword_1006457E8);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v57, v58, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v57, 0LL, 1LL, v10);
  }

  uint64_t v60 = v15[17];
  uint64_t v61 = &v8[v60];
  uint64_t v62 = &v9[v60];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v60], 1LL, v10))
  {
    uint64_t v63 = sub_100183098(&qword_1006457E8);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v61, v62, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v61, 0LL, 1LL, v10);
  }

  uint64_t v64 = v15[18];
  uint64_t v65 = &v8[v64];
  uint64_t v66 = &v9[v64];
  *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
  v65[4] = v66[4];
  v8[v15[19]] = v9[v15[19]];
  uint64_t v67 = v15[20];
  uint64_t v68 = &v8[v67];
  uint64_t v69 = &v9[v67];
  uint64_t v70 = (const char *)*((void *)v69 + 1);
  *(void *)uint64_t v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  uint64_t v71 = v15[21];
  uint64_t v72 = &v8[v71];
  v73 = &v9[v71];
  uint64_t v74 = (const char *)*((void *)v73 + 1);
  *(void *)uint64_t v72 = *(void *)v73;
  *((void *)v72 + 1) = v74;
  uint64_t v75 = v87[6];
  uint64_t v76 = (char *)a1 + v75;
  uint64_t v77 = (char *)a2 + v75;
  *(void *)&double v78 = swift_bridgeObjectRetain(v70).n128_u64[0];
  __n128 v79 = swift_bridgeObjectRetain(v74, v78);
  if (v12(v77, 1LL, v10, v79))
  {
    uint64_t v80 = sub_100183098(&qword_1006457E8);
    memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64LL));
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)a1 + v87[7], (char *)a2 + v87[7], v10);
  }

  else
  {
    uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v81(v76, v77, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v76, 0LL, 1LL, v10);
    v81((char *)a1 + v87[7], (char *)a2 + v87[7], v10);
  }

  uint64_t v82 = v87[8];
  uint64_t v83 = v87[9];
  uint64_t v84 = *(char **)((char *)a2 + v82);
  *(const char **)((char *)a1 + v82) = v84;
  *((_BYTE *)a1 + v83) = *((_BYTE *)a2 + v83);
  v85 = v84;
  return a1;
}

const char **sub_10042BFA4(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  *(void *)&double v8 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v7, v8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  uint64_t v120 = a3;
  v122 = a2;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v19 = v18[5];
  uint64_t v20 = &v10[v19];
  double v21 = &v11[v19];
  int v22 = v14(&v10[v19], 1LL, v12);
  int v23 = v14(v21, 1LL, v12);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v21, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v20, 0LL, 1LL, v12);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
LABEL_12:
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v20, v21, v12);
LABEL_13:
  uint64_t v25 = v18[6];
  uint64_t v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  int v28 = v14(&v10[v25], 1LL, v12);
  int v29 = v14(v27, 1LL, v12);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v26, 0LL, 1LL, v12);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v12);
LABEL_18:
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v26, v27, v12);
LABEL_19:
  uint64_t v31 = v18[7];
  uint64_t v32 = &v10[v31];
  uint64_t v33 = &v11[v31];
  int v34 = v14(&v10[v31], 1LL, v12);
  int v35 = v14(v33, 1LL, v12);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v32, v33, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v32, 0LL, 1LL, v12);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v12);
LABEL_24:
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v32, v33, v12);
LABEL_25:
  uint64_t v37 = v18[8];
  unint64_t v38 = &v10[v37];
  uint64_t v39 = &v11[v37];
  int v40 = v14(&v10[v37], 1LL, v12);
  int v41 = v14(v39, 1LL, v12);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v38, v39, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v38, 0LL, 1LL, v12);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);
LABEL_30:
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v38, v39, v12);
LABEL_31:
  uint64_t v43 = v18[9];
  uint64_t v44 = &v10[v43];
  uint64_t v45 = &v11[v43];
  int v46 = v14(&v10[v43], 1LL, v12);
  int v47 = v14(v45, 1LL, v12);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v44, v45, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v44, 0LL, 1LL, v12);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v44, v12);
LABEL_36:
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v44, v45, v12);
LABEL_37:
  uint64_t v49 = v18[10];
  unint64_t v50 = &v10[v49];
  uint64_t v51 = &v11[v49];
  int v52 = v14(&v10[v49], 1LL, v12);
  int v53 = v14(v51, 1LL, v12);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v50, v51, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v50, 0LL, 1LL, v12);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v50, v12);
LABEL_42:
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v50, v51, v12);
LABEL_43:
  uint64_t v55 = v18[11];
  uint64_t v56 = &v10[v55];
  uint64_t v57 = &v11[v55];
  int v58 = v14(&v10[v55], 1LL, v12);
  int v59 = v14(v57, 1LL, v12);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v56, v57, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v56, 0LL, 1LL, v12);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v56, v12);
LABEL_48:
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v56, v57, v12);
LABEL_49:
  uint64_t v61 = v18[12];
  uint64_t v62 = &v10[v61];
  uint64_t v63 = &v11[v61];
  int v64 = v14(&v10[v61], 1LL, v12);
  int v65 = v14(v63, 1LL, v12);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v62, v63, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v62, 0LL, 1LL, v12);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v62, v12);
LABEL_54:
    uint64_t v66 = sub_100183098(&qword_1006457E8);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v62, v63, v12);
LABEL_55:
  v10[v18[13]] = v11[v18[13]];
  uint64_t v67 = v18[14];
  uint64_t v68 = &v10[v67];
  uint64_t v69 = &v11[v67];
  int v70 = v14(&v10[v67], 1LL, v12);
  int v71 = v14(v69, 1LL, v12);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v68, v69, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v68, 0LL, 1LL, v12);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v68, v12);
LABEL_60:
    uint64_t v72 = sub_100183098(&qword_1006457E8);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v68, v69, v12);
LABEL_61:
  uint64_t v73 = v18[15];
  uint64_t v74 = &v10[v73];
  uint64_t v75 = &v11[v73];
  int v76 = v14(&v10[v73], 1LL, v12);
  int v77 = v14(v75, 1LL, v12);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v74, v75, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v74, 0LL, 1LL, v12);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v74, v12);
LABEL_66:
    uint64_t v78 = sub_100183098(&qword_1006457E8);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v74, v75, v12);
LABEL_67:
  uint64_t v79 = v18[16];
  uint64_t v80 = &v10[v79];
  uint64_t v81 = &v11[v79];
  int v82 = v14(&v10[v79], 1LL, v12);
  int v83 = v14(v81, 1LL, v12);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v80, v81, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v80, 0LL, 1LL, v12);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v80, v12);
LABEL_72:
    uint64_t v84 = sub_100183098(&qword_1006457E8);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v80, v81, v12);
LABEL_73:
  uint64_t v85 = v18[17];
  id v86 = &v10[v85];
  uint64_t v87 = &v11[v85];
  int v88 = v14(&v10[v85], 1LL, v12);
  int v89 = v14(v87, 1LL, v12);
  if (v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v86, v87, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v86, 0LL, 1LL, v12);
      goto LABEL_79;
    }

    goto LABEL_78;
  }

  if (v89)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v86, v12);
LABEL_78:
    uint64_t v90 = sub_100183098(&qword_1006457E8);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v86, v87, v12);
LABEL_79:
  uint64_t v91 = v18[18];
  uint64_t v92 = &v10[v91];
  uint64_t v93 = &v11[v91];
  int v94 = *(_DWORD *)v93;
  v92[4] = v93[4];
  *(_DWORD *)uint64_t v92 = v94;
  v10[v18[19]] = v11[v18[19]];
  uint64_t v95 = v18[20];
  uint64_t v96 = &v10[v95];
  uint64_t v97 = &v11[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  uint64_t v98 = (const char *)*((void *)v97 + 1);
  uint64_t v99 = (const char *)*((void *)v96 + 1);
  *((void *)v96 + 1) = v98;
  *(void *)&double v100 = swift_bridgeObjectRetain(v98, v120, v122).n128_u64[0];
  *(void *)&double v101 = swift_bridgeObjectRelease(v99, v100).n128_u64[0];
  uint64_t v102 = v18[21];
  v103 = &v10[v102];
  v104 = &v11[v102];
  *(void *)v103 = *(void *)v104;
  v105 = (const char *)*((void *)v104 + 1);
  v106 = (const char *)*((void *)v103 + 1);
  *((void *)v103 + 1) = v105;
  *(void *)&double v107 = swift_bridgeObjectRetain(v105, v101).n128_u64[0];
  __n128 v108 = swift_bridgeObjectRelease(v106, v107);
  uint64_t v109 = v121[6];
  v110 = (char *)a1 + v109;
  v111 = (char *)(v123 + v109);
  int v112 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v14)((char *)a1 + v109, 1LL, v12, v108);
  int v113 = v14(v111, 1LL, v12);
  if (!v112)
  {
    if (!v113)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v110, v111, v12);
      goto LABEL_85;
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v110, v12);
    goto LABEL_84;
  }

  if (v113)
  {
LABEL_84:
    uint64_t v114 = sub_100183098(&qword_1006457E8);
    memcpy(v110, v111, *(void *)(*(void *)(v114 - 8) + 64LL));
    goto LABEL_85;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v110, v111, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v110, 0LL, 1LL, v12);
LABEL_85:
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 24))((char *)a1 + v121[7], v123 + v121[7], v12);
  uint64_t v115 = v121[8];
  v116 = *(void **)((char *)a1 + v115);
  v117 = *(char **)(v123 + v115);
  *(const char **)((char *)a1 + v115) = v117;
  v118 = v117;

  *((_BYTE *)a1 + v121[9]) = *(_BYTE *)(v123 + v121[9]);
  return a1;
}

char *sub_10042CAD4(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  double v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v72 = a3;
  if (v11(v8, 1LL, v9))
  {
    uint64_t v12 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v14 = v13[5];
  int v15 = &v7[v14];
  int v16 = &v8[v14];
  if (v11(&v8[v14], 1LL, v9))
  {
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0LL, 1LL, v9);
  }

  uint64_t v18 = v13[6];
  uint64_t v19 = &v7[v18];
  uint64_t v20 = &v8[v18];
  if (v11(&v8[v18], 1LL, v9))
  {
    uint64_t v21 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0LL, 1LL, v9);
  }

  uint64_t v22 = v13[7];
  int v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  if (v11(&v8[v22], 1LL, v9))
  {
    uint64_t v25 = sub_100183098(&qword_1006457E8);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0LL, 1LL, v9);
  }

  uint64_t v26 = v13[8];
  uint64_t v27 = &v7[v26];
  int v28 = &v8[v26];
  if (v11(&v8[v26], 1LL, v9))
  {
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0LL, 1LL, v9);
  }

  uint64_t v30 = v13[9];
  uint64_t v31 = &v7[v30];
  uint64_t v32 = &v8[v30];
  if (v11(&v8[v30], 1LL, v9))
  {
    uint64_t v33 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0LL, 1LL, v9);
  }

  uint64_t v34 = v13[10];
  int v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  if (v11(&v8[v34], 1LL, v9))
  {
    uint64_t v37 = sub_100183098(&qword_1006457E8);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0LL, 1LL, v9);
  }

  uint64_t v38 = v13[11];
  uint64_t v39 = &v7[v38];
  int v40 = &v8[v38];
  if (v11(&v8[v38], 1LL, v9))
  {
    uint64_t v41 = sub_100183098(&qword_1006457E8);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v39, v40, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0LL, 1LL, v9);
  }

  uint64_t v42 = v13[12];
  uint64_t v43 = &v7[v42];
  uint64_t v44 = &v8[v42];
  if (v11(&v8[v42], 1LL, v9))
  {
    uint64_t v45 = sub_100183098(&qword_1006457E8);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v44, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0LL, 1LL, v9);
  }

  v7[v13[13]] = v8[v13[13]];
  uint64_t v46 = v13[14];
  int v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  if (v11(&v8[v46], 1LL, v9))
  {
    uint64_t v49 = sub_100183098(&qword_1006457E8);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0LL, 1LL, v9);
  }

  uint64_t v50 = v13[15];
  uint64_t v51 = &v7[v50];
  int v52 = &v8[v50];
  if (v11(&v8[v50], 1LL, v9))
  {
    uint64_t v53 = sub_100183098(&qword_1006457E8);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0LL, 1LL, v9);
  }

  uint64_t v54 = v13[16];
  uint64_t v55 = &v7[v54];
  uint64_t v56 = &v8[v54];
  if (v11(&v8[v54], 1LL, v9))
  {
    uint64_t v57 = sub_100183098(&qword_1006457E8);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v55, v56, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0LL, 1LL, v9);
  }

  uint64_t v58 = v13[17];
  int v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  if (v11(&v8[v58], 1LL, v9))
  {
    uint64_t v61 = sub_100183098(&qword_1006457E8);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0LL, 1LL, v9);
  }

  uint64_t v62 = v13[18];
  uint64_t v63 = &v7[v62];
  int v64 = &v8[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  *(_OWORD *)&v7[v13[20]] = *(_OWORD *)&v8[v13[20]];
  *(_OWORD *)&v7[v13[21]] = *(_OWORD *)&v8[v13[21]];
  uint64_t v65 = v72[6];
  uint64_t v66 = &a1[v65];
  uint64_t v67 = &a2[v65];
  if (v11(&a2[v65], 1LL, v9))
  {
    uint64_t v68 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64LL));
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&a1[v72[7]], &a2[v72[7]], v9);
  }

  else
  {
    uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v69(v66, v67, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v66, 0LL, 1LL, v9);
    v69(&a1[v72[7]], &a2[v72[7]], v9);
  }

  uint64_t v70 = v72[9];
  *(void *)&a1[v72[8]] = *(void *)&a2[v72[8]];
  a1[v70] = a2[v70];
  return a1;
}

const char **sub_10042D1EC(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = *(int *)(a3 + 20);
  double v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  uint64_t v115 = a3;
  v117 = a2;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  int v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  int v20 = v12(&v8[v17], 1LL, v10);
  int v21 = v12(v19, 1LL, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0LL, 1LL, v10);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = v16[6];
  uint64_t v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  int v26 = v12(&v8[v23], 1LL, v10);
  int v27 = v12(v25, 1LL, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0LL, 1LL, v10);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = v16[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  int v32 = v12(&v8[v29], 1LL, v10);
  int v33 = v12(v31, 1LL, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0LL, 1LL, v10);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = v16[8];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  int v38 = v12(&v8[v35], 1LL, v10);
  int v39 = v12(v37, 1LL, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0LL, 1LL, v10);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = v16[9];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  int v44 = v12(&v8[v41], 1LL, v10);
  int v45 = v12(v43, 1LL, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0LL, 1LL, v10);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  uint64_t v47 = v16[10];
  uint64_t v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  int v50 = v12(&v8[v47], 1LL, v10);
  int v51 = v12(v49, 1LL, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0LL, 1LL, v10);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  uint64_t v53 = v16[11];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  int v56 = v12(&v8[v53], 1LL, v10);
  int v57 = v12(v55, 1LL, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0LL, 1LL, v10);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  uint64_t v59 = v16[12];
  uint64_t v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  int v62 = v12(&v8[v59], 1LL, v10);
  int v63 = v12(v61, 1LL, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0LL, 1LL, v10);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    uint64_t v64 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  uint64_t v65 = v16[14];
  uint64_t v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  int v68 = v12(&v8[v65], 1LL, v10);
  int v69 = v12(v67, 1LL, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v66, 0LL, 1LL, v10);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    uint64_t v70 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  uint64_t v71 = v16[15];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  int v74 = v12(&v8[v71], 1LL, v10);
  int v75 = v12(v73, 1LL, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v72, 0LL, 1LL, v10);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    uint64_t v76 = sub_100183098(&qword_1006457E8);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  uint64_t v77 = v16[16];
  uint64_t v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  int v80 = v12(&v8[v77], 1LL, v10);
  int v81 = v12(v79, 1LL, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v78, 0LL, 1LL, v10);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    uint64_t v82 = sub_100183098(&qword_1006457E8);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  uint64_t v83 = v16[17];
  uint64_t v84 = &v8[v83];
  uint64_t v85 = &v9[v83];
  int v86 = v12(&v8[v83], 1LL, v10);
  int v87 = v12(v85, 1LL, v10);
  if (v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v84, 0LL, 1LL, v10);
      goto LABEL_79;
    }

    goto LABEL_78;
  }

  if (v87)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
LABEL_78:
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
LABEL_79:
  uint64_t v89 = v16[18];
  uint64_t v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  uint64_t v92 = v16[20];
  uint64_t v93 = &v8[v92];
  int v94 = &v9[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  uint64_t v97 = (const char *)*((void *)v93 + 1);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + 1) = v95;
  *(void *)&double v98 = swift_bridgeObjectRelease(v97, v115, v117).n128_u64[0];
  uint64_t v99 = v16[21];
  double v100 = &v8[v99];
  double v101 = &v9[v99];
  uint64_t v103 = *(void *)v101;
  uint64_t v102 = *((void *)v101 + 1);
  v104 = (const char *)*((void *)v100 + 1);
  *(void *)double v100 = v103;
  *((void *)v100 + 1) = v102;
  __n128 v105 = swift_bridgeObjectRelease(v104, v98);
  uint64_t v106 = v116[6];
  double v107 = (char *)a1 + v106;
  __n128 v108 = (char *)(v118 + v106);
  int v109 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v12)((char *)a1 + v106, 1LL, v10, v105);
  int v110 = v12(v108, 1LL, v10);
  if (!v109)
  {
    if (!v110)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v107, v108, v10);
      goto LABEL_85;
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v107, v10);
    goto LABEL_84;
  }

  if (v110)
  {
LABEL_84:
    uint64_t v111 = sub_100183098(&qword_1006457E8);
    memcpy(v107, v108, *(void *)(*(void *)(v111 - 8) + 64LL));
    goto LABEL_85;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v107, v108, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v107, 0LL, 1LL, v10);
LABEL_85:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 40))((char *)a1 + v116[7], v118 + v116[7], v10);
  uint64_t v112 = v116[8];
  int v113 = *(void **)((char *)a1 + v112);
  *(const char **)((char *)a1 + v112) = *(const char **)(v118 + v112);

  *((_BYTE *)a1 + v116[9]) = *(_BYTE *)(v118 + v116[9]);
  return a1;
}

uint64_t sub_10042DCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10042DCFC);
}

uint64_t sub_10042DCFC(char *a1, uint64_t a2, int *a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[5];
    }

    else
    {
      uint64_t v12 = sub_100183098(&qword_1006457E8);
      uint64_t v9 = *(void *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[6];
      }

      else
      {
        uint64_t v10 = type metadata accessor for Date(0LL);
        uint64_t v9 = *(void *)(v10 - 8);
        uint64_t v11 = a3[7];
      }
    }

    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }

uint64_t sub_10042DDC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10042DDD0);
}

char *sub_10042DDD0(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[5];
    }

    else
    {
      uint64_t v12 = sub_100183098(&qword_1006457E8);
      uint64_t v9 = *(void *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[6];
      }

      else
      {
        uint64_t v10 = type metadata accessor for Date(0LL);
        uint64_t v9 = *(void *)(v10 - 8);
        uint64_t v11 = a4[7];
      }
    }

    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }

  return result;
}

void sub_10042DE94(uint64_t a1)
{
  v8[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t v2 = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v8[1] = *(void *)(v2 - 8) + 64LL;
    sub_10019F1DC(319LL);
    if (v5 <= 0x3F)
    {
      v8[2] = *(void *)(v4 - 8) + 64LL;
      uint64_t v6 = type metadata accessor for Date(319LL);
      if (v7 <= 0x3F)
      {
        v8[3] = *(void *)(v6 - 8) + 64LL;
        v8[4] = "\b";
        v8[5] = &unk_1004DB980;
        swift_initStructMetadata(a1, 256LL, 6LL, v8, a1 + 16);
      }
    }
  }

uint64_t sub_10042DF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10042DF64);
}

uint64_t sub_10042DF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10042DF74);
}

uint64_t _s8KeyCheckV17InitialKeyContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_1006550B0, (uint64_t)&_s8KeyCheckV17InitialKeyContextVMn);
}

uint64_t _s8KeyCheckV25HandleConfirmationContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_1006551F0, (uint64_t)&_s8KeyCheckV25HandleConfirmationContextVMn);
}

uint64_t _s8KeyCheckV21HandleKeyCheckContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_100655150, (uint64_t)&_s8KeyCheckV21HandleKeyCheckContextVMn);
}

const char *sub_10042DFB4(const char **a1, const char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = &v4[(v3 + 16LL) & ~(unint64_t)v3];
    swift_retain();
  }

  else
  {
    uint64_t v6 = (const char *)a1;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date(0LL);
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
    __n128 v13 = swift_bridgeObjectRetain(v4);
    if (v12(v9, 1LL, v10, v13))
    {
      uint64_t v14 = sub_100183098(&qword_1006457E8);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
    }

    uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v16 = v15[5];
    uint64_t v17 = &v8[v16];
    uint64_t v18 = &v9[v16];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v16], 1LL, v10))
    {
      uint64_t v19 = sub_100183098(&qword_1006457E8);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0LL, 1LL, v10);
    }

    uint64_t v20 = v15[6];
    int v21 = &v8[v20];
    uint64_t v22 = &v9[v20];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v20], 1LL, v10))
    {
      uint64_t v23 = sub_100183098(&qword_1006457E8);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v21, v22, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0LL, 1LL, v10);
    }

    uint64_t v24 = v15[7];
    uint64_t v25 = &v8[v24];
    int v26 = &v9[v24];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v24], 1LL, v10))
    {
      uint64_t v27 = sub_100183098(&qword_1006457E8);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v25, v26, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0LL, 1LL, v10);
    }

    uint64_t v28 = v15[8];
    uint64_t v29 = &v8[v28];
    uint64_t v30 = &v9[v28];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v28], 1LL, v10))
    {
      uint64_t v31 = sub_100183098(&qword_1006457E8);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v29, v30, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v29, 0LL, 1LL, v10);
    }

    uint64_t v32 = v15[9];
    int v33 = &v8[v32];
    uint64_t v34 = &v9[v32];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v32], 1LL, v10))
    {
      uint64_t v35 = sub_100183098(&qword_1006457E8);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v33, v34, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v33, 0LL, 1LL, v10);
    }

    uint64_t v36 = v15[10];
    uint64_t v37 = &v8[v36];
    int v38 = &v9[v36];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v36], 1LL, v10))
    {
      uint64_t v39 = sub_100183098(&qword_1006457E8);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, v38, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v37, 0LL, 1LL, v10);
    }

    uint64_t v40 = v15[11];
    uint64_t v41 = &v8[v40];
    uint64_t v42 = &v9[v40];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v40], 1LL, v10))
    {
      uint64_t v43 = sub_100183098(&qword_1006457E8);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v41, v42, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v41, 0LL, 1LL, v10);
    }

    uint64_t v44 = v15[12];
    int v45 = &v8[v44];
    uint64_t v46 = &v9[v44];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v44], 1LL, v10))
    {
      uint64_t v47 = sub_100183098(&qword_1006457E8);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v45, v46, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v45, 0LL, 1LL, v10);
    }

    v8[v15[13]] = v9[v15[13]];
    uint64_t v48 = v15[14];
    uint64_t v49 = &v8[v48];
    int v50 = &v9[v48];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v48], 1LL, v10))
    {
      uint64_t v51 = sub_100183098(&qword_1006457E8);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v49, v50, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v49, 0LL, 1LL, v10);
    }

    uint64_t v52 = v15[15];
    uint64_t v53 = &v8[v52];
    uint64_t v54 = &v9[v52];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v52], 1LL, v10))
    {
      uint64_t v55 = sub_100183098(&qword_1006457E8);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v53, v54, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v53, 0LL, 1LL, v10);
    }

    uint64_t v56 = v15[16];
    int v57 = &v8[v56];
    uint64_t v58 = &v9[v56];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v56], 1LL, v10))
    {
      uint64_t v59 = sub_100183098(&qword_1006457E8);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v57, v58, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v57, 0LL, 1LL, v10);
    }

    uint64_t v60 = v15[17];
    uint64_t v61 = &v8[v60];
    int v62 = &v9[v60];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v60], 1LL, v10))
    {
      uint64_t v63 = sub_100183098(&qword_1006457E8);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v61, v62, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v61, 0LL, 1LL, v10);
    }

    uint64_t v64 = v15[18];
    uint64_t v65 = &v8[v64];
    uint64_t v66 = &v9[v64];
    *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
    v65[4] = v66[4];
    v8[v15[19]] = v9[v15[19]];
    uint64_t v67 = v15[20];
    int v68 = &v8[v67];
    int v69 = &v9[v67];
    uint64_t v70 = (const char *)*((void *)v69 + 1);
    *(void *)int v68 = *(void *)v69;
    *((void *)v68 + 1) = v70;
    uint64_t v71 = v15[21];
    uint64_t v72 = &v8[v71];
    uint64_t v73 = &v9[v71];
    int v74 = (const char *)*((void *)v73 + 1);
    *(void *)uint64_t v72 = *(void *)v73;
    *((void *)v72 + 1) = v74;
    uint64_t v75 = a3[6];
    uint64_t v76 = &v6[v75];
    uint64_t v77 = (char *)a2 + v75;
    uint64_t v78 = *(void (**)(const char *, char *, uint64_t, __n128))(v11 + 16);
    *(void *)&double v79 = swift_bridgeObjectRetain(v70).n128_u64[0];
    __n128 v80 = swift_bridgeObjectRetain(v74, v79);
    v78(v76, v77, v10, v80);
    uint64_t v81 = a3[7];
    uint64_t v82 = a3[8];
    uint64_t v83 = (char *)&v6[v81];
    uint64_t v84 = (const char **)((char *)a2 + v81);
    uint64_t v85 = (const char *)v84[1];
    *(void *)uint64_t v83 = *v84;
    *((void *)v83 + 1) = v85;
    int v86 = *(void **)((char *)a2 + v82);
    *(void *)&v6[v82] = v86;
    v6[a3[9]] = *((_BYTE *)a2 + a3[9]);
    swift_bridgeObjectRetain(v85);
    id v87 = v86;
  }

  return v6;
}

void sub_10042E6C8(const char **a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v9 = &v4[v8[5]];
  if (!v7(v9, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = &v4[v8[6]];
  if (!v7(v10, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = &v4[v8[7]];
  if (!v7(v11, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = &v4[v8[8]];
  if (!v7(v12, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  __n128 v13 = &v4[v8[9]];
  if (!v7(v13, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = &v4[v8[10]];
  if (!v7(v14, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = &v4[v8[11]];
  if (!v7(v15, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = &v4[v8[12]];
  if (!v7(v16, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = &v4[v8[14]];
  if (!v7(v17, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = &v4[v8[15]];
  if (!v7(v18, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = &v4[v8[16]];
  if (!v7(v19, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = &v4[v8[17]];
  if (!v7(v20, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v5);
  }
  *(void *)&double v21 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[20] + 8]).n128_u64[0];
  __n128 v22 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[21] + 8], v21);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))((char *)a1 + a2[6], v5, v22);
  swift_bridgeObjectRelease(*(const char **)((char *)a1 + a2[7] + 8));
}

const char **sub_10042E9B0(const char **a1, const char **a2, int *a3)
{
  uint64_t v5 = *a2;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48);
  __n128 v12 = swift_bridgeObjectRetain(v5);
  if (v11(v8, 1LL, v9, v12))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v15 = v14[5];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v15], 1LL, v9))
  {
    uint64_t v18 = sub_100183098(&qword_1006457E8);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0LL, 1LL, v9);
  }

  uint64_t v19 = v14[6];
  uint64_t v20 = &v7[v19];
  double v21 = &v8[v19];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v19], 1LL, v9))
  {
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v21, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0LL, 1LL, v9);
  }

  uint64_t v23 = v14[7];
  uint64_t v24 = &v7[v23];
  uint64_t v25 = &v8[v23];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v23], 1LL, v9))
  {
    uint64_t v26 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v24, v25, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0LL, 1LL, v9);
  }

  uint64_t v27 = v14[8];
  uint64_t v28 = &v7[v27];
  uint64_t v29 = &v8[v27];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v27], 1LL, v9))
  {
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v29, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0LL, 1LL, v9);
  }

  uint64_t v31 = v14[9];
  uint64_t v32 = &v7[v31];
  int v33 = &v8[v31];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v31], 1LL, v9))
  {
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v32, v33, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v32, 0LL, 1LL, v9);
  }

  uint64_t v35 = v14[10];
  uint64_t v36 = &v7[v35];
  uint64_t v37 = &v8[v35];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v35], 1LL, v9))
  {
    uint64_t v38 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v36, v37, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v36, 0LL, 1LL, v9);
  }

  uint64_t v39 = v14[11];
  uint64_t v40 = &v7[v39];
  uint64_t v41 = &v8[v39];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v39], 1LL, v9))
  {
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v41, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v40, 0LL, 1LL, v9);
  }

  uint64_t v43 = v14[12];
  uint64_t v44 = &v7[v43];
  int v45 = &v8[v43];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v43], 1LL, v9))
  {
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v44, v45, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v44, 0LL, 1LL, v9);
  }

  v7[v14[13]] = v8[v14[13]];
  uint64_t v47 = v14[14];
  uint64_t v48 = &v7[v47];
  uint64_t v49 = &v8[v47];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v47], 1LL, v9))
  {
    uint64_t v50 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v48, v49, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v48, 0LL, 1LL, v9);
  }

  uint64_t v51 = v14[15];
  uint64_t v52 = &v7[v51];
  uint64_t v53 = &v8[v51];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v51], 1LL, v9))
  {
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v52, v53, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v52, 0LL, 1LL, v9);
  }

  uint64_t v55 = v14[16];
  uint64_t v56 = &v7[v55];
  int v57 = &v8[v55];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v55], 1LL, v9))
  {
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v56, v57, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v56, 0LL, 1LL, v9);
  }

  uint64_t v59 = v14[17];
  uint64_t v60 = &v7[v59];
  uint64_t v61 = &v8[v59];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v59], 1LL, v9))
  {
    uint64_t v62 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v60, v61, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v60, 0LL, 1LL, v9);
  }

  uint64_t v63 = v14[18];
  uint64_t v64 = &v7[v63];
  uint64_t v65 = &v8[v63];
  *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
  v64[4] = v65[4];
  v7[v14[19]] = v8[v14[19]];
  uint64_t v66 = v14[20];
  uint64_t v67 = &v7[v66];
  int v68 = &v8[v66];
  int v69 = (const char *)*((void *)v68 + 1);
  *(void *)uint64_t v67 = *(void *)v68;
  *((void *)v67 + 1) = v69;
  uint64_t v70 = v14[21];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  uint64_t v73 = (const char *)*((void *)v72 + 1);
  *(void *)uint64_t v71 = *(void *)v72;
  *((void *)v71 + 1) = v73;
  uint64_t v74 = a3[6];
  uint64_t v75 = (char *)a1 + v74;
  uint64_t v76 = (char *)a2 + v74;
  uint64_t v77 = *(void (**)(char *, char *, uint64_t, __n128))(v10 + 16);
  *(void *)&double v78 = swift_bridgeObjectRetain(v69).n128_u64[0];
  __n128 v79 = swift_bridgeObjectRetain(v73, v78);
  v77(v75, v76, v9, v79);
  uint64_t v80 = a3[7];
  uint64_t v81 = a3[8];
  uint64_t v82 = (const char **)((char *)a1 + v80);
  uint64_t v83 = (const char **)((char *)a2 + v80);
  uint64_t v84 = (const char *)v83[1];
  *uint64_t v82 = *v83;
  v82[1] = v84;
  uint64_t v85 = *(char **)((char *)a2 + v81);
  *(const char **)((char *)a1 + v81) = v85;
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  swift_bridgeObjectRetain(v84);
  int v86 = v85;
  return a1;
}

const char **sub_10042F09C(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  *(void *)&double v8 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v7, v8);
  uint64_t v120 = a3;
  v122 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v19 = v18[5];
  uint64_t v20 = &v10[v19];
  double v21 = &v11[v19];
  int v22 = v14(&v10[v19], 1LL, v12);
  int v23 = v14(v21, 1LL, v12);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v21, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v20, 0LL, 1LL, v12);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
LABEL_12:
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v20, v21, v12);
LABEL_13:
  uint64_t v25 = v18[6];
  uint64_t v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  int v28 = v14(&v10[v25], 1LL, v12);
  int v29 = v14(v27, 1LL, v12);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v26, 0LL, 1LL, v12);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v12);
LABEL_18:
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v26, v27, v12);
LABEL_19:
  uint64_t v31 = v18[7];
  uint64_t v32 = &v10[v31];
  int v33 = &v11[v31];
  int v34 = v14(&v10[v31], 1LL, v12);
  int v35 = v14(v33, 1LL, v12);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v32, v33, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v32, 0LL, 1LL, v12);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v12);
LABEL_24:
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v32, v33, v12);
LABEL_25:
  uint64_t v37 = v18[8];
  uint64_t v38 = &v10[v37];
  uint64_t v39 = &v11[v37];
  int v40 = v14(&v10[v37], 1LL, v12);
  int v41 = v14(v39, 1LL, v12);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v38, v39, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v38, 0LL, 1LL, v12);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);
LABEL_30:
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v38, v39, v12);
LABEL_31:
  uint64_t v43 = v18[9];
  uint64_t v44 = &v10[v43];
  int v45 = &v11[v43];
  int v46 = v14(&v10[v43], 1LL, v12);
  int v47 = v14(v45, 1LL, v12);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v44, v45, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v44, 0LL, 1LL, v12);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v44, v12);
LABEL_36:
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v44, v45, v12);
LABEL_37:
  uint64_t v49 = v18[10];
  uint64_t v50 = &v10[v49];
  uint64_t v51 = &v11[v49];
  int v52 = v14(&v10[v49], 1LL, v12);
  int v53 = v14(v51, 1LL, v12);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v50, v51, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v50, 0LL, 1LL, v12);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v50, v12);
LABEL_42:
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v50, v51, v12);
LABEL_43:
  uint64_t v55 = v18[11];
  uint64_t v56 = &v10[v55];
  int v57 = &v11[v55];
  int v58 = v14(&v10[v55], 1LL, v12);
  int v59 = v14(v57, 1LL, v12);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v56, v57, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v56, 0LL, 1LL, v12);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v56, v12);
LABEL_48:
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v56, v57, v12);
LABEL_49:
  uint64_t v61 = v18[12];
  uint64_t v62 = &v10[v61];
  uint64_t v63 = &v11[v61];
  int v64 = v14(&v10[v61], 1LL, v12);
  int v65 = v14(v63, 1LL, v12);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v62, v63, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v62, 0LL, 1LL, v12);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v62, v12);
LABEL_54:
    uint64_t v66 = sub_100183098(&qword_1006457E8);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v62, v63, v12);
LABEL_55:
  v10[v18[13]] = v11[v18[13]];
  uint64_t v67 = v18[14];
  int v68 = &v10[v67];
  int v69 = &v11[v67];
  int v70 = v14(&v10[v67], 1LL, v12);
  int v71 = v14(v69, 1LL, v12);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v68, v69, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v68, 0LL, 1LL, v12);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v68, v12);
LABEL_60:
    uint64_t v72 = sub_100183098(&qword_1006457E8);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v68, v69, v12);
LABEL_61:
  uint64_t v73 = v18[15];
  uint64_t v74 = &v10[v73];
  uint64_t v75 = &v11[v73];
  int v76 = v14(&v10[v73], 1LL, v12);
  int v77 = v14(v75, 1LL, v12);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v74, v75, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v74, 0LL, 1LL, v12);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v74, v12);
LABEL_66:
    uint64_t v78 = sub_100183098(&qword_1006457E8);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v74, v75, v12);
LABEL_67:
  uint64_t v79 = v18[16];
  uint64_t v80 = &v10[v79];
  uint64_t v81 = &v11[v79];
  int v82 = v14(&v10[v79], 1LL, v12);
  int v83 = v14(v81, 1LL, v12);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v80, v81, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v80, 0LL, 1LL, v12);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v80, v12);
LABEL_72:
    uint64_t v84 = sub_100183098(&qword_1006457E8);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v80, v81, v12);
LABEL_73:
  uint64_t v85 = v18[17];
  int v86 = &v10[v85];
  id v87 = &v11[v85];
  int v88 = v14(&v10[v85], 1LL, v12);
  int v89 = v14(v87, 1LL, v12);
  if (!v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v86, v87, v12);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v86, v12);
    goto LABEL_78;
  }

  if (v89)
  {
LABEL_78:
    uint64_t v90 = sub_100183098(&qword_1006457E8);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v86, v87, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v86, 0LL, 1LL, v12);
LABEL_79:
  uint64_t v91 = v18[18];
  uint64_t v92 = &v10[v91];
  uint64_t v93 = &v11[v91];
  int v94 = *(_DWORD *)v93;
  v92[4] = v93[4];
  *(_DWORD *)uint64_t v92 = v94;
  v10[v18[19]] = v11[v18[19]];
  uint64_t v95 = v18[20];
  uint64_t v96 = &v10[v95];
  uint64_t v97 = &v11[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  double v98 = (const char *)*((void *)v97 + 1);
  uint64_t v99 = (const char *)*((void *)v96 + 1);
  *((void *)v96 + 1) = v98;
  *(void *)&double v100 = swift_bridgeObjectRetain(v98, v120, v122).n128_u64[0];
  *(void *)&double v101 = swift_bridgeObjectRelease(v99, v100).n128_u64[0];
  uint64_t v102 = v18[21];
  uint64_t v103 = &v10[v102];
  v104 = &v11[v102];
  *(void *)uint64_t v103 = *(void *)v104;
  __n128 v105 = (const char *)*((void *)v104 + 1);
  uint64_t v106 = (const char *)*((void *)v103 + 1);
  *((void *)v103 + 1) = v105;
  *(void *)&double v107 = swift_bridgeObjectRetain(v105, v101).n128_u64[0];
  __n128 v108 = swift_bridgeObjectRelease(v106, v107);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 24))((char *)a1 + v121[6], v123 + v121[6], v12, v108);
  uint64_t v109 = v121[7];
  int v110 = (const char **)((char *)a1 + v109);
  uint64_t v111 = (void *)(v123 + v109);
  void *v110 = *v111;
  uint64_t v112 = (const char *)v111[1];
  int v113 = (const char *)v110[1];
  v110[1] = v112;
  *(void *)&double v114 = swift_bridgeObjectRetain(v112).n128_u64[0];
  swift_bridgeObjectRelease(v113, v114);
  uint64_t v115 = v121[8];
  v116 = *(void **)((char *)a1 + v115);
  v117 = *(char **)(v123 + v115);
  *(const char **)((char *)a1 + v115) = v117;
  uint64_t v118 = v117;

  *((_BYTE *)a1 + v121[9]) = *(_BYTE *)(v123 + v121[9]);
  return a1;
}

char *sub_10042FB44(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = a3[5];
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1LL, v8))
  {
    uint64_t v11 = sub_100183098(&qword_1006457E8);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0LL, 1LL, v8);
  }

  uint64_t v12 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v13 = v12[5];
  uint64_t v14 = &v6[v13];
  int v15 = &v7[v13];
  if (v10(&v7[v13], 1LL, v8))
  {
    uint64_t v16 = sub_100183098(&qword_1006457E8);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v15, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v14, 0LL, 1LL, v8);
  }

  uint64_t v17 = v12[6];
  uint64_t v18 = &v6[v17];
  uint64_t v19 = &v7[v17];
  if (v10(&v7[v17], 1LL, v8))
  {
    uint64_t v20 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, v19, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v18, 0LL, 1LL, v8);
  }

  uint64_t v21 = v12[7];
  int v22 = &v6[v21];
  int v23 = &v7[v21];
  if (v10(&v7[v21], 1LL, v8))
  {
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v22, v23, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v22, 0LL, 1LL, v8);
  }

  uint64_t v25 = v12[8];
  uint64_t v26 = &v6[v25];
  uint64_t v27 = &v7[v25];
  if (v10(&v7[v25], 1LL, v8))
  {
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v26, v27, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v26, 0LL, 1LL, v8);
  }

  uint64_t v29 = v12[9];
  uint64_t v30 = &v6[v29];
  uint64_t v31 = &v7[v29];
  if (v10(&v7[v29], 1LL, v8))
  {
    uint64_t v32 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v30, v31, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v30, 0LL, 1LL, v8);
  }

  uint64_t v33 = v12[10];
  int v34 = &v6[v33];
  int v35 = &v7[v33];
  if (v10(&v7[v33], 1LL, v8))
  {
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v34, v35, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v34, 0LL, 1LL, v8);
  }

  uint64_t v37 = v12[11];
  uint64_t v38 = &v6[v37];
  uint64_t v39 = &v7[v37];
  if (v10(&v7[v37], 1LL, v8))
  {
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v38, v39, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v38, 0LL, 1LL, v8);
  }

  uint64_t v41 = v12[12];
  uint64_t v42 = &v6[v41];
  uint64_t v43 = &v7[v41];
  if (v10(&v7[v41], 1LL, v8))
  {
    uint64_t v44 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v42, v43, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v42, 0LL, 1LL, v8);
  }

  v6[v12[13]] = v7[v12[13]];
  uint64_t v45 = v12[14];
  int v46 = &v6[v45];
  int v47 = &v7[v45];
  if (v10(&v7[v45], 1LL, v8))
  {
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v46, v47, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v46, 0LL, 1LL, v8);
  }

  uint64_t v49 = v12[15];
  uint64_t v50 = &v6[v49];
  uint64_t v51 = &v7[v49];
  if (v10(&v7[v49], 1LL, v8))
  {
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v50, v51, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v50, 0LL, 1LL, v8);
  }

  uint64_t v53 = v12[16];
  uint64_t v54 = &v6[v53];
  uint64_t v55 = &v7[v53];
  if (v10(&v7[v53], 1LL, v8))
  {
    uint64_t v56 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v54, v55, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v54, 0LL, 1LL, v8);
  }

  uint64_t v57 = v12[17];
  int v58 = &v6[v57];
  int v59 = &v7[v57];
  if (v10(&v7[v57], 1LL, v8))
  {
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64LL));
    uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  }

  else
  {
    uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v61(v58, v59, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v58, 0LL, 1LL, v8);
  }

  uint64_t v62 = v12[18];
  uint64_t v63 = &v6[v62];
  int v64 = &v7[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v6[v12[19]] = v7[v12[19]];
  *(_OWORD *)&v6[v12[20]] = *(_OWORD *)&v7[v12[20]];
  *(_OWORD *)&v6[v12[21]] = *(_OWORD *)&v7[v12[21]];
  v61(&a1[a3[6]], &a2[a3[6]], v8);
  uint64_t v65 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(void *)&a1[v65] = *(void *)&a2[v65];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

const char **sub_1004301F4(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v115 = a3;
  v117 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  int v20 = v12(&v8[v17], 1LL, v10);
  int v21 = v12(v19, 1LL, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0LL, 1LL, v10);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = v16[6];
  uint64_t v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  int v26 = v12(&v8[v23], 1LL, v10);
  int v27 = v12(v25, 1LL, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0LL, 1LL, v10);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = v16[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  int v32 = v12(&v8[v29], 1LL, v10);
  int v33 = v12(v31, 1LL, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0LL, 1LL, v10);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = v16[8];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  int v38 = v12(&v8[v35], 1LL, v10);
  int v39 = v12(v37, 1LL, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0LL, 1LL, v10);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = v16[9];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  int v44 = v12(&v8[v41], 1LL, v10);
  int v45 = v12(v43, 1LL, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0LL, 1LL, v10);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  uint64_t v47 = v16[10];
  uint64_t v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  int v50 = v12(&v8[v47], 1LL, v10);
  int v51 = v12(v49, 1LL, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0LL, 1LL, v10);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  uint64_t v53 = v16[11];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  int v56 = v12(&v8[v53], 1LL, v10);
  int v57 = v12(v55, 1LL, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0LL, 1LL, v10);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  uint64_t v59 = v16[12];
  uint64_t v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  int v62 = v12(&v8[v59], 1LL, v10);
  int v63 = v12(v61, 1LL, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0LL, 1LL, v10);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    uint64_t v64 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  uint64_t v65 = v16[14];
  uint64_t v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  int v68 = v12(&v8[v65], 1LL, v10);
  int v69 = v12(v67, 1LL, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v66, 0LL, 1LL, v10);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    uint64_t v70 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  uint64_t v71 = v16[15];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  int v74 = v12(&v8[v71], 1LL, v10);
  int v75 = v12(v73, 1LL, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v72, 0LL, 1LL, v10);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    uint64_t v76 = sub_100183098(&qword_1006457E8);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  uint64_t v77 = v16[16];
  uint64_t v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  int v80 = v12(&v8[v77], 1LL, v10);
  int v81 = v12(v79, 1LL, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v78, 0LL, 1LL, v10);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    uint64_t v82 = sub_100183098(&qword_1006457E8);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  uint64_t v83 = v16[17];
  uint64_t v84 = &v8[v83];
  uint64_t v85 = &v9[v83];
  int v86 = v12(&v8[v83], 1LL, v10);
  int v87 = v12(v85, 1LL, v10);
  if (!v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
    goto LABEL_78;
  }

  if (v87)
  {
LABEL_78:
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v84, 0LL, 1LL, v10);
LABEL_79:
  uint64_t v89 = v16[18];
  uint64_t v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  uint64_t v92 = v16[20];
  uint64_t v93 = &v8[v92];
  int v94 = &v9[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  uint64_t v97 = (const char *)*((void *)v93 + 1);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + 1) = v95;
  *(void *)&double v98 = swift_bridgeObjectRelease(v97, v115, v117).n128_u64[0];
  uint64_t v99 = v16[21];
  double v100 = &v8[v99];
  double v101 = &v9[v99];
  uint64_t v103 = *(void *)v101;
  uint64_t v102 = *((void *)v101 + 1);
  v104 = (const char *)*((void *)v100 + 1);
  *(void *)double v100 = v103;
  *((void *)v100 + 1) = v102;
  __n128 v105 = swift_bridgeObjectRelease(v104, v98);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 40))((char *)a1 + v116[6], v118 + v116[6], v10, v105);
  uint64_t v106 = v116[7];
  double v107 = (const char **)((char *)a1 + v106);
  __n128 v108 = (uint64_t *)(v118 + v106);
  uint64_t v110 = *v108;
  uint64_t v109 = v108[1];
  uint64_t v111 = (const char *)v107[1];
  *double v107 = v110;
  v107[1] = v109;
  swift_bridgeObjectRelease(v111);
  uint64_t v112 = v116[8];
  int v113 = *(void **)((char *)a1 + v112);
  *(const char **)((char *)a1 + v112) = *(const char **)(v118 + v112);

  *((_BYTE *)a1 + v116[9]) = *(_BYTE *)(v118 + v116[9]);
  return a1;
}

uint64_t sub_100430C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100430C6C);
}

uint64_t sub_100430C6C(char *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }

    else
    {
      uint64_t v10 = type metadata accessor for Date(0LL);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a3 + 24);
    }

    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }

uint64_t sub_100430D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100430D18);
}

char *sub_100430D18(char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }

    else
    {
      uint64_t v10 = type metadata accessor for Date(0LL);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a4 + 24);
    }

    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }

  return result;
}

uint64_t sub_100430DB4(uint64_t a1)
{
  v5[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v5[1] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for Date(319LL);
    if (v4 <= 0x3F)
    {
      v5[2] = *(void *)(result - 8) + 64LL;
      v5[3] = &unk_1004DBA88;
      v5[4] = "\b";
      v5[5] = &unk_1004DB980;
      swift_initStructMetadata(a1, 256LL, 6LL, v5, a1 + 16);
      return 0LL;
    }
  }

  return result;
}

ValueMetadata *_s8KeyCheckVMa()
{
  return &_s8KeyCheckVN;
}

uint64_t sub_100430E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100430E80);
}

uint64_t sub_100430E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100430E90);
}

uint64_t sub_100430E94(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    v4[2] = &unk_1004DBAC0;
    swift_initStructMetadata(a1, 256LL, 3LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_100430F14()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100655230);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100655230);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_100430FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  v5[7] = a1;
  uint64_t v6 = type metadata accessor for URL(0LL);
  v5[10] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[11] = v7;
  unint64_t v8 = (*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[12] = swift_task_alloc(v8);
  v5[13] = swift_task_alloc(v8);
  v5[14] = swift_task_alloc(v8);
  unint64_t v9 = (*(void *)(*(void *)(sub_100183098((uint64_t *)&unk_100645130) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[15] = swift_task_alloc(v9);
  v5[16] = swift_task_alloc(v9);
  v5[17] = swift_task_alloc(v9);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1004310C0, static AirDropActor.shared, 0LL);
}

id sub_1004310C0()
{
  uint64_t v1 = 0xD000000000000014LL;
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = sub_100183098(&qword_1006483E0);
  uint64_t v8 = swift_allocObject(v7, 72LL, 7LL);
  *(_OWORD *)(v8 + 16) = xmmword_1004CDCA0;
  uint64_t v10 = *(void *)(v6 + 16);
  unint64_t v9 = *(const char **)(v6 + 24);
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 64) = sub_10021366C();
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v9;
  swift_bridgeObjectRetain(v9);
  uint64_t v11 = String.init(format:_:)(0xD00000000000004ELL, 0x800000010050F9D0LL, v8);
  int v13 = v12;
  URL.init(string:)(v11, v12);
  swift_bridgeObjectRelease(v13);
  sub_10026D9AC(v3, v2);
  int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v14(v2, 1LL, v5) == 1)
  {
    sub_1001956C8(*(void *)(v0 + 128));
    if (qword_100644388 != -1) {
      swift_once(&qword_100644388, sub_100430F14);
    }
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v16 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v16, (uint64_t)qword_100655230);
    swift_bridgeObjectRetain_n(v15, 2LL);
    uint64_t v18 = (void *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.error.getter(v18);
    if (!os_log_type_enabled((os_log_t)v18, v19))
    {
      uint64_t v55 = *(void *)(v0 + 136);
      uint64_t v56 = *(void *)(v0 + 72);

      swift_bridgeObjectRelease_n(v56, 2LL);
LABEL_22:
      uint64_t v96 = v55;
      goto LABEL_23;
    }

    uint64_t v20 = *(void *)(v0 + 72);
    int v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v22 = swift_slowAlloc(32LL, -1LL);
    uint64_t v110 = v22;
    *(_DWORD *)int v21 = 136315138;
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v0 + 120);
    uint64_t v25 = *(void *)(v0 + 80);
    uint64_t v26 = *(void *)(v0 + 88);
    if (v23)
    {
      (*(void (**)(void, unint64_t, void))(v26 + 16))( *(void *)(v0 + 120),  *(void *)(v0 + 72)
      + ((*(unsigned __int8 *)(v26 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80)),
        *(void *)(v0 + 80));
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v24, 0LL, 1LL, v25);
      uint64_t v27 = v14(v24, 1LL, v25);
      if ((_DWORD)v27 != 1)
      {
        uint64_t v28 = *(void *)(v0 + 120);
        uint64_t v29 = *(void *)(v0 + 80);
        uint64_t v30 = *(void *)(v0 + 88);
        uint64_t v1 = URL.description.getter(v27);
        int v32 = v31;
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
LABEL_21:
        uint64_t v55 = *(void *)(v0 + 136);
        uint64_t v97 = *(void *)(v0 + 72);
        *(void *)(v0 + 16) = sub_10018CDB4(v1, (unint64_t)v32, &v110);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v21 + 4, v21 + 12);
        swift_bridgeObjectRelease(v32);
        swift_bridgeObjectRelease_n(v97, 2LL);
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v18,  v19,  "Unable to build app store search URL with item: %s",  v21,  0xCu);
        swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v22, -1LL, -1LL);
        swift_slowDealloc(v21, -1LL, -1LL);

        goto LABEL_22;
      }
    }

    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(v26 + 56))( *(void *)(v0 + 120),  1LL,  1LL,  *(void *)(v0 + 80));
    }

    sub_1001956C8(*(void *)(v0 + 120));
    int v32 = (const char *)0x800000010050A2E0LL;
    goto LABEL_21;
  }

  uint64_t v108 = v0 + 48;
  (*(void (**)(void, void, void))(*(void *)(v0 + 88) + 32LL))( *(void *)(v0 + 112),  *(void *)(v0 + 128),  *(void *)(v0 + 80));
  if (qword_100644388 != -1) {
    swift_once(&qword_100644388, sub_100430F14);
  }
  uint64_t v34 = *(void *)(v0 + 104);
  uint64_t v33 = *(void *)(v0 + 112);
  uint64_t v36 = *(void *)(v0 + 80);
  uint64_t v35 = *(void *)(v0 + 88);
  uint64_t v37 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v37, (uint64_t)qword_100655230);
  int v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  uint64_t v39 = v38(v34, v33, v36);
  uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
  os_log_type_t v41 = static os_log_type_t.default.getter();
  BOOL v42 = os_log_type_enabled(v40, v41);
  uint64_t v43 = *(void *)(v0 + 104);
  uint64_t v45 = *(void *)(v0 + 80);
  uint64_t v44 = *(void *)(v0 + 88);
  if (v42)
  {
    uint64_t v46 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v106 = v38;
    uint64_t v47 = swift_slowAlloc(32LL, -1LL);
    uint64_t v110 = v47;
    *(_DWORD *)uint64_t v46 = 136315138;
    unint64_t v48 = sub_10030306C();
    uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter(v45, v48);
    int v51 = (const char *)v50;
    *(void *)(v0 + 48) = sub_10018CDB4(v49, v50, &v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v108, v0 + 56, v46 + 4, v46 + 12);
    __n128 v52 = swift_bridgeObjectRelease(v51);
    uint64_t v53 = *(void (**)(uint64_t, uint64_t, __n128))(v44 + 8);
    v53(v43, v45, v52);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Launching app store with URL: %s", v46, 0xCu);
    swift_arrayDestroy(v47, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v54 = v47;
    int v38 = v106;
    swift_slowDealloc(v54, -1LL, -1LL);
    swift_slowDealloc(v46, -1LL, -1LL);
  }

  else
  {
    uint64_t v53 = *(void (**)(uint64_t, uint64_t, __n128))(v44 + 8);
    ((void (*)(void, void))v53)(*(void *)(v0 + 104), *(void *)(v0 + 80));
  }

  int v57 = (void *)objc_opt_self(&OBJC_CLASS___SDAirDropHandler);
  URL._bridgeToObjectiveC()(v58);
  uint64_t v60 = v59;
  [v57 logReceiverBundleID:0 forURL:v59];

  id result = [(id)objc_opt_self(LSApplicationWorkspace) defaultWorkspace];
  if (result)
  {
    int v63 = result;
    URL._bridgeToObjectiveC()(v62);
    uint64_t v65 = v64;
    *(void *)(v0 + 24) = 0LL;
    id v66 = [v63 openURL:v64 configuration:0 error:v0 + 24];

    uint64_t v67 = *(void **)(v0 + 24);
    if (v66)
    {
      uint64_t v68 = *(void *)(v0 + 136);
      uint64_t v69 = *(void *)(v0 + 112);
      uint64_t v70 = *(void *)(v0 + 80);
      id v71 = v67;

      ((void (*)(uint64_t, uint64_t))v53)(v69, v70);
      sub_1001956C8(v68);
      char v72 = 1;
LABEL_24:
      uint64_t v99 = *(void *)(v0 + 128);
      uint64_t v98 = *(void *)(v0 + 136);
      uint64_t v101 = *(void *)(v0 + 112);
      uint64_t v100 = *(void *)(v0 + 120);
      uint64_t v103 = *(void *)(v0 + 96);
      uint64_t v102 = *(void *)(v0 + 104);
      **(_BYTE **)(v0 + 56) = v72;
      swift_task_dealloc(v98);
      swift_task_dealloc(v99);
      swift_task_dealloc(v100);
      swift_task_dealloc(v101);
      swift_task_dealloc(v102);
      swift_task_dealloc(v103);
      return (id)(*(uint64_t (**)(void))(v0 + 8))();
    }

    uint64_t v73 = *(void *)(v0 + 112);
    uint64_t v74 = *(void *)(v0 + 96);
    uint64_t v75 = *(void *)(v0 + 80);
    id v76 = v67;
    uint64_t v77 = _convertNSErrorToError(_:)(v67);

    swift_willThrow(v78);
    v38(v74, v73, v75);
    swift_errorRetain(v77);
    uint64_t v79 = swift_errorRetain(v77);
    int v80 = (os_log_s *)Logger.logObject.getter(v79);
    os_log_type_t v81 = static os_log_type_t.error.getter(v80);
    BOOL v82 = os_log_type_enabled(v80, v81);
    uint64_t v83 = *(void *)(v0 + 136);
    uint64_t v84 = *(void *)(v0 + 112);
    uint64_t v85 = *(void *)(v0 + 96);
    uint64_t v86 = *(void *)(v0 + 80);
    if (v82)
    {
      uint64_t v109 = *(void *)(v0 + 136);
      uint64_t v87 = swift_slowAlloc(22LL, -1LL);
      v104 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      uint64_t v107 = swift_slowAlloc(32LL, -1LL);
      uint64_t v110 = v107;
      *(_DWORD *)uint64_t v87 = 136315394;
      os_log_type_t type = v81;
      unint64_t v88 = sub_10030306C();
      uint64_t v89 = dispatch thunk of CustomStringConvertible.description.getter(v86, v88);
      uint64_t v90 = v86;
      uint64_t v92 = (const char *)v91;
      *(void *)(v0 + 32) = sub_10018CDB4(v89, v91, &v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v87 + 4, v87 + 12);
      __n128 v93 = swift_bridgeObjectRelease(v92);
      v53(v85, v90, v93);
      *(_WORD *)(v87 + 12) = 2112;
      swift_errorRetain(v77);
      uint64_t v94 = _swift_stdlib_bridgeErrorToNSError(v77);
      *(void *)(v0 + 40) = v94;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v108, v87 + 14, v87 + 22);
      uint64_t *v104 = v94;
      swift_errorRelease(v77);
      swift_errorRelease(v77);
      _os_log_impl( (void *)&_mh_execute_header,  v80,  type,  "Failed to launch app store with URL %s: %@",  (uint8_t *)v87,  0x16u);
      uint64_t v95 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v104, 1LL, v95);
      swift_slowDealloc(v104, -1LL, -1LL);
      swift_arrayDestroy(v107, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v107, -1LL, -1LL);
      swift_slowDealloc(v87, -1LL, -1LL);

      swift_errorRelease(v77);
      ((void (*)(uint64_t, uint64_t))v53)(v84, v90);
      uint64_t v96 = v109;
    }

    else
    {

      swift_errorRelease(v77);
      swift_errorRelease(v77);
      ((void (*)(uint64_t, uint64_t))v53)(v85, v86);
      swift_errorRelease(v77);
      ((void (*)(uint64_t, uint64_t))v53)(v84, v86);
      uint64_t v96 = v83;
    }

uint64_t type metadata accessor for SDAirDropContentHandlerUnsupportedLinkType()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary42SDAirDropContentHandlerUnsupportedLinkType);
}

uint64_t sub_100431990@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerUnsupportedLinkType();
  uint64_t result = swift_allocObject(v2, 32LL, 7LL);
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0xE000000000000000LL;
  *a1 = result;
  return result;
}

uint64_t sub_1004319CC(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v6 = 0LL;
  uint64_t v4 = swift_allocObject(&unk_1005E1AD0, 32LL, 7LL);
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = a1;
  swift_retain(v3);
  swift_bridgeObjectRetain(a1);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)( 0x707041206E65704FLL,  0xEE0065726F745320LL,  &v6,  &unk_100655338,  v4,  0xD000000000000071LL,  0x800000010050F950LL,  70LL,  &type metadata for Double,  &type metadata for Bool);
}

void sub_100431A98(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    NSString v2 = String._bridgeToObjectiveC()();
    id v4 = (id)SFLocalizedStringForKey(v2, v3);

    if (v4)
    {
LABEL_5:
      static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

      return;
    }

    __break(1u);
  }

  NSString v5 = String._bridgeToObjectiveC()();
  id v4 = (id)SFLocalizedStringForKey(v5, v6);

  if (v4) {
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t sub_100431B54()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100431B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v10 = (void *)swift_task_alloc(dword_100655334);
  *(void *)(v4 + 16) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_1001943E8;
  return sub_100430FA4(a1, a2, a3, v9, v8);
}

uint64_t sub_100431BFC()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100655340);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100655340);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

void sub_100431C8C(uint64_t a1, char a2)
{
  uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int v13 = *(void **)(v2 + 16);
  if (v13)
  {
    id v14 = [v13 localizedName];
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    uint64_t v17 = v16;

    uint64_t v19 = SFAirDropReceive.AskRequest.urlItems.getter(v18);
    unint64_t v20 = *(void *)(v19 + 16);
    swift_bridgeObjectRelease((const char *)v19);
    uint64_t v21 = sub_100183098((uint64_t *)&unk_100650440);
    uint64_t inited = swift_initStackObject(v21, v64);
    *(_OWORD *)(inited + 16) = xmmword_1004CDCA0;
    *(void *)(inited + 32) = 0x54495F4546494C49LL;
    uint64_t v23 = inited + 32;
    *(void *)(inited + 40) = 0xEA00000000004D45LL;
    *(void *)(inited + 48) = v20;
    uint64_t v62 = 0x545F4E5245444F4DLL;
    unint64_t v63 = 0xEF524546534E4152LL;
    *(void *)&double v24 = swift_bridgeObjectRetain((const char *)0xEA00000000004D45LL).n128_u64[0];
    swift_bridgeObjectRetain((const char *)inited, v24);
    v25._countAndFlagsBits = 95LL;
    v25._object = (void *)0xE100000000000000LL;
    String.append(_:)(v25);
    v26._countAndFlagsBits = 0x54495F4546494C49LL;
    v26._object = (void *)0xEA00000000004D45LL;
    String.append(_:)(v26);
    swift_bridgeObjectRelease((const char *)0xEA00000000004D45LL);
    if (v20 > 1)
    {
      v27._countAndFlagsBits = 0x4C4152554C505FLL;
      v27._object = (void *)0xE700000000000000LL;
      String.append(_:)(v27);
    }

    swift_bridgeObjectRelease((const char *)inited);
    if ((a2 & 1) != 0)
    {
      v28._countAndFlagsBits = 0x4C4154495041435FLL;
      v28._object = (void *)0xEC00000044455A49LL;
      String.append(_:)(v28);
    }

    v29._countAndFlagsBits = 0x545845545FLL;
    v29._object = (void *)0xE500000000000000LL;
    String.append(_:)(v29);
    uint64_t v30 = (const char *)v63;
    swift_setDeallocating(inited);
    uint64_t v31 = *(void *)(inited + 16);
    uint64_t v32 = sub_100183098(&qword_100646EA0);
    swift_arrayDestroy(v23, v31, v32);
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    id v35 = (id)SFLocalizedStringForKey(v33, v34);

    if (v35)
    {
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      int v38 = v37;

      uint64_t v39 = sub_100183098(&qword_1006483E0);
      uint64_t v40 = swift_allocObject(v39, 112LL, 7LL);
      *(_OWORD *)(v40 + 16) = xmmword_1004CD530;
      *(void *)(v40 + 56) = &type metadata for Int;
      *(void *)(v40 + 64) = &protocol witness table for Int;
      *(void *)(v40 + 32) = v20;
      *(void *)(v40 + 96) = &type metadata for String;
      *(void *)(v40 + 104) = sub_10021366C();
      *(void *)(v40 + 72) = v15;
      *(void *)(v40 + 80) = v17;
      static String.localizedStringWithFormat(_:_:)(v36, v38, v40);
      *(void *)&double v41 = swift_bridgeObjectRelease(v38).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v40, v41);
    }

    else
    {
      __break(1u);
    }
  }

  else
  {
    if (qword_100644390 != -1) {
      swift_once(&qword_100644390, sub_100431BFC);
    }
    uint64_t v42 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v42, (uint64_t)qword_100655340);
    uint64_t v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
    uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
    os_log_type_t v45 = static os_log_type_t.error.getter(v44);
    int v46 = v45;
    if (os_log_type_enabled(v44, v45))
    {
      int v60 = v46;
      uint64_t v47 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v48 = swift_slowAlloc(32LL, -1LL);
      uint64_t v59 = v48;
      uint64_t v62 = v48;
      *(_DWORD *)uint64_t v47 = 136315138;
      uint64_t v49 = v47 + 12;
      int v57 = v47 + 4;
      uint64_t v58 = v47;
      SFAirDropReceive.AskRequest.id.getter(v48);
      unint64_t v50 = sub_10034DEF8();
      uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter(v5, v50);
      uint64_t v53 = v52;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v61 = sub_10018CDB4(v51, (unint64_t)v53, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v57, v49);
      __n128 v54 = swift_bridgeObjectRelease(v53);
      (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v54);
      uint64_t v55 = v58;
      _os_log_impl( (void *)&_mh_execute_header,  v44,  (os_log_type_t)v60,  "Asked for localizedDescription for iLife link which doesn't have a handling app. Transfer ID: %s",  v58,  0xCu);
      uint64_t v56 = v59;
      swift_arrayDestroy(v59, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1LL, -1LL);
      swift_slowDealloc(v55, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }

uint64_t type metadata accessor for SDAirDropContentHandleriLifeLinks()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary33SDAirDropContentHandleriLifeLinks);
}

uint64_t sub_100432178@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandleriLifeLinks();
  uint64_t result = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(result + 16) = 0LL;
  *a1 = result;
  return result;
}

void sub_1004321AC(uint64_t a1, char a2)
{
}

void destroy for SDAirDropContactHashManagerContext(uint64_t a1)
{
}

uint64_t initializeWithCopy for SDAirDropContactHashManagerContext(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  uint64_t v5 = a2 + 1;
  __int128 v6 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v6 - 8);
  swift_unknownObjectRetain(v4);
  v8(a1 + 8, v5, v7);
  __int128 v9 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 48) = v9;
  uint64_t v10 = (void *)a2[8];
  uint64_t v11 = (void *)a2[9];
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
  swift_unknownObjectRetain(v9);
  id v12 = v10;
  id v13 = v11;
  return a1;
}

uint64_t *assignWithCopy for SDAirDropContactHashManagerContext(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v5);
  sub_10019DB24(a1 + 1, a2 + 1);
  uint64_t v6 = a2[6];
  uint64_t v7 = a2[7];
  uint64_t v8 = a1[6];
  a1[6] = v6;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v8);
  a1[7] = v7;
  __int128 v9 = (void *)a2[8];
  uint64_t v10 = (void *)a1[8];
  a1[8] = (uint64_t)v9;
  id v11 = v9;

  id v12 = (void *)a2[9];
  id v13 = (void *)a1[9];
  a1[9] = (uint64_t)v12;
  id v14 = v12;

  a1[10] = a2[10];
  a1[11] = a2[11];
  return a1;
}

__n128 initializeWithTake for SDAirDropContactHashManagerContext(uint64_t a1, uint64_t a2)
{
  __int128 v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  __int128 v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t *assignWithTake for SDAirDropContactHashManagerContext(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_unknownObjectRelease(v4);
  sub_10018709C(a1 + 1);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  uint64_t v5 = a2[6];
  uint64_t v6 = a1[6];
  a1[5] = a2[5];
  a1[6] = v5;
  swift_unknownObjectRelease(v6);
  uint64_t v7 = (void *)a1[8];
  *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);

  uint64_t v8 = (void *)a1[9];
  a1[9] = a2[9];

  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAirDropContactHashManagerContext(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *((_BYTE *)a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDAirDropContactHashManagerContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0LL;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 96) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SDAirDropContactHashManagerContext()
{
  return &type metadata for SDAirDropContactHashManagerContext;
}

double sub_100432494@<D0>(uint64_t a1@<X8>)
{
  id v2 = [objc_allocWithZone(CUSystemMonitor) init];
  [v2 setMeDeviceUseFindMyLocate:1];
  *(void *)a1 = v2;
  uint64_t v3 = type metadata accessor for SDContactStore();
  uint64_t v4 = (void *)swift_allocObject(v3, 40LL, 7LL);
  uint64_t v5 = (void *)CNContactStoreMeContactDidChangeNotification;
  v4[2] = CNContactStoreDidChangeNotification;
  void v4[3] = v5;
  id v6 = objc_allocWithZone(&OBJC_CLASS___CNContactStore);
  id v7 = v2;
  uint64_t v8 = CNContactStoreDidChangeNotification;
  id v9 = v5;
  void v4[4] = [v6 init];
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = &off_1005DF448;
  *(void *)(a1 + 8) = v4;
  uint64_t v10 = type metadata accessor for SDAirDropHashStoreCDB();
  uint64_t v11 = swift_allocObject(v10, 50LL, 7LL);
  unint64_t v12 = sub_100432644();
  id v13 = objc_allocWithZone(&OBJC_CLASS___CUKeyValueStoreReader);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v12);
  *(void *)(v11 + 16) = [v13 initWithKeyType:ObjCClassFromMetadata valueType:ObjCClassFromMetadata];
  *(void *)(v11 + 24) = 0LL;
  *(void *)(v11 + 32) = _swiftEmptyArrayStorage;
  *(void *)(v11 + 40) = &_swiftEmptySetSingleton;
  *(_WORD *)(v11 + 48) = 0;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = &protocol witness table for SDAirDropHashStoreCDB;
  *(void *)(a1 + 64) = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  id v15 = [(id)objc_opt_self(NSDistributedNotificationCenter) defaultCenter];

  *(void *)(a1 + 72) = v15;
  double result = 5.0;
  *(_OWORD *)(a1 + 80) = xmmword_1004DBC70;
  return result;
}

unint64_t sub_100432644()
{
  unint64_t result = qword_100644438;
  if (!qword_100644438)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSData);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100644438);
  }

  return result;
}

uint64_t _s7RequestV5StateOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_1004326CC + 4 * byte_1004DBCCD[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100432700 + 4 * asc_1004DBCC8[v4]))();
}

uint64_t sub_100432700(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100432708(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100432710LL);
  }
  return result;
}

uint64_t sub_10043271C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100432724LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_100432728(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100432730(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7RequestV5StateOMa()
{
  return &_s7RequestV5StateON;
}

uint64_t *sub_10043274C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain();
  }

  else
  {
    uint64_t v7 = type metadata accessor for UUID(0LL);
    uint64_t v8 = *(void *)(v7 - 8);
    id v35 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v35(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    unint64_t v12 = *(const char **)((char *)a2 + v9 + 8);
    *(void *)uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    *((void *)v10 + 1) = v12;
    id v13 = *(const char **)((char *)a2 + v9 + 24);
    *((void *)v10 + 2) = *(uint64_t *)((char *)a2 + v9 + 16);
    *((void *)v10 + 3) = v13;
    id v14 = *(const char **)((char *)a2 + v9 + 40);
    *((void *)v10 + 4) = *(uint64_t *)((char *)a2 + v9 + 32);
    *((void *)v10 + 5) = v14;
    *((_WORD *)v10 + 24) = *(_WORD *)((char *)a2 + v9 + 48);
    id v15 = (int *)type metadata accessor for AuthenticationDevice(0LL);
    uint64_t v16 = v15[9];
    uint64_t v36 = v8;
    __dst = &v10[v16];
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48);
    __n128 v18 = &v11[v16];
    *(void *)&double v19 = swift_bridgeObjectRetain(v12).n128_u64[0];
    *(void *)&double v20 = swift_bridgeObjectRetain(v13, v19).n128_u64[0];
    __n128 v21 = swift_bridgeObjectRetain(v14, v20);
    if (v17(v18, 1LL, v7, v21))
    {
      uint64_t v22 = sub_100183098(&qword_10064DA60);
      memcpy(__dst, v18, *(void *)(*(void *)(v22 - 8) + 64LL));
    }

    else
    {
      v35((uint64_t *)__dst, (uint64_t *)v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(__dst, 0LL, 1LL, v7);
    }

    uint64_t v24 = v15[10];
    Swift::String v25 = &v10[v24];
    Swift::String v26 = &v11[v24];
    Swift::String v27 = (const char *)*((void *)v26 + 1);
    *(void *)Swift::String v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    uint64_t v28 = v15[11];
    Swift::String v29 = &v10[v28];
    uint64_t v30 = &v11[v28];
    *((void *)v29 + 2) = *((void *)v30 + 2);
    *(_OWORD *)Swift::String v29 = *(_OWORD *)v30;
    uint64_t v31 = v15[12];
    uint64_t v32 = *(void **)&v11[v31];
    *(void *)&v10[v31] = v32;
    swift_bridgeObjectRetain(v27);
    id v33 = v32;
  }

  return a1;
}

void sub_100432908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  id v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  *(void *)&double v8 = swift_bridgeObjectRelease((const char *)*(void *)(v7 + 8)).n128_u64[0];
  *(void *)&double v9 = swift_bridgeObjectRelease((const char *)*(void *)(v7 + 24), v8).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(v7 + 40), v9);
  uint64_t v10 = (int *)type metadata accessor for AuthenticationDevice(0LL);
  uint64_t v11 = v7 + v10[9];
  swift_bridgeObjectRelease(*(const char **)(v7 + v10[10] + 8));
}

void *sub_1004329C8(void *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  id v33 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v33(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  id v35 = a1;
  uint64_t v9 = (uint64_t)a1 + v8;
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(const char **)&a2[v8 + 8];
  *(void *)uint64_t v9 = *(void *)&a2[v8];
  *(void *)(v9 + 8) = v11;
  unint64_t v12 = *(const char **)&a2[v8 + 24];
  *(void *)(v9 + 16) = *(void *)&a2[v8 + 16];
  *(void *)(v9 + 24) = v12;
  id v13 = *(const char **)&a2[v8 + 40];
  *(void *)(v9 + 32) = *(void *)&a2[v8 + 32];
  *(void *)(v9 + 40) = v13;
  *(_WORD *)(v9 + 48) = *(_WORD *)&a2[v8 + 48];
  id v14 = (int *)type metadata accessor for AuthenticationDevice(0LL);
  uint64_t v15 = v14[9];
  __dst = (void *)(v9 + v15);
  uint64_t v16 = &v10[v15];
  uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v7 + 48);
  *(void *)&double v18 = swift_bridgeObjectRetain(v11).n128_u64[0];
  *(void *)&double v19 = swift_bridgeObjectRetain(v12, v18).n128_u64[0];
  __n128 v20 = swift_bridgeObjectRetain(v13, v19);
  if (v17(v16, 1LL, v6, v20))
  {
    uint64_t v21 = sub_100183098(&qword_10064DA60);
    memcpy(__dst, v16, *(void *)(*(void *)(v21 - 8) + 64LL));
  }

  else
  {
    v33(__dst, v16, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(__dst, 0LL, 1LL, v6);
  }

  uint64_t v22 = v14[10];
  uint64_t v23 = (void *)(v9 + v22);
  uint64_t v24 = &v10[v22];
  Swift::String v25 = (const char *)*((void *)v24 + 1);
  *uint64_t v23 = *(void *)v24;
  v23[1] = v25;
  uint64_t v26 = v14[11];
  uint64_t v27 = v9 + v26;
  uint64_t v28 = &v10[v26];
  *(void *)(v27 + 16) = *((void *)v28 + 2);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  uint64_t v29 = v14[12];
  uint64_t v30 = *(void **)&v10[v29];
  *(void *)(v9 + v29) = v30;
  swift_bridgeObjectRetain(v25);
  id v31 = v30;
  return v35;
}

char *sub_100432B50(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  os_log_type_t v45 = a1;
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)&a2[v9];
  unint64_t v12 = *(const char **)&a2[v9 + 8];
  id v13 = *(const char **)&a1[v9 + 8];
  *((void *)v10 + 1) = v12;
  *(void *)&double v14 = swift_bridgeObjectRetain(v12).n128_u64[0];
  *(void *)&double v15 = swift_bridgeObjectRelease(v13, v14).n128_u64[0];
  *((void *)v10 + 2) = *((void *)v11 + 2);
  uint64_t v16 = (const char *)*((void *)v11 + 3);
  uint64_t v17 = (const char *)*((void *)v10 + 3);
  *((void *)v10 + 3) = v16;
  *(void *)&double v18 = swift_bridgeObjectRetain(v16, v15).n128_u64[0];
  *(void *)&double v19 = swift_bridgeObjectRelease(v17, v18).n128_u64[0];
  *((void *)v10 + 4) = *((void *)v11 + 4);
  __n128 v20 = (const char *)*((void *)v11 + 5);
  uint64_t v21 = (const char *)*((void *)v10 + 5);
  *((void *)v10 + 5) = v20;
  *(void *)&double v22 = swift_bridgeObjectRetain(v20, v19).n128_u64[0];
  swift_bridgeObjectRelease(v21, v22);
  v10[48] = v11[48];
  v10[49] = v11[49];
  uint64_t v23 = (int *)type metadata accessor for AuthenticationDevice(0LL);
  uint64_t v24 = v23[9];
  Swift::String v25 = &v10[v24];
  uint64_t v26 = &v11[v24];
  uint64_t v27 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v28 = v27(&v10[v24], 1LL, v6);
  int v29 = v27(v26, 1LL, v6);
  if (!v28)
  {
    if (!v29)
    {
      v8(v25, v26, v6);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
    goto LABEL_6;
  }

  if (v29)
  {
LABEL_6:
    uint64_t v30 = sub_100183098(&qword_10064DA60);
    memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0LL, 1LL, v6);
LABEL_7:
  uint64_t v31 = v23[10];
  uint64_t v32 = &v10[v31];
  id v33 = &v11[v31];
  *(void *)uint64_t v32 = *(void *)v33;
  uint64_t v34 = (const char *)*((void *)v33 + 1);
  id v35 = (const char *)*((void *)v32 + 1);
  *((void *)v32 + 1) = v34;
  *(void *)&double v36 = swift_bridgeObjectRetain(v34).n128_u64[0];
  swift_bridgeObjectRelease(v35, v36);
  uint64_t v37 = v23[11];
  int v38 = &v10[v37];
  uint64_t v39 = &v11[v37];
  *(void *)int v38 = *(void *)v39;
  *((void *)v38 + 1) = *((void *)v39 + 1);
  *((void *)v38 + 2) = *((void *)v39 + 2);
  uint64_t v40 = v23[12];
  double v41 = *(void **)&v11[v40];
  uint64_t v42 = *(void **)&v10[v40];
  *(void *)&v10[v40] = v41;
  id v43 = v41;

  return v45;
}

void *sub_100432D6C(void *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (uint64_t)a1 + v9;
  uint64_t v11 = &a2[v9];
  __int128 v12 = *(_OWORD *)&a2[v9 + 16];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)&a2[v9];
  *(_OWORD *)(v10 + 16) = v12;
  *(_OWORD *)(v10 + 32) = *(_OWORD *)&a2[v9 + 32];
  *(_WORD *)(v10 + 48) = *(_WORD *)&a2[v9 + 48];
  id v13 = (int *)type metadata accessor for AuthenticationDevice(0LL);
  uint64_t v14 = v13[9];
  double v15 = (void *)(v10 + v14);
  uint64_t v16 = &v11[v14];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&v11[v14], 1LL, v6))
  {
    uint64_t v17 = sub_100183098(&qword_10064DA60);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    v8(v15, v16, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0LL, 1LL, v6);
  }

  *(_OWORD *)(v10 + v13[10]) = *(_OWORD *)&v11[v13[10]];
  uint64_t v18 = v13[11];
  uint64_t v19 = v10 + v18;
  __n128 v20 = &v11[v18];
  *(void *)(v19 + 16) = *((void *)v20 + 2);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(void *)(v10 + v13[12]) = *(void *)&v11[v13[12]];
  return a1;
}

char *sub_100432EAC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v40 = a1;
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(void *)&a2[v9 + 8];
  id v13 = *(const char **)&a1[v9 + 8];
  *(void *)uint64_t v10 = *(void *)&a2[v9];
  *((void *)v10 + 1) = v12;
  *(void *)&double v14 = swift_bridgeObjectRelease(v13).n128_u64[0];
  uint64_t v15 = *((void *)v11 + 3);
  uint64_t v16 = (const char *)*((void *)v10 + 3);
  *((void *)v10 + 2) = *((void *)v11 + 2);
  *((void *)v10 + 3) = v15;
  *(void *)&double v17 = swift_bridgeObjectRelease(v16, v14).n128_u64[0];
  uint64_t v18 = *((void *)v11 + 5);
  uint64_t v19 = (const char *)*((void *)v10 + 5);
  *((void *)v10 + 4) = *((void *)v11 + 4);
  *((void *)v10 + 5) = v18;
  swift_bridgeObjectRelease(v19, v17);
  v10[48] = v11[48];
  v10[49] = v11[49];
  __n128 v20 = (int *)type metadata accessor for AuthenticationDevice(0LL);
  uint64_t v21 = v20[9];
  double v22 = &v10[v21];
  uint64_t v23 = &v11[v21];
  uint64_t v24 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v25 = v24(&v10[v21], 1LL, v6);
  int v26 = v24(v23, 1LL, v6);
  if (!v25)
  {
    if (!v26)
    {
      v8(v22, v23, v6);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v6);
    goto LABEL_6;
  }

  if (v26)
  {
LABEL_6:
    uint64_t v27 = sub_100183098(&qword_10064DA60);
    memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v22, v23, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v22, 0LL, 1LL, v6);
LABEL_7:
  uint64_t v28 = v20[10];
  int v29 = &v10[v28];
  uint64_t v30 = (uint64_t *)&v11[v28];
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  id v33 = (const char *)*((void *)v29 + 1);
  *(void *)int v29 = v32;
  *((void *)v29 + 1) = v31;
  swift_bridgeObjectRelease(v33);
  uint64_t v34 = v20[11];
  id v35 = &v10[v34];
  double v36 = &v11[v34];
  *(_OWORD *)id v35 = *(_OWORD *)v36;
  *((void *)v35 + 2) = *((void *)v36 + 2);
  uint64_t v37 = v20[12];
  int v38 = *(void **)&v10[v37];
  *(void *)&v10[v37] = *(void *)&v11[v37];

  return v40;
}

uint64_t sub_10043307C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100433088);
}

uint64_t sub_100433088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }

  else
  {
    uint64_t v8 = type metadata accessor for AuthenticationDevice(0LL);
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_1004330FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100433108);
}

uint64_t sub_100433108(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    uint64_t v10 = type metadata accessor for AuthenticationDevice(0LL);
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t _s7RequestVMa(uint64_t a1)
{
  uint64_t result = qword_100655490;
  if (!qword_100655490) {
    return swift_getSingletonMetadata(a1, &_s7RequestVMn);
  }
  return result;
}

uint64_t sub_1004331C0(uint64_t a1)
{
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    v5[0] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for AuthenticationDevice(319LL);
    if (v4 <= 0x3F)
    {
      v5[1] = *(void *)(result - 8) + 64LL;
      v5[2] = (char *)&value witness table for () + 64;
      swift_initStructMetadata(a1, 256LL, 3LL, v5, a1 + 16);
      return 0LL;
    }
  }

  return result;
}

unint64_t sub_100433254()
{
  unint64_t result = qword_1006554D0;
  if (!qword_1006554D0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DBD2C, &_s7RequestV5StateON);
    atomic_store(result, (unint64_t *)&qword_1006554D0);
  }

  return result;
}

uint64_t _s7RequestV4KindOwst(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_1004332D8 + 4 * byte_1004DBCD2[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_1004332F8 + 4 * byte_1004DBCD7[v4]))();
  }
}

_BYTE *sub_1004332D8(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_1004332F8(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_100433300(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_100433308(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_100433310(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_100433318(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *_s7RequestV4KindOMa()
{
  return &_s7RequestV4KindON;
}

unint64_t sub_100433338()
{
  unint64_t result = qword_1006554D8;
  if (!qword_1006554D8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DBD9C, &_s7RequestV4KindON);
    atomic_store(result, (unint64_t *)&qword_1006554D8);
  }

  return result;
}

uint64_t sub_10043337C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_1006554E0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_1006554E0);
  if (qword_100644010 != -1) {
    swift_once(&qword_100644010, sub_10023A4FC);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_10043340C()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100183168(0LL, (unint64_t *)&qword_100650E50, &OBJC_CLASS___OS_dispatch_queue_ptr);
  static DispatchQoS.utility.getter();
  uint64_t v15 = _swiftEmptyArrayStorage;
  uint64_t v10 = sub_100183F14( (unint64_t *)&qword_100644420,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v11 = sub_100183098(&qword_100650E60);
  uint64_t v12 = sub_1001CD538( (unint64_t *)&qword_100644430,  &qword_100650E60,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v15, v11, v12, v4, v10);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))( v3,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000015LL,  0x80000001004DBDB0LL,  v9,  v6,  v3,  0LL);
  qword_1006554F8 = result;
  return result;
}

uint64_t sub_1004335E0()
{
  uint64_t v0 = type metadata accessor for URL(0LL);
  sub_100186DFC(v0, qword_100655500);
  sub_100186DE4(v0, (uint64_t)qword_100655500);
  if (qword_1006443B0 != -1) {
    swift_once(&qword_1006443B0, sub_100433674);
  }
  sub_100186DE4(v0, (uint64_t)qword_100655518);
  return URL.appendingPathComponent(_:)(97LL, 0xE100000000000000LL, v1);
}

uint64_t sub_100433674(uint64_t a1)
{
  return sub_1004336B0(a1, qword_100655518, 4409432LL, 0xE300000000000000LL);
}

uint64_t sub_10043368C(uint64_t a1)
{
  return sub_1004336B0(a1, qword_100655530, 0xD000000000000013LL, 0x800000010050FBA0LL);
}

uint64_t sub_1004336B0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for URL(0LL);
  sub_100186DFC(v7, a2);
  sub_100186DE4(v7, (uint64_t)a2);
  if (qword_1006443C8 != -1) {
    swift_once(&qword_1006443C8, sub_100433820);
  }
  sub_100186DE4(v7, (uint64_t)qword_100655550);
  return URL.appendingPathComponent(_:)(a3, a4, v8);
}

void sub_100433750()
{
  id v0 = objc_allocWithZone(&OBJC_CLASS___NSUserDefaults);
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 initWithSuiteName:v1];

  uint64_t v3 = sub_100183098(&qword_1006555A0);
  Optional.unwrap(_:file:line:)( &qword_100655548,  sub_100433804,  0LL,  "DaemoniOSLibrary/SDXPCHelperImageCache.swift",  44LL,  2LL,  23LL,  v3);
}

unint64_t sub_100433804()
{
  return 0xD00000000000002ELL;
}

void sub_100433820()
{
  uint64_t v0 = type metadata accessor for URL(0LL);
  sub_100186DFC(v0, qword_100655550);
  sub_100186DE4(v0, (uint64_t)qword_100655550);
  id v1 = sub_100115468();
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    uint64_t v5 = v4;

    URL.init(fileURLWithPath:)(v3, v5);
    swift_bridgeObjectRelease(v5);
  }

  else
  {
    __break(1u);
  }

void sub_1004338AC()
{
  if (qword_1006443B0 != -1) {
    swift_once(&qword_1006443B0, sub_100433674);
  }
  uint64_t v0 = type metadata accessor for URL(0LL);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100655518);
  sub_100433AD8(v1);
}

void sub_100433AD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v58 = v2;
  uint64_t v59 = v3;
  uint64_t v4 = __chkstk_darwin(v2);
  int v57 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v55 - v6;
  uint64_t v8 = type metadata accessor for CocoaError.Code(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v12 = [(id)objc_opt_self(NSFileManager) defaultManager];
  URL._bridgeToObjectiveC()(v13);
  uint64_t v15 = v14;
  id v63 = 0LL;
  unsigned int v16 = [v12 removeItemAtURL:v14 error:&v63];

  id v17 = v63;
  if (v16)
  {
    id v18 = v63;
  }

  else
  {
    id v19 = v63;
    uint64_t v20 = _convertNSErrorToError(_:)(v17);

    swift_willThrow(v21);
    uint64_t v22 = swift_errorRetain(v20);
    static CocoaError.fileNoSuchFile.getter(v22);
    uint64_t v23 = sub_100183F14( &qword_1006555A8,  (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code,  (uint64_t)&protocol conformance descriptor for CocoaError.Code);
    LOBYTE(v19) = static _ErrorCodeProtocol.~= infix(_:_:)(v11, v20, v8, v23);
    swift_errorRelease(v20);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if ((v19 & 1) != 0)
    {
      swift_errorRelease(v20);
      uint64_t v24 = v58;
      if (qword_100644398 != -1) {
        swift_once(&qword_100644398, sub_10043337C);
      }
      uint64_t v25 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v25, (uint64_t)qword_1006554E0);
      uint64_t v26 = v59;
      uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 16))(v7, a1, v24);
      uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
      os_log_type_t v29 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v31 = (void *)swift_slowAlloc(32LL, -1LL);
        id v63 = v31;
        *(_DWORD *)uint64_t v30 = 136315138;
        uint64_t v32 = sub_100183F14( (unint64_t *)&qword_100645408,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
        uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter(v24, v32);
        id v35 = (const char *)v34;
        uint64_t v62 = sub_10018CDB4(v33, v34, (uint64_t *)&v63);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v30 + 4, v30 + 12);
        __n128 v36 = swift_bridgeObjectRelease(v35);
        (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v7, v24, v36);
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "removeFileIfExists - Doesn't exist: %s", v30, 0xCu);
        swift_arrayDestroy(v31, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v31, -1LL, -1LL);
        swift_slowDealloc(v30, -1LL, -1LL);
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v24);
      }
    }

    else
    {
      uint64_t v37 = v58;
      if (qword_100644398 != -1) {
        swift_once(&qword_100644398, sub_10043337C);
      }
      uint64_t v38 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v38, (uint64_t)qword_1006554E0);
      uint64_t v39 = v59;
      uint64_t v40 = v57;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v57, a1, v37);
      swift_errorRetain(v20);
      uint64_t v41 = swift_errorRetain(v20);
      uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
      os_log_type_t v43 = static os_log_type_t.error.getter(v42);
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = swift_slowAlloc(22LL, -1LL);
        uint64_t v56 = (void *)swift_slowAlloc(64LL, -1LL);
        id v63 = v56;
        *(_DWORD *)uint64_t v44 = 136315394;
        uint64_t v45 = sub_100183F14( (unint64_t *)&qword_100645408,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
        uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter(v37, v45);
        uint64_t v48 = (const char *)v47;
        uint64_t v62 = sub_10018CDB4(v46, v47, (uint64_t *)&v63);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v44 + 4, v44 + 12);
        __n128 v49 = swift_bridgeObjectRelease(v48);
        (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v40, v37, v49);
        *(_WORD *)(v44 + 12) = 2080;
        swift_getErrorValue(v20, v61, v60);
        uint64_t v50 = Error.localizedDescription.getter(v60[1], v60[2]);
        __n128 v52 = (const char *)v51;
        uint64_t v62 = sub_10018CDB4(v50, v51, (uint64_t *)&v63);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v44 + 14, v44 + 22);
        swift_bridgeObjectRelease(v52);
        swift_errorRelease(v20);
        swift_errorRelease(v20);
        _os_log_impl( (void *)&_mh_execute_header,  v42,  v43,  "removeFileIfExists - couldn't delete %s:\n%s",  (uint8_t *)v44,  0x16u);
        uint64_t v53 = v56;
        swift_arrayDestroy(v56, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v53, -1LL, -1LL);
        swift_slowDealloc(v44, -1LL, -1LL);
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v37);
        swift_errorRelease(v20);
        swift_errorRelease(v20);
      }

      swift_willThrow(v54);
    }
  }

void sub_1004340B0()
{
  if (qword_100644398 != -1) {
    swift_once(&qword_100644398, sub_10043337C);
  }
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_1006554E0);
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "purgeAvatars", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  if (qword_1006443A8 != -1) {
    swift_once(&qword_1006443A8, sub_1004335E0);
  }
  uint64_t v5 = type metadata accessor for URL(0LL);
  uint64_t v6 = sub_100186DE4(v5, (uint64_t)qword_100655500);
  sub_100433AD8(v6);
}

void sub_100434350(uint64_t a1, const char *a2)
{
  uint64_t v4 = type metadata accessor for URL(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v8);
  id v63 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100434C38(a1, (uint64_t)a2);
  uint64_t v62 = v10;
  id v12 = v11;
  if (qword_100644398 != -1) {
    swift_once(&qword_100644398, sub_10043337C);
  }
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = sub_100186DE4(v13, (uint64_t)qword_1006554E0);
  swift_bridgeObjectRetain_n(a2, 2LL);
  swift_bridgeObjectRetain_n(v12, 2LL);
  unsigned int v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  int v60 = v7;
  uint64_t v61 = v14;
  uint64_t v58 = a1;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc(22LL, -1LL);
    uint64_t v20 = (void *)swift_slowAlloc(64LL, -1LL);
    id v66 = v20;
    *(_DWORD *)uint64_t v19 = 136315394;
    swift_bridgeObjectRetain(a2);
    uint64_t v64 = sub_10018CDB4(a1, (unint64_t)a2, (uint64_t *)&v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease_n(a2, 3LL);
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain(v12);
    uint64_t v64 = sub_10018CDB4((uint64_t)v62, (unint64_t)v12, (uint64_t *)&v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v19 + 14, v19 + 22);
    swift_bridgeObjectRelease_n(v12, 3LL);
    _os_log_impl( (void *)&_mh_execute_header,  v16,  v17,  "evictContactIdentifier: %s, compressed: %s",  (uint8_t *)v19,  0x16u);
    swift_arrayDestroy(v20, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1LL, -1LL);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(v12, 2LL);
    swift_bridgeObjectRelease_n(a2, 2LL);
  }

  id v21 = [(id)objc_opt_self(NSFileManager) defaultManager];
  if (qword_1006443A8 != -1) {
    swift_once(&qword_1006443A8, sub_1004335E0);
  }
  uint64_t v59 = sub_100186DE4(v4, (uint64_t)qword_100655500);
  URL._bridgeToObjectiveC()(v22);
  uint64_t v24 = v23;
  id v66 = 0LL;
  id v25 = [v21 contentsOfDirectoryAtURL:v23 includingPropertiesForKeys:0 options:0 error:&v66];

  id v26 = v66;
  if (v25)
  {
    uint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v4);

    uint64_t v28 = (const char *)sub_100438E34(v27, (uint64_t)v62, (uint64_t)v12);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRetain_n(v28, 2LL);
    uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
    os_log_type_t v31 = static os_log_type_t.default.getter();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v62 = (const char *)swift_slowAlloc(32LL, -1LL);
      id v66 = (id)v62;
      LODWORD(v57) = v32;
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v56 = v33 + 4;
      swift_bridgeObjectRetain(v28);
      uint64_t v35 = Array.description.getter(v34, v4);
      uint64_t v37 = v36;
      swift_bridgeObjectRelease(v28);
      uint64_t v64 = sub_10018CDB4(v35, (unint64_t)v37, (uint64_t *)&v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v56, v33 + 12);
      swift_bridgeObjectRelease_n(v28, 2LL);
      swift_bridgeObjectRelease(v37);
      _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v57, "Removing URLs: %s", v33, 0xCu);
      uint64_t v38 = v62;
      swift_arrayDestroy(v62, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1LL, -1LL);
      swift_slowDealloc(v33, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v28, 2LL);
    }

    uint64_t v42 = (uint64_t)v60;
    uint64_t v43 = *((void *)v28 + 2);
    uint64_t v44 = v63;
    if (v43)
    {
      int v57 = a2;
      unint64_t v45 = (*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v62 = v28;
      uint64_t v46 = &v28[v45];
      uint64_t v47 = *(void *)(v5 + 72);
      uint64_t v48 = *(void (**)(char *, const char *, uint64_t))(v5 + 16);
      while (1)
      {
        v48(v44, v46, v4);
        __n128 v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
        v49(v44, 0LL, 1LL, v4);
        (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v42, v44, v4);
        sub_100433AD8(v42);
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v42, v4);
        v46 += v47;
        --v43;
        uint64_t v44 = v63;
        if (!v43)
        {
          uint64_t v28 = v62;
          goto LABEL_19;
        }
      }

      swift_bridgeObjectRelease(v62);
    }

    else
    {
      __n128 v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
LABEL_19:
      v49(v44, 1LL, 1LL, v4);
      swift_bridgeObjectRelease(v28);
    }
  }

  else
  {
    uint64_t v39 = v26;
    swift_bridgeObjectRelease(v12);
    uint64_t v40 = _convertNSErrorToError(_:)(v39);

    swift_willThrow(v41);
    swift_bridgeObjectRetain_n(a2, 2LL);
    unint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
    os_log_type_t v52 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v55 = (void *)swift_slowAlloc(32LL, -1LL);
      id v66 = v55;
      *(_DWORD *)uint64_t v54 = 136315138;
      swift_bridgeObjectRetain(a2);
      uint64_t v64 = sub_10018CDB4(v58, (unint64_t)a2, (uint64_t *)&v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v54 + 4, v54 + 12);
      swift_bridgeObjectRelease_n(a2, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v51,  v52,  "Failed to remove specific contactID: %s, removing all",  v54,  0xCu);
      swift_arrayDestroy(v55, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1LL, -1LL);
      swift_slowDealloc(v54, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a2, 2LL);
    }

    sub_100433AD8(v59);
    swift_errorRelease(v40);
  }

void sub_100434C38(uint64_t a1, uint64_t a2)
{
  v17[6] = 0LL;
  uint64_t v4 = type metadata accessor for SHA256(0LL);
  v17[4] = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for SHA256Digest(0LL);
  v17[5] = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for String.Encoding(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static String.Encoding.utf8.getter(v8);
  uint64_t v11 = String.data(using:allowLossyConversion:)(v10, 0LL, a1, a2);
  unint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v18[5] = v11;
  v18[6] = v13;
  uint64_t v14 = sub_100183098(&qword_100645150);
  Optional.unwrap(_:file:line:)( v18,  sub_100438364,  0LL,  "DaemoniOSLibrary/SDXPCHelperImageCache.swift",  44LL,  2LL,  296LL,  v14);
  sub_100189B0C(v11, v13);
  uint64_t v15 = v18[1];
  uint64_t v16 = sub_100183F14( (unint64_t *)&unk_10064D7C0,  (uint64_t (*)(uint64_t))&type metadata accessor for SHA256,  (uint64_t)&protocol conformance descriptor for SHA256);
  dispatch thunk of HashFunction.init()(v4, v16);
  __asm { BR              X10 }

uint64_t sub_100434DF8()
{
  *(void *)(v7 - 144) = v0;
  *(_WORD *)(v7 - 136) = v1;
  *(_BYTE *)(v7 - 134) = BYTE2(v1);
  *(_BYTE *)(v7 - 133) = BYTE3(v1);
  *(_BYTE *)(v7 - 132) = BYTE4(v1);
  *(_BYTE *)(v7 - 131) = BYTE5(v1);
  dispatch thunk of HashFunction.update(bufferPointer:)(v7 - 144, v7 - 144 + BYTE6(v1), v4, v6);
  sub_100189B20(v0, v1);
  ((void (*)(uint64_t, uint64_t))dispatch thunk of HashFunction.finalize())(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 176) + 8LL))(v5, v4);
  *(void *)(v7 - 120) = v2;
  uint64_t v8 = sub_100183F14( &qword_10064D748,  (uint64_t (*)(uint64_t))&type metadata accessor for SHA256Digest,  (uint64_t)&protocol conformance descriptor for SHA256Digest);
  *(void *)(v7 - 112) = v8;
  uint64_t v9 = sub_1001A4B04((void *)(v7 - 144));
  uint64_t v10 = *(void *)(v7 - 168);
  (*(void (**)(void *, uint64_t, uint64_t))(v10 + 16))(v9, v3, v2);
  sub_10019A708((void *)(v7 - 144), *(void *)(v7 - 120));
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)( (void *)(v7 - 104),  sub_1003BFF14,  0LL,  &type metadata for Data._Representation,  v2,  v8);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v3, v2);
  uint64_t v11 = *(void *)(v7 - 104);
  unint64_t v12 = *(void *)(v7 - 96);
  sub_10018709C((void *)(v7 - 144));
  Swift::String v13 = Data.base64EncodedString(options:)(0LL);
  uint64_t v14 = sub_10037C5B0(5LL, v13._countAndFlagsBits, (unint64_t)v13._object);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  *(void *)&double v21 = swift_bridgeObjectRelease((const char *)v13._object).n128_u64[0];
  __n128 v22 = swift_bridgeObjectRetain(v20, v21);
  uint64_t v23 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, const char *, __n128))Substring.distance(from:to:))( v14,  v16,  v14,  v16,  v18,  v20,  v22);
  swift_bridgeObjectRelease(v20);
  if (v23 != 5)
  {
    if (qword_100644398 != -1) {
      swift_once(&qword_100644398, sub_10043337C);
    }
    uint64_t v24 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v24, (uint64_t)qword_1006554E0);
    swift_bridgeObjectRetain_n(v20, 2LL);
    id v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.fault.getter();
    int v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      *(void *)(v7 - 168) = v12;
      uint64_t v29 = swift_slowAlloc(12LL, -1LL);
      *(_DWORD *)(v7 - 184) = v28;
      uint64_t v30 = (_DWORD *)v29;
      uint64_t v31 = swift_slowAlloc(32LL, -1LL);
      *(void *)(v7 - 176) = v31;
      *(void *)(v7 - 144) = v31;
      *(void *)(v7 - 160) = v11;
      *uint64_t v30 = 136315138;
      int v32 = v30 + 3;
      *(void *)(v7 - 200) = v30 + 1;
      *(void *)(v7 - 192) = v30;
      swift_bridgeObjectRetain(v20);
      uint64_t v33 = static String._fromSubstring(_:)(v14, v16, v18, v20);
      uint64_t v35 = v34;
      swift_bridgeObjectRelease(v20);
      uint64_t v36 = v33;
      unint64_t v12 = *(void *)(v7 - 168);
      *(void *)(v7 - 104) = sub_10018CDB4(v36, (unint64_t)v35, (uint64_t *)(v7 - 144));
      uint64_t v37 = v32;
      uint64_t v11 = *(void *)(v7 - 160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v7 - 104, v7 - 96, *(void *)(v7 - 200), v37);
      swift_bridgeObjectRelease_n(v20, 2LL);
      swift_bridgeObjectRelease(v35);
      uint64_t v38 = *(uint8_t **)(v7 - 192);
      _os_log_impl( (void *)&_mh_execute_header,  v26,  (os_log_type_t)*(_DWORD *)(v7 - 184),  "Failed to form valid lossyContactID, unexpected hash length: %s",  v38,  0xCu);
      *(void *)(v7 - 184) = v26;
      uint64_t v39 = *(void *)(v7 - 176);
      swift_arrayDestroy(v39, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1LL, -1LL);
      swift_slowDealloc(v38, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v20, 2LL);
    }
  }

  uint64_t v40 = static String._fromSubstring(_:)(v14, v16, v18, v20);
  swift_bridgeObjectRelease(v20);
  sub_100189B20(v11, v12);
  sub_100189B20(v0, v1);
  return v40;
}

uint64_t sub_1004352E4(CGImage *a1, uint64_t a2, const char *a3, const char *a4)
{
  return sub_1004354D4(a1, a2, a3, a4);
}

uint64_t sub_1004354D4(CGImage *a1, uint64_t a2, const char *a3, const char *a4)
{
  uint64_t v5 = v4;
  uint64_t v28 = a2;
  uint64_t v9 = type metadata accessor for URL(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100644398 != -1) {
    swift_once(&qword_100644398, sub_10043337C);
  }
  uint64_t v13 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v13, (uint64_t)qword_1006554E0);
  swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v25 = v12;
    uint64_t v17 = swift_slowAlloc(12LL, -1LL);
    id v26 = a1;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc(32LL, -1LL);
    uint64_t v27 = v10;
    uint64_t v24 = v9;
    uint64_t v20 = v19;
    uint64_t v31 = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    swift_bridgeObjectRetain(a3);
    uint64_t v29 = sub_10018CDB4(v28, (unint64_t)a3, &v31);
    unint64_t v12 = v25;
    uint64_t v5 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v18 + 4, v18 + 12);
    swift_bridgeObjectRelease_n(a3, 3LL);
    swift_arrayDestroy(v20, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v21 = v20;
    uint64_t v9 = v24;
    uint64_t v10 = v27;
    swift_slowDealloc(v21, -1LL, -1LL);
    __n128 v22 = v18;
    a1 = v26;
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a3, 2LL);
  }

  uint64_t result = sub_100436804();
  if (!v5)
  {
    sub_10043733C(v28, a3, a4, (uint64_t)v12);
    sub_1004381B4(a1, (uint64_t)v12);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  return result;
}

uint64_t static SDXPCHelperImageCache.cacheIsEmpty()()
{
  id v0 = [(id)objc_opt_self(NSFileManager) defaultManager];
  if (qword_1006443B0 != -1) {
    swift_once(&qword_1006443B0, sub_100433674);
  }
  uint64_t v1 = type metadata accessor for URL(0LL);
  sub_100186DE4(v1, (uint64_t)qword_100655518);
  URL.path.getter(v2);
  uint64_t v4 = v3;
  NSString v5 = String._bridgeToObjectiveC()();
  LODWORD(v4) = objc_msgSend(v0, "fileExistsAtPath:", v5, swift_bridgeObjectRelease(v4).n128_f64[0]);

  return v4 ^ 1;
}

uint64_t sub_100435930(uint64_t a1, const char *a2, const char *a3)
{
  uint64_t v8 = type metadata accessor for URL(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v44 - v13;
  sub_100436804();
  if (!v3)
  {
    sub_10043733C(a1, a2, a3, (uint64_t)v14);
    URL._bridgeToObjectiveC()(v16);
    uint64_t v18 = v17;
    uint64_t v19 = CGImageSourceCreateWithURL(v17, 0LL);

    if (v19)
    {
      CGImageRef ImageAtIndex = CGImageSourceCreateImageAtIndex(v19, 0LL, 0LL);

      if (qword_100644398 != -1) {
        swift_once(&qword_100644398, sub_10043337C);
      }
      uint64_t v20 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v20, (uint64_t)qword_1006554E0);
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
      swift_bridgeObjectRetain_n(a2, 2LL);
      uint64_t v48 = ImageAtIndex;
      uint64_t v21 = (os_log_s *)Logger.logObject.getter(v48);
      os_log_type_t v22 = static os_log_type_t.default.getter();
      int v46 = v22;
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc(32LL, -1LL);
        uint64_t v47 = a1;
        uint64_t v24 = v23;
        uint64_t v45 = swift_slowAlloc(96LL, -1LL);
        uint64_t v51 = v45;
        *(_DWORD *)uint64_t v24 = 136315650;
        os_log_t v44 = v21;
        swift_bridgeObjectRetain(a2);
        uint64_t v49 = sub_10018CDB4(v47, (unint64_t)a2, &v51);
        uint64_t v47 = (uint64_t)ImageAtIndex;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v24 + 4, v24 + 12);
        swift_bridgeObjectRelease_n(a2, 3LL);
        *(_WORD *)(v24 + 12) = 2080;
        uint64_t v25 = sub_100183F14( (unint64_t *)&qword_100645408,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
        uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter(v8, v25);
        uint64_t v28 = (const char *)v27;
        uint64_t v49 = sub_10018CDB4(v26, v27, &v51);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v24 + 14, v24 + 22);
        __n128 v29 = swift_bridgeObjectRelease(v28);
        uint64_t v30 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
        v30(v12, v8, v29);
        *(_WORD *)(v24 + 22) = 2080;
        uint64_t v49 = v47;
        uint64_t v31 = sub_100183098(&qword_100655598);
        uint64_t v32 = Optional.debugDescription.getter(v31);
        uint64_t v34 = (const char *)v33;
        uint64_t v49 = sub_10018CDB4(v32, v33, &v51);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v24 + 24, v24 + 32);
        uint64_t v35 = v48;

        swift_bridgeObjectRelease(v34);
        os_log_t v36 = v44;
        uint64_t v37 = v45;
        swift_arrayDestroy(v45, 3LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v37, -1LL, -1LL);
        swift_slowDealloc(v24, -1LL, -1LL);

        ((void (*)(char *, uint64_t))v30)(v14, v8);
        return v47;
      }

      else
      {
        uint64_t v42 = v48;

        uint64_t v43 = *(void (**)(char *, uint64_t))(v9 + 8);
        v43(v12, v8);
        swift_bridgeObjectRelease_n(a2, 2LL);
        v43(v14, v8);
      }
    }

    else
    {
      uint64_t v38 = type metadata accessor for SDXPCHelperImageCache.CacheError(0LL);
      uint64_t v39 = sub_100183F14( &qword_100655590,  type metadata accessor for SDXPCHelperImageCache.CacheError,  (uint64_t)&unk_1004DBDF4);
      swift_allocError(v38, v39, 0LL, 0LL);
      CGImageRef ImageAtIndex = v40;
      (*(void (**)(CGImage *, char *, uint64_t))(v9 + 16))(v40, v14, v8);
      uint64_t v41 = swift_storeEnumTagMultiPayload(ImageAtIndex, v38, 2LL);
      swift_willThrow(v41);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }

  return (uint64_t)ImageAtIndex;
}

uint64_t static SDXPCHelperImageCache.cacheCount()()
{
  return sub_100435E04();
}

uint64_t sub_100435E04()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098((uint64_t *)&unk_100645130);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v55 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t)v52 - v5;
  uint64_t v7 = type metadata accessor for URL(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v58 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v54 = (char *)v52 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v61 = (char *)v52 - v14;
  __chkstk_darwin(v13);
  int v57 = (char *)v52 - v15;
  unint64_t v16 = objc_opt_self(&OBJC_CLASS___NSFileManager);
  unint64_t v17 = (unint64_t)[(id)v16 defaultManager];
  if (qword_1006443B0 != -1) {
    goto LABEL_40;
  }
  while (1)
  {
    sub_100186DE4(v7, (uint64_t)qword_100655518);
    URL._bridgeToObjectiveC()(v18);
    uint64_t v20 = v19;
    id v63 = 0LL;
    id v21 =  [(id)v17 contentsOfDirectoryAtURL:v19 includingPropertiesForKeys:0 options:0 error:&v63];

    os_log_type_t v22 = v63;
    if (!v21)
    {
      uint64_t v32 = v22;
LABEL_37:
      _convertNSErrorToError(_:)(v32);

      return swift_willThrow(v51);
    }

    v52[1] = v1;
    id v53 = (id)v16;
    uint64_t v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v7);

    id v63 = (char *)_swiftEmptyArrayStorage;
    unint64_t v60 = *(void *)(v1 + 16);
    if (v60)
    {
      unint64_t v16 = 0LL;
      uint64_t v56 = v6;
      uint64_t v23 = v57;
      uint64_t v59 = (void *)v1;
      while (v16 < *(void *)(v1 + 16))
      {
        unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
        uint64_t v24 = *(void *)(v8 + 72);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v6, v1 + v17 + v24 * v16, v7);
        uint64_t v25 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);
        v25(v6, 0LL, 1LL, v7);
        uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 32);
        uint64_t v27 = v26(v23, v6, v7);
        if ((URL.hasDirectoryPath.getter(v27) & 1) != 0)
        {
          (*(void (**)(char *, uint64_t))(v8 + 8))(v23, v7);
        }

        else
        {
          v26(v61, (uint64_t)v23, v7);
          uint64_t v28 = v63;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v63);
          uint64_t v62 = v25;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_10018D718(0, *((void *)v28 + 2) + 1LL, 1);
            uint64_t v28 = v63;
          }

          unint64_t v31 = *((void *)v28 + 2);
          unint64_t v30 = *((void *)v28 + 3);
          if (v31 >= v30 >> 1)
          {
            sub_10018D718(v30 > 1, v31 + 1, 1);
            uint64_t v28 = v63;
          }

          *((void *)v28 + 2) = v31 + 1;
          v26(&v28[v17 + v31 * v24], (uint64_t)v61, v7);
          id v63 = v28;
          uint64_t v25 = v62;
          uint64_t v6 = v56;
          uint64_t v23 = v57;
        }

        ++v16;
        uint64_t v1 = (uint64_t)v59;
        if (v60 == v16) {
          goto LABEL_17;
        }
      }

      __break(1u);
      goto LABEL_39;
    }

    uint64_t v25 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);
LABEL_17:
    v25(v6, 1LL, 1LL, v7);
LABEL_18:
    uint64_t v62 = v25;
    swift_bridgeObjectRelease((const char *)v1);
    sub_1001956C8(v6);
    uint64_t v59 = v63;
    id v33 = [v53 defaultManager];
    if (qword_1006443A8 != -1) {
      swift_once(&qword_1006443A8, sub_1004335E0);
    }
    sub_100186DE4(v7, (uint64_t)qword_100655500);
    URL._bridgeToObjectiveC()(v34);
    os_log_t v36 = v35;
    id v63 = 0LL;
    id v37 = [v33 contentsOfDirectoryAtURL:v35 includingPropertiesForKeys:0 options:0 error:&v63];

    uint64_t v38 = v63;
    if (!v37)
    {
      uint64_t v32 = v38;
      swift_release(v59);
      goto LABEL_37;
    }

    unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v7);

    id v63 = (char *)_swiftEmptyArrayStorage;
    uint64_t v39 = v54;
    uint64_t v1 = (uint64_t)v55;
    uint64_t v40 = v62;
    uint64_t v61 = *(char **)(v16 + 16);
    if (!v61) {
      break;
    }
    unint64_t v17 = 0LL;
    unint64_t v60 = v16;
    while (v17 < *(void *)(v16 + 16))
    {
      unint64_t v41 = (*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v6 = *(void *)(v8 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v1, v16 + v41 + v6 * v17, v7);
      v40(v1, 0LL, 1LL, v7);
      uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 32);
      uint64_t v43 = v42(v39, v1, v7);
      if ((URL.hasDirectoryPath.getter(v43) & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v39, v7);
      }

      else
      {
        v42(v58, (uint64_t)v39, v7);
        os_log_t v44 = v63;
        if ((swift_isUniquelyReferenced_nonNull_native(v63) & 1) == 0)
        {
          sub_10018D718(0, *((void *)v44 + 2) + 1LL, 1);
          os_log_t v44 = v63;
        }

        unint64_t v46 = *((void *)v44 + 2);
        unint64_t v45 = *((void *)v44 + 3);
        if (v46 >= v45 >> 1)
        {
          sub_10018D718(v45 > 1, v46 + 1, 1);
          os_log_t v44 = v63;
        }

        *((void *)v44 + 2) = v46 + 1;
        v42(&v44[v41 + v46 * v6], (uint64_t)v58, v7);
        id v63 = v44;
        uint64_t v39 = v54;
        uint64_t v1 = (uint64_t)v55;
        uint64_t v40 = v62;
      }

      ++v17;
      unint64_t v16 = v60;
    }

id SDXPCHelperImageCache.__allocating_init()()
{
  return [objc_allocWithZone(v0) init];
}

id SDXPCHelperImageCache.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDXPCHelperImageCache();
  return objc_msgSendSuper2(&v2, "init");
}

id SDXPCHelperImageCache.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDXPCHelperImageCache();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100436564()
{
  id v0 = [(id)objc_opt_self(NSFileManager) defaultManager];
  if (qword_1006443B0 != -1) {
    swift_once(&qword_1006443B0, sub_100433674);
  }
  uint64_t v1 = type metadata accessor for URL(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100655518);
  URL._bridgeToObjectiveC()(v3);
  uint64_t v5 = v4;
  uint64_t v17 = 0LL;
  id v6 = [v0 contentsOfDirectoryAtURL:v4 includingPropertiesForKeys:0 options:0 error:&v17];

  id v7 = (id)v17;
  if (v6)
  {
    uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v1);

    unint64_t v9 = *(void *)(v8 + 16);
    swift_bridgeObjectRelease((const char *)v8);
    if (qword_100644398 != -1) {
      swift_once(&qword_100644398, sub_10043337C);
    }
    uint64_t v10 = type metadata accessor for Logger(0LL);
    uint64_t v11 = sub_100186DE4(v10, (uint64_t)qword_1006554E0);
    uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc(28LL, -1LL);
      *(_DWORD *)uint64_t v14 = 134218496;
      uint64_t v17 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v14 + 4, v14 + 12);
      *(_WORD *)(v14 + 12) = 2048;
      uint64_t v17 = 500LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v14 + 14, v14 + 22);
      *(_WORD *)(v14 + 22) = 1024;
      LODWORD(v17) = v9 > 0x1F4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, (char *)&v17 + 4, v14 + 24, v14 + 28);
      _os_log_impl( (void *)&_mh_execute_header,  v12,  v13,  "ensureCacheNotFull - numItems = %ld, limit = %ld, shouldPurge = %{BOOL}d",  (uint8_t *)v14,  0x1Cu);
      swift_slowDealloc(v14, -1LL, -1LL);
    }

    if (v9 >= 0x1F5) {
      sub_100433AD8(v2);
    }
  }

  else
  {
    uint64_t v15 = v7;
    _convertNSErrorToError(_:)(v7);

    swift_willThrow(v16);
  }

uint64_t sub_100436804()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v6);
  __n128 v93 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = (void *)type metadata accessor for URLResourceValues(0LL);
  uint64_t v87 = *(v8 - 1);
  __chkstk_darwin(v8);
  uint64_t v97 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1006443B8 != -1) {
LABEL_46:
  }
    swift_once(&qword_1006443B8, sub_10043368C);
  uint64_t v10 = sub_100186DE4(v2, (uint64_t)qword_100655530);
  uint64_t v11 = v1;
  sub_100433AD8(v10);
  if (v1)
  {
    swift_errorRelease(v1);
    uint64_t v11 = 0LL;
  }

  uint64_t v98 = v11;
  uint64_t v95 = v5;
  uint64_t v94 = v3;
  uint64_t v96 = v2;
  if (qword_1006443C0 != -1) {
    swift_once(&qword_1006443C0, sub_100433750);
  }
  uint64_t v12 = (void *)qword_100655548;
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 stringForKey:v13];

  if (v14)
  {
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    uint64_t v17 = v16;
  }

  else
  {
    uint64_t v15 = 0LL;
    uint64_t v17 = 0LL;
  }

  NSString v18 = String._bridgeToObjectiveC()();
  uint64_t v19 = MGGetStringAnswer();
  if (!v19) {
    __break(1u);
  }
  uint64_t v20 = (void *)v19;
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  uint64_t v23 = v22;

  uint64_t v5 = (const char *)&type metadata for Any;
  if (!v17
    || (v21 != v15 || v17 != v23) && (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v15, v17, 0LL) & 1) == 0)
  {
    uint64_t v92 = v21;
    if (qword_100644398 != -1) {
      swift_once(&qword_100644398, sub_10043337C);
    }
    uint64_t v29 = type metadata accessor for Logger(0LL);
    uint64_t v30 = sub_100186DE4(v29, (uint64_t)qword_1006554E0);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain_n(v23, 2LL);
    uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
    int v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, (os_log_type_t)v33))
    {
      *(void *)&__int128 v89 = "Key should encode to UTF8.";
      LODWORD(v88) = v33;
      os_log_t v90 = v32;
      uint64_t v91 = v30;
      uint64_t v34 = swift_slowAlloc(22LL, -1LL);
      uint64_t v35 = swift_slowAlloc(64LL, -1LL);
      uint64_t v103 = v35;
      *(_DWORD *)uint64_t v34 = 136315394;
      swift_bridgeObjectRetain(v23);
      id v101 = (id)sub_10018CDB4(v92, (unint64_t)v23, &v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v34 + 4, v34 + 12);
      swift_bridgeObjectRelease_n(v23, 3LL);
      *(_WORD *)(v34 + 12) = 2080;
      os_log_t v36 = v17;
      uint64_t v37 = v15;
      if (!v17)
      {
        id v101 = 0LL;
        uint64_t v102 = (const char *)0xE000000000000000LL;
        _StringGuts.grow(_:)(17LL);
        swift_bridgeObjectRelease(v102);
        uint64_t v37 = 0xD000000000000015LL;
        os_log_t v36 = (const char *)0x80000001005046B0LL;
      }

      swift_bridgeObjectRetain(v17);
      id v101 = (id)sub_10018CDB4(v37, (unint64_t)v36, &v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v34 + 14, v34 + 22);
      swift_bridgeObjectRelease_n(v17, 2LL);
      swift_bridgeObjectRelease(v36);
      os_log_t v38 = v90;
      _os_log_impl( (void *)&_mh_execute_header,  v90,  (os_log_type_t)v88,  "currentBuild(%s) != lastBuildUpdate(%s), purging.",  (uint8_t *)v34,  0x16u);
      swift_arrayDestroy(v35, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1LL, -1LL);
      swift_slowDealloc(v34, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v17, 2LL);
      swift_bridgeObjectRelease_n(v23, 2LL);
    }

    uint64_t v28 = &qword_100644000;
    if (qword_1006443B0 != -1) {
      swift_once(&qword_1006443B0, sub_100433674);
    }
    uint64_t v39 = sub_100186DE4(v96, (uint64_t)qword_100655518);
    uint64_t v40 = v98;
    sub_100433AD8(v39);
    if (v40)
    {
      swift_bridgeObjectRelease(v23);
      swift_errorRetain(v40);
      uint64_t v41 = swift_errorRetain(v40);
      uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
      os_log_type_t v43 = static os_log_type_t.error.getter(v42);
      if (os_log_type_enabled(v42, v43))
      {
        os_log_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        unint64_t v45 = (void *)swift_slowAlloc(32LL, -1LL);
        id v101 = v45;
        *(_DWORD *)os_log_t v44 = 136315138;
        swift_getErrorValue(v40, v100, v99);
        uint64_t v46 = Error.localizedDescription.getter(v99[1], v99[2]);
        uint64_t v48 = (const char *)v47;
        uint64_t v103 = sub_10018CDB4(v46, v47, (uint64_t *)&v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, v104, v44 + 4, v44 + 12);
        swift_bridgeObjectRelease(v48);
        swift_errorRelease(v40);
        swift_errorRelease(v40);
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "Couldn't purge for bundle version change: %s", v44, 0xCu);
        swift_arrayDestroy(v45, 1LL, (char *)&type metadata for Any + 8);
        uint64_t v49 = v45;
        uint64_t v28 = &qword_100644000;
        swift_slowDealloc(v49, -1LL, -1LL);
        swift_slowDealloc(v44, -1LL, -1LL);

        uint64_t v25 = swift_errorRelease(v40);
        uint64_t v98 = 0LL;
        uint64_t v26 = v95;
        uint64_t v3 = v96;
        uint64_t v27 = v94;
        uint64_t v5 = (const char *)&type metadata for Any;
        goto LABEL_30;
      }

      swift_errorRelease(v40);
      swift_errorRelease(v40);
      swift_errorRelease(v40);

      uint64_t v98 = 0LL;
    }

    else
    {
      uint64_t v98 = 0LL;
      uint64_t v50 = (void *)qword_100655548;
      NSString v51 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v23);
      NSString v52 = String._bridgeToObjectiveC()();
      [v50 setObject:v51 forKey:v52];
    }

    uint64_t v26 = v95;
    uint64_t v3 = v96;
    uint64_t v27 = v94;
    uint64_t v5 = (const char *)&type metadata for Any;
    goto LABEL_30;
  }

  *(void *)&double v24 = swift_bridgeObjectRelease(v23).n128_u64[0];
  swift_bridgeObjectRelease(v17, v24);
  uint64_t v26 = v95;
  uint64_t v3 = v96;
  uint64_t v27 = v94;
  uint64_t v28 = &qword_100644000;
LABEL_30:
  URLResourceValues.init()(v25);
  URLResourceValues.isExcludedFromBackup.setter(1LL);
  uint64_t v53 = sub_100183098(&qword_100645248);
  uint64_t v54 = *(void *)(v27 + 72);
  uint64_t v55 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v56 = (v55 + 32) & ~v55;
  uint64_t v57 = swift_allocObject(v53, v56 + 2 * v54, v55 | 7);
  *(_OWORD *)(v57 + 16) = xmmword_1004CD530;
  uint64_t v95 = (const char *)v57;
  uint64_t v58 = v57 + v56;
  if (v28[118] != -1) {
    swift_once(&qword_1006443B0, sub_100433674);
  }
  uint64_t v86 = v8;
  uint64_t v59 = sub_100186DE4(v3, (uint64_t)qword_100655518);
  uint64_t v8 = *(void **)(v27 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v8)(v58, v59, v3);
  uint64_t v92 = v54;
  uint64_t v91 = v58;
  uint64_t v60 = v58 + v54;
  uint64_t v2 = (uint64_t)v93;
  if (qword_1006443A8 != -1) {
    swift_once(&qword_1006443A8, sub_1004335E0);
  }
  uint64_t v61 = sub_100186DE4(v3, (uint64_t)qword_100655500);
  os_log_t v90 = (os_log_t)v8;
  ((void (*)(uint64_t, uint64_t, uint64_t))v8)(v60, v61, v3);
  uint64_t v62 = 0LL;
  unint64_t v63 = 0LL;
  __int128 v89 = xmmword_1004CDCA0;
  unint64_t v88 = (char *)&type metadata for Any + 8;
  while (1)
  {
    uint64_t v1 = v62;
    if (v63 >= *((void *)v95 + 2))
    {
      __break(1u);
      goto LABEL_46;
    }

    ((void (*)(uint64_t, unint64_t, uint64_t))v90)(v2, v91 + v63 * v92, v3);
    uint64_t v8 = *(void **)(v27 + 56);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v8)(v2, 0LL, 1LL, v3);
    (*(void (**)(const char *, uint64_t, uint64_t))(v27 + 32))(v26, v2, v3);
    id v64 = [(id)objc_opt_self(NSFileManager) defaultManager];
    URL._bridgeToObjectiveC()(v65);
    uint64_t v67 = v66;
    uint64_t v68 = sub_100183098(&qword_100652600);
    uint64_t inited = swift_initStackObject(v68, v104);
    *(_OWORD *)(inited + 16) = v89;
    *(void *)(inited + 32) = NSFileProtectionKey;
    type metadata accessor for FileProtectionType(0LL);
    *(void *)(inited + 64) = v70;
    *(void *)(inited + 40) = NSFileProtectionCompleteUnlessOpen;
    id v71 = NSFileProtectionKey;
    char v72 = NSFileProtectionCompleteUnlessOpen;
    uint64_t v73 = (const char *)sub_100392438(inited);
    type metadata accessor for FileAttributeKey(0LL);
    uint64_t v5 = v26;
    sub_100183F14( &qword_100644D80,  (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey,  (uint64_t)&unk_1004CCBC8);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(void *)&double v75 = swift_bridgeObjectRelease(v73).n128_u64[0];
    id v101 = 0LL;
    LODWORD(v73) = objc_msgSend( v64,  "createDirectoryAtURL:withIntermediateDirectories:attributes:error:",  v67,  1,  isa,  &v101,  v75);

    id v76 = v101;
    if (!(_DWORD)v73)
    {
      id v82 = v101;
      swift_bridgeObjectRelease(v95);
      _convertNSErrorToError(_:)(v76);

      swift_willThrow(v83);
      (*(void (**)(const char *, uint64_t))(v94 + 8))(v5, v96);
      return (*(uint64_t (**)(char *, void *, __n128))(v87 + 8))(v97, v86, v84);
    }

    id v77 = v101;
    uint64_t v78 = v98;
    URL.setResourceValues(_:)(v97, v79);
    uint64_t v26 = v5;
    if (v78) {
      break;
    }
    uint64_t v98 = 0LL;
    uint64_t v27 = v94;
    uint64_t v3 = v96;
    (*(void (**)(const char *, uint64_t))(v94 + 8))(v5, v96);
    uint64_t v62 = 1LL;
    unint64_t v63 = 1LL;
    uint64_t v2 = (uint64_t)v93;
    if ((v1 & 1) != 0)
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v8)(v93, 1LL, 1LL, v3);
LABEL_41:
      __n128 v80 = swift_bridgeObjectRelease(v95);
      return (*(uint64_t (**)(char *, void *, __n128))(v87 + 8))(v97, v86, v80);
    }
  }

  (*(void (**)(const char *, uint64_t))(v94 + 8))(v5, v96);
  __n128 v84 = swift_bridgeObjectRelease(v95);
  return (*(uint64_t (**)(char *, void *, __n128))(v87 + 8))(v97, v86, v84);
}

void sub_10043733C(uint64_t a1@<X0>, const char *a2@<X1>, const char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v39 = a4;
  uint64_t v40 = type metadata accessor for URL(0LL);
  uint64_t v37 = *(void *)(v40 - 8);
  uint64_t v6 = __chkstk_darwin(v40);
  os_log_t v36 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  os_log_t v38 = (char *)v31 - v8;
  uint64_t v9 = type metadata accessor for SHA256(0LL);
  v31[0] = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v32 = type metadata accessor for SHA256Digest(0LL);
  v31[2] = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  v31[1] = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for String.Encoding(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = (uint64_t)a3;
  uint64_t v35 = a3;
  swift_bridgeObjectRetain(a3);
  sub_100438380(&v43);
  uint64_t v42 = v43;
  uint64_t v15 = sub_100183098((uint64_t *)&unk_10064D7D0);
  uint64_t v33 = sub_1001CD538( (unint64_t *)&qword_100649800,  (uint64_t *)&unk_10064D7D0,  (uint64_t)&protocol conformance descriptor for [A]);
  uint64_t v34 = v15;
  uint64_t v16 = BidirectionalCollection<>.joined(separator:)(44LL, 0xE100000000000000LL, v15, v33);
  NSString v18 = v17;
  uint64_t v43 = v41;
  os_log_t v44 = a2;
  swift_bridgeObjectRetain(a2);
  v19._countAndFlagsBits = 124LL;
  v19._object = (void *)0xE100000000000000LL;
  String.append(_:)(v19);
  v20._countAndFlagsBits = v16;
  v20._object = v18;
  String.append(_:)(v20);
  swift_bridgeObjectRelease((const char *)v18);
  uint64_t v21 = v43;
  os_log_type_t v22 = v44;
  static String.Encoding.utf8.getter(v23);
  uint64_t v24 = String.data(using:allowLossyConversion:)(v14, 0LL, v21, v22);
  unint64_t v26 = v25;
  __n128 v27 = swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v27);
  uint64_t v45 = v24;
  unint64_t v46 = v26;
  uint64_t v28 = sub_100183098(&qword_100645150);
  Optional.unwrap(_:file:line:)( &v43,  sub_100438364,  0LL,  "DaemoniOSLibrary/SDXPCHelperImageCache.swift",  44LL,  2LL,  272LL,  v28);
  sub_100189B0C(v24, v26);
  uint64_t v29 = v44;
  uint64_t v30 = sub_100183F14( (unint64_t *)&unk_10064D7C0,  (uint64_t (*)(uint64_t))&type metadata accessor for SHA256,  (uint64_t)&protocol conformance descriptor for SHA256);
  dispatch thunk of HashFunction.init()(v9, v30);
  __asm { BR              X10 }

void sub_100437B94(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for URL(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v33 - v9;
  if (qword_100644398 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    uint64_t v11 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v11, (uint64_t)qword_1006554E0);
    uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v37(v10, a1, v4);
    uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc(12LL, -1LL);
      uint64_t v36 = a1;
      uint64_t v16 = (uint8_t *)v15;
      uint64_t v17 = swift_slowAlloc(32LL, -1LL);
      uint64_t v35 = v2;
      uint64_t v18 = v17;
      uint64_t v39 = v17;
      uint64_t v34 = v8;
      *(_DWORD *)uint64_t v16 = 136315138;
      uint64_t v33 = v16 + 4;
      uint64_t v19 = sub_100183F14( (unint64_t *)&qword_100645408,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
      uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter(v4, v19);
      os_log_type_t v22 = (const char *)v21;
      uint64_t v38 = sub_10018CDB4(v20, v21, &v39);
      uint64_t v8 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v33, v16 + 12);
      __n128 v23 = swift_bridgeObjectRelease(v22);
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v10, v4, v23);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "markPurgeable: %s", v16, 0xCu);
      swift_arrayDestroy(v18, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v24 = v18;
      uint64_t v2 = v35;
      swift_slowDealloc(v24, -1LL, -1LL);
      unint64_t v25 = v16;
      a1 = v36;
      swift_slowDealloc(v25, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }

    sub_100183168(0LL, &qword_1006555B0, &OBJC_CLASS___NSFileHandle_ptr);
    v37(v8, a1, v4);
    id v26 = sub_100437F18((uint64_t)v8);
    if (v2) {
      break;
    }
    uint64_t v2 = v26;
    int v27 = [v26 fileDescriptor];
    uint64_t v39 = 67585LL;
    sub_10043802C(&v39, v27, a1, &v38);
    uint64_t v39 = 0LL;
    unsigned __int8 v29 = [v2 closeAndReturnError:&v39];
    uint64_t v30 = v39;
    if ((v29 & 1) != 0)
    {
      id v28 = (id)v39;

      return;
    }

    id v31 = (id)v39;
    a1 = _convertNSErrorToError(_:)(v30);

    swift_willThrow(v32);
    swift_unexpectedError(a1, "DaemoniOSLibrary/SDXPCHelperImageCache.swift", 44LL, 1LL, 171LL);
    __break(1u);
LABEL_11:
    swift_once(&qword_100644398, sub_10043337C);
  }

id sub_100437F18(uint64_t a1)
{
  uint64_t v2 = v1;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  uint64_t v5 = v4;
  id v14 = 0LL;
  id v6 = [(id)swift_getObjCClassFromMetadata(v2) fileHandleForReadingFromURL:v4 error:&v14];

  id v7 = v14;
  if (v6)
  {
    uint64_t v8 = type metadata accessor for URL(0LL);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL);
    id v10 = v7;
    v9(a1, v8);
  }

  else
  {
    id v11 = v14;
    _convertNSErrorToError(_:)(v7);

    swift_willThrow();
    uint64_t v12 = type metadata accessor for URL(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8LL))(a1, v12);
  }

  return v6;
}

uint64_t sub_10043802C(void *a1, int a2, uint64_t a3, void *a4)
{
  uint64_t result = ffsctl(a2, 0xC0084A44uLL, a1, 0);
  if ((_DWORD)result)
  {
    int v7 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)(NSPOSIXErrorDomain);
    uint64_t v9 = v8;
    uint64_t v10 = v7;
    uint64_t v11 = sub_100183098(&qword_1006555B8);
    uint64_t inited = swift_initStackObject(v11, &v22);
    *(_OWORD *)(inited + 16) = xmmword_1004CDCA0;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSURLErrorKey);
    *(void *)(inited + 40) = v13;
    uint64_t v14 = type metadata accessor for URL(0LL);
    *(void *)(inited + 72) = v14;
    uint64_t v15 = sub_1001A4B04((void *)(inited + 48));
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16LL))(v15, a3, v14);
    uint64_t v16 = (const char *)sub_10039153C(inited);
    id v17 = objc_allocWithZone(&OBJC_CLASS___NSError);
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    id v20 = objc_msgSend(v17, "initWithDomain:code:userInfo:", v18, v10, isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

    uint64_t result = swift_willThrow(v21);
    *a4 = v20;
  }

  return result;
}

void sub_1004381B4(CGImage *a1, uint64_t a2)
{
  if (!v2)
  {
    sub_100436564();
    URL._bridgeToObjectiveC()(v5);
    int v7 = v6;
    uint64_t v8 = CGImageDestinationCreateWithURL(v6, kUTTypePNG, 1uLL, 0LL);

    if (v8)
    {
      CGImageDestinationAddImage(v8, a1, 0LL);
      if (CGImageDestinationFinalize(v8))
      {
        sub_100437B94(a2);
      }

      else
      {
        uint64_t v15 = type metadata accessor for SDXPCHelperImageCache.CacheError(0LL);
        uint64_t v16 = sub_100183F14( &qword_100655590,  type metadata accessor for SDXPCHelperImageCache.CacheError,  (uint64_t)&unk_1004DBDF4);
        swift_allocError(v15, v16, 0LL, 0LL);
        uint64_t v18 = v17;
        uint64_t v19 = type metadata accessor for URL(0LL);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16LL))(v18, a2, v19);
        uint64_t v20 = swift_storeEnumTagMultiPayload(v18, v15, 1LL);
        swift_willThrow(v20);
      }
    }

    else
    {
      uint64_t v9 = type metadata accessor for SDXPCHelperImageCache.CacheError(0LL);
      uint64_t v10 = sub_100183F14( &qword_100655590,  type metadata accessor for SDXPCHelperImageCache.CacheError,  (uint64_t)&unk_1004DBDF4);
      swift_allocError(v9, v10, 0LL, 0LL);
      uint64_t v12 = v11;
      uint64_t v13 = type metadata accessor for URL(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16LL))(v12, a2, v13);
      uint64_t v14 = swift_storeEnumTagMultiPayload(v12, v9, 0LL);
      swift_willThrow(v14);
    }
  }

unint64_t sub_100438364()
{
  return 0xD00000000000001ALL;
}

void sub_100438380(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0) {
    uint64_t v2 = sub_1002FAD3C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_1004383E8(v4);
  *a1 = v2;
}

void sub_1004383E8(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000LL) == 0)
    {
      if (v3) {
        sub_100438AD0(0LL, v3, 1LL, a1);
      }
      return;
    }

    goto LABEL_154;
  }

  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1)
  {
LABEL_162:
    _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Can't construct Array with count < 0",  36LL,  2LL,  "Swift/Array.swift",  17LL,  2,  936LL,  0);
    __break(1u);
    return;
  }

  Swift::Int v112 = v4;
  uint64_t v109 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_120:
      id v101 = v11;
      uint64_t v111 = v8;
      if (v12 < 2) {
        goto LABEL_117;
      }
      uint64_t v103 = *v109;
      while (1)
      {
        unint64_t v104 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_149;
        }
        if (!v103) {
          goto LABEL_161;
        }
        uint64_t v100 = (char *)v101;
        uint64_t v105 = *(void *)&v101[16 * v104 + 32];
        uint64_t v106 = *(void *)&v101[16 * v12 + 24];
        sub_100438B9C( (char *)(v103 + 16 * v105),  (char *)(v103 + 16LL * *(void *)&v101[16 * v12 + 16]),  v103 + 16 * v106,  __dst);
        if (v1) {
          goto LABEL_116;
        }
        if (v106 < v105) {
          goto LABEL_150;
        }
        if ((swift_isUniquelyReferenced_nonNull_native(v100) & 1) == 0) {
          uint64_t v100 = sub_1002FAD00((uint64_t)v100);
        }
        if (v104 >= *((void *)v100 + 2)) {
          goto LABEL_151;
        }
        uint64_t v107 = &v100[16 * v104 + 32];
        *(void *)uint64_t v107 = v105;
        *((void *)v107 + 1) = v106;
        unint64_t v108 = *((void *)v100 + 2);
        if (v12 > v108) {
          goto LABEL_152;
        }
        memmove(&v100[16 * v12 + 16], &v100[16 * v12 + 32], 16 * (v108 - v12));
        id v101 = v100;
        *((void *)v100 + 2) = v108 - 1;
        unint64_t v12 = v108 - 1;
        if (v108 <= 2) {
          goto LABEL_117;
        }
      }
    }

    uint64_t v111 = _swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for String);
    *(void *)(v7 + 16) = v6;
    uint64_t v111 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }

  Swift::Int v9 = 0LL;
  uint64_t v10 = *a1;
  uint64_t v110 = v10 + 8;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v113 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    uint64_t v18 = v17[1];
    if (v15 == *v17 && v16 == v18)
    {
      Swift::Int v21 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v20 = 0;
    }

    else
    {
      int v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, *v17, v18, 1LL);
      Swift::Int v21 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }

    uint64_t v22 = (uint64_t *)(v110 + 16 * v21);
    do
    {
      uint64_t v24 = *(v22 - 1);
      uint64_t v25 = *v22;
      id v26 = (void *)(v10 + 16 * v9);
      uint64_t v27 = v26[1];
      if (v24 == *v26 && v25 == v27)
      {
        if ((v20 & 1) != 0) {
          goto LABEL_37;
        }
      }

      else if (((v20 ^ _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, *v26, v27, 1LL)) & 1) != 0)
      {
        goto LABEL_36;
      }

      v22 += 2;
      Swift::Int v23 = v21 + 1;
      Swift::Int v9 = v21;
      Swift::Int v21 = v23;
    }

    while (v23 < v3);
    Swift::Int v21 = v23;
LABEL_36:
    Swift::Int v9 = v21;
    if ((v20 & 1) != 0)
    {
LABEL_37:
      if (v21 < v13) {
        goto LABEL_157;
      }
      if (v13 < v21)
      {
        uint64_t v29 = 16 * v21;
        uint64_t v30 = 16 * v13;
        Swift::Int v31 = v21;
        Swift::Int v32 = v13;
        do
        {
          if (v32 != --v31)
          {
            if (!v10) {
              goto LABEL_160;
            }
            uint64_t v33 = v10 + v29;
            uint64_t v34 = *(void *)(v10 + v30);
            uint64_t v35 = *(void *)(v10 + v30 + 8);
            *(_OWORD *)(v10 + v30) = *(_OWORD *)(v10 + v29 - 16);
            *(void *)(v33 - 16) = v34;
            *(void *)(v33 - 8) = v35;
          }

          ++v32;
          v29 -= 16LL;
          v30 += 16LL;
        }

        while (v32 < v31);
      }

LABEL_99:
    if ((v73 & 1) != 0) {
      goto LABEL_141;
    }
    os_log_type_t v81 = &v48[16 * v50];
    uint64_t v83 = *(void *)v81;
    uint64_t v82 = *((void *)v81 + 1);
    BOOL v61 = __OFSUB__(v82, v83);
    uint64_t v84 = v82 - v83;
    if (v61) {
      goto LABEL_144;
    }
    if (v84 < v72) {
      goto LABEL_15;
    }
LABEL_107:
    unint64_t v89 = v50 - 1;
    if (v50 - 1 >= v12)
    {
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }

    uint64_t v90 = v10;
    if (!v10) {
      goto LABEL_159;
    }
    uint64_t v91 = v11;
    uint64_t v92 = &v48[16 * v89];
    uint64_t v93 = *(void *)v92;
    uint64_t v94 = v48;
    unint64_t v95 = v50;
    uint64_t v96 = &v48[16 * v50];
    uint64_t v97 = *((void *)v96 + 1);
    uint64_t v98 = v90;
    sub_100438B9C((char *)(v90 + 16LL * *(void *)v92), (char *)(v90 + 16LL * *(void *)v96), v90 + 16 * v97, __dst);
    if (v1) {
      break;
    }
    if (v97 < v93) {
      goto LABEL_134;
    }
    if (v95 > *((void *)v91 + 2)) {
      goto LABEL_135;
    }
    *(void *)uint64_t v92 = v93;
    *(void *)&v94[16 * v89 + 8] = v97;
    unint64_t v99 = *((void *)v91 + 2);
    if (v95 >= v99) {
      goto LABEL_136;
    }
    uint64_t v11 = v91;
    unint64_t v12 = v99 - 1;
    memmove(v96, v96 + 16, 16 * (v99 - 1 - v95));
    uint64_t v48 = v94;
    *((void *)v91 + 2) = v99 - 1;
    uint64_t v10 = v98;
    Swift::Int v9 = v114;
    if (v99 <= 2) {
      goto LABEL_15;
    }
  }

  uint64_t v100 = v91;
LABEL_116:
  id v101 = v100;
LABEL_117:
  *(void *)&double v102 = swift_bridgeObjectRelease(v101).n128_u64[0];
  v111[2] = 0LL;
  swift_bridgeObjectRelease((const char *)v111, v102);
}

uint64_t sub_100438AD0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      uint64_t v13 = *(v12 - 2);
      uint64_t v14 = *(v12 - 1);
      BOOL v15 = result == v13 && v10 == v14;
      if (v15 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v10, v13, v14, 1LL), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16LL;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }

      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_100438B9C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  uint64_t v13 = v12 >> 4;
  Swift::Int v31 = __src;
  uint64_t v30 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v19 = &v4[16 * v13];
      uint64_t v29 = v19;
      Swift::Int v31 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        int v20 = (char *)(a3 - 16);
        Swift::Int v21 = v6;
        while (1)
        {
          uint64_t v22 = v20 + 16;
          uint64_t v23 = *((void *)v19 - 2);
          uint64_t v24 = *((void *)v19 - 1);
          uint64_t v25 = *((void *)v21 - 2);
          uint64_t v26 = *((void *)v21 - 1);
          v21 -= 16;
          BOOL v27 = v23 == v25 && v24 == v26;
          if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v25, v26, 1LL) & 1) == 0)
          {
            uint64_t v29 = v19 - 16;
            if (v22 < v19 || v20 >= v19 || v22 != v19) {
              *(_OWORD *)int v20 = *((_OWORD *)v19 - 1);
            }
            Swift::Int v21 = v6;
            v19 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }

          else
          {
            if (v22 != v6 || v20 >= v6) {
              *(_OWORD *)int v20 = *(_OWORD *)v21;
            }
            Swift::Int v31 = v21;
            if (v21 <= v7) {
              goto LABEL_50;
            }
          }

          v20 -= 16;
          uint64_t v6 = v21;
          if (v19 <= v4) {
            goto LABEL_50;
          }
        }
      }

      goto LABEL_50;
    }
  }

  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v29 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        uint64_t v15 = *((void *)v6 + 1);
        uint64_t v16 = *((void *)v4 + 1);
        BOOL v17 = *(void *)v6 == *(void *)v4 && v15 == v16;
        if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(*(void *)v6, v15, *(void *)v4, v16, 1LL) & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v30 = v4;
          uint64_t v18 = v6;
        }

        else
        {
          uint64_t v18 = v6 + 16;
          if (v7 < v6 || v7 >= v18 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }

        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v18;
      }

      while ((unint64_t)v18 < a3);
      Swift::Int v31 = v7;
    }

uint64_t sub_100438E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v4 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for URL(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v34 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v38 = (char *)_swiftEmptyArrayStorage;
  uint64_t v33 = *(void *)(a1 + 16);
  if (v33)
  {
    uint64_t v30 = (char *)&v28 - v12;
    Swift::Int v31 = v6;
    unint64_t v13 = 0LL;
    uint64_t v32 = a1;
    while (v13 < *(void *)(a1 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v15 = *(void *)(v8 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, a1 + v14 + v15 * v13, v7);
      uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v29(v6, 0LL, 1LL, v7);
      uint64_t v16 = *(uint64_t (**)(char *, char *, uint64_t))(v8 + 32);
      BOOL v17 = v30;
      uint64_t v18 = v16(v30, v6, v7);
      uint64_t v19 = URL.absoluteString.getter(v18);
      Swift::Int v21 = v20;
      v37[2] = v19;
      v37[3] = v20;
      v37[0] = v35;
      v37[1] = v36;
      unint64_t v22 = sub_1001CCE8C();
      char v23 = StringProtocol.contains<A>(_:)(v37, &type metadata for String, &type metadata for String, v22, v22);
      __n128 v24 = swift_bridgeObjectRelease(v21);
      if ((v23 & 1) != 0)
      {
        ((void (*)(char *, char *, uint64_t, __n128))v16)(v34, v17, v7, v24);
        uint64_t v25 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
        {
          sub_10018D718(0, *((void *)v25 + 2) + 1LL, 1);
          uint64_t v25 = v38;
        }

        unint64_t v27 = *((void *)v25 + 2);
        unint64_t v26 = *((void *)v25 + 3);
        if (v27 >= v26 >> 1)
        {
          sub_10018D718(v26 > 1, v27 + 1, 1);
          uint64_t v25 = v38;
        }

        *((void *)v25 + 2) = v27 + 1;
        uint64_t result = v16(&v25[v14 + v27 * v15], v34, v7);
        uint64_t v38 = v25;
      }

      else
      {
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v17, v7);
      }

      ++v13;
      a1 = v32;
      uint64_t v6 = v31;
      if (v33 == v13)
      {
        v29(v31, 1LL, 1LL, v7);
        goto LABEL_15;
      }
    }

    __break(1u);
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1LL, 1LL, v7);
LABEL_15:
    swift_bridgeObjectRelease((const char *)a1);
    sub_1001956C8((uint64_t)v6);
    return (uint64_t)v38;
  }

  return result;
}

uint64_t _s16DaemoniOSLibrary21SDXPCHelperImageCacheC5evict17contactIdentifierySS_tFZ_0( uint64_t a1, const char *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v18 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1006443A0 != -1) {
    swift_once(&qword_1006443A0, sub_10043340C);
  }
  uint64_t v11 = swift_allocObject(&unk_1005E1DE8, 32LL, 7LL);
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  aBlock[4] = sub_100439DA0;
  uint64_t v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1001B9FE4;
  aBlock[3] = &unk_1005E1E00;
  uint64_t v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(a2);
  static DispatchQoS.unspecified.getter(v13);
  uint64_t v19 = _swiftEmptyArrayStorage;
  uint64_t v14 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v15 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v16 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v4, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release(v21);
}

uint64_t _s16DaemoniOSLibrary21SDXPCHelperImageCacheC05clearE8WithSyncyySbFZ_0(char a1)
{
  uint64_t isEscapingClosureAtFileLocation = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v22 = *(void *)(isEscapingClosureAtFileLocation - 8);
  __chkstk_darwin(isEscapingClosureAtFileLocation);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100644398 != -1) {
    swift_once(&qword_100644398, sub_10043337C);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_1006554E0);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v13 = 67109120;
    LODWORD(aBlock) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v13 + 4, v13 + 8);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "clearCacheWithSync: %{BOOL}d", v13, 8u);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  BOOL v14 = qword_1006443A0 == -1;
  if ((a1 & 1) == 0) {
    goto LABEL_10;
  }
  if (qword_1006443A0 != -1) {
    swift_once(&qword_1006443A0, sub_10043340C);
  }
  uint64_t v15 = (dispatch_queue_s *)qword_1006554F8;
  uint64_t v16 = swift_allocObject(&unk_1005E1E88, 32LL, 7LL);
  *(void *)(v16 + 16) = sub_1004338AC;
  *(void *)(v16 + 24) = 0LL;
  uint64_t v28 = sub_100439DB8;
  uint64_t v29 = v16;
  aBlock = _NSConcreteStackBlock;
  uint64_t v25 = 1107296256LL;
  unint64_t v26 = sub_100458548;
  unint64_t v27 = &unk_1005E1EA0;
  uint64_t v4 = (char *)_Block_copy(&aBlock);
  uint64_t v5 = v29;
  swift_retain();
  swift_release(v5);
  dispatch_sync(v15, v4);
  _Block_release(v4);
  uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v16, "", 92LL, 49LL, 34LL, 1LL);
  uint64_t result = swift_release(v16);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_10:
    if (!v14) {
      swift_once(&qword_1006443A0, sub_10043340C);
    }
    uint64_t v28 = sub_1004338AC;
    uint64_t v29 = 0LL;
    aBlock = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256LL;
    unint64_t v26 = sub_1001B9FE4;
    unint64_t v27 = &unk_1005E1E50;
    uint64_t v18 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter(v18);
    char v23 = _swiftEmptyArrayStorage;
    uint64_t v19 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v20 = sub_100183098((uint64_t *)&unk_1006460D0);
    uint64_t v21 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v20, v21, isEscapingClosureAtFileLocation, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v8, v4, v18);
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v4, isEscapingClosureAtFileLocation);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_release(v29);
  }

  return result;
}

uint64_t _s16DaemoniOSLibrary21SDXPCHelperImageCacheC12purgeAvatarsyyFZ_0()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v12 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1006443A0 != -1) {
    swift_once(&qword_1006443A0, sub_10043340C);
  }
  aBlock[4] = sub_1004340B0;
  void aBlock[5] = 0LL;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1001B9FE4;
  aBlock[3] = &unk_1005E1E28;
  uint64_t v7 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v7);
  uint64_t v13 = _swiftEmptyArrayStorage;
  uint64_t v8 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v9 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v10 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v13, v9, v10, v0, v8);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v6, v2, v7);
  _Block_release(v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v2, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t _s16DaemoniOSLibrary21SDXPCHelperImageCacheC03setD0_6forKey10contactIDsySo10CGImageRefa_SSSaySSGtFZ_0( void *a1, uint64_t a2, const char *a3, const char *a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1006443A0 != -1) {
    swift_once(&qword_1006443A0, sub_10043340C);
  }
  uint64_t v25 = qword_1006554F8;
  uint64_t v16 = (void *)swift_allocObject(&unk_1005E1D98, 48LL, 7LL);
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  aBlock[4] = sub_100439D58;
  uint64_t v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1001B9FE4;
  aBlock[3] = &unk_1005E1DB0;
  BOOL v17 = _Block_copy(aBlock);
  id v18 = a1;
  *(void *)&double v19 = swift_bridgeObjectRetain(a3).n128_u64[0];
  swift_bridgeObjectRetain(a4, v19);
  static DispatchQoS.unspecified.getter(v20);
  unint64_t v26 = _swiftEmptyArrayStorage;
  uint64_t v21 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v22 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v23 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v22, v23, v8, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release(v28);
}

uint64_t _s16DaemoniOSLibrary21SDXPCHelperImageCacheC11imageForKey_10contactIDsSo10CGImageRefaSgSS_SaySSGtFZ_0( uint64_t a1, const char *a2, const char *a3)
{
  return sub_100435930(a1, a2, a3);
}

uint64_t type metadata accessor for SDXPCHelperImageCache()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary21SDXPCHelperImageCache);
}

uint64_t type metadata accessor for SDXPCHelperImageCache.CacheError(uint64_t a1)
{
  uint64_t result = qword_100655630;
  if (!qword_100655630) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDXPCHelperImageCache.CacheError);
  }
  return result;
}

uint64_t sub_100439D24()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_100439D58()
{
  return sub_1004352E4( *(CGImage **)(v0 + 16),  *(void *)(v0 + 24),  *(const char **)(v0 + 32),  *(const char **)(v0 + 40));
}

uint64_t sub_100439D64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100439D74(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100439D7C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_100439DA0()
{
}

uint64_t sub_100439DA8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100439DB8()
{
  return sub_100458528(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t *sub_100439DC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v12);
  }

  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = type metadata accessor for URL(0LL);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16LL))(a1, a2, v13);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 2LL;
    }

    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for URL(0LL);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16LL))(a1, a2, v8);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 1LL;
    }

    else
    {
      uint64_t v14 = type metadata accessor for URL(0LL);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16LL))(a1, a2, v14);
      uint64_t v9 = a1;
      uint64_t v10 = a3;
      uint64_t v11 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }

  return a1;
}

uint64_t sub_100439EC8(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_getEnumCaseMultiPayload(a1, a2);
  if (result <= 2)
  {
    uint64_t v4 = type metadata accessor for URL(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  }

  return result;
}

uint64_t sub_100439F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  uint64_t v7 = type metadata accessor for URL(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t sub_100439F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10043A004(a1);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    uint64_t v7 = type metadata accessor for URL(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }

  return a1;
}

uint64_t sub_10043A004(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDXPCHelperImageCache.CacheError(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_10043A040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  uint64_t v7 = type metadata accessor for URL(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32LL))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t sub_10043A0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10043A004(a1);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    uint64_t v7 = type metadata accessor for URL(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32LL))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }

  return a1;
}

uint64_t sub_10043A130(uint64_t a1)
{
  uint64_t result = type metadata accessor for URL(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = v4[0];
    uint64_t v4[2] = v4[0];
    swift_initEnumMetadataMultiPayload(a1, 256LL, 3LL, v4);
    return 0LL;
  }

  return result;
}

uint64_t sub_10043A1B8()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100655668);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100655668);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_10043A248()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v10 = sub_100237A04();
  static DispatchQoS.unspecified.getter(v10);
  uint64_t v16 = _swiftEmptyArrayStorage;
  unint64_t v11 = sub_10043C050();
  uint64_t v12 = sub_100183098(&qword_100650E60);
  unint64_t v13 = sub_1001830D8();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v4, v11);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))( v3,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000038LL,  0x800000010050FCD0LL,  v9,  v6,  v3,  0LL);
  qword_100655680 = result;
  return result;
}

uint64_t sub_10043A3D8(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0LL);
  v2[5] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[6] = v4;
  unint64_t v5 = (*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[7] = swift_task_alloc(v5);
  v2[8] = swift_task_alloc(v5);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  v2[9] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[10] = v7;
  v2[11] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10043A4A0, static AirDropActor.shared, 0LL);
}

uint64_t sub_10043A4A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v6 = SFAirDropReceive.AskRequest.files.getter(a1);
  uint64_t v7 = *(void *)(v6 + 16);
  __n128 v8 = swift_bridgeObjectRelease((const char *)v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 16))(v3, v2, v5, v8);
  uint64_t v11 = *(void *)(v1 + 80);
  uint64_t v10 = *(void *)(v1 + 88);
  uint64_t v12 = *(void *)(v1 + 72);
  if (v7)
  {
    uint64_t v13 = SFAirDropReceive.AskRequest.urlItems.getter(v9);
    uint64_t v14 = *(void *)(v13 + 16);
    __n128 v15 = swift_bridgeObjectRelease((const char *)v13);
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v12, v15);
    if (!v14)
    {
      id v16 = objc_allocWithZone(&OBJC_CLASS___LSApplicationRecord);
      uint64_t v17 = 0LL;
      id v18 = sub_10043C098(0xD000000000000019LL, 0x800000010050FD10LL, 1);
      uint64_t v30 = *(void *)(v1 + 48);
      uint64_t v31 = *(void *)(v1 + 32);
      uint64_t v32 = *(void **)(v31 + 16);
      uint64_t v60 = v31;
      *(void *)(v31 + 16) = v18;

      uint64_t result = SFAirDropReceive.AskRequest.items.getter();
      int64_t v34 = 0LL;
      uint64_t v58 = result + 56;
      uint64_t v63 = v30;
      os_log_t log = (os_log_t)result;
      uint64_t v35 = -1LL;
      uint64_t v36 = -1LL << *(_BYTE *)(result + 32);
      if (-v36 < 64) {
        uint64_t v35 = ~(-1LL << -(char)v36);
      }
      unint64_t v37 = v35 & *(void *)(result + 56);
      uint64_t v61 = OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasVideos;
      uint64_t v62 = OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasPhotos;
      int64_t v59 = (unint64_t)(63 - v36) >> 6;
      while (1)
      {
        if (v37)
        {
          unint64_t v44 = __clz(__rbit64(v37));
          v37 &= v37 - 1;
          unint64_t v45 = v44 | (v34 << 6);
        }

        else
        {
          int64_t v46 = v34 + 1;
          if (__OFADD__(v34, 1LL))
          {
            __break(1u);
            swift_once(&qword_1006443D0, sub_10043A1B8);
            uint64_t v19 = type metadata accessor for Logger(0LL);
            sub_100186DE4(v19, (uint64_t)qword_100655668);
            swift_errorRetain(v17);
            uint64_t v20 = swift_errorRetain(v17);
            uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
            os_log_type_t v22 = static os_log_type_t.error.getter(v21);
            if (os_log_type_enabled(v21, v22))
            {
              loga = v21;
              uint64_t v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              __n128 v24 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
              *(_DWORD *)uint64_t v23 = 138412290;
              swift_errorRetain(v17);
              uint64_t v25 = _swift_stdlib_bridgeErrorToNSError(v17);
              *(void *)(v34 - 8) = v25;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v34 - 8, v34, v23 + 4, v23 + 12);
              *__n128 v24 = v25;
              swift_errorRelease(v17);
              swift_errorRelease(v17);
              _os_log_impl((void *)&_mh_execute_header, loga, v22, "Failed to get Photos application: %@", v23, 0xCu);
              uint64_t v26 = sub_100183098(&qword_1006454E0);
              swift_arrayDestroy(v24, 1LL, v26);
              swift_slowDealloc(v24, -1LL, -1LL);
              swift_slowDealloc(v23, -1LL, -1LL);

              swift_errorRelease(v17);
            }

            else
            {
              swift_errorRelease(v17);
              swift_errorRelease(v17);
              swift_errorRelease(v17);
            }

            break;
          }

          if (v46 >= v59) {
            goto LABEL_33;
          }
          unint64_t v47 = *(void *)(v58 + 8 * v46);
          ++v34;
          if (!v47)
          {
            int64_t v34 = v46 + 1;
            if (v46 + 1 >= v59) {
              goto LABEL_33;
            }
            unint64_t v47 = *(void *)(v58 + 8 * v34);
            if (!v47)
            {
              int64_t v34 = v46 + 2;
              if (v46 + 2 >= v59) {
                goto LABEL_33;
              }
              unint64_t v47 = *(void *)(v58 + 8 * v34);
              if (!v47)
              {
                int64_t v48 = v46 + 3;
                if (v48 >= v59)
                {
LABEL_33:
                  swift_release(log);
                  uint64_t v27 = 1LL;
                  goto LABEL_8;
                }

                unint64_t v47 = *(void *)(v58 + 8 * v48);
                if (!v47)
                {
                  while (1)
                  {
                    int64_t v34 = v48 + 1;
                    if (__OFADD__(v48, 1LL)) {
                      break;
                    }
                    if (v34 >= v59) {
                      goto LABEL_33;
                    }
                    unint64_t v47 = *(void *)(v58 + 8 * v34);
                    ++v48;
                    if (v47) {
                      goto LABEL_28;
                    }
                  }

                  __break(1u);
                  return result;
                }

                int64_t v34 = v48;
              }
            }
          }

void sub_10043A9D8(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  LODWORD(v4) = a2;
  uint64_t v5 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  __n128 v9 = &v102[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = &v102[-v11];
  uint64_t v13 = OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasPhotos;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasPhotos) == 1
    && *(_BYTE *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasVideos) == 1)
  {
    int v103 = (int)v4;
    uint64_t v14 = SFAirDropReceive.AskRequest.items.getter(v10);
    uint64_t v104 = 0LL;
    uint64_t v105 = 0LL;
    int64_t v15 = 0LL;
    *(void *)&__int128 v108 = v14;
    uint64_t v16 = 1LL << *(_BYTE *)(v14 + 32);
    uint64_t v17 = -1LL;
    if (v16 < 64) {
      uint64_t v17 = ~(-1LL << v16);
    }
    uint64_t v18 = *(void *)(v14 + 56);
    uint64_t v106 = v14 + 56;
    unint64_t v3 = v17 & v18;
    int64_t v107 = (unint64_t)(v16 + 63) >> 6;
    while (1)
    {
      while (1)
      {
        if (v3)
        {
          unint64_t v19 = __clz(__rbit64(v3));
          v3 &= v3 - 1;
          unint64_t v20 = v19 | (v15 << 6);
        }

        else
        {
          int64_t v21 = v15 + 1;
          if (__OFADD__(v15, 1LL))
          {
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
            goto LABEL_66;
          }

          if (v21 >= v107) {
            goto LABEL_45;
          }
          unint64_t v22 = *(void *)(v106 + 8 * v21);
          ++v15;
          if (!v22)
          {
            int64_t v15 = v21 + 1;
            if (v21 + 1 >= v107) {
              goto LABEL_45;
            }
            unint64_t v22 = *(void *)(v106 + 8 * v15);
            if (!v22)
            {
              int64_t v15 = v21 + 2;
              if (v21 + 2 >= v107) {
                goto LABEL_45;
              }
              unint64_t v22 = *(void *)(v106 + 8 * v15);
              if (!v22)
              {
                int64_t v23 = v21 + 3;
                if (v23 >= v107)
                {
LABEL_45:
                  swift_release(v108);
                  uint64_t v64 = sub_100183098((uint64_t *)&unk_100650440);
                  uint64_t inited = swift_initStackObject(v64, v109);
                  *(void *)(inited + 32) = 0x4F544F4850LL;
                  uint64_t v66 = inited + 32;
                  __int128 v108 = xmmword_1004CD530;
                  *(_OWORD *)(inited + 16) = xmmword_1004CD530;
                  uint64_t v67 = v105;
                  *(void *)(inited + 40) = 0xE500000000000000LL;
                  *(void *)(inited + 48) = v67;
                  *(void *)(inited + 56) = 0x4F45444956LL;
                  *(void *)(inited + 64) = 0xE500000000000000LL;
                  uint64_t v68 = v104;
                  *(void *)(inited + 72) = v104;
                  uint64_t v111 = 0x545F4E5245444F4DLL;
                  unint64_t v112 = 0xEF524546534E4152LL;
                  *(void *)&double v69 = swift_bridgeObjectRetain((const char *)0xE500000000000000LL).n128_u64[0];
                  swift_bridgeObjectRetain((const char *)inited, v69);
                  v70._countAndFlagsBits = 95LL;
                  v70._object = (void *)0xE100000000000000LL;
                  String.append(_:)(v70);
                  v71._countAndFlagsBits = 0x4F544F4850LL;
                  v71._object = (void *)0xE500000000000000LL;
                  String.append(_:)(v71);
                  swift_bridgeObjectRelease((const char *)0xE500000000000000LL);
                  if (v67 > 1)
                  {
                    v72._countAndFlagsBits = 0x4C4152554C505FLL;
                    v72._object = (void *)0xE700000000000000LL;
                    String.append(_:)(v72);
                  }

                  uint64_t v73 = *(void *)(inited + 56);
                  uint64_t v74 = *(char **)(inited + 64);
                  uint64_t v75 = *(void *)(inited + 72);
                  swift_bridgeObjectRetain(v74);
                  v76._countAndFlagsBits = 95LL;
                  v76._object = (void *)0xE100000000000000LL;
                  String.append(_:)(v76);
                  v77._countAndFlagsBits = v73;
                  v77._object = v74;
                  String.append(_:)(v77);
                  swift_bridgeObjectRelease(v74);
                  BOOL v78 = v75 < 2;
                  char v79 = v103;
                  if (!v78)
                  {
                    v80._countAndFlagsBits = 0x4C4152554C505FLL;
                    v80._object = (void *)0xE700000000000000LL;
                    String.append(_:)(v80);
                  }

                  swift_bridgeObjectRelease((const char *)inited);
                  if ((v79 & 1) != 0)
                  {
                    v81._countAndFlagsBits = 0x4C4154495041435FLL;
                    v81._object = (void *)0xEC00000044455A49LL;
                    String.append(_:)(v81);
                  }

                  v82._countAndFlagsBits = 0x545845545FLL;
                  v82._object = (void *)0xE500000000000000LL;
                  String.append(_:)(v82);
                  uint64_t v83 = (const char *)v112;
                  swift_setDeallocating(inited);
                  uint64_t v84 = *(void *)(inited + 16);
                  uint64_t v85 = sub_100183098(&qword_100646EA0);
                  swift_arrayDestroy(v66, v84, v85);
                  NSString v86 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease(v83);
                  id v88 = (id)SFLocalizedStringForKey(v86, v87);

                  if (v67 <= 1)
                  {
                    if (v68 >= 2)
                    {
                      if (!v88) {
                        goto LABEL_68;
                      }
                      uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
                      int64_t v59 = v93;

                      uint64_t v94 = sub_100183098(&qword_1006483E0);
                      uint64_t v61 = swift_allocObject(v94, 72LL, 7LL);
                      *(_OWORD *)(v61 + 16) = xmmword_1004CDCA0;
                      *(void *)(v61 + 56) = &type metadata for Int;
                      *(void *)(v61 + 64) = &protocol witness table for Int;
                      *(void *)(v61 + 32) = v68;
                      uint64_t v62 = v92;
                      goto LABEL_44;
                    }

                    if (!v88) {
                      goto LABEL_70;
                    }
                    uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
                    uint64_t v100 = v99;

                    static String.localizedStringWithFormat(_:_:)(v98, v100, _swiftEmptyArrayStorage);
                    swift_bridgeObjectRelease(v100, v101);
                  }

                  else
                  {
                    if (v68 < 2)
                    {
                      if (!v88) {
                        goto LABEL_69;
                      }
                      uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
                      int64_t v59 = v96;

                      uint64_t v97 = sub_100183098(&qword_1006483E0);
                      uint64_t v61 = swift_allocObject(v97, 72LL, 7LL);
                      *(_OWORD *)(v61 + 16) = xmmword_1004CDCA0;
                      *(void *)(v61 + 56) = &type metadata for Int;
                      *(void *)(v61 + 64) = &protocol witness table for Int;
                      *(void *)(v61 + 32) = v67;
                      uint64_t v62 = v95;
                    }

                    else
                    {
                      if (!v88) {
                        goto LABEL_67;
                      }
                      uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
                      int64_t v59 = v90;

                      uint64_t v91 = sub_100183098(&qword_1006483E0);
                      uint64_t v61 = swift_allocObject(v91, 112LL, 7LL);
                      *(_OWORD *)(v61 + 16) = v108;
                      *(void *)(v61 + 56) = &type metadata for Int;
                      *(void *)(v61 + 64) = &protocol witness table for Int;
                      *(void *)(v61 + 32) = v67;
                      *(void *)(v61 + 96) = &type metadata for Int;
                      *(void *)(v61 + 104) = &protocol witness table for Int;
                      *(void *)(v61 + 72) = v68;
                      uint64_t v62 = v89;
                    }

uint64_t sub_10043B370()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10043B3D4, static AirDropActor.shared, 0LL);
}

uint64_t sub_10043B3D4()
{
  id v0 = [(id)objc_opt_self(PHPhotoLibrary) sharedPhotoLibrary];
  if (qword_1006443D8 != -1) {
    swift_once(&qword_1006443D8, sub_10043A248);
  }
  return swift_task_switch(sub_1002680A8, static AirDropActor.shared, 0LL);
}

uint64_t sub_10043B458(uint64_t a1)
{
  unint64_t v3 = *(void **)(v1 + 16);
  uint64_t v7 = 0LL;
  uint64_t v4 = swift_allocObject(&unk_1005E2018, 32LL, 7LL);
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v3;
  id v5 = v3;
  swift_bridgeObjectRetain(a1);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)( 0x6E694C2077656956LL,  0xEA0000000000736BLL,  &v7,  &unk_10064A438,  v4,  0xD000000000000067LL,  0x8000000100507620LL,  284LL,  &type metadata for Double,  &type metadata for Bool);
}

uint64_t sub_10043B518(uint64_t a1, int a2, uint64_t a3)
{
  int v65 = a2;
  uint64_t v68 = a1;
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v7);
  __n128 v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for UUID(0LL);
  uint64_t v69 = *(void *)(v10 - 8);
  uint64_t v70 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v67 = v12;
  __chkstk_darwin(v11);
  int64_t v15 = (char *)&v58 - v14;
  uint64_t v16 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v61 = *(void *)(v16 - 8);
  uint64_t v62 = v16;
  __chkstk_darwin(v16);
  uint64_t v60 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_100183098(&qword_10064DA60);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v63 = (uint64_t)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  int64_t v59 = (char *)&v58 - v21;
  uint64_t v22 = sub_100183098((uint64_t *)&unk_1006563F0);
  __chkstk_darwin(v22);
  uint64_t v24 = (uint64_t *)((char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_1001915A4(a3, (uint64_t)v24, (uint64_t *)&unk_1006563F0);
  uint64_t v25 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v26 + 48))(v24, 1LL, v25) == 1)
  {
    uint64_t v27 = sub_100187100((uint64_t)v24, (uint64_t *)&unk_1006563F0);
LABEL_15:
    uint64_t v42 = v68;
    SFAirDropReceive.Transfer.receiveID.getter(v27);
    uint64_t v43 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56LL))(v9, 1LL, 1LL, v43);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))( (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v42,  v4);
    uint64_t v44 = v6;
    double v45 = v15;
    uint64_t v66 = v15;
    uint64_t v46 = (uint64_t)v9;
    Swift::String v47 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    uint64_t v48 = v69;
    Swift::String v49 = v13;
    Swift::String v50 = v13;
    uint64_t v51 = v70;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v50, v45, v70);
    uint64_t v52 = *(unsigned __int8 *)(v5 + 80);
    uint64_t v53 = (v52 + 16) & ~v52;
    uint64_t v54 = *(unsigned __int8 *)(v48 + 80);
    uint64_t v55 = (v44 + v54 + v53) & ~v54;
    uint64_t v56 = swift_allocObject(&unk_1005E1FF0, v55 + v67, v52 | v54 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v56 + v53, v47, v4);
    (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v56 + v55, v49, v51);
    uint64_t v57 = static Task<>.noThrow(priority:operation:)(v46, &unk_1006558A0, v56, (char *)&type metadata for () + 8);
    swift_release(v57);
    swift_release(v56);
    sub_100187100(v46, &qword_100646560);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v66, v51);
  }

  if ((*(unsigned int (**)(void *, uint64_t))(v26 + 88))(v24, v25) != enum case for SFAirDropReceive.ItemDestination.customApp(_:))
  {
    uint64_t v27 = (*(uint64_t (**)(void *, uint64_t))(v26 + 8))(v24, v25);
    goto LABEL_15;
  }

  (*(void (**)(void *, uint64_t))(v26 + 96))(v24, v25);
  int v28 = (const char *)v24[1];
  if (*v24 == 0xD000000000000034LL && v28 == (const char *)0x8000000100504BB0LL)
  {
    swift_bridgeObjectRelease((const char *)0x8000000100504BB0LL);
  }

  else
  {
    char v29 = _stringCompareWithSmolCheck(_:_:expecting:)(*v24, v24[1], 0xD000000000000034LL, 0x8000000100504BB0LL, 0LL);
    swift_bridgeObjectRelease(v28);
    if ((v29 & 1) == 0) {
      goto LABEL_15;
    }
  }

  if ((v65 & 1) == 0) {
    goto LABEL_15;
  }
  if (qword_1006443D0 != -1) {
    swift_once(&qword_1006443D0, sub_10043A1B8);
  }
  uint64_t v30 = type metadata accessor for Logger(0LL);
  uint64_t v31 = sub_100186DE4(v30, (uint64_t)qword_100655668);
  int v32 = (os_log_s *)Logger.logObject.getter(v31);
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    int v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)int v34 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v32,  v33,  "Photos transfer succeeded with moveToApp selected; not cleaning up until Share Sheet is done",
      v34,
      2u);
    swift_slowDealloc(v34, -1LL, -1LL);
  }

  BOOL v35 = v60;
  uint64_t v37 = SFAirDropReceive.Transfer.id.getter(v36);
  uint64_t v38 = (uint64_t)v59;
  SFAirDrop.TransferIdentifier.id.getter(v37);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v62);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v38, 0LL, 1LL, v70);
  uint64_t v39 = v63;
  sub_1003FC464(v38, v63);
  uint64_t v40 = v64 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_transferID;
  swift_beginAccess(v64 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_transferID, v71, 33LL, 0LL);
  sub_100408F8C(v39, v40);
  return swift_endAccess(v71);
}

uint64_t sub_10043BA70()
{
  sub_100187100( (uint64_t)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_transferID,  &qword_10064DA60);
  *(void *)&double v1 = swift_bridgeObjectRelease(*(const char **)((char *)v0
                                                            + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_unprivatizedURLs)).n128_u64[0];
  swift_bridgeObjectRelease( *(const char **)((char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_assetIdentifiers),  v1);
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_10043BAD0()
{
  return type metadata accessor for SDAirDropContentHandlerPhotos(0LL);
}

uint64_t type metadata accessor for SDAirDropContentHandlerPhotos(uint64_t a1)
{
  uint64_t result = qword_1006556D8;
  if (!qword_1006556D8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropContentHandlerPhotos);
  }
  return result;
}

void sub_10043BB14(uint64_t a1)
{
  v4[0] = "\b";
  sub_100408A70(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    uint64_t v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[4] = &unk_1004DBE88;
    v4[5] = &unk_1004DBE88;
    swift_updateClassMetadata2(a1, 256LL, 6LL, v4, a1 + 80);
  }

uint64_t sub_10043BBA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerPhotos(0LL);
  uint64_t v3 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  *(void *)(v3 + 16) = 0LL;
  uint64_t v4 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_transferID;
  uint64_t v5 = type metadata accessor for UUID(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))( v4,  1LL,  1LL,  v5);
  *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_unprivatizedURLs) = _swiftEmptyArrayStorage;
  *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_assetIdentifiers) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasPhotos) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasVideos) = 0;
  *a1 = v3;
  return result;
}

uint64_t sub_10043BC54(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_1006556EC);
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1001C97A0;
  return sub_10043A3D8(a1);
}

void sub_10043BCA4(uint64_t a1, int a2)
{
}

uint64_t sub_10043BCC4(uint64_t a1, int a2, uint64_t a3)
{
  return sub_10043B518(a1, a2, a3);
}

uint64_t sub_10043BCE4(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  __n128 v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *v3;
  uint64_t v19 = 0LL;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = (v11 + 16) & ~v11;
  unint64_t v13 = (v8 + v12 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v15 = swift_allocObject(&unk_1005E1FA0, v14 + 8, v11 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v15 + v12, v9, v6);
  *(void *)(v15 + v13) = a1;
  *(void *)(v15 + v14) = v10;
  swift_bridgeObjectRetain(a1);
  swift_retain();
  uint64_t v16 = sub_100183098((uint64_t *)&unk_1006464E0);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)( 0x502074726F706D49LL,  0xED0000736F746F68LL,  &v19,  &unk_100655890,  v15,  0xD000000000000064LL,  0x800000010050FC60LL,  285LL,  &type metadata for Double,  v16);
}

uint64_t sub_10043BE58(uint64_t a1)
{
  return sub_10043B458(a1);
}

BOOL sub_10043BE78()
{
  return *(void *)(*(void *)(*v0 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_assetIdentifiers)
                   + 16LL) > 1uLL;
}

uint64_t sub_10043BE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100655898 + dword_100655898);
  uint64_t v6 = (void *)swift_task_alloc(unk_10065589C);
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100302EAC;
  return v8(a2, a3);
}

uint64_t sub_10043BF0C()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(void *)(v0 + v6));
  swift_release(*(void *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_10043BF98()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_10065588C);
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1001943E8;
  return sub_10043B370();
}

unint64_t sub_10043C050()
{
  unint64_t result = qword_100644420;
  if (!qword_100644420)
  {
    uint64_t v1 = type metadata accessor for OS_dispatch_queue.Attributes(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue.Attributes, v1);
    atomic_store(result, (unint64_t *)&qword_100644420);
  }

  return result;
}

id sub_10043C098(uint64_t a1, uint64_t a2, char a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  id v12 = 0LL;
  id v7 = [v3 initWithBundleIdentifier:v6 allowPlaceholder:a3 & 1 error:&v12];

  id v8 = v12;
  if (v7)
  {
    id v9 = v12;
  }

  else
  {
    id v10 = v12;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow();
  }

  return v7;
}

uint64_t sub_10043C170(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  uint64_t v4 = type metadata accessor for UUID(0LL);
  v3[11] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[12] = v5;
  uint64_t v6 = *(void *)(v5 + 64);
  v3[13] = v6;
  v3[14] = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v3[15] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[16] = v8;
  uint64_t v9 = *(void *)(v8 + 64);
  v3[17] = v9;
  v3[18] = swift_task_alloc((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_100646560);
  v3[19] = swift_task_alloc((*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100183098(&qword_10064DA60);
  v3[20] = swift_task_alloc((*(void *)(*(void *)(v11 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v12 = static AirDropActor.shared;
  v3[21] = static AirDropActor.shared;
  return swift_task_switch(sub_10043C280, v12, 0LL);
}

uint64_t sub_10043C280()
{
  uint64_t v1 = v0[10];
  v0[22] = [objc_allocWithZone((Class)type metadata accessor for SDAirDropMoveToAppShareSheet()) init];
  uint64_t v2 = *(const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_unprivatizedURLs);
  v0[23] = v2;
  uint64_t v3 = unk_100655B54;
  uint64_t v6 = (uint64_t (*)(const char *))((char *)&dword_100655B50 + dword_100655B50);
  swift_bridgeObjectRetain(v2);
  uint64_t v4 = (void *)swift_task_alloc(v3);
  v0[24] = v4;
  void *v4 = v0;
  v4[1] = sub_10043C31C;
  return v6(v2);
}

uint64_t sub_10043C31C(char a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 56) = v1;
  *(_BYTE *)(v3 + 48) = a1;
  *(void *)(v3 + 40) = v2;
  uint64_t v4 = *(void *)(v3 + 192);
  *(void *)(v3 + 200) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    uint64_t v5 = *(void *)(v3 + 168);
    uint64_t v6 = sub_10043C5AC;
  }

  else
  {
    uint64_t v7 = *(void **)(v3 + 176);
    uint64_t v8 = *(void *)(v3 + 168);
    swift_bridgeObjectRelease(*(const char **)(v3 + 184));

    uint64_t v6 = sub_10043C3A8;
    uint64_t v5 = v8;
  }

  return swift_task_switch(v6, v5, 0LL);
}

uint64_t sub_10043C3A8()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 80) + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_transferID;
  swift_beginAccess(v4, v0 + 16, 0LL, 0LL);
  sub_1001915A4(v4, v1, &qword_10064DA60);
  LODWORD(v2) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1LL, v2);
  sub_100187100(v1, &qword_10064DA60);
  if ((_DWORD)v2 != 1)
  {
    uint64_t v6 = *(void *)(v0 + 144);
    uint64_t v5 = *(void *)(v0 + 152);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 120);
    uint64_t v26 = v8;
    uint64_t v10 = *(void *)(v0 + 96);
    uint64_t v27 = *(void *)(v0 + 104);
    uint64_t v28 = *(void *)(v0 + 136);
    uint64_t v11 = *(void *)(v0 + 88);
    uint64_t v13 = *(void *)(v0 + 64);
    uint64_t v12 = *(void *)(v0 + 72);
    uint64_t v14 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v5, 1LL, 1LL, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v12, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v13, v11);
    uint64_t v15 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v16 = (v15 + 16) & ~v15;
    uint64_t v17 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v18 = (v28 + v17 + v16) & ~v17;
    uint64_t v19 = swift_allocObject(&unk_1005E1FC8, v18 + v27, v15 | v17 | 7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v19 + v16, v6, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v19 + v18, v26, v11);
    uint64_t v20 = static Task<>.noThrow(priority:operation:)(v5, &unk_100649D70, v19, (char *)&type metadata for () + 8);
    swift_release(v19);
    swift_release(v20);
    sub_100187100(v5, &qword_100646560);
  }

  uint64_t v21 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v22 = *(void *)(v0 + 152);
  uint64_t v23 = *(void *)(v0 + 144);
  uint64_t v24 = *(void *)(v0 + 112);
  swift_task_dealloc(*(void *)(v0 + 160));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v21);
}

uint64_t sub_10043C5AC()
{
  uint64_t v1 = *(void **)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 112);
  swift_bridgeObjectRelease(*(void *)(v0 + 184));

  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))(0LL);
}

uint64_t sub_10043C62C()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_10043C6E0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SFAirDropReceive.Transfer(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UUID(0LL) - 8) + 80LL);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = v1 + (v8 & ~v7);
  uint64_t v11 = (void *)swift_task_alloc(dword_10064A404);
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1001943E8;
  return sub_10026A4AC(a1, v9, v10);
}

uint64_t sub_10043C780()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10043C7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10043C7B8);
}

uint64_t sub_10043C7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100183098(&qword_1006457E8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 80) + 8);
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  int v10 = v9 - 1;
  if (v10 < 0) {
    int v10 = -1;
  }
  return (v10 + 1);
}

uint64_t sub_10043C848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10043C854);
}

uint64_t sub_10043C854(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100183098(&qword_1006457E8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 80) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for SDAuthenticationSessionMetrics(uint64_t a1)
{
  uint64_t result = qword_100655918;
  if (!qword_100655918) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationSessionMetrics);
  }
  return result;
}

void sub_10043C910(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = v4[0];
    uint64_t v4[2] = v4[0];
    void v4[3] = v4[0];
    void v4[4] = v4[0];
    v4[5] = v4[0];
    void v4[6] = v4[0];
    v4[7] = v4[0];
    v4[8] = v4[0];
    v4[9] = &unk_1004DBF00;
    v4[10] = v4[0];
    v4[11] = v4[0];
    v4[12] = v4[0];
    v4[13] = v4[0];
    v4[14] = &unk_1004DBF18;
    v4[15] = &unk_1004DBF30;
    v4[16] = &unk_1004DBF48;
    v4[17] = &unk_1004DBF48;
    swift_initStructMetadata(a1, 256LL, 18LL, v4, a1 + 16);
  }

void sub_10043C9B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_100645398);
  unint64_t v3 = (char *)swift_allocObject(v2, 48LL, 7LL);
  *((_OWORD *)v3 + 1) = xmmword_1004CDCA0;
  *((void *)v3 + 4) = UUID.uuidString.getter(v3);
  *((void *)v3 + 5) = v4;
  if (qword_1006443E0 != -1) {
    swift_once(&qword_1006443E0, sub_10043D500);
  }
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = sub_100186DE4(v5, (uint64_t)qword_1006558A8);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Logging metrics", v9, 2u);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  int v10 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for SDAuthenticationSessionMetrics(0LL) + 76));
  if (v10 != 2)
  {
    _StringGuts.grow(_:)(24LL);
    swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
    uint64_t v141 = 0xD000000000000016LL;
    unint64_t v142 = 0x800000010050AE90LL;
    if ((v10 & 1) != 0) {
      uint64_t v11 = 1702195828LL;
    }
    else {
      uint64_t v11 = 0x65736C6166LL;
    }
    if ((v10 & 1) != 0) {
      uint64_t v12 = (const char *)0xE400000000000000LL;
    }
    else {
      uint64_t v12 = (const char *)0xE500000000000000LL;
    }
    uint64_t v13 = v12;
    String.append(_:)(*(Swift::String *)&v11);
    swift_bridgeObjectRelease(v12);
    uint64_t v14 = v141;
    unint64_t v15 = v142;
    unint64_t v17 = *((void *)v3 + 2);
    unint64_t v16 = *((void *)v3 + 3);
    if (v17 >= v16 >> 1) {
      unint64_t v3 = sub_10018BC54((char *)(v16 > 1), v17 + 1, 1, v3);
    }
    *((void *)v3 + 2) = v17 + 1;
    uint64_t v18 = &v3[16 * v17];
    *((void *)v18 + 4) = v14;
    *((void *)v18 + 5) = v15;
  }

  uint64_t v19 = sub_10043E0A8();
  if ((v20 & 1) == 0)
  {
    uint64_t v21 = v19;
    _StringGuts.grow(_:)(33LL);
    swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
    uint64_t v141 = 0xD00000000000001ELL;
    unint64_t v142 = 0x800000010050AE70LL;
    uint64_t v22 = sub_100183098(&qword_1006483E0);
    uint64_t v23 = swift_allocObject(v22, 72LL, 7LL);
    *(_OWORD *)(v23 + 16) = xmmword_1004CDCA0;
    *(void *)(v23 + 56) = &type metadata for Double;
    *(void *)(v23 + 64) = &protocol witness table for Double;
    *(void *)(v23 + 32) = v21;
    v24._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v23);
    object = (const char *)v24._object;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(object);
    v26._countAndFlagsBits = 115LL;
    v26._object = (void *)0xE100000000000000LL;
    String.append(_:)(v26);
    uint64_t v27 = v141;
    unint64_t v28 = v142;
    unint64_t v30 = *((void *)v3 + 2);
    unint64_t v29 = *((void *)v3 + 3);
    if (v30 >= v29 >> 1) {
      unint64_t v3 = sub_10018BC54((char *)(v29 > 1), v30 + 1, 1, v3);
    }
    *((void *)v3 + 2) = v30 + 1;
    uint64_t v31 = &v3[16 * v30];
    *((void *)v31 + 4) = v27;
    *((void *)v31 + 5) = v28;
  }

  uint64_t v32 = sub_10043E270();
  if ((v33 & 1) == 0)
  {
    uint64_t v34 = v32;
    _StringGuts.grow(_:)(44LL);
    swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
    uint64_t v141 = 0xD000000000000029LL;
    unint64_t v142 = 0x800000010050AE40LL;
    uint64_t v35 = sub_100183098(&qword_1006483E0);
    uint64_t v36 = swift_allocObject(v35, 72LL, 7LL);
    *(_OWORD *)(v36 + 16) = xmmword_1004CDCA0;
    *(void *)(v36 + 56) = &type metadata for Double;
    *(void *)(v36 + 64) = &protocol witness table for Double;
    *(void *)(v36 + 32) = v34;
    v37._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v36);
    uint64_t v38 = (const char *)v37._object;
    String.append(_:)(v37);
    swift_bridgeObjectRelease(v38);
    v39._countAndFlagsBits = 115LL;
    v39._object = (void *)0xE100000000000000LL;
    String.append(_:)(v39);
    uint64_t v40 = v141;
    unint64_t v41 = v142;
    unint64_t v43 = *((void *)v3 + 2);
    unint64_t v42 = *((void *)v3 + 3);
    if (v43 >= v42 >> 1) {
      unint64_t v3 = sub_10018BC54((char *)(v42 > 1), v43 + 1, 1, v3);
    }
    *((void *)v3 + 2) = v43 + 1;
    uint64_t v44 = &v3[16 * v43];
    *((void *)v44 + 4) = v40;
    *((void *)v44 + 5) = v41;
  }

  uint64_t v45 = sub_10043D758();
  if ((v46 & 1) == 0)
  {
    uint64_t v47 = v45;
    _StringGuts.grow(_:)(27LL);
    swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
    uint64_t v141 = 0xD000000000000018LL;
    unint64_t v142 = 0x800000010050AE20LL;
    uint64_t v48 = sub_100183098(&qword_1006483E0);
    uint64_t v49 = swift_allocObject(v48, 72LL, 7LL);
    *(_OWORD *)(v49 + 16) = xmmword_1004CDCA0;
    *(void *)(v49 + 56) = &type metadata for Double;
    *(void *)(v49 + 64) = &protocol witness table for Double;
    *(void *)(v49 + 32) = v47;
    v50._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v49);
    uint64_t v51 = (const char *)v50._object;
    String.append(_:)(v50);
    swift_bridgeObjectRelease(v51);
    v52._countAndFlagsBits = 115LL;
    v52._object = (void *)0xE100000000000000LL;
    String.append(_:)(v52);
    uint64_t v53 = v141;
    unint64_t v54 = v142;
    unint64_t v56 = *((void *)v3 + 2);
    unint64_t v55 = *((void *)v3 + 3);
    if (v56 >= v55 >> 1) {
      unint64_t v3 = sub_10018BC54((char *)(v55 > 1), v56 + 1, 1, v3);
    }
    *((void *)v3 + 2) = v56 + 1;
    uint64_t v57 = &v3[16 * v56];
    *((void *)v57 + 4) = v53;
    *((void *)v57 + 5) = v54;
  }

  uint64_t v58 = sub_10043D928();
  if ((v59 & 1) == 0)
  {
    uint64_t v60 = v58;
    _StringGuts.grow(_:)(30LL);
    swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
    uint64_t v141 = 0xD00000000000001BLL;
    unint64_t v142 = 0x800000010050AE00LL;
    uint64_t v61 = sub_100183098(&qword_1006483E0);
    uint64_t v62 = swift_allocObject(v61, 72LL, 7LL);
    *(_OWORD *)(v62 + 16) = xmmword_1004CDCA0;
    *(void *)(v62 + 56) = &type metadata for Double;
    *(void *)(v62 + 64) = &protocol witness table for Double;
    *(void *)(v62 + 32) = v60;
    v63._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v62);
    uint64_t v64 = (const char *)v63._object;
    String.append(_:)(v63);
    swift_bridgeObjectRelease(v64);
    v65._countAndFlagsBits = 115LL;
    v65._object = (void *)0xE100000000000000LL;
    String.append(_:)(v65);
    uint64_t v66 = v141;
    unint64_t v67 = v142;
    unint64_t v69 = *((void *)v3 + 2);
    unint64_t v68 = *((void *)v3 + 3);
    if (v69 >= v68 >> 1) {
      unint64_t v3 = sub_10018BC54((char *)(v68 > 1), v69 + 1, 1, v3);
    }
    *((void *)v3 + 2) = v69 + 1;
    uint64_t v70 = &v3[16 * v69];
    *((void *)v70 + 4) = v66;
    *((void *)v70 + 5) = v67;
  }

  uint64_t v71 = sub_10043DAF8();
  if ((v72 & 1) == 0)
  {
    uint64_t v73 = v71;
    _StringGuts.grow(_:)(31LL);
    swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
    uint64_t v141 = 0xD00000000000001CLL;
    unint64_t v142 = 0x800000010050ADE0LL;
    uint64_t v74 = sub_100183098(&qword_1006483E0);
    uint64_t v75 = swift_allocObject(v74, 72LL, 7LL);
    *(_OWORD *)(v75 + 16) = xmmword_1004CDCA0;
    *(void *)(v75 + 56) = &type metadata for Double;
    *(void *)(v75 + 64) = &protocol witness table for Double;
    *(void *)(v75 + 32) = v73;
    v76._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v75);
    Swift::String v77 = (const char *)v76._object;
    String.append(_:)(v76);
    swift_bridgeObjectRelease(v77);
    v78._countAndFlagsBits = 115LL;
    v78._object = (void *)0xE100000000000000LL;
    String.append(_:)(v78);
    uint64_t v79 = v141;
    unint64_t v80 = v142;
    unint64_t v82 = *((void *)v3 + 2);
    unint64_t v81 = *((void *)v3 + 3);
    if (v82 >= v81 >> 1) {
      unint64_t v3 = sub_10018BC54((char *)(v81 > 1), v82 + 1, 1, v3);
    }
    *((void *)v3 + 2) = v82 + 1;
    uint64_t v83 = &v3[16 * v82];
    *((void *)v83 + 4) = v79;
    *((void *)v83 + 5) = v80;
  }

  uint64_t v84 = sub_10043DCC8();
  if ((v85 & 1) == 0)
  {
    uint64_t v86 = v84;
    _StringGuts.grow(_:)(28LL);
    swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
    uint64_t v141 = 0xD000000000000019LL;
    unint64_t v142 = 0x800000010050ADC0LL;
    uint64_t v87 = sub_100183098(&qword_1006483E0);
    uint64_t v88 = swift_allocObject(v87, 72LL, 7LL);
    *(_OWORD *)(v88 + 16) = xmmword_1004CDCA0;
    *(void *)(v88 + 56) = &type metadata for Double;
    *(void *)(v88 + 64) = &protocol witness table for Double;
    *(void *)(v88 + 32) = v86;
    v89._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v88);
    uint64_t v90 = (const char *)v89._object;
    String.append(_:)(v89);
    swift_bridgeObjectRelease(v90);
    v91._countAndFlagsBits = 115LL;
    v91._object = (void *)0xE100000000000000LL;
    String.append(_:)(v91);
    uint64_t v92 = v141;
    unint64_t v93 = v142;
    unint64_t v95 = *((void *)v3 + 2);
    unint64_t v94 = *((void *)v3 + 3);
    if (v95 >= v94 >> 1) {
      unint64_t v3 = sub_10018BC54((char *)(v94 > 1), v95 + 1, 1, v3);
    }
    *((void *)v3 + 2) = v95 + 1;
    uint64_t v96 = &v3[16 * v95];
    *((void *)v96 + 4) = v92;
    *((void *)v96 + 5) = v93;
  }

  uint64_t v97 = sub_10043DED8();
  if ((v98 & 1) == 0)
  {
    uint64_t v99 = v97;
    _StringGuts.grow(_:)(25LL);
    swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
    uint64_t v141 = 0xD000000000000016LL;
    unint64_t v142 = 0x800000010050ADA0LL;
    uint64_t v100 = sub_100183098(&qword_1006483E0);
    uint64_t v101 = swift_allocObject(v100, 72LL, 7LL);
    *(_OWORD *)(v101 + 16) = xmmword_1004CDCA0;
    *(void *)(v101 + 56) = &type metadata for Double;
    *(void *)(v101 + 64) = &protocol witness table for Double;
    *(void *)(v101 + 32) = v99;
    v102._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v101);
    int v103 = (const char *)v102._object;
    String.append(_:)(v102);
    swift_bridgeObjectRelease(v103);
    v104._countAndFlagsBits = 115LL;
    v104._object = (void *)0xE100000000000000LL;
    String.append(_:)(v104);
    uint64_t v105 = v141;
    unint64_t v106 = v142;
    unint64_t v108 = *((void *)v3 + 2);
    unint64_t v107 = *((void *)v3 + 3);
    if (v108 >= v107 >> 1) {
      unint64_t v3 = sub_10018BC54((char *)(v107 > 1), v108 + 1, 1, v3);
    }
    *((void *)v3 + 2) = v108 + 1;
    uint64_t v109 = &v3[16 * v108];
    *((void *)v109 + 4) = v105;
    *((void *)v109 + 5) = v106;
  }

  uint64_t v110 = sub_10043D590();
  if ((v111 & 1) == 0)
  {
    uint64_t v112 = v110;
    sub_10043D758();
    if ((v113 & 1) != 0) {
      uint64_t v114 = 0LL;
    }
    else {
      uint64_t v114 = 0xD000000000000013LL;
    }
    if ((v113 & 1) != 0) {
      uint64_t v115 = (void *)0xE000000000000000LL;
    }
    else {
      uint64_t v115 = (void *)0x800000010050AD80LL;
    }
    _StringGuts.grow(_:)(31LL);
    swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
    uint64_t v141 = 0xD000000000000017LL;
    unint64_t v142 = 0x800000010050AD60LL;
    v116._countAndFlagsBits = v114;
    v116._object = v115;
    String.append(_:)(v116);
    swift_bridgeObjectRelease((const char *)v115);
    v117._countAndFlagsBits = 2112800LL;
    v117._object = (void *)0xE300000000000000LL;
    String.append(_:)(v117);
    uint64_t v118 = sub_100183098(&qword_1006483E0);
    uint64_t v119 = swift_allocObject(v118, 72LL, 7LL);
    *(_OWORD *)(v119 + 16) = xmmword_1004CDCA0;
    *(void *)(v119 + 56) = &type metadata for Double;
    *(void *)(v119 + 64) = &protocol witness table for Double;
    *(void *)(v119 + 32) = v112;
    v120._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v119);
    v121 = (const char *)v120._object;
    String.append(_:)(v120);
    swift_bridgeObjectRelease(v121);
    v122._countAndFlagsBits = 115LL;
    v122._object = (void *)0xE100000000000000LL;
    String.append(_:)(v122);
    uint64_t v123 = v141;
    unint64_t v124 = v142;
    unint64_t v126 = *((void *)v3 + 2);
    unint64_t v125 = *((void *)v3 + 3);
    if (v126 >= v125 >> 1) {
      unint64_t v3 = sub_10018BC54((char *)(v125 > 1), v126 + 1, 1, v3);
    }
    *((void *)v3 + 2) = v126 + 1;
    v127 = &v3[16 * v126];
    *((void *)v127 + 4) = v123;
    *((void *)v127 + 5) = v124;
  }

  uint64_t v141 = (uint64_t)v3;
  uint64_t v128 = sub_100183098((uint64_t *)&unk_10064D7D0);
  unint64_t v129 = sub_1001FF494();
  uint64_t v130 = BidirectionalCollection<>.joined(separator:)(10LL, 0xE100000000000000LL, v128, v129);
  v132 = v131;
  swift_bridgeObjectRelease(v3);
  id v133 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v134 = String._bridgeToObjectiveC()();
  NSString v135 = String._bridgeToObjectiveC()();
  [v133 setObject:v134 forKey:v135];

  swift_bridgeObjectRetain(v132);
  v137 = (os_log_s *)Logger.logObject.getter(v136);
  os_log_type_t v138 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v137, v138))
  {
    v139 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v140 = swift_slowAlloc(32LL, -1LL);
    uint64_t v141 = v140;
    *(_DWORD *)v139 = 136315138;
    swift_bridgeObjectRetain(v132);
    uint64_t v143 = sub_10018CDB4(v130, (unint64_t)v132, &v141);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, &v144, v139 + 4, v139 + 12);
    swift_bridgeObjectRelease_n(v132, 3LL);
    _os_log_impl((void *)&_mh_execute_header, v137, v138, "%s", v139, 0xCu);
    swift_arrayDestroy(v140, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v140, -1LL, -1LL);
    swift_slowDealloc(v139, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(v132, 2LL);
  }

uint64_t sub_10043D500()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_1006558A8);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_1006558A8);
  if (qword_100644020 != -1) {
    swift_once(&qword_100644020, sub_10023A520);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_10043D590()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - v12;
  sub_1001D95A8(v0, (uint64_t)v6);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1LL, v7) == 1)
  {
    uint64_t v15 = (uint64_t)v6;
LABEL_5:
    sub_100224DB4(v15);
    return 0LL;
  }

  unint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v13, v6, v7);
  uint64_t v17 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  sub_1001D95A8(v0 + *(int *)(v17 + 20), (uint64_t)v4);
  if (v14(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v15 = (uint64_t)v4;
    goto LABEL_5;
  }

  v16(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  char v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(void *)&v19;
}

uint64_t sub_10043D758()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  sub_1001D95A8(v0 + *(int *)(v14 + 24), (uint64_t)v6);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1LL, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_100224DB4(v16);
    return 0LL;
  }

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_1001D95A8(v0 + *(int *)(v14 + 28), (uint64_t)v4);
  if (v15(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }

  v17(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  char v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(void *)&v19;
}

uint64_t sub_10043D928()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  sub_1001D95A8(v0 + *(int *)(v14 + 32), (uint64_t)v6);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1LL, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_100224DB4(v16);
    return 0LL;
  }

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_1001D95A8(v0 + *(int *)(v14 + 36), (uint64_t)v4);
  if (v15(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }

  v17(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  char v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(void *)&v19;
}

uint64_t sub_10043DAF8()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  sub_1001D95A8(v0 + *(int *)(v14 + 40), (uint64_t)v6);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1LL, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_100224DB4(v16);
    return 0LL;
  }

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_1001D95A8(v0 + *(int *)(v14 + 44), (uint64_t)v4);
  if (v15(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }

  v17(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  char v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(void *)&v19;
}

uint64_t sub_10043DCC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_1006457E8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  if ((*(_BYTE *)(v1 + *(int *)(v15 + 52)) & 1) != 0)
  {
    *(double *)&uint64_t result = 0.0;
    return result;
  }

  uint64_t v17 = v15;
  sub_1001D95A8(v1 + *(int *)(v15 + 48), (uint64_t)v7);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v18(v7, 1LL, v8) == 1)
  {
    uint64_t v19 = (uint64_t)v7;
LABEL_7:
    sub_100224DB4(v19);
    *(double *)&uint64_t result = 0.0;
    return result;
  }

  char v20 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v20(v14, v7, v8);
  sub_1001D95A8(v1 + *(int *)(v17 + 40), (uint64_t)v5);
  if (v18(v5, 1LL, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    uint64_t v19 = (uint64_t)v5;
    goto LABEL_7;
  }

  v20(v12, v5, v8);
  double v21 = Date.timeIntervalSince(_:)(v12);
  uint64_t v22 = sub_10043DAF8();
  char v24 = v23;
  uint64_t v25 = *(void (**)(char *, uint64_t))(v9 + 8);
  v25(v12, v8);
  v25(v14, v8);
  double v26 = *(double *)&v22;
  if ((v24 & 1) != 0) {
    double v26 = 0.0;
  }
  *(double *)&uint64_t result = v21 - v26;
  return result;
}

uint64_t sub_10043DED8()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  sub_1001D95A8(v0 + *(int *)(v14 + 56), (uint64_t)v6);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1LL, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_100224DB4(v16);
    return 0LL;
  }

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_1001D95A8(v0 + *(int *)(v14 + 60), (uint64_t)v4);
  if (v15(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }

  v17(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  char v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(void *)&v19;
}

uint64_t sub_10043E0A8()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  sub_1001D95A8(v0 + *(int *)(v14 + 64), (uint64_t)v6);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1LL, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_100224DB4(v16);
    return 0LL;
  }

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_1001D95A8(v0, (uint64_t)v4);
  if (v15(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }

  v17(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  char v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(void *)&v19;
}

uint64_t sub_10043E270()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - v12;
  sub_1001D95A8(v0, (uint64_t)v6);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1LL, v7) == 1)
  {
    uint64_t v15 = (uint64_t)v6;
LABEL_5:
    sub_100224DB4(v15);
    return 0LL;
  }

  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v13, v6, v7);
  uint64_t v17 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  sub_1001D95A8(v0 + *(int *)(v17 + 68), (uint64_t)v4);
  if (v14(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v15 = (uint64_t)v4;
    goto LABEL_5;
  }

  v16(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v11);
  char v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(void *)&v19;
}

void sub_10043E438(uint64_t a1, unint64_t a2)
{
  id v17 = *(id *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession);
  id v5 = v17;
  uint64_t v6 = sub_100183098(&qword_100655A68);
  Optional.tryUnwrap(_:file:line:)( 0xD00000000000002CLL,  0x8000000100508020LL,  0xD000000000000065LL,  0x800000010050FD90LL,  47LL,  v6);

  if (!v3)
  {
    id v7 = v16;
    if (a2 >> 60 == 15) {
      Class isa = 0LL;
    }
    else {
      Class isa = Data._bridgeToObjectiveC()().super.isa;
    }
    id v16 = 0LL;
    unsigned __int8 v9 = [v7 stepSessionWithData:isa outputData:&v16];

    id v10 = v16;
    if ((v9 & 1) != 0)
    {
      id v17 = v16;
      id v11 = v16;
      uint64_t v12 = sub_100183098(&qword_100655A70);
      Optional.tryUnwrap(_:file:line:)( 0x2070657473206F4ELL,  0xEC00000061746164LL,  0xD000000000000065LL,  0x800000010050FD90LL,  53LL,  v12);
    }

    else
    {
      unint64_t v13 = sub_100187014();
      swift_allocError(&type metadata for SFAuthenticationErrorMessage, v13, 0LL, 0LL);
      *(_DWORD *)uint64_t v14 = 10;
      *(void *)(v14 + 8) = 0xD000000000000017LL;
      *(void *)(v14 + 16) = 0x800000010050FE20LL;
      id v15 = v10;
      swift_willThrow(v15);
    }
  }

id sub_10043E64C()
{
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession);
  uint64_t v3 = sub_100183098(&qword_100655A68);
  Optional.tryUnwrap(_:file:line:)( 0xD000000000000033LL,  0x80000001005085B0LL,  0xD000000000000065LL,  0x800000010050FD90LL,  65LL,  v3);

  if (!v1)
  {
    id v4 = [v10 generateSessionToken];
    if (v4)
    {
      id v5 = v4;
      id v2 = (id)static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
    }

    else
    {
      unint64_t v7 = sub_100187014();
      uint64_t v8 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v7, 0LL, 0LL);
      *(_DWORD *)uint64_t v9 = 10;
      *(void *)(v9 + 8) = 0xD00000000000001ELL;
      *(void *)(v9 + 16) = 0x800000010050FE00LL;
      swift_willThrow(v8);
    }
  }

  return v2;
}

void sub_10043E788(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type);
  unint64_t v7 = a2 >> 60;
  if (a2 >> 60 == 15 || v6 != 6)
  {
    LODWORD(v76) = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role);
    v75[0] = a1;
    id v77 = *(id *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager);
    uint64_t v20 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 24);
    uint64_t v19 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 32);
    uint64_t v21 = sub_10019A708( (void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice),  v20);
    v75[1] = v75;
    uint64_t v22 = *(void *)(v20 - 8);
    __chkstk_darwin(v21);
    char v24 = (char *)v75 - v23;
    (*(void (**)(char *))(v22 + 16))((char *)v75 - v23);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v19);
    double v26 = v25;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
    if (v6 == 7)
    {
      if (v26)
      {
        NSString v28 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v26, v75[0]);
      }

      else
      {
        NSString v28 = 0LL;
      }

      id v31 = v77;
      char v33 = (void *)&unk_100669000;
      uint64_t v35 = v76;
      if (v7 > 0xE) {
        v36.super.Class isa = 0LL;
      }
      else {
        v36.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
      }
      id v37 =  objc_msgSend( v31,  "aksAuthorizationSessionForDeviceID:attestation:originator:externalACMContext:sessionType:",  v28,  1,  v35,  v36.super.isa,  9,  v75[0]);
    }

    else
    {
      if (v26)
      {
        NSString v29 = String._bridgeToObjectiveC()();
        *(void *)&double v27 = swift_bridgeObjectRelease(v26, v75[0]).n128_u64[0];
      }

      else
      {
        NSString v29 = 0LL;
      }

      id v31 = v77;
      char v33 = &unk_100669000;
      uint64_t v38 = 10LL;
      uint64_t v39 = 2LL;
      if (v6 == 6) {
        uint64_t v39 = 8LL;
      }
      if (v6 != 11) {
        uint64_t v38 = v39;
      }
      if (v6 == 4) {
        uint64_t v40 = 7LL;
      }
      else {
        uint64_t v40 = v38;
      }
      id v37 =  objc_msgSend( v77,  "aksAuthSessionForDeviceID:originator:usingEscrow:attestation:sessionType:",  v29,  v76,  0,  (unint64_t)(v6 - 5) < 3,  v40,  v27);
    }

    uint64_t v41 = v33[305];
    uint64_t v34 = *(void **)(v3 + v41);
    *(void *)(v3 + v41) = v37;
  }

  else
  {
    id v77 = *(id *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager);
    uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 24);
    uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 32);
    id v10 = sub_10019A708( (void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice),  v9);
    Swift::String v76 = v75;
    uint64_t v11 = *(void *)(v9 - 8);
    __chkstk_darwin(v10);
    unint64_t v13 = (char *)v75 - v12;
    (*(void (**)(char *))(v11 + 16))((char *)v75 - v12);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    uint64_t v15 = a1;
    sub_10019BA8C(a1, a2);
    v14(v9, v8);
    id v17 = v16;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
    if (v17)
    {
      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
    }

    else
    {
      NSString v18 = 0LL;
    }

    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v31 = v77;
    id v32 = [v77 aksAuthSessionForDeviceID:v18 attestation:1 sessionType:8 escrowSecret:isa];
    sub_100189B0C(v15, a2);

    char v33 = &unk_100669000;
    uint64_t v34 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession);
    *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = v32;
  }

  unint64_t v42 = *(void **)(v3 + v33[305]);
  if (v42)
  {
    id v43 = v42;
    if (([v43 sessionIsValid] & 1) == 0)
    {
      unint64_t v55 = sub_100187014();
      uint64_t v56 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v55, 0LL, 0LL);
      *(_DWORD *)uint64_t v57 = 10;
      *(void *)(v57 + 8) = 0xD000000000000013LL;
      *(void *)(v57 + 16) = 0x800000010050FEA0LL;
      swift_willThrow(v56);
    }
  }

  else
  {
    uint64_t v44 = (void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
    uint64_t v45 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 24);
    uint64_t v46 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 32);
    uint64_t v47 = sub_10019A708(v44, v45);
    uint64_t v48 = *(void *)(v45 - 8);
    __chkstk_darwin(v47);
    Swift::String v50 = (char *)v75 - v49;
    (*(void (**)(char *))(v48 + 16))((char *)v75 - v49);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v46);
    Swift::String v52 = v51;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v45);
    if (v52)
    {
      NSString v54 = String._bridgeToObjectiveC()();
      *(void *)&double v53 = swift_bridgeObjectRelease(v52).n128_u64[0];
    }

    else
    {
      NSString v54 = 0LL;
    }

    unsigned __int8 v58 = objc_msgSend(v31, "cachedEscrowSecretExistsForDeviceID:", v54, v53, v75[0]);

    if ((v58 & 1) != 0)
    {
      uint64_t v59 = v44[3];
      uint64_t v60 = v44[4];
      uint64_t v61 = sub_10019A708(v44, v59);
      uint64_t v62 = *(void *)(v59 - 8);
      __chkstk_darwin(v61);
      uint64_t v64 = (char *)v75 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v62 + 16))(v64);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v60);
      uint64_t v66 = v65;
      (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v59);
      if (v66)
      {
        NSString v68 = String._bridgeToObjectiveC()();
        *(void *)&double v67 = swift_bridgeObjectRelease(v66).n128_u64[0];
      }

      else
      {
        NSString v68 = 0LL;
      }

      unsigned __int8 v72 = objc_msgSend(v31, "cachedEscrowSecretIsValidForDeviceID:", v68, v67);

      unint64_t v73 = sub_100187014();
      uint64_t v70 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v73, 0LL, 0LL);
      if ((v72 & 1) != 0)
      {
        *(_DWORD *)uint64_t v74 = 10;
        *(void *)(v74 + 8) = 0xD00000000000001DLL;
        *(void *)(v74 + 16) = 0x800000010050FE80LL;
      }

      else
      {
        *(_DWORD *)uint64_t v74 = 22;
        *(void *)(v74 + 8) = 0xD000000000000015LL;
        *(void *)(v74 + 16) = 0x800000010050FE60LL;
      }
    }

    else
    {
      unint64_t v69 = sub_100187014();
      uint64_t v70 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v69, 0LL, 0LL);
      *(_DWORD *)uint64_t v71 = 10;
      *(void *)(v71 + 8) = 0xD000000000000015LL;
      *(void *)(v71 + 16) = 0x800000010050FE40LL;
    }

    swift_willThrow(v70);
  }

void sub_10043EDF4()
{
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession);
  uint64_t v3 = sub_100183098(&qword_100655A68);
  Optional.tryUnwrap(_:file:line:)( 0xD00000000000002CLL,  0x8000000100508020LL,  0xD000000000000065LL,  0x800000010050FD90LL,  57LL,  v3);

  if (!v1)
  {
    if (([v7 confirmSession] & 1) == 0)
    {
      unint64_t v4 = sub_100187014();
      uint64_t v5 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v4, 0LL, 0LL);
      *(_DWORD *)uint64_t v6 = 10;
      *(void *)(v6 + 8) = 0xD00000000000001DLL;
      *(void *)(v6 + 16) = 0x800000010050FEC0LL;
      swift_willThrow(v5);
    }
  }

id sub_10043EEFC()
{
  char v1 = *(_BYTE *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role);
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 24);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 32);
  uint64_t v5 = sub_10019A708((void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice), v4);
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v16 - v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3);
  id v10 = v9;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  if ((v1 & 1) != 0)
  {
    if (v10)
    {
      NSString v12 = String._bridgeToObjectiveC()();
      *(void *)&double v11 = swift_bridgeObjectRelease(v10).n128_u64[0];
    }

    else
    {
      NSString v12 = 0LL;
    }

    unint64_t v13 = &selRef_deviceEnabledAsKeyForIDSDeviceID_;
  }

  else
  {
    if (v10)
    {
      NSString v12 = String._bridgeToObjectiveC()();
      *(void *)&double v11 = swift_bridgeObjectRelease(v10).n128_u64[0];
    }

    else
    {
      NSString v12 = 0LL;
    }

    unint64_t v13 = &selRef_deviceEnabledAsKey_;
  }

  id v14 = objc_msgSend(v2, *v13, v12, v11);

  return v14;
}

uint64_t sub_10043F04C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID;
  uint64_t v2 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);

  sub_10018709C((void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice));
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_10043F0CC()
{
  return type metadata accessor for SDAuthenticationAKSAuthSession(0LL);
}

uint64_t type metadata accessor for SDAuthenticationAKSAuthSession(uint64_t a1)
{
  uint64_t result = qword_1006559B8;
  if (!qword_1006559B8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationAKSAuthSession);
  }
  return result;
}

uint64_t sub_10043F110(uint64_t a1)
{
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[3] = "(";
    void v4[4] = &unk_1004DBFC8;
    v4[5] = &unk_1004DBFE0;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 6LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t type metadata accessor for SDAirDropProgressReportingFactory()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary33SDAirDropProgressReportingFactory);
}

uint64_t SFAirDropReceive.Failure.legacyFailureReason.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SFAirDropReceive.Failure(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for SFAirDropReceive.Failure.unsupportedType(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    swift_bridgeObjectRelease(*((const char **)v5 + 1));
    uint64_t v7 = &v5[*(int *)(sub_100183098((uint64_t *)&unk_10064B730) + 48)];
    uint64_t v8 = type metadata accessor for URL(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);
    return 1LL;
  }

  if (v6 == enum case for SFAirDropReceive.Failure.unexpected(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 1LL;
  }

  if (v6 == enum case for SFAirDropReceive.Failure.declined(_:)) {
    return 3LL;
  }
  if (v6 == enum case for SFAirDropReceive.Failure.askDismissed(_:)
    || v6 == enum case for SFAirDropReceive.Failure.senderCancelled(_:))
  {
    return 0LL;
  }

  if (v6 == enum case for SFAirDropReceive.Failure.receiverCancelled(_:)) {
    return 3LL;
  }
  if (v6 == enum case for SFAirDropReceive.Failure.mixedTypes(_:)) {
    return 2LL;
  }
  uint64_t v9 = 1LL;
  if (v6 == enum case for SFAirDropReceive.Failure.missingDownloadDirectory(_:)
    || v6 == enum case for SFAirDropReceive.Failure.missingOwnContact(_:)
    || v6 == enum case for SFAirDropReceive.Failure.streamError(_:)
    || v6 == enum case for SFAirDropReceive.Failure.askNotHandled(_:)
    || v6 == enum case for SFAirDropReceive.Failure.incompleteTransfer(_:)
    || v6 == enum case for SFAirDropReceive.Failure.badRequest(_:))
  {
    return v9;
  }

  if (v6 == enum case for SFAirDropReceive.Failure.moveToAppFailed(_:)) {
    return 3LL;
  }
  if (v6 == enum case for SFAirDropReceive.Failure.insufficientStorage(_:)) {
    return 1LL;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v2, v2);
  __break(1u);
  return result;
}

uint64_t sub_10043F40C(uint64_t a1, char a2)
{
  uint64_t v5 = sub_100183098(&qword_100655B68);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  double v11 = (char *)v19 - v10;
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)v19 - v12;
  id v14 = (os_unfair_lock_s *)(*(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x58LL)) + 16LL);
  os_unfair_lock_lock(v14);
  uint64_t v15 = (uint64_t)v2 + *(void *)((swift_isaMask & *v2) + 0x68LL);
  swift_beginAccess(v15, v20, 0LL, 0LL);
  sub_100441108(v15, (uint64_t)v13);
  uint64_t v16 = sub_100183098(&qword_100655B70);
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v11, 1LL, 1LL, v16);
  swift_beginAccess(v15, v19, 33LL, 0LL);
  sub_100441040((uint64_t)v11, v15);
  swift_endAccess(v19);
  os_unfair_lock_unlock(v14);
  sub_100441108((uint64_t)v13, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1LL, v16) == 1)
  {
    sub_100441150((uint64_t)v13);
    return sub_100441150((uint64_t)v8);
  }

  else
  {
    if ((a2 & 1) != 0)
    {
      v19[0] = a1;
      swift_errorRetain(a1);
      CheckedContinuation.resume(throwing:)(v19, v16);
    }

    else
    {
      LOBYTE(v19[0]) = a1;
      CheckedContinuation.resume(returning:)(v19, v16);
    }

    sub_100441150((uint64_t)v13);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v8, v16);
  }

void sub_10043F608( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, const char *a6, void *a7, const char *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  id v82 = a7;
  uint64_t v83 = (char *)a8;
  id v81 = a5;
  uint64_t v16 = sub_100183098(&qword_100655B68);
  __chkstk_darwin(v16);
  NSString v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = (os_unfair_lock_s *)(*(void *)((char *)a2 + *(void *)((swift_isaMask & *a2) + 0x58LL)) + 16LL);
  os_unfair_lock_lock(v19);
  uint64_t v20 = sub_100183098(&qword_100655B70);
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v18, a1, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0LL, 1LL, v20);
  uint64_t v22 = (uint64_t)a2 + *(void *)((swift_isaMask & *a2) + 0x68LL);
  swift_beginAccess(v22, &aBlock, 33LL, 0LL);
  sub_100441040((uint64_t)v18, v22);
  swift_endAccess(&aBlock);
  os_unfair_lock_unlock(v19);
  uint64_t v23 = swift_allocObject(&unk_1005E2098, 32LL, 7LL);
  *(void *)(v23 + 16) = a2;
  *(void *)(v23 + 24) = a3;
  v87[3] = (const char *)sub_1004410AC;
  uint64_t v88 = v23;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  v87[0] = (const char *)1107296256;
  v87[1] = (const char *)sub_10021D100;
  v87[2] = (const char *)&unk_1005E20B0;
  char v24 = _Block_copy(&aBlock);
  uint64_t v25 = (void *)objc_opt_self(&OBJC_CLASS___BSActionResponder);
  double v26 = a2;
  id v27 = [v25 responderWithHandler:v24];
  _Block_release(v24);
  swift_release(v88);
  if (!a4)
  {
    id v28 = objc_allocWithZone(&OBJC_CLASS___SBSRemoteAlertDefinition);
    *(void *)&double v29 = swift_bridgeObjectRetain(a6).n128_u64[0];
    unint64_t v30 = v83;
    swift_bridgeObjectRetain(v83, v29);
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a6);
    NSString v32 = String._bridgeToObjectiveC()();
    id v33 = objc_msgSend( v28,  "initWithServiceName:viewControllerClassName:",  v31,  v32,  swift_bridgeObjectRelease(v30).n128_f64[0]);

    id v34 = [objc_allocWithZone(SBSRemoteAlertConfigurationContext) init];
    if (a9)
    {
      NSData v36 = (const char *)sub_100267518(a9);
      v37.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      *(void *)&double v35 = swift_bridgeObjectRelease(v36).n128_u64[0];
    }

    else
    {
      v37.super.Class isa = 0LL;
    }

    objc_msgSend(v34, "setUserInfo:", v37.super.isa, v35);

    id v38 = [objc_allocWithZone(BSMutableSettings) init];
    [v38 setFlag:1 forSetting:a10];
    id v39 = [objc_allocWithZone(BSAction) initWithInfo:v38 responder:v27];
    uint64_t v40 = sub_100183098(&qword_100650450);
    uint64_t inited = swift_initStackObject(v40, v85);
    *(_OWORD *)(inited + 16) = xmmword_1004D0130;
    *(void *)(inited + 32) = v39;
    uint64_t aBlock = inited;
    specialized Array._endMutation()(inited);
    unint64_t v42 = (const char *)aBlock;
    if ((unint64_t)aBlock >> 62)
    {
      if (aBlock < 0) {
        uint64_t v47 = aBlock;
      }
      else {
        uint64_t v47 = aBlock & 0xFFFFFFFFFFFFFF8LL;
      }
      id v48 = v39;
      swift_bridgeObjectRetain(v42);
      uint64_t v49 = _CocoaArrayWrapper.endIndex.getter(v47);
      swift_bridgeObjectRelease(v42);
      if (v49) {
        goto LABEL_7;
      }
    }

    else
    {
      uint64_t v43 = *(void *)((aBlock & 0xFFFFFFFFFFFFF8LL) + 0x10);
      id v44 = v39;
      if (v43)
      {
LABEL_7:
        sub_1001DFAEC((uint64_t)v42);
        uint64_t v46 = v45;
        goto LABEL_13;
      }
    }

    uint64_t v46 = (const char *)&_swiftEmptySetSingleton;
LABEL_13:
    swift_bridgeObjectRelease(v42);
    sub_1004410CC();
    sub_100183F14( &qword_100655B78,  (uint64_t (*)(uint64_t))sub_1004410CC,  (uint64_t)&protocol conformance descriptor for NSObject);
    Class isa = Set._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v34, "setActions:", isa, swift_bridgeObjectRelease(v46).n128_f64[0]);

    if (qword_1006441A0 != -1) {
      swift_once(&qword_1006441A0, sub_100325E78);
    }
    uint64_t v83 = (char *)v39;
    uint64_t v51 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v51, (uint64_t)qword_10064EE30);
    id v52 = v33;
    id v53 = v34;
    id v54 = v52;
    id v55 = v53;
    uint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
    os_log_type_t v57 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v56, v57))
    {
      Swift::String v78 = v26;
      id v81 = v38;
      id v82 = v27;
      uint64_t v58 = swift_slowAlloc(22LL, -1LL);
      uint64_t v59 = (void *)swift_slowAlloc(8LL, -1LL);
      uint64_t v80 = swift_slowAlloc(32LL, -1LL);
      uint64_t v84 = v80;
      *(_DWORD *)uint64_t v58 = 138412546;
      uint64_t aBlock = (uint64_t)v54;
      id v60 = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v87, v58 + 4, v58 + 12);
      uint64_t v79 = v59;
      *uint64_t v59 = v54;

      *(_WORD *)(v58 + 12) = 2080;
      id v61 = [v55 userInfo];
      if (v61)
      {
        uint64_t v62 = v61;
        uint64_t v63 = (const char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v61,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

        swift_bridgeObjectRetain(v63);
        uint64_t v65 = Dictionary.description.getter( v64,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
        double v67 = v66;
        swift_bridgeObjectRelease_n(v63, 2LL);
      }

      else
      {
        uint64_t aBlock = 0LL;
        v87[0] = (const char *)0xE000000000000000LL;
        _StringGuts.grow(_:)(17LL);
        swift_bridgeObjectRelease(v87[0]);
        double v67 = (const char *)0x8000000100510040LL;
        uint64_t v65 = 0xD00000000000002BLL;
      }

      double v26 = v78;
      uint64_t aBlock = sub_10018CDB4(v65, (unint64_t)v67, &v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v87, v58 + 14, v58 + 22);

      swift_bridgeObjectRelease(v67);
      _os_log_impl( (void *)&_mh_execute_header,  v56,  v57,  "SDAirDropRemoteViewController activating with definition: %@ and userInfo: %s",  (uint8_t *)v58,  0x16u);
      uint64_t v68 = sub_100183098(&qword_1006454E0);
      unint64_t v69 = v79;
      swift_arrayDestroy(v79, 1LL, v68);
      swift_slowDealloc(v69, -1LL, -1LL);
      uint64_t v70 = v80;
      swift_arrayDestroy(v80, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v70, -1LL, -1LL);
      swift_slowDealloc(v58, -1LL, -1LL);

      id v38 = v81;
      id v27 = v82;
    }

    else
    {
    }

    id v71 = [(id)objc_opt_self(SBSRemoteAlertHandle) newHandleWithDefinition:v54 configurationContext:v55];
    uint64_t v72 = *(void *)((swift_isaMask & *v26) + 0x60LL);
    unint64_t v73 = *(void **)((char *)v26 + v72);
    *(void *)((char *)v26 + v72) = v71;

    uint64_t v74 = *(void **)((char *)v26 + v72);
    if (!v74) {
      goto LABEL_27;
    }
    [v74 registerObserver:v26];
    uint64_t v75 = *(void **)((char *)v26 + v72);
    if (a11)
    {
      if (!v75)
      {
LABEL_27:

        id v27 = v38;
        goto LABEL_28;
      }

      [v75 registerObserver:a11];
      uint64_t v75 = *(void **)((char *)v26 + v72);
    }

    if (v75)
    {
      id v76 = v75;
      [v76 activateWithContext:0];
    }

    goto LABEL_27;
  }

id sub_10043FDAC(void *a1, void *a2, uint64_t a3)
{
  if (qword_1006441A0 != -1) {
    swift_once(&qword_1006441A0, sub_100325E78);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v6, (uint64_t)qword_10064EE30);
  id v7 = a1;
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v21 = a2;
    uint64_t v10 = a3;
    double v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v12 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)double v11 = 138412290;
    id v22 = v7;
    id v13 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v11 + 4, v11 + 12);
    *uint64_t v12 = v7;

    a3 = v10;
    a2 = v21;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "SDAirDropRemoteViewController received response: %@", v11, 0xCu);
    uint64_t v14 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v12, 1LL, v14);
    swift_slowDealloc(v12, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  else
  {
  }

  id v15 = objc_msgSend(v7, "error", v21, v22);
  if (v15)
  {
    uint64_t v16 = (uint64_t)v15;
    id v17 = v15;
    sub_10043F40C(v16, 1);
  }

  else
  {
    id v18 = [v7 info];
    if (v18)
    {
      uint64_t v19 = v18;
      sub_10043F40C([v18 BOOLForSetting:a3], 0);
    }

    else
    {
      sub_10043F40C(0LL, 0);
    }
  }

  id result = *(id *)((char *)a2 + *(void *)((swift_isaMask & *a2) + 0x60LL));
  if (result) {
    return [result invalidate];
  }
  return result;
}

uint64_t sub_10044001C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100655B10);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100655B10);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1004400AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  double v11 = (uint64_t (*)(uint64_t))((char *)&dword_100655B50 + dword_100655B50);
  os_log_type_t v9 = (void *)swift_task_alloc(unk_100655B54);
  v7[6] = v9;
  *os_log_type_t v9 = v7;
  v9[1] = sub_100440110;
  return v11(a5);
}

uint64_t sub_100440110(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 48);
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    uint64_t v6 = sub_1004401C0;
  }

  else
  {
    *(_BYTE *)(v4 + 64) = a1 & 1;
    uint64_t v6 = sub_100440188;
  }

  return swift_task_switch(v6, 0LL, 0LL);
}

uint64_t sub_100440188()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004401C0()
{
  if (qword_1006443E8 != -1) {
    swift_once(&qword_1006443E8, sub_10044001C);
  }
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_100655B10);
  swift_errorRetain(v1);
  uint64_t v3 = swift_errorRetain(v1);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.error.getter(v4);
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 56);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = swift_slowAlloc(32LL, -1LL);
    uint64_t v17 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    *(void *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    uint64_t v10 = sub_100183098(&qword_100645710);
    uint64_t v11 = String.init<A>(describing:)(v0 + 16, v10);
    id v13 = (const char *)v12;
    *(void *)(v0 + 24) = sub_10018CDB4(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v13, v17);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Move to App Share Sheet failed {error: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 56));
    swift_errorRelease(v7);
  }

  uint64_t v14 = *(void *)(v0 + 56);
  id v15 = *(void (**)(void, uint64_t))(v0 + 32);
  swift_errorRetain(v14);
  v15(0LL, v14);
  swift_errorRelease(v14);
  swift_errorRelease(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100440518(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)(a2);
  }
  else {
    uint64_t v5 = 0LL;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

uint64_t type metadata accessor for SDAirDropMoveToAppShareSheet()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary28SDAirDropMoveToAppShareSheet);
}

uint64_t sub_1004405CC(uint64_t a1)
{
  v1[14] = a1;
  uint64_t v2 = type metadata accessor for SFMoveToAppShareSheetSettings(0LL);
  v1[15] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[16] = v3;
  v1[17] = swift_task_alloc((*(void *)(v3 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for URL(0LL);
  v1[18] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v1[19] = v5;
  v1[20] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098((uint64_t *)&unk_100645130);
  v1[21] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1004406A4, 0LL, 0LL);
}

uint64_t sub_1004406A4()
{
  uint64_t v1 = v0[14];
  uint64_t v84 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(v1 + 16);
  id v81 = (const char **)(v0 + 14);
  uint64_t v3 = v0[19];
  if (v2)
  {
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    id v82 = *(id *)(v3 + 72);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16);
    __n128 v6 = swift_bridgeObjectRetain((const char *)v1);
    while (1)
    {
      uint64_t v8 = v0[21];
      uint64_t v9 = v0[18];
      v5(v8, v4, v9, v6);
      uint64_t v10 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
      v10(v8, 0LL, 1LL, v9);
      uint64_t v12 = v0[20];
      uint64_t v11 = v0[21];
      id v13 = v0;
      uint64_t v14 = v0[18];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v12, v11, v14);
      URL._bridgeToObjectiveC()(v15);
      uint64_t v17 = v16;
      id v18 =  [(id)objc_opt_self(UISUISecurityScopedResource) scopedResourceWithFileURL:v16 allowedAccess:2];

      uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v12, v14);
      if (v18)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
        unint64_t v21 = *(void *)((v84 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v20 = *(void *)((v84 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v21 >= v20 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1LL);
        }
        uint64_t v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v18);
        specialized Array._endMutation()(v7);
      }

      v4 += (uint64_t)v82;
      --v2;
      uint64_t v0 = v13;
      if (!v2) {
        goto LABEL_10;
      }
    }
  }

  else
  {
    uint64_t v10 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
    __n128 v6 = swift_bridgeObjectRetain((const char *)v1);
LABEL_10:
    ((void (*)(void, uint64_t, uint64_t, void, __n128))v10)(v0[21], 1LL, 1LL, v0[18], v6);
  }

  *(void *)&double v22 = swift_bridgeObjectRelease(*v81).n128_u64[0];
  uint64_t v23 = v84;
  if ((unint64_t)v84 >> 62)
  {
    if (v84 < 0) {
      unint64_t v41 = v84;
    }
    else {
      unint64_t v41 = v84 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain((const char *)v84, v22);
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter(v41);
    uint64_t v80 = v0;
    if (v24) {
      goto LABEL_13;
    }
LABEL_30:
    id v27 = (const char *)_swiftEmptyArrayStorage;
    goto LABEL_31;
  }

  uint64_t v24 = *(void *)((v84 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain((const char *)v84, v22);
  uint64_t v80 = v0;
  if (!v24) {
    goto LABEL_30;
  }
LABEL_13:
  id v83 = (id)objc_opt_self(&OBJC_CLASS___NSKeyedArchiver);
  if (v24 < 1)
  {
    __break(1u);
LABEL_39:
    swift_once(&qword_1006443E8, sub_10044001C);
    goto LABEL_34;
  }

  uint64_t v25 = 0LL;
  double v26 = (id *)(v81 - 2);
  id v27 = (const char *)_swiftEmptyArrayStorage;
  do
  {
    if ((v23 & 0xC000000000000001LL) != 0) {
      id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v23);
    }
    else {
      id v31 = *(id *)(v23 + 8 * v25 + 32);
    }
    NSString v32 = v31;
    id *v26 = 0LL;
    id v33 = [v83 archivedDataWithRootObject:v31 requiringSecureCoding:1 error:v26];
    id v34 = *v26;
    if (v33)
    {
      uint64_t v35 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v33);
      uint64_t v37 = v36;

      if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0) {
        id v27 = (const char *)sub_10018C8E8(0LL, *((void *)v27 + 2) + 1LL, 1, (uint64_t)v27);
      }
      unint64_t v39 = *((void *)v27 + 2);
      unint64_t v38 = *((void *)v27 + 3);
      if (v39 >= v38 >> 1) {
        id v27 = (const char *)sub_10018C8E8((void *)(v38 > 1), v39 + 1, 1, (uint64_t)v27);
      }
      *((void *)v27 + 2) = v39 + 1;
      uint64_t v40 = &v27[16 * v39];
      *((void *)v40 + 4) = v35;
      *((void *)v40 + 5) = v37;
    }

    else
    {
      id v28 = v34;
      uint64_t v29 = _convertNSErrorToError(_:)(v34);

      swift_willThrow(v30);
      swift_errorRelease(v29);
    }

    ++v25;
  }

  while (v24 != v25);
LABEL_31:
  swift_bridgeObjectRelease_n(v23, 2LL);
  if (*((void *)v27 + 2))
  {
    uint64_t v43 = v80[16];
    uint64_t v42 = v80[17];
    uint64_t v44 = v80[15];
    uint64_t v45 = *(uint64_t (**)(uint64_t, void, uint64_t))(v43 + 104);
    uint64_t v46 = v45(v42, enum case for SFMoveToAppShareSheetSettings.reply(_:), v44);
    uint64_t v47 = SFMoveToAppShareSheetSettings.rawValue.getter(v46);
    id v48 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v48(v42, v44);
    uint64_t v49 = v45(v42, enum case for SFMoveToAppShareSheetSettings.shareSheetSucceeded(_:), v44);
    uint64_t v50 = SFMoveToAppShareSheetSettings.rawValue.getter(v49);
    v48(v42, v44);
    uint64_t v51 = sub_100183098(&qword_1006555B8);
    uint64_t inited = swift_initStackObject(v51, v80 + 2);
    *(_OWORD *)(inited + 16) = xmmword_1004CDCA0;
    *(void *)(inited + 32) = static SFMoveToAppShareSheetSettings.encodedFiles.getter();
    *(void *)(inited + 40) = v53;
    *(void *)(inited + 72) = sub_100183098(&qword_100655B58);
    *(void *)(inited + 48) = v27;
    unint64_t v54 = sub_10039153C(inited);
    v80[22] = v54;
    id v55 = [objc_allocWithZone((Class)sub_100183098(&qword_100655B60)) init];
    v80[23] = v55;
    uint64_t v56 = swift_task_alloc(96LL);
    v80[24] = v56;
    *(void *)(v56 + 16) = v55;
    *(void *)(v56 + 24) = v50;
    *(_OWORD *)(v56 + 32) = xmmword_1004DC060;
    *(void *)(v56 + 48) = 0x800000010050FF90LL;
    *(void *)(v56 + 56) = 0xD000000000000024LL;
    *(void *)(v56 + 64) = 0x800000010050FF60LL;
    *(void *)(v56 + 72) = v54;
    *(void *)(v56 + 80) = v47;
    *(void *)(v56 + 88) = 0LL;
    os_log_type_t v57 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v80[25] = v57;
    uint64_t v58 = sub_100183098(&qword_10064A730);
    *os_log_type_t v57 = v80;
    v57[1] = sub_100440E54;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)( v80 + 27,  0LL,  0LL,  0xD00000000000006ALL,  0x800000010050FFB0LL,  sub_100441004,  v56,  v58);
  }

  swift_bridgeObjectRelease(v27);
  if (qword_1006443E8 != -1) {
    goto LABEL_39;
  }
LABEL_34:
  id v60 = *v81;
  uint64_t v61 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v61, (uint64_t)qword_100655B10);
  uint64_t v62 = swift_bridgeObjectRetain_n(v60, 2LL);
  uint64_t v63 = (os_log_s *)Logger.logObject.getter(v62);
  os_log_type_t v64 = static os_log_type_t.error.getter(v63);
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v65 = v80;
    uint64_t v66 = v80[18];
    double v67 = (const char *)v80[14];
    uint64_t v68 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    unint64_t v69 = (const char *)swift_slowAlloc(32LL, -1LL);
    uint64_t v84 = (uint64_t)v69;
    *(_DWORD *)uint64_t v68 = 136315138;
    swift_bridgeObjectRetain(v67);
    uint64_t v71 = Array.description.getter(v70, v66);
    unint64_t v73 = v72;
    swift_bridgeObjectRelease(v67);
    v80[13] = sub_10018CDB4(v71, (unint64_t)v73, &v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v81 - 1, v81, v68 + 4, v68 + 12);
    swift_bridgeObjectRelease(v73);
    swift_bridgeObjectRelease_n(v67, 2LL);
    _os_log_impl( (void *)&_mh_execute_header,  v63,  v64,  "Could not create encoded array of security scoped resources for files %s",  v68,  0xCu);
    swift_arrayDestroy(v69, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v69, -1LL, -1LL);
    swift_slowDealloc(v68, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(*v81, 2LL);

    uint64_t v65 = v80;
  }

  uint64_t v74 = type metadata accessor for SFAirDropReceive.Failure(0LL);
  uint64_t v75 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  swift_allocError(v74, v75, 0LL, 0LL);
  uint64_t v77 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v74 - 8) + 104LL))( v76,  enum case for SFAirDropReceive.Failure.moveToAppFailed(_:),  v74);
  swift_willThrow(v77);
  uint64_t v78 = v65[20];
  uint64_t v79 = v65[17];
  swift_task_dealloc(v65[21]);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  return ((uint64_t (*)(void))v65[1])(0LL);
}

uint64_t sub_100440E54()
{
  uint64_t v2 = *(void *)(*v1 + 200);
  uint64_t v3 = *v1;
  *(void *)(v3 + 208) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    return swift_task_switch(sub_100440F6C, 0LL, 0LL);
  }
  __n128 v6 = *(void **)(v3 + 184);
  uint64_t v5 = *(void *)(v3 + 192);
  uint64_t v7 = *(void *)(v3 + 168);
  uint64_t v8 = *(void *)(v3 + 160);
  uint64_t v9 = *(void *)(v3 + 136);
  swift_bridgeObjectRelease(*(const char **)(v3 + 176));

  swift_task_dealloc(v5);
  LOBYTE(v5) = *(_BYTE *)(v3 + 216);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(uint64_t))(v3 + 8))(v5 & 1);
}

uint64_t sub_100440F6C()
{
  uint64_t v1 = *(void **)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 176);
  swift_task_dealloc(*(void *)(v0 + 192));
  swift_bridgeObjectRelease(v2);

  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 136);
  swift_task_dealloc(*(void *)(v0 + 168));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))(0LL);
}

void sub_100441004(uint64_t a1)
{
}

uint64_t sub_100441040(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100655B68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100441088()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

id sub_1004410AC(void *a1)
{
  return sub_10043FDAC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1004410B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004410C4(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_1004410CC()
{
  unint64_t result = qword_100646C40;
  if (!qword_100646C40)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___BSAction);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100646C40);
  }

  return result;
}

uint64_t sub_100441108(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100655B68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100441150(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100655B68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_100441190()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1004411B4(char a1, uint64_t a2)
{
}

uint64_t sub_1004411BC()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_1004411F8()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = swift_task_alloc(dword_100655B84);
  __int128 v4 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1001943E8;
  *(_OWORD *)(v3 + 32) = v4;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)&dword_100655B50 + dword_100655B50);
  uint64_t v5 = (uint64_t *)swift_task_alloc(unk_100655B54);
  *(void *)(v3 + 48) = v5;
  uint64_t *v5 = v3;
  v5[1] = (uint64_t)sub_100440110;
  return v7(v2);
}

uint64_t type metadata accessor for SDAirDropContentHandlerProfiles()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary31SDAirDropContentHandlerProfiles);
}

uint64_t sub_1004412A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerProfiles();
  uint64_t result = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(result + 16) = 0LL;
  *a1 = result;
  return result;
}

void sub_1004412E0(uint64_t a1, char a2)
{
  uint64_t v3 = SFAirDropReceive.AskRequest.files.getter(a1);
  unint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  uint64_t v5 = sub_100183098((uint64_t *)&unk_100650440);
  uint64_t inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + 16) = xmmword_1004CDCA0;
  *(void *)(inited + 32) = 0x454C49464F5250LL;
  uint64_t v7 = inited + 32;
  *(void *)(inited + 40) = 0xE700000000000000LL;
  *(void *)(inited + 48) = v4;
  *(void *)&double v8 = swift_bridgeObjectRetain((const char *)0xE700000000000000LL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v8);
  v9._countAndFlagsBits = 95LL;
  v9._object = (void *)0xE100000000000000LL;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x454C49464F5250LL;
  v10._object = (void *)0xE700000000000000LL;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0xE700000000000000LL);
  if (v4 > 1)
  {
    v11._countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000LL;
    String.append(_:)(v11);
  }

  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v12._countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v12);
  }

  v13._countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000LL;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  uint64_t v14 = *(void *)(inited + 16);
  uint64_t v15 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(v7, v14, v15);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL);
  id v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    unint64_t v21 = v20;

    uint64_t v22 = sub_100183098(&qword_1006483E0);
    uint64_t v23 = swift_allocObject(v22, 72LL, 7LL);
    *(_OWORD *)(v23 + 16) = xmmword_1004CDCA0;
    *(void *)(v23 + 56) = &type metadata for Int;
    *(void *)(v23 + 64) = &protocol witness table for Int;
    *(void *)(v23 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(void *)&double v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }

  else
  {
    __break(1u);
  }

uint64_t type metadata accessor for SDAirDropContentHandleriTunesStoreLinks()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary39SDAirDropContentHandleriTunesStoreLinks);
}

uint64_t sub_100441544@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandleriTunesStoreLinks();
  uint64_t result = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(result + 16) = 0LL;
  *a1 = result;
  return result;
}

uint64_t sub_10044157C(uint64_t a1, int a2)
{
  LODWORD(v2) = a2;
  uint64_t v3 = sub_100183098((uint64_t *)&unk_100645130);
  uint64_t v4 = __chkstk_darwin(v3);
  __n128 v6 = &v85[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v4);
  double v8 = &v85[-v7];
  uint64_t v9 = sub_100183098(&qword_100645128);
  __chkstk_darwin(v9);
  Swift::String v11 = &v85[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v12 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  NSString v16 = &v85[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = &v85[-v18];
  uint64_t v20 = SFAirDropReceive.AskRequest.senderDisplayName.getter(v17);
  uint64_t v87 = v21;
  SFAirDropReceive.AskRequest.itemsDescriptionAdvanced.getter(v22);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12) == 1)
  {
    sub_100187100((uint64_t)v11, &qword_100645128);
    double v24 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v23);
    sub_10028CA78((uint64_t)v24, (uint64_t)v6);
    swift_bridgeObjectRelease(v24);
    uint64_t v25 = type metadata accessor for URL(0LL);
    uint64_t v26 = *(void *)(v25 - 8);
    id v28 = 0LL;
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v26 + 48))(v6, 1LL, v25) != 1)
    {
      URL._bridgeToObjectiveC()(v27);
      id v28 = v29;
      (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v6, v25);
    }

    unint64_t v30 = SFiTunesStoreLinkType(v28);

    if (v30 > 5)
    {
LABEL_15:
      uint64_t v88 = 0x545F4E5245444F4DLL;
      unint64_t v89 = 0xEF524546534E4152LL;
      swift_bridgeObjectRetain("ITUNES_STORE_LINK_RINGTONE");
      v46._countAndFlagsBits = 95LL;
      v46._object = (void *)0xE100000000000000LL;
      String.append(_:)(v46);
      v47._countAndFlagsBits = 0xD000000000000011LL;
      v47._object = "ITUNES_STORE_LINK_RINGTONE";
      String.append(_:)(v47);
      swift_bridgeObjectRelease("ITUNES_STORE_LINK_RINGTONE");
      if ((v2 & 1) != 0)
      {
        v48._countAndFlagsBits = 0x4C4154495041435FLL;
        v48._object = (void *)0xEC00000044455A49LL;
        String.append(_:)(v48);
      }

      v49._countAndFlagsBits = 0x545845545FLL;
      v49._object = (void *)0xE500000000000000LL;
      String.append(_:)(v49);
      uint64_t v37 = (const char *)v89;
      unint64_t v38 = &qword_1005D0DB0;
      goto LABEL_33;
    }
  }

  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 32))(v19, v11, v12);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16))(v16, v19, v12);
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v13 + 88))(v16, v12) == enum case for SFAirDropReceive.AskRequest.AdvancedItemsDescription.itunesStoreLink(_:))
    {
      (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v19, v12);
      (*(void (**)(_BYTE *, uint64_t))(v13 + 96))(v16, v12);
      unint64_t v30 = *((void *)v16 + 2);
      *(void *)&double v31 = swift_bridgeObjectRelease((const char *)*((void *)v16 + 1)).n128_u64[0];
    }

    else
    {
      int v86 = v2;
      uint64_t v2 = v20;
      unint64_t v39 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v32);
      sub_10028CA78((uint64_t)v39, (uint64_t)v8);
      swift_bridgeObjectRelease(v39);
      uint64_t v40 = type metadata accessor for URL(0LL);
      uint64_t v41 = *(void *)(v40 - 8);
      uint64_t v43 = 0LL;
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v41 + 48))(v8, 1LL, v40) != 1)
      {
        URL._bridgeToObjectiveC()(v42);
        uint64_t v43 = v44;
        (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v8, v40);
      }

      unint64_t v30 = SFiTunesStoreLinkType(v43);

      uint64_t v45 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
      v45(v19, v12);
      v45(v16, v12);
      uint64_t v20 = v2;
      LOBYTE(v2) = v86;
      if (v30 > 5) {
        goto LABEL_15;
      }
    }
  }

  switch(v30)
  {
    case 0uLL:
      uint64_t v88 = 0x545F4E5245444F4DLL;
      unint64_t v89 = 0xEF524546534E4152LL;
      swift_bridgeObjectRetain("ITUNES_STORE_LINK_RINGTONE", v31);
      v33._countAndFlagsBits = 95LL;
      v33._object = (void *)0xE100000000000000LL;
      String.append(_:)(v33);
      v34._countAndFlagsBits = 0xD000000000000011LL;
      v34._object = "ITUNES_STORE_LINK_RINGTONE";
      String.append(_:)(v34);
      swift_bridgeObjectRelease("ITUNES_STORE_LINK_RINGTONE");
      if ((v2 & 1) != 0)
      {
        v35._countAndFlagsBits = 0x4C4154495041435FLL;
        v35._object = (void *)0xEC00000044455A49LL;
        String.append(_:)(v35);
      }

      v36._countAndFlagsBits = 0x545845545FLL;
      v36._object = (void *)0xE500000000000000LL;
      String.append(_:)(v36);
      uint64_t v37 = (const char *)v89;
      unint64_t v38 = &qword_1005D0D78;
      break;
    case 1uLL:
      uint64_t v88 = 0x545F4E5245444F4DLL;
      unint64_t v89 = 0xEF524546534E4152LL;
      swift_bridgeObjectRetain("APP_LINK_WITH_TITLE", v31);
      v50._countAndFlagsBits = 95LL;
      v50._object = (void *)0xE100000000000000LL;
      String.append(_:)(v50);
      v51._countAndFlagsBits = 0xD000000000000017LL;
      v51._object = "APP_LINK_WITH_TITLE";
      String.append(_:)(v51);
      swift_bridgeObjectRelease("APP_LINK_WITH_TITLE");
      if ((v2 & 1) != 0)
      {
        v52._countAndFlagsBits = 0x4C4154495041435FLL;
        v52._object = (void *)0xEC00000044455A49LL;
        String.append(_:)(v52);
      }

      v53._countAndFlagsBits = 0x545845545FLL;
      v53._object = (void *)0xE500000000000000LL;
      String.append(_:)(v53);
      uint64_t v37 = (const char *)v89;
      unint64_t v38 = &qword_1005D0C60;
      break;
    case 2uLL:
      uint64_t v88 = 0x545F4E5245444F4DLL;
      unint64_t v89 = 0xEF524546534E4152LL;
      swift_bridgeObjectRetain("ITUNES_STORE_LINK_MUSIC", v31);
      v54._countAndFlagsBits = 95LL;
      v54._object = (void *)0xE100000000000000LL;
      String.append(_:)(v54);
      v55._countAndFlagsBits = 0xD000000000000017LL;
      v55._object = "ITUNES_STORE_LINK_MUSIC";
      String.append(_:)(v55);
      swift_bridgeObjectRelease("ITUNES_STORE_LINK_MUSIC");
      if ((v2 & 1) != 0)
      {
        v56._countAndFlagsBits = 0x4C4154495041435FLL;
        v56._object = (void *)0xEC00000044455A49LL;
        String.append(_:)(v56);
      }

      v57._countAndFlagsBits = 0x545845545FLL;
      v57._object = (void *)0xE500000000000000LL;
      String.append(_:)(v57);
      uint64_t v37 = (const char *)v89;
      unint64_t v38 = &qword_1005D0C98;
      break;
    case 3uLL:
      uint64_t v88 = 0x545F4E5245444F4DLL;
      unint64_t v89 = 0xEF524546534E4152LL;
      swift_bridgeObjectRetain("ITUNES_STORE_LINK_MOVIE", v31);
      v58._countAndFlagsBits = 95LL;
      v58._object = (void *)0xE100000000000000LL;
      String.append(_:)(v58);
      v59._countAndFlagsBits = 0xD000000000000019LL;
      v59._object = "ITUNES_STORE_LINK_MOVIE";
      String.append(_:)(v59);
      swift_bridgeObjectRelease("ITUNES_STORE_LINK_MOVIE");
      if ((v2 & 1) != 0)
      {
        v60._countAndFlagsBits = 0x4C4154495041435FLL;
        v60._object = (void *)0xEC00000044455A49LL;
        String.append(_:)(v60);
      }

      v61._countAndFlagsBits = 0x545845545FLL;
      v61._object = (void *)0xE500000000000000LL;
      String.append(_:)(v61);
      uint64_t v37 = (const char *)v89;
      unint64_t v38 = &qword_1005D0CD0;
      break;
    case 4uLL:
      uint64_t v88 = 0x545F4E5245444F4DLL;
      unint64_t v89 = 0xEF524546534E4152LL;
      swift_bridgeObjectRetain("ITUNES_STORE_LINK_TV_SHOW", v31);
      v62._countAndFlagsBits = 95LL;
      v62._object = (void *)0xE100000000000000LL;
      String.append(_:)(v62);
      v63._countAndFlagsBits = 0xD00000000000001BLL;
      v63._object = "ITUNES_STORE_LINK_TV_SHOW";
      String.append(_:)(v63);
      swift_bridgeObjectRelease("ITUNES_STORE_LINK_TV_SHOW");
      if ((v2 & 1) != 0)
      {
        v64._countAndFlagsBits = 0x4C4154495041435FLL;
        v64._object = (void *)0xEC00000044455A49LL;
        String.append(_:)(v64);
      }

      v65._countAndFlagsBits = 0x545845545FLL;
      v65._object = (void *)0xE500000000000000LL;
      String.append(_:)(v65);
      uint64_t v37 = (const char *)v89;
      unint64_t v38 = &qword_1005D0D08;
      break;
    case 5uLL:
      uint64_t v88 = 0x545F4E5245444F4DLL;
      unint64_t v89 = 0xEF524546534E4152LL;
      swift_bridgeObjectRetain("ITUNES_STORE_LINK_AUDIOBOOK", v31);
      v66._countAndFlagsBits = 95LL;
      v66._object = (void *)0xE100000000000000LL;
      String.append(_:)(v66);
      v67._countAndFlagsBits = 0xD00000000000001ALL;
      v67._object = "ITUNES_STORE_LINK_AUDIOBOOK";
      String.append(_:)(v67);
      swift_bridgeObjectRelease("ITUNES_STORE_LINK_AUDIOBOOK");
      if ((v2 & 1) != 0)
      {
        v68._countAndFlagsBits = 0x4C4154495041435FLL;
        v68._object = (void *)0xEC00000044455A49LL;
        String.append(_:)(v68);
      }

      v69._countAndFlagsBits = 0x545845545FLL;
      v69._object = (void *)0xE500000000000000LL;
      String.append(_:)(v69);
      uint64_t v37 = (const char *)v89;
      unint64_t v38 = &qword_1005D0D40;
      break;
    default:
      goto LABEL_15;
  }

void sub_100441F10()
{
  uint64_t v2 = v0;
  sub_1001870BC((uint64_t)(v0 + 1), (uint64_t)v49, &qword_1006462D8);
  sub_1001870BC((uint64_t)v49, (uint64_t)v41, &qword_1006462D8);
  *(void *)&__int128 v34 = 0LL;
  *((void *)&v34 + 1) = 0xE000000000000000LL;
  sub_100343B08((uint64_t)v49);
  _StringGuts.grow(_:)(60LL);
  *(void *)&__int128 v40 = 0LL;
  *((void *)&v40 + 1) = 0xE000000000000000LL;
  v3._countAndFlagsBits = 0xD000000000000039LL;
  v3._object = (void *)0x8000000100510210LL;
  String.append(_:)(v3);
  __int128 v4 = v0[3];
  __int128 v36 = v0[2];
  __int128 v37 = v4;
  __int128 v38 = v0[4];
  __int16 v39 = *((_WORD *)v0 + 40);
  __int128 v5 = v0[1];
  __int128 v34 = *v0;
  __int128 v35 = v5;
  _print_unlocked<A, B>(_:_:)( &v34,  &v40,  &_s14descr1005DF7D1C10AskRequestV8FileInfoVN,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v6._countAndFlagsBits = 125LL;
  v6._object = (void *)0xE100000000000000LL;
  String.append(_:)(v6);
  __int128 v7 = v40;
  uint64_t v8 = sub_100183098(&qword_1006462D8);
  Optional.tryUnwrap(_:file:line:)(v7, *((void *)&v7 + 1), 0xD00000000000005FLL, 0x8000000100510250LL, 357LL, v8);
  sub_1004478F8((uint64_t)v49);
  swift_bridgeObjectRelease(*((const char **)&v7 + 1));
  if (!v1)
  {
    uint64_t v9 = v43;
    uint64_t v50 = v42;
    sub_1001870BC((uint64_t)(v0 + 4), (uint64_t)v48, &qword_1006462D8);
    sub_1001870BC((uint64_t)v48, (uint64_t)v41, &qword_1006462D8);
    *(void *)&__int128 v34 = 0LL;
    *((void *)&v34 + 1) = 0xE000000000000000LL;
    sub_100343B08((uint64_t)v48);
    _StringGuts.grow(_:)(63LL);
    __int128 v40 = v34;
    v10._countAndFlagsBits = 0xD00000000000003CLL;
    v10._object = (void *)0x80000001005102B0LL;
    String.append(_:)(v10);
    __int128 v11 = v0[3];
    __int128 v36 = v0[2];
    __int128 v37 = v11;
    __int128 v38 = v0[4];
    __int16 v39 = *((_WORD *)v0 + 40);
    __int128 v12 = v0[1];
    __int128 v34 = *v0;
    __int128 v35 = v12;
    _print_unlocked<A, B>(_:_:)( &v34,  &v40,  &_s14descr1005DF7D1C10AskRequestV8FileInfoVN,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
    v13._countAndFlagsBits = 125LL;
    v13._object = (void *)0xE100000000000000LL;
    String.append(_:)(v13);
    uint64_t v14 = (const char *)*((void *)&v40 + 1);
    Optional.tryUnwrap(_:file:line:)(v40, *((void *)&v40 + 1), 0xD00000000000005FLL, 0x8000000100510250LL, 358LL, v8);
    sub_1004478F8((uint64_t)v48);
    swift_bridgeObjectRelease(v14);
    uint64_t v31 = v43;
    uint64_t v32 = v42;
    uint64_t v15 = sub_100183098((uint64_t *)&unk_1006540B8);
    uint64_t inited = swift_initStackObject(v15, v33);
    *(_OWORD *)(inited + 16) = xmmword_1004DC140;
    *(void *)&__int128 v34 = kSFOperationFileNameKey;
    id v17 = kSFOperationFileNameKey;
    uint64_t v18 = sub_100183098(&qword_100645400);
    unint64_t v19 = sub_1001914D0();
    AnyHashable.init<A>(_:)((void *)(inited + 32), &v34, v18, v19);
    __int128 v47 = *v2;
    __int128 v20 = v47;
    *(void *)(inited + 96) = &type metadata for String;
    *(_OWORD *)(inited + 72) = v20;
    uint64_t v30 = v9;
    uint64_t v21 = (void *)kSFOperationFileSizeKey;
    *(void *)&__int128 v34 = kSFOperationFileSizeKey;
    sub_100343B08((uint64_t)&v47);
    id v22 = v21;
    AnyHashable.init<A>(_:)((void *)(inited + 104), &v34, v18, v19);
    sub_1001870BC((uint64_t)(v2 + 3), (uint64_t)v46, &qword_100655D68);
    *(void *)(inited + 168) = sub_100183098(&qword_100655D68);
    sub_1001870BC((uint64_t)v46, inited + 144, &qword_100655D68);
    *(void *)&__int128 v34 = kSFOperationFileTypeKey;
    id v23 = kSFOperationFileTypeKey;
    AnyHashable.init<A>(_:)((void *)(inited + 176), &v34, v18, v19);
    *(void *)(inited + 240) = &type metadata for String;
    *(void *)(inited + 216) = v50;
    *(void *)(inited + 224) = v30;
    *(void *)&__int128 v34 = kSFOperationtFileSubTypeKey;
    id v24 = kSFOperationtFileSubTypeKey;
    AnyHashable.init<A>(_:)((void *)(inited + 248), &v34, v18, v19);
    sub_1001870BC((uint64_t)(v2 + 2), (uint64_t)v45, &qword_1006462D8);
    *(void *)(inited + 312) = v8;
    sub_1001870BC((uint64_t)v45, inited + 288, &qword_1006462D8);
    uint64_t v25 = (void *)kSFOperationFileBomPathKey;
    *(void *)&__int128 v34 = kSFOperationFileBomPathKey;
    sub_100343B08((uint64_t)v45);
    id v26 = v25;
    AnyHashable.init<A>(_:)((void *)(inited + 320), &v34, v18, v19);
    *(void *)(inited + 384) = &type metadata for String;
    *(void *)(inited + 360) = v32;
    *(void *)(inited + 368) = v31;
    *(void *)&__int128 v34 = kSFOperationFileIsDirectoryKey;
    id v27 = kSFOperationFileIsDirectoryKey;
    AnyHashable.init<A>(_:)((void *)(inited + 392), &v34, v18, v19);
    char v28 = *((_BYTE *)v2 + 80);
    *(void *)(inited + 456) = &type metadata for Bool;
    *(_BYTE *)(inited + 432) = v28;
    *(void *)&__int128 v34 = kSFOperationConvertMediaFormatsKey;
    id v29 = kSFOperationConvertMediaFormatsKey;
    AnyHashable.init<A>(_:)((void *)(inited + 464), &v34, v18, v19);
    sub_1001870BC((uint64_t)v2 + 81, (uint64_t)&v44, &qword_10064A730);
    *(void *)(inited + 528) = sub_100183098(&qword_10064A730);
    sub_1001870BC((uint64_t)&v44, inited + 504, &qword_10064A730);
    sub_1003913F0(inited);
  }

uint64_t sub_100442448(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for SDAirDropMessage(0LL);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1004424A4, 0LL, 0LL);
}

uint64_t sub_1004424A4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  sub_1001A4B84(v0[2], v2, _s12HelloRequestVMa);
  swift_storeEnumTagMultiPayload(v2, v1, 0LL);
  sub_100443EEC();
  uint64_t v4 = v3;
  v0[6] = v3;
  sub_1004444B0();
  v0[7] = v5;
  v0[8] = v6;
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  uint64_t v9 = v0[3];
  uint64_t v10 = swift_task_alloc(64LL);
  v0[9] = v10;
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v7;
  *(void *)(v10 + 32) = v8;
  *(void *)(v10 + 40) = v4;
  *(_BYTE *)(v10 + 48) = 1;
  __int128 v11 = (uint64_t **)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[10] = (uint64_t)v11;
  *__int128 v11 = v0;
  v11[1] = (uint64_t *)sub_1004425E4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v11,  0LL,  0LL,  0xD000000000000029LL,  0x80000001005074E0LL,  sub_100265F80,  v10,  (char *)&type metadata for () + 8);
}

uint64_t sub_1004425E4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_10044811C;
  }

  else
  {
    swift_task_dealloc(*(void *)(v2 + 72));
    uint64_t v4 = sub_100448114;
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_100442650(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for SDAirDropMessage(0LL);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1004426AC, 0LL, 0LL);
}

uint64_t sub_1004426AC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  sub_1001A4B84(v0[2], v2, _s14descr1005DF7D1C10AskRequestVMa);
  swift_storeEnumTagMultiPayload(v2, v1, 4LL);
  sub_100443EEC();
  uint64_t v4 = v3;
  v0[6] = v3;
  sub_1004444B0();
  v0[7] = v5;
  v0[8] = v6;
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  uint64_t v9 = v0[3];
  uint64_t v10 = swift_task_alloc(64LL);
  v0[9] = v10;
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v7;
  *(void *)(v10 + 32) = v8;
  *(void *)(v10 + 40) = v4;
  *(_BYTE *)(v10 + 48) = 1;
  __int128 v11 = (uint64_t **)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[10] = (uint64_t)v11;
  *__int128 v11 = v0;
  v11[1] = (uint64_t *)sub_1004427EC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v11,  0LL,  0LL,  0xD000000000000029LL,  0x80000001005074E0LL,  sub_100265F80,  v10,  (char *)&type metadata for () + 8);
}

uint64_t sub_1004427EC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_1004428B0;
  }

  else
  {
    swift_task_dealloc(*(void *)(v2 + 72));
    uint64_t v4 = sub_100442858;
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_100442858()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  sub_100189B20(*(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_unknownObjectRelease(v2);
  sub_1001A4BC8(v1, type metadata accessor for SDAirDropMessage);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004428B0()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 40);
  sub_100189B20(*(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_unknownObjectRelease(v2);
  swift_task_dealloc(v1);
  sub_1001A4BC8(v3, type metadata accessor for SDAirDropMessage);
  swift_task_dealloc(*(void *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10044291C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for SDAirDropMessage(0LL);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100442978, 0LL, 0LL);
}

uint64_t sub_100442978()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  sub_1001A4B84(v0[2], v2, _s14descr1005DEB71C15ExchangeRequestVMa);
  swift_storeEnumTagMultiPayload(v2, v1, 8LL);
  sub_100443EEC();
  uint64_t v4 = v3;
  v0[6] = v3;
  sub_1004444B0();
  v0[7] = v5;
  v0[8] = v6;
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  uint64_t v9 = v0[3];
  uint64_t v10 = swift_task_alloc(64LL);
  v0[9] = v10;
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v7;
  *(void *)(v10 + 32) = v8;
  *(void *)(v10 + 40) = v4;
  *(_BYTE *)(v10 + 48) = 1;
  __int128 v11 = (uint64_t **)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[10] = (uint64_t)v11;
  *__int128 v11 = v0;
  v11[1] = (uint64_t *)sub_1004425E4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v11,  0LL,  0LL,  0xD000000000000029LL,  0x80000001005074E0LL,  sub_100265F80,  v10,  (char *)&type metadata for () + 8);
}

uint64_t sub_100442AB8(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for SDAirDropMessage(0LL);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100442B14, 0LL, 0LL);
}

uint64_t sub_100442B14()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  sub_1001A4B84(v0[2], v2, _s14descr1005DD3D1C12ErrorRequestVMa);
  swift_storeEnumTagMultiPayload(v2, v1, 12LL);
  sub_100443EEC();
  uint64_t v4 = v3;
  v0[6] = v3;
  sub_1004444B0();
  v0[7] = v5;
  v0[8] = v6;
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  uint64_t v9 = v0[3];
  uint64_t v10 = swift_task_alloc(64LL);
  v0[9] = v10;
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v7;
  *(void *)(v10 + 32) = v8;
  *(void *)(v10 + 40) = v4;
  *(_BYTE *)(v10 + 48) = 1;
  __int128 v11 = (uint64_t **)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[10] = (uint64_t)v11;
  *__int128 v11 = v0;
  v11[1] = (uint64_t *)sub_1004425E4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v11,  0LL,  0LL,  0xD000000000000029LL,  0x80000001005074E0LL,  sub_100265F80,  v10,  (char *)&type metadata for () + 8);
}

uint64_t sub_100442C54(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  return swift_task_switch(sub_100442C6C, 0LL, 0LL);
}

uint64_t sub_100442C6C()
{
  uint64_t v1 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_100442CF4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 16,  0LL,  0LL,  0xD000000000000015LL,  0x8000000100507510LL,  sub_100265F84,  *(void *)(v0 + 48),  &type metadata for SDNWHTTPResponse);
}

uint64_t sub_100442CF4()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 56LL);
  *(void *)(*(void *)v1 + 64LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_100443074;
  }
  else {
    uint64_t v3 = sub_100442D58;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_100442D58()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(v0 + 32);
  if (v1 >= 3)
  {
    uint64_t v14 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9) {
      uint64_t v14 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    }
    if (v1 == 4) {
      uint64_t v15 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    }
    else {
      uint64_t v15 = v14;
    }
    uint64_t v16 = type metadata accessor for SFAirDropSend.Failure(0LL);
    uint64_t v17 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v16, v17, 0LL, 0LL);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104LL))(v18, *v15, v16);
    swift_willThrow(v19);
    goto LABEL_13;
  }

  uint64_t v4 = *(void *)(v0 + 64);
  sub_10019BA8C(*(void *)(v0 + 24), *(void *)(v0 + 32));
  unint64_t v5 = sub_100444EF4(v3, v2);
  sub_100189B20(v3, v2);
  if (v4)
  {
LABEL_13:
    sub_100189B20(v3, v2);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if (qword_1006443F0 != -1) {
    swift_once(&qword_1006443F0, sub_100446D2C);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = sub_100186DE4(v6, (uint64_t)qword_100655D50);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v21 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v22 = v21;
    _StringGuts.grow(_:)(17LL);
    swift_bridgeObjectRelease(0xE000000000000000LL);
    uint64_t v23 = 0x6572204F4C4C4548LL;
    unint64_t v24 = 0xEF2065736E6F7073LL;
    *(_DWORD *)(v0 + 72) = v5;
    v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for UInt32,  &protocol witness table for UInt32);
    object = v11._object;
    String.append(_:)(v11);
    swift_bridgeObjectRelease(object);
    unint64_t v13 = v24;
    *(void *)(v0 + 40) = sub_10018CDB4(v23, v24, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Received HELLO response {response: %s}", v10, 0xCu);
    swift_arrayDestroy(v21, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);

    sub_100189B20(v3, v2);
  }

  else
  {
    sub_100189B20(v3, v2);
  }

  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v5 & 0xFFFFFFFFFFLL);
}

uint64_t sub_100443074()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100443080(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 152) = a1;
  *(void *)(v2 + 160) = a2;
  return swift_task_switch(sub_100443098, 0LL, 0LL);
}

uint64_t sub_100443098()
{
  unsigned int v1 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 168) = v1;
  void *v1 = v0;
  v1[1] = sub_100443120;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 120,  0LL,  0LL,  0xD000000000000015LL,  0x8000000100507510LL,  sub_100265F84,  *(void *)(v0 + 160),  &type metadata for SDNWHTTPResponse);
}

uint64_t sub_100443120()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 168LL);
  *(void *)(*(void *)v1 + 176LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_1004434DC;
  }
  else {
    uint64_t v3 = sub_100443184;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_100443184()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  unint64_t v2 = *(void *)(v0 + 136);
  if (v1 >= 3)
  {
    uint64_t v22 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9) {
      uint64_t v22 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    }
    if (v1 == 4) {
      uint64_t v23 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    }
    else {
      uint64_t v23 = v22;
    }
    uint64_t v24 = type metadata accessor for SFAirDropSend.Failure(0LL);
    uint64_t v25 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v24, v25, 0LL, 0LL);
    uint64_t v27 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104LL))(v26, *v23, v24);
    swift_willThrow(v27);
    goto LABEL_13;
  }

  uint64_t v4 = *(void *)(v0 + 176);
  sub_10019BA8C(*(void *)(v0 + 128), *(void *)(v0 + 136));
  sub_100445118(v3, v2);
  sub_100189B20(v3, v2);
  if (v4)
  {
LABEL_13:
    sub_100189B20(v3, v2);
    char v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }

  __int128 v5 = *(_OWORD *)&v41[16];
  __int128 v6 = *(_OWORD *)&v41[48];
  *(_OWORD *)(v0 + 80) = *(_OWORD *)&v41[32];
  *(_OWORD *)(v0 + 96) = v6;
  *(void *)(v0 + 112) = *(void *)&v41[64];
  __int128 v7 = v40;
  *(_OWORD *)(v0 + 16) = v39;
  *(_OWORD *)(v0 + 32) = v7;
  *(_OWORD *)(v0 + 48) = *(_OWORD *)v41;
  *(_OWORD *)(v0 + 64) = v5;
  uint64_t v9 = *((void *)&v39 + 1);
  uint64_t v8 = v39;
  uint64_t v34 = *((void *)&v40 + 1);
  uint64_t v10 = v40;
  char v33 = v41[0];
  __int128 v37 = *(_OWORD *)&v41[24];
  __int128 v38 = *(_OWORD *)&v41[8];
  __int128 v35 = *(_OWORD *)&v41[56];
  __int128 v36 = *(_OWORD *)&v41[40];
  if (qword_1006443F0 != -1) {
    swift_once(&qword_1006443F0, sub_100446D2C);
  }
  uint64_t v11 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v11, (uint64_t)qword_100655D50);
  sub_10025FCB0((void *)(v0 + 16));
  __int128 v12 = sub_10025FCB0((void *)(v0 + 16));
  unint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v31 = v40;
    uint64_t v15 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v32 = *((void *)&v39 + 1);
    uint64_t v16 = swift_slowAlloc(32LL, -1LL);
    *(void *)&__int128 v39 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v17 = sub_1003E0AFC();
    unint64_t v19 = v18;
    *(void *)(v0 + 144) = sub_10018CDB4(v17, v18, (uint64_t *)&v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease(v19);
    sub_1001FC264((void *)(v0 + 16));
    sub_1001FC264((void *)(v0 + 16));
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Received ASK response {response: %s}", v15, 0xCu);
    swift_arrayDestroy(v16, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v20 = v16;
    uint64_t v9 = v32;
    swift_slowDealloc(v20, -1LL, -1LL);
    uint64_t v21 = v15;
    uint64_t v10 = v31;
    swift_slowDealloc(v21, -1LL, -1LL);

    sub_100189B20(v3, v2);
  }

  else
  {
    sub_100189B20(v3, v2);
    sub_1001FC264((void *)(v0 + 16));
    sub_1001FC264((void *)(v0 + 16));
  }

  uint64_t v30 = *(void *)(v0 + 152);
  *(void *)uint64_t v30 = v8;
  *(void *)(v30 + 8) = v9;
  *(void *)(v30 + 16) = v10;
  *(void *)(v30 + 24) = v34;
  *(_BYTE *)(v30 + 32) = v33;
  *(_OWORD *)(v30 + 40) = v38;
  *(_OWORD *)(v30 + 56) = v37;
  *(_OWORD *)(v30 + 72) = v36;
  *(_OWORD *)(v30 + 88) = v35;
  char v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_1004434DC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004434E8(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return swift_task_switch(sub_100443500, 0LL, 0LL);
}

uint64_t sub_100443500()
{
  uint64_t v1 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_100443588;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 16,  0LL,  0LL,  0xD000000000000015LL,  0x8000000100507510LL,  sub_100265F84,  *(void *)(v0 + 40),  &type metadata for SDNWHTTPResponse);
}

uint64_t sub_100443588()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48LL);
  *(void *)(*(void *)v1 + 56LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_100448118;
  }
  else {
    uint64_t v3 = sub_1004435EC;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_1004435EC()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  unint64_t v3 = *(void *)(v0 + 32);
  if (v1 >= 3)
  {
    uint64_t v10 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9) {
      uint64_t v10 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    }
    if (v1 == 4) {
      uint64_t v11 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    }
    else {
      uint64_t v11 = v10;
    }
    uint64_t v12 = type metadata accessor for SFAirDropSend.Failure(0LL);
    uint64_t v13 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v12, v13, 0LL, 0LL);
    uint64_t v15 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104LL))(v14, *v11, v12);
    swift_willThrow(v15);
    sub_100189B20(v2, v3);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    if (qword_1006443F0 != -1) {
      swift_once(&qword_1006443F0, sub_100446D2C);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL);
    uint64_t v5 = sub_100186DE4(v4, (uint64_t)qword_100655D50);
    __int128 v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Received UPLOAD response", v8, 2u);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    sub_100189B20(v2, v3);
    return (*(uint64_t (**)(void, unint64_t))(v0 + 8))(0LL, 0xC000000000000000LL);
  }

uint64_t sub_1004437AC(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = _s14descr1005DEB71C16ExchangeResponseVMa(0LL);
  v2[8] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100443804, 0LL, 0LL);
}

uint64_t sub_100443804()
{
  unsigned int v1 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 72) = v1;
  void *v1 = v0;
  v1[1] = sub_10044388C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 16,  0LL,  0LL,  0xD000000000000015LL,  0x8000000100507510LL,  sub_100265F84,  *(void *)(v0 + 56),  &type metadata for SDNWHTTPResponse);
}

uint64_t sub_10044388C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 72LL);
  *(void *)(*(void *)v1 + 8(*(void (**)(void, void))(v0 + 32))(*(unsigned __int8 *)(v0 + 64), 0LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_100443BE8;
  }
  else {
    uint64_t v3 = sub_1004438F0;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_1004438F0()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(v0 + 32);
  if (v1 >= 3)
  {
    uint64_t v17 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9) {
      uint64_t v17 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    }
    if (v1 == 4) {
      unint64_t v18 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    }
    else {
      unint64_t v18 = v17;
    }
    uint64_t v19 = type metadata accessor for SFAirDropSend.Failure(0LL);
    uint64_t v20 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v19, v20, 0LL, 0LL);
    uint64_t v22 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104LL))(v21, *v18, v19);
    swift_willThrow(v22);
    goto LABEL_13;
  }

  uint64_t v4 = *(void *)(v0 + 80);
  sub_10019BA8C(*(void *)(v0 + 24), *(void *)(v0 + 32));
  sub_100445548(v3, v2, _s14descr1005DEB71C16ExchangeResponseVMa, &qword_100651FD8, (uint64_t)&unk_1004D9724);
  sub_100189B20(v3, v2);
  if (v4)
  {
LABEL_13:
    sub_100189B20(v3, v2);
    swift_task_dealloc(*(void *)(v0 + 64));
    uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }

  if (qword_1006443F0 != -1) {
    swift_once(&qword_1006443F0, sub_100446D2C);
  }
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v7, (uint64_t)qword_100655D50);
  uint64_t v8 = sub_1001A4B84(v6, v5, _s14descr1005DEB71C16ExchangeResponseVMa);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = *(void *)(v0 + 64);
  if (v11)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v25 = swift_slowAlloc(32LL, -1LL);
    uint64_t v26 = v25;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v14 = sub_1003C4E7C();
    unint64_t v16 = v15;
    *(void *)(v0 + 40) = sub_10018CDB4(v14, v15, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease(v16);
    sub_1001A4BC8(v12, _s14descr1005DEB71C16ExchangeResponseVMa);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Received EXCHANGE response {response: %s}", v13, 0xCu);
    swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1LL, -1LL);
    swift_slowDealloc(v13, -1LL, -1LL);

    sub_100189B20(v3, v2);
  }

  else
  {
    sub_100189B20(v3, v2);
    sub_1001A4BC8(v12, _s14descr1005DEB71C16ExchangeResponseVMa);
  }

  swift_task_dealloc(*(void *)(v0 + 64));
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_100443BE8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100443C1C(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return swift_task_switch(sub_100443C34, 0LL, 0LL);
}

uint64_t sub_100443C34()
{
  uint64_t v1 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_100443CBC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 16,  0LL,  0LL,  0xD000000000000015LL,  0x8000000100507510LL,  sub_100265F84,  *(void *)(v0 + 40),  &type metadata for SDNWHTTPResponse);
}

uint64_t sub_100443CBC()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48LL);
  *(void *)(*(void *)v1 + 56LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_100443EE0;
  }
  else {
    uint64_t v3 = sub_100443D20;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_100443D20()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  unint64_t v3 = *(void *)(v0 + 32);
  if (v1 >= 3)
  {
    os_log_type_t v10 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9) {
      os_log_type_t v10 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    }
    if (v1 == 4) {
      BOOL v11 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    }
    else {
      BOOL v11 = v10;
    }
    uint64_t v12 = type metadata accessor for SFAirDropSend.Failure(0LL);
    uint64_t v13 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v12, v13, 0LL, 0LL);
    uint64_t v15 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104LL))(v14, *v11, v12);
    swift_willThrow(v15);
    sub_100189B20(v2, v3);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    if (qword_1006443F0 != -1) {
      swift_once(&qword_1006443F0, sub_100446D2C);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL);
    uint64_t v5 = sub_100186DE4(v4, (uint64_t)qword_100655D50);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Received ERROR response", v8, 2u);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    sub_100189B20(v2, v3);
    return (*(uint64_t (**)(void, unint64_t))(v0 + 8))(0LL, 0xC000000000000000LL);
  }

uint64_t sub_100443EE0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100443EEC()
{
  uint64_t v1 = type metadata accessor for SDAirDropMessage(0LL);
  __chkstk_darwin(v1);
  unint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v0, (uint64_t)v3, v4);
  uint64_t v5 = (char *)sub_100443FAC + 4 * byte_1004DC150[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }

nw_content_context *sub_100443FAC()
{
  uint64_t v1 = String.utf8CString.getter(0xD000000000000010LL, 0x80000001005101B0LL);
  swift_bridgeObjectRelease(0x80000001005101B0LL);
  uint64_t v2 = nw_content_context_create((const char *)(v1 + 32));
  swift_release(v1);
  sub_100447128();
  uint64_t v4 = v3;
  nw_content_context_set_metadata_for_protocol(v2, v3);
  swift_unknownObjectRelease(v4);
  return v2;
}

void sub_1004441B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropMessage(0LL);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v1, (uint64_t)v4, v5);
  uint64_t v6 = (char *)sub_100444254 + 4 * byte_1004DC15E[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }

uint64_t sub_100444254()
{
  return v0;
}

void sub_1004444B0()
{
  uint64_t v1 = v0;
  uint64_t v17 = _s14descr1005DD3D1C12ErrorRequestVMa(0LL);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = _s14descr1005DEB71C16ExchangeResponseVMa(0LL);
  __chkstk_darwin(v15);
  unint64_t v18 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v14[0] = _s14descr1005DEB71C15ExchangeRequestVMa(0LL);
  __chkstk_darwin(v14[0]);
  unint64_t v16 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = _s14descr1005D9BD1C13UploadRequestVMa(0LL);
  __chkstk_darwin(v5);
  v14[1] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = _s14descr1005DF7D1C10AskRequestVMa(0LL);
  __chkstk_darwin(v7);
  uint64_t v8 = _s12HelloRequestVMa(0LL);
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for SDAirDropMessage(0LL);
  __chkstk_darwin(v9);
  BOOL v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v1, (uint64_t)v11, v12);
  uint64_t v13 = (char *)sub_1004446B0 + 4 * word_1004DC16C[swift_getEnumCaseMultiPayload(v11, v9)];
  __asm { BR              X10 }

uint64_t sub_1004446B0()
{
  return 0LL;
}

unint64_t sub_100444EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PropertyListDecoder(0LL);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  uint64_t v6 = PropertyListDecoder.init()();
  unint64_t v7 = sub_10039EA50();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(&_s13HelloResponseVN, a1, a2, &_s13HelloResponseVN, v7);
  if (v2)
  {
    swift_release(v6);
    if (qword_1006443F0 != -1) {
      swift_once(&qword_1006443F0, sub_100446D2C);
    }
    uint64_t v8 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v8, (uint64_t)qword_100655D50);
    swift_errorRetain(v2);
    uint64_t v9 = swift_errorRetain(v2);
    uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v11 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v13 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v12 = 138412290;
      swift_errorRetain(v2);
      uint64_t v14 = _swift_stdlib_bridgeErrorToNSError(v2);
      uint64_t v18 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4, v12 + 12);
      *uint64_t v13 = v14;
      swift_errorRelease(v2);
      swift_errorRelease(v2);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error decoding SFAirDropMessage %@", v12, 0xCu);
      uint64_t v15 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v13, 1LL, v15);
      swift_slowDealloc(v13, -1LL, -1LL);
      swift_slowDealloc(v12, -1LL, -1LL);
    }

    else
    {
      swift_errorRelease(v2);
      swift_errorRelease(v2);
    }

    return swift_willThrow(v17);
  }

  else
  {
    swift_release(v6);
    return v19 | ((unint64_t)v20 << 32);
  }

uint64_t sub_100445118(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PropertyListDecoder(0LL);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  uint64_t v6 = PropertyListDecoder.init()();
  unint64_t v7 = sub_10039E874();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)( &_s14descr1005DF7D1C11AskResponseVN,  a1,  a2,  &_s14descr1005DF7D1C11AskResponseVN,  v7);
  if (!v2) {
    return swift_release(v6);
  }
  swift_release(v6);
  if (qword_1006443F0 != -1) {
    swift_once(&qword_1006443F0, sub_100446D2C);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v8, (uint64_t)qword_100655D50);
  swift_errorRetain(v2);
  uint64_t v9 = swift_errorRetain(v2);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v12 = 138412290;
    swift_errorRetain(v2);
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError(v2);
    uint64_t v18 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4, v12 + 12);
    *uint64_t v13 = v14;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error decoding SFAirDropMessage %@", v12, 0xCu);
    uint64_t v15 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v13, 1LL, v15);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  return swift_willThrow(v17);
}

uint64_t sub_100445330(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PropertyListDecoder(0LL);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  uint64_t v6 = PropertyListDecoder.init()();
  unint64_t v7 = sub_10039E9C8();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)( &_s14descr1005D8CD9C15DiscoverRequestVN,  a1,  a2,  &_s14descr1005D8CD9C15DiscoverRequestVN,  v7);
  if (!v2) {
    return swift_release(v6);
  }
  swift_release(v6);
  if (qword_1006443F0 != -1) {
    swift_once(&qword_1006443F0, sub_100446D2C);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v8, (uint64_t)qword_100655D50);
  swift_errorRetain(v2);
  uint64_t v9 = swift_errorRetain(v2);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v12 = 138412290;
    swift_errorRetain(v2);
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError(v2);
    uint64_t v18 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4, v12 + 12);
    *uint64_t v13 = v14;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error decoding SFAirDropMessage %@", v12, 0xCu);
    uint64_t v15 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v13, 1LL, v15);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  return swift_willThrow(v17);
}

uint64_t sub_100445548( uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v11 = type metadata accessor for PropertyListDecoder(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  uint64_t v12 = PropertyListDecoder.init()();
  uint64_t v13 = a3(0LL);
  uint64_t v14 = sub_100183F14(a4, a3, a5);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v13, a1, a2, v13, v14);
  if (!v5) {
    return swift_release(v12);
  }
  swift_release(v12);
  if (qword_1006443F0 != -1) {
    swift_once(&qword_1006443F0, sub_100446D2C);
  }
  uint64_t v15 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v15, (uint64_t)qword_100655D50);
  swift_errorRetain(v5);
  uint64_t v16 = swift_errorRetain(v5);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    unsigned __int8 v20 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v19 = 138412290;
    swift_errorRetain(v5);
    uint64_t v21 = _swift_stdlib_bridgeErrorToNSError(v5);
    uint64_t v25 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v19 + 4, v19 + 12);
    *unsigned __int8 v20 = v21;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Error decoding SFAirDropMessage %@", v19, 0xCu);
    uint64_t v22 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v20, 1LL, v22);
    swift_slowDealloc(v20, -1LL, -1LL);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(v5);
    swift_errorRelease(v5);
  }

  return swift_willThrow(v24);
}

uint64_t sub_100445780(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PropertyListDecoder(0LL);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  uint64_t v6 = PropertyListDecoder.init()();
  unint64_t v7 = sub_10039E6DC();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)( &_s14descr1005D5299C20IdentityShareRequestVN,  a1,  a2,  &_s14descr1005D5299C20IdentityShareRequestVN,  v7);
  if (!v2) {
    return swift_release(v6);
  }
  swift_release(v6);
  if (qword_1006443F0 != -1) {
    swift_once(&qword_1006443F0, sub_100446D2C);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v8, (uint64_t)qword_100655D50);
  swift_errorRetain(v2);
  uint64_t v9 = swift_errorRetain(v2);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v12 = 138412290;
    swift_errorRetain(v2);
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError(v2);
    uint64_t v18 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4, v12 + 12);
    *uint64_t v13 = v14;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error decoding SFAirDropMessage %@", v12, 0xCu);
    uint64_t v15 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v13, 1LL, v15);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  return swift_willThrow(v17);
}

uint64_t sub_100445998(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PropertyListDecoder(0LL);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  uint64_t v6 = PropertyListDecoder.init()();
  unint64_t v7 = sub_10039E940();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)( &_s14descr1005D8CD9C16DiscoverResponseVN,  a1,  a2,  &_s14descr1005D8CD9C16DiscoverResponseVN,  v7);
  if (!v2) {
    return swift_release(v6);
  }
  swift_release(v6);
  if (qword_1006443F0 != -1) {
    swift_once(&qword_1006443F0, sub_100446D2C);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v8, (uint64_t)qword_100655D50);
  swift_errorRetain(v2);
  uint64_t v9 = swift_errorRetain(v2);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v12 = 138412290;
    swift_errorRetain(v2);
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError(v2);
    uint64_t v18 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4, v12 + 12);
    *uint64_t v13 = v14;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error decoding SFAirDropMessage %@", v12, 0xCu);
    uint64_t v15 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v13, 1LL, v15);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  return swift_willThrow(v17);
}

uint64_t sub_100445BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PropertyListDecoder(0LL);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  uint64_t v6 = PropertyListDecoder.init()();
  unint64_t v7 = sub_10044808C();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)( &type metadata for SDTempPairingMessage.Response,  a1,  a2,  &type metadata for SDTempPairingMessage.Response,  v7);
  if (!v2) {
    return swift_release(v6);
  }
  swift_release(v6);
  if (qword_1006443F0 != -1) {
    swift_once(&qword_1006443F0, sub_100446D2C);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v8, (uint64_t)qword_100655D50);
  swift_errorRetain(v2);
  uint64_t v9 = swift_errorRetain(v2);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v12 = 138412290;
    swift_errorRetain(v2);
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError(v2);
    uint64_t v18 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4, v12 + 12);
    *uint64_t v13 = v14;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error decoding SFAirDropMessage %@", v12, 0xCu);
    uint64_t v15 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v13, 1LL, v15);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  return swift_willThrow(v17);
}

uint64_t sub_100445DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PropertyListDecoder(0LL);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  uint64_t v6 = PropertyListDecoder.init()();
  unint64_t v7 = sub_1004480D0();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)( &type metadata for SDTempPairingMessage.Request,  a1,  a2,  &type metadata for SDTempPairingMessage.Request,  v7);
  if (!v2) {
    return swift_release(v6);
  }
  swift_release(v6);
  if (qword_1006443F0 != -1) {
    swift_once(&qword_1006443F0, sub_100446D2C);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v8, (uint64_t)qword_100655D50);
  swift_errorRetain(v2);
  uint64_t v9 = swift_errorRetain(v2);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v12 = 138412290;
    swift_errorRetain(v2);
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError(v2);
    uint64_t v18 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4, v12 + 12);
    *uint64_t v13 = v14;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error decoding SFAirDropMessage %@", v12, 0xCu);
    uint64_t v15 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v13, 1LL, v15);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  return swift_willThrow(v17);
}

uint64_t sub_100445FE0(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return swift_task_switch(sub_100445FF8, 0LL, 0LL);
}

void sub_100445FF8()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v3 = v1[3];
  uint64_t v2 = v1[4];
  sub_10019A708(v1, v3);
  v0[4] = sub_100447094(v3, v2);
  v0[5] = v4;
  __asm { BR              X10 }

uint64_t sub_100446088()
{
  uint64_t v3 = (void *)swift_task_alloc(dword_100654D0C);
  *(void *)(v1 + 48) = v3;
  void *v3 = v1;
  v3[1] = sub_100446110;
  return sub_1004148F0(v0, v2, BYTE6(v2));
}

uint64_t sub_100446110()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48LL);
  *(void *)(*(void *)v1 + 56LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_1004461A8;
  }
  else {
    uint64_t v3 = sub_100446174;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_100446174()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004461A8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1004461DC( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, uint64_t a5@<X5>, unint64_t a6@<X6>, _OWORD *a7@<X8>)
{
  int v125 = a4;
  uint64_t v126 = a3;
  unint64_t v129 = a7;
  uint64_t v11 = _s14descr1005DD3D1C12ErrorRequestVMa(0LL);
  __chkstk_darwin(v11);
  uint64_t v118 = (char *)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = _s14descr1005DEB71C15ExchangeRequestVMa(0LL);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v123 = _s14descr1005D9BD1C13UploadRequestVMa(0LL);
  __chkstk_darwin(v123);
  uint64_t v124 = (uint64_t)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v127 = sub_100183098(&qword_100655D70);
  uint64_t v17 = __chkstk_darwin(v127);
  Swift::String v122 = (uint64_t *)((char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v19 = __chkstk_darwin(v17);
  v121 = (const char **)((char *)&v112 - v20);
  uint64_t v21 = __chkstk_darwin(v19);
  Swift::String v120 = (const char **)((char *)&v112 - v22);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v119 = (_OWORD *)((char *)&v112 - v24);
  __chkstk_darwin(v23);
  uint64_t v128 = (uint64_t)&v112 - v25;
  uint64_t v26 = _s14descr1005DF7D1C10AskRequestVMa(0LL);
  __chkstk_darwin(v26);
  char v28 = (char *)&v112 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = _s12HelloRequestVMa(0LL);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v112 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1 == 0x65766F637369442FLL && a2 == (void *)0xE900000000000072LL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x65766F637369442FLL, 0xE900000000000072LL, a1, a2, 0LL) & 1) != 0)
  {
    uint64_t v32 = v136;
    sub_100445330(a5, a6);
    if (!v32)
    {
      char v33 = v129;
      *unint64_t v129 = v130;
      uint64_t v34 = type metadata accessor for SDAirDropMessage(0LL);
      __int128 v35 = v33;
      uint64_t v36 = 2LL;
LABEL_6:
      swift_storeEnumTagMultiPayload(v35, v34, v36);
    }
  }

  else if (a1 == 0x6F6C6C65482FLL && a2 == (void *)0xE600000000000000LL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6F6C6C65482FLL, 0xE600000000000000LL, a1, a2, 0LL) & 1) != 0)
  }
  {
    uint64_t v37 = v136;
    sub_100445548(a5, a6, _s12HelloRequestVMa, &qword_100652060, (uint64_t)&unk_1004DC358);
    if (!v37)
    {
      __int128 v38 = v129;
      sub_1001A4B40((uint64_t)v31, (uint64_t)v129, _s12HelloRequestVMa);
      uint64_t v34 = type metadata accessor for SDAirDropMessage(0LL);
      __int128 v35 = v38;
      uint64_t v36 = 0LL;
      goto LABEL_6;
    }
  }

  else if (a1 == 1802715439 && a2 == (void *)0xE400000000000000LL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)(1802715439LL, 0xE400000000000000LL, a1, a2, 0LL) & 1) != 0)
  }
  {
    uint64_t v39 = v136;
    sub_100445548(a5, a6, _s14descr1005DF7D1C10AskRequestVMa, &qword_100652020, (uint64_t)&unk_1004D9FE0);
    if (!v39)
    {
      __int128 v40 = v129;
      sub_1001A4B40((uint64_t)v28, (uint64_t)v129, _s14descr1005DF7D1C10AskRequestVMa);
      uint64_t v34 = type metadata accessor for SDAirDropMessage(0LL);
      __int128 v35 = v40;
      uint64_t v36 = 4LL;
      goto LABEL_6;
    }
  }

  else if (a1 == 0x64616F6C70552FLL && a2 == (void *)0xE700000000000000LL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x64616F6C70552FLL, 0xE700000000000000LL, a1, a2, 0LL) & 1) != 0)
  }
  {
    if (qword_1006443F0 != -1) {
      swift_once(&qword_1006443F0, sub_100446D2C);
    }
    uint64_t v41 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v41, (uint64_t)qword_100655D50);
    uint64_t v42 = sub_10019BA8C(a5, a6);
    uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
    os_log_type_t v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      *(_DWORD *)swift_slowAlloc(12LL, -1LL) = 134217984;
      __asm { BR              X10 }
    }

    sub_100189B20(a5, a6);

    Swift::String v48 = (int *)v127;
    uint64_t v47 = v128;
    uint64_t v49 = v128 + *(int *)(v127 + 64);
    uint64_t v50 = v136;
    sub_100446DBC(v49, v126, &v130);
    if (!v50)
    {
      uint64_t v114 = a5;
      unint64_t v115 = a6;
      __int128 v51 = v130;
      uint64_t v126 = v130;
      __int128 v52 = v131;
      uint64_t v136 = *((void *)&v131 + 1);
      Swift::String v116 = (const char *)v131;
      __int128 v53 = v132;
      uint64_t v117 = *((void *)&v132 + 1);
      Swift::String v54 = (const char *)v133;
      uint64_t v55 = v48[20];
      Swift::String v56 = (void *)(v47 + v55);
      uint64_t v57 = v48[24];
      Swift::String v58 = (void *)(v47 + v57);
      *(_OWORD *)uint64_t v47 = v130;
      *(void *)(v47 + 16) = v52;
      void *v56 = *((void *)&v52 + 1);
      v56[1] = v53;
      uint64_t v118 = (const char *)v53;
      void *v58 = *((void *)&v53 + 1);
      v58[1] = v54;
      Swift::String v59 = v119;
      uint64_t v113 = (uint64_t)v119 + v48[16];
      uint64_t v60 = v113;
      Swift::String v61 = (void *)((char *)v119 + v55);
      Swift::String v62 = (void *)((char *)v119 + v57);
      *uint64_t v119 = v51;
      uint64_t v127 = *((void *)&v51 + 1);
      *((void *)v59 + 2) = v52;
      sub_10039E540(v49, v60);
      uint64_t v63 = v136;
      *Swift::String v61 = v136;
      v61[1] = v53;
      uint64_t v64 = v117;
      *Swift::String v62 = v117;
      v62[1] = v54;
      Swift::String v65 = v120;
      uint64_t v119 = (_OWORD *)((char *)v120 + v48[16]);
      Swift::String v66 = v119;
      Swift::String v67 = (void *)((char *)v120 + v48[20]);
      Swift::String v68 = (void *)((char *)v120 + v48[24]);
      *Swift::String v120 = v126;
      v65[1] = *((void *)&v51 + 1);
      Swift::String v69 = v116;
      v65[2] = v116;
      sub_10039E540(v49, (uint64_t)v66);
      void *v67 = v63;
      uint64_t v70 = v118;
      v67[1] = v118;
      *Swift::String v68 = v64;
      v68[1] = v54;
      uint64_t v112 = v54;
      uint64_t v71 = v121;
      Swift::String v120 = (void *)((char *)v121 + v48[16]);
      uint64_t v72 = v120;
      NSString v73 = (void *)((char *)v121 + v48[20]);
      uint64_t v74 = (void *)((char *)v121 + v48[24]);
      uint64_t v76 = v126;
      uint64_t v75 = v127;
      void *v121 = v126;
      v71[1] = v75;
      v71[2] = v69;
      sub_10039E540(v49, (uint64_t)v72);
      void *v73 = v136;
      v73[1] = v70;
      uint64_t v77 = v70;
      uint64_t v78 = v117;
      *uint64_t v74 = v117;
      v74[1] = v54;
      uint64_t v79 = v122;
      v121 = (uint64_t *)((char *)v122 + v48[16]);
      uint64_t v80 = v121;
      uint64_t v81 = (uint64_t *)((char *)v122 + v48[20]);
      uint64_t v82 = (uint64_t *)((char *)v122 + v48[24]);
      uint64_t v83 = v76;
      *Swift::String v122 = v76;
      uint64_t v84 = v127;
      char v85 = v116;
      v79[1] = v127;
      v79[2] = (uint64_t)v85;
      sub_10039E540(v49, (uint64_t)v80);
      uint64_t v86 = v136;
      void *v81 = v136;
      v81[1] = v77;
      uint64_t v87 = v112;
      *uint64_t v82 = v78;
      v82[1] = v87;
      uint64_t v88 = v124;
      sub_1001870BC(v113, v124, (uint64_t *)&unk_100647610);
      unint64_t v89 = (int *)v123;
      *(void *)(v88 + *(int *)(v123 + 20)) = v83;
      uint64_t v90 = (uint64_t *)(v88 + v89[6]);
      *uint64_t v90 = v84;
      v90[1] = (uint64_t)v85;
      Swift::String v91 = (uint64_t *)(v88 + v89[7]);
      uint64_t v92 = v114;
      unint64_t v93 = v115;
      *Swift::String v91 = v114;
      v91[1] = v93;
      *(_BYTE *)(v88 + v89[8]) = v125 & 1;
      unint64_t v94 = (void *)(v88 + v89[9]);
      unint64_t v95 = v118;
      void *v94 = v86;
      v94[1] = v95;
      uint64_t v96 = (void *)(v88 + v89[10]);
      *uint64_t v96 = v78;
      v96[1] = v87;
      sub_10019BA8C(v92, v93);
      swift_bridgeObjectRetain(v87);
      swift_bridgeObjectRetain(v85);
      swift_bridgeObjectRetain(v95);
      sub_100187100((uint64_t)v121, (uint64_t *)&unk_100647610);
      sub_100187100((uint64_t)v120, (uint64_t *)&unk_100647610);
      sub_100187100((uint64_t)v119, (uint64_t *)&unk_100647610);
      uint64_t v97 = v88;
      char v98 = v129;
      sub_1001A4B40(v97, (uint64_t)v129, _s14descr1005D9BD1C13UploadRequestVMa);
      uint64_t v99 = type metadata accessor for SDAirDropMessage(0LL);
      swift_storeEnumTagMultiPayload(v98, v99, 6LL);
      sub_100187100(v128, &qword_100655D70);
    }
  }

  else if (a1 == 0x676E61686378452FLL && a2 == (void *)0xE900000000000065LL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x676E61686378452FLL, 0xE900000000000065LL, a1, a2, 0LL) & 1) != 0)
  }
  {
    uint64_t v45 = v136;
    sub_100445548(a5, a6, _s14descr1005DEB71C15ExchangeRequestVMa, &qword_100651FE8, (uint64_t)&unk_1004D979C);
    if (!v45)
    {
      Swift::String v46 = v129;
      sub_1001A4B40((uint64_t)v15, (uint64_t)v129, _s14descr1005DEB71C15ExchangeRequestVMa);
      uint64_t v34 = type metadata accessor for SDAirDropMessage(0LL);
      __int128 v35 = v46;
      uint64_t v36 = 8LL;
      goto LABEL_6;
    }
  }

  else if (a1 == 0x7469746E6564492FLL && a2 == (void *)0xEE00657261685379LL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x7469746E6564492FLL, 0xEE00657261685379LL, a1, a2, 0LL) & 1) != 0)
  }
  {
    uint64_t v100 = v136;
    sub_100445780(a5, a6);
    if (!v100)
    {
      __int128 v102 = v133;
      __int128 v101 = v134;
      uint64_t v103 = v135;
      __int128 v104 = v131;
      __int128 v105 = v132;
      unint64_t v106 = v129;
      *unint64_t v129 = v130;
      v106[1] = v104;
      v106[2] = v105;
      v106[3] = v102;
      v106[4] = v101;
      *((void *)v106 + 10) = v103;
      uint64_t v34 = type metadata accessor for SDAirDropMessage(0LL);
      __int128 v35 = v106;
      uint64_t v36 = 10LL;
      goto LABEL_6;
    }
  }

  else
  {
    if ((a1 != 0x726F7272452FLL || a2 != (void *)0xE600000000000000LL)
      && (_stringCompareWithSmolCheck(_:_:expecting:)(0x726F7272452FLL, 0xE600000000000000LL, a1, a2, 0LL) & 1) == 0)
    {
      *(void *)&__int128 v130 = 0LL;
      *((void *)&v130 + 1) = 0xE000000000000000LL;
      _StringGuts.grow(_:)(17LL);
      swift_bridgeObjectRelease(*((const char **)&v130 + 1));
      *(void *)&__int128 v130 = 0x656C646E61686E55LL;
      *((void *)&v130 + 1) = 0xEF20687461502064LL;
      v111._countAndFlagsBits = a1;
      v111._object = a2;
      String.append(_:)(v111);
      _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v130,  *((void *)&v130 + 1),  "DaemoniOSLibrary/Network+SFAirDropMessage.swift",  47LL,  2LL,  139LL,  0);
      __break(1u);
      JUMPOUT(0x100446D1CLL);
    }

    unint64_t v107 = v118;
    uint64_t v108 = v136;
    sub_100445548(a5, a6, _s14descr1005DD3D1C12ErrorRequestVMa, &qword_100651FB0, (uint64_t)&unk_1004D7A70);
    if (!v108)
    {
      uint64_t v109 = (uint64_t)v107;
      uint64_t v110 = v129;
      sub_1001A4B40(v109, (uint64_t)v129, _s14descr1005DD3D1C12ErrorRequestVMa);
      uint64_t v34 = type metadata accessor for SDAirDropMessage(0LL);
      __int128 v35 = v110;
      uint64_t v36 = 12LL;
      goto LABEL_6;
    }
  }

uint64_t sub_100446D2C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100655D50);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100655D50);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

void sub_100446DBC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_100183098((uint64_t *)&unk_100647610);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = 0LL;
  char v38 = 1;
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v35 = 0LL;
  uint64_t v36 = 0LL;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v8, 1LL, 1LL, v9);
  uint64_t v33 = 0LL;
  uint64_t v34 = 0LL;
  uint64_t v31 = 0LL;
  uint64_t v32 = 0LL;
  uint64_t v10 = (void *)swift_allocObject(&unk_1005E2258, 56LL, 7LL);
  v10[2] = &v37;
  v10[3] = &v35;
  v10[4] = v8;
  v10[5] = &v33;
  v10[6] = &v31;
  uint64_t v11 = swift_allocObject(&unk_1005E2280, 32LL, 7LL);
  *(void *)(v11 + 16) = sub_100447FC8;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_100448008;
  uint64_t v30 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100447F84;
  aBlock[3] = &unk_1005E2298;
  uint64_t v12 = _Block_copy(aBlock);
  uint64_t v13 = v30;
  swift_retain(v11);
  swift_release(v13);
  nw_http_metadata_enumerate_headers(a2, v12);
  _Block_release(v12);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation(v11, "", 95LL, 333LL, 52LL, 1LL);
  swift_release(v11);
  if ((a2 & 1) != 0)
  {
    __break(1u);
  }

  else if ((v38 & 1) != 0 || (uint64_t v14 = v36) == 0LL)
  {
    uint64_t v21 = type metadata accessor for SFAirDropReceive.Failure(0LL);
    uint64_t v22 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v21, v22, 0LL, 0LL);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v21 - 8) + 104LL))( v23,  enum case for SFAirDropReceive.Failure.badRequest(_:),  v21);
    swift_willThrow(v24);
    *(void *)&double v25 = swift_bridgeObjectRelease(v32).n128_u64[0];
    swift_bridgeObjectRelease(v34, v25);
    sub_100187100((uint64_t)v8, (uint64_t *)&unk_100647610);
    uint64_t v26 = v36;
    swift_release(v10);
    swift_bridgeObjectRelease(v26);
  }

  else
  {
    uint64_t v39 = v37;
    uint64_t v28 = v35;
    sub_10039E540((uint64_t)v8, a1);
    uint64_t v15 = v33;
    uint64_t v16 = v34;
    uint64_t v17 = v31;
    uint64_t v18 = v32;
    swift_bridgeObjectRetain(v14);
    sub_100187100((uint64_t)v8, (uint64_t *)&unk_100647610);
    uint64_t v19 = v36;
    swift_release(v10);
    swift_bridgeObjectRelease(v19);
    uint64_t v20 = v28;
    *a3 = v39;
    a3[1] = v20;
    a3[2] = v14;
    a3[3] = v15;
    a3[4] = v16;
    a3[5] = v17;
    a3[6] = v18;
  }

uint64_t sub_100447094(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for PropertyListEncoder(0LL);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  uint64_t v7 = PropertyListEncoder.init()();
  dispatch thunk of PropertyListEncoder.outputFormat.setter(200LL);
  uint64_t v8 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(v3, a1, a2);
  swift_release(v7);
  return v8;
}

void sub_100447128()
{
  uint64_t v1 = sub_100183098((uint64_t *)&unk_100647610);
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  __chkstk_darwin(v2);
  uint64_t v3 = _s14descr1005D9BD1C13UploadRequestVMa(0LL);
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for SDAirDropMessage(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v0, (uint64_t)v6, v7);
  uint64_t v8 = (char *)sub_100447264 + 4 * word_1004DC188[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }

uint64_t sub_100447264()
{
  uint64_t v1 = ((uint64_t (*)(uint64_t))nw_http_response_create_well_known)(200LL);
  uint64_t v2 = ((uint64_t (*)(void))nw_http_create_metadata_for_response)();
  swift_unknownObjectRelease(v1);
  return v2;
}

uint64_t sub_1004478F8(uint64_t a1)
{
  return a1;
}

void sub_100447920( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, Swift::String *a6, uint64_t a7, Swift::String *a8, Swift::String *a9)
{
  uint64_t v71 = a5;
  uint64_t v14 = sub_100183098((uint64_t *)&unk_100647610);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  String.init(cString:)(a1);
  uint64_t v18 = v17;
  Swift::String v19 = String.lowercased()();
  swift_bridgeObjectRelease(v18);
  String.init(cString:)(a3);
  uint64_t v21 = v20;
  Swift::String v22 = String.lowercased()();
  swift_bridgeObjectRelease(v21);
  Swift::String v23 = String.lowercased()();
  if (v19._countAndFlagsBits == v23._countAndFlagsBits && v19._object == v23._object)
  {
    unint64_t v24 = swift_bridgeObjectRelease((const char *)v19._object).n128_u64[0];
  }

  else
  {
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)( v19._countAndFlagsBits,  v19._object,  v23._countAndFlagsBits,  v23._object,  0LL);
    unint64_t v24 = swift_bridgeObjectRelease((const char *)v23._object).n128_u64[0];
    if ((v25 & 1) == 0)
    {
      Swift::String v34 = String.lowercased()();
      if (v19._countAndFlagsBits == v34._countAndFlagsBits && v19._object == v34._object)
      {
        unint64_t v35 = swift_bridgeObjectRelease((const char *)v19._object).n128_u64[0];
      }

      else
      {
        char v36 = _stringCompareWithSmolCheck(_:_:expecting:)( v19._countAndFlagsBits,  v19._object,  v34._countAndFlagsBits,  v34._object,  0LL);
        unint64_t v35 = swift_bridgeObjectRelease((const char *)v34._object).n128_u64[0];
        if ((v36 & 1) == 0)
        {
          Swift::String v43 = String.lowercased()();
          if (v19._countAndFlagsBits == v43._countAndFlagsBits && v19._object == v43._object)
          {
            unint64_t v44 = swift_bridgeObjectRelease((const char *)v19._object).n128_u64[0];
          }

          else
          {
            char v49 = _stringCompareWithSmolCheck(_:_:expecting:)( v19._countAndFlagsBits,  v19._object,  v43._countAndFlagsBits,  v43._object,  0LL);
            unint64_t v44 = swift_bridgeObjectRelease((const char *)v43._object).n128_u64[0];
            if ((v49 & 1) == 0)
            {
              Swift::String v56 = String.lowercased()();
              if (v19._countAndFlagsBits == v56._countAndFlagsBits && v19._object == v56._object)
              {
                unint64_t v57 = swift_bridgeObjectRelease((const char *)v19._object).n128_u64[0];
              }

              else
              {
                char v58 = _stringCompareWithSmolCheck(_:_:expecting:)( v19._countAndFlagsBits,  v19._object,  v56._countAndFlagsBits,  v56._object,  0LL);
                unint64_t v57 = swift_bridgeObjectRelease((const char *)v56._object).n128_u64[0];
                if ((v58 & 1) == 0)
                {
                  Swift::String v64 = String.lowercased()();
                  if (v19._countAndFlagsBits == v64._countAndFlagsBits && v19._object == v64._object)
                  {
                    swift_bridgeObjectRelease_n(v19._object, 2LL);
                  }

                  else
                  {
                    char v66 = _stringCompareWithSmolCheck(_:_:expecting:)( v19._countAndFlagsBits,  v19._object,  v64._countAndFlagsBits,  v64._object,  0LL);
                    *(void *)&double v67 = swift_bridgeObjectRelease((const char *)v64._object).n128_u64[0];
                    *(void *)&double v65 = swift_bridgeObjectRelease((const char *)v19._object, v67).n128_u64[0];
                    if ((v66 & 1) == 0)
                    {
                      swift_bridgeObjectRelease((const char *)v22._object, v65);
                      return;
                    }
                  }

                  object = (const char *)a9->_object;
                  *a9 = v22;
                  swift_bridgeObjectRelease(object, v65);
                  return;
                }
              }

              *(void *)&double v59 = swift_bridgeObjectRelease((const char *)v19._object, *(double *)&v57).n128_u64[0];
              uint64_t v60 = (const char *)a8->_object;
              *a8 = v22;
              swift_bridgeObjectRelease(v60, v59);
              return;
            }
          }

          __n128 v50 = swift_bridgeObjectRelease((const char *)v19._object, *(double *)&v44);
          SFAirDrop.TransferIdentifier.init(_:)(v22._countAndFlagsBits, v22._object, v50);
          uint64_t v55 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56LL))(v16, 0LL, 1LL, v55);
          sub_100448044((uint64_t)v16, a7);
          return;
        }
      }

      *(void *)&double v37 = swift_bridgeObjectRelease((const char *)v19._object, *(double *)&v35).n128_u64[0];
      char v38 = (const char *)a6->_object;
      *a6 = v22;
      swift_bridgeObjectRelease(v38, v37);
      return;
    }
  }

  *(void *)&double v26 = swift_bridgeObjectRelease((const char *)v19._object, *(double *)&v24).n128_u64[0];
  unint64_t v27 = ((unint64_t)v22._object >> 56) & 0xF;
  uint64_t v28 = v22._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  else {
    unint64_t v29 = v22._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (!v29)
  {
    swift_bridgeObjectRelease((const char *)v22._object, v26);
    uint64_t v53 = 0LL;
    char v52 = 1;
LABEL_61:
    Swift::String v54 = v71;
    uint64_t *v71 = v53;
    *((_BYTE *)v54 + 8) = v52 & 1;
    return;
  }

  if (((uint64_t)v22._object & 0x1000000000000000LL) != 0)
  {
    uint64_t v31 = sub_100212BB0(v22._countAndFlagsBits, (uint64_t)v22._object, 10LL);
    char v33 = v69;
LABEL_58:
    swift_bridgeObjectRelease((const char *)v22._object);
    char v52 = v33 & 1;
    if ((v33 & 1) != 0) {
      uint64_t v53 = 0LL;
    }
    else {
      uint64_t v53 = v31;
    }
    goto LABEL_61;
  }

  if (((uint64_t)v22._object & 0x2000000000000000LL) == 0)
  {
    if ((v22._countAndFlagsBits & 0x1000000000000000LL) != 0) {
      uint64_t v30 = (unsigned __int8 *)(((uint64_t)v22._object & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v30 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v22._countAndFlagsBits, v22._object);
    }
    uint64_t v31 = (uint64_t)sub_100212B88(v30, v28, 10LL);
    char v33 = v32 & 1;
    goto LABEL_58;
  }

  v72[0] = v22._countAndFlagsBits;
  v72[1] = (uint64_t)v22._object & 0xFFFFFFFFFFFFFFLL;
  if (LOBYTE(v22._countAndFlagsBits) != 43)
  {
    if (LOBYTE(v22._countAndFlagsBits) == 45)
    {
      if (v27)
      {
        if (v27 != 1 && (BYTE1(v22._countAndFlagsBits) - 48) <= 9u)
        {
          if (v27 == 2)
          {
            char v33 = 0;
            uint64_t v31 = -(uint64_t)(BYTE1(v22._countAndFlagsBits) - 48);
            goto LABEL_58;
          }

          if ((BYTE2(v22._countAndFlagsBits) - 48) <= 9u)
          {
            unint64_t v51 = v27 - 3;
            if (!v51) {
              goto LABEL_57;
            }
            Swift::String v61 = (unsigned __int8 *)v72 + 3;
            while (1)
            {
              unsigned int v62 = *v61 - 48;
              if (v62 > 9) {
                break;
              }
              uint64_t v63 = 10 * v31;
              uint64_t v31 = v63 - v62;
              char v33 = 0;
              ++v61;
              if (!--v51) {
                goto LABEL_58;
              }
            }
          }
        }

uint64_t sub_100447F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32))(a2, a3, a4, a5) & 1;
}

uint64_t sub_100447FB8()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_100447FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return v5 & 1;
}

uint64_t sub_100447FF8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100448008()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_10044802C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10044803C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100448044(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098((uint64_t *)&unk_100647610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_10044808C()
{
  unint64_t result = qword_100655D80;
  if (!qword_100655D80)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5B28, &type metadata for SDTempPairingMessage.Response);
    atomic_store(result, &qword_100655D80);
  }

  return result;
}

unint64_t sub_1004480D0()
{
  unint64_t result = qword_100655D90;
  if (!qword_100655D90)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5AD8, &type metadata for SDTempPairingMessage.Request);
    atomic_store(result, &qword_100655D90);
  }

  return result;
}

uint64_t sub_100448120()
{
  *(void *)(v1 + 136) = v0;
  return swift_task_switch(sub_100448138, 0LL, 0LL);
}

uint64_t sub_100448138()
{
  uint64_t v1 = v0 + 2;
  uint64_t v2 = *(void **)(v0[17] + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1004481D8;
  uint64_t v3 = swift_continuation_init(v0 + 2, 1LL);
  v0[10] = _NSConcreteStackBlock;
  uint64_t v4 = v0 + 10;
  v4[1] = 0x40000000LL;
  uint64_t v4[2] = sub_1004493F8;
  void v4[3] = &unk_1005E22C0;
  void v4[4] = v3;
  [v2 generateLocalAttestedLTKIfNeccessaryWithCompletion:v4];
  return swift_continuation_await(v1);
}

uint64_t sub_1004481D8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48LL);
  *(void *)(*(void *)v0 + 144LL) = v1;
  if (v1) {
    uint64_t v2 = sub_1004482E4;
  }
  else {
    uint64_t v2 = sub_100448238;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_100448238()
{
  if (*(void *)(v0 + 128) >> 60 != 15LL) {
    return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 120));
  }
  unint64_t v1 = sub_100187014();
  uint64_t v2 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v1, 0LL, 0LL);
  *(_DWORD *)uint64_t v3 = 10;
  *(void *)(v3 + 8) = 0xD000000000000025LL;
  *(void *)(v3 + 16) = 0x80000001005104C0LL;
  swift_willThrow(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004482E4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100448320(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  Swift::String v68 = (id *)a2;
  v66[1] = a3;
  v66[2] = a4;
  uint64_t v67 = a1;
  v66[0] = *(id *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  id v5 = [v66[0] activeAKSSessions];
  if (!v5)
  {
    __break(1u);
    goto LABEL_23;
  }

  uint64_t v6 = v5;
  uint64_t v7 = (void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);
  uint64_t v9 = *(void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  uint64_t v10 = sub_10019A708( (void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice),  v9);
  uint64_t v11 = *(void *)(v9 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v66 - v12;
  (*(void (**)(char *))(v11 + 16))((char *)v66 - v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v8);
  if (!v14)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }

  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = objc_msgSend(v6, "valueForKey:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  if (v17)
  {
    _bridgeAnyObjectToAny(_:)(v70, v17);
    swift_unknownObjectRelease(v17);
  }

  else
  {
    memset(v70, 0, sizeof(v70));
  }

  sub_1001870BC((uint64_t)v70, (uint64_t)&v71, (uint64_t *)&unk_100646550);
  if (!v73)
  {
    sub_1002D2200((uint64_t)&v71);
    goto LABEL_11;
  }

  unint64_t v18 = sub_10044AEC4();
  if ((swift_dynamicCast(&v74, &v71, (char *)&type metadata for Any + 8, v18, 6LL) & 1) == 0)
  {
LABEL_11:
    unint64_t v22 = sub_100187014();
    uint64_t v23 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v22, 0LL, 0LL);
    *(_DWORD *)uint64_t v24 = 10;
    *(void *)(v24 + 8) = 0xD000000000000019LL;
    *(void *)(v24 + 16) = 0x8000000100510520LL;
    swift_willThrow(v23);
    return;
  }

  Swift::String v19 = v74;
  uint64_t v20 = v69;
  uint64_t v21 = (void *)sub_100449978(v67, (unint64_t)v68);
  if (v20)
  {

    return;
  }

  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v19 finalizeEscrowPairing:v25];

  if (!v26)
  {
    char v69 = v19;
    UUID.uuidString.getter(v27);
    char v32 = v31;
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
    uint64_t v35 = v7[3];
    uint64_t v34 = v7[4];
    char v36 = sub_10019A708(v7, v35);
    Swift::String v68 = v66;
    uint64_t v37 = *(void *)(v35 - 8);
    __chkstk_darwin(v36);
    unint64_t v39 = (char *)v66 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v37 + 16))(v39);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v34);
    unsigned int v41 = v40;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v35);
    if (v41)
    {
      NSString v43 = String._bridgeToObjectiveC()();
      *(void *)&double v42 = swift_bridgeObjectRelease(v41).n128_u64[0];
    }

    else
    {
      NSString v43 = 0LL;
    }

    id v51 = v66[0];
    objc_msgSend(v66[0], "setPairingID:forWatchID:", v33, v43, v42);

    sub_100449CC8();
    char v52 = v69;
    id v53 = [v51 activeAKSSessions];
    if (v53)
    {
      Swift::String v54 = v53;
      uint64_t v55 = v7[3];
      uint64_t v56 = v7[4];
      unint64_t v57 = sub_10019A708(v7, v55);
      uint64_t v58 = *(void *)(v55 - 8);
      __chkstk_darwin(v57);
      uint64_t v60 = (char *)v66 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v58 + 16))(v60);
      uint64_t v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 8))(v55, v56);
      uint64_t v63 = v62;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v55);
      unint64_t v71 = v61;
      uint64_t v72 = v63;
      uint64_t v64 = sub_100183098(&qword_1006462D8);
      uint64_t v65 = Optional._bridgeToObjectiveC()(v64);
      objc_msgSend(v54, "removeObjectForKey:", v65, swift_bridgeObjectRelease(v63).n128_f64[0]);

      swift_unknownObjectRelease(v65);
      return;
    }

    goto LABEL_24;
  }

  if (v26 == (id)147)
  {
    unint64_t v28 = sub_100187014();
    uint64_t v29 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v28, 0LL, 0LL);
    *(_DWORD *)uint64_t v30 = 23;
    *(void *)(v30 + 8) = 0xD000000000000015LL;
    *(void *)(v30 + 16) = 0x800000010050A830LL;
  }

  else
  {
    unint64_t v71 = 0LL;
    uint64_t v72 = (const char *)0xE000000000000000LL;
    _StringGuts.grow(_:)(45LL);
    swift_bridgeObjectRelease(v72);
    unint64_t v71 = 0xD00000000000002ALL;
    uint64_t v72 = (const char *)0x80000001005105D0LL;
    *(void *)&v70[0] = v26;
    v44._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    object = (const char *)v44._object;
    String.append(_:)(v44);
    swift_bridgeObjectRelease(object);
    v46._countAndFlagsBits = 41LL;
    v46._object = (void *)0xE100000000000000LL;
    String.append(_:)(v46);
    unint64_t v47 = v71;
    uint64_t v48 = v72;
    unint64_t v49 = sub_100187014();
    uint64_t v29 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v49, 0LL, 0LL);
    *(_DWORD *)uint64_t v50 = 10;
    *(void *)(v50 + 8) = v47;
    *(void *)(v50 + 16) = v48;
  }

  swift_willThrow(v29);
}

id sub_1004488A0(uint64_t a1, void *a2)
{
  id v114 = *(Class *)((char *)&v2->isa + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  id result = [v114 activeAKSSessions];
  if (!result)
  {
    __break(1u);
    goto LABEL_57;
  }

  uint64_t v6 = result;
  Class v117 = v2;
  uint64_t v8 = *(uint64_t *)((char *)&v2[3].isa + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);
  uint64_t v7 = *(uint64_t *)((char *)&v2[4].isa + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);
  unint64_t v115 = (Class *)((char *)&v2->isa + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);
  uint64_t v9 = sub_10019A708( (Class *)((char *)&v2->isa + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice),  v8);
  uint64_t v10 = *(void *)(v8 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v107 - v11;
  (*(void (**)(char *))(v10 + 16))((char *)v107 - v11);
  id result = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v8, v7);
  if (!v13)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }

  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = objc_msgSend(v6, "valueForKey:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  if (v16)
  {
    _bridgeAnyObjectToAny(_:)(v118, v16);
    swift_unknownObjectRelease(v16);
  }

  else
  {
    memset(v118, 0, sizeof(v118));
  }

  Class v17 = v117;
  sub_1001870BC((uint64_t)v118, (uint64_t)&v119, (uint64_t *)&unk_100646550);
  if (!v120[2])
  {
    sub_1002D2200((uint64_t)&v119);
    goto LABEL_11;
  }

  unint64_t v18 = sub_10044AEC4();
  if ((swift_dynamicCast(&v121, &v119, (char *)&type metadata for Any + 8, v18, 6LL) & 1) == 0)
  {
LABEL_11:
    unint64_t v22 = sub_100187014();
    uint64_t v23 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v22, 0LL, 0LL);
    *(_DWORD *)uint64_t v24 = 10;
    *(void *)(v24 + 8) = 0xD000000000000019LL;
    *(void *)(v24 + 16) = 0x8000000100510520LL;
    swift_willThrow(v23);
    return a2;
  }

  id v19 = v121;
  unint64_t v20 = v116;
  unint64_t v21 = sub_100449978(a1, (unint64_t)a2);
  if (v20)
  {

    return a2;
  }

  a2 = (void *)v21;
  uint64_t v25 = *(uint64_t *)((char *)&v17->isa + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_type);
  if ((unint64_t)(v25 - 1) > 3)
  {
    if (v25 == 8 && !*((_BYTE *)&v17->isa + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_role))
    {
      if ([v19 finalizeRegistration])
      {
        unint64_t v31 = sub_100187014();
        uint64_t v32 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v31, 0LL, 0LL);
        *(_DWORD *)uint64_t v33 = 10;
        *(void *)(v33 + 8) = 0xD00000000000001FLL;
        *(void *)(v33 + 16) = 0x800000010050A810LL;
        swift_willThrow(v32);

        return a2;
      }

      id v113 = v19;
      uint64_t v49 = v115[3];
      uint64_t v48 = v115[4];
      uint64_t v50 = sub_10019A708(v115, v49);
      uint64_t v51 = *(void *)(v49 - 8);
      __chkstk_darwin(v50);
      id v53 = (char *)v107 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v51 + 16))(v53);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v48);
      uint64_t v55 = v54;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v49);
      if (v55)
      {
        NSString v57 = String._bridgeToObjectiveC()();
        *(void *)&double v56 = swift_bridgeObjectRelease(v55).n128_u64[0];
      }

      else
      {
        NSString v57 = 0LL;
      }

      id v71 = objc_msgSend(v114, "remoteLTKForDeviceID:", v57, v56);

      id v19 = v113;
      Class v72 = v117;
      if (v71)
      {
        uint64_t v73 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v71);
        unint64_t v75 = v74;

        sub_10019BA8C(v73, v75);
        v76.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
        unint64_t v116 = v75;
        sub_100189B20(v73, v75);
      }

      else
      {
        v76.super.Class isa = 0LL;
        uint64_t v73 = 0LL;
        unint64_t v116 = 0xF000000000000000LL;
      }

      uint64_t v112 = sub_10001204C(v76.super.isa);

      if (qword_1006443F8 != -1) {
        swift_once(&qword_1006443F8, sub_100449368);
      }
      uint64_t v84 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v84, (uint64_t)qword_100655DD8);
      uint64_t v85 = swift_retain_n(v72, 2LL);
      uint64_t v86 = (os_log_s *)Logger.logObject.getter(v85);
      int v87 = static os_log_type_t.default.getter(v86);
      if (os_log_type_enabled(v86, (os_log_type_t)v87))
      {
        os_log_t v108 = v86;
        int v110 = v87;
        uint64_t v111 = v73;
        uint64_t v88 = swift_slowAlloc(22LL, -1LL);
        uint64_t v109 = swift_slowAlloc(64LL, -1LL);
        *(void *)&v118[0] = v109;
        *(_DWORD *)uint64_t v88 = 136315394;
        uint64_t v89 = v115[3];
        uint64_t v90 = v115[4];
        Swift::String v91 = sub_10019A708(v115, v89);
        v107[1] = v107;
        uint64_t v92 = *(void *)(v89 - 8);
        __chkstk_darwin(v91);
        unint64_t v94 = (char *)v107 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0LL);
        (*(void (**)(char *))(v92 + 16))(v94);
        uint64_t v95 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 8))(v89, v90);
        uint64_t v97 = v96;
        (*(void (**)(char *, uint64_t))(v92 + 8))(v94, v89);
        if (!v97)
        {
          uint64_t v95 = 0xD000000000000015LL;
          uint64_t v119 = 0LL;
          v120[0] = (const char *)0xE000000000000000LL;
          _StringGuts.grow(_:)(17LL);
          swift_bridgeObjectRelease(v120[0]);
          uint64_t v97 = (const char *)0x80000001005046B0LL;
        }

        uint64_t v119 = sub_10018CDB4(v95, (unint64_t)v97, (uint64_t *)v118);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, v120, v88 + 4, v88 + 12);
        swift_release_n(v117, 2LL);
        swift_bridgeObjectRelease(v97);
        *(_WORD *)(v88 + 12) = 2080;
        char v98 = (id)sub_1000124BC(v112);
        if (v98)
        {
          uint64_t v99 = (__CFString *)v98;
          uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
          __int128 v102 = v101;
        }

        else
        {
          uint64_t v100 = 0xD000000000000015LL;
          uint64_t v119 = 0LL;
          v120[0] = (const char *)0xE000000000000000LL;
          _StringGuts.grow(_:)(17LL);
          swift_bridgeObjectRelease(v120[0]);
          __int128 v102 = (const char *)0x80000001005046B0LL;
        }

        uint64_t v119 = sub_10018CDB4(v100, (unint64_t)v102, (uint64_t *)v118);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, v120, v88 + 14, v88 + 22);
        swift_bridgeObjectRelease(v102);
        os_log_t v103 = v108;
        _os_log_impl( (void *)&_mh_execute_header,  v108,  (os_log_type_t)v110,  "Device %s has been registered (peer state is %s)",  (uint8_t *)v88,  0x16u);
        uint64_t v104 = v109;
        swift_arrayDestroy(v109, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v104, -1LL, -1LL);
        swift_slowDealloc(v88, -1LL, -1LL);

        id v19 = v113;
        uint64_t v73 = v111;
      }

      else
      {

        swift_release_n(v72, 2LL);
      }

      unint64_t v105 = v116;
      id v34 = v114;
      uint64_t v35 = &selRef__runTransferDone;
      if (v116 >> 60 == 15)
      {
        Class isa = 0LL;
      }

      else
      {
        sub_10019BA8C(v73, v116);
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        sub_100189B0C(v73, v105);
      }

      sub_1000122CC(isa);

      sub_100189B0C(v73, v105);
      goto LABEL_23;
    }

    goto LABEL_21;
  }

  sub_100449CC8();
  if (v25 != 3)
  {
LABEL_21:
    id v34 = v114;
    uint64_t v35 = &selRef__runTransferDone;
    goto LABEL_22;
  }

  id v26 = [v19 generateEscrowSecret];
  id v113 = v19;
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v26);
    unint64_t v30 = v29;

    sub_10019BA8C(v28, v30);
    Class v117 = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v111 = v28;
    uint64_t v112 = v30;
    id v26 = (id)sub_100189B20(v28, v30);
  }

  else
  {
    Class v117 = 0LL;
    uint64_t v111 = 0LL;
    uint64_t v112 = 0xF000000000000000LL;
  }

  UUID.uuidString.getter(v26);
  uint64_t v59 = v58;
  NSString v60 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v59);
  uint64_t v62 = v115[3];
  uint64_t v61 = v115[4];
  uint64_t v63 = sub_10019A708(v115, v62);
  unint64_t v116 = (unint64_t)v107;
  uint64_t v64 = *(void *)(v62 - 8);
  __chkstk_darwin(v63);
  char v66 = (char *)v107 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v64 + 16))(v66);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v62, v61);
  Swift::String v68 = v67;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v62);
  if (v68)
  {
    NSString v70 = String._bridgeToObjectiveC()();
    *(void *)&double v69 = swift_bridgeObjectRelease(v68).n128_u64[0];
  }

  else
  {
    NSString v70 = 0LL;
  }

  uint64_t v35 = &selRef__runTransferDone;
  Class v77 = v117;
  id v34 = v114;
  unsigned __int8 v78 = objc_msgSend( v114,  "storeEscrowSecret:pairingID:deviceID:requiresUnlock:",  v117,  v60,  v70,  0,  v69);

  if ((v78 & 1) == 0)
  {
    if (qword_1006443F8 != -1) {
      swift_once(&qword_1006443F8, sub_100449368);
    }
    uint64_t v79 = type metadata accessor for Logger(0LL);
    uint64_t v80 = sub_100186DE4(v79, (uint64_t)qword_100655DD8);
    uint64_t v81 = (void *)Logger.logObject.getter(v80);
    os_log_type_t v82 = static os_log_type_t.error.getter(v81);
    if (!os_log_type_enabled((os_log_t)v81, v82))
    {
      sub_100189B0C(v111, v112);

      id v19 = v113;
      goto LABEL_22;
    }

    uint64_t v83 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v83 = 0;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v81, v82, "Error storing escrow secret", v83, 2u);
    swift_slowDealloc(v83, -1LL, -1LL);
  }

  sub_100189B0C(v111, v112);
  id v19 = v113;
LABEL_22:
  [v19 confirmSession];
LABEL_23:
  id v113 = v19;
  id result = [v34 v35[189]];
  if (result)
  {
    char v36 = result;
    uint64_t v37 = v115[3];
    uint64_t v38 = v115[4];
    unint64_t v39 = sub_10019A708(v115, v37);
    uint64_t v40 = *(void *)(v37 - 8);
    __chkstk_darwin(v39);
    double v42 = (char *)v107 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v40 + 16))(v42);
    uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    unint64_t v45 = v44;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v37);
    uint64_t v119 = v43;
    v120[0] = v45;
    uint64_t v46 = sub_100183098(&qword_1006462D8);
    uint64_t v47 = Optional._bridgeToObjectiveC()(v46);
    objc_msgSend(v36, "removeObjectForKey:", v47, swift_bridgeObjectRelease(v45).n128_f64[0]);

    swift_unknownObjectRelease(v47);
    return a2;
  }

uint64_t sub_100449368()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100655DD8);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100655DD8);
  if (qword_100644020 != -1) {
    swift_once(&qword_100644020, sub_10023A520);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1004493F8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    uint64_t v5 = sub_100183098(&qword_100645710);
    uint64_t v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0LL, 0LL);
    *uint64_t v7 = a3;
    id v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }

  else
  {
    if (a2)
    {
      id v11 = a2;
      uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)(a2);
      unint64_t v14 = v13;
    }

    else
    {
      uint64_t v12 = 0LL;
      unint64_t v14 = 0xF000000000000000LL;
    }

    v15[0] = v12;
    v15[1] = v14;
    sub_1001870BC((uint64_t)v15, *(void *)(*(void *)(v3 + 64) + 40LL), &qword_100645150);
    return swift_continuation_throwingResume(v3);
  }

void sub_1004494C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  uint64_t v37 = 0LL;
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  uint64_t v5 = sub_10019A708( (void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice),  v4);
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v37 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v37 - v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3);
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  if (v10)
  {
    NSString v12 = String._bridgeToObjectiveC()();
    *(void *)&double v11 = swift_bridgeObjectRelease(v10).n128_u64[0];
  }

  else
  {
    NSString v12 = 0LL;
  }

  uint64_t v13 = 0xD000000000000011LL;
  id v14 = objc_retainAutoreleasedReturnValue( objc_msgSend( v2,  "aksPairingSessionForDeviceID:originator:errorCode:requiresAttestation:requiresEscrow:",  v12,  *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_role),  &v37,  (unint64_t)(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_type)
                             - 5LL) < 3,
            0LL,
            v11));

  if (!v14)
  {
    unint64_t v19 = sub_100187014();
    uint64_t v20 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v19, 0LL, 0LL);
    *(_DWORD *)uint64_t v21 = 10;
    *(void *)(v21 + 8) = 0xD000000000000026LL;
    *(void *)(v21 + 16) = 0x8000000100510540LL;
    swift_willThrow(v20);
    return;
  }

  NSString v15 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession);
  *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession) = v14;
  id v16 = v14;

  uint64_t v17 = v37;
  if (v37 > 147)
  {
    if (v37 == 148)
    {
      uint64_t v13 = 0xD000000000000012LL;
      unint64_t v22 = "Missing remote LTK";
    }

    else
    {
      if (v37 != 149) {
        goto LABEL_13;
      }
      unint64_t v22 = "Missing local LTK";
    }

    unint64_t v18 = (const char *)((unint64_t)(v22 - 32) | 0x8000000000000000LL);
    goto LABEL_18;
  }

  if (v37)
  {
    if (v37 == 101)
    {
      unint64_t v18 = (const char *)0xEB00000000657275LL;
      uint64_t v13 = 0x6C69616620534B41LL;
LABEL_18:
      if (qword_1006443F8 != -1) {
        swift_once(&qword_1006443F8, sub_100449368);
      }
      uint64_t v29 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v29, (uint64_t)qword_100655DD8);
      swift_bridgeObjectRetain_n(v18, 2LL);
      unint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
      os_log_type_t v32 = static os_log_type_t.error.getter(v31);
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v34 = swift_slowAlloc(32LL, -1LL);
        uint64_t v40 = v34;
        *(_DWORD *)uint64_t v33 = 136315138;
        swift_bridgeObjectRetain(v18);
        uint64_t v38 = sub_10018CDB4(v13, (unint64_t)v18, &v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, v39, v33 + 4, v33 + 12);
        swift_bridgeObjectRelease_n(v18, 3LL);
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s", v33, 0xCu);
        swift_arrayDestroy(v34, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v34, -1LL, -1LL);
        swift_slowDealloc(v33, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(v18, 2LL);
      }

      unint64_t v35 = sub_100187014();
      uint64_t v27 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v35, 0LL, 0LL);
      *(_DWORD *)uint64_t v36 = 10;
      *(void *)(v36 + 8) = v13;
      *(void *)(v36 + 16) = v18;
      goto LABEL_24;
    }

unint64_t sub_100449978(uint64_t a1, unint64_t a2)
{
  id v4 =  objc_msgSend( *(id *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager),  "activeAKSSessions",  a1);
  if (!v4)
  {
    __break(1u);
LABEL_21:
    __break(1u);
  }

  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  id v8 = sub_10019A708( (void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice),  v6);
  uint64_t v9 = *(void *)(v6 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v31 - v10;
  (*(void (**)(char *))(v9 + 16))((char *)&v31 - v10);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  if (!v12) {
    goto LABEL_21;
  }
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v6);
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = objc_msgSend(v5, "valueForKey:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

  if (v15)
  {
    _bridgeAnyObjectToAny(_:)(v33, v15);
    swift_unknownObjectRelease(v15);
  }

  else
  {
    memset(v33, 0, sizeof(v33));
  }

  sub_1001870BC((uint64_t)v33, (uint64_t)v34, (uint64_t *)&unk_100646550);
  if (!v34[3])
  {
    sub_1002D2200((uint64_t)v34);
    goto LABEL_11;
  }

  unint64_t v16 = sub_10044AEC4();
  if ((swift_dynamicCast(&v32, v34, (char *)&type metadata for Any + 8, v16, 6LL) & 1) == 0)
  {
LABEL_11:
    unint64_t v19 = sub_100187014();
    uint64_t v20 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v19, 0LL, 0LL);
    *(_DWORD *)uint64_t v21 = 10;
    *(void *)(v21 + 8) = 0xD000000000000019LL;
    *(void *)(v21 + 16) = 0x8000000100510520LL;
    swift_willThrow(v20);
    return a2;
  }

  uint64_t v17 = v32;
  if (a2 >> 60 == 15) {
    Class isa = 0LL;
  }
  else {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
  }
  v34[0] = 0LL;
  unsigned __int8 v22 = [v17 stepSessionWithData:isa outputData:v34];

  id v23 = v34[0];
  a2 = (unint64_t)v23;
  if ((v22 & 1) != 0)
  {
    if (!v23)
    {
      unint64_t v27 = sub_100187014();
      uint64_t v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v27, 0LL, 0LL);
      *(_DWORD *)uint64_t v29 = 10;
      strcpy((char *)(v29 + 8), "No step data");
      *(_BYTE *)(v29 + 21) = 0;
      *(_WORD *)(v29 + 22) = -5120;
      swift_willThrow(v28);
    }
  }

  else
  {
    unint64_t v24 = sub_100187014();
    uint64_t v25 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v24, 0LL, 0LL);
    *(_DWORD *)uint64_t v26 = 10;
    *(void *)(v26 + 8) = 0xD000000000000017LL;
    *(void *)(v26 + 16) = 0x800000010050FE20LL;
    swift_willThrow(v25);
  }

  return a2;
}

void sub_100449CC8()
{
  id v40 = *(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  id v1 = [v40 activeAKSSessions];
  if (!v1)
  {
    __break(1u);
    goto LABEL_18;
  }

  uint64_t v2 = v1;
  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  uint64_t v6 = sub_10019A708( (void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice),  v4);
  uint64_t v7 = *(void *)(v4 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v38 - v8;
  (*(void (**)(char *))(v7 + 16))((char *)v38 - v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  if (!v10)
  {
LABEL_18:
    __break(1u);
    return;
  }

  double v11 = v10;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = objc_msgSend(v2, "valueForKey:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  if (v13)
  {
    _bridgeAnyObjectToAny(_:)(v41, v13);
    swift_unknownObjectRelease(v13);
  }

  else
  {
    memset(v41, 0, sizeof(v41));
  }

  sub_1001870BC((uint64_t)v41, (uint64_t)v42, (uint64_t *)&unk_100646550);
  if (!v43)
  {
    sub_1002D2200((uint64_t)v42);
    goto LABEL_12;
  }

  unint64_t v14 = sub_10044AEC4();
  if ((swift_dynamicCast(&v44, v42, (char *)&type metadata for Any + 8, v14, 6LL) & 1) == 0)
  {
LABEL_12:
    unint64_t v32 = sub_100187014();
    uint64_t v33 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v32, 0LL, 0LL);
    *(_DWORD *)uint64_t v34 = 10;
    *(void *)(v34 + 8) = 0xD000000000000019LL;
    *(void *)(v34 + 16) = 0x8000000100510520LL;
    swift_willThrow(v33);
    return;
  }

  id v15 = v44;
  id v16 = [v44 generateSessionToken];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v16);
    unint64_t v20 = v19;

    uint64_t v39 = v18;
    v21.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v23 = v3[3];
    uint64_t v22 = v3[4];
    unint64_t v24 = sub_10019A708(v3, v23);
    v38[1] = v38;
    uint64_t v25 = *(void *)(v23 - 8);
    __chkstk_darwin(v24);
    unint64_t v27 = (char *)v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v25 + 16))(v27);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v22);
    uint64_t v29 = v28;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v23);
    if (v29)
    {
      NSString v31 = String._bridgeToObjectiveC()();
      *(void *)&double v30 = swift_bridgeObjectRelease(v29).n128_u64[0];
    }

    else
    {
      NSString v31 = 0LL;
    }

    objc_msgSend(v40, "storeRangingKey:forDeviceID:", v21.super.isa, v31, v30);

    sub_100189B20(v39, v20);
  }

  else
  {
    unint64_t v35 = sub_100187014();
    uint64_t v36 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v35, 0LL, 0LL);
    *(_DWORD *)uint64_t v37 = 10;
    *(void *)(v37 + 8) = 0xD00000000000001ELL;
    *(void *)(v37 + 16) = 0x8000000100508660LL;
    swift_willThrow(v36);
  }
}

void sub_10044A04C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  uint64_t v5 = sub_10019A708( (void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice),  v4);
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v22 - v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3);
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  if (v10)
  {
    NSString v12 = String._bridgeToObjectiveC()();
    *(void *)&double v11 = swift_bridgeObjectRelease(v10).n128_u64[0];
  }

  else
  {
    NSString v12 = 0LL;
  }

  id v13 =  objc_msgSend( v2,  "aksRegistrationSessionForDeviceID:originator:",  v12,  *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_role),  v11);

  if (v13)
  {
    unint64_t v14 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession);
    *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession) = v13;
    id v15 = v13;

    if (([v15 sessionIsValid] & 1) == 0)
    {
      unint64_t v16 = sub_100187014();
      uint64_t v17 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v16, 0LL, 0LL);
      *(_DWORD *)uint64_t v18 = 10;
      *(void *)(v18 + 8) = 0xD000000000000013LL;
      *(void *)(v18 + 16) = 0x800000010050FEA0LL;
      swift_willThrow(v17);
    }
  }

  else
  {
    unint64_t v19 = sub_100187014();
    uint64_t v20 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v19, 0LL, 0LL);
    *(_DWORD *)uint64_t v21 = 10;
    *(void *)(v21 + 8) = 0xD000000000000029LL;
    *(void *)(v21 + 16) = 0x80000001005104F0LL;
    swift_willThrow(v20);
  }

uint64_t sub_10044A244()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_sessionID;
  uint64_t v2 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);

  sub_10018709C((void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice));
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_10044A2C4()
{
  return type metadata accessor for SDAuthenticationAKSPairingSession(0LL);
}

uint64_t type metadata accessor for SDAuthenticationAKSPairingSession(uint64_t a1)
{
  uint64_t result = qword_100655E18;
  if (!qword_100655E18) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationAKSPairingSession);
  }
  return result;
}

uint64_t sub_10044A308(uint64_t a1)
{
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[3] = "(";
    void v4[4] = &unk_1004DC1F0;
    v4[5] = &unk_1004DC208;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 6LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

void sub_10044A3AC(char a1, uint64_t a2, void *a3)
{
  if (qword_1006443F8 != -1) {
    swift_once(&qword_1006443F8, sub_100449368);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v6, (uint64_t)qword_100655DD8);
  uint64_t v7 = swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc(22LL, -1LL);
    uint64_t v11 = swift_slowAlloc(64LL, -1LL);
    uint64_t v39 = v11;
    *(_DWORD *)uint64_t v10 = 136315394;
    swift_bridgeObjectRetain(a3);
    uint64_t v41 = sub_10018CDB4(a2, (unint64_t)a3, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease_n(a3, 3LL);
    *(_WORD *)(v10 + 12) = 2080;
    if ((a1 & 1) != 0) {
      uint64_t v12 = 7955787LL;
    }
    else {
      uint64_t v12 = 1801678668LL;
    }
    if ((a1 & 1) != 0) {
      unint64_t v13 = 0xE300000000000000LL;
    }
    else {
      unint64_t v13 = 0xE400000000000000LL;
    }
    uint64_t v41 = sub_10018CDB4(v12, v13, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v10 + 14, v10 + 22);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Disabling pairing with %s as %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a3, 2LL);
  }

  id v14 = [(id)objc_opt_self(SDAutoUnlockAKSManager) sharedManager];
  if (v14)
  {
    id v15 = v14;
    if ((a1 & 1) != 0)
    {
      uint64_t v29 = swift_bridgeObjectRetain_n(a3, 2LL);
      double v30 = (os_log_s *)Logger.logObject.getter(v29);
      os_log_type_t v31 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v30, v31))
      {
        unint64_t v32 = (unint64_t)a3;
        uint64_t v33 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v34 = swift_slowAlloc(32LL, -1LL);
        *(_DWORD *)uint64_t v33 = 136315138;
        uint64_t v39 = v34;
        swift_bridgeObjectRetain(v32);
        uint64_t v41 = sub_10018CDB4(a2, v32, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v33 + 4, v33 + 12);
        swift_bridgeObjectRelease_n(v32, 3LL);
        _os_log_impl( (void *)&_mh_execute_header,  v30,  v31,  "Removing escrow, ranging, LTKs and pairingID for %s",  v33,  0xCu);
        swift_arrayDestroy(v34, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v34, -1LL, -1LL);
        swift_slowDealloc(v33, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(a3, 2LL);
      }

      NSString v35 = String._bridgeToObjectiveC()();
      [v15 deleteEscrowSecretForDeviceID:v35];

      NSString v36 = String._bridgeToObjectiveC()();
      [v15 deleteRangingKeyForDeviceID:v36];

      NSString v37 = String._bridgeToObjectiveC()();
      [v15 removeRemoteLTKForDeviceID:v37];

      NSString v38 = String._bridgeToObjectiveC()();
      [v15 removePairingRecordForWatchID:v38];
    }

    else
    {
      NSString v16 = String._bridgeToObjectiveC()();
      unsigned __int8 v17 = [v15 disablePairingWithKeyDevice:v16];

      if ((v17 & 1) == 0)
      {
        uint64_t v39 = 0LL;
        unint64_t v40 = 0xE000000000000000LL;
        _StringGuts.grow(_:)(62LL);
        v18._countAndFlagsBits = 0xD00000000000002BLL;
        v18._object = (void *)0x8000000100510450LL;
        String.append(_:)(v18);
        v19._countAndFlagsBits = a2;
        v19._object = a3;
        String.append(_:)(v19);
        v20._object = (void *)0x8000000100510480LL;
        v20._countAndFlagsBits = 0xD000000000000011LL;
        String.append(_:)(v20);
        uint64_t v21 = v39;
        unint64_t v22 = v40;
        unint64_t v23 = sub_100187014();
        uint64_t v24 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v23, 0LL, 0LL);
        *(_DWORD *)uint64_t v25 = 10;
        *(void *)(v25 + 8) = v21;
        *(void *)(v25 + 16) = v22;
        swift_willThrow(v24);
      }
    }
  }

  else
  {
    unint64_t v26 = sub_100187014();
    uint64_t v27 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v26, 0LL, 0LL);
    *(_DWORD *)uint64_t v28 = 10;
    *(void *)(v28 + 8) = 0xD000000000000025LL;
    *(void *)(v28 + 16) = 0x80000001005103A0LL;
    swift_willThrow(v27);
  }

uint64_t sub_10044A908(uint64_t a1, void *a2, unint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = [(id)objc_opt_self(SDAutoUnlockAKSManager) sharedManager];
  if (!v8)
  {
    unint64_t v18 = sub_100187014();
    uint64_t v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v18, 0LL, 0LL);
    *(_DWORD *)uint64_t v20 = 10;
    *(void *)(v20 + 8) = 0xD000000000000025LL;
    *(void *)(v20 + 16) = 0x80000001005103A0LL;
    swift_willThrow(v19);
    return (uint64_t)v4;
  }

  uint64_t v10 = v8;
  sub_10034F3D4(a3, v9);
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 pairingIDForWatchID:v11];

  if (!v12)
  {
    _StringGuts.grow(_:)(44LL);
    swift_bridgeObjectRelease(0xE000000000000000LL);
    Swift::String v54 = (os_log_s *)0xD00000000000001DLL;
    unint64_t v55 = 0x80000001005103D0LL;
    v21._countAndFlagsBits = a1;
    v21._object = a2;
    String.append(_:)(v21);
    unint64_t v22 = 0xE400000000000000LL;
    v23._countAndFlagsBits = 544432416LL;
    v23._object = (void *)0xE400000000000000LL;
    String.append(_:)(v23);
    char v25 = sub_10034F3D4(a3, v24);
    BOOL v26 = (v25 & 1) == 0;
    if ((v25 & 1) != 0) {
      uint64_t v27 = 7955787LL;
    }
    else {
      uint64_t v27 = 1801678668LL;
    }
    if (!v26) {
      unint64_t v22 = 0xE300000000000000LL;
    }
    unint64_t v28 = v22;
    String.append(_:)(*(Swift::String *)&v27);
    swift_bridgeObjectRelease(v22);
    v29._countAndFlagsBits = 0x65636976656420LL;
    v29._object = (void *)0xE700000000000000LL;
    String.append(_:)(v29);
    uint64_t v4 = v54;
    unint64_t v30 = v55;
    unint64_t v31 = sub_100187014();
    uint64_t v32 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v31, 0LL, 0LL);
    *(_DWORD *)uint64_t v33 = 1;
    *(void *)(v33 + 8) = v4;
    *(void *)(v33 + 16) = v30;
    swift_willThrow(v32);
    goto LABEL_12;
  }

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  unint64_t v15 = v14;

  char v17 = sub_10034F3D4(a3, v16);
  sub_10044A3AC(v17 & 1, a1, a2);
  if (v3)
  {
LABEL_4:
    swift_bridgeObjectRelease(v15);
LABEL_12:

    return (uint64_t)v4;
  }

  id v35 = [objc_allocWithZone((Class)SDAuthenticationPairingDisable) init];
  if (!v35)
  {
    unint64_t v42 = sub_100187014();
    uint64_t v43 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v42, 0LL, 0LL);
    *(_DWORD *)uint64_t v44 = 10;
    *(void *)(v44 + 8) = 0xD000000000000020LL;
    *(void *)(v44 + 16) = 0x80000001005103F0LL;
    swift_willThrow(v43);
    goto LABEL_4;
  }

  if (!HIDWORD(a3))
  {
    NSString v36 = v35;
    [v35 setType:a3];
    NSString v37 = String._bridgeToObjectiveC()();
    [v36 setPairingID:v37];

    if (qword_1006443F8 != -1) {
      swift_once(&qword_1006443F8, sub_100449368);
    }
    uint64_t v38 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v38, (uint64_t)qword_100655DD8);
    swift_bridgeObjectRetain_n(a2, 2LL);
    uint64_t v39 = swift_bridgeObjectRetain(v15);
    uint64_t v4 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v40))
    {
      os_log_type_t type = v40;
      uint64_t v41 = swift_slowAlloc(22LL, -1LL);
      uint64_t v53 = swift_slowAlloc(64LL, -1LL);
      *(_DWORD *)uint64_t v41 = 136315394;
      Swift::String v54 = (os_log_s *)v53;
      swift_bridgeObjectRetain(a2);
      uint64_t v56 = sub_10018CDB4(a1, (unint64_t)a2, (uint64_t *)&v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v41 + 4, v41 + 12);
      swift_bridgeObjectRelease_n(a2, 3LL);
      *(_WORD *)(v41 + 12) = 2080;
      swift_bridgeObjectRetain(v15);
      uint64_t v56 = sub_10018CDB4(v13, v15, (uint64_t *)&v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v41 + 14, v41 + 22);
      swift_bridgeObjectRelease_n(v15, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v4,  type,  "Sending disable message to %s with pairingID: %s",  (uint8_t *)v41,  0x16u);
      swift_arrayDestroy(v53, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v53, -1LL, -1LL);
      swift_slowDealloc(v41, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v15, 2LL);
      swift_bridgeObjectRelease_n(a2, 2LL);
    }

    id v45 = [v36 data];
    if (v45)
    {
      uint64_t v46 = v45;
      uint64_t v4 = (os_log_s *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v45);
      unint64_t v48 = v47;

      sub_10019BA8C((uint64_t)v4, v48);
      sub_100189B20((uint64_t)v4, v48);
    }

    else
    {
      unint64_t v49 = sub_100187014();
      uint64_t v50 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v49, 0LL, 0LL);
      *(_DWORD *)uint64_t v51 = 10;
      *(void *)(v51 + 8) = 0xD000000000000028LL;
      *(void *)(v51 + 16) = 0x8000000100510420LL;
      swift_willThrow(v50);
    }

    return (uint64_t)v4;
  }

  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Not enough bits to represent the passed value",  45LL,  2LL,  "Swift/Integers.swift",  20LL,  2,  3455LL,  0);
  __break(1u);
  return result;
}

unint64_t sub_10044AEC4()
{
  unint64_t result = qword_100655ED0;
  if (!qword_100655ED0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SDAutoUnlockAKSSession);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100655ED0);
  }

  return result;
}

uint64_t sub_10044AF00(void *a1)
{
  id v2 = [(id)objc_opt_self(SDAutoUnlockAKSManager) sharedManager];
  if (!v2)
  {
    unint64_t v12 = sub_100187014();
    uint64_t v13 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v12, 0LL, 0LL);
    *(_DWORD *)uint64_t v14 = 10;
    *(void *)(v14 + 8) = 0xD000000000000025LL;
    *(void *)(v14 + 16) = 0x80000001005103A0LL;
    swift_willThrow(v13);
    return v15 & 1;
  }

  unint64_t v3 = v2;
  unint64_t v4 = sub_1003500F4([a1 type]);
  if ((v5 & 1) != 0)
  {
    unint64_t v16 = sub_100187014();
    uint64_t v17 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v16, 0LL, 0LL);
    *(_DWORD *)uint64_t v18 = 10;
    *(void *)(v18 + 8) = 0xD00000000000001CLL;
    *(void *)(v18 + 16) = 0x8000000100510600LL;
    swift_willThrow(v17);

    return v15 & 1;
  }

  char v6 = sub_10034F3D4(v4, v5);
  NSString v7 = String._bridgeToObjectiveC()();
  if ((v6 & 1) != 0)
  {
    id v19 = [v3 keyPairingIDForDeviceID:v7];

    if (v19)
    {
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      NSString v11 = v20;
    }

    else
    {
      uint64_t v9 = 0LL;
      NSString v11 = 0LL;
    }

    NSString v21 = String._bridgeToObjectiveC()();
    id v22 = [v3 pairingIDForWatchID:v21];

    if (v22)
    {
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      char v25 = v24;

      if (v11)
      {
LABEL_14:
        swift_bridgeObjectRelease(v25);
        goto LABEL_17;
      }
    }

    else
    {
      uint64_t v23 = 0LL;
      char v25 = 0LL;
      if (v11) {
        goto LABEL_14;
      }
    }

    uint64_t v9 = v23;
    NSString v11 = v25;
    goto LABEL_17;
  }

  id v8 = [v3 pairingIDForWatchID:v7];

  if (v8)
  {
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    NSString v11 = v10;
  }

  else
  {
    uint64_t v9 = 0LL;
    NSString v11 = 0LL;
  }

uint64_t sub_10044B53C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100655EE0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100655EE0);
  if (qword_100643FE8 != -1) {
    swift_once(&qword_100643FE8, sub_10023A448);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_100669628);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t type metadata accessor for SDAirDropAgentClientToken()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary25SDAirDropAgentClientToken);
}

uint64_t sub_10044B944()
{
  return type metadata accessor for SDAirDropAgentClient(0LL);
}

uint64_t type metadata accessor for SDAirDropAgentClient(uint64_t a1)
{
  uint64_t result = qword_100655F60;
  if (!qword_100655F60) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropAgentClient);
  }
  return result;
}

uint64_t sub_10044B988(uint64_t a1)
{
  v5[0] = "\b";
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    v5[1] = *(void *)(result - 8) + 64LL;
    v5[2] = &unk_1004DC270;
    void v5[3] = (char *)&value witness table for Builtin.Int32 + 64;
    uint64_t result = type metadata accessor for Date(319LL);
    if (v4 <= 0x3F)
    {
      v5[4] = *(void *)(result - 8) + 64LL;
      v5[5] = &unk_1004DC288;
      void v5[6] = (char *)&value witness table for () + 64;
      uint64_t result = swift_updateClassMetadata2(a1, 256LL, 7LL, v5, a1 + 80);
      if (!result) {
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t sub_10044BA4C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

id sub_10044BA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v51 = a4;
  uint64_t v49 = a3;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v50 = type metadata accessor for Date(0LL);
  uint64_t v48 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for UUID(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = v4;
  UUID.init()(v14);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))( &v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_id],  v13,  v10);
  *(void *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_client] = a1;
  uint64_t v15 = swift_unknownObjectRetain(a1);
  uint64_t v16 = nw_agent_client_copy_parameters(v15);
  if (v16)
  {
    uint64_t v17 = v16;
    type metadata accessor for NWParameters(0LL);
    uint64_t v18 = swift_unknownObjectRetain(v17);
    uint64_t v19 = NWParameters.__allocating_init(_:)(v18);
    uint64_t v20 = NWParameters.nw.getter(v19);
    uint64_t attributed_bundle_identifier = nw_parameters_get_attributed_bundle_identifier();
    if (attributed_bundle_identifier)
    {
      uint64_t v22 = String.init(cString:)(attributed_bundle_identifier);
      unint64_t v24 = v23;
      uint64_t v25 = swift_unknownObjectRelease(v20);
    }

    else
    {
      uint64_t v25 = swift_unknownObjectRelease(v20);
      uint64_t v22 = 0LL;
      unint64_t v24 = 0xE000000000000000LL;
    }

    NSString v36 = (uint64_t *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID];
    uint64_t *v36 = v22;
    v36[1] = v24;
    uint64_t v37 = NWParameters.nw.getter(v25);
    int pid = nw_parameters_get_pid();
    swift_release(v19);
    swift_unknownObjectRelease(v17);
    swift_unknownObjectRelease(v37);
  }

  else
  {
    uint64_t v47 = a2;
    if (qword_100644400 != -1) {
      swift_once(&qword_100644400, sub_10044B53C);
    }
    uint64_t v26 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v26, (uint64_t)qword_100655EE0);
    uint64_t v27 = v14;
    uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
    os_log_type_t v29 = static os_log_type_t.error.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      unint64_t v30 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v45 = swift_slowAlloc(32LL, -1LL);
      uint64_t v53 = v45;
      id v46 = ObjectType;
      *(_DWORD *)unint64_t v30 = 136315138;
      uint64_t v44 = v30 + 4;
      unint64_t v31 = sub_1003044A4();
      uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter(v10, v31);
      uint64_t v34 = (const char *)v33;
      uint64_t v52 = sub_10018CDB4(v32, v33, &v53);
      ObjectType = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v44, v30 + 12);

      swift_bridgeObjectRelease(v34);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Unable to parse parameters for agent client %s", v30, 0xCu);
      uint64_t v35 = v45;
      swift_arrayDestroy(v45, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1LL, -1LL);
      swift_slowDealloc(v30, -1LL, -1LL);
    }

    else
    {
    }

    int pid = 0;
    uint64_t v39 = &v27[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID];
    *(void *)uint64_t v39 = 0LL;
    *((void *)v39 + 1) = 0xE000000000000000LL;
    a2 = v47;
  }

  *(_DWORD *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid] = pid;
  id v40 = &v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_browseResponse];
  uint64_t v41 = v51;
  *(void *)id v40 = v49;
  *((void *)v40 + 1) = v41;
  uint64_t v42 = swift_retain();
  Date.init()(v42);
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))( &v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_startTime],  v9,  v50);
  v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_applicationServiceEndpointsOnly] = j__nw_browse_descriptor_get_discover_application_service_endpoints_only(a2);

  v54.receiver = v14;
  v54.super_class = ObjectType;
  return objc_msgSendSuper2(&v54, "init");
}

uint64_t sub_10044BE30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10044BE40(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

ValueMetadata *_s14descr1005E2651C12FeatureFlagsVMa()
{
  return &_s14descr1005E2651C12FeatureFlagsVN;
}

uint64_t _s13HelloResponseVwCP(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t _s13HelloResponseVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 254);
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 4);
  }
  int v4 = v3 - 3;
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t _s13HelloResponseVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(_BYTE *)(result + 5) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFE) {
      *(_BYTE *)(result + 5) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 4) = a2 + 2;
    }
  }

  return result;
}

ValueMetadata *_s13HelloResponseVMa()
{
  return &_s13HelloResponseVN;
}

void *sub_10044BF14(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v9);
  }

  else
  {
    uint64_t v7 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  }

  return a1;
}

uint64_t sub_10044BFA4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
}

uint64_t sub_10044BFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_10044C03C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + *(int *)(a3 + sub_100434350(*(void *)(v0 + 16), *(const char **)(v0 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10044C0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_10044C108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_10044C16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10044C178);
}

uint64_t sub_10044C178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  }
  unsigned int v10 = v9 - 2;
  else {
    return 0LL;
  }
}

uint64_t sub_10044C1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10044C208);
}

uint64_t sub_10044C208(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + sub_100434350(*(void *)(v0 + 16), *(const char **)(v0 + 24)) = a2 + 2;
  return result;
}

uint64_t _s12HelloRequestVMa(uint64_t a1)
{
  uint64_t result = qword_100655FC8;
  if (!qword_100655FC8) {
    return swift_getSingletonMetadata(a1, &_s12HelloRequestVMn);
  }
  return result;
}

uint64_t sub_10044C2BC(uint64_t a1)
{
  uint64_t result = type metadata accessor for SFAirDrop.TransferIdentifier(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.Int32 + 64;
    uint64_t v4[2] = &unk_1004DC2F0;
    swift_initStructMetadata(a1, 256LL, 3LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_10044C33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10044D114();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10044C398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10044D114();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_10044C3E4(void *a1, int a2)
{
  int v22 = a2;
  uint64_t v3 = sub_100183098(&qword_1006560E0);
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  __chkstk_darwin(v3);
  int v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_100183098(&qword_1006560E8);
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098(&qword_1006560F0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  sub_10019A708(a1, v13);
  unint64_t v15 = sub_10044DF1C();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &_s14descr1005E2651C11ContextTypeO10CodingKeysON,  &_s14descr1005E2651C11ContextTypeO10CodingKeysON,  v15,  v13,  v14);
  if ((v22 & 1) != 0)
  {
    char v24 = 1;
    unint64_t v17 = sub_10044DF60();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)( &_s14descr1005E2651C11ContextTypeO21PeerPaymentCodingKeysON,  &v24,  v9,  &_s14descr1005E2651C11ContextTypeO21PeerPaymentCodingKeysON,  v17);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v21);
  }

  else
  {
    char v23 = 0;
    unint64_t v16 = sub_10044DFA4();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)( &_s14descr1005E2651C11ContextTypeO17UnknownCodingKeysON,  &v23,  v9,  &_s14descr1005E2651C11ContextTypeO17UnknownCodingKeysON,  v16);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10044C5B4()
{
  if (*v0) {
    return 0x6D79615072656570LL;
  }
  else {
    return 0x6E776F6E6B6E75LL;
  }
}

uint64_t sub_10044C5F8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_10044D1A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10044C61C(uint64_t a1)
{
  unint64_t v2 = sub_10044DF1C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10044C644(uint64_t a1)
{
  unint64_t v2 = sub_10044DF1C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10044C66C(uint64_t a1)
{
  unint64_t v2 = sub_10044DF60();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10044C694(uint64_t a1)
{
  unint64_t v2 = sub_10044DF60();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10044C6BC(uint64_t a1)
{
  unint64_t v2 = sub_10044DFA4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10044C6E4(uint64_t a1)
{
  unint64_t v2 = sub_10044DFA4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10044C70C@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_10044D2A8(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_10044C738(void *a1)
{
  return sub_10044C3E4(a1, *v1);
}

uint64_t sub_10044C750(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100183098(&qword_100656070);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_10044DB30();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &_s12HelloRequestV10CodingKeysON,  &_s12HelloRequestV10CodingKeysON,  v11,  v9,  v10);
  char v20 = 0;
  uint64_t v12 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v13 = sub_10044DBF4(&qword_10064D900, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v20, v5, v12, v13);
  if (!v2)
  {
    uint64_t v14 = _s12HelloRequestVMa(0LL);
    int v19 = *(_DWORD *)(v3 + *(int *)(v14 + 20));
    HIBYTE(v18) = 1;
    unint64_t v15 = sub_10044DAA8();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v19, (char *)&v18 + 7, v5, &_s14descr1005E2651C12FeatureFlagsVN, v15);
    BYTE6(v18) = *(_BYTE *)(v3 + *(int *)(v14 + 24));
    BYTE5(v18) = 2;
    unint64_t v16 = sub_10044DAEC();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)( (char *)&v18 + 6,  (char *)&v18 + 5,  v5,  &_s14descr1005E2651C11ContextTypeON,  v16);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10044C8F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  __chkstk_darwin(v3);
  uint64_t v32 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v31 = sub_100183098(&qword_100656060);
  uint64_t v5 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = _s12HelloRequestVMa(0LL);
  uint64_t v9 = __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = *(int *)(v9 + 24);
  v11[v12] = 2;
  uint64_t v14 = a1[3];
  uint64_t v13 = a1[4];
  sub_10019A708(a1, v14);
  unint64_t v15 = sub_10044DB30();
  unint64_t v30 = v7;
  uint64_t v16 = v33;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &_s12HelloRequestV10CodingKeysON,  &_s12HelloRequestV10CodingKeysON,  v15,  v14,  v13);
  if (v16) {
    return sub_10018709C(a1);
  }
  uint64_t v33 = v12;
  uint64_t v17 = v5;
  uint64_t v18 = v28;
  HIBYTE(v34) = 0;
  uint64_t v19 = sub_10044DBF4(&qword_10064D8F0, (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  uint64_t v20 = v31;
  uint64_t v22 = v29;
  uint64_t v21 = v30;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v32, v29, (char *)&v34 + 7, v31, v29, v19);
  (*(void (**)(char *, void *, uint64_t))(v18 + 32))(v11, v32, v22);
  BYTE6(v34) = 1;
  unint64_t v23 = sub_10044DA20();
  KeyedDecodingContainer.decode<A>(_:forKey:)( &v34,  &_s14descr1005E2651C12FeatureFlagsVN,  (char *)&v34 + 6,  v20,  &_s14descr1005E2651C12FeatureFlagsVN,  v23);
  *(_DWORD *)&v11[*(int *)(v8 + 20)] = v34;
  BYTE4(v34) = 2;
  unint64_t v24 = sub_10044DA64();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)( (uint64_t *)((char *)&v34 + 5),  &_s14descr1005E2651C11ContextTypeON,  (char *)&v34 + 4,  v20,  &_s14descr1005E2651C11ContextTypeON,  v24);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v31);
  v11[v33] = BYTE5(v34);
  sub_10044DB74((uint64_t)v11, v27);
  sub_10018709C(a1);
  return sub_10044DBB8((uint64_t)v11);
}

uint64_t sub_10044CBBC()
{
  uint64_t v1 = 0x4665727574616566LL;
  if (*v0 != 1) {
    uint64_t v1 = 0x54747865746E6F63LL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705LL;
  }
}

uint64_t sub_10044CC1C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_10044D5D4(a1, a2);
  *a3 = result;
  return result;
}

void sub_10044CC40(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10044CC4C(uint64_t a1)
{
  unint64_t v2 = sub_10044DB30();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10044CC74(uint64_t a1)
{
  unint64_t v2 = sub_10044DB30();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10044CC9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10044C8F8(a1, a2);
}

uint64_t sub_10044CCB0(void *a1)
{
  return sub_10044C750(a1);
}

uint64_t sub_10044CCC4(uint64_t a1)
{
  v3._countAndFlagsBits = 0x6572204F4C4C4548LL;
  v3._object = (void *)0xEE00207473657571LL;
  String.append(_:)(v3);
  uint64_t v8 = *(unsigned int *)(v1 + *(int *)(a1 + 20));
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for UInt32,  &protocol witness table for UInt32);
  object = v4._object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(object);
  v6._countAndFlagsBits = 0LL;
  v6._object = (void *)0xE000000000000000LL;
  String.append(_:)(v6);
  return HIDWORD(v8);
}

uint64_t sub_10044CD84(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_100183098(&qword_100656048);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_10044D9DC();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &_s13HelloResponseV10CodingKeysON,  &_s13HelloResponseV10CodingKeysON,  v11,  v9,  v10);
  int v19 = a2;
  char v18 = 0;
  unint64_t v12 = sub_10044DAA8();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v19, &v18, v5, &_s14descr1005E2651C12FeatureFlagsVN, v12);
  if (!v2)
  {
    char v17 = BYTE4(a2);
    char v16 = 1;
    unint64_t v13 = sub_10044DAEC();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v17, &v16, v5, &_s14descr1005E2651C11ContextTypeON, v13);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10044CEC4()
{
  if (*v0) {
    return 0x54747865746E6F63LL;
  }
  else {
    return 0x4665727574616566LL;
  }
}

uint64_t sub_10044CF10@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_10044D740(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10044CF34(uint64_t a1)
{
  unint64_t v2 = sub_10044D9DC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10044CF5C(uint64_t a1)
{
  unint64_t v2 = sub_10044D9DC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10044CF84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10044D860(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(_BYTE *)(a2 + 4) = BYTE4(result);
  }

  return result;
}

uint64_t sub_10044CFB4(void *a1)
{
  return sub_10044CD84(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32));
}

uint64_t sub_10044CFD4()
{
  v0._countAndFlagsBits = 0x6572204F4C4C4548LL;
  v0._object = (void *)0xEF2065736E6F7073LL;
  String.append(_:)(v0);
  v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for UInt32,  &protocol witness table for UInt32);
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  v3._countAndFlagsBits = 0LL;
  v3._object = (void *)0xE000000000000000LL;
  String.append(_:)(v3);
  return 0LL;
}

unint64_t sub_10044D084()
{
  unint64_t result = qword_100656008;
  if (!qword_100656008)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC428, &_s14descr1005E2651C12FeatureFlagsVN);
    atomic_store(result, (unint64_t *)&qword_100656008);
  }

  return result;
}

unint64_t sub_10044D0CC()
{
  unint64_t result = qword_100656010;
  if (!qword_100656010)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC3F8, &_s14descr1005E2651C12FeatureFlagsVN);
    atomic_store(result, (unint64_t *)&qword_100656010);
  }

  return result;
}

unint64_t sub_10044D114()
{
  unint64_t result = qword_100656018;
  if (!qword_100656018)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC450, &_s14descr1005E2651C12FeatureFlagsVN);
    atomic_store(result, (unint64_t *)&qword_100656018);
  }

  return result;
}

unint64_t sub_10044D15C()
{
  unint64_t result = qword_100656020;
  if (!qword_100656020)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC488, &_s14descr1005E2651C12FeatureFlagsVN);
    atomic_store(result, (unint64_t *)&qword_100656020);
  }

  return result;
}

uint64_t sub_10044D1A0(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x6E776F6E6B6E75LL && a2 == 0xE700000000000000LL)
  {
    unint64_t v5 = 0xE700000000000000LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E776F6E6B6E75LL, 0xE700000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x6D79615072656570LL && a2 == 0xEB00000000746E65LL)
  {
    swift_bridgeObjectRelease(0xEB00000000746E65LL);
    return 1LL;
  }

  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6D79615072656570LL, 0xEB00000000746E65LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

uint64_t sub_10044D2A8(void *a1)
{
  uint64_t v34 = sub_100183098(&qword_1006560B0);
  uint64_t v32 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v35 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = sub_100183098(&qword_1006560B8);
  uint64_t v3 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  unint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_1006560C0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_10019A708(a1, v10);
  unint64_t v12 = sub_10044DF1C();
  uint64_t v13 = v36;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &_s14descr1005E2651C11ContextTypeO10CodingKeysON,  &_s14descr1005E2651C11ContextTypeO10CodingKeysON,  v12,  v10,  v11);
  if (v13) {
    goto LABEL_7;
  }
  uint64_t v14 = v5;
  uint64_t v15 = v35;
  uint64_t v31 = a1;
  uint64_t v36 = v7;
  uint64_t v16 = KeyedDecodingContainer.allKeys.getter(v6);
  char v17 = (const char *)v16;
  uint64_t v18 = v6;
  if (*(void *)(v16 + 16) != 1LL)
  {
    uint64_t v21 = type metadata accessor for DecodingError(0LL);
    swift_allocError(v21, &protocol witness table for DecodingError, 0LL, 0LL);
    uint64_t v22 = v9;
    unint64_t v24 = v23;
    sub_100183098(&qword_100650658);
    *unint64_t v24 = &_s14descr1005E2651C11ContextTypeON;
    uint64_t v25 = KeyedDecodingContainer.codingPath.getter(v6);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)( v25,  0xD00000000000002BLL,  0x800000010050BFA0LL,  0LL);
    uint64_t v26 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104LL))( v24,  enum case for DecodingError.typeMismatch(_:),  v21);
    swift_willThrow(v26);
    __n128 v27 = swift_bridgeObjectRelease(v17);
    (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v22, v6, v27);
    a1 = v31;
LABEL_7:
    sub_10018709C(a1);
    return v6;
  }

  uint64_t v6 = *(unsigned __int8 *)(v16 + 32);
  if ((v6 & 1) != 0)
  {
    char v38 = 1;
    unint64_t v19 = sub_10044DF60();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)( &_s14descr1005E2651C11ContextTypeO21PeerPaymentCodingKeysON,  &v38,  v18,  &_s14descr1005E2651C11ContextTypeO21PeerPaymentCodingKeysON,  v19);
    uint64_t v20 = v36;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v34);
  }

  else
  {
    char v37 = 0;
    unint64_t v28 = sub_10044DFA4();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)( &_s14descr1005E2651C11ContextTypeO17UnknownCodingKeysON,  &v37,  v18,  &_s14descr1005E2651C11ContextTypeO17UnknownCodingKeysON,  v28);
    uint64_t v20 = v36;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v33);
  }

  __n128 v30 = swift_bridgeObjectRelease(v17);
  (*(void (**)(char *, uint64_t, __n128))(v20 + 8))(v9, v18, v30);
  sub_10018709C(v31);
  return v6;
}

uint64_t sub_10044D5D4(uint64_t a1, unint64_t a2)
{
  if (a1 == 25705 && a2 == 0xE200000000000000LL)
  {
    unint64_t v5 = 0xE200000000000000LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705LL, 0xE200000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x4665727574616566LL && a2 == 0xEC0000007367616CLL)
  {
    unint64_t v7 = 0xEC0000007367616CLL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4665727574616566LL, 0xEC0000007367616CLL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v7 = a2;
    goto LABEL_14;
  }

  if (a1 == 0x54747865746E6F63LL && a2 == 0xEB00000000657079LL)
  {
    swift_bridgeObjectRelease(0xEB00000000657079LL);
    return 2LL;
  }

  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x54747865746E6F63LL, 0xEB00000000657079LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0) {
      return 2LL;
    }
    else {
      return 3LL;
    }
  }

uint64_t sub_10044D740(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x4665727574616566LL && a2 == 0xEC0000007367616CLL)
  {
    unint64_t v5 = 0xEC0000007367616CLL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4665727574616566LL, 0xEC0000007367616CLL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x54747865746E6F63LL && a2 == 0xEB00000000657079LL)
  {
    swift_bridgeObjectRelease(0xEB00000000657079LL);
    return 1LL;
  }

  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x54747865746E6F63LL, 0xEB00000000657079LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

uint64_t sub_10044D860(void *a1)
{
  uint64_t v3 = sub_100183098(&qword_100656028);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_10019A708(a1, v7);
  unint64_t v9 = sub_10044D9DC();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &_s13HelloResponseV10CodingKeysON,  &_s13HelloResponseV10CodingKeysON,  v9,  v7,  v8);
  if (v1) {
    return sub_10018709C(a1);
  }
  BYTE1(v17) = 0;
  unint64_t v10 = sub_10044DA20();
  KeyedDecodingContainer.decode<A>(_:forKey:)( (uint64_t *)((char *)&v17 + 2),  &_s14descr1005E2651C12FeatureFlagsVN,  (char *)&v17 + 1,  v3,  &_s14descr1005E2651C12FeatureFlagsVN,  v10);
  uint64_t v11 = *(unsigned int *)((char *)&v17 + 2);
  char v16 = 1;
  unint64_t v12 = sub_10044DA64();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)( &v17,  &_s14descr1005E2651C11ContextTypeON,  &v16,  v3,  &_s14descr1005E2651C11ContextTypeON,  v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v13 = v17;
  sub_10018709C(a1);
  return v11 | (v13 << 32);
}

unint64_t sub_10044D9DC()
{
  unint64_t result = qword_100656030;
  if (!qword_100656030)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC890, &_s13HelloResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100656030);
  }

  return result;
}

unint64_t sub_10044DA20()
{
  unint64_t result = qword_100656038;
  if (!qword_100656038)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC578, &_s14descr1005E2651C12FeatureFlagsVN);
    atomic_store(result, (unint64_t *)&qword_100656038);
  }

  return result;
}

unint64_t sub_10044DA64()
{
  unint64_t result = qword_100656040;
  if (!qword_100656040)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC868, &_s14descr1005E2651C11ContextTypeON);
    atomic_store(result, (unint64_t *)&qword_100656040);
  }

  return result;
}

unint64_t sub_10044DAA8()
{
  unint64_t result = qword_100656050;
  if (!qword_100656050)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC550, &_s14descr1005E2651C12FeatureFlagsVN);
    atomic_store(result, (unint64_t *)&qword_100656050);
  }

  return result;
}

unint64_t sub_10044DAEC()
{
  unint64_t result = qword_100656058;
  if (!qword_100656058)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC840, &_s14descr1005E2651C11ContextTypeON);
    atomic_store(result, (unint64_t *)&qword_100656058);
  }

  return result;
}

unint64_t sub_10044DB30()
{
  unint64_t result = qword_100656068;
  if (!qword_100656068)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC7F0, &_s12HelloRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100656068);
  }

  return result;
}

uint64_t sub_10044DB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12HelloRequestVMa(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10044DBB8(uint64_t a1)
{
  uint64_t v2 = _s12HelloRequestVMa(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_10044DBF4(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier(255LL);
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t _s12HelloRequestV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_10044DC80 + 4 * byte_1004DC2B5[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10044DCB4 + 4 * byte_1004DC2B0[v4]))();
}

uint64_t sub_10044DCB4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10044DCBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10044DCC4LL);
  }
  return result;
}

uint64_t sub_10044DCD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10044DCD8LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_10044DCDC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10044DCE4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s12HelloRequestV10CodingKeysOMa()
{
  return &_s12HelloRequestV10CodingKeysON;
}

ValueMetadata *_s13HelloResponseV10CodingKeysOMa()
{
  return &_s13HelloResponseV10CodingKeysON;
}

ValueMetadata *_s14descr1005E2651C11ContextTypeOMa()
{
  return &_s14descr1005E2651C11ContextTypeON;
}

unint64_t sub_10044DD28()
{
  unint64_t result = qword_100656078;
  if (!qword_100656078)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC658, &_s14descr1005E2651C11ContextTypeON);
    atomic_store(result, (unint64_t *)&qword_100656078);
  }

  return result;
}

unint64_t sub_10044DD70()
{
  unint64_t result = qword_100656080;
  if (!qword_100656080)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC710, &_s13HelloResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100656080);
  }

  return result;
}

unint64_t sub_10044DDB8()
{
  unint64_t result = qword_100656088;
  if (!qword_100656088)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC7C8, &_s12HelloRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100656088);
  }

  return result;
}

unint64_t sub_10044DE00()
{
  unint64_t result = qword_100656090;
  if (!qword_100656090)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC738, &_s12HelloRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100656090);
  }

  return result;
}

unint64_t sub_10044DE48()
{
  unint64_t result = qword_100656098;
  if (!qword_100656098)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC760, &_s12HelloRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100656098);
  }

  return result;
}

unint64_t sub_10044DE90()
{
  unint64_t result = qword_1006560A0;
  if (!qword_1006560A0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC680, &_s13HelloResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1006560A0);
  }

  return result;
}

unint64_t sub_10044DED8()
{
  unint64_t result = qword_1006560A8;
  if (!qword_1006560A8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC6A8, &_s13HelloResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1006560A8);
  }

  return result;
}

unint64_t sub_10044DF1C()
{
  unint64_t result = qword_1006560C8;
  if (!qword_1006560C8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DCB10, &_s14descr1005E2651C11ContextTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1006560C8);
  }

  return result;
}

unint64_t sub_10044DF60()
{
  unint64_t result = qword_1006560D0;
  if (!qword_1006560D0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DCAC0, &_s14descr1005E2651C11ContextTypeO21PeerPaymentCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1006560D0);
  }

  return result;
}

unint64_t sub_10044DFA4()
{
  unint64_t result = qword_1006560D8;
  if (!qword_1006560D8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DCA70, &_s14descr1005E2651C11ContextTypeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1006560D8);
  }

  return result;
}

uint64_t _s14descr1005E2651C11ContextTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_10044E034 + 4 * byte_1004DC2BF[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10044E068 + 4 * byte_1004DC2BA[v4]))();
}

uint64_t sub_10044E068(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10044E070(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10044E078LL);
  }
  return result;
}

uint64_t sub_10044E084(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10044E08CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_10044E090(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10044E098(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1005E2651C11ContextTypeO10CodingKeysOMa()
{
  return &_s14descr1005E2651C11ContextTypeO10CodingKeysON;
}

ValueMetadata *_s14descr1005E2651C11ContextTypeO17UnknownCodingKeysOMa()
{
  return &_s14descr1005E2651C11ContextTypeO17UnknownCodingKeysON;
}

ValueMetadata *_s14descr1005E2651C11ContextTypeO21PeerPaymentCodingKeysOMa()
{
  return &_s14descr1005E2651C11ContextTypeO21PeerPaymentCodingKeysON;
}

unint64_t sub_10044E0D8()
{
  unint64_t result = qword_1006560F8;
  if (!qword_1006560F8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DCA48, &_s14descr1005E2651C11ContextTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1006560F8);
  }

  return result;
}

unint64_t sub_10044E120()
{
  unint64_t result = qword_100656100;
  if (!qword_100656100)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC968, &_s14descr1005E2651C11ContextTypeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100656100);
  }

  return result;
}

unint64_t sub_10044E168()
{
  unint64_t result = qword_100656108;
  if (!qword_100656108)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC990, &_s14descr1005E2651C11ContextTypeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100656108);
  }

  return result;
}

unint64_t sub_10044E1B0()
{
  unint64_t result = qword_100656110;
  if (!qword_100656110)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC918, &_s14descr1005E2651C11ContextTypeO21PeerPaymentCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100656110);
  }

  return result;
}

unint64_t sub_10044E1F8()
{
  unint64_t result = qword_100656118;
  if (!qword_100656118)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC940, &_s14descr1005E2651C11ContextTypeO21PeerPaymentCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100656118);
  }

  return result;
}

unint64_t sub_10044E240()
{
  unint64_t result = qword_100656120;
  if (!qword_100656120)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC9B8, &_s14descr1005E2651C11ContextTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100656120);
  }

  return result;
}

unint64_t sub_10044E288()
{
  unint64_t result = qword_100656128;
  if (!qword_100656128)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DC9E0, &_s14descr1005E2651C11ContextTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100656128);
  }

  return result;
}

uint64_t sub_10044E2D0(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  char v37 = a3;
  uint64_t v38 = a4;
  uint64_t v43 = a2;
  uint64_t v7 = type metadata accessor for Date(0LL);
  __chkstk_darwin(v7);
  id v40 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  __chkstk_darwin(v9);
  uint64_t v39 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = v4 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateContinuation;
  uint64_t v20 = sub_100183098((uint64_t *)&unk_1006561B0);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56LL))( v19,  1LL,  1LL,  v20);
  *(void *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction) = 0LL;
  uint64_t v22 = v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_powerAssertion;
  *(_DWORD *)uint64_t v22 = 0;
  *(_BYTE *)(v22 + 4) = 1;
  *(void *)(v5
            + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_displayPriorityReturnToNormalTask) = 0LL;
  SFAirDropReceive.Transfer.askRequest.getter(v21);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))( v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_askRequest,  v18,  v15);
  sub_10019A6C4( (uint64_t)v43,  v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler);
  unint64_t v23 = v37;
  *(void *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_deviceStatus) = v37;
  uint64_t v24 = v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  uint64_t v25 = type metadata accessor for Logger(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v24, v38, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  uint64_t v28 = sub_100183098(&qword_1006563B0);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  id v29 = v23;
  *(void *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject) = CurrentValueSubject.init(_:)(v14);
  __n128 v30 = v40;
  SFAirDropReceive.Transfer.startDate.getter();
  uint64_t v31 = v39;
  SFAirDropReceive.Transfer.Metrics.init(startDate:)(v30);
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))( v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics,  v31,  v42);
  uint64_t v32 = (uint64_t *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager);
  uint64_t v33 = type metadata accessor for SDAirDropPlatformLockStateManagerUnsupported();
  uint64_t v34 = swift_allocObject(v33, 16LL, 7LL);
  v32[3] = v33;
  v32[4] = (uint64_t)&off_1005DBE00;
  *uint64_t v32 = v34;
  sub_10045300C(a1);
  swift_retain(v5);

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v25);
  sub_10018709C(v43);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  swift_release(v5);
  return v5;
}

uint64_t sub_10044E5F0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_askRequest;
  uint64_t v2 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  sub_10018709C((void *)(v0
                         + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler));

  uint64_t v3 = v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(v3, v4);
  swift_release(*(void *)(v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject));
  uint64_t v5 = v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics;
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
  sub_10018709C((void *)(v0
                         + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager));
  sub_100187100( v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateContinuation,  (uint64_t *)&unk_1006563B8);
  swift_unknownObjectRelease(*(void *)(v0
                                       + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_displayPriorityReturnToNormalTask));
  return v0;
}

uint64_t sub_10044E6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10044E744( a1,  (uint64_t (*)(void))&type metadata accessor for SFAirDropReceive.Transfer.State,  (void (*)(void))&SFAirDropReceive.Transfer.state.getter,  "Transfer changed status %s -> %s",  (void (*)(uint64_t))&SFAirDropReceive.Transfer.update(state:),  a2);
}

uint64_t sub_10044E720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10044E744( a1,  (uint64_t (*)(void))&type metadata accessor for SFAirDrop.DisplayPriority,  (void (*)(void))&SFAirDropReceive.Transfer.displayPriority.getter,  "Transfer changed display priority %s -> %s",  (void (*)(uint64_t))&SFAirDropReceive.Transfer.update(displayPriority:),  a2);
}

uint64_t sub_10044E744@<X0>( uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, void (*a3)(void)@<X2>, const char *a4@<X3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v58 = a6;
  uint64_t v59 = a5;
  uint64_t v51 = a4;
  uint64_t v49 = a3;
  uint64_t v8 = a2(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v48 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v50 = (char *)&v46 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v18);
  unint64_t v23 = (char *)&v46 - v22;
  uint64_t v55 = *(void *)(v6 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  CurrentValueSubject.value.getter(v21);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  uint64_t v52 = v23;
  uint64_t v56 = v16;
  v24(v20, v23, v16);
  uint64_t v53 = v9;
  objc_super v54 = v15;
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v57 = a1;
  uint64_t v26 = v25(v15, a1, v8);
  uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc(22LL, -1LL);
    uint64_t v47 = swift_slowAlloc(64LL, -1LL);
    uint64_t v61 = v47;
    *(_DWORD *)uint64_t v29 = 136315394;
    __n128 v30 = v50;
    os_log_t v46 = v27;
    v49();
    uint64_t v31 = v48;
    v25(v48, (uint64_t)v30, v8);
    uint64_t v32 = String.init<A>(describing:)(v31, v8);
    unint64_t v34 = v33;
    uint64_t v53 = *(void *)(v53 + 8);
    ((void (*)(char *, uint64_t))v53)(v30, v8);
    uint64_t v60 = sub_10018CDB4(v32, v34, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v29 + 4, v29 + 12);
    swift_bridgeObjectRelease(v34);
    uint64_t v35 = *(void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v36 = v56;
    v35(v20, v56);
    *(_WORD *)(v29 + 12) = 2080;
    char v37 = v54;
    v25(v30, (uint64_t)v54, v8);
    uint64_t v38 = String.init<A>(describing:)(v30, v8);
    unint64_t v40 = v39;
    uint64_t v60 = sub_10018CDB4(v38, v39, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v29 + 14, v29 + 22);
    swift_bridgeObjectRelease(v40);
    ((void (*)(char *, uint64_t))v53)(v37, v8);
    os_log_t v41 = v46;
    _os_log_impl((void *)&_mh_execute_header, v46, v28, v51, (uint8_t *)v29, 0x16u);
    uint64_t v42 = v47;
    swift_arrayDestroy(v47, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1LL, -1LL);
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  else
  {

    uint64_t v35 = *(void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v36 = v56;
    v35(v20, v56);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v8);
  }

  uint64_t v43 = v58;
  uint64_t v44 = v52;
  v59(v57);
  CurrentValueSubject.send(_:)(v43);
  return ((uint64_t (*)(char *, uint64_t))v35)(v44, v36);
}

uint64_t sub_10044EADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10044EE74( a1,  "Transfer changed cancel action",  (void (*)(uint64_t))&SFAirDropReceive.Transfer.update(cancelAction:),  a2);
}

uint64_t sub_10044EAF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v46 = sub_100183098(&qword_100656490);
  uint64_t v4 = __chkstk_darwin(v46);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v41 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v47 = *(void *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  CurrentValueSubject.value.getter(v17);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v50 = v12;
  v20(v16, v19, v12);
  uint64_t v48 = a1;
  uint64_t v21 = sub_1001915A4(a1, (uint64_t)v11, &qword_100656490);
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc(22LL, -1LL);
    os_log_t v43 = v22;
    uint64_t v26 = v25;
    uint64_t v27 = swift_slowAlloc(64LL, -1LL);
    uint64_t v45 = v27;
    uint64_t v52 = v27;
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v42 = v26 + 4;
    int v44 = v24;
    SFAirDropReceive.Transfer.activeInterfaceType.getter(v27);
    sub_1001915A4((uint64_t)v9, (uint64_t)v6, &qword_100656490);
    uint64_t v28 = v46;
    uint64_t v29 = String.init<A>(describing:)(v6, v46);
    uint64_t v31 = v30;
    sub_100187100((uint64_t)v9, &qword_100656490);
    uint64_t v51 = sub_10018CDB4(v29, (unint64_t)v31, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v42, v26 + 12);
    __n128 v32 = swift_bridgeObjectRelease(v31);
    unint64_t v33 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
    v33(v16, v50, v32);
    *(_WORD *)(v26 + 12) = 2080;
    sub_1001915A4((uint64_t)v11, (uint64_t)v9, &qword_100656490);
    uint64_t v34 = String.init<A>(describing:)(v9, v28);
    uint64_t v36 = (const char *)v35;
    uint64_t v51 = sub_10018CDB4(v34, v35, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v26 + 14, v26 + 22);
    swift_bridgeObjectRelease(v36);
    sub_100187100((uint64_t)v11, &qword_100656490);
    os_log_t v37 = v43;
    _os_log_impl( (void *)&_mh_execute_header,  v43,  (os_log_type_t)v44,  "Transfer changed active interface type %s -> %s",  (uint8_t *)v26,  0x16u);
    uint64_t v38 = v45;
    swift_arrayDestroy(v45, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1LL, -1LL);
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  else
  {

    unint64_t v33 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
    ((void (*)(char *, uint64_t))v33)(v16, v50);
    sub_100187100((uint64_t)v11, &qword_100656490);
  }

  uint64_t v39 = v49;
  SFAirDropReceive.Transfer.update(activeInterfaceType:)(v48);
  CurrentValueSubject.send(_:)(v39);
  return ((uint64_t (*)(char *, uint64_t))v33)(v19, v50);
}

uint64_t sub_10044EE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10044EE74( a1,  "Transfer changed ask response",  (void (*)(uint64_t))&SFAirDropReceive.Transfer.update(askResponse:),  a2);
}

uint64_t sub_10044EE74@<X0>( uint64_t a1@<X0>, const char *a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = CurrentValueSubject.value.getter(v10);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v17 = a2;
    uint64_t v18 = v16;
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, v17, v16, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  a3(a1);
  CurrentValueSubject.send(_:)(a4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_10044EFB4(uint64_t a1, uint64_t a2)
{
  v3[69] = v2;
  v3[68] = a2;
  v3[67] = a1;
  uint64_t v4 = type metadata accessor for ContinuousClock(0LL);
  v3[70] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[71] = v5;
  v3[72] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v3[73] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[74] = v7;
  v3[75] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098((uint64_t *)&unk_100656450);
  v3[76] = v8;
  unint64_t v9 = (*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[77] = swift_task_alloc(v9);
  v3[78] = swift_task_alloc(v9);
  uint64_t v10 = sub_100183098(&qword_1006467E0);
  v3[79] = v10;
  unint64_t v11 = (*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[80] = swift_task_alloc(v11);
  v3[81] = swift_task_alloc(v11);
  uint64_t v12 = type metadata accessor for Date(0LL);
  v3[82] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v3[83] = v13;
  unint64_t v14 = (*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[84] = swift_task_alloc(v14);
  v3[85] = swift_task_alloc(v14);
  uint64_t v15 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v3[86] = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  v3[87] = v16;
  v3[88] = swift_task_alloc((*(void *)(v16 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  v3[89] = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  v3[90] = v18;
  v3[91] = swift_task_alloc((*(void *)(v18 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v3[92] = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  v3[93] = v20;
  v3[94] = swift_task_alloc((*(void *)(v20 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v21 = static AirDropActor.shared;
  v3[95] = static AirDropActor.shared;
  return swift_task_switch(sub_10044F198, v21, 0LL);
}

uint64_t sub_10044F198(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 752);
  uint64_t v3 = *(void *)(v1 + 744);
  uint64_t v4 = *(void *)(v1 + 736);
  uint64_t v5 = *(void *)(v1 + 728);
  uint64_t v6 = *(void *)(v1 + 720);
  uint64_t v7 = *(void *)(v1 + 712);
  uint64_t v8 = *(void *)(v1 + 704);
  uint64_t v9 = *(void *)(v1 + 696);
  uint64_t v50 = *(void *)(v1 + 688);
  *(void *)(v1 + 768) = *(void *)(*(void *)(v1 + 552)
                                    + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  uint64_t v10 = CurrentValueSubject.value.getter(a1);
  SFAirDropReceive.Transfer.askRequest.getter(v10);
  unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 776) = v11;
  uint64_t v12 = v11(v2, v4);
  SFAirDropReceive.AskRequest.type.getter(v12);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  *(void *)(v1 + 784) = v13;
  uint64_t v14 = v13(v5, v7);
  char v15 = SFAirDrop.TransferType.isFiles.getter(v14);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  *(void *)(v1 + 792) = v16;
  v16(v8, v50);
  if ((v15 & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v17 = *(void *)(v1 + 552);
  uint64_t v18 = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  *(void *)(v1 + 800) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  uint64_t v19 = v17 + v18;
  swift_beginAccess(v17 + v18, v1 + 384, 0LL, 0LL);
  sub_10019A6C4(v19, v1 + 216);
  uint64_t v20 = sub_100183098(&qword_100656430);
  *(void *)(v1 + 808) = v20;
  uint64_t v21 = sub_100183098(&qword_100656438);
  if ((swift_dynamicCast(v1 + 296, v1 + 216, v20, v21, 6LL) & 1) == 0)
  {
    *(void *)(v1 + 328) = 0LL;
    *(_OWORD *)(v1 + 296) = 0u;
    *(_OWORD *)(v1 + 312) = 0u;
    sub_100187100(v1 + 296, (uint64_t *)&unk_100656440);
LABEL_6:
    uint64_t v36 = *(void *)(v1 + 752);
    uint64_t v51 = *(void *)(v1 + 736);
    uint64_t v37 = *(void *)(v1 + 600);
    uint64_t v38 = *(void *)(v1 + 592);
    uint64_t v39 = *(void *)(v1 + 584);
    uint64_t v40 = *(void *)(v1 + 544);
    uint64_t v41 = *(const char **)(v1 + 536);
    uint64_t v42 = sub_100183098(&qword_1006451B8);
    uint64_t v43 = *(int *)(v42 + 48);
    uint64_t v49 = (void (*)(uint64_t, uint64_t))v11;
    uint64_t v44 = *(int *)(v42 + 64);
    uint64_t v45 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16LL))(v37, v40, v45);
    *(void *)(v37 + v43) = v41;
    *(void *)(v37 + v44) = 0x3FF0000000000000LL;
    (*(void (**)(uint64_t, void, uint64_t))(v38 + 104))( v37,  enum case for SFAirDropReceive.Transfer.State.importing(_:),  v39);
    swift_bridgeObjectRetain(v41);
    sub_10044E6FC(v37, v36);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    v49(v36, v51);
    uint64_t v46 = static AirDropActor.shared;
    *(void *)(v1 + 840) = static AirDropActor.shared;
    return swift_task_switch(sub_10044FA48, v46, 0LL);
  }

  uint64_t v22 = *(void *)(v1 + 536);
  sub_100187100(v1 + 296, (uint64_t *)&unk_100656440);
  *(void *)(v1 + 816) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  swift_bridgeObjectRetain_n(v22, 2LL);
  int v24 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v25 = static os_log_type_t.default.getter();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v27 = *(const char **)(v1 + 536);
  if (v26)
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = swift_slowAlloc(32LL, -1LL);
    uint64_t v52 = v29;
    *(_DWORD *)uint64_t v28 = 136315138;
    uint64_t v30 = type metadata accessor for URL(0LL);
    swift_bridgeObjectRetain(v27);
    uint64_t v32 = Array.description.getter(v31, v30);
    uint64_t v34 = v33;
    swift_bridgeObjectRelease(v27);
    *(void *)(v1 + 528) = sub_10018CDB4(v32, (unint64_t)v34, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 528, v1 + 536, v28 + 4, v28 + 12);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease_n(v27, 2LL);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Importing START: {urls: %s}", v28, 0xCu);
    swift_arrayDestroy(v29, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1LL, -1LL);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  else
  {

    uint64_t v35 = swift_bridgeObjectRelease_n(v27, 2LL);
  }

  static Date.now.getter(v35);
  sub_10019A6C4(v19, v1 + 136);
  uint64_t v48 = (void *)swift_task_alloc(dword_10065618C);
  *(void *)(v1 + 824) = v48;
  *uint64_t v48 = v1;
  v48[1] = sub_10044F5D4;
  return sub_100450EFC(*(void *)(v1 + 536), v1 + 136, *(void *)(v1 + 544));
}

uint64_t sub_10044F5D4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)(*v2 + 136LL);
  v3[51] = v2;
  v3[52] = a1;
  v3[53] = v1;
  uint64_t v5 = v3[103];
  v3[104] = v1;
  swift_task_dealloc(v5);
  uint64_t v6 = v3[95];
  sub_10018709C(v4);
  if (v1) {
    uint64_t v7 = sub_10044FFE8;
  }
  else {
    uint64_t v7 = sub_10044F658;
  }
  return swift_task_switch(v7, v6, 0LL);
}

uint64_t sub_10044F658()
{
  uint64_t v1 = *(const char **)(v0 + 416);
  uint64_t v2 = *(void *)(v0 + 680);
  uint64_t v3 = *(void *)(v0 + 672);
  swift_bridgeObjectRetain(v1);
  *(void *)&double v5 = sub_100453960(v4).n128_u64[0];
  uint64_t v52 = v1;
  swift_bridgeObjectRelease(v1, v5);
  static Date.now.getter(v6);
  sub_100183F14( (unint64_t *)&unk_100656470,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)(v2, v3);
  if ((result & 1) != 0)
  {
    uint64_t v8 = *(void *)(v0 + 672);
    uint64_t v9 = *(void **)(v0 + 664);
    uint64_t v10 = *(void *)(v0 + 656);
    uint64_t v46 = *(void *)(v0 + 640);
    uint64_t v47 = *(void *)(v0 + 632);
    uint64_t v48 = *(void *)(v0 + 648);
    uint64_t v11 = *(void *)(v0 + 624);
    uint64_t v12 = *(void *)(v0 + 616);
    uint64_t v13 = *(void *)(v0 + 608);
    uint64_t v14 = v11 + *(int *)(v13 + 48);
    char v15 = (void (*)(uint64_t, uint64_t, uint64_t))v9[2];
    v15(v11, *(void *)(v0 + 680), v10);
    uint64_t v16 = (void (*)(uint64_t, uint64_t, uint64_t))v9[4];
    v16(v14, v8, v10);
    uint64_t v17 = v12 + *(int *)(v13 + 48);
    v15(v12, v11, v10);
    v15(v17, v14, v10);
    v16(v46, v12, v10);
    uint64_t v18 = (void (*)(uint64_t, uint64_t))v9[1];
    v18(v17, v10);
    uint64_t v19 = v12 + *(int *)(v13 + 48);
    v16(v12, v11, v10);
    v16(v19, v14, v10);
    v16(v46 + *(int *)(v47 + 36), v19, v10);
    v18(v12, v10);
    uint64_t v20 = sub_1001D6E30(v46, v48);
    double v21 = ClosedRange<>.interval.getter(v20);
    sub_100187100(v48, &qword_1006467E0);
    swift_bridgeObjectRetain_n(v52, 2LL);
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.default.getter();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = *(void *)(v0 + 680);
    uint64_t v27 = *(void *)(v0 + 656);
    if (v25)
    {
      uint64_t v50 = *(void *)(v0 + 680);
      uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v29 = swift_slowAlloc(32LL, -1LL);
      uint64_t v53 = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v30 = type metadata accessor for URL(0LL);
      swift_bridgeObjectRetain(v52);
      uint64_t v32 = Array.description.getter(v31, v30);
      uint64_t v49 = v27;
      uint64_t v34 = v33;
      swift_bridgeObjectRelease(v52);
      *(void *)(v0 + 512) = sub_10018CDB4(v32, (unint64_t)v34, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 512, v0 + 520, v28 + 4, v28 + 12);
      swift_bridgeObjectRelease(v34);
      swift_bridgeObjectRelease_n(v52, 2LL);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Importing END {importedURLs: %s}", v28, 0xCu);
      swift_arrayDestroy(v29, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1LL, -1LL);
      swift_slowDealloc(v28, -1LL, -1LL);

      uint64_t v36 = v49;
      uint64_t v35 = v50;
    }

    else
    {
      swift_bridgeObjectRelease_n(v52, 2LL);

      uint64_t v35 = v26;
      uint64_t v36 = v27;
    }

    v18(v35, v36);
    uint64_t v37 = *(void *)(v0 + 728);
    uint64_t v38 = *(void *)(v0 + 704);
    uint64_t v39 = *(void *)(v0 + 680);
    uint64_t v40 = *(void *)(v0 + 672);
    uint64_t v41 = *(void *)(v0 + 648);
    uint64_t v42 = *(void *)(v0 + 640);
    uint64_t v43 = *(void *)(v0 + 624);
    uint64_t v44 = *(void *)(v0 + 616);
    uint64_t v45 = *(void *)(v0 + 600);
    uint64_t v51 = *(void *)(v0 + 576);
    swift_task_dealloc(*(void *)(v0 + 752));
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v51);
    return (*(uint64_t (**)(const char *, double))(v0 + 8))(v52, v21);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_10044FA48()
{
  uint64_t v1 = static Duration.seconds(_:)(0.4);
  uint64_t v3 = v2;
  ContinuousClock.init()(v1);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006461D8 + dword_1006461D8);
  uint64_t v4 = (void *)swift_task_alloc(unk_1006461DC);
  *(void *)(v0 + 848) = v4;
  void *v4 = v0;
  v4[1] = sub_10044FAE0;
  return v6(v1, v3, 0LL, 0LL, 1);
}

uint64_t sub_10044FAE0()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 848LL);
  *(void *)(*(void *)v1 + 856LL) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = v2[72];
  uint64_t v5 = v2[70];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v2[71] + 8LL);
  if (v0)
  {
    uint64_t v7 = v2[105];
    v6(v4, v5);
    uint64_t v8 = sub_10044FB64;
  }

  else
  {
    uint64_t v7 = v2[95];
    v6(v4, v5);
    uint64_t v8 = sub_10044FC38;
  }

  return swift_task_switch(v8, v7, 0LL);
}

uint64_t sub_10044FB64()
{
  uint64_t v1 = *(void *)(v0 + 728);
  uint64_t v2 = *(void *)(v0 + 704);
  uint64_t v3 = *(void *)(v0 + 680);
  uint64_t v4 = *(void *)(v0 + 672);
  uint64_t v5 = *(void *)(v0 + 648);
  uint64_t v6 = *(void *)(v0 + 640);
  uint64_t v7 = *(void *)(v0 + 624);
  uint64_t v8 = *(void *)(v0 + 616);
  uint64_t v9 = *(void *)(v0 + 600);
  uint64_t v11 = *(void *)(v0 + 576);
  swift_task_dealloc(*(void *)(v0 + 752));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10044FC38()
{
  uint64_t v1 = swift_retain_n(*(void *)(v0 + 552), 4LL);
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_t log = v2;
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 776);
    os_log_type_t type = v3;
    uint64_t v5 = *(void *)(v0 + 752);
    uint64_t v6 = *(void *)(v0 + 736);
    uint64_t v7 = *(void *)(v0 + 728);
    uint64_t v8 = *(void *)(v0 + 712);
    uint64_t v9 = *(void *)(v0 + 704);
    uint64_t v10 = *(void *)(v0 + 688);
    uint64_t v40 = *(void *)(v0 + 552);
    uint64_t v11 = swift_slowAlloc(22LL, -1LL);
    uint64_t v41 = swift_slowAlloc(64LL, -1LL);
    uint64_t v47 = v41;
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v12 = CurrentValueSubject.value.getter(v41);
    SFAirDropReceive.Transfer.askRequest.getter(v12);
    uint64_t v13 = v4(v5, v6);
    SFAirDropReceive.AskRequest.type.getter(v13);
    v38(v7, v8);
    uint64_t v14 = sub_100183F14( (unint64_t *)&unk_100656460,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter(v10, v14);
    uint64_t v17 = v16;
    v39(v9, v10);
    *(void *)(v0 + 480) = sub_10018CDB4(v15, (unint64_t)v17, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 480, v0 + 488, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease(v17);
    swift_release_n(v40, 2LL);
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v18 = v40 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
    swift_beginAccess( v40 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler,  v0 + 360,  0LL,  0LL);
    sub_10019A6C4(v18, v0 + 56);
    uint64_t v19 = *(void *)(v0 + 80);
    uint64_t v20 = sub_10019A708((void *)(v0 + 56), v19);
    uint64_t DynamicType = swift_getDynamicType(v20, v19, 1LL);
    uint64_t v22 = *(void *)(v0 + 88);
    sub_10018709C((void *)(v0 + 56));
    *(void *)(v0 + 456) = DynamicType;
    *(void *)(v0 + 464) = v22;
    uint64_t v23 = sub_100183098(&qword_100646818);
    uint64_t v24 = String.init<A>(describing:)(v0 + 456, v23);
    uint64_t v26 = (const char *)v25;
    *(void *)(v0 + 496) = sub_10018CDB4(v24, v25, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 496, v0 + 504, v11 + 14, v11 + 22);
    swift_bridgeObjectRelease(v26);
    swift_release_n(v40, 2LL);
    _os_log_impl( (void *)&_mh_execute_header,  log,  type,  "Importing SKIP. {type: %s, handler: %s}",  (uint8_t *)v11,  0x16u);
    swift_arrayDestroy(v41, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  else
  {
    uint64_t v27 = *(void *)(v0 + 552);

    swift_release_n(v27, 4LL);
  }

  uint64_t v28 = *(const char **)(v0 + 536);
  uint64_t v29 = *(void *)(v0 + 752);
  uint64_t v30 = *(void *)(v0 + 728);
  uint64_t v31 = *(void *)(v0 + 704);
  uint64_t v32 = *(void *)(v0 + 680);
  uint64_t v33 = *(void *)(v0 + 672);
  uint64_t v34 = *(void *)(v0 + 648);
  uint64_t v35 = *(void *)(v0 + 640);
  uint64_t v36 = *(void *)(v0 + 624);
  uint64_t v42 = *(void *)(v0 + 616);
  os_log_t loga = *(os_log_t *)(v0 + 600);
  *(void *)typea = *(void *)(v0 + 576);
  swift_bridgeObjectRetain(v28, v38);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v42);
  swift_task_dealloc(loga);
  swift_task_dealloc(*(void *)typea);
  return (*(uint64_t (**)(const char *, double))(v0 + 8))(v28, 0.0);
}

uint64_t sub_10044FFE8()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[97];
  uint64_t v2 = v0[94];
  uint64_t v3 = v0[92];
  uint64_t v4 = type metadata accessor for SDAirDropContentHandlerGenericFiles();
  v0[108] = v4;
  uint64_t v5 = swift_allocObject(v4, 25LL, 7LL);
  v0[109] = v5;
  *(void *)(v5 + 16) = 0LL;
  *(_BYTE *)(v5 + 24) = 0;
  uint64_t v6 = type metadata accessor for SDAirDropContentHandleriCloudDrive(0LL);
  uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v0[110] = v7;
  uint64_t v8 = v7 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropContentHandleriCloudDrive_iCloudDriveFolder;
  uint64_t v9 = type metadata accessor for URL(0LL);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v8, 1LL, 1LL, v9);
  uint64_t v11 = CurrentValueSubject.value.getter(v10);
  SFAirDropReceive.Transfer.askRequest.getter(v11);
  v1(v2, v3);
  uint64_t v12 = (uint64_t **)swift_task_alloc(dword_10064C4AC);
  v0[111] = (uint64_t)v12;
  *uint64_t v12 = v0;
  v12[1] = (uint64_t *)sub_1004500F4;
  return sub_1002B53C8(v0[91]);
}

uint64_t sub_1004500F4(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 888LL);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 784LL);
  uint64_t v4 = *(void *)(*(void *)v1 + 760LL);
  uint64_t v5 = *(void *)(*(void *)v1 + 728LL);
  uint64_t v6 = *(void *)(*(void *)v1 + 712LL);
  *(_BYTE *)(*(void *)v1 + 912LL) = a1;
  swift_task_dealloc(v2);
  v3(v5, v6);
  return swift_task_switch(sub_100450174, v4, 0LL);
}

uint64_t sub_100450174(uint64_t a1)
{
  if (*(_BYTE *)(v1 + 912) != 1) {
    goto LABEL_4;
  }
  uint64_t v2 = *(void *)(v1 + 864);
  uint64_t v3 = *(void *)(v1 + 808);
  sub_10019A6C4(*(void *)(v1 + 552) + *(void *)(v1 + 800), v1 + 16);
  if (swift_dynamicCast(v1 + 472, v1 + 16, v3, v2, 6LL))
  {
    a1 = swift_release(*(void *)(v1 + 472));
LABEL_4:
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v1 + 776);
    uint64_t v5 = *(void *)(v1 + 752);
    uint64_t v6 = *(void *)(v1 + 736);
    uint64_t v7 = CurrentValueSubject.value.getter(a1);
    SFAirDropReceive.Transfer.askRequest.getter(v7);
    v4(v5, v6);
    return swift_task_switch(sub_100450930, static AirDropActor.shared, 0LL);
  }

  uint64_t v9 = *(void *)(v1 + 832);
  swift_errorRetain(v9);
  uint64_t v10 = swift_errorRetain(v9);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.error.getter(v11);
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v14 = *(void *)(v1 + 832);
  if (v13)
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v16 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v15 = 138412290;
    swift_errorRetain(v14);
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError(v14);
    *(void *)(v1 + 520) = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 520, v1 + 528, v15 + 4, v15 + 12);
    *uint64_t v16 = v17;
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl( (void *)&_mh_execute_header,  v11,  v12,  "Import failed with error: {%@}. Switching handler to generic files handler and retrying...",  v15,  0xCu);
    uint64_t v18 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v16, 1LL, v18);
    swift_slowDealloc(v16, -1LL, -1LL);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  else
  {

    swift_errorRelease(v14);
    swift_errorRelease(v14);
  }

  uint64_t v19 = *(void *)(v1 + 872);
  uint64_t v20 = (void *)(*(void *)(v1 + 552) + *(void *)(v1 + 800));
  *(void *)(v1 + 280) = *(void *)(v1 + 864);
  *(void *)(v1 + 288) = &off_1005D8870;
  *(void *)(v1 + 256) = v19;
  sub_1001CE0D0((__int128 *)(v1 + 256), v1 + 96);
  swift_beginAccess(v20, v1 + 336, 33LL, 0LL);
  swift_retain(v19);
  sub_10018709C(v20);
  sub_1001CE0D0((__int128 *)(v1 + 96), (uint64_t)v20);
  swift_endAccess(v1 + 336);
  sub_10019A6C4((uint64_t)v20, v1 + 176);
  double v21 = (void *)swift_task_alloc(dword_10065618C);
  *(void *)(v1 + 896) = v21;
  *double v21 = v1;
  v21[1] = sub_100450468;
  return sub_100450EFC(*(void *)(v1 + 536), v1 + 176, *(void *)(v1 + 544));
}

uint64_t sub_100450468(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)(*v2 + 176LL);
  v3[54] = v2;
  v3[55] = a1;
  v3[56] = v1;
  uint64_t v5 = v3[112];
  v3[113] = v1;
  swift_task_dealloc(v5);
  uint64_t v6 = v3[95];
  sub_10018709C(v4);
  if (v1) {
    uint64_t v7 = sub_100450C98;
  }
  else {
    uint64_t v7 = sub_1004504EC;
  }
  return swift_task_switch(v7, v6, 0LL);
}

uint64_t sub_1004504EC()
{
  uint64_t v1 = *(void *)(v0 + 880);
  uint64_t v2 = *(void *)(v0 + 872);
  swift_errorRelease(*(void *)(v0 + 832));
  swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
  swift_setDeallocating(v1);
  sub_100187100( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropContentHandleriCloudDrive_iCloudDriveFolder,  (uint64_t *)&unk_100645130);
  swift_deallocClassInstance(v1, *(unsigned int *)(*(void *)v1 + 48LL), *(unsigned __int16 *)(*(void *)v1 + 52LL));
  swift_release(v2);
  uint64_t v3 = *(const char **)(v0 + 440);
  uint64_t v4 = *(void *)(v0 + 680);
  uint64_t v5 = *(void *)(v0 + 672);
  swift_bridgeObjectRetain(v3);
  *(void *)&double v7 = sub_100453960(v6).n128_u64[0];
  objc_super v54 = v3;
  swift_bridgeObjectRelease(v3, v7);
  static Date.now.getter(v8);
  sub_100183F14( (unint64_t *)&unk_100656470,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)(v4, v5);
  if ((result & 1) != 0)
  {
    uint64_t v10 = *(void *)(v0 + 672);
    uint64_t v11 = *(void **)(v0 + 664);
    uint64_t v12 = *(void *)(v0 + 656);
    uint64_t v48 = *(void *)(v0 + 640);
    uint64_t v49 = *(void *)(v0 + 632);
    uint64_t v50 = *(void *)(v0 + 648);
    uint64_t v13 = *(void *)(v0 + 624);
    uint64_t v14 = *(void *)(v0 + 616);
    uint64_t v15 = *(void *)(v0 + 608);
    uint64_t v16 = v13 + *(int *)(v15 + 48);
    uint64_t v17 = (void (*)(uint64_t, uint64_t, uint64_t))v11[2];
    v17(v13, *(void *)(v0 + 680), v12);
    uint64_t v18 = (void (*)(uint64_t, uint64_t, uint64_t))v11[4];
    v18(v16, v10, v12);
    uint64_t v19 = v14 + *(int *)(v15 + 48);
    v17(v14, v13, v12);
    v17(v19, v16, v12);
    v18(v48, v14, v12);
    uint64_t v20 = (void (*)(uint64_t, uint64_t))v11[1];
    v20(v19, v12);
    uint64_t v21 = v14 + *(int *)(v15 + 48);
    v18(v14, v13, v12);
    v18(v21, v16, v12);
    v18(v48 + *(int *)(v49 + 36), v21, v12);
    v20(v14, v12);
    uint64_t v22 = sub_1001D6E30(v48, v50);
    double v23 = ClosedRange<>.interval.getter(v22);
    sub_100187100(v50, &qword_1006467E0);
    swift_bridgeObjectRetain_n(v54, 2LL);
    unint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.default.getter();
    BOOL v27 = os_log_type_enabled(v25, v26);
    uint64_t v28 = *(void *)(v0 + 680);
    uint64_t v29 = *(void *)(v0 + 656);
    if (v27)
    {
      uint64_t v52 = *(void *)(v0 + 680);
      uint64_t v30 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v31 = swift_slowAlloc(32LL, -1LL);
      uint64_t v55 = v31;
      *(_DWORD *)uint64_t v30 = 136315138;
      uint64_t v32 = type metadata accessor for URL(0LL);
      swift_bridgeObjectRetain(v54);
      uint64_t v34 = Array.description.getter(v33, v32);
      uint64_t v51 = v29;
      uint64_t v36 = v35;
      swift_bridgeObjectRelease(v54);
      *(void *)(v0 + 512) = sub_10018CDB4(v34, (unint64_t)v36, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 512, v0 + 520, v30 + 4, v30 + 12);
      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease_n(v54, 2LL);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Importing END {importedURLs: %s}", v30, 0xCu);
      swift_arrayDestroy(v31, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1LL, -1LL);
      swift_slowDealloc(v30, -1LL, -1LL);

      uint64_t v38 = v51;
      uint64_t v37 = v52;
    }

    else
    {
      swift_bridgeObjectRelease_n(v54, 2LL);

      uint64_t v37 = v28;
      uint64_t v38 = v29;
    }

    v20(v37, v38);
    uint64_t v39 = *(void *)(v0 + 728);
    uint64_t v40 = *(void *)(v0 + 704);
    uint64_t v41 = *(void *)(v0 + 680);
    uint64_t v42 = *(void *)(v0 + 672);
    uint64_t v43 = *(void *)(v0 + 648);
    uint64_t v44 = *(void *)(v0 + 640);
    uint64_t v45 = *(void *)(v0 + 624);
    uint64_t v46 = *(void *)(v0 + 616);
    uint64_t v47 = *(void *)(v0 + 600);
    uint64_t v53 = *(void *)(v0 + 576);
    swift_task_dealloc(*(void *)(v0 + 752));
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v53);
    return (*(uint64_t (**)(const char *, double))(v0 + 8))(v54, v23);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_100450930()
{
  uint64_t v1 = *(void *)(v0 + 760);
  (*(void (**)(void, void))(v0 + 784))(*(void *)(v0 + 728), *(void *)(v0 + 712));
  return swift_task_switch(sub_100450978, v1, 0LL);
}

uint64_t sub_100450978(uint64_t a1)
{
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v1[97];
  uint64_t v3 = v1[94];
  uint64_t v4 = v1[92];
  uint64_t v5 = CurrentValueSubject.value.getter(a1);
  SFAirDropReceive.Transfer.askRequest.getter(v5);
  v2(v3, v4);
  return swift_task_switch(sub_1004509F8, static AirDropActor.shared, 0LL);
}

uint64_t sub_1004509F8()
{
  uint64_t v1 = *(void *)(v0 + 760);
  (*(void (**)(void, void))(v0 + 784))(*(void *)(v0 + 728), *(void *)(v0 + 712));
  return swift_task_switch(sub_100450A40, v1, 0LL);
}

uint64_t sub_100450A40()
{
  uint64_t v1 = *(void *)(v0 + 832);
  swift_errorRetain(v1);
  uint64_t v2 = swift_errorRetain(v1);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void *)(v0 + 832);
    uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    double v7 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v6 = 138412290;
    swift_errorRetain(v5);
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(void *)(v0 + 488) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 488, v0 + 496, v6 + 4, v6 + 12);
    *double v7 = v8;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Importing END - Failure {%@}", v6, 0xCu);
    uint64_t v9 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v7, 1LL, v9);
    swift_slowDealloc(v7, -1LL, -1LL);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  else
  {
    uint64_t v11 = *(void *)(v0 + 832);

    swift_errorRelease(v11);
    uint64_t v10 = swift_errorRelease(v11);
  }

  uint64_t v12 = *(void *)(v0 + 880);
  uint64_t v13 = *(void *)(v0 + 872);
  uint64_t v14 = *(void *)(v0 + 680);
  uint64_t v15 = *(void *)(v0 + 664);
  uint64_t v16 = *(void *)(v0 + 656);
  swift_willThrow(v10);
  swift_release(v13);
  swift_release(v12);
  __n128 v17 = swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
  (*(void (**)(uint64_t, uint64_t, __n128))(v15 + 8))(v14, v16, v17);
  uint64_t v18 = *(void *)(v0 + 728);
  uint64_t v19 = *(void *)(v0 + 704);
  uint64_t v20 = *(void *)(v0 + 680);
  uint64_t v21 = *(void *)(v0 + 672);
  uint64_t v22 = *(void *)(v0 + 648);
  uint64_t v23 = *(void *)(v0 + 640);
  uint64_t v24 = *(void *)(v0 + 624);
  uint64_t v25 = *(void *)(v0 + 616);
  uint64_t v26 = *(void *)(v0 + 600);
  uint64_t v28 = *(void *)(v0 + 576);
  swift_task_dealloc(*(void *)(v0 + 752));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100450C98()
{
  uint64_t v1 = *(void *)(v0 + 904);
  swift_errorRetain(v1);
  uint64_t v2 = swift_errorRetain(v1);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void *)(v0 + 904);
    uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    double v7 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v6 = 138412290;
    swift_errorRetain(v5);
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(void *)(v0 + 504) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 504, v0 + 512, v6 + 4, v6 + 12);
    *double v7 = v8;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Importing END - Failure {%@}", v6, 0xCu);
    uint64_t v9 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v7, 1LL, v9);
    swift_slowDealloc(v7, -1LL, -1LL);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  else
  {
    uint64_t v11 = *(void *)(v0 + 904);

    swift_errorRelease(v11);
    uint64_t v10 = swift_errorRelease(v11);
  }

  uint64_t v12 = *(void *)(v0 + 880);
  uint64_t v13 = *(void *)(v0 + 872);
  uint64_t v14 = *(void *)(v0 + 832);
  uint64_t v15 = *(void *)(v0 + 680);
  uint64_t v16 = *(void *)(v0 + 664);
  uint64_t v17 = *(void *)(v0 + 656);
  swift_willThrow(v10);
  swift_release(v13);
  swift_release(v12);
  swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
  swift_errorRelease(v14);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  uint64_t v18 = *(void *)(v0 + 728);
  uint64_t v19 = *(void *)(v0 + 704);
  uint64_t v20 = *(void *)(v0 + 680);
  uint64_t v21 = *(void *)(v0 + 672);
  uint64_t v22 = *(void *)(v0 + 648);
  uint64_t v23 = *(void *)(v0 + 640);
  uint64_t v24 = *(void *)(v0 + 624);
  uint64_t v25 = *(void *)(v0 + 616);
  uint64_t v26 = *(void *)(v0 + 600);
  uint64_t v28 = *(void *)(v0 + 576);
  swift_task_dealloc(*(void *)(v0 + 752));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100450EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[23] = a3;
  v4[24] = v3;
  v4[21] = a1;
  v4[22] = a2;
  uint64_t v5 = type metadata accessor for ContinuousClock(0LL);
  v4[25] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[26] = v6;
  v4[27] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v4[28] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[29] = v8;
  v4[30] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098((uint64_t *)&unk_100656420);
  v4[31] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[32] = v10;
  v4[33] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for UUID(0LL);
  v4[34] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v4[35] = v12;
  v4[36] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v4[37] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v4[38] = v14;
  v4[39] = swift_task_alloc((*(void *)(v14 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v4[40] = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  v4[41] = v16;
  unint64_t v17 = (*(void *)(v16 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[42] = swift_task_alloc(v17);
  v4[43] = swift_task_alloc(v17);
  uint64_t v18 = sub_100183098(&qword_10064E040);
  v4[44] = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  v4[45] = v19;
  v4[46] = swift_task_alloc((*(void *)(v19 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v20 = static AirDropActor.shared;
  v4[47] = static AirDropActor.shared;
  return swift_task_switch(sub_10045109C, v20, 0LL);
}

uint64_t sub_10045109C()
{
  uint64_t v1 = sub_100183098(&qword_100656430);
  uint64_t v2 = sub_100183098(&qword_100656438);
  if (swift_dynamicCast(v0 + 96, v0 + 56, v1, v2, 6LL))
  {
    uint64_t v3 = *(void *)(v0 + 344);
    uint64_t v4 = *(void *)(v0 + 336);
    uint64_t v5 = *(void *)(v0 + 312);
    uint64_t v26 = *(void *)(v0 + 328);
    uint64_t v27 = *(void *)(v0 + 320);
    uint64_t v6 = *(void *)(v0 + 288);
    uint64_t v34 = *(void *)(v0 + 296);
    uint64_t v35 = *(void *)(v0 + 352);
    uint64_t v31 = *(void *)(v0 + 280);
    uint64_t v32 = *(void *)(v0 + 272);
    uint64_t v33 = *(void *)(v0 + 304);
    uint64_t v29 = *(void *)(v0 + 168);
    uint64_t v30 = *(void *)(v0 + 184);
    sub_1001CE0D0((__int128 *)(v0 + 96), v0 + 16);
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v28 = sub_10019A708((void *)(v0 + 16), v8);
    uint64_t v9 = CurrentValueSubject.value.getter(v28);
    SFAirDropReceive.Transfer.id.getter(v9);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
    *(void *)(v0 + 384) = v10;
    uint64_t v11 = v10(v3, v27);
    uint64_t v12 = CurrentValueSubject.value.getter(v11);
    SFAirDropReceive.Transfer.receiveID.getter(v12);
    v10(v4, v27);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v29, v5, v6, v30, v8, v7);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v6, v32);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v5, v34);
    SFProgressTask.makeAsyncIterator()(v35);
    uint64_t v13 = static AirDropActor.shared;
    uint64_t v14 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    *(void *)(v0 + 392) = v14;
    uint64_t v15 = (void *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(void *)(v0 + 400) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_100451384;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 136, v13, v14, *(void *)(v0 + 248), v0 + 152);
  }

  else
  {
    unint64_t v17 = *(const char **)(v0 + 168);
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    *(void *)(v0 + 128) = 0LL;
    sub_100187100(v0 + 96, (uint64_t *)&unk_100656440);
    uint64_t v36 = *(void *)(v0 + 168);
    uint64_t v18 = *(void *)(v0 + 368);
    uint64_t v20 = *(void *)(v0 + 336);
    uint64_t v19 = *(void *)(v0 + 344);
    uint64_t v21 = *(void *)(v0 + 312);
    uint64_t v22 = *(void *)(v0 + 288);
    uint64_t v23 = *(void *)(v0 + 264);
    uint64_t v24 = *(void *)(v0 + 240);
    uint64_t v25 = *(void *)(v0 + 216);
    swift_bridgeObjectRetain(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v36);
  }

uint64_t sub_100451384()
{
  uint64_t v2 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 400));
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 376);
    uint64_t v4 = sub_100451A94;
  }

  else
  {
    *(_DWORD *)(v2 + 148) = enum case for SFAirDropReceive.Transfer.State.importing(_:);
    uint64_t v3 = *(void *)(v2 + 376);
    uint64_t v4 = sub_1004513F8;
  }

  return swift_task_switch(v4, v3, 0LL);
}

uint64_t sub_1004513F8()
{
  uint64_t v1 = *(void *)(v0 + 136);
  if ((*(_BYTE *)(v0 + 144) & 1) != 0)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8LL))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    uint64_t v2 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(void *)(v0 + 416) = v2;
    void *v2 = v0;
    v2[1] = sub_100451628;
    return SFProgressTask.finalValue.getter(v0 + 160, *(void *)(v0 + 352));
  }

  else
  {
    unsigned int v16 = *(_DWORD *)(v0 + 148);
    uint64_t v19 = *(void *)(v0 + 392);
    uint64_t v4 = *(void *)(v0 + 344);
    uint64_t v17 = *(void *)(v0 + 320);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    uint64_t v5 = *(void *)(v0 + 232);
    uint64_t v6 = *(void *)(v0 + 240);
    uint64_t v7 = *(void *)(v0 + 224);
    uint64_t v8 = *(void *)(v0 + 184);
    uint64_t v9 = *(const char **)(v0 + 168);
    uint64_t v10 = sub_100183098(&qword_1006451B8);
    uint64_t v11 = *(int *)(v10 + 48);
    uint64_t v12 = *(int *)(v10 + 64);
    uint64_t v13 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16LL))(v6, v8, v13);
    *(void *)(v6 + v11) = v9;
    *(void *)(v6 + v12) = v1;
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v6, v16, v7);
    swift_bridgeObjectRetain(v9);
    sub_10044E6FC(v6, v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
    v18(v4, v17);
    uint64_t v14 = static AirDropActor.shared;
    uint64_t v15 = (void *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(void *)(v0 + 408) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_1004515C4;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 136, v14, v19, *(void *)(v0 + 248), v0 + 152);
  }

uint64_t sub_1004515C4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 408));
  if (v0) {
    uint64_t v3 = sub_100451A94;
  }
  else {
    uint64_t v3 = sub_1004513F8;
  }
  return swift_task_switch(v3, *(void *)(v2 + 376), 0LL);
}

uint64_t sub_100451628()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 416);
  *(void *)(*v1 + 424) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_100451B78;
  }
  else {
    uint64_t v4 = sub_10045168C;
  }
  return swift_task_switch(v4, *(void *)(v2 + 376), 0LL);
}

uint64_t sub_10045168C()
{
  uint64_t v1 = *(unsigned int *)(v0 + 148);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v14 = *(void *)(v0 + 320);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v7 = *(const char **)(v0 + 168);
  *(void *)(v0 + 432) = *(void *)(v0 + 160);
  uint64_t v8 = sub_100183098(&qword_1006451B8);
  uint64_t v9 = *(int *)(v8 + 48);
  uint64_t v10 = *(int *)(v8 + 64);
  uint64_t v11 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL))(v3, v6, v11);
  *(void *)(v3 + v9) = v7;
  *(void *)(v3 + v10) = 0x3FF0000000000000LL;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v3, v1, v5);
  swift_bridgeObjectRetain(v7);
  sub_10044E6FC(v3, v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v15(v2, v14);
  uint64_t v12 = static AirDropActor.shared;
  *(void *)(v0 + 440) = static AirDropActor.shared;
  return swift_task_switch(sub_1004517A0, v12, 0LL);
}

uint64_t sub_1004517A0()
{
  uint64_t v1 = static Duration.seconds(_:)(0.4);
  uint64_t v3 = v2;
  ContinuousClock.init()(v1);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006461D8 + dword_1006461D8);
  uint64_t v4 = (void *)swift_task_alloc(unk_1006461DC);
  *(void *)(v0 + 448) = v4;
  void *v4 = v0;
  v4[1] = sub_100451838;
  return v6(v1, v3, 0LL, 0LL, 1);
}

uint64_t sub_100451838()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 448);
  uint64_t v5 = *(void *)(*v1 + 208);
  uint64_t v4 = *(void *)(*v1 + 216);
  uint64_t v6 = *(void *)(*v1 + 200);
  *(void *)(*v1 + 4sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
  {
    uint64_t v7 = *(void *)(v2 + 440);
    uint64_t v8 = sub_100451988;
  }

  else
  {
    uint64_t v7 = *(void *)(v2 + 376);
    uint64_t v8 = sub_1004518C8;
  }

  return swift_task_switch(v8, v7, 0LL);
}

uint64_t sub_1004518C8()
{
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 240);
  uint64_t v8 = *(void *)(v0 + 216);
  swift_task_dealloc(*(void *)(v0 + 368));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100451988()
{
  uint64_t v1 = *(void *)(v0 + 376);
  swift_bridgeObjectRelease(*(const char **)(v0 + 432));
  return swift_task_switch(sub_1004519C8, v1, 0LL);
}

uint64_t sub_1004519C8()
{
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 240);
  uint64_t v8 = *(void *)(v0 + 216);
  sub_10018709C((void *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100451A94()
{
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 352);
  (*(void (**)(void, void))(*(void *)(v0 + 256) + 8LL))(*(void *)(v0 + 264), *(void *)(v0 + 248));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 336);
  uint64_t v5 = *(void *)(v0 + 344);
  uint64_t v7 = *(void *)(v0 + 312);
  uint64_t v8 = *(void *)(v0 + 288);
  uint64_t v9 = *(void *)(v0 + 264);
  uint64_t v10 = *(void *)(v0 + 240);
  uint64_t v11 = *(void *)(v0 + 216);
  sub_10018709C((void *)(v0 + 16));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100451B78()
{
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 240);
  uint64_t v8 = *(void *)(v0 + 216);
  sub_10018709C((void *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100451C44( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[22] = v16;
  v9[23] = v8;
  v9[20] = a7;
  v9[21] = a8;
  v9[18] = a3;
  v9[19] = a4;
  v9[16] = a1;
  v9[17] = a2;
  uint64_t v10 = sub_100183098((uint64_t *)&unk_1006563F0);
  v9[24] = swift_task_alloc((*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v9[25] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v9[26] = v12;
  v9[27] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_100183098(&qword_1006457E8);
  v9[28] = swift_task_alloc((*(void *)(*(void *)(v13 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_100183098(&qword_100656400);
  v9[29] = swift_task_alloc((*(void *)(*(void *)(v14 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100451D50, static AirDropActor.shared, 0LL);
}

uint64_t sub_100451D50()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v36 = *(void *)(v0 + 208);
  uint64_t v37 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v40 = *(void *)(v0 + 192);
  uint64_t v31 = v4;
  uint64_t v33 = *(void *)(v0 + 168);
  uint64_t v34 = *(const char **)(v0 + 176);
  uint64_t v41 = *(void *)(v0 + 160);
  uint64_t v35 = *(const char **)(v0 + 152);
  uint64_t v32 = *(const char **)(v0 + 144);
  uint64_t v30 = *(const char **)(v0 + 136);
  uint64_t v39 = *(void *)(v0 + 128);
  uint64_t v5 = enum case for SFAirDropReceive.Transfer.Metrics.TransferResult.success(_:);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v2, v5, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v2, 0LL, 1LL, v6);
  uint64_t v8 = v4 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics;
  __n128 v9 = swift_beginAccess( v4 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics,  v0 + 56,  33LL,  0LL);
  SFAirDropReceive.Transfer.Metrics.result.setter(v2, v9);
  uint64_t v10 = swift_endAccess(v0 + 56);
  static Date.now.getter(v10);
  uint64_t v11 = type metadata accessor for Date(0LL);
  uint64_t v38 = v1;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v1, 0LL, 1LL, v11);
  __n128 v12 = swift_beginAccess(v8, v0 + 80, 33LL, 0LL);
  SFAirDropReceive.Transfer.Metrics.endDate.setter(v1, v12);
  swift_endAccess(v0 + 80);
  uint64_t v13 = (int *)sub_100183098((uint64_t *)&unk_10064DAC0);
  uint64_t v14 = v3 + v13[12];
  uint64_t v15 = (void *)(v3 + v13[16]);
  uint64_t v16 = v13[20];
  uint64_t v17 = v13[24];
  uint64_t v18 = v13[28];
  uint64_t v19 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16LL))(v3, v8, v19);
  uint64_t v20 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  uint64_t v29 = *(void *)(v20 - 8);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  v28(v14, v41, v20);
  *uint64_t v15 = v33;
  v15[1] = v34;
  *(void *)(v3 + v16) = v30;
  *(void *)(v3 + v17) = v32;
  *(void *)(v3 + v18) = v35;
  (*(void (**)(uint64_t, void, uint64_t))(v36 + 104))( v3,  enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:),  v37);
  *(void *)&double v21 = swift_bridgeObjectRetain(v34).n128_u64[0];
  *(void *)&double v22 = swift_bridgeObjectRetain(v30, v21).n128_u64[0];
  *(void *)&double v23 = swift_bridgeObjectRetain(v32, v22).n128_u64[0];
  swift_bridgeObjectRetain(v35, v23);
  sub_10044E6FC(v3, v39);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v3, v37);
  uint64_t v24 = v31 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  swift_beginAccess( v31 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler,  v0 + 104,  0LL,  0LL);
  sub_10019A6C4(v24, v0 + 16);
  uint64_t v25 = *(void *)(v0 + 40);
  uint64_t v26 = *(void *)(v0 + 48);
  sub_10019A708((void *)(v0 + 16), v25);
  v28(v40, v41, v20);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v40, 0LL, 1LL, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 96))(v39, 1LL, v40, v25, v26);
  sub_100187100(v40, (uint64_t *)&unk_1006563F0);
  sub_10018709C((void *)(v0 + 16));
  swift_task_dealloc(v2);
  swift_task_dealloc(v38);
  swift_task_dealloc(v3);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100452094()
{
  v1[4] = v0;
  uint64_t v2 = sub_100183098(&qword_100646560);
  v1[5] = swift_task_alloc((*(void *)(*(void *)(v2 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for SFAirDropReceive.Failure(0LL);
  v1[6] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[7] = v4;
  unint64_t v5 = (*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v1[8] = swift_task_alloc(v5);
  v1[9] = swift_task_alloc(v5);
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v1[10] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v1[11] = v7;
  v1[12] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v1[13] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v1[14] = v9;
  unint64_t v10 = (*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v1[15] = swift_task_alloc(v10);
  v1[16] = swift_task_alloc(v10);
  uint64_t v11 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v1[17] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v1[18] = v12;
  unint64_t v13 = (*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v1[19] = swift_task_alloc(v13);
  v1[20] = swift_task_alloc(v13);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v14 = static AirDropActor.shared;
  v1[21] = static AirDropActor.shared;
  return swift_task_switch(sub_1004521F4, v14, 0LL);
}

uint64_t sub_1004521F4(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + 32);
  uint64_t v3 = v1 + 24;
  uint64_t v4 = *(void *)(v1 + 160);
  uint64_t v5 = *(void *)(v1 + 136);
  uint64_t v6 = *(void *)(v1 + 144);
  uint64_t v7 = *(void *)(v1 + 128);
  uint64_t v8 = *(void *)(v1 + 104);
  uint64_t v9 = *(void *)(v1 + 112);
  uint64_t v10 = CurrentValueSubject.value.getter(a1);
  SFAirDropReceive.Transfer.state.getter(v10);
  uint64_t v100 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v100(v4, v5);
  int v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v7, v8);
  if (v11 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
  {
    uint64_t v12 = *(void *)(v1 + 128);
    uint64_t v14 = *(void *)(v1 + 88);
    uint64_t v13 = *(void *)(v1 + 96);
    uint64_t v15 = *(void *)(v1 + 80);
    (*(void (**)(uint64_t, void))(*(void *)(v1 + 112) + 96LL))(v12, *(void *)(v1 + 104));
    uint64_t v16 = (int *)sub_100183098((uint64_t *)&unk_10064DAC0);
    *(void *)&double v17 = swift_bridgeObjectRelease((const char *)*(void *)(v12 + v16[16] + 8)).n128_u64[0];
    *(void *)&double v18 = swift_bridgeObjectRelease((const char *)*(void *)(v12 + v16[20]), v17).n128_u64[0];
    *(void *)&double v19 = swift_bridgeObjectRelease((const char *)*(void *)(v12 + v16[24]), v18).n128_u64[0];
    swift_bridgeObjectRelease(*(const char **)(v12 + v16[28]), v19);
    uint64_t v21 = SFAirDropReceive.AskRequest.type.getter(v20);
    LOBYTE(v12) = SFAirDrop.TransferType.isOnlyExchange.getter(v21);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    if ((v12 & 1) != 0)
    {
      char v22 = 1;
    }

    else
    {
      unint64_t v35 = sub_10025F338();
      uint64_t v36 = (void *)static NSUserDefaults.airdrop.getter(v35);
      char v37 = SFAirDropUserDefaults.moveToAppEnabled.getter();

      char v22 = v37 ^ 1;
    }

    uint64_t v38 = *(void *)(v1 + 128);
    uint64_t v39 = v38 + v16[12];
    uint64_t v40 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8LL))(v39, v40);
    uint64_t v41 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8LL))(v38, v41);
    if ((v22 & 1) == 0) {
      goto LABEL_19;
    }
LABEL_16:
    uint64_t v61 = *(void *)(v1 + 32);
    uint64_t v62 = *(void *)(v1 + 40);
    uint64_t v63 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56LL))(v62, 1LL, 1LL, v63);
    uint64_t v64 = static AirDropActor.shared;
    uint64_t v65 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    char v66 = (void *)swift_allocObject(&unk_1005E2878, 40LL, 7LL);
    v66[2] = v64;
    id v66[3] = v65;
    v66[4] = v61;
    swift_retain(v61);
    swift_retain(v64);
    *(void *)(v1 + 176) = sub_1001B37E8(v62, (uint64_t)&unk_100656418, (uint64_t)v66);
    uint64_t v67 = (void *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
    *(void *)(v1 + 184) = v67;
    void *v67 = v1;
    v67[1] = sub_100452B48;
    return Task<>.value.getter();
  }

  if (v11 != enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
  {
    uint64_t v42 = swift_retain_n(*v2, 2LL);
    uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
    os_log_type_t v44 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = *(void *)(v1 + 152);
      uint64_t v92 = *(void *)(v1 + 136);
      uint64_t v47 = *(void *)(v1 + 112);
      uint64_t v46 = *(void *)(v1 + 120);
      uint64_t v48 = *(void *)(v1 + 104);
      uint64_t v96 = *(void *)(v1 + 32);
      os_log_type_t type = v44;
      uint64_t v49 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v97 = swift_slowAlloc(32LL, -1LL);
      uint64_t v101 = v97;
      *(_DWORD *)uint64_t v49 = 136315138;
      uint64_t v50 = CurrentValueSubject.value.getter(v97);
      SFAirDropReceive.Transfer.state.getter(v50);
      v100(v45, v92);
      uint64_t v51 = sub_100183F14( &qword_100649D78,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
      uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter(v48, v51);
      objc_super v54 = v53;
      uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
      v55(v46, v48);
      *(void *)(v1 + 24) = sub_10018CDB4(v52, (unint64_t)v54, &v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32, v49 + 4, v49 + 12);
      swift_release_n(v96, 2LL);
      swift_bridgeObjectRelease(v54);
      _os_log_impl( (void *)&_mh_execute_header,  v43,  type,  "runPostTransferEndedSteps invalid transfer state. Skipping. {transfer.state: %s}",  v49,  0xCu);
      swift_arrayDestroy(v97, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v97, -1LL, -1LL);
      swift_slowDealloc(v49, -1LL, -1LL);
    }

    else
    {
      uint64_t v69 = *(void *)(v1 + 112);
      swift_release_n(*(void *)(v1 + 32), 2LL);

      uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
    }

    v55(*(void *)(v1 + 128), *(void *)(v1 + 104));
    uint64_t v3 = v1 + 24;
    goto LABEL_19;
  }

  uint64_t v23 = *(void *)(v1 + 128);
  uint64_t v25 = *(void *)(v1 + 64);
  uint64_t v24 = *(void *)(v1 + 72);
  uint64_t v26 = *(void *)(v1 + 48);
  uint64_t v27 = *(void *)(v1 + 56);
  (*(void (**)(uint64_t, void))(*(void *)(v1 + 112) + 96LL))(v23, *(void *)(v1 + 104));
  uint64_t v28 = sub_100183098(&qword_100649750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v24, v23 + *(int *)(v28 + 48), v26);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v25, v24, v26);
  int v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 88))(v25, v26);
  if (v29 == enum case for SFAirDropReceive.Failure.unsupportedType(_:))
  {
    uint64_t v30 = *(void *)(v1 + 64);
    uint64_t v31 = *(void *)(v1 + 48);
    uint64_t v32 = *(void *)(v1 + 56);
    (*(void (**)(void, uint64_t))(v32 + 8))(*(void *)(v1 + 72), v31);
    (*(void (**)(uint64_t, uint64_t))(v32 + 96))(v30, v31);
    swift_bridgeObjectRelease(*(const char **)(v30 + 8));
    uint64_t v33 = v30 + *(int *)(sub_100183098((uint64_t *)&unk_10064B730) + 48);
    uint64_t v34 = type metadata accessor for URL(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8LL))(v33, v34);
    goto LABEL_15;
  }

  if (v29 == enum case for SFAirDropReceive.Failure.unexpected(_:))
  {
    uint64_t v56 = *(void *)(v1 + 64);
    uint64_t v57 = *(void *)(v1 + 48);
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 + 56) + 8LL);
    v58(*(void *)(v1 + 72), v57);
    v58(v56, v57);
LABEL_15:
    uint64_t v59 = *(void *)(v1 + 128);
    uint64_t v60 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8LL))(v59, v60);
    goto LABEL_16;
  }

  if (v29 != enum case for SFAirDropReceive.Failure.declined(_:)
    && v29 != enum case for SFAirDropReceive.Failure.askDismissed(_:))
  {
    if (v29 == enum case for SFAirDropReceive.Failure.senderCancelled(_:))
    {
LABEL_26:
      (*(void (**)(void, void))(*(void *)(v1 + 56) + 8LL))(*(void *)(v1 + 72), *(void *)(v1 + 48));
      goto LABEL_15;
    }

    if (v29 != enum case for SFAirDropReceive.Failure.receiverCancelled(_:)
      && v29 != enum case for SFAirDropReceive.Failure.mixedTypes(_:))
    {
      if (v29 == enum case for SFAirDropReceive.Failure.missingDownloadDirectory(_:)) {
        goto LABEL_26;
      }
      if (v29 != enum case for SFAirDropReceive.Failure.missingOwnContact(_:))
      {
        if (v29 != enum case for SFAirDropReceive.Failure.streamError(_:)
          && v29 != enum case for SFAirDropReceive.Failure.askNotHandled(_:)
          && v29 != enum case for SFAirDropReceive.Failure.incompleteTransfer(_:)
          && v29 != enum case for SFAirDropReceive.Failure.badRequest(_:)
          && v29 != enum case for SFAirDropReceive.Failure.moveToAppFailed(_:)
          && v29 != enum case for SFAirDropReceive.Failure.insufficientStorage(_:))
        {
          return _diagnoseUnexpectedEnumCase<A>(type:)(*(void *)(v1 + 48), *(void *)(v1 + 48));
        }

        goto LABEL_26;
      }
    }
  }

  uint64_t v90 = *(void *)(v1 + 128);
  (*(void (**)(void, void))(*(void *)(v1 + 56) + 8LL))(*(void *)(v1 + 72), *(void *)(v1 + 48));
  uint64_t v91 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v91 - 8) + 8LL))(v90, v91);
LABEL_19:
  uint64_t v70 = swift_retain_n(*v2, 2LL);
  id v71 = (os_log_s *)Logger.logObject.getter(v70);
  os_log_type_t v72 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = *(void *)(v1 + 152);
    uint64_t v93 = *(void *)(v1 + 136);
    uint64_t v74 = *(void *)(v1 + 120);
    *(void *)typea = *(void *)(v1 + 112);
    uint64_t v75 = *(void *)(v1 + 104);
    uint64_t v98 = *(void *)(v1 + 32);
    uint64_t v99 = v3;
    NSData v76 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v77 = swift_slowAlloc(32LL, -1LL);
    uint64_t v101 = v77;
    *(_DWORD *)NSData v76 = 136315138;
    uint64_t v78 = CurrentValueSubject.value.getter(v77);
    SFAirDropReceive.Transfer.state.getter(v78);
    v100(v73, v93);
    uint64_t v79 = sub_100183F14( &qword_100649D78,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
    uint64_t v80 = dispatch thunk of CustomStringConvertible.description.getter(v75, v79);
    os_log_type_t v82 = v81;
    (*(void (**)(uint64_t, uint64_t))(*(void *)typea + 8LL))(v74, v75);
    *(void *)(v1 + 16) = sub_10018CDB4(v80, (unint64_t)v82, &v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v99, v76 + 4, v76 + 12);
    swift_release_n(v98, 2LL);
    swift_bridgeObjectRelease(v82);
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "Transer Linger SKIPPED. {transfer.state: %s}", v76, 0xCu);
    swift_arrayDestroy(v77, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v77, -1LL, -1LL);
    swift_slowDealloc(v76, -1LL, -1LL);
  }

  else
  {
    swift_release_n(*v2, 2LL);
  }

  uint64_t v83 = *(void *)(v1 + 152);
  uint64_t v85 = *(void *)(v1 + 120);
  uint64_t v84 = *(void *)(v1 + 128);
  uint64_t v86 = *(void *)(v1 + 96);
  uint64_t v88 = *(void *)(v1 + 64);
  uint64_t v87 = *(void *)(v1 + 72);
  uint64_t v89 = *(void *)(v1 + 40);
  swift_task_dealloc(*(void *)(v1 + 160));
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100452B48()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 184LL));
  return swift_task_switch(sub_100452BA0, v1, 0LL);
}

uint64_t sub_100452BA0()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v7 = *(void *)(v0 + 40);
  swift_task_dealloc(*(void *)(v0 + 160));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100452C38(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  uint64_t v4 = sub_100183098((uint64_t *)&unk_1006563F0);
  v3[19] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v3[20] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[21] = v6;
  v3[22] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_1006457E8);
  v3[23] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_100656400);
  v3[24] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100452D38, static AirDropActor.shared, 0LL);
}

uint64_t sub_100452D38()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v26 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v27 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v23 = v4;
  uint64_t v24 = *(void *)(v0 + 168);
  uint64_t v25 = *(void *)(v0 + 128);
  uint64_t v5 = type metadata accessor for SFAirDropReceive.Failure(0LL);
  char v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL);
  v22(v1, v4, v5);
  uint64_t v6 = enum case for SFAirDropReceive.Transfer.Metrics.TransferResult.failure(_:);
  uint64_t v7 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104))(v1, v6, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v1, 0LL, 1LL, v7);
  uint64_t v9 = v3 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics;
  __n128 v10 = swift_beginAccess( v3 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics,  v0 + 56,  33LL,  0LL);
  SFAirDropReceive.Transfer.Metrics.result.setter(v1, v10);
  uint64_t v11 = swift_endAccess(v0 + 56);
  static Date.now.getter(v11);
  uint64_t v12 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v28, 0LL, 1LL, v12);
  __n128 v13 = swift_beginAccess(v9, v0 + 80, 33LL, 0LL);
  SFAirDropReceive.Transfer.Metrics.endDate.setter(v28, v13);
  swift_endAccess(v0 + 80);
  uint64_t v14 = v2 + *(int *)(sub_100183098(&qword_100649750) + 48);
  uint64_t v15 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16LL))(v2, v9, v15);
  v22(v14, v23, v5);
  (*(void (**)(uint64_t, void, uint64_t))(v24 + 104))( v2,  enum case for SFAirDropReceive.Transfer.State.transferFailed(_:),  v26);
  sub_10044E6FC(v2, v25);
  uint64_t v16 = v3 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  swift_beginAccess( v3 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler,  v0 + 104,  0LL,  0LL);
  sub_10019A6C4(v16, v0 + 16);
  uint64_t v17 = *(void *)(v0 + 40);
  uint64_t v18 = *(void *)(v0 + 48);
  sub_10019A708((void *)(v0 + 16), v17);
  uint64_t v19 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v27, 1LL, 1LL, v19);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(v18 + 96))(v25, 0LL, v27, v17, v18);
  sub_100187100(v27, (uint64_t *)&unk_1006563F0);
  uint64_t v20 = sub_10018709C((void *)(v0 + 16));
  sub_100453320(v20);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v2, v26);
  swift_task_dealloc(v1);
  swift_task_dealloc(v28);
  swift_task_dealloc(v2);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10045300C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  __n128 v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v36 = a1;
    uint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v35 = swift_slowAlloc(32LL, -1LL);
    uint64_t v41 = v35;
    uint64_t v37 = v1;
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v34 = v14 + 4;
    uint64_t v15 = ((uint64_t (*)(void))SFAirDropReceive.Transfer.id.getter)();
    uint64_t v16 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v15);
    unint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
    uint64_t v40 = sub_10018CDB4(v16, v18, &v41);
    uint64_t v2 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v34, v14 + 12);
    swift_bridgeObjectRelease(v18);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Begin Receive OSTransaction and Power Assertion %s", v14, 0xCu);
    uint64_t v19 = v35;
    swift_arrayDestroy(v35, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1LL, -1LL);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  uint64_t v41 = 0LL;
  unint64_t v42 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(19LL);
  uint64_t v20 = swift_bridgeObjectRelease(v42);
  uint64_t v41 = 0xD000000000000010LL;
  unint64_t v42 = 0x8000000100510900LL;
  uint64_t v21 = SFAirDropReceive.Transfer.id.getter(v20);
  uint64_t v22 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v21);
  uint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
  v25._countAndFlagsBits = v22;
  v25._object = v24;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v24);
  v26._countAndFlagsBits = 93LL;
  v26._object = (void *)0xE100000000000000LL;
  String.append(_:)(v26);
  unint64_t v27 = v42;
  uint64_t v28 = String.utf8CString.getter(v41, v42);
  swift_bridgeObjectRelease(v27);
  uint64_t v29 = os_transaction_create(v28 + 32);
  swift_release(v28);
  uint64_t v30 = *(void *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction);
  *(void *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction) = v29;
  swift_unknownObjectRelease(v30);
  uint64_t result = sub_10003617C();
  uint64_t v32 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_powerAssertion;
  *(_DWORD *)uint64_t v32 = result;
  *(_BYTE *)(v32 + 4) = 0;
  return result;
}

uint64_t sub_100453320(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction);
  if (v4)
  {
    uint64_t v5 = swift_unknownObjectRetain(v4);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Clearing Receive OSTransaction", v8, 2u);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    swift_unknownObjectRelease(v4);
    uint64_t v9 = *(void *)(v2 + v3);
    *(void *)(v2 + v3) = 0LL;
    uint64_t result = swift_unknownObjectRelease(v9);
  }

  uint64_t v10 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_powerAssertion;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_powerAssertion + 4) & 1) == 0)
  {
    IOPMAssertionID v11 = *(_DWORD *)v10;
    if (*(_DWORD *)v10)
    {
      uint64_t v12 = (os_log_s *)Logger.logObject.getter(result);
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Clearing Receive Power Assertion", v14, 2u);
        swift_slowDealloc(v14, -1LL, -1LL);
      }

      uint64_t result = IOPMAssertionRelease(v11);
      *(_DWORD *)uint64_t v10 = 0;
      *(_BYTE *)(v10 + 4) = 1;
    }
  }

  return result;
}

uint64_t sub_10045349C(double a1)
{
  uint64_t v3 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDrop.DisplayPriority(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  os_log_type_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_displayPriorityReturnToNormalTask;
  uint64_t v15 = *(void *)(v1
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_displayPriorityReturnToNormalTask);
  if (v15)
  {
    swift_retain(*(void *)(v1
                           + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_displayPriorityReturnToNormalTask));
    Task.cancel()();
    swift_release(v15);
  }

  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for SFAirDrop.DisplayPriority.high(_:), v6);
  sub_10044E720((uint64_t)v9, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v16 = type metadata accessor for TaskPriority(0LL);
  unint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL);
  v17(v5, 1LL, 1LL, v16);
  uint64_t v18 = swift_allocObject(&unk_1005E2828, 24LL, 7LL);
  swift_weakInit(v18 + 16);
  uint64_t v19 = swift_allocObject(&unk_1005E2850, 32LL, 7LL);
  *(double *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = static Task<>.noThrow(priority:operation:)(v5, &unk_1006563D0, v19, (char *)&type metadata for () + 8);
  swift_release(v19);
  sub_100187100((uint64_t)v5, &qword_100646560);
  uint64_t v21 = *(void *)(v1 + v14);
  *(void *)(v1 + v14) = v20;
  swift_retain(v20);
  swift_release(v21);
  v17(v5, 1LL, 1LL, v16);
  swift_retain(v20);
  uint64_t v22 = static Task<>.noThrow(priority:operation:)(v5, &unk_1006563E0, v20, (char *)&type metadata for () + 8);
  swift_release_n(v20, 2LL);
  swift_release(v22);
  return sub_100187100((uint64_t)v5, &qword_100646560);
}

uint64_t sub_100453734()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098((uint64_t *)&unk_1006561B0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v6 = sub_100183098((uint64_t *)&unk_1006563B8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = &v19[-v11];
  os_log_type_t v13 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Lock state changed to unlocked", v15, 2u);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  uint64_t v16 = v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateContinuation;
  swift_beginAccess(v16, v20, 0LL, 0LL);
  sub_1001915A4(v16, (uint64_t)v12, (uint64_t *)&unk_1006563B8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v3 + 48))(v12, 1LL, v2))
  {
    sub_100187100((uint64_t)v12, (uint64_t *)&unk_1006563B8);
  }

  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v12, v2);
    uint64_t v17 = sub_100187100((uint64_t)v12, (uint64_t *)&unk_1006563B8);
    CheckedContinuation.resume(returning:)(v17, v2);
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  }

  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, 1LL, 1LL, v2);
  swift_beginAccess(v16, v19, 33LL, 0LL);
  sub_100454DE0((uint64_t)v9, v16);
  return swift_endAccess(v19);
}

__n128 sub_100453960(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_10064A360);
  __chkstk_darwin(v2);
  uint64_t v93 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v109 = type metadata accessor for SFSandboxTokenURLPair(0LL);
  uint64_t v4 = *(void *)(v109 - 8);
  uint64_t v5 = __chkstk_darwin(v109);
  uint64_t v7 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v90 = (char *)&v86 - v9;
  __chkstk_darwin(v8);
  uint64_t v89 = (char *)&v86 - v10;
  uint64_t v11 = sub_100183098((uint64_t *)&unk_100656480);
  __chkstk_darwin(v11);
  uint64_t v96 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v105 = type metadata accessor for SFSecurityScopedURL(0LL);
  uint64_t v100 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  __int128 v102 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for URL(0LL);
  uint64_t v104 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v97 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v101 = (char *)&v86 - v18;
  __chkstk_darwin(v17);
  os_log_t v108 = (char *)&v86 - v19;
  uint64_t v20 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v20);
  os_log_t v103 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for SFPlatform(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  Swift::String v26 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SFPlatform.macOS.getter(v24);
  char v27 = static SFPlatform.isPlatform(_:)(v26);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
  if ((v27 & 1) != 0)
  {
    uint64_t v88 = v7;
    uint64_t v29 = (const char *)a1;
    uint64_t v30 = *(void *)(a1 + 16);
    if (v30)
    {
      uint64_t v94 = v4;
      uint64_t v31 = v104;
      uint64_t v32 = &v29[(*(unsigned __int8 *)(v104 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80)];
      uint64_t v99 = *(void *)(v104 + 72);
      uint64_t v33 = *(void (**)(void, void, void))(v104 + 16);
      uint64_t v87 = v29;
      __n128 v34 = swift_bridgeObjectRetain(v29);
      uint64_t v107 = 0LL;
      uint64_t v95 = (const char *)_swiftEmptyArrayStorage;
      v34.n128_u64[0] = 136315138LL;
      __n128 v92 = v34;
      uint64_t v91 = (char *)&type metadata for Any + 8;
      uint64_t v35 = (uint64_t)v96;
      uint64_t v36 = v100;
      uint64_t v37 = v102;
      uint64_t v38 = v103;
      unint64_t v106 = v33;
      do
      {
        v33(v38, v32, v14);
        uint64_t v98 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v31 + 56);
        ((void (*)(char *, void, uint64_t, uint64_t))v98)(v38, 0LL, 1LL, v14);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v38, 1LL, v14) == 1)
        {
          uint64_t v4 = v94;
          NSData v76 = v88;
          unint64_t v79 = swift_bridgeObjectRelease(v87).n128_u64[0];
          goto LABEL_25;
        }

        uint64_t v41 = v108;
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v108, v38, v14);
        unint64_t v42 = v101;
        uint64_t v43 = v41;
        uint64_t v33 = v106;
        v106(v101, v43, v14);
        uint64_t v44 = v107;
        SFSecurityScopedURL.init(_:readWrite:)(v42, 0LL);
        if (v44)
        {
          swift_errorRelease(v44);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v35, 1LL, 1LL, v105);
          sub_100187100(v35, (uint64_t *)&unk_100656480);
          uint64_t v107 = 0LL;
          uint64_t v47 = v97;
          uint64_t v48 = v108;
          if (qword_100644068 != -1) {
            swift_once(&qword_100644068, sub_1002678E4);
          }
          uint64_t v49 = type metadata accessor for Logger(0LL);
          sub_100186DE4(v49, (uint64_t)qword_10064A340);
          uint64_t v50 = ((uint64_t (*)(char *, char *, uint64_t))v33)(v47, v48, v14);
          uint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
          os_log_type_t v52 = static os_log_type_t.error.getter(v51);
          if (os_log_type_enabled(v51, v52))
          {
            uint64_t v53 = swift_slowAlloc(12LL, -1LL);
            uint64_t v54 = swift_slowAlloc(32LL, -1LL);
            v110[0] = v54;
            *(_DWORD *)uint64_t v53 = v92.n128_u32[0];
            uint64_t v55 = sub_100183F14( (unint64_t *)&qword_100645408,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
            uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter(v14, v55);
            uint64_t v58 = (const char *)v57;
            *(void *)(v53 + 4) = sub_10018CDB4(v56, v57, v110);
            __n128 v59 = swift_bridgeObjectRelease(v58);
            uint64_t v60 = v47;
            uint64_t v61 = v104;
            uint64_t v62 = *(void (**)(char *, uint64_t, __n128))(v104 + 8);
            v62(v60, v14, v59);
            _os_log_impl( (void *)&_mh_execute_header,  v51,  v52,  "Failed to get security scoped url %s",  (uint8_t *)v53,  0xCu);
            swift_arrayDestroy(v54, 1LL, v91);
            uint64_t v63 = v54;
            uint64_t v35 = (uint64_t)v96;
            swift_slowDealloc(v63, -1LL, -1LL);
            swift_slowDealloc(v53, -1LL, -1LL);

            ((void (*)(char *, uint64_t))v62)(v48, v14);
            uint64_t v31 = v61;
          }

          else
          {

            uint64_t v31 = v104;
            uint64_t v39 = *(void (**)(char *, uint64_t))(v104 + 8);
            v39(v47, v14);
            v39(v48, v14);
          }

          uint64_t v36 = v100;
          uint64_t v37 = v102;
          uint64_t v38 = v103;
          uint64_t v33 = v106;
        }

        else
        {
          uint64_t v45 = v105;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v35, 0LL, 1LL, v105);
          (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v37, v35, v45);
          uint64_t v46 = v93;
          static SFSecurityScopedURL.consumeSandboxToken(item:)(v37);
          uint64_t v107 = 0LL;
          uint64_t v64 = v94;
          uint64_t v65 = v109;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v46, 0LL, 1LL, v109);
          char v66 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
          uint64_t v67 = v89;
          v66(v89, v46, v65);
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v90, v67, v65);
          if ((swift_isUniquelyReferenced_nonNull_native(v95) & 1) != 0)
          {
            uint64_t v38 = v103;
            Swift::String v68 = v95;
          }

          else
          {
            Swift::String v68 = (const char *)sub_10018C2D4(0, *((void *)v95 + 2) + 1LL, 1, (unint64_t)v95);
            uint64_t v38 = v103;
          }

          unint64_t v70 = *((void *)v68 + 2);
          unint64_t v69 = *((void *)v68 + 3);
          if (v70 >= v69 >> 1) {
            Swift::String v68 = (const char *)sub_10018C2D4(v69 > 1, v70 + 1, 1, (unint64_t)v68);
          }
          *((void *)v68 + 2) = v70 + 1;
          uint64_t v71 = v94;
          unint64_t v72 = (*(unsigned __int8 *)(v71 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
          uint64_t v95 = v68;
          uint64_t v73 = &v68[v72 + *(void *)(v94 + 72) * v70];
          uint64_t v74 = v109;
          v66((char *)v73, v90, v109);
          (*(void (**)(char *, uint64_t))(v71 + 8))(v89, v74);
          uint64_t v31 = v104;
          (*(void (**)(char *, uint64_t))(v104 + 8))(v108, v14);
          uint64_t v37 = v102;
          (*(void (**)(char *, uint64_t))(v36 + 8))(v102, v105);
          uint64_t v35 = (uint64_t)v96;
        }

        v32 += v99;
        --v30;
      }

      while (v30);
      uint64_t v4 = v94;
      NSData v76 = v88;
      uint64_t v78 = v87;
      uint64_t v75 = v98;
    }

    else
    {
      uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v104 + 56);
      __n128 v40 = swift_bridgeObjectRetain(v29);
      uint64_t v95 = (const char *)_swiftEmptyArrayStorage;
      NSData v76 = v88;
      uint64_t v78 = v77;
      uint64_t v38 = v103;
    }

    v75(v38, 1LL, 1LL, v14, v40);
    unint64_t v79 = swift_bridgeObjectRelease(v78).n128_u64[0];
LABEL_25:
    uint64_t v80 = *((void *)v95 + 2);
    if (v80)
    {
      uint64_t v81 = &v95[(*(unsigned __int8 *)(v4 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)];
      uint64_t v82 = *(void *)(v4 + 72);
      uint64_t v83 = *(void (**)(char *, const char *, uint64_t, __n128))(v4 + 16);
      __n128 v84 = swift_bridgeObjectRetain(v95, *(double *)&v79);
      uint64_t v85 = v109;
      do
      {
        v83(v76, v81, v85, v84);
        SFSandboxTokenURLPair.releaseSandboxExtension()();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v76, v85);
        v81 += v82;
        --v80;
      }

      while (v80);
      swift_bridgeObjectRelease_n(v95, 2LL);
    }

    else
    {
      return swift_bridgeObjectRelease(v95, *(double *)&v79);
    }
  }

  return result;
}

uint64_t sub_10045419C()
{
  uint64_t v1 = _s10BaseRunnerC11FinishTokenVMa(0LL);
  __chkstk_darwin(v1);
  uint64_t v49 = (uint64_t)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v42 - v13;
  SFAirDropReceive.Transfer.state.getter(v12);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v14, v7);
  if (v15 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v14, v7);
    uint64_t v16 = (int *)sub_100183098((uint64_t *)&unk_10064DAC0);
    uint64_t v17 = &v14[v16[12]];
    *(void *)&double v18 = swift_bridgeObjectRelease((const char *)*(void *)&v14[v16[16] + 8]).n128_u64[0];
    *(void *)&double v19 = swift_bridgeObjectRelease((const char *)*(void *)&v14[v16[20]], v18).n128_u64[0];
    *(void *)&double v20 = swift_bridgeObjectRelease((const char *)*(void *)&v14[v16[24]], v19).n128_u64[0];
    swift_bridgeObjectRelease(*(const char **)&v14[v16[28]], v20);
    uint64_t v21 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8LL))(v17, v21);
LABEL_5:
    uint64_t v24 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8LL))(v14, v24);
  }

  if (v15 == enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v14, v7);
    uint64_t v22 = &v14[*(int *)(sub_100183098(&qword_100649750) + 48)];
    uint64_t v23 = type metadata accessor for SFAirDropReceive.Failure(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8LL))(v22, v23);
    goto LABEL_5;
  }

  uint64_t v48 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v0, v3);
  uint64_t v26 = v49;
  uint64_t v27 = sub_100454D60(v0, v49);
  uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
  os_log_type_t v29 = static os_log_type_t.fault.getter();
  int v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    os_log_t v47 = v28;
    uint64_t v31 = swift_slowAlloc(12LL, -1LL);
    int v45 = v30;
    uint64_t v32 = (uint8_t *)v31;
    uint64_t v33 = swift_slowAlloc(32LL, -1LL);
    uint64_t v46 = v33;
    uint64_t v51 = v33;
    uint64_t v44 = v32;
    *(_DWORD *)uint64_t v32 = 136315138;
    uint64_t v43 = v32 + 4;
    SFAirDropReceive.Transfer.state.getter(v33);
    uint64_t v34 = sub_100183F14( &qword_100649D78,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
    uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter(v7, v34);
    uint64_t v37 = v36;
    uint64_t v38 = *(void (**)(char *, uint64_t))(v8 + 8);
    v38(v11, v7);
    uint64_t v50 = sub_10018CDB4(v35, (unint64_t)v37, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v43, v32 + 12);
    swift_bridgeObjectRelease(v37);
    sub_100454DA4(v26);
    os_log_t v39 = v47;
    __n128 v40 = v44;
    _os_log_impl( (void *)&_mh_execute_header,  v47,  (os_log_type_t)v45,  "Unexpected transfer state in FinishToken.validate {transfer.state: %s}",  v44,  0xCu);
    uint64_t v41 = v46;
    swift_arrayDestroy(v46, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1LL, -1LL);
    swift_slowDealloc(v40, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v6, v3);
    return ((uint64_t (*)(char *, uint64_t))v38)(v14, v7);
  }

  else
  {
    sub_100454DA4(v26);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  }

uint64_t sub_1004545AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a4;
  uint64_t v5 = type metadata accessor for ContinuousClock(0LL);
  v4[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[9] = v6;
  v4[10] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v7 = static AirDropActor.shared;
  v4[11] = static AirDropActor.shared;
  return swift_task_switch(sub_100454640, v7, 0LL);
}

uint64_t sub_100454640(uint64_t a1)
{
  *(void *)(v1 + 96) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Transfer Linger START", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  ContinuousClock.init()(v5);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006461D8 + dword_1006461D8);
  uint64_t v6 = (void *)swift_task_alloc(unk_1006461DC);
  *(void *)(v1 + 104) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_10045474C;
  return v8(5000000000000000000LL, 0LL, 0LL, 0LL, 1);
}

uint64_t sub_10045474C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 104);
  uint64_t v5 = *(void *)(*v1 + 72);
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v6 = *(void *)(*v1 + 64);
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0) {
    uint64_t v7 = sub_100217C14;
  }
  else {
    uint64_t v7 = sub_1004547D8;
  }
  return swift_task_switch(v7, *(void *)(v2 + 88), 0LL);
}

uint64_t sub_1004547D8(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Receive StateMachine Linger END", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  swift_task_dealloc(*(void *)(v1 + 80));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100454888(double a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 48) = a3;
  *(double *)(v3 + 40) = a1;
  uint64_t v4 = type metadata accessor for SFAirDrop.DisplayPriority(0LL);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 72) = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_100649D48);
  *(void *)(v3 + 80) = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for ContinuousClock(0LL);
  *(void *)(v3 + 88) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v3 + 96) = v8;
  *(void *)(v3 + 104) = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  *(void *)(v3 + 112) = static AirDropActor.shared;
  return swift_task_switch(sub_10045496C, v9, 0LL);
}

uint64_t sub_10045496C()
{
  uint64_t v1 = static Duration.seconds(_:)(*(double *)(v0 + 40));
  uint64_t v3 = v2;
  ContinuousClock.init()(v1);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006461D8 + dword_1006461D8);
  uint64_t v4 = (void *)swift_task_alloc(unk_1006461DC);
  *(void *)(v0 + 120) = v4;
  void *v4 = v0;
  v4[1] = sub_100454A00;
  return v6(v1, v3, 0LL, 0LL, 1);
}

uint64_t sub_100454A00()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 120);
  uint64_t v5 = *(void *)(*v1 + 96);
  uint64_t v4 = *(void *)(*v1 + 104);
  uint64_t v6 = *(void *)(*v1 + 88);
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0) {
    uint64_t v7 = sub_100219264;
  }
  else {
    uint64_t v7 = sub_100454A8C;
  }
  return swift_task_switch(v7, *(void *)(v2 + 112), 0LL);
}

uint64_t sub_100454A8C()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    uint64_t v3 = Strong;
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 80);
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v7 = *(void *)(v0 + 64);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))( v5,  enum case for SFAirDrop.DisplayPriority.normal(_:),  v6);
    sub_10044E720(v5, v4);
    swift_release(v3);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    uint64_t v8 = 0LL;
  }

  else
  {
    uint64_t v8 = 1LL;
  }

  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v9, v8, 1LL, v10);
  sub_100187100(v9, &qword_100649D48);
  uint64_t v11 = *(void *)(v0 + 72);
  uint64_t v12 = *(void *)(v0 + 80);
  swift_task_dealloc(*(void *)(v0 + 104));
  swift_task_dealloc(v12);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100454BC0()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_100454BE4()
{
  return _s10BaseRunnerCMa(0LL);
}

uint64_t _s10BaseRunnerCMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, (uint64_t *)&unk_100656170, (uint64_t)&_s10BaseRunnerCMn);
}

void sub_100454C00(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDropReceive.AskRequest(319LL);
  if (v3 <= 0x3F)
  {
    v10[0] = *(void *)(v2 - 8) + 64LL;
    v10[1] = "(";
    v10[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    uint64_t v4 = type metadata accessor for Logger(319LL);
    if (v5 <= 0x3F)
    {
      v10[3] = *(void *)(v4 - 8) + 64LL;
      v10[4] = (char *)&value witness table for Builtin.NativeObject + 64;
      uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(319LL);
      if (v7 <= 0x3F)
      {
        v10[5] = *(void *)(v6 - 8) + 64LL;
        v10[6] = "(";
        sub_100454CF4(319LL);
        if (v9 <= 0x3F)
        {
          v10[7] = *(void *)(v8 - 8) + 64LL;
          v10[8] = &unk_1004DCB88;
          v10[9] = &unk_1004DCBA0;
          v10[10] = &unk_1004DCB88;
          swift_updateClassMetadata2(a1, 256LL, 11LL, v10, a1 + 80);
        }
      }
    }
  }

void sub_100454CF4(uint64_t a1)
{
  if (!qword_1006561A8)
  {
    uint64_t v2 = sub_100183124((uint64_t *)&unk_1006561B0);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_1006561A8);
    }
  }

uint64_t _s10BaseRunnerC11FinishTokenVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_1006564F0, (uint64_t)&_s10BaseRunnerC11FinishTokenVMn);
}

uint64_t sub_100454D60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10BaseRunnerC11FinishTokenVMa(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100454DA4(uint64_t a1)
{
  uint64_t v2 = _s10BaseRunnerC11FinishTokenVMa(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_100454DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098((uint64_t *)&unk_1006563B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100454E28()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100454E4C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100454E70(uint64_t a1)
{
  double v4 = *(double *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc(dword_1006563CC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100195708;
  return sub_100454888(v4, a1, v5);
}

uint64_t sub_100454ED8(uint64_t a1)
{
  double v4 = (void *)swift_task_alloc(dword_1006563DC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1001943E8;
  return sub_1002192B0(a1, v1);
}

uint64_t sub_100454F2C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_100454F58(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = (void *)swift_task_alloc(dword_10065640C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_1004545AC(a1, v4, v5, v6);
}

uint64_t *sub_100454FC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v12);
  }

  else
  {
    uint64_t v7 = type metadata accessor for Logger(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
  }

  return a1;
}

uint64_t sub_10045506C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
}

uint64_t sub_1004550C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
  return a1;
}

uint64_t sub_100455144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24LL))(v8, v9, v10);
  return a1;
}

uint64_t sub_1004551C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
  return a1;
}

uint64_t sub_10045523C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  return a1;
}

uint64_t sub_1004552B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004552C4);
}

uint64_t sub_1004552C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }

  else
  {
    uint64_t v8 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_100455338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100455344);
}

uint64_t sub_100455344(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1004553C0(uint64_t a1)
{
  uint64_t result = type metadata accessor for Logger(319LL);
  if (v3 <= 0x3F)
  {
    v5[0] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for SFAirDropReceive.Transfer(319LL);
    if (v4 <= 0x3F)
    {
      v5[1] = *(void *)(result - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 2LL, v5, a1 + 16);
      return 0LL;
    }
  }

  return result;
}

uint64_t type metadata accessor for SDAirDropContentHandleriBooksLinks()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary34SDAirDropContentHandleriBooksLinks);
}

uint64_t sub_100455464@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandleriBooksLinks();
  uint64_t result = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(result + swift_weakDestroy(v0 + 16) = 0LL;
  *a1 = result;
  return result;
}

void sub_10045549C(__n128 a1, uint64_t a2, char a3)
{
  uint64_t v4 = SFAirDropReceive.AskRequest.urlItems.getter(a1);
  unint64_t v5 = *(void *)(v4 + 16);
  swift_bridgeObjectRelease((const char *)v4);
  uint64_t v6 = sub_100183098((uint64_t *)&unk_100650440);
  uint64_t inited = swift_initStackObject(v6, v26);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
  *(void *)(inited + 32) = 0xD000000000000017LL;
  uint64_t v8 = inited + 32;
  *(void *)(inited + 40) = 0x8000000100510960LL;
  *(void *)(inited + 48) = v5;
  *(void *)&double v9 = swift_bridgeObjectRetain((const char *)0x8000000100510960LL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v9);
  v10._countAndFlagsBits = 95LL;
  v10._object = (void *)0xE100000000000000LL;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 0xD000000000000017LL;
  v11._object = (void *)0x8000000100510960LL;
  String.append(_:)(v11);
  swift_bridgeObjectRelease((const char *)0x8000000100510960LL);
  if (v5 > 1)
  {
    v12._countAndFlagsBits = 0x4C4152554C505FLL;
    v12._object = (void *)0xE700000000000000LL;
    String.append(_:)(v12);
  }

  swift_bridgeObjectRelease((const char *)inited);
  if ((a3 & 1) != 0)
  {
    v13._countAndFlagsBits = 0x4C4154495041435FLL;
    v13._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v13);
  }

  v14._countAndFlagsBits = 0x545845545FLL;
  v14._object = (void *)0xE500000000000000LL;
  String.append(_:)(v14);
  swift_setDeallocating(inited);
  uint64_t v15 = *(void *)(inited + 16);
  uint64_t v16 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(v8, v15, v16);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL);
  id v19 = (id)SFLocalizedStringForKey(v17, v18);

  if (v19)
  {
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    uint64_t v22 = v21;

    uint64_t v23 = sub_100183098(&qword_1006483E0);
    uint64_t v24 = swift_allocObject(v23, 72LL, 7LL);
    *(_OWORD *)(v24 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(v24 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = &type metadata for Int;
    *(void *)(v24 + 64) = &protocol witness table for Int;
    *(void *)(v24 + 32) = v5;
    static String.localizedStringWithFormat(_:_:)(v20, v22, v24);
    *(void *)&double v25 = swift_bridgeObjectRelease(v22).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v24, v25);
  }

  else
  {
    __break(1u);
  }

uint64_t sub_1004556DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16LL);
}

uint64_t sub_1004556E8(uint64_t a1, uint64_t a2)
{
  __int128 v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

void *sub_100455720(void *a1, void *a2)
{
  return a1;
}

__n128 sub_100455744(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v3;
  return result;
}

uint64_t sub_100455758(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t sub_100455790(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1004557D8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 40) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

uint64_t type metadata accessor for DeviceSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001DFFC0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DeviceSequence);
}

uint64_t sub_10045582C(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for AsyncThrowingStream<A, B>.Iterator, a1);
}

uint64_t sub_10045583C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = type metadata accessor for DeviceSequence.Event(255LL, *(void *)(a1 + 16), a3, a4);
  uint64_t v6 = sub_100183124(&qword_100645710);
  uint64_t v7 = type metadata accessor for AsyncThrowingStream(0LL, v5, v6, &protocol self-conformance witness table for Error);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  Swift::String v10 = (char *)&v12 - v9;
  sub_10019A708(v4, v4[3]);
  off_100656720();
  AsyncThrowingStream.makeAsyncIterator()(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100455920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8LL))(v4, a1);
}

uint64_t type metadata accessor for DeviceSequence.Event(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001DFFC0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DeviceSequence.Event);
}

uint64_t sub_10045595C(uint64_t a1)
{
  uint64_t result = swift_checkMetadataState(319LL, *(void *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = v4[0];
    uint64_t v4[2] = v4[0];
    swift_initEnumMetadataMultiPayload(a1, 0LL, 3LL, v4);
    return 0LL;
  }

  return result;
}

uint64_t *sub_1004559C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(_DWORD *)(v4 + 80);
  if (v6 <= 7 && (unint64_t)(v5 + 1) <= 0x18 && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    unsigned int v10 = *((unsigned __int8 *)a2 + v5);
    if (v10 >= 3)
    {
      else {
        uint64_t v11 = 4LL;
      }
      __asm { BR              X13 }
    }

    if (v10 == 2)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 2;
    }

    else if (v10 == 1)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 1;
    }

    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }

  else
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    unint64_t v3 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain(v9);
  }

  return v3;
}

uint64_t sub_100455AF0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8LL) + 8LL))();
}

uint64_t sub_100455B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  uint64_t v5 = *(void *)(v4 + 64);
  unsigned int v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 3)
  {
    else {
      uint64_t v7 = 4LL;
    }
    __asm { BR              X12 }
  }

  (*(void (**)(uint64_t))(v4 + 16))(a1);
  *(_BYTE *)(a1 + v5) = v6;
  return a1;
}

uint64_t sub_100455BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v8 = *(unsigned __int8 *)(a2 + v7);
    if (v8 >= 3)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X11 }
    }

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
    *(_BYTE *)(a1 + v7) = v8;
  }

  return a1;
}

uint64_t sub_100455C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  uint64_t v5 = *(void *)(v4 + 64);
  unsigned int v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 3)
  {
    else {
      uint64_t v7 = 4LL;
    }
    __asm { BR              X12 }
  }

  (*(void (**)(uint64_t))(v4 + 32))(a1);
  *(_BYTE *)(a1 + v5) = v6;
  return a1;
}

uint64_t sub_100455D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v8 = *(unsigned __int8 *)(a2 + v7);
    if (v8 >= 3)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X11 }
    }

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
    *(_BYTE *)(a1 + v7) = v8;
  }

  return a1;
}

uint64_t sub_100455E28(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (!a2) {
    return 0LL;
  }
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8LL) + 64LL);
  if (a2 < 0xFE) {
    goto LABEL_19;
  }
  uint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)(a1 + v4);
      if (!v6) {
        goto LABEL_19;
      }
      goto LABEL_12;
    }

    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4)) {
        goto LABEL_19;
      }
      goto LABEL_12;
    }

    if (v8 < 2)
    {
LABEL_19:
      unsigned int v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0LL;
      }
    }
  }

  int v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4)) {
    goto LABEL_19;
  }
LABEL_12:
  int v9 = (v6 - 1) << v5;
  if (!(_DWORD)v4) {
    return (v9 + 254);
  }
  return ((uint64_t (*)(void))((char *)&loc_100455EE0 + 4 * byte_1004DCC49[(v4 - 1)]))();
}

void sub_100455F2C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8LL) + 64LL);
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    unsigned int v7 = 0;
  }

  else if (v6 <= 3)
  {
    unsigned int v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      unsigned int v7 = &dword_100000004;
    }

    else if (v9 >= 0x100)
    {
      unsigned int v7 = 2;
    }

    else
    {
      unsigned int v7 = v9 > 1;
    }
  }

  else
  {
    unsigned int v7 = &_mh_execute_header.magic + 1;
  }

  if (a2 <= 0xFD) {
    __asm { BR              X11 }
  }

  unsigned int v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      int v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }

      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }

      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }

  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }

  __asm { BR              X10 }

uint64_t sub_1004560C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8LL) + 64LL);
  else {
    uint64_t v3 = 4LL;
  }
  return ((uint64_t (*)(void))((char *)&loc_100456104 + 4 * byte_1004DCC57[v3]))();
}

void sub_10045614C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8LL) + 64LL);
  if (a2 > 2)
  {
    unsigned int v5 = a2 - 3;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }

      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }

      else
      {
        *a1 = v7;
      }
    }

    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }

  else
  {
    a1[v4] = a2;
  }

void sub_100456208(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100656738);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  int v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v8 = [objc_allocWithZone(RPCompanionLinkClient) init];
  [v8 setControlFlags:a2];
  unsigned int v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v9(v7, a1, v4);
  uint64_t v10 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = (v10 + 16) & ~v10;
  uint64_t v12 = v11 + v6;
  uint64_t v13 = v10 | 7;
  uint64_t v14 = swift_allocObject(&unk_1005E2A08, v12, v10 | 7);
  uint64_t v15 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v15(v14 + v11, v7, v4);
  uint64_t v31 = sub_100456930;
  uint64_t v32 = v14;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256LL;
  os_log_type_t v29 = sub_10021D100;
  int v30 = &unk_1005E2A20;
  uint64_t v16 = _Block_copy(&aBlock);
  swift_release(v32);
  [v8 setDeviceFoundHandler:v16];
  _Block_release(v16);
  v9(v7, a1, v4);
  uint64_t v26 = v12;
  uint64_t v17 = swift_allocObject(&unk_1005E2A58, v12, v13);
  v15(v17 + v11, v7, v4);
  uint64_t v31 = sub_100456954;
  uint64_t v32 = v17;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256LL;
  os_log_type_t v29 = sub_10021D100;
  int v30 = &unk_1005E2A70;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_release(v32);
  [v8 setDeviceLostHandler:v18];
  _Block_release(v18);
  v9(v7, a1, v4);
  uint64_t v19 = swift_allocObject(&unk_1005E2AA8, v12, v13);
  v15(v19 + v11, v7, v4);
  uint64_t v31 = sub_1004569B4;
  uint64_t v32 = v19;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256LL;
  os_log_type_t v29 = sub_1003A55CC;
  int v30 = &unk_1005E2AC0;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_release(v32);
  [v8 setDeviceChangedHandler:v20];
  _Block_release(v20);
  uint64_t v21 = swift_allocObject(&unk_1005E2AF8, 24LL, 7LL);
  *(void *)(v21 + swift_weakDestroy(v0 + 16) = v8;
  id v22 = v8;
  AsyncThrowingStream.Continuation.onTermination.setter(sub_100456A28, v21, v4);
  v9(v7, a1, v4);
  uint64_t v23 = swift_allocObject(&unk_1005E2B20, v26, v13);
  v15(v23 + v11, v7, v4);
  uint64_t v31 = sub_100456AA0;
  uint64_t v32 = v23;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256LL;
  os_log_type_t v29 = sub_1002270C0;
  int v30 = &unk_1005E2B38;
  uint64_t v24 = _Block_copy(&aBlock);
  swift_release(v32);
  [v22 activateWithCompletion:v24];
  _Block_release(v24);
}

uint64_t sub_100456584(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100183098(&qword_100656730);
  __chkstk_darwin(v5);
  int v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_100656740);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for AuthenticationDevice(0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100408AC4(a1, (uint64_t)v14);
  sub_100456AE0((uint64_t)v14, (uint64_t)v7);
  swift_storeEnumTagMultiPayload(v7, v5, a3);
  uint64_t v15 = sub_100183098(&qword_100656738);
  AsyncThrowingStream.Continuation.yield(_:)(v7, v15);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_100456B24((uint64_t)v14);
}

uint64_t sub_1004566D4(void *a1)
{
  uint64_t v2 = sub_100183098(&qword_100656730);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_100656740);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for AuthenticationDevice(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100408AC4(a1, (uint64_t)v11);
  sub_100456AE0((uint64_t)v11, (uint64_t)v4);
  swift_storeEnumTagMultiPayload(v4, v2, 1LL);
  uint64_t v12 = sub_100183098(&qword_100656738);
  AsyncThrowingStream.Continuation.yield(_:)(v4, v12);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_100456B24((uint64_t)v11);
}

uint64_t sub_100456818(uint64_t result)
{
  if (result)
  {
    uint64_t v2 = result;
    swift_errorRetain(result);
    uint64_t v1 = sub_100183098(&qword_100656738);
    return AsyncThrowingStream.Continuation.finish(throwing:)(&v2, v1);
  }

  return result;
}

uint64_t sub_100456860()
{
  uint64_t v1 = sub_100183098(&qword_100656728);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v5 = *v0;
  uint64_t v6 = sub_100183098(&qword_100656730);
  (*(void (**)(_BYTE *, void, uint64_t))(v2 + 104))( v4,  enum case for AsyncThrowingStream.Continuation.BufferingPolicy.unbounded<A, B>(_:),  v1);
  uint64_t v9 = v5;
  return AsyncThrowingStream.init<>(_:bufferingPolicy:_:)(v6, v4, sub_100456924, v8, v6);
}

void sub_100456924(uint64_t a1)
{
}

uint64_t sub_100456930(void *a1)
{
  return sub_10045695C(a1, 0LL);
}

uint64_t sub_100456938(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100456948(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100456954(void *a1)
{
  return sub_10045695C(a1, 2LL);
}

uint64_t sub_10045695C(void *a1, uint64_t a2)
{
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(sub_100183098(&qword_100656738) - 8) + 80LL);
  return sub_100456584(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1004569B4(void *a1)
{
  return sub_1004566D4(a1);
}

uint64_t sub_100456A04()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

id sub_100456A28()
{
  return [*(id *)(v0 + 16) invalidate];
}

uint64_t sub_100456A3C()
{
  uint64_t v1 = sub_100183098(&qword_100656738);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_100456AA0(uint64_t a1)
{
  return sub_100456818(a1);
}

uint64_t sub_100456AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationDevice(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100456B24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AuthenticationDevice(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for RapportDeviceSequenceProvider()
{
  return &type metadata for RapportDeviceSequenceProvider;
}

uint64_t sub_100456B88(uint64_t a1, uint64_t a2, char *a3, void (*a4)(uint64_t, __n128))
{
  if (*(_BYTE *)(a1 + 120) == 1)
  {
    *(void *)&double v8 = swift_beginAccess(a1 + 104, v24, 0LL, 0LL).n128_u64[0];
    uint64_t v9 = *(void *)(a1 + 104);
    if (*(void *)(v9 + 16))
    {
      *(void *)&double v10 = swift_bridgeObjectRetain(a3, v8).n128_u64[0];
      swift_bridgeObjectRetain((const char *)v9, v10);
      uint64_t v11 = sub_1003AD53C(a2, (uint64_t)a3);
      if ((v12 & 1) != 0)
      {
        uint64_t v13 = *(void *)(*(void *)(v9 + 56) + 8 * v11);
        swift_retain(v13);
        *(void *)&double v14 = swift_bridgeObjectRelease(a3).n128_u64[0];
        __n128 v15 = swift_bridgeObjectRelease((const char *)v9, v14);
        a4(v13, v15);
        return swift_release(v13);
      }

      *(void *)&double v20 = swift_bridgeObjectRelease(a3).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v9, v20);
    }

    _StringGuts.grow(_:)(34LL);
    swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
    v21._countAndFlagsBits = a2;
    v21._object = a3;
    String.append(_:)(v21);
    unint64_t v22 = sub_100187014();
    uint64_t v18 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v22, 0LL, 0LL);
    *(_DWORD *)uint64_t v23 = 10;
    *(void *)(v23 + 8) = 0xD000000000000020LL;
    *(void *)(v23 + swift_weakDestroy(v0 + 16) = 0x80000001005113B0LL;
  }

  else
  {
    unint64_t v17 = sub_100187014();
    uint64_t v18 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v17, 0LL, 0LL);
    *(_DWORD *)uint64_t v19 = 10;
    *(void *)(v19 + 8) = 0xD00000000000001ELL;
    *(void *)(v19 + swift_weakDestroy(v0 + 16) = 0x80000001005057E0LL;
  }

  return swift_willThrow(v18);
}

uint64_t sub_100456D4C( uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t *__return_ptr, uint64_t, __n128))
{
  if (*(_BYTE *)(a1 + 120) != 1)
  {
    unint64_t v18 = sub_100187014();
    uint64_t v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v18, 0LL, 0LL);
    *(_DWORD *)uint64_t v20 = 10;
    *(void *)(v20 + 8) = 0xD00000000000001ELL;
    *(void *)(v20 + swift_weakDestroy(v0 + 16) = 0x80000001005057E0LL;
    return swift_willThrow(v19);
  }

  *(void *)&double v9 = swift_beginAccess(a1 + 104, v25, 0LL, 0LL).n128_u64[0];
  uint64_t v10 = *(void *)(a1 + 104);
  if (!*(void *)(v10 + 16))
  {
LABEL_8:
    _StringGuts.grow(_:)(34LL);
    swift_bridgeObjectRelease((const char *)0xE000000000000000LL, 0LL);
    v22._countAndFlagsBits = a2;
    v22._object = a3;
    String.append(_:)(v22);
    unint64_t v23 = sub_100187014();
    uint64_t v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v23, 0LL, 0LL);
    *(_DWORD *)uint64_t v24 = 10;
    *(void *)(v24 + 8) = 0xD000000000000020LL;
    *(void *)(v24 + swift_weakDestroy(v0 + 16) = 0x80000001005113B0LL;
    return swift_willThrow(v19);
  }

  *(void *)&double v11 = swift_bridgeObjectRetain((const char *)a3, v9).n128_u64[0];
  swift_bridgeObjectRetain((const char *)v10, v11);
  uint64_t v12 = sub_1003AD53C(a2, (uint64_t)a3);
  if ((v13 & 1) == 0)
  {
    *(void *)&double v21 = swift_bridgeObjectRelease((const char *)a3).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v10, v21);
    goto LABEL_8;
  }

  uint64_t v14 = *(void *)(*(void *)(v10 + 56) + 8 * v12);
  swift_retain(v14);
  *(void *)&double v15 = swift_bridgeObjectRelease((const char *)a3).n128_u64[0];
  __n128 v16 = swift_bridgeObjectRelease((const char *)v10, v15);
  a4(&v26, v14, v16);
  uint64_t result = swift_release(v14);
  if (!v4) {
    return v26;
  }
  return result;
}

uint64_t sub_100456F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  double v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  double v11 = (char *)&v26 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v26 - v13;
  int64_t v15 = 0LL;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v26 = a1 + 56;
  uint64_t v27 = a2;
  uint64_t v17 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v18 = -1LL;
  if (v17 < 64) {
    uint64_t v18 = ~(-1LL << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_5;
    }

    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1LL))
    {
      __break(1u);
      goto LABEL_25;
    }

    if (v23 >= v20) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v26 + 8 * v23);
    ++v15;
    if (!v24)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v20) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v26 + 8 * v15);
      if (!v24)
      {
        int64_t v15 = v23 + 2;
        if (v23 + 2 >= v20) {
          goto LABEL_23;
        }
        unint64_t v24 = *(void *)(v26 + 8 * v15);
        if (!v24)
        {
          int64_t v15 = v23 + 3;
          if (v23 + 3 >= v20) {
            goto LABEL_23;
          }
          unint64_t v24 = *(void *)(v26 + 8 * v15);
          if (!v24) {
            break;
          }
        }
      }
    }

void sub_100457134(uint64_t a1, const char *a2)
{
  uint64_t v2 = a1;
  v25[1] = a2;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 >= 0) {
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t v3 = __CocoaSet.makeIterator()(a1);
    uint64_t v4 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
    unint64_t v5 = sub_10023F574();
    a1 = (uint64_t)Set.Iterator.init(_cocoa:)(v26, v3, v4, v5);
    uint64_t v2 = v26[0];
    uint64_t v23 = v26[1];
    uint64_t v6 = v26[2];
    uint64_t v7 = v26[3];
    unint64_t v8 = v26[4];
  }

  else
  {
    uint64_t v7 = 0LL;
    uint64_t v9 = -1LL << *(_BYTE *)(a1 + 32);
    uint64_t v23 = a1 + 56;
    uint64_t v6 = ~v9;
    uint64_t v10 = -v9;
    if (v10 < 64) {
      uint64_t v11 = ~(-1LL << v10);
    }
    else {
      uint64_t v11 = -1LL;
    }
    unint64_t v8 = v11 & *(void *)(a1 + 56);
  }

  int64_t v12 = (unint64_t)(v6 + 64) >> 6;
  if (v2 < 0) {
    goto LABEL_12;
  }
  while (1)
  {
    if (v8)
    {
      uint64_t v13 = (v8 - 1) & v8;
      unint64_t v14 = __clz(__rbit64(v8)) | (v7 << 6);
      uint64_t v15 = v7;
      goto LABEL_31;
    }

    int64_t v20 = v7 + 1;
    if (__OFADD__(v7, 1LL)) {
      break;
    }
    if (v20 >= v12) {
      goto LABEL_34;
    }
    unint64_t v21 = *(void *)(v23 + 8 * v20);
    uint64_t v15 = v7 + 1;
    if (!v21)
    {
      uint64_t v15 = v7 + 2;
      if (v7 + 2 >= v12) {
        goto LABEL_34;
      }
      unint64_t v21 = *(void *)(v23 + 8 * v15);
      if (!v21)
      {
        uint64_t v15 = v7 + 3;
        if (v7 + 3 >= v12) {
          goto LABEL_34;
        }
        unint64_t v21 = *(void *)(v23 + 8 * v15);
        if (!v21)
        {
          uint64_t v15 = v7 + 4;
          if (v7 + 4 >= v12) {
            goto LABEL_34;
          }
          unint64_t v21 = *(void *)(v23 + 8 * v15);
          if (!v21)
          {
            uint64_t v15 = v7 + 5;
            if (v7 + 5 >= v12) {
              goto LABEL_34;
            }
            unint64_t v21 = *(void *)(v23 + 8 * v15);
            if (!v21)
            {
              uint64_t v22 = v7 + 6;
              while (v12 != v22)
              {
                unint64_t v21 = *(void *)(v23 + 8 * v22++);
                if (v21)
                {
                  uint64_t v15 = v22 - 1;
                  goto LABEL_30;
                }
              }

void sub_1004573D0(char a1)
{
  uint64_t v3 = 0LL;
  uint64_t v4 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  unint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((sub_100469804() & 1) == 0)
  {
    if (qword_100644408 != -1) {
      goto LABEL_113;
    }
    goto LABEL_29;
  }

  id v10 = [(id)objc_opt_self(SDAutoUnlockTransport) sharedTransport];
  uint64_t v11 = v10;
  int v110 = a1 & 1;
  if ((a1 & 1) == 0)
  {
    if (v10)
    {
      id v12 = [v10 enabledAutoUnlockDevices];

      if (v12)
      {
        uint64_t v109 = v1;
        uint64_t v13 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
        unint64_t v14 = sub_10023F574();
        uint64_t v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v12, v13, v14);

        if ((v15 & 0xC000000000000001LL) != 0)
        {
          uint64_t v16 = (uint64_t)&_swiftEmptySetSingleton;
          v113[0] = (uint64_t)&_swiftEmptySetSingleton;
          if (v15 < 0) {
            uint64_t v17 = v15;
          }
          else {
            uint64_t v17 = v15 & 0xFFFFFFFFFFFFFF8LL;
          }
          uint64_t v18 = __CocoaSet.makeIterator()(v17);
          uint64_t v19 = __CocoaSet.Iterator.next()(v18);
          if (v19)
          {
            uint64_t v105 = 0LL;
            do
            {
              uint64_t v111 = v19;
              swift_dynamicCast(&v112, &v111, (char *)&type metadata for Swift.AnyObject + 8, v13, 7LL);
              id v21 = [v112 type];
              id v22 = v112;
              if (v21 == (id)4)
              {
                uint64_t v23 = v113[0];
                unint64_t v24 = *(void *)(v113[0] + 16);
                if (*(void *)(v113[0] + 24) <= v24)
                {
                  sub_1003B8014(v24 + 1);
                  uint64_t v23 = v113[0];
                }

                Swift::Int v20 = NSObject._rawHashValue(seed:)(*(void *)(v23 + 40));
                uint64_t v25 = v23 + 56;
                uint64_t v26 = -1LL << *(_BYTE *)(v23 + 32);
                unint64_t v27 = v20 & ~v26;
                unint64_t v28 = v27 >> 6;
                if (((-1LL << v27) & ~*(void *)(v23 + 56 + 8 * (v27 >> 6))) != 0)
                {
                  unint64_t v29 = __clz(__rbit64((-1LL << v27) & ~*(void *)(v23 + 56 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0LL;
                }

                else
                {
                  char v30 = 0;
                  unint64_t v31 = (unint64_t)(63 - v26) >> 6;
                  do
                  {
                    if (++v28 == v31 && (v30 & 1) != 0)
                    {
                      __break(1u);
                      goto LABEL_110;
                    }

                    BOOL v32 = v28 == v31;
                    if (v28 == v31) {
                      unint64_t v28 = 0LL;
                    }
                    v30 |= v32;
                    uint64_t v33 = *(void *)(v25 + 8 * v28);
                  }

                  while (v33 == -1);
                  unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
                }

                *(void *)(v25 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v29;
                *(void *)(*(void *)(v23 + 48) + 8 * v29) = v22;
                ++*(void *)(v23 + 16);
              }

              else
              {
              }

              uint64_t v19 = __CocoaSet.Iterator.next()(v20);
            }

            while (v19);
LABEL_57:
            uint64_t v16 = v113[0];
            uint64_t v3 = v105;
          }

          goto LABEL_58;
        }

        uint64_t v63 = (uint64_t (*)(char *, unint64_t, uint64_t))sub_100481470;
LABEL_69:
        uint64_t v16 = sub_100480FF4(v15, v63);
        goto LABEL_70;
      }

      if (qword_100644408 != -1) {
        swift_once(&qword_100644408, sub_100458568);
      }
      uint64_t v59 = type metadata accessor for Logger(0LL);
      uint64_t v60 = sub_100186DE4(v59, (uint64_t)qword_100656748);
      uint64_t v36 = (os_log_s *)Logger.logObject.getter(v60);
      os_log_type_t v37 = static os_log_type_t.error.getter(v36);
      if (!os_log_type_enabled(v36, v37)) {
        goto LABEL_32;
      }
      uint64_t v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v38 = 0;
      os_log_t v39 = "No devices enabled to unlock this device";
LABEL_31:
      _os_log_impl((void *)&_mh_execute_header, v36, v37, v39, v38, 2u);
      swift_slowDealloc(v38, -1LL, -1LL);
      goto LABEL_32;
    }

LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
    return;
  }

  if (!v10) {
    goto LABEL_116;
  }
  id v40 = [v10 enabledAutoUnlockLockDevices];

  if (!v40)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v61 = type metadata accessor for Logger(0LL);
    uint64_t v62 = sub_100186DE4(v61, (uint64_t)qword_100656748);
    uint64_t v36 = (os_log_s *)Logger.logObject.getter(v62);
    os_log_type_t v37 = static os_log_type_t.error.getter(v36);
    if (!os_log_type_enabled(v36, v37)) {
      goto LABEL_32;
    }
    uint64_t v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v38 = 0;
    os_log_t v39 = "This device isn't enabled to unlock any other devices";
    goto LABEL_31;
  }

  uint64_t v109 = v1;
  uint64_t v41 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
  unint64_t v42 = sub_10023F574();
  uint64_t v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v40, v41, v42);

  if ((v15 & 0xC000000000000001LL) == 0)
  {
    uint64_t v63 = (uint64_t (*)(char *, unint64_t, uint64_t))sub_1004812CC;
    goto LABEL_69;
  }

  uint64_t v16 = (uint64_t)&_swiftEmptySetSingleton;
  v113[0] = (uint64_t)&_swiftEmptySetSingleton;
  if (v15 < 0) {
    uint64_t v43 = v15;
  }
  else {
    uint64_t v43 = v15 & 0xFFFFFFFFFFFFFF8LL;
  }
  uint64_t v18 = __CocoaSet.makeIterator()(v43);
  uint64_t v44 = __CocoaSet.Iterator.next()(v18);
  if (!v44)
  {
LABEL_58:
    swift_release(v18);
LABEL_70:
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v64 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v64, (uint64_t)qword_100656748);
    uint64_t v65 = swift_bridgeObjectRetain_n(v16, 2LL);
    char v66 = (os_log_s *)Logger.logObject.getter(v65);
    os_log_type_t v67 = static os_log_type_t.debug.getter();
    BOOL v68 = os_log_type_enabled(v66, v67);
    uint64_t v105 = v3;
    if (v68)
    {
      unint64_t v69 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v70 = swift_slowAlloc(32LL, -1LL);
      v113[0] = v70;
      *(_DWORD *)unint64_t v69 = 136315138;
      uint64_t v71 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
      unint64_t v72 = sub_10023F574();
      uint64_t v73 = swift_bridgeObjectRetain(v16);
      uint64_t v74 = Set.description.getter(v73, v71, v72);
      unint64_t v76 = v75;
      swift_bridgeObjectRelease(v16);
      id v112 = (id)sub_10018CDB4(v74, v76, v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, v113, v69 + 4, v69 + 12);
      swift_bridgeObjectRelease(v76);
      swift_bridgeObjectRelease_n(v16, 2LL);
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "Registering Devices: %s", v69, 0xCu);
      swift_arrayDestroy(v70, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v70, -1LL, -1LL);
      swift_slowDealloc(v69, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(v16, 2LL);
    }

    if ((v16 & 0xC000000000000001LL) != 0)
    {
      if (v16 < 0) {
        uint64_t v78 = v16;
      }
      else {
        uint64_t v78 = v16 & 0xFFFFFFFFFFFFFF8LL;
      }
      uint64_t v79 = __CocoaSet.makeIterator()(v78);
      uint64_t v80 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
      unint64_t v81 = sub_10023F574();
      uint64_t v77 = Set.Iterator.init(_cocoa:)(v113, v79, v80, v81);
      uint64_t v16 = v113[0];
      uint64_t v82 = v113[1];
      uint64_t v83 = v113[2];
      uint64_t v84 = v113[3];
      unint64_t v85 = v113[4];
    }

    else
    {
      uint64_t v84 = 0LL;
      uint64_t v86 = -1LL << *(_BYTE *)(v16 + 32);
      uint64_t v82 = v16 + 56;
      uint64_t v83 = ~v86;
      uint64_t v87 = -v86;
      if (v87 < 64) {
        uint64_t v88 = ~(-1LL << v87);
      }
      else {
        uint64_t v88 = -1LL;
      }
      unint64_t v85 = v88 & *(void *)(v16 + 56);
    }

    uint64_t v108 = v16 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v106 = v83;
    int64_t v89 = (unint64_t)(v83 + 64) >> 6;
    uint64_t v107 = (char *)&type metadata for Swift.AnyObject + 8;
    if ((v16 & 0x8000000000000000LL) == 0) {
      goto LABEL_88;
    }
LABEL_85:
    uint64_t v90 = __CocoaSet.Iterator.next()(v77);
    if (v90)
    {
      uint64_t v91 = v90;
      uint64_t v111 = v90;
      uint64_t v92 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
      swift_unknownObjectRetain(v91);
      swift_dynamicCast(&v112, &v111, v107, v92, 7LL);
      id v93 = v112;
      swift_unknownObjectRelease(v91);
      int64_t v94 = v84;
      uint64_t v95 = v85;
      while (v93)
      {
        id v99 = objc_msgSend(v93, "uniqueID", v105, v106);
        if (!v99)
        {
          __break(1u);
          goto LABEL_115;
        }

        uint64_t v100 = v99;
        uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
        unint64_t v103 = v102;

        sub_10047C118(v110, v101, v103, 0);
        swift_bridgeObjectRelease(v103);

        uint64_t v84 = v94;
        unint64_t v85 = v95;
        if (v16 < 0) {
          goto LABEL_85;
        }
LABEL_88:
        if (v85)
        {
          uint64_t v95 = (v85 - 1) & v85;
          unint64_t v96 = __clz(__rbit64(v85)) | (v84 << 6);
          int64_t v94 = v84;
        }

        else
        {
          int64_t v94 = v84 + 1;
          if (__OFADD__(v84, 1LL)) {
            goto LABEL_111;
          }
          if (v94 >= v89) {
            break;
          }
          unint64_t v97 = *(void *)(v82 + 8 * v94);
          if (!v97)
          {
            uint64_t v98 = v84 + 2;
            if (v84 + 2 >= v89) {
              break;
            }
            unint64_t v97 = *(void *)(v82 + 8 * v98);
            if (v97) {
              goto LABEL_97;
            }
            uint64_t v98 = v84 + 3;
            if (v84 + 3 >= v89) {
              break;
            }
            unint64_t v97 = *(void *)(v82 + 8 * v98);
            if (v97)
            {
LABEL_97:
              int64_t v94 = v98;
            }

            else
            {
              int64_t v94 = v84 + 4;
              if (v84 + 4 >= v89) {
                break;
              }
              unint64_t v97 = *(void *)(v82 + 8 * v94);
              if (!v97)
              {
                uint64_t v104 = v84 + 5;
                while (v89 != v104)
                {
                  unint64_t v97 = *(void *)(v82 + 8 * v104++);
                  if (v97)
                  {
                    int64_t v94 = v104 - 1;
                    goto LABEL_98;
                  }
                }

                break;
              }
            }
          }

LABEL_98:
          uint64_t v95 = (v97 - 1) & v97;
          unint64_t v96 = __clz(__rbit64(v97)) + (v94 << 6);
        }

        id v93 = *(id *)(*(void *)(v16 + 48) + 8 * v96);
      }
    }

    sub_100187094(v16);
    return;
  }

  uint64_t v105 = 0LL;
  while (1)
  {
    uint64_t v111 = v44;
    swift_dynamicCast(&v112, &v111, (char *)&type metadata for Swift.AnyObject + 8, v41, 7LL);
    id v46 = [v112 type];
    id v47 = v112;
    if (v46 == (id)2) {
      break;
    }

LABEL_42:
    uint64_t v44 = __CocoaSet.Iterator.next()(v45);
    if (!v44) {
      goto LABEL_57;
    }
  }

  uint64_t v48 = v113[0];
  unint64_t v49 = *(void *)(v113[0] + 16);
  if (*(void *)(v113[0] + 24) <= v49)
  {
    sub_1003B8014(v49 + 1);
    uint64_t v48 = v113[0];
  }

  Swift::Int v45 = NSObject._rawHashValue(seed:)(*(void *)(v48 + 40));
  uint64_t v50 = v48 + 56;
  uint64_t v51 = -1LL << *(_BYTE *)(v48 + 32);
  unint64_t v52 = v45 & ~v51;
  unint64_t v53 = v52 >> 6;
  if (((-1LL << v52) & ~*(void *)(v48 + 56 + 8 * (v52 >> 6))) != 0)
  {
    unint64_t v54 = __clz(__rbit64((-1LL << v52) & ~*(void *)(v48 + 56 + 8 * (v52 >> 6)))) | v52 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_56:
    *(void *)(v50 + ((v54 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v54;
    *(void *)(*(void *)(v48 + 48) + 8 * v54) = v47;
    ++*(void *)(v48 + 16);
    goto LABEL_42;
  }

  char v55 = 0;
  unint64_t v56 = (unint64_t)(63 - v51) >> 6;
  while (++v53 != v56 || (v55 & 1) == 0)
  {
    BOOL v57 = v53 == v56;
    if (v53 == v56) {
      unint64_t v53 = 0LL;
    }
    v55 |= v57;
    uint64_t v58 = *(void *)(v50 + 8 * v53);
    if (v58 != -1)
    {
      unint64_t v54 = __clz(__rbit64(~v58)) + (v53 << 6);
      goto LABEL_56;
    }
  }

  __break(1u);
}

void sub_100457EC0(uint64_t a1, SEL *a2)
{
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 < 0) {
      uint64_t v3 = a1;
    }
    else {
      uint64_t v3 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v4 = __CocoaSet.makeIterator()(v3);
    uint64_t v5 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
    unint64_t v6 = sub_10023F574();
    uint64_t v7 = Set.Iterator.init(_cocoa:)(v32, v4, v5, v6);
    uint64_t v2 = v32[0];
    uint64_t v29 = v32[1];
    uint64_t v8 = v32[2];
    uint64_t v9 = v32[3];
    unint64_t v10 = v32[4];
  }

  else
  {
    uint64_t v11 = -1LL << *(_BYTE *)(a1 + 32);
    uint64_t v29 = a1 + 56;
    uint64_t v8 = ~v11;
    uint64_t v12 = -v11;
    if (v12 < 64) {
      uint64_t v13 = ~(-1LL << v12);
    }
    else {
      uint64_t v13 = -1LL;
    }
    unint64_t v10 = v13 & *(void *)(a1 + 56);
    uint64_t v7 = (void *)swift_bridgeObjectRetain(a1);
    uint64_t v9 = 0LL;
  }

  int64_t v28 = (unint64_t)(v8 + 64) >> 6;
  while (1)
  {
    uint64_t v14 = v9;
    if (v2 < 0)
    {
      uint64_t v17 = __CocoaSet.Iterator.next()(v7);
      uint64_t v18 = v17;
      if (!v17) {
        goto LABEL_36;
      }
      uint64_t v31 = v17;
      uint64_t v19 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
      swift_unknownObjectRetain(v18);
      swift_dynamicCast(&v33, &v31, (char *)&type metadata for Swift.AnyObject + 8, v19, 7LL);
      id v20 = v33;
      swift_unknownObjectRelease(v18);
      if (!v20) {
        goto LABEL_36;
      }
      goto LABEL_34;
    }

    if (!v10) {
      break;
    }
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v16 = v15 | (v9 << 6);
LABEL_33:
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v16);
    if (!v20) {
      goto LABEL_36;
    }
LABEL_34:
    id v24 = [(id)objc_opt_self(SDAutoUnlockAKSManager) sharedManager];
    if (!v24) {
      goto LABEL_38;
    }
    uint64_t v25 = v24;
    id v26 = [v20 uniqueID];
    unsigned int v27 = objc_msgSend(v25, *a2, v26);

    if (v27) {
      goto LABEL_36;
    }
  }

  int64_t v21 = v9 + 1;
  if (!__OFADD__(v9, 1LL))
  {
    if (v21 >= v28) {
      goto LABEL_36;
    }
    unint64_t v22 = *(void *)(v29 + 8 * v21);
    ++v9;
    if (!v22)
    {
      uint64_t v9 = v14 + 2;
      if (v14 + 2 >= v28) {
        goto LABEL_36;
      }
      unint64_t v22 = *(void *)(v29 + 8 * v9);
      if (!v22)
      {
        uint64_t v9 = v14 + 3;
        if (v14 + 3 >= v28) {
          goto LABEL_36;
        }
        unint64_t v22 = *(void *)(v29 + 8 * v9);
        if (!v22)
        {
          uint64_t v9 = v14 + 4;
          if (v14 + 4 >= v28) {
            goto LABEL_36;
          }
          unint64_t v22 = *(void *)(v29 + 8 * v9);
          if (!v22)
          {
            uint64_t v9 = v14 + 5;
            if (v14 + 5 >= v28) {
              goto LABEL_36;
            }
            unint64_t v22 = *(void *)(v29 + 8 * v9);
            if (!v22)
            {
              uint64_t v23 = v14 + 6;
              while (v28 != v23)
              {
                unint64_t v22 = *(void *)(v29 + 8 * v23++);
                if (v22)
                {
                  uint64_t v9 = v23 - 1;
                  goto LABEL_32;
                }
              }

uint64_t sub_100458200()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  void *v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }

  if (qword_100644408 != -1) {
LABEL_32:
  }
    swift_once(&qword_100644408, sub_100458568);
  uint64_t v7 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v7, (uint64_t)qword_100656748);
  uint64_t v8 = v0;
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)uint64_t v11 = 134217984;
    uint64_t v12 = &v8[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers];
    swift_beginAccess( &v8[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers],  v26,  0LL,  0LL);
    uint64_t v27 = *(void *)(*(void *)v12 + 16LL);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v11 + 4, v11 + 12);

    _os_log_impl( (void *)&_mh_execute_header,  v9,  v10,  "Reporting authenticationStateChanged to %ld observers",  v11,  0xCu);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  else
  {

    uint64_t v9 = (os_log_s *)v8;
  }

  uint64_t v13 = &v8[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers];
  swift_beginAccess(v13, &v27, 0LL, 0LL);
  uint64_t v14 = *(void *)v13;
  uint64_t v0 = (char *)(v14 + 64);
  uint64_t v15 = 1LL << *(_BYTE *)(v14 + 32);
  uint64_t v16 = -1LL;
  if (v15 < 64) {
    uint64_t v16 = ~(-1LL << v15);
  }
  unint64_t v17 = v16 & *(void *)(v14 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain(v14);
  int64_t v19 = 0LL;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v21 = v20 | (v19 << 6);
      goto LABEL_10;
    }

    int64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1LL))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }

    if (v22 >= v18) {
      return swift_release(v14);
    }
    unint64_t v23 = *(void *)&v0[8 * v22];
    ++v19;
    if (!v23)
    {
      int64_t v19 = v22 + 1;
      if (v22 + 1 >= v18) {
        return swift_release(v14);
      }
      unint64_t v23 = *(void *)&v0[8 * v19];
      if (!v23)
      {
        int64_t v19 = v22 + 2;
        if (v22 + 2 >= v18) {
          return swift_release(v14);
        }
        unint64_t v23 = *(void *)&v0[8 * v19];
        if (!v23)
        {
          int64_t v19 = v22 + 3;
          if (v22 + 3 >= v18) {
            return swift_release(v14);
          }
          unint64_t v23 = *(void *)&v0[8 * v19];
          if (!v23) {
            break;
          }
        }
      }
    }

uint64_t sub_100458528(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100458548(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_100458568()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100656748);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100656748);
  if (qword_100644020 != -1) {
    swift_once(&qword_100644020, sub_10023A520);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

id sub_10045862C()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v4);
  id v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183168(0LL, (unint64_t *)&qword_100650E50, &OBJC_CLASS___OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v10);
  int64_t v18 = _swiftEmptyArrayStorage;
  uint64_t v11 = sub_100183F14( (unint64_t *)&qword_100644420,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v12 = sub_100183098(&qword_100650E60);
  uint64_t v13 = sub_1001CD538( (unint64_t *)&qword_100644430,  &qword_100650E60,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v12, v13, v4, v11);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))( v3,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v0);
  uint64_t v14 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000020LL,  0x8000000100511230LL,  v9,  v6,  v3,  0LL);
  id v15 = objc_allocWithZone((Class)type metadata accessor for SDAuthenticationManager(0LL));
  id result = sub_1004589D0(v14);
  qword_100669A30 = (uint64_t)result;
  return result;
}

void sub_10045886C(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsService + 24);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsService + 32);
  sub_10019A708((void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsService), v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  if (v5)
  {
    id v6 = (const char *)v5;
    uint64_t v7 = *(void *)(v5 + 16);
    if (v7)
    {
      uint64_t v8 = v5 + 32;
      while (1)
      {
        sub_10019A6C4(v8, (uint64_t)&v11);
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        sub_10019A708(&v11, v12);
        sub_10018709C(&v11);
        v8 += 40LL;
        if (!--v7) {
          goto LABEL_6;
        }
      }

      sub_1001CE0D0(&v11, a1);
    }

    else
    {
LABEL_6:
      *(void *)(a1 + 32) = 0LL;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = 0u;
    }

    swift_bridgeObjectRelease(v6);
  }

  else
  {
    __break(1u);
  }

void *sub_100458958()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager____lazy_storage___unlockVolumeManager;
  if (*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager____lazy_storage___unlockVolumeManager))
  {
    uint64_t v2 = *(void **)(v0
                    + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager____lazy_storage___unlockVolumeManager);
  }

  else
  {
    uint64_t v3 = v0;
    uint64_t v4 = _s19VolumeUnlockManagerCMa(0LL);
    swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v2 = sub_10023FC04();
    uint64_t v5 = *(void *)(v3 + v1);
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release(v5);
  }

  swift_retain();
  return v2;
}

id sub_1004589D0(void *a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  id v5 = objc_allocWithZone(&OBJC_CLASS___IDSService);
  id v6 = v2;
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v5 initWithService:v7];

  if (v8)
  {
    uint64_t v9 = (objc_class *)type metadata accessor for SDAuthenticationSecurityManager(0LL);
    id v10 = objc_allocWithZone(v9);
    id v11 = a1;
    uint64_t v12 = sub_100221C08(v11);
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v13 = type metadata accessor for Logger(0LL);
    uint64_t v14 = sub_100186DE4(v13, (uint64_t)qword_100656748);
    id v15 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Initializing transport manager", v17, 2u);
      swift_slowDealloc(v17, -1LL, -1LL);
    }

    id v18 = v11;
    int64_t v19 = sub_1003FB084(v18);

    v32[3] = v9;
    v32[4] = &off_1005D59A8;
    v32[0] = v12;
    unint64_t v20 = objc_allocWithZone(ObjectType);
    uint64_t v21 = sub_1002499B4((uint64_t)v32, (uint64_t)v9);
    __chkstk_darwin(v21);
    unint64_t v23 = (void *)((char *)&v32[-1] - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL));
    (*(void (**)(uint64_t *))(v24 + 16))(v23);
    uint64_t v25 = *v23;
    id v26 = v12;
    id v27 = v8;
    sub_100486E40(v18, v25, v19, (uint64_t)v27, v20);
    id v8 = v28;

    sub_10018709C(v32);
  }

  else
  {
  }

  uint64_t v29 = swift_getObjectType(v6);
  swift_deallocPartialClassInstance( v6,  v29,  *(unsigned int *)((swift_isaMask & *v6) + 0x30LL),  *(unsigned __int16 *)((swift_isaMask & *v6) + 0x34LL));
  return v8;
}

id sub_100458C80()
{
  id result = [(id)objc_opt_self(SDStatusMonitor) sharedMonitor];
  if (!result)
  {
    __break(1u);
    return result;
  }

  uint64_t v1 = result;
  id v2 = [result awdlInfo];

  if (v2)
  {
    uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v2,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
  }

  else
  {
    uint64_t v3 = 0LL;
  }

  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v4, (uint64_t)qword_100656748);
  uint64_t v5 = swift_bridgeObjectRetain_n(v3, 2LL);
  id v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = swift_slowAlloc(32LL, -1LL);
    uint64_t v17 = v9;
    *(_DWORD *)id v8 = 136315138;
    if (v3)
    {
      uint64_t v10 = Dictionary.description.getter( v3,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
      unint64_t v12 = v11;
    }

    else
    {
      unint64_t v12 = 0x8000000100509360LL;
      uint64_t v10 = 0xD000000000000012LL;
    }

    uint64_t v16 = sub_10018CDB4(v10, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease_n(v3, 2LL);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "AWDLInfo = %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);

    if (!v3) {
      goto LABEL_14;
    }
  }

  else
  {

    swift_bridgeObjectRelease_n(v3, 2LL);
    if (!v3)
    {
LABEL_14:
      v13.super.Class isa = 0LL;
      goto LABEL_15;
    }
  }

  v13.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
LABEL_15:
  id v14 = sub_100089D90(v13.super.isa);

  if (!v14) {
    return 0LL;
  }
  uint64_t v15 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v14);

  return (id)v15;
}

uint64_t sub_100458F38@<X0>( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  LODWORD(v11) = a4 & 1;
  uint64_t v12 = type metadata accessor for UUID(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v71 = 0LL;
  memset(v70, 0, sizeof(v70));
  if ((unint64_t)(a3 - 9) <= 5)
  {
    uint64_t v61 = a5;
    uint64_t v62 = v13;
    uint64_t v63 = a1;
    int v64 = v11;
    uint64_t v16 = a2[3];
    uint64_t v17 = a2[4];
    sub_10019A708(a2, v16);
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
    if (v19)
    {
      uint64_t v20 = v18;
      uint64_t v21 = v19;
      if (qword_100644088 != -1) {
        swift_once(&qword_100644088, sub_100270494);
      }
      swift_bridgeObjectRetain(v21);
      LOBYTE(v11) = v64;
      sub_1002712F8(3);
      uint64_t v59 = v35;
      swift_bridgeObjectRelease(v21);
      if (qword_100644408 != -1) {
        swift_once(&qword_100644408, sub_100458568);
      }
      uint64_t v36 = type metadata accessor for Logger(0LL);
      uint64_t v37 = sub_100186DE4(v36, (uint64_t)qword_100656748);
      uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
      os_log_type_t v39 = static os_log_type_t.default.getter();
      int v40 = v39;
      BOOL v41 = os_log_type_enabled(v38, v39);
      uint64_t v60 = v20;
      if (v41)
      {
        uint64_t v42 = swift_slowAlloc(22LL, -1LL);
        int v57 = v40;
        uint64_t v43 = v42;
        uint64_t v58 = swift_slowAlloc(64LL, -1LL);
        v67[0] = v58;
        *(_DWORD *)uint64_t v43 = 136315394;
        uint64_t v66 = sub_10018CDB4(0x646F4D7473657567LL, 0xEF6B636F6C6E5565LL, v67);
        uint64_t v44 = v38;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, v67, v43 + 4, v43 + 12);
        *(_WORD *)(v43 + 12) = 2080;
        uint64_t v56 = v43 + 14;
        unint64_t v45 = sub_10034F010(a3);
        unint64_t v11 = v46;
        uint64_t v66 = sub_10018CDB4(v45, v46, v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, v67, v56, v43 + 22);
        unint64_t v47 = v11;
        LOBYTE(v11) = v64;
        swift_bridgeObjectRelease(v47);
        _os_log_impl( (void *)&_mh_execute_header,  v38,  (os_log_type_t)v57,  "Start flow %s:%s with SDAuthentication.LTKManager",  (uint8_t *)v43,  0x16u);
        uint64_t v48 = v58;
        swift_arrayDestroy(v58, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v48, -1LL, -1LL);
        swift_slowDealloc(v43, -1LL, -1LL);
      }

      else
      {
      }

      uint64_t v13 = v62;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v15, v63, v12);
      uint64_t v49 = _s10LTKSessionCMa(0LL);
      uint64_t v50 = swift_allocObject(v49, *(unsigned int *)(v49 + 48), *(unsigned __int16 *)(v49 + 52));
      uint64_t v51 = v50 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession;
      *(void *)uint64_t v51 = 0LL;
      *(_BYTE *)(v51 + 8) = 1;
      *(_BYTE *)(v50 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_role) = v11;
      unint64_t v52 = (uint64_t *)(v50 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID);
      *unint64_t v52 = v60;
      v52[1] = v21;
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))( v50 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_sessionID,  v15,  v12);
      *(void *)(v50 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_type) = a3;
      *(void *)(v50 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK) = v59;
      uint64_t v68 = v49;
      unint64_t v69 = &off_1005D79B8;
      v67[0] = v50;
      a1 = v63;
      sub_100187100((uint64_t)v70, &qword_100650060);
      sub_1001870BC((uint64_t)v67, (uint64_t)v70, &qword_100650060);
    }

    else
    {
      if (qword_100644408 != -1) {
        swift_once(&qword_100644408, sub_100458568);
      }
      uint64_t v22 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v22, (uint64_t)qword_100656748);
      uint64_t v23 = sub_10019A6C4((uint64_t)a2, (uint64_t)v67);
      uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
      os_log_type_t v25 = static os_log_type_t.error.getter(v24);
      if (os_log_type_enabled(v24, v25))
      {
        id v26 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v60 = swift_slowAlloc(32LL, -1LL);
        uint64_t v66 = v60;
        *(_DWORD *)id v26 = 136315138;
        id v27 = v26 + 12;
        uint64_t v58 = (uint64_t)(v26 + 4);
        uint64_t v59 = v26;
        uint64_t v29 = v68;
        uint64_t v28 = v69;
        sub_10019A708(v67, v68);
        uint64_t v30 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v28[9])(v29, v28);
        unint64_t v32 = v31;
        uint64_t v65 = sub_10018CDB4(v30, v31, &v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v58, v27);
        swift_bridgeObjectRelease(v32);
        sub_10018709C(v67);
        uint64_t v33 = v59;
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "No uniqueIDOverride in %s", v59, 0xCu);
        uint64_t v34 = v60;
        swift_arrayDestroy(v60, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v34, -1LL, -1LL);
        swift_slowDealloc(v33, -1LL, -1LL);
      }

      else
      {
        sub_10018709C(v67);
      }

      LOBYTE(v11) = v64;
      uint64_t v13 = v62;
      a1 = v63;
    }

    a5 = v61;
  }

  sub_10019A6C4(a5, a6);
  sub_10019A6C4((uint64_t)a2, a6 + 40);
  unint64_t v53 = (int *)type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a6 + v53[6], a1, v12);
  *(void *)(a6 + v53[7]) = a3;
  *(_BYTE *)(a6 + v53[8]) = v11;
  return sub_1001870BC((uint64_t)v70, a6 + v53[9], &qword_100650060);
}

uint64_t sub_100459738@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  id v482 = a3;
  v485 = a2;
  uint64_t v487 = a4;
  uint64_t v475 = _s6UnpairV23InitialInitiatorContextVMa(0LL);
  __chkstk_darwin(v475);
  v477 = (uint64_t *)((char *)&v427 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v473 = _s6UnpairV23InitialResponderContextVMa(0LL);
  __chkstk_darwin(v473);
  v474 = (char *)&v427 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v461 = _s8KeyCheckV17InitialKeyContextVMa(0LL);
  __chkstk_darwin(v461);
  v463 = (uint64_t *)((char *)&v427 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v457 = _s8KeyCheckV18InitialLockContextVMa(0LL);
  __chkstk_darwin(v457);
  v458 = (uint64_t *)((char *)&v427 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v453 = _s27GuestModeUnlockRegistrationV17InitialKeyContextVMa(0LL);
  __chkstk_darwin(v453);
  v454 = (uint64_t *)((char *)&v427 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v460 = _s27GuestModeUnlockRegistrationV18InitialLockContextVMa(0LL);
  __chkstk_darwin(v460);
  v462 = (uint64_t *)((char *)&v427 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v452 = _s22GuestModeUnlockPairingV17InitialKeyContextVMa(0LL);
  __chkstk_darwin(v452);
  v456 = (uint64_t *)((char *)&v427 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v459 = _s22GuestModeUnlockPairingV18InitialLockContextVMa(0LL);
  __chkstk_darwin(v459);
  v464 = (uint64_t *)((char *)&v427 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v447 = _s15GuestModeUnlockV17InitialKeyContextVMa(0LL);
  __chkstk_darwin(v447);
  v451 = (uint64_t *)((char *)&v427 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v476 = _s15GuestModeUnlockV4FlowVMa(0LL);
  __chkstk_darwin(v476);
  v478 = (char *)&v427 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v450 = _s15GuestModeUnlockV18InitialLockContextVMa(0LL);
  uint64_t v15 = __chkstk_darwin(v450);
  v449 = (uint64_t *)((char *)&v427 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v15);
  v455 = (uint64_t *)((char *)&v427 - v17);
  uint64_t v433 = _s15MacApprovePhoneV17InitialKeyContextVMa(0LL);
  __chkstk_darwin(v433);
  v435 = (uint64_t *)((char *)&v427 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v469 = _s15MacApprovePhoneV4FlowVMa(0LL);
  __chkstk_darwin(v469);
  v471 = (char *)&v427 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v438 = _s15MacApprovePhoneV18InitialLockContextVMa(0LL);
  __chkstk_darwin(v438);
  v439 = (uint64_t *)((char *)&v427 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v436 = _s14MacUnlockPhoneV17InitialKeyContextVMa(0LL);
  __chkstk_darwin(v436);
  v437 = (uint64_t *)((char *)&v427 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v468 = _s14MacUnlockPhoneV4FlowVMa(0LL);
  __chkstk_darwin(v468);
  v470 = (char *)&v427 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for UUID(0LL);
  uint64_t v483 = *(void *)(v23 - 8);
  uint64_t v484 = v23;
  uint64_t v24 = __chkstk_darwin(v23);
  v446 = (char *)&v427 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = __chkstk_darwin(v24);
  v442 = (char *)&v427 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v448 = (char *)&v427 - v29;
  __chkstk_darwin(v28);
  v428 = (char *)&v427 - v30;
  uint64_t v431 = _s14MacUnlockPhoneV18InitialLockContextVMa(0LL);
  __chkstk_darwin(v431);
  v434 = (char *)&v427 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v444 = _s10NanoWalletV17InitialKeyContextVMa(0LL);
  __chkstk_darwin(v444);
  v445 = (uint64_t *)((char *)&v427 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v479 = _s10NanoWalletV4FlowVMa(0LL);
  __chkstk_darwin(v479);
  v480 = (uint64_t *)((char *)&v427 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v34 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v37 = (uint64_t)&v427 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v35);
  uint64_t v486 = (uint64_t)&v427 - v38;
  uint64_t v39 = sub_100183098(&qword_1006457E8);
  uint64_t v40 = __chkstk_darwin(v39);
  uint64_t v472 = (uint64_t)&v427 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v467 = (uint64_t)&v427 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  v432 = (char *)&v427 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v430 = (uint64_t)&v427 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v481 = (uint64_t)&v427 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v429 = (uint64_t)&v427 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v440 = (uint64_t)&v427 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  v443 = (char *)&v427 - v55;
  __chkstk_darwin(v54);
  v441 = (char *)&v427 - v56;
  int v57 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v58 = __chkstk_darwin(v57);
  uint64_t v60 = (char *)&v427 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v61 = __chkstk_darwin(v58);
  uint64_t v63 = (char *)&v427 - v62;
  uint64_t v64 = __chkstk_darwin(v61);
  uint64_t v66 = (char *)&v427 - v65;
  uint64_t v67 = __chkstk_darwin(v64);
  unint64_t v69 = (char *)&v427 - v68;
  uint64_t v70 = __chkstk_darwin(v67);
  uint64_t v466 = (uint64_t)&v427 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  uint64_t v465 = (uint64_t)&v427 - v73;
  uint64_t v74 = __chkstk_darwin(v72);
  unint64_t v76 = (char *)&v427 - v75;
  __chkstk_darwin(v74);
  uint64_t v78 = (char *)&v427 - v77;
  uint64_t v79 = (int *)_s10NanoWalletV18InitialLockContextVMa(0LL);
  uint64_t v80 = (void *)__chkstk_darwin(a1);
  uint64_t v83 = (uint64_t *)((char *)&v427 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v84 = *(void *)(a1 + *(int *)(v81 + 28)) - 2LL;
  char v85 = *((_BYTE *)v80 + *(int *)(v81 + 32));
  switch(v84)
  {
    case 0LL:
      uint64_t v86 = v80;
      if ((*((_BYTE *)v80 + *(int *)(v81 + 32)) & 1) != 0)
      {
        uint64_t v87 = type metadata accessor for SDAuthenticationRangingSession(0LL);
        swift_allocObject(v87, *(unsigned int *)(v87 + 48), *(unsigned __int16 *)(v87 + 52));
        uint64_t v88 = sub_1002C0CFC();
        int64_t v89 = v445;
        v445[4] = v87;
        v89[5] = (uint64_t)&off_1005D8E28;
        v89[1] = v88;
        uint64_t v90 = v444;
        uint64_t v91 = (char *)v89 + *(int *)(v444 + 24);
        uint64_t v92 = type metadata accessor for Date(0LL);
        id v93 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56LL);
        v93(v91, 1LL, 1LL, v92);
        v93(&v91[v57[5]], 1LL, 1LL, v92);
        v93(&v91[v57[6]], 1LL, 1LL, v92);
        v93(&v91[v57[7]], 1LL, 1LL, v92);
        v93(&v91[v57[8]], 1LL, 1LL, v92);
        v93(&v91[v57[9]], 1LL, 1LL, v92);
        v93(&v91[v57[10]], 1LL, 1LL, v92);
        v93(&v91[v57[11]], 1LL, 1LL, v92);
        v93(&v91[v57[12]], 1LL, 1LL, v92);
        v91[v57[13]] = 0;
        v93(&v91[v57[14]], 1LL, 1LL, v92);
        v93(&v91[v57[15]], 1LL, 1LL, v92);
        v93(&v91[v57[16]], 1LL, 1LL, v92);
        v93(&v91[v57[17]], 1LL, 1LL, v92);
        int64_t v94 = &v91[v57[18]];
        *(_DWORD *)int64_t v94 = 0;
        v94[4] = 1;
        v91[v57[19]] = 2;
        uint64_t v95 = &v91[v57[20]];
        *(void *)uint64_t v95 = 0LL;
        *((void *)v95 + 1) = 0LL;
        unint64_t v96 = &v91[v57[21]];
        *(void *)unint64_t v96 = 0LL;
        *((void *)v96 + 1) = 0LL;
        unint64_t v97 = *(uint64_t (**)(uint64_t))&v485[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo];
        uint64_t v98 = *(void *)&v485[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo + 8];
        uint64_t v99 = swift_retain(v98);
        uint64_t v100 = v97(v99);
        uint64_t v102 = v101;
        swift_release(v98);
        uint64_t *v89 = (uint64_t)_swiftEmptyArrayStorage;
        unint64_t v103 = (uint64_t *)((char *)v89 + *(int *)(v90 + 28));
        uint64_t *v103 = v100;
        v103[1] = v102;
        *(_OWORD *)((char *)v89 + *(int *)(v90 + swift_release(*(void *)(v0 + 32)) = xmmword_1004CD540;
        uint64_t v490 = v90;
        v491 = &off_1005D42C8;
        uint64_t v104 = sub_1001A4B04(&v489);
        uint64_t v105 = _s10NanoWalletV17InitialKeyContextVMa;
        sub_1001A4B84((uint64_t)v89, (uint64_t)v104, _s10NanoWalletV17InitialKeyContextVMa);
        uint64_t v106 = (uint64_t)v86;
        uint64_t v107 = v486;
        sub_1001A4B84(v106, v486, type metadata accessor for SDAuthenticationCommonOperationInput);
        uint64_t v108 = (int *)v479;
        uint64_t v494 = v479;
        v495 = (char **)&off_1005D4270;
        uint64_t v109 = sub_1001A4B04(&v493);
        int v110 = v480;
        *(void *)((char *)v480 + v108[6]) = _swiftEmptyArrayStorage;
        *(void *)((char *)v110 + v108[7]) = _swiftEmptyArrayStorage;
      }

      else
      {
        int64_t v89 = v83;
        uint64_t v214 = type metadata accessor for SDAuthenticationRangingSession(0LL);
        swift_allocObject(v214, *(unsigned int *)(v214 + 48), *(unsigned __int16 *)(v214 + 52));
        uint64_t v215 = sub_1002C0CFC();
        uint64_t v494 = v214;
        v495 = &off_1005D8E28;
        *(void *)&__int128 v493 = v215;
        uint64_t v216 = type metadata accessor for Date(0LL);
        uint64_t v217 = *(void *)(v216 - 8);
        v218 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v217 + 56);
        v218(v78, 1LL, 1LL, v216);
        v218(&v78[v57[5]], 1LL, 1LL, v216);
        v218(&v78[v57[6]], 1LL, 1LL, v216);
        v218(&v78[v57[7]], 1LL, 1LL, v216);
        v218(&v78[v57[8]], 1LL, 1LL, v216);
        v218(&v78[v57[9]], 1LL, 1LL, v216);
        v218(&v78[v57[10]], 1LL, 1LL, v216);
        v218(&v78[v57[11]], 1LL, 1LL, v216);
        v218(&v78[v57[12]], 1LL, 1LL, v216);
        v78[v57[13]] = 0;
        v218(&v78[v57[14]], 1LL, 1LL, v216);
        v218(&v78[v57[15]], 1LL, 1LL, v216);
        v218(&v78[v57[16]], 1LL, 1LL, v216);
        v218(&v78[v57[17]], 1LL, 1LL, v216);
        v219 = &v78[v57[18]];
        *(_DWORD *)v219 = 0;
        v219[4] = 1;
        v78[v57[19]] = 2;
        v220 = &v78[v57[20]];
        *(void *)v220 = 0LL;
        *((void *)v220 + 1) = 0LL;
        v221 = &v78[v57[21]];
        *(void *)v221 = 0LL;
        *((void *)v221 + 1) = 0LL;
        uint64_t v222 = (uint64_t)v441;
        v218(v441, 1LL, 1LL, v216);
        v223 = v485;
        v224 = &v485[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager];
        swift_beginAccess( &v485[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager],  v492,  0LL,  0LL);
        uint64_t v225 = *sub_10019A708(v224, *((void *)v224 + 3))
             + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
        swift_beginAccess(v225, v488, 0LL, 0LL);
        uint64_t v226 = v225;
        uint64_t v227 = v440;
        sub_1001915A4(v226, v440, &qword_1006457E8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v217 + 48))(v227, 1LL, v216) == 1)
        {
          uint64_t v228 = (uint64_t)v443;
          static Date.distantFuture.getter();
          sub_100187100(v227, &qword_1006457E8);
        }

        else
        {
          v307 = *(void (**)(char *, uint64_t, uint64_t))(v217 + 32);
          uint64_t v228 = (uint64_t)v443;
          v307(v443, v227, v216);
        }

        v218((char *)v228, 0LL, 1LL, v216);
        v308 = *(uint64_t (**)(uint64_t))&v223[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo];
        uint64_t v309 = *(void *)&v223[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo + 8];
        uint64_t v310 = swift_retain(v309);
        uint64_t v311 = v308(v310);
        uint64_t v313 = v312;
        swift_release(v309);
        uint64_t *v89 = sub_1001E0480();
        sub_1001CE0D0(&v493, (uint64_t)(v89 + 1));
        sub_1001A4B40((uint64_t)v78, (uint64_t)v89 + v79[6], type metadata accessor for SDAuthenticationSessionMetrics);
        sub_1001870BC(v222, (uint64_t)v89 + v79[7], &qword_1006457E8);
        sub_1001870BC(v228, (uint64_t)v89 + v79[8], &qword_1006457E8);
        v314 = (uint64_t *)((char *)v89 + v79[9]);
        uint64_t *v314 = v311;
        v314[1] = v313;
        *(_OWORD *)((char *)v89 + v79[10]) = xmmword_1004CD540;
        *(uint64_t *)((char *)v89 + v79[11]) = 0LL;
        *((_BYTE *)v89 + v79[12]) = 0;
        uint64_t v490 = (uint64_t)v79;
        v491 = &off_1005D4258;
        v315 = sub_1001A4B04(&v489);
        uint64_t v105 = _s10NanoWalletV18InitialLockContextVMa;
        sub_1001A4B84((uint64_t)v89, (uint64_t)v315, _s10NanoWalletV18InitialLockContextVMa);
        uint64_t v316 = (uint64_t)v86;
        uint64_t v107 = v486;
        sub_1001A4B84(v316, v486, type metadata accessor for SDAuthenticationCommonOperationInput);
        uint64_t v108 = (int *)v479;
        uint64_t v494 = v479;
        v495 = (char **)&off_1005D4270;
        uint64_t v109 = sub_1001A4B04(&v493);
        int v110 = v480;
        *(void *)((char *)v480 + v108[6]) = _swiftEmptyArrayStorage;
        *(void *)((char *)v110 + v108[7]) = _swiftEmptyArrayStorage;
      }

      uint64_t v317 = v490;
      v318 = v491;
      v319 = sub_10019A708(&v489, v490);
      v320 = (void *)((char *)v110 + v108[5]);
      v320[3] = v317;
      v320[4] = *((void *)v318[1] + 1);
      v321 = sub_1001A4B04(v320);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v317 - 8) + 16LL))(v321, v319, v317);
      sub_1001A4B40(v107, (uint64_t)v110, type metadata accessor for SDAuthenticationCommonOperationInput);
      v283 = _s10NanoWalletV4FlowVMa;
      goto LABEL_56;
    case 4LL:
      uint64_t v137 = v81;
      if ((*((_BYTE *)v80 + *(int *)(v81 + 32)) & 1) != 0)
      {
        uint64_t v138 = *(int *)(v81 + 32);
        uint64_t v139 = *(int *)(v81 + 28);
        v480 = v80;
        sub_1001915A4((uint64_t)v482, (uint64_t)&v493, &qword_1006569F8);
        if (v494)
        {
          uint64_t v140 = sub_100183098(&qword_100656AD8);
          uint64_t v141 = sub_100183168(0LL, &qword_1006569F0, &OBJC_CLASS___SFAuthenticationOptions_ptr);
          int v142 = swift_dynamicCast(&v489, &v493, v140, v141, 6LL);
          uint64_t v143 = v489;
          if (!v142) {
            uint64_t v143 = 0LL;
          }
          id v482 = v143;
        }

        else
        {
          sub_100187100((uint64_t)&v493, &qword_1006569F8);
          id v482 = 0LL;
        }

        v323 = v448;
        v324 = v480;
        uint64_t v325 = v480[8];
        uint64_t v37 = v480[9];
        sub_10019A708(v480 + 5, v325);
        uint64_t v80 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v325, v37);
        if (v326)
        {
          uint64_t v327 = v326;
          sub_10045D5D0((uint64_t)v80, v326, v481);
          swift_bridgeObjectRelease(v327);
          uint64_t v328 = type metadata accessor for Date(0LL);
          v329 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v328 - 8) + 56LL);
          uint64_t v330 = v465;
          v329(v465, 1LL, 1LL, v328);
          v329(v330 + v57[5], 1LL, 1LL, v328);
          v329(v330 + v57[6], 1LL, 1LL, v328);
          v329(v330 + v57[7], 1LL, 1LL, v328);
          v329(v330 + v57[8], 1LL, 1LL, v328);
          v329(v330 + v57[9], 1LL, 1LL, v328);
          v329(v330 + v57[10], 1LL, 1LL, v328);
          v329(v330 + v57[11], 1LL, 1LL, v328);
          v329(v330 + v57[12], 1LL, 1LL, v328);
          *(_BYTE *)(v330 + v57[13]) = 0;
          v329(v330 + v57[14], 1LL, 1LL, v328);
          v329(v330 + v57[15], 1LL, 1LL, v328);
          v329(v330 + v57[16], 1LL, 1LL, v328);
          v329(v330 + v57[17], 1LL, 1LL, v328);
          uint64_t v331 = v330 + v57[18];
          *(_DWORD *)uint64_t v331 = 0;
          *(_BYTE *)(v331 + 4) = 1;
          *(_BYTE *)(v330 + v57[19]) = 2;
          v332 = (void *)(v330 + v57[20]);
          void *v332 = 0LL;
          v332[1] = 0LL;
          v333 = (void *)(v330 + v57[21]);
          void *v333 = 0LL;
          v333[1] = 0LL;
          uint64_t v37 = *((unsigned __int8 *)v324 + v138);
          sub_10019A6C4((uint64_t)(v324 + 5), (uint64_t)&v493);
          v334 = (char *)v324 + *(int *)(v137 + 24);
          uint64_t v335 = v483;
          v336 = v323;
          v337 = v323;
          uint64_t v338 = v484;
          (*(void (**)(char *, char *, uint64_t))(v483 + 16))(v336, v334, v484);
          uint64_t v339 = *(void *)((char *)v324 + v139);
          uint64_t v340 = type metadata accessor for SDAuthenticationAKSAuthSession(0LL);
          uint64_t v341 = swift_allocObject(v340, *(unsigned int *)(v340 + 48), *(unsigned __int16 *)(v340 + 52));
          *(void *)(v341 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0LL;
          uint64_t v80 = [(id)objc_opt_self(SDAutoUnlockAKSManager) sharedManager];
          if (v80)
          {
            *(void *)(v341 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = v80;
            *(_BYTE *)(v341 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = v37;
            sub_1001CE0D0(&v493, v341 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
            (*(void (**)(uint64_t, char *, uint64_t))(v335 + 32))( v341 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID,  v337,  v338);
            *(void *)(v341 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = v339;
            uint64_t v494 = v340;
            v495 = (char **)&off_1005E2058;
            *(void *)&__int128 v493 = v341;
            uint64_t v342 = v430;
            sub_1001915A4(v481, v430, &qword_1006457E8);
            uint64_t v343 = (uint64_t)v432;
            v329((uint64_t)v432, 1LL, 1LL, v328);
            if (v482)
            {
              id v344 = [v482 authorizationToken];
              v345 = (int *)v436;
              if (v344)
              {
                v346 = v344;
                uint64_t v347 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v344);
                unint64_t v349 = v348;
              }

              else
              {
                uint64_t v347 = 0LL;
                unint64_t v349 = 0xF000000000000000LL;
              }
            }

            else
            {
              uint64_t v347 = 0LL;
              unint64_t v349 = 0xF000000000000000LL;
              v345 = (int *)v436;
            }

            uint64_t v411 = sub_1003077E8();
            uint64_t v412 = (uint64_t)v437;
            uint64_t *v437 = v411;
            sub_1001A4B40(v465, v412 + v345[5], type metadata accessor for SDAuthenticationSessionMetrics);
            sub_1001CE0D0(&v493, v412 + v345[6]);
            sub_1001870BC(v342, v412 + v345[7], &qword_1006457E8);
            sub_1001870BC(v343, v412 + v345[8], &qword_1006457E8);
            v413 = (uint64_t *)(v412 + v345[9]);
            uint64_t *v413 = v347;
            v413[1] = v349;
            *(void *)(v412 + v345[10]) = 0LL;
            *(_BYTE *)(v412 + v345[11]) = 0;
            uint64_t v490 = (uint64_t)v345;
            v491 = &off_1005DA8D8;
            v414 = sub_1001A4B04(&v489);
            sub_1001A4B84(v412, (uint64_t)v414, _s14MacUnlockPhoneV17InitialKeyContextVMa);
            uint64_t v415 = v486;
            sub_1001A4B84((uint64_t)v480, v486, type metadata accessor for SDAuthenticationCommonOperationInput);
            v416 = (int *)v468;
            uint64_t v494 = v468;
            v495 = (char **)&off_1005DA880;
            v417 = sub_1001A4B04(&v493);
            uint64_t v418 = (uint64_t)v470;
            *(void *)&v470[v416[6]] = _swiftEmptyArrayStorage;
            *(void *)(v418 + v416[7]) = _swiftEmptyArrayStorage;
            uint64_t v419 = v490;
            v420 = v491;
            v421 = sub_10019A708(&v489, v490);
            v422 = (void *)(v418 + v416[5]);
            v422[3] = v419;
            v422[4] = *((void *)v420[1] + 1);
            v423 = sub_1001A4B04(v422);
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v419 - 8) + 16LL))(v423, v421, v419);
            sub_1001A4B40(v415, v418, type metadata accessor for SDAuthenticationCommonOperationInput);
            sub_1001A4B40(v418, (uint64_t)v417, _s14MacUnlockPhoneV4FlowVMa);
            sub_10018709C(&v489);

            sub_1001A4BC8(v412, _s14MacUnlockPhoneV17InitialKeyContextVMa);
            uint64_t v270 = v481;
            goto LABEL_93;
          }

          goto LABEL_98;
        }

LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        uint64_t v424 = v81;
        sub_1001A4B84((uint64_t)v80, v37, type metadata accessor for SDAuthenticationCommonOperationInput);
        *(void *)&__int128 v493 = 0LL;
        *((void *)&v493 + 1) = 0xE000000000000000LL;
        _StringGuts.grow(_:)(36LL);
        swift_bridgeObjectRelease(*((void *)&v493 + 1));
        *(void *)&__int128 v493 = 0xD000000000000022LL;
        *((void *)&v493 + 1) = 0x8000000100511310LL;
        v425._countAndFlagsBits = sub_10034F010(*(void *)(v37 + *(int *)(v424 + 28)));
        object = v425._object;
        String.append(_:)(v425);
        swift_bridgeObjectRelease(object);
        _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v493,  *((void *)&v493 + 1),  "DaemoniOSLibrary/SDAuthenticationManager.swift",  46LL,  2LL,  284LL,  0);
        __break(1u);
        JUMPOUT(0x10045D59CLL);
      }

      uint64_t v235 = (uint64_t)(v80 + 5);
      uint64_t v236 = v80[8];
      uint64_t v237 = v80[9];
      uint64_t v37 = (uint64_t)v80;
      sub_10019A708(v80 + 5, v236);
      uint64_t v80 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v237 + 8))(v236, v237);
      v239 = v485;
      if (!v238) {
        goto LABEL_95;
      }
      uint64_t v240 = v238;
      uint64_t v241 = v429;
      sub_10045D5D0((uint64_t)v80, v238, v429);
      swift_bridgeObjectRelease(v240);
      sub_10019A6C4(v235, (uint64_t)&v493);
      uint64_t v242 = v37 + *(int *)(v137 + 24);
      uint64_t v244 = v483;
      uint64_t v243 = v484;
      v245 = v428;
      (*(void (**)(char *, uint64_t, uint64_t))(v483 + 16))(v428, v242, v484);
      uint64_t v246 = type metadata accessor for SDAuthenticationAKSAuthSession(0LL);
      uint64_t v247 = swift_allocObject(v246, *(unsigned int *)(v246 + 48), *(unsigned __int16 *)(v246 + 52));
      *(void *)(v247 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0LL;
      uint64_t v80 = [(id)objc_opt_self(SDAutoUnlockAKSManager) sharedManager];
      if (v80)
      {
        *(void *)(v247 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = v80;
        *(_BYTE *)(v247 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = 0;
        sub_1001CE0D0(&v493, v247 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
        (*(void (**)(uint64_t, char *, uint64_t))(v244 + 32))( v247 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID,  v245,  v243);
        *(void *)(v247 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = 6LL;
        uint64_t v494 = v246;
        v495 = (char **)&off_1005E2058;
        *(void *)&__int128 v493 = v247;
        uint64_t v248 = type metadata accessor for Date(0LL);
        v249 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v248 - 8) + 56LL);
        v249(v76, 1LL, 1LL, v248);
        v249(&v76[v57[5]], 1LL, 1LL, v248);
        v249(&v76[v57[6]], 1LL, 1LL, v248);
        v249(&v76[v57[7]], 1LL, 1LL, v248);
        v249(&v76[v57[8]], 1LL, 1LL, v248);
        v249(&v76[v57[9]], 1LL, 1LL, v248);
        v249(&v76[v57[10]], 1LL, 1LL, v248);
        v249(&v76[v57[11]], 1LL, 1LL, v248);
        v249(&v76[v57[12]], 1LL, 1LL, v248);
        v76[v57[13]] = 0;
        v249(&v76[v57[14]], 1LL, 1LL, v248);
        v249(&v76[v57[15]], 1LL, 1LL, v248);
        v249(&v76[v57[16]], 1LL, 1LL, v248);
        v249(&v76[v57[17]], 1LL, 1LL, v248);
        v250 = &v76[v57[18]];
        *(_DWORD *)v250 = 0;
        v250[4] = 1;
        v76[v57[19]] = 2;
        v251 = &v76[v57[20]];
        *(void *)v251 = 0LL;
        *((void *)v251 + 1) = 0LL;
        v252 = &v76[v57[21]];
        *(void *)v252 = 0LL;
        *((void *)v252 + 1) = 0LL;
        v253 = &v239[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager];
        swift_beginAccess(v253, v492, 0LL, 0LL);
        v254 = sub_10019A708(v253, *((void *)v253 + 3));
        uint64_t v255 = v431;
        v256 = v434;
        uint64_t v257 = (uint64_t)&v434[*(int *)(v431 + 32)];
        uint64_t v258 = *v254 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
        swift_beginAccess(v258, v488, 0LL, 0LL);
        sub_1001915A4(v258, v257, &qword_1006457E8);
        void *v256 = _swiftEmptyArrayStorage;
        sub_1001CE0D0(&v493, (uint64_t)(v256 + 1));
        sub_1001A4B40( (uint64_t)v76,  (uint64_t)v256 + *(int *)(v255 + 24),  type metadata accessor for SDAuthenticationSessionMetrics);
        sub_1001915A4(v241, (uint64_t)v256 + *(int *)(v255 + 28), &qword_1006457E8);
        uint64_t v490 = v255;
        v491 = &off_1005DA868;
        v259 = sub_1001A4B04(&v489);
        sub_1001A4B84((uint64_t)v256, (uint64_t)v259, _s14MacUnlockPhoneV18InitialLockContextVMa);
        uint64_t v260 = v486;
        sub_1001A4B84(v37, v486, type metadata accessor for SDAuthenticationCommonOperationInput);
        v261 = (int *)v468;
        uint64_t v494 = v468;
        v495 = (char **)&off_1005DA880;
        v262 = sub_1001A4B04(&v493);
        uint64_t v263 = v241;
        uint64_t v264 = (uint64_t)v470;
        *(void *)&v470[v261[6]] = _swiftEmptyArrayStorage;
        *(void *)(v264 + v261[7]) = _swiftEmptyArrayStorage;
        uint64_t v265 = v490;
        v266 = v491;
        v267 = sub_10019A708(&v489, v490);
        v268 = (void *)(v264 + v261[5]);
        v268[3] = v265;
        v268[4] = *((void *)v266[1] + 1);
        v269 = sub_1001A4B04(v268);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v265 - 8) + 16LL))(v269, v267, v265);
        sub_1001A4B40(v260, v264, type metadata accessor for SDAuthenticationCommonOperationInput);
        sub_1001A4B40(v264, (uint64_t)v262, _s14MacUnlockPhoneV4FlowVMa);
        sub_10018709C(&v489);
        sub_1001A4BC8((uint64_t)v256, _s14MacUnlockPhoneV18InitialLockContextVMa);
        uint64_t v270 = v263;
LABEL_93:
        sub_100187100(v270, &qword_1006457E8);
        return sub_1001CE0D0(&v493, v487);
      }

      goto LABEL_96;
    case 5LL:
      uint64_t v111 = v81;
      uint64_t v112 = (uint64_t)v80;
      if ((*((_BYTE *)v80 + *(int *)(v81 + 32)) & 1) == 0)
      {
        uint64_t v229 = *(int *)(v81 + 32);
        uint64_t v230 = *(int *)(v81 + 28);
        sub_1001915A4((uint64_t)v482, (uint64_t)&v493, &qword_1006569F8);
        uint64_t v231 = v483;
        uint64_t v37 = v484;
        if (v494)
        {
          uint64_t v232 = sub_100183098(&qword_100656AD8);
          uint64_t v233 = sub_100183168(0LL, &qword_1006569F0, &OBJC_CLASS___SFAuthenticationOptions_ptr);
          else {
            v234 = 0LL;
          }
        }

        else
        {
          sub_100187100((uint64_t)&v493, &qword_1006569F8);
          v234 = 0LL;
        }

        char v350 = *(_BYTE *)(v112 + v229);
        sub_10019A6C4(v112 + 40, (uint64_t)&v493);
        v351 = v442;
        (*(void (**)(char *, uint64_t, uint64_t))(v231 + 16))(v442, v112 + *(int *)(v111 + 24), v37);
        uint64_t v352 = *(void *)(v112 + v230);
        uint64_t v353 = type metadata accessor for SDAuthenticationAKSAuthSession(0LL);
        uint64_t v354 = swift_allocObject(v353, *(unsigned int *)(v353 + 48), *(unsigned __int16 *)(v353 + 52));
        *(void *)(v354 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0LL;
        uint64_t v80 = [(id)objc_opt_self(SDAutoUnlockAKSManager) sharedManager];
        if (!v80) {
          goto LABEL_99;
        }
        *(void *)(v354 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = v80;
        *(_BYTE *)(v354 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = v350;
        sub_1001CE0D0(&v493, v354 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
        (*(void (**)(uint64_t, char *, uint64_t))(v231 + 32))( v354 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID,  v351,  v37);
        *(void *)(v354 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = v352;
        uint64_t v494 = v353;
        v495 = (char **)&off_1005E2058;
        *(void *)&__int128 v493 = v354;
        uint64_t v355 = type metadata accessor for Date(0LL);
        v356 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v355 - 8) + 56LL);
        uint64_t v357 = v466;
        v356(v466, 1LL, 1LL, v355);
        v356(v357 + v57[5], 1LL, 1LL, v355);
        v356(v357 + v57[6], 1LL, 1LL, v355);
        v356(v357 + v57[7], 1LL, 1LL, v355);
        v356(v357 + v57[8], 1LL, 1LL, v355);
        v356(v357 + v57[9], 1LL, 1LL, v355);
        v356(v357 + v57[10], 1LL, 1LL, v355);
        v356(v357 + v57[11], 1LL, 1LL, v355);
        v356(v357 + v57[12], 1LL, 1LL, v355);
        *(_BYTE *)(v357 + v57[13]) = 0;
        v356(v357 + v57[14], 1LL, 1LL, v355);
        v356(v357 + v57[15], 1LL, 1LL, v355);
        v356(v357 + v57[16], 1LL, 1LL, v355);
        v356(v357 + v57[17], 1LL, 1LL, v355);
        uint64_t v358 = v357 + v57[18];
        *(_DWORD *)uint64_t v358 = 0;
        *(_BYTE *)(v358 + 4) = 1;
        unsigned __int8 v359 = 2;
        *(_BYTE *)(v357 + v57[19]) = 2;
        v360 = (void *)(v357 + v57[20]);
        void *v360 = 0LL;
        v360[1] = 0LL;
        v361 = (void *)(v357 + v57[21]);
        void *v361 = 0LL;
        v361[1] = 0LL;
        v356(v467, 1LL, 1LL, v355);
        v485 = v234;
        if (v234)
        {
          id v362 = [v234 bundleID];
          if (v362)
          {
            v363 = v362;
            uint64_t v364 = static String._unconditionallyBridgeFromObjectiveC(_:)(v362);
            uint64_t v366 = v365;
          }

          else
          {
            uint64_t v364 = 0LL;
            uint64_t v366 = 0LL;
          }

          id v388 = [v234 appName];
          if (v388)
          {
            v389 = v388;
            uint64_t v386 = static String._unconditionallyBridgeFromObjectiveC(_:)(v388);
            uint64_t v387 = v390;
          }

          else
          {
            uint64_t v386 = 0LL;
            uint64_t v387 = 0LL;
          }

          unsigned __int8 v359 = [v234 biometricOnly];
          id v391 = [v234 acmContext];
          if (v391)
          {
            v392 = v391;
            uint64_t v385 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v391);
            unint64_t v394 = v393;

LABEL_90:
            uint64_t v395 = sub_10019BB48();
            uint64_t v396 = (uint64_t)v439;
            uint64_t *v439 = v395;
            sub_1001CE0D0(&v493, v396 + 8);
            v397 = (int *)v438;
            sub_1001A4B40(v466, v396 + *(int *)(v438 + 24), type metadata accessor for SDAuthenticationSessionMetrics);
            sub_1001870BC(v467, v396 + v397[7], &qword_1006457E8);
            v398 = (uint64_t *)(v396 + v397[8]);
            uint64_t *v398 = v364;
            v398[1] = v366;
            v399 = (uint64_t *)(v396 + v397[9]);
            uint64_t *v399 = v386;
            v399[1] = v387;
            *(_BYTE *)(v396 + v397[10]) = v359;
            v400 = (uint64_t *)(v396 + v397[11]);
            uint64_t *v400 = v385;
            v400[1] = v394;
            *(void *)(v396 + v397[12]) = 0LL;
            *(_BYTE *)(v396 + v397[13]) = 10;
            uint64_t v490 = (uint64_t)v397;
            v491 = &off_1005D2D98;
            v401 = sub_1001A4B04(&v489);
            sub_1001A4B84(v396, (uint64_t)v401, _s15MacApprovePhoneV18InitialLockContextVMa);
            uint64_t v402 = v486;
            sub_1001A4B84(v112, v486, type metadata accessor for SDAuthenticationCommonOperationInput);
            v403 = (int *)v469;
            uint64_t v494 = v469;
            v495 = (char **)&off_1005D2DB0;
            v404 = sub_1001A4B04(&v493);
            uint64_t v405 = (uint64_t)v471;
            *(void *)&v471[v403[6]] = _swiftEmptyArrayStorage;
            *(void *)(v405 + v403[7]) = _swiftEmptyArrayStorage;
            uint64_t v406 = v490;
            v407 = v491;
            v408 = sub_10019A708(&v489, v490);
            v409 = (void *)(v405 + v403[5]);
            v409[3] = v406;
            v409[4] = *((void *)v407[1] + 1);
            v410 = sub_1001A4B04(v409);
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v406 - 8) + 16LL))(v410, v408, v406);
            sub_1001A4B40(v402, v405, type metadata accessor for SDAuthenticationCommonOperationInput);
            sub_1001A4B40(v405, (uint64_t)v404, _s15MacApprovePhoneV4FlowVMa);
            sub_10018709C(&v489);

            uint64_t v135 = v396;
            uint64_t v136 = _s15MacApprovePhoneV18InitialLockContextVMa;
            goto LABEL_58;
          }

          uint64_t v385 = 0LL;
        }

        else
        {
          uint64_t v385 = 0LL;
          uint64_t v386 = 0LL;
          uint64_t v387 = 0LL;
          uint64_t v364 = 0LL;
          uint64_t v366 = 0LL;
        }

        unint64_t v394 = 0xF000000000000000LL;
        goto LABEL_90;
      }

      uint64_t v113 = type metadata accessor for Date(0LL);
      id v114 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56LL);
      v114(v69, 1LL, 1LL, v113);
      v114(&v69[v57[5]], 1LL, 1LL, v113);
      v114(&v69[v57[6]], 1LL, 1LL, v113);
      v114(&v69[v57[7]], 1LL, 1LL, v113);
      v114(&v69[v57[8]], 1LL, 1LL, v113);
      v114(&v69[v57[9]], 1LL, 1LL, v113);
      v114(&v69[v57[10]], 1LL, 1LL, v113);
      v114(&v69[v57[11]], 1LL, 1LL, v113);
      v114(&v69[v57[12]], 1LL, 1LL, v113);
      v69[v57[13]] = 0;
      v114(&v69[v57[14]], 1LL, 1LL, v113);
      v114(&v69[v57[15]], 1LL, 1LL, v113);
      v114(&v69[v57[16]], 1LL, 1LL, v113);
      v114(&v69[v57[17]], 1LL, 1LL, v113);
      unint64_t v115 = &v69[v57[18]];
      *(_DWORD *)unint64_t v115 = 0;
      v115[4] = 1;
      v69[v57[19]] = 2;
      unint64_t v116 = &v69[v57[20]];
      *(void *)unint64_t v116 = 0LL;
      *((void *)v116 + 1) = 0LL;
      Class v117 = &v69[v57[21]];
      *(void *)Class v117 = 0LL;
      *((void *)v117 + 1) = 0LL;
      sub_10019A6C4(v112 + 40, (uint64_t)&v493);
      uint64_t v118 = v112 + *(int *)(v111 + 24);
      uint64_t v120 = v483;
      uint64_t v119 = v484;
      uint64_t v37 = (uint64_t)v446;
      (*(void (**)(char *, uint64_t, uint64_t))(v483 + 16))(v446, v118, v484);
      uint64_t v121 = type metadata accessor for SDAuthenticationAKSAuthSession(0LL);
      uint64_t v122 = swift_allocObject(v121, *(unsigned int *)(v121 + 48), *(unsigned __int16 *)(v121 + 52));
      *(void *)(v122 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0LL;
      uint64_t v80 = [(id)objc_opt_self(SDAutoUnlockAKSManager) sharedManager];
      if (!v80)
      {
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
        goto LABEL_97;
      }

      *(void *)(v122 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = v80;
      *(_BYTE *)(v122 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = 1;
      sub_1001CE0D0(&v493, v122 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 32))( v122 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID,  v37,  v119);
      *(void *)(v122 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = 7LL;
      uint64_t v494 = v121;
      v495 = (char **)&off_1005E2058;
      *(void *)&__int128 v493 = v122;
      uint64_t v123 = (uint64_t)v435;
      void *v435 = _swiftEmptyArrayStorage;
      uint64_t v124 = v433;
      sub_1001A4B40((uint64_t)v69, v123 + *(int *)(v433 + 20), type metadata accessor for SDAuthenticationSessionMetrics);
      sub_1001CE0D0(&v493, v123 + *(int *)(v124 + 24));
      uint64_t v490 = v124;
      v491 = &off_1005D2E08;
      int v125 = sub_1001A4B04(&v489);
      sub_1001A4B84(v123, (uint64_t)v125, _s15MacApprovePhoneV17InitialKeyContextVMa);
      uint64_t v126 = v486;
      sub_1001A4B84(v112, v486, type metadata accessor for SDAuthenticationCommonOperationInput);
      uint64_t v127 = (int *)v469;
      uint64_t v494 = v469;
      v495 = (char **)&off_1005D2DB0;
      uint64_t v128 = sub_1001A4B04(&v493);
      uint64_t v129 = (uint64_t)v471;
      *(void *)&v471[v127[6]] = _swiftEmptyArrayStorage;
      *(void *)(v129 + v127[7]) = _swiftEmptyArrayStorage;
      uint64_t v130 = v490;
      __int128 v131 = v491;
      __int128 v132 = sub_10019A708(&v489, v490);
      __int128 v133 = (void *)(v129 + v127[5]);
      v133[3] = v130;
      v133[4] = *((void *)v131[1] + 1);
      __int128 v134 = sub_1001A4B04(v133);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v130 - 8) + 16LL))(v134, v132, v130);
      sub_1001A4B40(v126, v129, type metadata accessor for SDAuthenticationCommonOperationInput);
      sub_1001A4B40(v129, (uint64_t)v128, _s15MacApprovePhoneV4FlowVMa);
      sub_10018709C(&v489);
      uint64_t v135 = v123;
      uint64_t v136 = _s15MacApprovePhoneV17InitialKeyContextVMa;
LABEL_58:
      sub_1001A4BC8(v135, v136);
      return sub_1001CE0D0(&v493, v487);
    case 7LL:
      uint64_t v178 = (uint64_t)v80;
      if ((*((_BYTE *)v80 + *(int *)(v81 + 32)) & 1) != 0)
      {
        uint64_t v179 = v452;
        v180 = v456;
        v181 = (char *)v456 + *(int *)(v452 + 20);
        uint64_t v182 = type metadata accessor for Date(0LL);
        v183 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v182 - 8) + 56LL);
        v183(v181, 1LL, 1LL, v182);
        v183(&v181[v57[5]], 1LL, 1LL, v182);
        v183(&v181[v57[6]], 1LL, 1LL, v182);
        v183(&v181[v57[7]], 1LL, 1LL, v182);
        v183(&v181[v57[8]], 1LL, 1LL, v182);
        v183(&v181[v57[9]], 1LL, 1LL, v182);
        v183(&v181[v57[10]], 1LL, 1LL, v182);
        v183(&v181[v57[11]], 1LL, 1LL, v182);
        v183(&v181[v57[12]], 1LL, 1LL, v182);
        v181[v57[13]] = 0;
        v183(&v181[v57[14]], 1LL, 1LL, v182);
        v183(&v181[v57[15]], 1LL, 1LL, v182);
        v183(&v181[v57[16]], 1LL, 1LL, v182);
        v183(&v181[v57[17]], 1LL, 1LL, v182);
        v184 = &v181[v57[18]];
        *(_DWORD *)v184 = 0;
        v184[4] = 1;
        v181[v57[19]] = 2;
        v185 = &v181[v57[20]];
        *(void *)v185 = 0LL;
        *((void *)v185 + 1) = 0LL;
        v186 = &v181[v57[21]];
        *(void *)v186 = 0LL;
        *((void *)v186 + 1) = 0LL;
        uint64_t v187 = sub_100183098(&qword_1006457E0);
        uint64_t v188 = swift_allocObject(v187, 72LL, 7LL);
        *(_OWORD *)(v188 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
        if (qword_100644338 != -1) {
          swift_once(&qword_100644338, LongHash.storage.getter);
        }
        *(void *)(v188 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = &type metadata for SDAuthentication.Operation.BuildMessageHeader;
        *(void *)(v188 + 64) = &off_10064AC98;
        uint64_t *v180 = v188;
        *(uint64_t *)((char *)v180 + *(int *)(v179 + swift_release(*(void *)(v0 + 24)) = 0LL;
        *((_BYTE *)v180 + *(int *)(v179 + 2sub_100189B20(*(void *)v0, *(void *)(v0 + 8)) = 9;
        uint64_t v490 = v179;
        v491 = &off_1005E06F8;
        v189 = sub_1001A4B04(&v489);
        uint64_t v105 = _s22GuestModeUnlockPairingV17InitialKeyContextVMa;
        sub_1001A4B84((uint64_t)v180, (uint64_t)v189, _s22GuestModeUnlockPairingV17InitialKeyContextVMa);
        uint64_t v190 = v486;
        sub_1001A4B84(v178, v486, type metadata accessor for SDAuthenticationCommonOperationInput);
        uint64_t v494 = _s22GuestModeUnlockPairingV4FlowVMa(0LL);
        v495 = (char **)&off_1005E06A0;
        v191 = sub_1001A4B04(&v493);
        sub_1003FDCF0((uint64_t)&v489, v190, (uint64_t)v191);
        uint64_t v135 = (uint64_t)v180;
LABEL_57:
        uint64_t v136 = v105;
        goto LABEL_58;
      }

      sub_1001915A4((uint64_t)v482, (uint64_t)&v493, &qword_1006569F8);
      if (v494)
      {
        uint64_t v284 = sub_100183098(&qword_100656AD8);
        uint64_t v285 = sub_100183168(0LL, &qword_1006569F0, &OBJC_CLASS___SFAuthenticationOptions_ptr);
        if (swift_dynamicCast(&v489, &v493, v284, v285, 6LL))
        {
          v286 = v489;
          goto LABEL_73;
        }
      }

      else
      {
        sub_100187100((uint64_t)&v493, &qword_1006569F8);
      }

      v286 = 0LL;
LABEL_73:
      uint64_t v367 = type metadata accessor for Date(0LL);
      v368 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v367 - 8) + 56LL);
      v368(v66, 1LL, 1LL, v367);
      v368(&v66[v57[5]], 1LL, 1LL, v367);
      v368(&v66[v57[6]], 1LL, 1LL, v367);
      v368(&v66[v57[7]], 1LL, 1LL, v367);
      v368(&v66[v57[8]], 1LL, 1LL, v367);
      v368(&v66[v57[9]], 1LL, 1LL, v367);
      v368(&v66[v57[10]], 1LL, 1LL, v367);
      v368(&v66[v57[11]], 1LL, 1LL, v367);
      v368(&v66[v57[12]], 1LL, 1LL, v367);
      v66[v57[13]] = 0;
      v368(&v66[v57[14]], 1LL, 1LL, v367);
      v368(&v66[v57[15]], 1LL, 1LL, v367);
      v368(&v66[v57[16]], 1LL, 1LL, v367);
      v368(&v66[v57[17]], 1LL, 1LL, v367);
      v369 = &v66[v57[18]];
      *(_DWORD *)v369 = 0;
      v369[4] = 1;
      v66[v57[19]] = 2;
      v370 = &v66[v57[20]];
      *(void *)v370 = 0LL;
      *((void *)v370 + 1) = 0LL;
      v371 = &v66[v57[21]];
      *(void *)v371 = 0LL;
      *((void *)v371 + 1) = 0LL;
      if (v286 && (id v372 = [v286 authorizationToken]) != 0)
      {
        v373 = v372;
        uint64_t v374 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v372);
        unint64_t v376 = v375;
      }

      else
      {
        uint64_t v374 = 0LL;
        unint64_t v376 = 0xF000000000000000LL;
      }

      uint64_t v377 = sub_100183098(&qword_1006457E0);
      uint64_t v378 = swift_allocObject(v377, 112LL, 7LL);
      *(_OWORD *)(v378 + swift_weakDestroy(v0 + 16) = xmmword_1004CD530;
      if (qword_100644338 != -1) {
        swift_once(&qword_100644338, LongHash.storage.getter);
      }
      *(void *)(v378 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = &type metadata for SDAuthentication.Operation.IncludeLongTermKeyInPairingMessage;
      *(void *)(v378 + 64) = &off_10064AC78;
      *(void *)(v378 + 96) = &type metadata for SDAuthentication.Operation.BuildMessageHeader;
      *(void *)(v378 + 104) = &off_10064AC98;
      uint64_t v379 = (uint64_t)v464;
      uint64_t *v464 = v378;
      uint64_t v380 = v459;
      v381 = (uint64_t *)(v379 + *(int *)(v459 + 24));
      *(void *)(v379 + *(int *)(v459 + 2sub_100189B20(*(void *)v0, *(void *)(v0 + 8)) = 0LL;
      *(_BYTE *)(v379 + *(int *)(v380 + swift_release(*(void *)(v0 + 32)) = 3;
      sub_1001A4B40((uint64_t)v66, v379 + *(int *)(v380 + 20), type metadata accessor for SDAuthenticationSessionMetrics);
      uint64_t *v381 = v374;
      v381[1] = v376;
      uint64_t v490 = v380;
      v491 = &off_1005E0688;
      v382 = sub_1001A4B04(&v489);
      sub_1001A4B84(v379, (uint64_t)v382, _s22GuestModeUnlockPairingV18InitialLockContextVMa);
      uint64_t v383 = v486;
      sub_1001A4B84(v178, v486, type metadata accessor for SDAuthenticationCommonOperationInput);
      uint64_t v494 = _s22GuestModeUnlockPairingV4FlowVMa(0LL);
      v495 = (char **)&off_1005E06A0;
      v384 = sub_1001A4B04(&v493);
      sub_1003FDCF0((uint64_t)&v489, v383, (uint64_t)v384);

      uint64_t v135 = v379;
      uint64_t v136 = _s22GuestModeUnlockPairingV18InitialLockContextVMa;
      goto LABEL_58;
    case 8LL:
      uint64_t v154 = (uint64_t)v80;
      uint64_t v192 = type metadata accessor for Date(0LL);
      v193 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v192 - 8) + 56LL);
      if ((v85 & 1) != 0)
      {
        v193(v76, 1LL, 1LL, v192);
        v193(&v76[v57[5]], 1LL, 1LL, v192);
        v193(&v76[v57[6]], 1LL, 1LL, v192);
        v193(&v76[v57[7]], 1LL, 1LL, v192);
        v193(&v76[v57[8]], 1LL, 1LL, v192);
        v193(&v76[v57[9]], 1LL, 1LL, v192);
        v193(&v76[v57[10]], 1LL, 1LL, v192);
        v193(&v76[v57[11]], 1LL, 1LL, v192);
        v193(&v76[v57[12]], 1LL, 1LL, v192);
        v76[v57[13]] = 0;
        v193(&v76[v57[14]], 1LL, 1LL, v192);
        v193(&v76[v57[15]], 1LL, 1LL, v192);
        v193(&v76[v57[16]], 1LL, 1LL, v192);
        v193(&v76[v57[17]], 1LL, 1LL, v192);
        v194 = &v76[v57[18]];
        *(_DWORD *)v194 = 0;
        v194[4] = 1;
        v76[v57[19]] = 2;
        v195 = &v76[v57[20]];
        *(void *)v195 = 0LL;
        *((void *)v195 + 1) = 0LL;
        v196 = &v76[v57[21]];
        *(void *)v196 = 0LL;
        *((void *)v196 + 1) = 0LL;
        v172 = v454;
        sub_10037EF0C((uint64_t)v76, v454);
        v173 = (int *)_s27GuestModeUnlockRegistrationV4FlowVMa(0LL);
        uint64_t v494 = (uint64_t)v173;
        v495 = (char **)&off_1005DD5B8;
        v174 = sub_1001A4B04(&v493);
        v197 = (void *)((char *)v174 + v173[5]);
        v197[3] = v453;
        v197[4] = &off_1005DD5A0;
        v176 = sub_1001A4B04(v197);
        v177 = _s27GuestModeUnlockRegistrationV17InitialKeyContextVMa;
      }

      else
      {
        v193(v63, 1LL, 1LL, v192);
        v193(&v63[v57[5]], 1LL, 1LL, v192);
        v193(&v63[v57[6]], 1LL, 1LL, v192);
        v193(&v63[v57[7]], 1LL, 1LL, v192);
        v193(&v63[v57[8]], 1LL, 1LL, v192);
        v193(&v63[v57[9]], 1LL, 1LL, v192);
        v193(&v63[v57[10]], 1LL, 1LL, v192);
        v193(&v63[v57[11]], 1LL, 1LL, v192);
        v193(&v63[v57[12]], 1LL, 1LL, v192);
        v63[v57[13]] = 0;
        v193(&v63[v57[14]], 1LL, 1LL, v192);
        v193(&v63[v57[15]], 1LL, 1LL, v192);
        v193(&v63[v57[16]], 1LL, 1LL, v192);
        v193(&v63[v57[17]], 1LL, 1LL, v192);
        v287 = &v63[v57[18]];
        *(_DWORD *)v287 = 0;
        v287[4] = 1;
        v63[v57[19]] = 2;
        v288 = &v63[v57[20]];
        *(void *)v288 = 0LL;
        *((void *)v288 + 1) = 0LL;
        v289 = &v63[v57[21]];
        *(void *)v289 = 0LL;
        *((void *)v289 + 1) = 0LL;
        uint64_t v290 = sub_100183098(&qword_1006457E0);
        uint64_t v291 = swift_allocObject(v290, 72LL, 7LL);
        *(_OWORD *)(v291 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
        if (qword_100644218 != -1) {
          swift_once(&qword_100644218, LongHash.storage.getter);
        }
        *(void *)(v291 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = &type metadata for SDAuthentication.Operation.BuildMessageHeader;
        *(void *)(v291 + 64) = &off_10064AC98;
        v172 = v462;
        uint64_t *v462 = v291;
        uint64_t v292 = v460;
        *(uint64_t *)((char *)v172 + *(int *)(v460 + swift_release(*(void *)(v0 + 24)) = 0LL;
        *((_BYTE *)v172 + *(int *)(v292 + 2sub_100189B20(*(void *)v0, *(void *)(v0 + 8)) = 3;
        if (qword_100644210 != -1) {
          swift_once(&qword_100644210, sub_10037EDB4);
        }
        uint64_t v293 = type metadata accessor for Logger(0LL);
        uint64_t v294 = sub_100186DE4(v293, (uint64_t)qword_1006513F8);
        v295 = (os_log_s *)Logger.logObject.getter(v294);
        os_log_type_t v296 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v295, v296))
        {
          v297 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)v297 = 0;
          _os_log_impl((void *)&_mh_execute_header, v295, v296, "Start authentication Lock registration", v297, 2u);
          swift_slowDealloc(v297, -1LL, -1LL);
        }

        sub_1001A4B40( (uint64_t)v63,  (uint64_t)v172 + *(int *)(v292 + 20),  type metadata accessor for SDAuthenticationSessionMetrics);
        v173 = (int *)_s27GuestModeUnlockRegistrationV4FlowVMa(0LL);
        uint64_t v494 = (uint64_t)v173;
        v495 = (char **)&off_1005DD5B8;
        v174 = sub_1001A4B04(&v493);
        v298 = (void *)((char *)v174 + v173[5]);
        v298[3] = v292;
        v298[4] = &off_1005DD588;
        v176 = sub_1001A4B04(v298);
        v177 = _s27GuestModeUnlockRegistrationV18InitialLockContextVMa;
      }

      goto LABEL_52;
    case 9LL:
      uint64_t v144 = v80;
      uint64_t v145 = type metadata accessor for Date(0LL);
      v146 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56LL);
      v146(v76, 1LL, 1LL, v145);
      v146(&v76[v57[5]], 1LL, 1LL, v145);
      v146(&v76[v57[6]], 1LL, 1LL, v145);
      v146(&v76[v57[7]], 1LL, 1LL, v145);
      v146(&v76[v57[8]], 1LL, 1LL, v145);
      v146(&v76[v57[9]], 1LL, 1LL, v145);
      v146(&v76[v57[10]], 1LL, 1LL, v145);
      v146(&v76[v57[11]], 1LL, 1LL, v145);
      v146(&v76[v57[12]], 1LL, 1LL, v145);
      v76[v57[13]] = 0;
      v146(&v76[v57[14]], 1LL, 1LL, v145);
      v146(&v76[v57[15]], 1LL, 1LL, v145);
      v146(&v76[v57[16]], 1LL, 1LL, v145);
      v146(&v76[v57[17]], 1LL, 1LL, v145);
      v147 = &v76[v57[18]];
      *(_DWORD *)v147 = 0;
      v147[4] = 1;
      v76[v57[19]] = 2;
      v148 = &v76[v57[20]];
      *(void *)v148 = 0LL;
      *((void *)v148 + 1) = 0LL;
      v149 = &v76[v57[21]];
      *(void *)v149 = 0LL;
      *((void *)v149 + 1) = 0LL;
      if ((v85 & 1) != 0)
      {
        int64_t v89 = v451;
        sub_1002A4FB4((uint64_t)v76, v451);
        uint64_t v490 = v447;
        v491 = &off_1005D84A8;
        v150 = sub_1001A4B04(&v489);
        uint64_t v105 = _s15GuestModeUnlockV17InitialKeyContextVMa;
        sub_1001A4B84((uint64_t)v89, (uint64_t)v150, _s15GuestModeUnlockV17InitialKeyContextVMa);
      }

      else
      {
        v271 = &v485[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager];
        swift_beginAccess( &v485[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager],  v492,  0LL,  0LL);
        uint64_t v272 = *sub_10019A708(v271, *((void *)v271 + 3))
             + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
        swift_beginAccess(v272, v488, 0LL, 0LL);
        uint64_t v273 = v472;
        sub_1001915A4(v272, v472, &qword_1006457E8);
        uint64_t v274 = (uint64_t)v449;
        void *v449 = _swiftEmptyArrayStorage;
        uint64_t v275 = v450;
        uint64_t v276 = v274 + *(int *)(v450 + 24);
        v146((char *)v276, 1LL, 1LL, v145);
        sub_1001A4B40( (uint64_t)v76,  v274 + *(int *)(v275 + 20),  type metadata accessor for SDAuthenticationSessionMetrics);
        sub_1001C9860(v273, v276, &qword_1006457E8);
        uint64_t v105 = _s15GuestModeUnlockV18InitialLockContextVMa;
        int64_t v89 = v455;
        sub_1001A4B40(v274, (uint64_t)v455, _s15GuestModeUnlockV18InitialLockContextVMa);
        uint64_t v490 = v275;
        v491 = &off_1005D8440;
        v277 = sub_1001A4B04(&v489);
        sub_1001A4B84((uint64_t)v89, (uint64_t)v277, _s15GuestModeUnlockV18InitialLockContextVMa);
      }

      uint64_t v151 = (uint64_t)v144;
      uint64_t v152 = v486;
      sub_1001A4B84(v151, v486, type metadata accessor for SDAuthenticationCommonOperationInput);
      v153 = (int *)v476;
      uint64_t v494 = v476;
      v495 = (char **)&off_1005D8450;
      uint64_t v109 = sub_1001A4B04(&v493);
      int v110 = v478;
      *(void *)&v478[v153[6]] = _swiftEmptyArrayStorage;
      *(void *)((char *)v110 + v153[7]) = _swiftEmptyArrayStorage;
      uint64_t v278 = v490;
      v279 = v491;
      v280 = sub_10019A708(&v489, v490);
      v281 = (void *)((char *)v110 + v153[5]);
      v281[3] = v278;
      v281[4] = *((void *)v279[1] + 1);
      v282 = sub_1001A4B04(v281);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v278 - 8) + 16LL))(v282, v280, v278);
      sub_1001A4B40(v152, (uint64_t)v110, type metadata accessor for SDAuthenticationCommonOperationInput);
      v283 = _s15GuestModeUnlockV4FlowVMa;
LABEL_56:
      sub_1001A4B40((uint64_t)v110, (uint64_t)v109, v283);
      sub_10018709C(&v489);
      uint64_t v135 = (uint64_t)v89;
      goto LABEL_57;
    case 10LL:
      uint64_t v154 = (uint64_t)v80;
      goto LABEL_17;
    case 11LL:
      uint64_t v154 = (uint64_t)v80;
      if (*((_BYTE *)v80 + *(int *)(v81 + 32)))
      {
LABEL_15:
        uint64_t v155 = v473;
        v156 = v474;
        v157 = &v474[*(int *)(v473 + 20)];
        uint64_t v158 = type metadata accessor for Date(0LL);
        v159 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v158 - 8) + 56LL);
        v159(v157, 1LL, 1LL, v158);
        v159(&v157[v57[5]], 1LL, 1LL, v158);
        v159(&v157[v57[6]], 1LL, 1LL, v158);
        v159(&v157[v57[7]], 1LL, 1LL, v158);
        v159(&v157[v57[8]], 1LL, 1LL, v158);
        v159(&v157[v57[9]], 1LL, 1LL, v158);
        v159(&v157[v57[10]], 1LL, 1LL, v158);
        v159(&v157[v57[11]], 1LL, 1LL, v158);
        v159(&v157[v57[12]], 1LL, 1LL, v158);
        v157[v57[13]] = 0;
        v159(&v157[v57[14]], 1LL, 1LL, v158);
        v159(&v157[v57[15]], 1LL, 1LL, v158);
        v159(&v157[v57[16]], 1LL, 1LL, v158);
        v159(&v157[v57[17]], 1LL, 1LL, v158);
        v160 = &v157[v57[18]];
        *(_DWORD *)v160 = 0;
        v160[4] = 1;
        v157[v57[19]] = 2;
        v161 = &v157[v57[20]];
        *(void *)v161 = 0LL;
        *((void *)v161 + 1) = 0LL;
        v162 = &v157[v57[21]];
        *(void *)v162 = 0LL;
        *((void *)v162 + 1) = 0LL;
        void *v156 = _swiftEmptyArrayStorage;
        v163 = (int *)_s6UnpairV4FlowVMa(0LL);
        uint64_t v494 = (uint64_t)v163;
        v495 = (char **)&off_1005D80C8;
        v164 = sub_1001A4B04(&v493);
        v165 = (void *)((char *)v164 + v163[5]);
        v165[3] = v155;
        v165[4] = &off_1005D8098;
        v166 = sub_1001A4B04(v165);
        sub_1001A4B84((uint64_t)v156, (uint64_t)v166, _s6UnpairV23InitialResponderContextVMa);
        sub_1001A4B84(v154, (uint64_t)v164, type metadata accessor for SDAuthenticationCommonOperationInput);
        *(void *)((char *)v164 + v163[6]) = _swiftEmptyArrayStorage;
        *(void *)((char *)v164 + v163[7]) = _swiftEmptyArrayStorage;
        uint64_t v135 = (uint64_t)v156;
        uint64_t v136 = _s6UnpairV23InitialResponderContextVMa;
        goto LABEL_58;
      }

uint64_t sub_10045D5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_100183098(&qword_10064D6E8);
  __chkstk_darwin(v7);
  uint64_t v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v10 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v14 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)(v13);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    uint64_t v17 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
    swift_beginAccess(v17, v27, 32LL, 0LL);
    uint64_t v18 = *v17;
    if (*(void *)(v18 + 16))
    {
      swift_bridgeObjectRetain(a2);
      uint64_t v19 = sub_1003AD53C(a1, a2);
      if ((v20 & 1) != 0)
      {
        uint64_t v21 = v19;
        uint64_t v22 = *(void *)(v18 + 56);
        uint64_t v23 = type metadata accessor for RegistrationState(0LL);
        uint64_t v24 = *(void *)(v23 - 8);
        sub_1001A4B84(v22 + *(void *)(v24 + 72) * v21, (uint64_t)v9, type metadata accessor for RegistrationState);
        (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v24 + 56))(v9, 0LL, 1LL, v23);
      }

      else
      {
        uint64_t v23 = type metadata accessor for RegistrationState(0LL);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))(v9, 1LL, 1LL, v23);
      }

      swift_bridgeObjectRelease(a2);
    }

    else
    {
      uint64_t v23 = type metadata accessor for RegistrationState(0LL);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))(v9, 1LL, 1LL, v23);
    }

    type metadata accessor for RegistrationState(0LL);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48LL))(v9, 1LL, v23))
    {
      sub_100187100((uint64_t)v9, &qword_10064D6E8);
      swift_endAccess(v27);
      uint64_t v25 = type metadata accessor for Date(0LL);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))( a3,  1LL,  1LL,  v25);
    }

    else
    {
      sub_1001915A4((uint64_t)v9, a3, &qword_1006457E8);
      sub_100187100((uint64_t)v9, &qword_10064D6E8);
      return swift_endAccess(v27);
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_10045D850@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = type metadata accessor for SDAuthenticationSessionExecutor(0LL);
  uint64_t v4 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  swift_defaultActor_initialize(v4);
  *(void *)(v4 + 152) = 0x402E000000000000LL;
  *(void *)(v4 + 160) = 0LL;
  uint64_t v5 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_responseTimerContinuation;
  uint64_t v6 = sub_100183098(&qword_1006493C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(v5, 1LL, 1LL, v6);
  *(void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_timer) = 0LL;
  *(void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_currentMessage) = 0LL;
  sub_1001CE0D0(v14, v4 + 112);
  sub_10019A6C4(v4 + 112, (uint64_t)v11);
  uint64_t v7 = v12;
  uint64_t v8 = v13;
  sub_10019A708(v11, v12);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v8 + 72))(v10, v7, v8);
  sub_1001CE0D0(v10, v4 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext);
  uint64_t result = sub_10018709C(v11);
  a2[3] = v3;
  a2[4] = (uint64_t)&off_1005DC318;
  *a2 = v4;
  return result;
}

char *sub_10045D970@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X5>, char **a7@<X8>)
{
  uint64_t v14 = type metadata accessor for UUID(0LL);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v22[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t))(v17 + 16))(v16, a1);
  sub_10019A6C4(a2, (uint64_t)v22);
  uint64_t v18 = (objc_class *)type metadata accessor for SDAuthenticationPairingLockSession(0LL);
  objc_allocWithZone(v18);
  uint64_t v19 = a6;
  swift_bridgeObjectRetain(a4);
  uint64_t result = sub_10023A6D8(v19, v16, v22, a3, a4, a5);
  a7[3] = (char *)v18;
  a7[4] = (char *)&off_1005D63C0;
  *a7 = result;
  return result;
}

void sub_10045DA6C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, char **a5@<X8>)
{
  uint64_t v10 = type metadata accessor for UUID(0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, a1);
  sub_10019A6C4(a2, (uint64_t)v18);
  uint64_t v14 = (objc_class *)type metadata accessor for SDAuthenticationPairingKeySession(0LL);
  objc_allocWithZone(v14);
  id v15 = a4;
  uint64_t v16 = sub_1003DB418(v15, v12, (uint64_t)v18, a3);

  a5[3] = (char *)v14;
  a5[4] = (char *)&off_1005DF2D0;
  *a5 = v16;
}

uint64_t sub_10045DB54@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  uint64_t v12 = type metadata accessor for UUID(0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t))(v15 + 16))(v14, a3);
  uint64_t v16 = (objc_class *)type metadata accessor for SDAuthenticationLockSession(0LL);
  objc_allocWithZone(v16);
  id v17 = a5;
  sub_10019BA8C(a1, a2);
  id v18 = sub_10033CD9C((uint64_t)v17, a1, a2, (uint64_t)v14, a4);
  uint64_t result = sub_100189B20(a1, a2);
  a6[3] = v16;
  a6[4] = &off_1005DBB00;
  *a6 = v18;
  return result;
}

uint64_t sub_10045DC4C@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  id v26 = a5;
  uint64_t v27 = a4;
  uint64_t v28 = a6;
  uint64_t v9 = type metadata accessor for UUID(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v25 - v14, a3, v9);
  id v17 = (objc_class *)type metadata accessor for SDAuthenticationKeySession(0LL);
  id v18 = objc_allocWithZone(v17);
  uint64_t v19 = &v18[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate];
  uint64_t v20 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56LL))(v19, 1LL, 1LL, v20);
  *(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession] = 0LL;
  *(_OWORD *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken] = xmmword_1004CD540;
  v18[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_isConfirmationSent] = 0;
  v16(v13, (uint64_t)v15, v9);
  id v21 = v26;
  sub_10019BA8C(a1, a2);
  id v22 = sub_1001D7414((uint64_t)v21, a1, a2, v13, v27);
  sub_100189B20(a1, a2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  uint64_t v24 = v28;
  v28[3] = v17;
  v24[4] = &off_1005D9518;
  *uint64_t v24 = v22;
  return result;
}

uint64_t sub_10045DDF4@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  id v29 = a4;
  unint64_t v30 = a2;
  uint64_t v31 = a5;
  uint64_t v7 = type metadata accessor for UUID(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v28 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v28 - v15;
  id v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v17((char *)&v28 - v15, a3, v7);
  v17(v14, (uint64_t)v16, v7);
  id v18 = (objc_class *)type metadata accessor for SDAuthenticationKeySession(0LL);
  uint64_t v19 = objc_allocWithZone(v18);
  uint64_t v20 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate];
  uint64_t v21 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v20, 1LL, 1LL, v21);
  *(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession] = 0LL;
  *(_OWORD *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken] = xmmword_1004CD540;
  v19[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_isConfirmationSent] = 0;
  v17(v11, (uint64_t)v14, v7);
  id v22 = v29;
  unint64_t v23 = v30;
  sub_10019BA8C(a1, v30);
  id v24 = sub_1001D7414((uint64_t)v22, a1, v23, v11, 0LL);
  sub_100189B20(a1, v23);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v8 + 8);
  v25(v14, v7);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v16, v7);
  uint64_t v27 = v31;
  void v31[3] = v18;
  v27[4] = &off_1005D9518;
  void *v27 = v24;
  return result;
}

id sub_10045DFD4()
{
  return sub_100222770((SEL *)&selRef_wirelessEnabled);
}

id sub_10045DFE0()
{
  return sub_100222770((SEL *)&selRef_bluetoothEnabled);
}

id sub_10045DFEC(uint64_t a1)
{
  id result = [(id)objc_opt_self(SDAutoUnlockTransport) sharedTransport];
  if (result)
  {
    uint64_t v3 = result;
    id v4 = [result autoUnlockEligibleDevicesWithCloudPairing:1 deviceType:a1];

    if (v4)
    {
      uint64_t v5 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
      unint64_t v6 = sub_10023F574();
      uint64_t v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6);

      return (id)v7;
    }

    else
    {
      return &_swiftEmptySetSingleton;
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

void sub_10045E0A4(uint64_t a1@<X8>)
{
  id v2 = [(id)objc_opt_self(SDAutoUnlockTransport) sharedTransport];
  if (v2)
  {
    uint64_t v3 = v2;
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [v3 idsDeviceForUniqueID:v4];

    if (v5)
    {
      *(void *)(a1 + 24) = sub_100183168(0LL, (unint64_t *)&qword_10064D810, &OBJC_CLASS___IDSDevice_ptr);
      *(void *)(a1 + 32) = &off_1005E0BD0;
      *(void *)a1 = v5;
    }

    else
    {
      *(void *)(a1 + 32) = 0LL;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = 0u;
    }
  }

  else
  {
    __break(1u);
  }

void sub_10045E170(char *a1)
{
  void (*v20)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  os_log_s *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_s *v45;
  os_log_type_t v46;
  uint8_t *v47;
  void v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void v52[4];
  _BYTE v53[24];
  uint64_t v2 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (void *)((char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10045E6C4();
  sub_10045E8A0();
  Date.init()(v10);
  uint64_t v11 = *(void **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  void *v5 = v11;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_22:
    swift_once(&qword_100644408, sub_100458568);
    goto LABEL_18;
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v13 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 stringForKey:v14];

  if (v15)
  {
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    uint64_t v18 = v17;

    uint64_t v20 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID];
    uint64_t v19 = *(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID + 8];
    swift_retain(v19);
    v20(&v51, v16, v18);
    swift_release(v19);
    swift_bridgeObjectRelease(v18);
    uint64_t v21 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone];
    swift_beginAccess( &a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone],  v53,  33LL,  0LL);
    sub_1001C9860((uint64_t)&v51, v21, &qword_100654080);
    swift_endAccess(v53);
  }

  id v22 = &a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone];
  swift_beginAccess( &a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone],  v53,  0LL,  0LL);
  sub_1001915A4((uint64_t)v22, (uint64_t)&v51, &qword_100654080);
  unint64_t v23 = v52[2];
  sub_100187100((uint64_t)&v51, &qword_100654080);
  id v24 = &qword_100644000;
  if (v23)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v25 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v25, (uint64_t)qword_100656748);
    id v26 = a1;
    uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    uint64_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v49 = swift_slowAlloc(32LL, -1LL);
      uint64_t v50 = v49;
      *(_DWORD *)id v29 = 136315138;
      unint64_t v30 = *((void *)v22 + 3);
      if (!v30) {
        goto LABEL_12;
      }
      uint64_t v31 = *((void *)v22 + 4);
      uint64_t v32 = sub_10019A708(v22, *((void *)v22 + 3));
      v48[1] = v48;
      uint64_t v33 = *(void *)(v30 - 8);
      __chkstk_darwin(v32);
      uint64_t v35 = (char *)v48 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v33 + 16))(v35);
      uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
      uint64_t v38 = v37;
      uint64_t v39 = *(void (**)(char *, uint64_t))(v33 + 8);
      id v24 = &qword_100644000;
      v39(v35, v30);
      if (v38)
      {
        uint64_t v40 = v36;
      }

      else
      {
LABEL_12:
        uint64_t v51 = 0LL;
        v52[0] = 0xE000000000000000LL;
        _StringGuts.grow(_:)(17LL);
        swift_bridgeObjectRelease(v52[0]);
        uint64_t v38 = 0x80000001005046B0LL;
        uint64_t v40 = 0xD000000000000015LL;
      }

      uint64_t v51 = sub_10018CDB4(v40, v38, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v29 + 4, v29 + 12);
      swift_bridgeObjectRelease(v38);

      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Loaded last mac that unlocked phone %s", v29, 0xCu);
      uint64_t v41 = v49;
      swift_arrayDestroy(v49, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1LL, -1LL);
      swift_slowDealloc(v29, -1LL, -1LL);
    }

    else
    {
    }
  }

  uint64_t v42 = *(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager];
  if (v42)
  {
    swift_retain(*(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager]);
    sub_10021E8DC();
    swift_release(v42);
  }

  if (v24[129] != -1) {
    goto LABEL_22;
  }
LABEL_18:
  uint64_t v43 = type metadata accessor for Logger(0LL);
  uint64_t v44 = sub_100186DE4(v43, (uint64_t)qword_100656748);
  uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
  uint64_t v46 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v47 = 0;
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "SDAuthenticationManager started", v47, 2u);
    swift_slowDealloc(v47, -1LL, -1LL);
  }
}

void sub_10045E6C4()
{
  uint64_t v1 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v2 = [v1 defaultCenter];
  if (qword_100643F80 != -1) {
    swift_once(&qword_100643F80, sub_100224D54);
  }
  [v2 addObserver:v0 selector:"handleStateChanged" name:qword_100669518 object:0];

  id v3 = [v1 defaultCenter];
  if (qword_100643F90 != -1) {
    swift_once(&qword_100643F90, sub_100224E0C);
  }
  [v3 addObserver:v0 selector:"handleStateChanged" name:qword_100669528 object:0];

  id v4 = [v1 defaultCenter];
  if (qword_100643F98 != -1) {
    swift_once(&qword_100643F98, sub_100224E24);
  }
  [v4 addObserver:v0 selector:"handleStateChanged" name:qword_100669530 object:0];

  id v5 = [v1 defaultCenter];
  id v6 = v5;
  if (qword_100643FA0 != -1)
  {
    swift_once(&qword_100643FA0, sub_100224E3C);
    id v5 = v6;
  }

  [v5 addObserver:v0 selector:"handleStateChanged" name:qword_100669538 object:0];
}

void sub_10045E8A0()
{
  uint64_t v1 = v0;
  int out_token = 0;
  sub_100183168(0LL, (unint64_t *)&qword_100650E50, &OBJC_CLASS___OS_dispatch_queue_ptr);
  id v2 = (dispatch_queue_s *)static OS_dispatch_queue.main.getter();
  uint64_t v3 = swift_allocObject(&unk_1005E31D8, 24LL, 7LL);
  swift_unknownObjectWeakInit(v3 + 16, v0);
  id v15 = sub_10048988C;
  uint64_t v16 = v3;
  uint64_t v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256LL;
  id v13 = sub_1002C5880;
  NSString v14 = &unk_1005E31F0;
  id v4 = _Block_copy(&v11);
  swift_release(v16);
  notify_register_dispatch("postUnlockKeyRequestNotification", &out_token, v2, v4);
  _Block_release(v4);

  id v5 = (dispatch_queue_s *)static OS_dispatch_queue.main.getter();
  uint64_t v6 = swift_allocObject(&unk_1005E31D8, 24LL, 7LL);
  swift_unknownObjectWeakInit(v6 + 16, v1);
  id v15 = sub_100489894;
  uint64_t v16 = v6;
  uint64_t v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256LL;
  id v13 = sub_1002C5880;
  NSString v14 = &unk_1005E3218;
  uint64_t v7 = _Block_copy(&v11);
  swift_release(v16);
  notify_register_dispatch("triggerStateChange", &out_token, v5, v7);
  _Block_release(v7);

  uint64_t v8 = *(dispatch_queue_s **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  uint64_t v9 = swift_allocObject(&unk_1005E31D8, 24LL, 7LL);
  swift_unknownObjectWeakInit(v9 + 16, v1);
  id v15 = sub_10048989C;
  uint64_t v16 = v9;
  uint64_t v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256LL;
  id v13 = sub_1002C5880;
  NSString v14 = &unk_1005E3240;
  uint64_t v10 = _Block_copy(&v11);
  swift_release(v16);
  notify_register_dispatch("com.apple.sharingd.register", &out_token, v8, v10);
  _Block_release(v10);
}

uint64_t sub_10045EAD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  id v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SFPlatform(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SFPlatform.iOS.getter(v7);
  char v10 = static SFPlatform.isPlatform(_:)(v9);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  uint64_t v12 = v11(v9, v5);
  if ((v10 & 1) != 0
    || (static SFPlatform.visionOS.getter(v12),
        char v13 = static SFPlatform.isPlatform(_:)(v9),
        uint64_t result = v11(v9, v5),
        (v13 & 1) != 0))
  {
    if (qword_100644088 != -1) {
      swift_once(&qword_100644088, sub_100270494);
    }
    sub_100270E0C();
    uint64_t v15 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL))(v4, 1LL, 1LL, v15);
    uint64_t v16 = (void *)swift_allocObject(&unk_1005E3638, 40LL, 7LL);
    v16[2] = 0LL;
    v16[3] = 0LL;
    v16[4] = v1;
    id v17 = v1;
    uint64_t v18 = sub_1001B37E8((uint64_t)v4, (uint64_t)&unk_100656C68, (uint64_t)v16);
    return swift_release(v18);
  }

  return result;
}

uint64_t sub_10045EC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = a4;
  return swift_task_switch(sub_10045EC68, 0LL, 0LL);
}

uint64_t sub_10045EC68()
{
  uint64_t v1 = sub_100458958();
  *(void *)(v0 + 24) = v1;
  return swift_task_switch(sub_10045ECA8, v1, 0LL);
}

uint64_t sub_10045ECA8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10045ED0C(uint64_t a1)
{
  *(void *)(v2 + 200) = a1;
  *(void *)(v2 + 208) = v1;
  return swift_task_switch(sub_10045ED24, 0LL, 0LL);
}

uint64_t sub_10045ED24()
{
  int64_t v2 = (int64_t)v0;
  uint64_t v3 = (uint64_t)(v0 + 25);
  uint64_t v4 = sub_10034EC60(v0[25]);
  v0[27] = v4;
  if ((unint64_t)(v4 - 5) <= 3)
  {
    type metadata accessor for SDAuthenticationStatusMonitor();
    uint64_t v5 = (uint64_t **)swift_task_alloc(dword_100649134);
    v0[28] = (uint64_t)v5;
    dispatch_queue_s *v5 = v0;
    v5[1] = (uint64_t *)sub_100460078;
    return sub_10021D4B0();
  }

  uint64_t v7 = (uint64_t)(v0 + 24);
  if (qword_100644408 != -1) {
    goto LABEL_162;
  }
LABEL_4:
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v179 = sub_100186DE4(v8, (uint64_t)qword_100656748);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v179);
  os_log_type_t v10 = static os_log_type_t.default.getter(v9);
  int64_t v180 = v2;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = *(void *)(v2 + 216);
    uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = swift_slowAlloc(32LL, -1LL);
    v191[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    unint64_t v14 = sub_10034F010(v11);
    uint64_t v16 = (const char *)v15;
    *(void *)(v2 + 192) = sub_10018CDB4(v14, v15, v191);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v7, v3, v12 + 4, v12 + 12);
    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Asked to list all eligible devices for: %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  unint64_t v19 = *(void *)(v2 + 216);
  if (v19 - 3 < 0xC)
  {
    Swift::UInt8 v20 = SFDeviceClassCodeGet(v17, v18);
    uint64_t v21 = (const char *)sub_10034F1E0(v19);
    BOOL v22 = sub_1003A0760(8u, (uint64_t)v21);
    __n128 v23 = swift_bridgeObjectRelease(v21);
    if (v22)
    {
      if (!SFDeviceIsRealityDevice(v23))
      {
LABEL_9:
        int64_t v24 = sub_10034F204(*(void *)(v2 + 216));
LABEL_14:
        int64_t v36 = v24;
        unint64_t v37 = *(void *)(v2 + 216);
        if (v37 - 10 > 4)
        {
          v173 = (const char **)(v3 - 96);
          Swift::UInt8 v50 = SFDeviceClassCodeGet(v24, v25);
          uint64_t v51 = (const char *)sub_10034F1E0(v37);
          BOOL v52 = sub_1003A0760(8u, (uint64_t)v51);
          __n128 v53 = swift_bridgeObjectRelease(v51);
          int64_t v175 = v36;
          if (v52)
          {
            if (!SFDeviceIsRealityDevice(v53))
            {
LABEL_37:
              float v55 = 15.0;
              float v1 = 18.2;
              switch(*(void *)(v2 + 216))
              {
                case 5LL:
                case 6LL:
                  goto LABEL_52;
                case 7LL:
                case 8LL:
                  float v55 = 18.0;
                  goto LABEL_52;
                case 9LL:
                  goto LABEL_45;
                default:
                  float v55 = 0.0;
                  goto LABEL_52;
              }
            }
          }

          else
          {
            uint64_t v56 = (const char *)sub_10034F1E0(*(void *)(v2 + 216));
            BOOL v57 = sub_1003A0760(v50, (uint64_t)v56);
            swift_bridgeObjectRelease(v56);
            if (!v57) {
              goto LABEL_37;
            }
          }

          float v55 = 18.0;
          float v1 = 2.2;
          switch(*(void *)(v2 + 216))
          {
            case 3LL:
            case 4LL:
              float v55 = 17.1;
              goto LABEL_52;
            case 5LL:
            case 6LL:
            case 8LL:
              goto LABEL_52;
            case 7LL:
              float v55 = 15.0;
LABEL_52:
              int *v173 = (const char *)_swiftEmptyArrayStorage;
              uint64_t v62 = (const char *)&_swiftEmptySetSingleton;
              float v1 = v55;
              goto LABEL_53;
            case 9LL:
LABEL_45:
              int *v173 = (const char *)_swiftEmptyArrayStorage;
              if (sub_100407724(3LL, v54) == 2)
              {
                uint64_t v62 = (const char *)&_swiftEmptySetSingleton;
                goto LABEL_53;
              }

              if (qword_100644088 == -1) {
                goto LABEL_49;
              }
              goto LABEL_166;
            default:
              int *v173 = (const char *)_swiftEmptyArrayStorage;
              uint64_t v62 = (const char *)&_swiftEmptySetSingleton;
              float v1 = 0.0;
              goto LABEL_53;
          }
        }

        uint64_t v38 = 0LL;
        int64_t v40 = v24 + 56;
        uint64_t v39 = *(void *)(v24 + 56);
        v191[0] = (uint64_t)_swiftEmptyArrayStorage;
        uint64_t v41 = -1LL;
        uint64_t v42 = -1LL << *(_BYTE *)(v24 + 32);
        if (-v42 < 64) {
          uint64_t v41 = ~(-1LL << -(char)v42);
        }
        unint64_t v43 = v41 & v39;
        uint64_t v3 = (unint64_t)(63 - v42) >> 6;
        if ((v41 & v39) != 0)
        {
LABEL_18:
          unint64_t v44 = __clz(__rbit64(v43));
          v43 &= v43 - 1;
          unint64_t v45 = v44 | (v38 << 6);
          goto LABEL_33;
        }

        while (1)
        {
          uint64_t v46 = v38 + 1;
          if (__OFADD__(v38, 1LL)) {
            goto LABEL_161;
          }
          if (v46 >= v3)
          {
LABEL_42:
            swift_release(v36);
            uint64_t v58 = (const char *)v191[0];
            sub_1001902E8(v191[0]);
            uint64_t v60 = v59;
            __n128 v61 = swift_bridgeObjectRelease(v58);
            return (*(uint64_t (**)(void *, __n128))(v2 + 8))(v60, v61);
          }

          unint64_t v47 = *(void *)(v40 + 8 * v46);
          ++v38;
          if (!v47)
          {
            uint64_t v38 = v46 + 1;
            if (v46 + 1 >= v3) {
              goto LABEL_42;
            }
            unint64_t v47 = *(void *)(v40 + 8 * v38);
            if (!v47)
            {
              uint64_t v38 = v46 + 2;
              if (v46 + 2 >= v3) {
                goto LABEL_42;
              }
              unint64_t v47 = *(void *)(v40 + 8 * v38);
              if (!v47)
              {
                uint64_t v48 = v46 + 3;
                if (v48 >= v3) {
                  goto LABEL_42;
                }
                unint64_t v47 = *(void *)(v40 + 8 * v48);
                if (!v47)
                {
                  while (1)
                  {
                    uint64_t v38 = v48 + 1;
                    if (__OFADD__(v48, 1LL)) {
                      break;
                    }
                    if (v38 >= v3) {
                      goto LABEL_42;
                    }
                    unint64_t v47 = *(void *)(v40 + 8 * v38);
                    ++v48;
                    if (v47) {
                      goto LABEL_32;
                    }
                  }

                  __break(1u);
                  while (2)
                  {
                    __break(1u);
LABEL_165:
                    __break(1u);
LABEL_166:
                    swift_once(&qword_100644088, sub_100270494);
LABEL_49:
                    BOOL v52 = 0LL;
                    sub_1002712F8(3);
LABEL_159:
                    Swift::Int v160 = v63;
                    v161 = *(os_unfair_lock_s **)(v63 + 112);
                    uint64_t v162 = swift_task_alloc(32LL);
                    *(void *)(v162 + swift_weakDestroy(v0 + 16) = sub_10034BF48;
                    *(void *)(v162 + 24) = v160;
                    os_unfair_lock_lock(v161 + 4);
                    (*(void (**)(uint64_t *__return_ptr))(v162 + 16))(v191);
                    uint64_t v62 = (const char *)v191[0];
                    os_unfair_lock_unlock(v161 + 4);
                    swift_release(v160);
                    swift_task_dealloc(v162);
LABEL_53:
                    int64_t v64 = 0LL;
                    uint64_t v163 = v3 - 144;
                    v164 = (void *)(v3 - 184);
                    uint64_t v171 = v3 - 120;
                    uint64_t v167 = v3 - 80;
                    uint64_t v168 = v3 - 88;
                    uint64_t v165 = v3 - 64;
                    uint64_t v166 = v3 - 72;
                    v185 = (id *)(v3 - 56);
                    v183 = (uint64_t *)(v3 - 48);
                    uint64_t v65 = (id *)(v3 - 40);
                    uint64_t v66 = (uint64_t *)(v3 - 32);
                    int64_t v169 = v175 + 56;
                    uint64_t v67 = -1LL << *(_BYTE *)(v175 + 32);
                    if (-v67 < 64) {
                      uint64_t v68 = ~(-1LL << -(char)v67);
                    }
                    else {
                      uint64_t v68 = -1LL;
                    }
                    unint64_t v69 = v68 & *(void *)(v175 + 56);
                    uint64_t v172 = *(void *)(v2 + 208)
                         + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices;
                    int64_t v170 = (unint64_t)(63 - v67) >> 6;
                    v189 = (char *)(v62 + 56);
                    uint64_t v190 = v62;
                    v181 = (uint64_t *)(v3 - 32);
                    uint64_t v182 = (id *)(v3 - 40);
LABEL_58:
                    if (v69)
                    {
                      uint64_t v177 = (v69 - 1) & v69;
                      int64_t v178 = v64;
                      unint64_t v70 = __clz(__rbit64(v69)) | (v64 << 6);
                    }

                    else
                    {
                      BOOL v71 = __OFADD__(v64, 1LL);
                      int64_t v72 = v64 + 1;
                      if (v71) {
                        continue;
                      }
                      if (v72 >= v170)
                      {
LABEL_158:
                        swift_release(v175);
                        swift_bridgeObjectRelease(v62);
                        *(void *)&double v156 = swift_beginAccess(v173, v163, 0LL, 0LL).n128_u64[0];
                        v157 = *v173;
                        swift_bridgeObjectRetain(*v173, v156);
                        sub_1001902E8(v158);
                        uint64_t v60 = v159;
                        swift_bridgeObjectRelease_n(v157, 2LL);
                        return (*(uint64_t (**)(void *, __n128))(v2 + 8))(v60, v61);
                      }

                      unint64_t v73 = *(void *)(v169 + 8 * v72);
                      if (!v73)
                      {
                        int64_t v74 = v72 + 1;
                        if (v72 + 1 >= v170) {
                          goto LABEL_158;
                        }
                        unint64_t v73 = *(void *)(v169 + 8 * v74);
                        if (!v73)
                        {
                          int64_t v74 = v72 + 2;
                          if (v72 + 2 >= v170) {
                            goto LABEL_158;
                          }
                          unint64_t v73 = *(void *)(v169 + 8 * v74);
                          if (!v73)
                          {
                            int64_t v74 = v72 + 3;
                            if (v72 + 3 >= v170) {
                              goto LABEL_158;
                            }
                            unint64_t v73 = *(void *)(v169 + 8 * v74);
                            if (!v73)
                            {
                              while (1)
                              {
                                int64_t v72 = v74 + 1;
                                if (__OFADD__(v74, 1LL)) {
                                  goto LABEL_165;
                                }
                                if (v72 >= v170) {
                                  goto LABEL_158;
                                }
                                unint64_t v73 = *(void *)(v169 + 8 * v72);
                                ++v74;
                                if (v73) {
                                  goto LABEL_70;
                                }
                              }
                            }
                          }
                        }

                        int64_t v72 = v74;
                      }

LABEL_121:
                      id v117 = [v114 uniqueID];
                      if (!v117)
                      {
                        __break(1u);
                        JUMPOUT(0x100460048LL);
                      }

                      uint64_t v118 = v117;
                      uint64_t v119 = static String._unconditionallyBridgeFromObjectiveC(_:)(v117);
                      uint64_t v121 = v120;

                      if (!*((void *)v62 + 2)) {
                        goto LABEL_103;
                      }
                      Hasher.init(_seed:)(v191);
                      String.hash(into:)(v191, v119, v121);
                      Swift::Int v122 = Hasher._finalize()();
                      uint64_t v123 = -1LL << v62[32];
                      unint64_t v124 = v122 & ~v123;
                      if (((*(void *)&v189[(v124 >> 3) & 0xFFFFFFFFFFFFF8LL] >> v124) & 1) == 0) {
                        goto LABEL_103;
                      }
                      uint64_t v125 = *((void *)v62 + 6);
                      uint64_t v126 = (void *)(v125 + 16 * v124);
                      uint64_t v127 = (const char *)v126[1];
                      if (*v126 == v119 && v127 == v121
                        || (_stringCompareWithSmolCheck(_:_:expecting:)(*v126, v127, v119, v121, 0LL) & 1) != 0)
                      {
                        goto LABEL_131;
                      }

                      uint64_t v176 = ~v123;
                      unint64_t v128 = (v124 + 1) & ~v123;
                      if (((*(void *)&v189[(v128 >> 3) & 0xFFFFFFFFFFFFF8LL] >> v128) & 1) == 0) {
                        goto LABEL_103;
                      }
                      uint64_t v129 = (void *)(v125 + 16 * v128);
                      uint64_t v130 = (const char *)v129[1];
                      if (*v129 == v119 && v130 == v121
                        || (_stringCompareWithSmolCheck(_:_:expecting:)(*v129, v130, v119, v121, 0LL) & 1) != 0)
                      {
                        goto LABEL_131;
                      }

                      unint64_t v131 = (v128 + 1) & v176;
                      if (((*(void *)&v189[(v131 >> 3) & 0xFFFFFFFFFFFFF8LL] >> v131) & 1) != 0)
                      {
                        while (1)
                        {
                          __int128 v132 = (void *)(v125 + 16 * v131);
                          __int128 v133 = (const char *)v132[1];
                          BOOL v134 = *v132 == v119 && v133 == v121;
                          if (v134
                            || (_stringCompareWithSmolCheck(_:_:expecting:)(*v132, v133, v119, v121, 0LL) & 1) != 0)
                          {
                            break;
                          }

                          uint64_t v107 = 0LL;
                          unint64_t v131 = (v131 + 1) & v176;
                          if (((*(void *)&v189[(v131 >> 3) & 0xFFFFFFFFFFFFF8LL] >> v131) & 1) == 0) {
                            goto LABEL_104;
                          }
                        }

LABEL_131:
                        uint64_t v107 = 1LL;
                      }

                      else
                      {
LABEL_103:
                        uint64_t v107 = 0LL;
                      }

LABEL_104:
                      objc_msgSend(v114, "setUnlockEnabled:", v107, swift_bridgeObjectRelease(v121).n128_f64[0]);
                      continue;
                    }

                    break;
                  }

                  ++v2;
                  uint64_t v62 = v190;
                  if (!__OFADD__(v108, 1LL))
                  {
                    if (v2 >= v186) {
                      goto LABEL_151;
                    }
                    unint64_t v115 = *(void *)(v187 + 8 * v2);
                    BOOL v52 = v184;
                    uint64_t v66 = v181;
                    uint64_t v65 = v182;
                    if (!v115)
                    {
                      int64_t v116 = v108 + 2;
                      if (v108 + 2 >= v186) {
                        goto LABEL_156;
                      }
                      unint64_t v115 = *(void *)(v187 + 8 * v116);
                      if (v115) {
                        goto LABEL_118;
                      }
                      int64_t v116 = v108 + 3;
                      if (v108 + 3 >= v186) {
                        goto LABEL_156;
                      }
                      unint64_t v115 = *(void *)(v187 + 8 * v116);
                      if (v115)
                      {
LABEL_118:
                        int64_t v2 = v116;
                      }

                      else
                      {
                        int64_t v2 = v108 + 4;
                        if (v108 + 4 >= v186)
                        {
LABEL_156:
                          int64_t v2 = v180;
LABEL_153:
                          sub_100187094(v7);
LABEL_154:
                          swift_beginAccess(v173, v171, 33LL, 0LL);
                          sub_10028B078(v3);
                          uint64_t v136 = swift_endAccess(v171);
                          uint64_t v137 = (os_log_s *)Logger.logObject.getter(v136);
                          os_log_type_t v138 = static os_log_type_t.default.getter(v137);
                          uint64_t v3 = v138;
                          if (os_log_type_enabled(v137, v138))
                          {
                            uint64_t v139 = *(void *)(v2 + 216);
                            uint64_t v140 = swift_slowAlloc(32LL, -1LL);
                            uint64_t v188 = swift_slowAlloc(96LL, -1LL);
                            v191[0] = v188;
                            *(_DWORD *)uint64_t v140 = 136315650;
                            unint64_t v141 = sub_10034F010(v139);
                            uint64_t v143 = (const char *)v142;
                            *(void *)(v2 + 112) = sub_10018CDB4(v141, v142, v191);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)(v168, v167, v140 + 4, v140 + 12);
                            swift_bridgeObjectRelease(v143);
                            *(_WORD *)(v140 + 12) = 2080;
                            *(void *)(v2 + 120) = v174;
                            type metadata accessor for SFAutoUnlockDeviceType(0LL);
                            uint64_t v145 = String.init<A>(describing:)(v167, v144);
                            v147 = (const char *)v146;
                            *(void *)(v2 + 128) = sub_10018CDB4(v145, v146, v191);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)(v166, v165, v140 + 14, v140 + 22);
                            swift_bridgeObjectRelease(v147);
                            *(_WORD *)(v140 + 22) = 2080;
                            v148 = *(const char **)(v2 + 104);
                            uint64_t v149 = sub_100183168( 0LL,  (unint64_t *)&unk_10064B7B0,  &OBJC_CLASS___SFAutoUnlockDevice_ptr);
                            swift_bridgeObjectRetain(v148);
                            uint64_t v151 = Array.description.getter(v150, v149);
                            v153 = v152;
                            uint64_t v154 = v148;
                            uint64_t v65 = v182;
                            swift_bridgeObjectRelease(v154);
                            uint64_t v155 = v151;
                            int64_t v2 = v180;
                            *(void *)(v180 + 136) = sub_10018CDB4(v155, (unint64_t)v153, v191);
                            uint64_t v66 = v181;
                            UnsafeMutableRawBufferPointer.copyMemory(from:)(v165, v185, v140 + 24, v140 + 32);
                            swift_bridgeObjectRelease(v153);
                            _os_log_impl( (void *)&_mh_execute_header,  v137,  (os_log_type_t)v3,  "listEligibleDevices for %s returning eligible %s devices: %s",  (uint8_t *)v140,  0x20u);
                            uint64_t v3 = v188;
                            swift_arrayDestroy(v188, 3LL, (char *)&type metadata for Any + 8);
                            swift_slowDealloc(v188, -1LL, -1LL);
                            swift_slowDealloc(v140, -1LL, -1LL);
                          }

                          unint64_t v69 = v177;
                          int64_t v64 = v178;
                          goto LABEL_58;
                        }

                        unint64_t v115 = *(void *)(v187 + 8 * v2);
                        if (!v115)
                        {
                          int64_t v135 = v108 + 5;
                          int64_t v2 = v180;
                          do
                          {
                            if (v186 == v135) {
                              goto LABEL_153;
                            }
                            unint64_t v115 = *(void *)(v187 + 8 * v135++);
                          }

                          while (!v115);
                          int64_t v2 = v135 - 1;
                        }
                      }
                    }

                    unint64_t v103 = (v115 - 1) & v115;
                    unint64_t v110 = __clz(__rbit64(v115)) + (v2 << 6);
                    goto LABEL_120;
                  }

                  __break(1u);
LABEL_161:
                  __break(1u);
LABEL_162:
                  swift_once(&qword_100644408, sub_100458568);
                  goto LABEL_4;
                }

                uint64_t v38 = v48;
              }
            }
          }

uint64_t sub_100460078()
{
  return swift_task_switch(sub_1004600CC, 0LL, 0LL);
}

uint64_t sub_1004600CC()
{
  int64_t v2 = v0;
  uint64_t v3 = (uint64_t)(v0 + 24);
  if (qword_100644408 != -1) {
    goto LABEL_159;
  }
  while (1)
  {
    uint64_t v4 = type metadata accessor for Logger(0LL);
    uint64_t v178 = sub_100186DE4(v4, (uint64_t)qword_100656748);
    uint64_t v5 = (os_log_s *)Logger.logObject.getter(v178);
    os_log_type_t v6 = static os_log_type_t.default.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = v2[27];
      uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v9 = swift_slowAlloc(32LL, -1LL);
      v188[0] = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      unint64_t v10 = sub_10034F010(v7);
      uint64_t v12 = (const char *)v11;
      v2[24] = sub_10018CDB4(v10, v11, v188);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3, v2 + 25, v8 + 4, v8 + 12);
      swift_bridgeObjectRelease(v12);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Asked to list all eligible devices for: %s", v8, 0xCu);
      swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1LL, -1LL);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    unint64_t v15 = v2[27];
    if (v15 - 3 >= 0xC) {
      break;
    }
    Swift::UInt8 v16 = SFDeviceClassCodeGet(v13, v14);
    uint64_t v17 = (const char *)sub_10034F1E0(v15);
    BOOL v18 = sub_1003A0760(8u, (uint64_t)v17);
    __n128 v19 = swift_bridgeObjectRelease(v17);
    if (v18)
    {
    }

    else
    {
      uint64_t v30 = (const char *)sub_10034F1E0(v2[27]);
      BOOL v31 = sub_1003A0760(v16, (uint64_t)v30);
      swift_bridgeObjectRelease(v30);
      if (v31)
      {
LABEL_11:
        int64_t v20 = sub_10034F210(v2[27]);
        goto LABEL_12;
      }
    }

    int64_t v20 = sub_10034F204(v2[27]);
LABEL_12:
    int64_t v32 = v20;
    unint64_t v33 = v2[27];
    uint64_t v179 = v2;
    if (v33 - 10 > 4)
    {
      uint64_t v172 = (const char **)(v2 + 13);
      Swift::UInt8 v47 = SFDeviceClassCodeGet(v20, v21);
      uint64_t v48 = (const char *)sub_10034F1E0(v33);
      BOOL v49 = sub_1003A0760(8u, (uint64_t)v48);
      __n128 v50 = swift_bridgeObjectRelease(v48);
      int64_t v174 = v32;
      if (v49)
      {
        if (!SFDeviceIsRealityDevice(v50))
        {
LABEL_35:
          float v52 = 15.0;
          float v1 = 18.2;
          switch(v2[27])
          {
            case 5LL:
            case 6LL:
              goto LABEL_50;
            case 7LL:
            case 8LL:
              float v52 = 18.0;
              goto LABEL_50;
            case 9LL:
              goto LABEL_43;
            default:
              float v52 = 0.0;
              goto LABEL_50;
          }
        }
      }

      else
      {
        __n128 v53 = (const char *)sub_10034F1E0(v2[27]);
        BOOL v54 = sub_1003A0760(v47, (uint64_t)v53);
        swift_bridgeObjectRelease(v53);
        if (!v54) {
          goto LABEL_35;
        }
      }

      float v52 = 18.0;
      float v1 = 2.2;
      switch(v2[27])
      {
        case 3LL:
        case 4LL:
          float v52 = 17.1;
          goto LABEL_50;
        case 5LL:
        case 6LL:
        case 8LL:
          goto LABEL_50;
        case 7LL:
          float v52 = 15.0;
LABEL_50:
          uint64_t *v172 = (const char *)_swiftEmptyArrayStorage;
          uint64_t v60 = (const char *)&_swiftEmptySetSingleton;
          float v1 = v52;
          goto LABEL_51;
        case 9LL:
LABEL_43:
          uint64_t *v172 = (const char *)_swiftEmptyArrayStorage;
          if (sub_100407724(3LL, v51) == 2)
          {
            uint64_t v60 = (const char *)&_swiftEmptySetSingleton;
            goto LABEL_51;
          }

          if (qword_100644088 == -1) {
            goto LABEL_47;
          }
          goto LABEL_163;
        default:
          uint64_t *v172 = (const char *)_swiftEmptyArrayStorage;
          uint64_t v60 = (const char *)&_swiftEmptySetSingleton;
          float v1 = 0.0;
          goto LABEL_51;
      }
    }

    int64_t v34 = 0LL;
    int64_t v36 = v20 + 56;
    uint64_t v35 = *(void *)(v20 + 56);
    v188[0] = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v37 = -1LL;
    uint64_t v38 = -1LL << *(_BYTE *)(v20 + 32);
    if (-v38 < 64) {
      uint64_t v37 = ~(-1LL << -(char)v38);
    }
    unint64_t v39 = v37 & v35;
    int64_t v40 = (unint64_t)(63 - v38) >> 6;
    if ((v37 & v35) != 0)
    {
LABEL_16:
      unint64_t v41 = __clz(__rbit64(v39));
      v39 &= v39 - 1;
      unint64_t v42 = v41 | (v34 << 6);
      goto LABEL_31;
    }

    while (1)
    {
      int64_t v43 = v34 + 1;
      if (__OFADD__(v34, 1LL)) {
        goto LABEL_158;
      }
      if (v43 >= v40)
      {
LABEL_40:
        swift_release(v32);
        float v55 = (const char *)v188[0];
        sub_1001902E8(v188[0]);
        BOOL v57 = v56;
        __n128 v58 = swift_bridgeObjectRelease(v55);
        return ((uint64_t (*)(void *, __n128))v2[1])(v57, v58);
      }

      unint64_t v44 = *(void *)(v36 + 8 * v43);
      ++v34;
      if (!v44)
      {
        int64_t v34 = v43 + 1;
        if (v43 + 1 >= v40) {
          goto LABEL_40;
        }
        unint64_t v44 = *(void *)(v36 + 8 * v34);
        if (!v44)
        {
          int64_t v34 = v43 + 2;
          if (v43 + 2 >= v40) {
            goto LABEL_40;
          }
          unint64_t v44 = *(void *)(v36 + 8 * v34);
          if (!v44) {
            break;
          }
        }
      }

LABEL_94:
    BOOL v169 = v18;
    if ((v3 & 0xC000000000000001LL) != 0)
    {
      uint64_t v93 = swift_retain();
      uint64_t v94 = __CocoaSet.makeIterator()(v93);
      uint64_t v95 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
      unint64_t v96 = sub_10023F574();
      uint64_t v97 = Set.Iterator.init(_cocoa:)(v161, v94, v95, v96);
      uint64_t v98 = v2[2];
      uint64_t v184 = v2[3];
      uint64_t v99 = v2[4];
      int64_t v100 = v2[5];
      unint64_t v101 = v2[6];
    }

    else
    {
      uint64_t v102 = -1LL << *(_BYTE *)(v3 + 32);
      uint64_t v184 = v3 + 56;
      uint64_t v99 = ~v102;
      uint64_t v103 = -v102;
      if (v103 < 64) {
        uint64_t v104 = ~(-1LL << v103);
      }
      else {
        uint64_t v104 = -1LL;
      }
      unint64_t v101 = v104 & *(void *)(v3 + 56);
      uint64_t v97 = (void *)swift_retain();
      int64_t v100 = 0LL;
      uint64_t v98 = v3;
    }

    int64_t v183 = (unint64_t)(v99 + 64) >> 6;
    while (2)
    {
      int64_t v2 = (void *)v101;
      int64_t v106 = v100;
      if (v98 < 0)
      {
        uint64_t v109 = __CocoaSet.Iterator.next()(v97);
        if (!v109)
        {
          uint64_t v60 = v187;
LABEL_149:
          BOOL v18 = v169;
          Swift::Int v63 = v180;
LABEL_150:
          sub_100187094(v98);
          int64_t v2 = v179;
          goto LABEL_151;
        }

        uint64_t v110 = v109;
        uint64_t *v181 = v109;
        uint64_t v111 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
        swift_unknownObjectRetain(v110);
        swift_dynamicCast(v182, v181, (char *)&type metadata for Swift.AnyObject + 8, v111, 7LL);
        id v112 = *v182;
        swift_unknownObjectRelease(v110);
        uint64_t v60 = v187;
        if (!v112) {
          goto LABEL_149;
        }
        goto LABEL_119;
      }

      if (v101)
      {
        unint64_t v107 = __clz(__rbit64(v101));
        v101 &= v101 - 1;
        unint64_t v108 = v107 | (v100 << 6);
        uint64_t v60 = v187;
        goto LABEL_118;
      }

      ++v100;
      uint64_t v60 = v187;
      if (!__OFADD__(v106, 1LL))
      {
        if (v100 >= v183) {
          goto LABEL_149;
        }
        unint64_t v113 = *(void *)(v184 + 8 * v100);
        Swift::Int v63 = v180;
        if (!v113)
        {
          int64_t v114 = v106 + 2;
          if (v106 + 2 >= v183) {
            goto LABEL_153;
          }
          unint64_t v113 = *(void *)(v184 + 8 * v114);
          if (v113) {
            goto LABEL_116;
          }
          int64_t v114 = v106 + 3;
          if (v106 + 3 >= v183) {
            goto LABEL_153;
          }
          unint64_t v113 = *(void *)(v184 + 8 * v114);
          if (v113)
          {
LABEL_116:
            int64_t v100 = v114;
          }

          else
          {
            int64_t v100 = v106 + 4;
            if (v106 + 4 >= v183)
            {
LABEL_153:
              BOOL v18 = v169;
              goto LABEL_150;
            }

            unint64_t v113 = *(void *)(v184 + 8 * v100);
            if (!v113)
            {
              int64_t v133 = v106 + 5;
              BOOL v18 = v169;
              do
              {
                if (v183 == v133) {
                  goto LABEL_150;
                }
                unint64_t v113 = *(void *)(v184 + 8 * v133++);
              }

              while (!v113);
              int64_t v100 = v133 - 1;
            }
          }
        }

        unint64_t v101 = (v113 - 1) & v113;
        unint64_t v108 = __clz(__rbit64(v113)) + (v100 << 6);
LABEL_118:
        id v112 = *(id *)(*(void *)(v98 + 48) + 8 * v108);
        if (!v112) {
          goto LABEL_149;
        }
LABEL_119:
        id v115 = [v112 uniqueID];
        if (!v115)
        {
          __break(1u);
          JUMPOUT(0x100461378LL);
        }

        int64_t v116 = v115;
        uint64_t v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v115);
        uint64_t v119 = v118;

        if (!*((void *)v60 + 2)) {
          goto LABEL_101;
        }
        Hasher.init(_seed:)(v188);
        String.hash(into:)(v188, v117, v119);
        Swift::Int v120 = Hasher._finalize()();
        uint64_t v121 = -1LL << v60[32];
        unint64_t v122 = v120 & ~v121;
        if (((*(void *)&v186[(v122 >> 3) & 0xFFFFFFFFFFFFF8LL] >> v122) & 1) == 0) {
          goto LABEL_101;
        }
        uint64_t v123 = *((void *)v60 + 6);
        unint64_t v124 = (void *)(v123 + 16 * v122);
        uint64_t v125 = (const char *)v124[1];
        if (*v124 == v117 && v125 == v119
          || (_stringCompareWithSmolCheck(_:_:expecting:)(*v124, v125, v117, v119, 0LL) & 1) != 0)
        {
          goto LABEL_129;
        }

        uint64_t v175 = ~v121;
        unint64_t v126 = (v122 + 1) & ~v121;
        if (((*(void *)&v186[(v126 >> 3) & 0xFFFFFFFFFFFFF8LL] >> v126) & 1) == 0) {
          goto LABEL_101;
        }
        uint64_t v127 = (void *)(v123 + 16 * v126);
        unint64_t v128 = (const char *)v127[1];
        if (*v127 == v117 && v128 == v119
          || (_stringCompareWithSmolCheck(_:_:expecting:)(*v127, v128, v117, v119, 0LL) & 1) != 0)
        {
          goto LABEL_129;
        }

        unint64_t v129 = (v126 + 1) & v175;
        if (((*(void *)&v186[(v129 >> 3) & 0xFFFFFFFFFFFFF8LL] >> v129) & 1) != 0)
        {
          while (1)
          {
            uint64_t v130 = (void *)(v123 + 16 * v129);
            unint64_t v131 = (const char *)v130[1];
            BOOL v132 = *v130 == v117 && v131 == v119;
            if (v132 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v130, v131, v117, v119, 0LL) & 1) != 0) {
              break;
            }
            uint64_t v105 = 0LL;
            unint64_t v129 = (v129 + 1) & v175;
            if (((*(void *)&v186[(v129 >> 3) & 0xFFFFFFFFFFFFF8LL] >> v129) & 1) == 0) {
              goto LABEL_102;
            }
          }

LABEL_129:
          uint64_t v105 = 1LL;
        }

        else
        {
LABEL_101:
          uint64_t v105 = 0LL;
        }

LABEL_102:
        objc_msgSend(v112, "setUnlockEnabled:", v105, swift_bridgeObjectRelease(v119).n128_f64[0]);
        continue;
      }

      break;
    }

    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    swift_once(&qword_100644408, sub_100458568);
  }

  BOOL v22 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = v2[27];
    uint64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v26 = swift_slowAlloc(32LL, -1LL);
    v188[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    unint64_t v27 = sub_10034F010(v24);
    id v29 = (const char *)v28;
    v2[22] = sub_10018CDB4(v27, v28, v188);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 + 22, v2 + 23, v25 + 4, v25 + 12);
    swift_bridgeObjectRelease(v29);
    _os_log_impl( (void *)&_mh_execute_header,  v22,  v23,  "listEligibleDevices is not supported for authenticationType %s",  v25,  0xCu);
    swift_arrayDestroy(v26, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  BOOL v57 = &_swiftEmptySetSingleton;
  return ((uint64_t (*)(void *, __n128))v2[1])(v57, v58);
}

  __break(1u);
}

void sub_1004613A8(uint64_t a1, uint64_t a2)
{
  char v2 = a1;
  sub_100407724(a1, a2);
  _StringGuts.grow(_:)(43LL);
  swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
  __asm { BR              X10 }

void sub_100461448()
{
  v5._countAndFlagsBits = 0x636F6C6E5563616DLL;
  v5._object = (void *)0xEE00656E6F68506BLL;
  String.append(_:)(v5);
  *(void *)&double v6 = swift_bridgeObjectRelease((const char *)0xEE00656E6F68506BLL).n128_u64[0];
  uint64_t v7 = v22;
  if (v4 == 2)
  {
    uint64_t v8 = v21;
    unint64_t v9 = sub_100187014();
    uint64_t v10 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v9, 0LL, 0LL);
    *(_DWORD *)uint64_t v11 = 10;
    *(void *)(v11 + 8) = v8;
    *(void *)(v11 + swift_weakDestroy(v0 + 16) = v7;
    swift_willThrow(v10);
  }

  else
  {
    swift_bridgeObjectRelease(v22, v6);
    char v12 = v4 & 1;
    if (qword_100644088 != -1) {
      swift_once(&qword_100644088, sub_100270494);
    }
    uint64_t v13 = (void *)qword_100669758;
    sub_1002712F8((char)v0);
    if (!v3)
    {
      uint64_t v15 = v14;
      Swift::UInt8 v16 = (os_unfair_lock_s *)(*(void *)(v14 + 112) + 16LL);
      os_unfair_lock_lock(v16);
      sub_10034BF48(&v21);
      uint64_t v17 = v21;
      os_unfair_lock_unlock(v16);
      swift_release(v15);
      swift_bridgeObjectRelease(0LL);
      os_log_type_t v23 = v17;
      __n128 v19 = *(uint64_t (**)(uint64_t))(v2
                                              + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices);
      uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices + 8);
      swift_retain();
      uint64_t v20 = v19(v1);
      swift_release(v18);
      sub_100480D54(v20, &v23, v13, v0, v12);
      swift_bridgeObjectRelease(v17);
    }
  }

id sub_10046165C(id *a1, float a2)
{
  uint64_t v5 = sub_100183098(&qword_100651A58);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v8 = *a1;
  id result = [*a1 productVersion];
  if (result)
  {
    uint64_t v10 = result;
    *(double *)&uint64_t v11 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)(result));
    uint64_t v13 = v12;

    double v40 = *(double *)&v11;
    unint64_t v41 = v13;
    uint64_t v38 = Float.description.getter(a2);
    unint64_t v39 = v14;
    uint64_t v15 = type metadata accessor for Locale(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL))(v7, 1LL, 1LL, v15);
    unint64_t v16 = sub_1001CCE8C();
    uint64_t v17 = StringProtocol.compare<A>(_:options:range:locale:)( &v38,  64LL,  0LL,  0LL,  1LL,  v7,  &type metadata for String,  &type metadata for String,  v16,  v16);
    sub_100187100((uint64_t)v7, &qword_100651A58);
    *(void *)&double v18 = swift_bridgeObjectRelease(v39).n128_u64[0];
    swift_bridgeObjectRelease(v41, v18);
    if (v17 == -1)
    {
      if (qword_100644408 != -1) {
        swift_once(&qword_100644408, sub_100458568);
      }
      uint64_t v19 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v19, (uint64_t)qword_100656748);
      double v20 = COERCE_DOUBLE(v8);
      uint64_t v21 = (os_log_s *)Logger.logObject.getter(*(void *)&v20);
      int v22 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v21, (os_log_type_t)v22))
      {
        HIDWORD(v34) = v22;
        uint64_t v37 = v2;
        uint64_t v23 = swift_slowAlloc(32LL, -1LL);
        uint64_t v24 = (double *)swift_slowAlloc(8LL, -1LL);
        uint64_t v36 = swift_slowAlloc(32LL, -1LL);
        uint64_t v38 = v36;
        *(_DWORD *)uint64_t v23 = 138412802;
        double v40 = v20;
        id v25 = *(id *)&v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v23 + 4, v23 + 12);
        uint64_t v35 = v24;
        *uint64_t v24 = v20;

        *(_WORD *)(v23 + 12) = 2080;
        id v26 = [v25 productVersion];
        if (v26)
        {
          unint64_t v27 = v26;
          uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
          uint64_t v30 = v29;
        }

        else
        {
          double v40 = 0.0;
          unint64_t v41 = (const char *)0xE000000000000000LL;
          _StringGuts.grow(_:)(17LL);
          swift_bridgeObjectRelease(v41);
          uint64_t v30 = (const char *)0x80000001005046B0LL;
          uint64_t v28 = 0xD000000000000015LL;
        }

        double v40 = COERCE_DOUBLE(sub_10018CDB4(v28, (unint64_t)v30, &v38));
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v23 + 14, v23 + 22);

        swift_bridgeObjectRelease(v30);
        *(_WORD *)(v23 + 22) = 2048;
        double v40 = a2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v23 + 24, v23 + 32);
        _os_log_impl( (void *)&_mh_execute_header,  v21,  BYTE4(v34),  "Device not eligible since it is not on a recent enough software version, device: %@, version: %s, required: %f",  (uint8_t *)v23,  0x20u);
        uint64_t v31 = sub_100183098(&qword_1006454E0);
        int64_t v32 = v35;
        swift_arrayDestroy(v35, 1LL, v31);
        swift_slowDealloc(v32, -1LL, -1LL);
        uint64_t v33 = v36;
        swift_arrayDestroy(v36, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v33, -1LL, -1LL);
        swift_slowDealloc(v23, -1LL, -1LL);
      }

      else
      {
      }
    }

    return (id)(v17 != -1);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_100461B78(uint64_t a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v6 = dword_100656C5C;
  id v7 = a3;
  id v8 = (void *)swift_task_alloc(v6);
  v3[4] = v8;
  *id v8 = v3;
  v8[1] = sub_100461C00;
  v8[25] = a1;
  v8[26] = v7;
  return swift_task_switch(sub_10045ED24, 0LL, 0LL);
}

uint64_t sub_100461C00(const char *a1)
{
  uint64_t v3 = *(void (***)(void, void, __n128))(*v1 + 24);
  char v4 = *(void **)(*v1 + 16);
  uint64_t v8 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 32));

  sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
  sub_10023F574();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  __n128 v6 = swift_bridgeObjectRelease(a1);
  ((void (**)(void, Class, __n128))v3)[2](v3, isa, v6);

  _Block_release(v3);
  return (*(uint64_t (**)(void))(v8 + 8))();
}

void sub_100461CB4(id *a1, const char **a2, uint64_t a3, os_unfair_lock_s *a4)
{
  id v6 = *a1;
  id v7 = *a2;
  if (*a2)
  {
    id v8 = objc_msgSend(v6, "uniqueID", swift_bridgeObjectRetain(*a2).n128_f64[0]);
    if (v8)
    {
      unint64_t v9 = v8;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      char v12 = v11;

      sub_1003A084C(v10, (uint64_t)v12, (uint64_t)v7);
      *(void *)&double v13 = swift_bridgeObjectRelease(v12).n128_u64[0];
      swift_bridgeObjectRelease(v7, v13);
      return;
    }

    __break(1u);
LABEL_19:
    __break(1u);
    os_unfair_lock_unlock(v5);
    __break(1u);
    return;
  }

  uint64_t v5 = a4;
  id v14 = [*a1 uniqueID];
  if (v14)
  {
    uint64_t v15 = v14;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    uint64_t v17 = v16;
  }

  else
  {
    uint64_t v17 = 0LL;
  }

  sub_1002712F8((char)v5);
  if (!v4)
  {
    uint64_t v30 = v18;
    id v31 = objc_msgSend(v6, "uniqueID", swift_bridgeObjectRelease(v17).n128_f64[0]);
    if (v31)
    {
      int64_t v32 = v31;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      uint64_t v34 = v33;

      __chkstk_darwin(v35);
      uint64_t v37 = v36 + 4;
      os_unfair_lock_lock(v36 + 4);
      sub_100271B1C((void *(*)(uint64_t *__return_ptr))sub_10048A644, &v38);
      os_unfair_lock_unlock(v37);
      swift_release(v30);
      swift_bridgeObjectRelease(v34);
      return;
    }

    goto LABEL_19;
  }

  swift_errorRelease(v4);
  swift_bridgeObjectRelease(v17);
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v19 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v19, (uint64_t)qword_100656748);
  id v20 = v6;
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    uint64_t v40 = v24;
    *(_DWORD *)uint64_t v23 = 136315138;
    id v25 = [v20 uniqueID];
    if (v25)
    {
      id v26 = v25;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      id v29 = v28;
    }

    else
    {
      unint64_t v39 = 0xE000000000000000LL;
      _StringGuts.grow(_:)(17LL);
      swift_bridgeObjectRelease((const char *)0xE000000000000000LL, 0LL);
      id v29 = (const char *)0x80000001005046B0LL;
      uint64_t v27 = 0xD000000000000015LL;
    }

    uint64_t v38 = sub_10018CDB4(v27, (unint64_t)v29, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v23 + 4, v23 + 12);

    swift_bridgeObjectRelease(v29);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "No LocalLTK for remoteDevice %s", v23, 0xCu);
    swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1LL, -1LL);
    swift_slowDealloc(v23, -1LL, -1LL);
  }

  else
  {
  }

void sub_100462144(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4)
{
  void (*v47)(__int128 *__return_ptr, uint64_t, const char *);
  uint64_t v48;
  uint64_t v49;
  id v50;
  os_log_s *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  Class v57;
  os_log_s *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  os_log_s *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  Class v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  os_log_s *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  const char *v83;
  __n128 v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  _UNKNOWN **v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103[6];
  uint64_t v5 = v4;
  uint64_t v97 = a4;
  uint64_t v9 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v9);
  uint64_t v93 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for UUID(0LL);
  uint64_t v95 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v94 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (uint64_t *)((char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v17 = *(void **)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *unint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)(v16);
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  uint64_t v19 = type metadata accessor for Logger(0LL);
  uint64_t v20 = sub_100186DE4(v19, (uint64_t)qword_100656748);
  swift_bridgeObjectRetain_n(a3, 2LL);
  unint64_t v96 = v20;
  os_log_type_t v22 = (os_log_s *)Logger.logObject.getter(v21);
  os_log_type_t v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc(22LL, -1LL);
    unint64_t v90 = swift_slowAlloc(64LL, -1LL);
    v103[0] = v90;
    *(_DWORD *)uint64_t v24 = 136315394;
    BOOL v91 = a2;
    id v25 = (id)SFAuthenticationTypeToString(a1);
    uint64_t v92 = v5;
    id v26 = v25;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    uint64_t v28 = v11;
    uint64_t v29 = a1;
    unint64_t v31 = v30;

    *(void *)&unint64_t v101 = sub_10018CDB4(v27, v31, v103);
    a2 = v91;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, (char *)&v101 + 8, v24 + 4, v24 + 12);
    int64_t v32 = (const char *)v31;
    a1 = v29;
    uint64_t v11 = v28;
    *(void *)&double v33 = swift_bridgeObjectRelease(v32).n128_u64[0];
    *(_WORD *)(v24 + 12) = 2080;
    swift_bridgeObjectRetain(a3, v33);
    *(void *)&unint64_t v101 = sub_10018CDB4(a2, (unint64_t)a3, v103);
    uint64_t v5 = v92;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, (char *)&v101 + 8, v24 + 14, v24 + 22);
    swift_bridgeObjectRelease_n(a3, 3LL);
    _os_log_impl( (void *)&_mh_execute_header,  v22,  v23,  "Requested enablement of %s for device: %s",  (uint8_t *)v24,  0x16u);
    uint64_t v34 = v90;
    swift_arrayDestroy(v90, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1LL, -1LL);
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(a3, 2LL);
  }

  uint64_t v35 = sub_10034EC60(a1);
  if ((unint64_t)(v35 - 3) >= 0xC)
  {
    uint64_t v36 = a2;
    uint64_t v37 = a3;
    id v38 = sub_100487C98(19LL, 0LL, 0xE000000000000000LL);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong( v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate,  v39);
    if (Strong)
    {
      unint64_t v41 = (void *)Strong;
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v41 manager:v5 didFailToEnableDeviceFor:isa error:v38];
      swift_unknownObjectRelease(v41);

      id v38 = isa;
    }

    a3 = v37;
    a2 = v36;
  }

  int64_t v43 = *(uint64_t (**)(uint64_t))(v5
                                          + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isBluetoothEnabled);
  uint64_t v44 = *(void *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isBluetoothEnabled + 8);
  uint64_t v45 = swift_retain();
  LOBYTE(v43) = v43(v45);
  uint64_t v46 = swift_release(v44);
  if ((v43 & 1) == 0)
  {
    __n128 v58 = (os_log_s *)Logger.logObject.getter(v46);
    uint64_t v59 = static os_log_type_t.error.getter(v58);
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v60 = 0;
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "Bluetooth is disabled", v60, 2u);
      swift_slowDealloc(v60, -1LL, -1LL);
    }

    Swift::Int v61 = 17LL;
    goto LABEL_26;
  }

  Swift::UInt8 v47 = *(void (**)(__int128 *__return_ptr, uint64_t, const char *))(v5
                                                                             + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID);
  uint64_t v48 = *(void *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID + 8);
  swift_retain();
  v47(&v101, a2, a3);
  swift_release(v48);
  if (!v102)
  {
    sub_100187100((uint64_t)&v101, &qword_100654080);
    swift_bridgeObjectRetain_n(a3, 2LL);
    Swift::Int v63 = (os_log_s *)Logger.logObject.getter(v62);
    uint64_t v64 = static os_log_type_t.error.getter(v63);
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      unint64_t v66 = swift_slowAlloc(32LL, -1LL);
      v103[0] = v66;
      *(_DWORD *)uint64_t v65 = 136315138;
      swift_bridgeObjectRetain(a3);
      *(void *)&unint64_t v101 = sub_10018CDB4(a2, (unint64_t)a3, v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, (char *)&v101 + 8, v65 + 4, v65 + 12);
      swift_bridgeObjectRelease_n(a3, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v63,  v64,  "IDS device not found for SFAutoUnlock device: %s. Is the device in the same iCloud account?",  v65,  0xCu);
      swift_arrayDestroy(v66, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v66, -1LL, -1LL);
      swift_slowDealloc(v65, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(a3, 2LL);
    }

    Swift::Int v61 = 1LL;
LABEL_26:
    unint64_t v67 = sub_100487C98(v61, 0LL, 0xE000000000000000LL);
    int64_t v69 = swift_unknownObjectWeakLoadStrong( v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate,  v68);
    if (v69)
    {
      unint64_t v70 = (void *)v69;
      int64_t v71 = UUID._bridgeToObjectiveC()().super.isa;
      [v70 manager:v5 didFailToEnableDeviceFor:v71 error:v67];
      swift_unknownObjectRelease(v70);
    }

    else
    {
    }

    return;
  }

  sub_1001CE0D0(&v101, (uint64_t)v103);
  if ((unint64_t)(v35 - 9) <= 5)
  {
    if ((sub_100407724(3LL, v49) & 1) != 0)
    {
      uint64_t v73 = v94;
      uint64_t v72 = v95;
      int64_t v74 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 16))(v94, v97, v11);
      uint64_t v75 = v11;
      uint64_t v76 = (os_log_s *)Logger.logObject.getter(v74);
      uint64_t v77 = static os_log_type_t.default.getter(v76);
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v79 = swift_slowAlloc(32LL, -1LL);
        *(void *)&unint64_t v101 = v79;
        *(_DWORD *)uint64_t v78 = 136315138;
        uint64_t v92 = v5;
        uint64_t v80 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
        unsigned __int8 v81 = dispatch thunk of CustomStringConvertible.description.getter(v75, v80);
        unint64_t v83 = (const char *)v82;
        *(void *)&uint64_t v98 = sub_10018CDB4(v81, v82, (uint64_t *)&v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, (char *)&v98 + 8, v78 + 4, v78 + 12);
        uint64_t v84 = swift_bridgeObjectRelease(v83);
        (*(void (**)(char *, uint64_t, __n128))(v72 + 8))(v73, v75, v84);
        _os_log_impl( (void *)&_mh_execute_header,  v76,  v77,  "Starting PairingKeySession executor for sessionID %s",  v78,  0xCu);
        swift_arrayDestroy(v79, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v79, -1LL, -1LL);
        swift_slowDealloc(v78, -1LL, -1LL);
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v75);
      }

      uint64_t v85 = [objc_allocWithZone(SFAuthenticationOptions) init];
      uint64_t v99 = sub_100183168(0LL, &qword_1006569F0, &OBJC_CLASS___SFAuthenticationOptions_ptr);
      int64_t v100 = &off_1005DC590;
      *(void *)&uint64_t v98 = v85;
      sub_100462B08(v97, (uint64_t)v103, 9LL, 1, (uint64_t)&v98, (uint64_t)&v101);
      sub_100187100((uint64_t)&v98, &qword_1006569F8);
      unint64_t v86 = type metadata accessor for TaskPriority(0LL);
      unint64_t v87 = (uint64_t)v93;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56LL))(v93, 1LL, 1LL, v86);
      sub_10019A6C4((uint64_t)&v101, (uint64_t)&v98);
      unint64_t v88 = swift_allocObject(&unk_1005E3570, 72LL, 7LL);
      *(void *)(v88 + swift_weakDestroy(v0 + 16) = 0LL;
      *(void *)(v88 + 24) = 0LL;
      sub_1001CE0D0(&v98, v88 + 32);
      char v89 = sub_1001B37E8(v87, (uint64_t)&unk_100656C10, v88);
      swift_release(v89);
      sub_10018709C(&v101);
    }

    else
    {
      __n128 v50 = sub_100487C98(1LL, 0LL, 0xE000000000000000LL);
      uint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
      float v52 = static os_log_type_t.error.getter(v51);
      if (os_log_type_enabled(v51, v52))
      {
        __n128 v53 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)__n128 v53 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v51,  v52,  "requestEnablement is only applicable for Key device",  v53,  2u);
        swift_slowDealloc(v53, -1LL, -1LL);
      }

      float v55 = swift_unknownObjectWeakLoadStrong( v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate,  v54);
      if (v55)
      {
        uint64_t v56 = (void *)v55;
        BOOL v57 = UUID._bridgeToObjectiveC()().super.isa;
        [v56 manager:v5 didFailToEnableDeviceFor:v57 error:v50];

        swift_unknownObjectRelease(v56);
      }
    }
  }

  sub_10018709C(v103);
}

uint64_t sub_100462B08@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  void (*v28)(void *__return_ptr, _BYTE *, char *, uint64_t);
  uint64_t v29;
  void (*v30)(void *);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_BYTE *, uint64_t, uint64_t);
  char *v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  __n128 v37;
  _BYTE v38[4];
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void v45[3];
  _BYTE v46[40];
  void v47[6];
  id v7 = v6;
  uint64_t v40 = a2;
  unint64_t v41 = a5;
  uint64_t v39 = a4;
  int64_t v43 = a6;
  uint64_t v44 = a3;
  unint64_t v42 = a1;
  uint64_t ObjectType = swift_getObjectType(v6);
  uint64_t v9 = type metadata accessor for UUID(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v13 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  __chkstk_darwin(v13);
  uint64_t v15 = &v38[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v16 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = &v38[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v20 = *(void **)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  id v21 = v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)(v19);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) != 0)
  {
    uint64_t v23 = v39 & 1;
    id v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_commonContextGenerator];
    uint64_t v24 = *(void *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_commonContextGenerator + 8];
    v47[3] = ObjectType;
    v47[4] = &off_1005E2BD8;
    v47[0] = v7;
    swift_retain(v24);
    id v26 = v7;
    uint64_t v27 = v42;
    v25(v42, v40, v44, v23, v47);
    swift_release(v24);
    sub_10018709C(v47);
    uint64_t v28 = *(void (**)(void *__return_ptr, _BYTE *, char *, uint64_t))&v26[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_flowGenerator];
    uint64_t v29 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_flowGenerator + 8];
    swift_retain(v29);
    v28(v47, v15, v26, v41);
    swift_release(v29);
    unint64_t v30 = *(void (**)(void *))&v26[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionGenerator];
    unint64_t v31 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionGenerator + 8];
    swift_retain(v31);
    int64_t v32 = v43;
    v30(v47);
    swift_release(v31);
    double v33 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16);
    v33(v12, v27, v9);
    uint64_t v34 = &v26[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionAuthTypes];
    swift_beginAccess( &v26[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionAuthTypes],  v46,  33LL,  0LL);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)v34);
    v45[0] = *(void *)v34;
    *(void *)uint64_t v34 = 0x8000000000000000LL;
    sub_1003B37E8(v44, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
    uint64_t v36 = *(void *)v34;
    *(void *)uint64_t v34 = v45[0];
    uint64_t v37 = swift_bridgeObjectRelease(v36);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v10 + 8))(v12, v9, v37);
    swift_endAccess(v46);
    v33(v12, v27, v9);
    sub_10019A6C4(v32, (uint64_t)v46);
    swift_beginAccess(&v26[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions], v45, 33LL, 0LL);
    sub_1002E5A48((uint64_t)v46, (uint64_t)v12);
    swift_endAccess(v45);
    sub_10018709C(v47);
    return sub_1001A4BC8((uint64_t)v15, type metadata accessor for SDAuthenticationCommonOperationInput);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_100462E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = a4;
  return swift_task_switch(sub_100462E38, 0LL, 0LL);
}

uint64_t sub_100462E38()
{
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0LL;
  *(_OWORD *)(v0 + swift_weakDestroy(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc(dword_10064FE74);
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = sub_100462EA4;
  return sub_100344650(v0 + 16);
}

uint64_t sub_100462EA4()
{
  uint64_t v1 = *v0 + 16;
  uint64_t v3 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 64));
  sub_100187100(v1, (uint64_t *)&unk_100650068);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_100462F0C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void (*v41)(__int128 *__return_ptr, uint64_t, void *);
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  os_log_s *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  Class v60;
  id v61;
  unint64_t v62;
  unint64_t v63;
  os_log_s *v64;
  os_log_type_t v65;
  BOOL v66;
  uint8_t *v67;
  uint64_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char v75;
  uint64_t (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  os_log_s *v83;
  os_log_type_t v84;
  BOOL v85;
  uint8_t *v86;
  os_log_s *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  os_log_s *v96;
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  __n128 v106;
  int v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  os_log_s *v115;
  os_log_type_t v116;
  uint8_t *v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t Strong;
  void *v123;
  Class isa;
  void *v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint8_t *v130;
  char v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  os_log_s *v136;
  os_log_type_t v137;
  BOOL v138;
  uint8_t *v139;
  uint64_t v140;
  os_log_s *v141;
  os_log_type_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint8_t *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  uint64_t v163;
  _UNKNOWN **v164;
  __int128 v165;
  uint64_t v166;
  uint64_t v167[6];
  uint64_t v5 = v4;
  Swift::Int v160 = a4;
  v161 = a1;
  double v156 = type metadata accessor for SFPlatform(0LL);
  uint64_t v8 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v155 = (char *)&v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v153 = type metadata accessor for UUID(0LL);
  uint64_t v159 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  uint64_t v158 = (char *)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v18 = *(void **)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  id v19 = v18;
  char v20 = _dispatchPreconditionTest(_:)(v17);
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((v20 & 1) != 0)
  {
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = sub_100186DE4(v21, (uint64_t)qword_100656748);
  uint64_t v23 = swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v25 = static os_log_type_t.default.getter();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v154 = v8;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc(22LL, -1LL);
    Swift::Int v157 = a2;
    uint64_t v28 = v27;
    uint64_t v29 = swift_slowAlloc(64LL, -1LL);
    uint64_t v152 = v12;
    uint64_t v30 = v29;
    v167[0] = v29;
    *(_DWORD *)uint64_t v28 = 136315394;
    uint64_t v151 = v22;
    id v31 = (id)SFAuthenticationTypeToString(v161);
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    unint64_t v33 = (unint64_t)a3;
    uint64_t v34 = v5;
    unint64_t v36 = v35;

    *(void *)&uint64_t v165 = sub_10018CDB4(v32, v36, v167);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, (char *)&v165 + 8, v28 + 4, v28 + 12);
    unint64_t v37 = v36;
    uint64_t v5 = v34;
    a3 = (void *)v33;
    swift_bridgeObjectRelease(v37);
    *(_WORD *)(v28 + 12) = 2080;
    swift_bridgeObjectRetain(v33);
    *(void *)&uint64_t v165 = sub_10018CDB4(v157, v33, v167);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, (char *)&v165 + 8, v28 + 14, v28 + 22);
    swift_bridgeObjectRelease_n(v33, 3LL);
    _os_log_impl( (void *)&_mh_execute_header,  v24,  v25,  "Asked to disable %s for IDSDeviceID: %s",  (uint8_t *)v28,  0x16u);
    swift_arrayDestroy(v30, 2LL, (char *)&type metadata for Any + 8);
    uint64_t v38 = v30;
    uint64_t v12 = v152;
    swift_slowDealloc(v38, -1LL, -1LL);
    uint64_t v39 = v28;
    a2 = v157;
    swift_slowDealloc(v39, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(a3, 2LL);
  }

  unint64_t v41 = *(void (**)(__int128 *__return_ptr, uint64_t, void *))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID];
  uint64_t v40 = *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID + 8];
  swift_retain(v40);
  v41(&v165, a2, a3);
  swift_release(v40);
  if (v166)
  {
    sub_1001CE0D0(&v165, (uint64_t)v167);
    unint64_t v42 = sub_10034EC60(v161);
    uint64_t v44 = v42;
    uint64_t v45 = v158;
    uint64_t v46 = v159;
    if ((unint64_t)(v42 - 3) >= 6)
    {
      if ((unint64_t)(v42 - 9) >= 6)
      {
        if (v42 == 1)
        {
          unint64_t v87 = (os_log_s *)Logger.logObject.getter(1LL);
          unint64_t v88 = static os_log_type_t.error.getter(v87);
          if (os_log_type_enabled(v87, v88))
          {
            char v89 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)char v89 = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v87,  v88,  "Pairing for siri is tied to Auto Unlock. Use SFAutoUnlockManager instead",  v89,  2u);
            swift_slowDealloc(v89, -1LL, -1LL);
          }
        }

        else
        {
          id v115 = (os_log_s *)Logger.logObject.getter(v42);
          int64_t v116 = static os_log_type_t.error.getter(v115);
          if (os_log_type_enabled(v115, v116))
          {
            uint64_t v117 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v118 = swift_slowAlloc(32LL, -1LL);
            *(void *)&uint64_t v165 = v118;
            *(_DWORD *)uint64_t v117 = 136315138;
            uint64_t v119 = sub_10034F010(v44);
            uint64_t v121 = v120;
            *(void *)&uint64_t v162 = sub_10018CDB4(v119, v120, (uint64_t *)&v165);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v162, (char *)&v162 + 8, v117 + 4, v117 + 12);
            swift_bridgeObjectRelease(v121);
            _os_log_impl( (void *)&_mh_execute_header,  v115,  v116,  "%s does not support pairing. There is nothing to unpair.",  v117,  0xCu);
            swift_arrayDestroy(v118, 1LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v118, -1LL, -1LL);
            swift_slowDealloc(v117, -1LL, -1LL);
          }
        }

        uint64_t Strong = swift_unknownObjectWeakLoadStrong( &v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate],  v90);
        if (!Strong) {
          goto LABEL_65;
        }
        uint64_t v123 = (void *)Strong;
        Class isa = UUID._bridgeToObjectiveC()().super.isa;
        uint64_t v125 = sub_100487C98(1LL, 0LL, 0xE000000000000000LL);
        [v123 manager:v5 didFailToDisableDeviceFor:isa error:v125];

        goto LABEL_64;
      }

      Swift::UInt8 v47 = sub_100407724(3LL, v43);
      if (v47 != 2)
      {
        BOOL v49 = (v47 & 1) != 0 ? 12LL : 13LL;
        __n128 v50 = sub_100407724(3LL, v48);
        if (v50 != 2)
        {
          LODWORD(v161) = v50 & 1;
          uint64_t v94 = v153;
          uint64_t v95 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 16))(v45, v160, v153);
          unint64_t v96 = (os_log_s *)Logger.logObject.getter(v95);
          uint64_t v97 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v96, v97))
          {
            uint64_t v98 = swift_slowAlloc(32LL, -1LL);
            Swift::Int v157 = v49;
            uint64_t v99 = v98;
            int64_t v100 = swift_slowAlloc(96LL, -1LL);
            double v156 = (uint64_t)v5;
            uint64_t v152 = v12;
            unint64_t v101 = v100;
            *(void *)&uint64_t v165 = v100;
            *(_DWORD *)uint64_t v99 = 136315650;
            uint64_t v102 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
            uint64_t v103 = dispatch thunk of CustomStringConvertible.description.getter(v94, v102);
            uint64_t v105 = v104;
            *(void *)&uint64_t v162 = sub_10018CDB4(v103, v104, (uint64_t *)&v165);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v162, (char *)&v162 + 8, v99 + 4, v99 + 12);
            int64_t v106 = swift_bridgeObjectRelease(v105);
            (*(void (**)(char *, uint64_t, __n128))(v46 + 8))(v45, v94, v106);
            *(_WORD *)(v99 + 12) = 2080;
            unint64_t v107 = v161;
            if ((_DWORD)v161) {
              unint64_t v108 = 7955787LL;
            }
            else {
              unint64_t v108 = 1801678668LL;
            }
            if ((_DWORD)v161) {
              uint64_t v109 = 0xE300000000000000LL;
            }
            else {
              uint64_t v109 = 0xE400000000000000LL;
            }
            *(void *)&uint64_t v162 = sub_10018CDB4(v108, v109, (uint64_t *)&v165);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v162, (char *)&v162 + 8, v99 + 14, v99 + 22);
            swift_bridgeObjectRelease(v109);
            *(_WORD *)(v99 + 22) = 2080;
            uint64_t v110 = sub_10034F010(v157);
            id v112 = v111;
            *(void *)&uint64_t v162 = sub_10018CDB4(v110, v111, (uint64_t *)&v165);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v162, (char *)&v162 + 8, v99 + 24, v99 + 32);
            swift_bridgeObjectRelease(v112);
            _os_log_impl( (void *)&_mh_execute_header,  v96,  v97,  "Starting PairingDisable session executor for sessionID %s, role %s, disableType %s",  (uint8_t *)v99,  0x20u);
            swift_arrayDestroy(v101, 3LL, (char *)&type metadata for Any + 8);
            unint64_t v113 = v101;
            uint64_t v12 = v152;
            swift_slowDealloc(v113, -1LL, -1LL);
            int64_t v114 = v99;
            BOOL v49 = v157;
            swift_slowDealloc(v114, -1LL, -1LL);
          }

          else
          {
            (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v94);

            unint64_t v107 = v161;
          }

          unint64_t v126 = [objc_allocWithZone(SFAuthenticationOptions) init];
          uint64_t v163 = sub_100183168(0LL, &qword_1006569F0, &OBJC_CLASS___SFAuthenticationOptions_ptr);
          v164 = &off_1005DC590;
          *(void *)&uint64_t v162 = v126;
          sub_100462B08(v160, (uint64_t)v167, v49, v107, (uint64_t)&v162, (uint64_t)&v165);
          sub_100187100((uint64_t)&v162, &qword_1006569F8);
          uint64_t v127 = type metadata accessor for TaskPriority(0LL);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56LL))( v12,  1LL,  1LL,  v127);
          sub_10019A6C4((uint64_t)&v165, (uint64_t)&v162);
          unint64_t v128 = swift_allocObject(&unk_1005E2C88, 72LL, 7LL);
          *(void *)(v128 + swift_weakDestroy(v0 + 16) = 0LL;
          *(void *)(v128 + 24) = 0LL;
          sub_1001CE0D0(&v162, v128 + 32);
          unint64_t v129 = sub_1001B37E8((uint64_t)v12, (uint64_t)&unk_100656A08, v128);
          swift_release(v129);
          sub_10018709C(&v165);
          goto LABEL_65;
        }
      }
    }

    uint64_t v51 = sub_10044A908(a2, a3, v44);
    Swift::Int v63 = v62;
    v161 = v51;
    uint64_t v64 = (os_log_s *)Logger.logObject.getter(v51);
    uint64_t v65 = static os_log_type_t.info.getter();
    unint64_t v66 = os_log_type_enabled(v64, v65);
    uint64_t v159 = v63;
    if (v66)
    {
      unint64_t v67 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      *(_DWORD *)unint64_t v67 = 134217984;
      *(void *)&uint64_t v165 = v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, (char *)&v165 + 8, v67 + 4, v67 + 12);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Created disable message with type %lu", v67, 0xCu);
      Swift::Int v63 = v159;
      swift_slowDealloc(v67, -1LL, -1LL);
    }

    sub_1004641AC(v161, v63, (uint64_t)v167, 8LL, v44);
    BOOL v68 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56LL))(v12, 1LL, 1LL, v68);
    sub_10019A6C4((uint64_t)v167, (uint64_t)&v165);
    int64_t v69 = (void *)swift_allocObject(&unk_1005E2C60, 88LL, 7LL);
    v69[2] = 0LL;
    v69[3] = 0LL;
    v69[4] = v5;
    v69[5] = v44;
    sub_1001CE0D0(&v165, (uint64_t)(v69 + 6));
    unint64_t v70 = v5;
    int64_t v71 = sub_1001B341C((uint64_t)v12, (uint64_t)&unk_1006569E8, (uint64_t)v69);
    uint64_t v72 = swift_release(v71);
    uint64_t v73 = v44;
    if (v44 == 5)
    {
      int64_t v74 = v155;
      static SFPlatform.macOS.getter(v72);
      uint64_t v75 = static SFPlatform.isPlatform(_:)(v74);
      uint64_t v76 = *(uint64_t (**)(char *, uint64_t))(v154 + 8);
      uint64_t v77 = v156;
      uint64_t v78 = v76(v74, v156);
      if ((v75 & 1) != 0)
      {
        uint64_t v158 = v70;
        uint64_t v79 = sub_100464758(2LL, "eligible iPhone devices: %s");
        sub_100457EC0(v79, (SEL *)&selRef_deviceEnabledAsKeyForIDSDeviceID_);
        unsigned __int8 v81 = v80;
        swift_bridgeObjectRelease(v79);
        unint64_t v83 = (os_log_s *)Logger.logObject.getter(v82);
        uint64_t v84 = static os_log_type_t.default.getter();
        uint64_t v85 = os_log_type_enabled(v83, v84);
        if ((v81 & 1) != 0)
        {
          if (v85)
          {
            unint64_t v86 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)unint64_t v86 = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v83,  v84,  "Found a device that is still unlockable by this mac, leaving enabled as true",  v86,  2u);
            swift_slowDealloc(v86, -1LL, -1LL);
          }

          unint64_t v70 = v158;
        }

        else
        {
          if (v85)
          {
            uint64_t v130 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v130 = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v83,  v84,  "Found no phones unlockable by this mac, reporting change to observers",  v130,  2u);
            swift_slowDealloc(v130, -1LL, -1LL);
          }

          unint64_t v70 = v158;
          uint64_t v78 = sub_100458200();
        }
      }

      static SFPlatform.iOS.getter(v78);
      unint64_t v131 = static SFPlatform.isPlatform(_:)(v74);
      v76(v74, v77);
      if ((v131 & 1) == 0)
      {
        BOOL v91 = v70;
        uint64_t v92 = v161;
        uint64_t v93 = v159;
        goto LABEL_58;
      }

      BOOL v91 = v70;
      BOOL v132 = sub_100464758(4LL, "eligible mac devices: %s");
      int64_t v133 = sub_100481F28(0, v132);
      swift_bridgeObjectRelease(v132);
      uint64_t v134 = v133[2];
      swift_bridgeObjectRelease(v133);
      os_log_type_t v136 = (os_log_s *)Logger.logObject.getter(v135);
      uint64_t v137 = static os_log_type_t.default.getter();
      uint64_t v138 = os_log_type_enabled(v136, v137);
      Swift::Int v63 = v159;
      if (v134)
      {
        if (v138)
        {
          unint64_t v139 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)unint64_t v139 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v136,  v137,  "Found a mac that can unlock this phone, leaving enabled as true",  v139,  2u);
          swift_slowDealloc(v139, -1LL, -1LL);
        }

        sub_100189B20(v161, v63);

        goto LABEL_59;
      }

      if (v138)
      {
        uint64_t v150 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v150 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v136,  v137,  "Found no macs able to unlock this phone, reporting change to observers",  v150,  2u);
        swift_slowDealloc(v150, -1LL, -1LL);
      }

      sub_100458200();
    }

    else
    {
      BOOL v91 = v70;
    }

    uint64_t v92 = v161;
    uint64_t v93 = v63;
LABEL_58:
    sub_100189B20(v92, v93);
LABEL_59:
    unint64_t v140 = swift_bridgeObjectRetain_n(a3, 2LL);
    unint64_t v141 = (os_log_s *)Logger.logObject.getter(v140);
    uint64_t v142 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v141, v142))
    {
      uint64_t v143 = swift_slowAlloc(22LL, -1LL);
      unint64_t v144 = swift_slowAlloc(64LL, -1LL);
      *(void *)&uint64_t v165 = v144;
      *(_DWORD *)uint64_t v143 = 136315394;
      uint64_t v145 = sub_10034F010(v73);
      uint64_t v147 = v146;
      *(void *)&uint64_t v162 = sub_10018CDB4(v145, v146, (uint64_t *)&v165);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v162, (char *)&v162 + 8, v143 + 4, v143 + 12);
      swift_bridgeObjectRelease(v147);
      *(_WORD *)(v143 + 12) = 2080;
      swift_bridgeObjectRetain(a3);
      *(void *)&uint64_t v162 = sub_10018CDB4(a2, (unint64_t)a3, (uint64_t *)&v165);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v162, (char *)&v162 + 8, v143 + 14, v143 + 22);
      swift_bridgeObjectRelease_n(a3, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v141,  v142,  "Successfully disabled %s for IDSdeviceID: %s",  (uint8_t *)v143,  0x16u);
      swift_arrayDestroy(v144, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v144, -1LL, -1LL);
      swift_slowDealloc(v143, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(a3, 2LL);
    }

    uint64_t v149 = swift_unknownObjectWeakLoadStrong( &v91[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate],  v148);
    if (!v149) {
      goto LABEL_65;
    }
    uint64_t v123 = (void *)v149;
    uint64_t v125 = UUID._bridgeToObjectiveC()().super.isa;
    [v123 manager:v91 didDisableAuthenticationFor:v125];
LABEL_64:
    swift_unknownObjectRelease(v123);

LABEL_65:
    sub_10018709C(v167);
    return;
  }

  sub_100187100((uint64_t)&v165, &qword_100654080);
  float v52 = swift_bridgeObjectRetain_n(a3, 2LL);
  __n128 v53 = (os_log_s *)Logger.logObject.getter(v52);
  BOOL v54 = static os_log_type_t.error.getter(v53);
  if (os_log_type_enabled(v53, v54))
  {
    float v55 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v56 = swift_slowAlloc(32LL, -1LL);
    v167[0] = v56;
    *(_DWORD *)float v55 = 136315138;
    swift_bridgeObjectRetain(a3);
    *(void *)&uint64_t v165 = sub_10018CDB4(a2, (unint64_t)a3, v167);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, (char *)&v165 + 8, v55 + 4, v55 + 12);
    swift_bridgeObjectRelease_n(a3, 3LL);
    _os_log_impl( (void *)&_mh_execute_header,  v53,  v54,  "IDS device not found for IDSDeviceID: %s. Is the device in the same iCloud account?",  v55,  0xCu);
    swift_arrayDestroy(v56, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v56, -1LL, -1LL);
    swift_slowDealloc(v55, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(a3, 2LL);
  }

  __n128 v58 = swift_unknownObjectWeakLoadStrong( &v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate],  v57);
  if (v58)
  {
    uint64_t v59 = (void *)v58;
    uint64_t v60 = UUID._bridgeToObjectiveC()().super.isa;
    Swift::Int v61 = sub_100487C98(1LL, 0LL, 0xE000000000000000LL);
    [v59 manager:v5 didFailToDisableDeviceFor:v60 error:v61];
    swift_unknownObjectRelease(v59);
  }

uint64_t sub_100464128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = a4;
  return swift_task_switch(sub_100464140, 0LL, 0LL);
}

uint64_t sub_100464140()
{
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0LL;
  *(_OWORD *)(v0 + swift_weakDestroy(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc(dword_10064FE74);
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = sub_10048AA08;
  return sub_100344650(v0 + 16);
}

uint64_t sub_1004641AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = sub_100186DE4(v10, (uint64_t)qword_100656748);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (_DWORD *)swift_slowAlloc(12LL, -1LL);
    swift_slowAlloc(32LL, -1LL);
    *uint64_t v14 = 136315138;
    uint64_t v15 = (char *)&loc_1004642AC + 4 * byte_1004DCD74[sub_10034E9D8(a5)];
    __asm { BR              X10 }
  }

  char v16 = sub_10034E9D8(a5);
  unint64_t v17 = sub_1003F0F60(a1, a2, a3, a4, v16);
  return v17 | ((HIDWORD(v17) & 1) << 32);
}

uint64_t sub_100464470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  v6[7] = a4;
  uint64_t v7 = type metadata accessor for ContinuousClock(0LL);
  v6[10] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[11] = v8;
  v6[12] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1004644D4, 0LL, 0LL);
}

uint64_t sub_1004644D4(uint64_t a1)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006461D8 + dword_1006461D8);
  uint64_t v2 = (void *)swift_task_alloc(unk_1006461DC);
  *(void *)(v1 + 104) = v2;
  void *v2 = v1;
  v2[1] = sub_100464554;
  return v4(1000000000000000000LL, 0LL, 0LL, 0LL, 1);
}

uint64_t sub_100464554()
{
  uint64_t v3 = *(void *)(*(void *)v1 + 96LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 104LL);
  uint64_t v4 = *(void *)(*(void *)v1 + 80LL);
  uint64_t v5 = *(void *)(*(void *)v1 + 88LL);
  *(void *)(*(void *)v1 + 112LL) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0) {
    id v6 = sub_100464724;
  }
  else {
    id v6 = sub_1004645D4;
  }
  return swift_task_switch(v6, 0LL, 0LL);
}

uint64_t sub_1004645D4()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(*(void *)(v0 + 56) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
  char v4 = sub_10034E9D8(*(void *)(v0 + 64));
  sub_10019A6C4(v2, v0 + 16);
  sub_1003F0DB4(v4);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t ObjectType = swift_getObjectType(v5);
  (*(void (**)(uint64_t, uint64_t))(v8 + 56))(ObjectType, v8);
  uint64_t v10 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_transportLock);
  uint64_t v11 = (void *)swift_task_alloc(48LL);
  v11[2] = v6;
  void v11[3] = v8;
  v11[4] = v0 + 16;
  v11[5] = v3;
  uint64_t v12 = swift_task_alloc(32LL);
  *(void *)(v12 + swift_weakDestroy(v0 + 16) = sub_1002DABCC;
  *(void *)(v12 + 24) = v11;
  os_unfair_lock_lock(v10 + 4);
  sub_1002737FC(v13, *(uint64_t (**)(void))(v12 + 16));
  if (v1)
  {
    os_unfair_lock_unlock(v10 + 4);
    return swift_task_dealloc(v12);
  }

  else
  {
    uint64_t v15 = *(void *)(v0 + 96);
    os_unfair_lock_unlock(v10 + 4);
    swift_unknownObjectRelease(v6);
    swift_task_dealloc(v12);
    swift_task_dealloc(v11);
    sub_100187100(v0 + 16, &qword_100654080);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_100464724()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100464758(uint64_t a1, const char *a2)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v2
                                         + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices);
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices + 8);
  swift_retain(v5);
  uint64_t v7 = v6(a1);
  swift_release(v5);
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v8, (uint64_t)qword_100656748);
  uint64_t v9 = swift_bridgeObjectRetain_n(v7, 2LL);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = swift_slowAlloc(32LL, -1LL);
    uint64_t v22 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v14 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
    unint64_t v15 = sub_10023F574();
    uint64_t v16 = swift_bridgeObjectRetain(v7);
    uint64_t v17 = Set.description.getter(v16, v14, v15);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease(v7);
    uint64_t v21 = sub_10018CDB4(v17, v19, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v12 + 4, v12 + 12);
    swift_bridgeObjectRelease_n(v7, 2LL);
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, a2, v12, 0xCu);
    swift_arrayDestroy(v13, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(v7, 2LL);
  }

  return v7;
}

void sub_10046497C(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v71 = a4;
  uint64_t v73 = a1;
  uint64_t v74 = a2;
  uint64_t v7 = type metadata accessor for UUID(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = sub_100186DE4(v14, (uint64_t)qword_100656748);
  swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v72 = v15;
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter(v17);
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v69 = v9;
  unint64_t v70 = v13;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc(22LL, -1LL);
    uint64_t v21 = swift_slowAlloc(64LL, -1LL);
    uint64_t v68 = v7;
    uint64_t v66 = v21;
    v80[0] = v21;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v67 = v8;
    uint64_t v22 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    id v23 = (id)SFAuthenticationTypeToString(v73);
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    os_log_type_t v25 = v5;
    unint64_t v27 = v26;

    uint64_t v10 = v22;
    *(void *)&__int128 v77 = sub_10018CDB4(v24, v27, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, (char *)&v77 + 8, v20 + 4, v20 + 12);
    uint64_t v28 = (const char *)v27;
    uint64_t v5 = v25;
    *(void *)&double v29 = swift_bridgeObjectRelease(v28).n128_u64[0];
    *(_WORD *)(v20 + 12) = 2080;
    swift_bridgeObjectRetain(a3, v29);
    *(void *)&__int128 v77 = sub_10018CDB4(v74, (unint64_t)a3, v80);
    uint64_t v8 = v67;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, (char *)&v77 + 8, v20 + 14, v20 + 22);
    swift_bridgeObjectRelease_n(a3, 3LL);
    _os_log_impl( (void *)&_mh_execute_header,  v17,  v18,  "Asked to check canAuthenticate %s for device: %s",  (uint8_t *)v20,  0x16u);
    uint64_t v30 = v66;
    swift_arrayDestroy(v66, 2LL, (char *)&type metadata for Any + 8);
    uint64_t v7 = v68;
    swift_slowDealloc(v30, -1LL, -1LL);
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(a3, 2LL);
  }

  id v31 = [(id)objc_opt_self(SDAutoUnlockTransport) sharedTransport];
  if (v31)
  {
    uint64_t v32 = v31;
    NSString v33 = String._bridgeToObjectiveC()();
    id v34 = [v32 idsDeviceForUniqueID:v33];

    if (v34)
    {
      uint64_t v35 = sub_10034EC60(v73);
      if ((unint64_t)(v35 - 9) <= 5)
      {
        uint64_t v37 = v35;
        char v38 = sub_100407724(3LL, v36);
        if (v38 != 2 && (v38 & 1) == 0)
        {
          uint64_t v78 = sub_100183168(0LL, (unint64_t *)&qword_10064D810, &OBJC_CLASS___IDSDevice_ptr);
          uint64_t v79 = &off_1005E0BD0;
          uint64_t v76 = 0LL;
          *(void *)&__int128 v77 = v34;
          memset(v75, 0, sizeof(v75));
          id v39 = v34;
          uint64_t v40 = v71;
          sub_100462B08(v71, (uint64_t)&v77, 14LL, 0, (uint64_t)v75, (uint64_t)v80);
          sub_100187100((uint64_t)v75, &qword_1006569F8);
          sub_10018709C(&v77);
          uint64_t v41 = type metadata accessor for TaskPriority(0LL);
          uint64_t v42 = (uint64_t)v70;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56LL))(v70, 1LL, 1LL, v41);
          sub_10019A6C4((uint64_t)v80, (uint64_t)&v77);
          (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v40, v7);
          uint64_t v43 = *(unsigned __int8 *)(v8 + 80);
          uint64_t v44 = (v43 + 88) & ~v43;
          uint64_t v45 = (char *)swift_allocObject(&unk_1005E3548, v44 + v69, v43 | 7);
          *((void *)v45 + 2) = 0LL;
          *((void *)v45 + 3) = 0LL;
          sub_1001CE0D0(&v77, (uint64_t)(v45 + 32));
          *((void *)v45 + 9) = v37;
          *((void *)v45 + 10) = v5;
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v45[v44], v10, v7);
          uint64_t v46 = v5;
          uint64_t v47 = sub_1001B37E8(v42, (uint64_t)&unk_100656C00, (uint64_t)v45);
          swift_release(v47);

          sub_10018709C(v80);
          return;
        }
      }

      id v48 = sub_100487C98(1LL, 0LL, 0xE000000000000000LL);
      BOOL v49 = (os_log_s *)Logger.logObject.getter(v48);
      os_log_type_t v50 = static os_log_type_t.error.getter(v49);
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v51 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v49,  v50,  "canAuthenticate is only applicable for Lock device",  v51,  2u);
        swift_slowDealloc(v51, -1LL, -1LL);
      }

      uint64_t Strong = swift_unknownObjectWeakLoadStrong( &v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate],  v52);
      if (Strong)
      {
        BOOL v54 = (void *)Strong;
        v55.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        [v54 manager:v5 didFailToEnableDeviceFor:v55.super.isa error:v48];

        uint64_t v56 = v54;
LABEL_21:
        swift_unknownObjectRelease(v56);

        return;
      }
    }

    else
    {
      swift_bridgeObjectRetain_n(a3, 2LL);
      __n128 v58 = (os_log_s *)Logger.logObject.getter(v57);
      uint64_t v59 = static os_log_type_t.error.getter(v58);
      if (os_log_type_enabled(v58, (os_log_type_t)v59))
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v61 = swift_slowAlloc(32LL, -1LL);
        v80[0] = v61;
        *(_DWORD *)uint64_t v60 = 136315138;
        swift_bridgeObjectRetain(a3);
        *(void *)&__int128 v77 = sub_10018CDB4(v74, (unint64_t)a3, v80);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, (char *)&v77 + 8, v60 + 4, v60 + 12);
        swift_bridgeObjectRelease_n(a3, 3LL);
        _os_log_impl( (void *)&_mh_execute_header,  v58,  (os_log_type_t)v59,  "IDS device not found for SFAutoUnlock device: %s. Is the device in the same iCloud account?",  v60,  0xCu);
        swift_arrayDestroy(v61, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v61, -1LL, -1LL);
        swift_slowDealloc(v60, -1LL, -1LL);
      }

      else
      {
        swift_bridgeObjectRelease_n(a3, 2LL);
      }

      id v48 = sub_100487C98(1LL, 0LL, 0xE000000000000000LL);
      uint64_t v63 = swift_unknownObjectWeakLoadStrong( &v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate],  v62);
      if (v63)
      {
        uint64_t v64 = (void *)v63;
        v55.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        [v64 manager:v5 didFailToEnableDeviceFor:v55.super.isa error:v48];
        uint64_t v56 = v64;
        goto LABEL_21;
      }
    }
  }

  else
  {
    __break(1u);
  }

uint64_t sub_100465070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  return swift_task_switch(sub_10046508C, 0LL, 0LL);
}

uint64_t sub_10046508C()
{
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0LL;
  *(_OWORD *)(v0 + swift_weakDestroy(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc(dword_10064FE74);
  *(void *)(v0 + 88) = v1;
  void *v1 = v0;
  v1[1] = sub_1004650F8;
  return sub_100344650(v0 + 16);
}

uint64_t sub_1004650F8()
{
  uint64_t v1 = *(void *)v0 + 16LL;
  swift_task_dealloc(*(void *)(*(void *)v0 + 88LL));
  sub_100187100(v1, (uint64_t *)&unk_100650068);
  return swift_task_switch(sub_100465160, 0LL, 0LL);
}

uint64_t sub_100465160()
{
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100656748);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Started canAuthenticate/key check session", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  uint64_t v6 = *(void *)(v0 + 64);

  id v7 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  [v7 postNotificationName:@"SDAuthenticationSessionStarted" object:0];

  if (v6 != 4)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v0 + 72) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate,  v8);
    if (Strong)
    {
      uint64_t v10 = (void *)Strong;
      uint64_t v11 = *(void *)(v0 + 72);
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v10 manager:v11 didStartAuthenticationFor:isa];
      swift_unknownObjectRelease(v10);
    }
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004652E4( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v11 = type metadata accessor for UUID(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
  uint64_t v17 = v16;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(a5);
  id v18 = a1;
  a6(a3, v15, v17, v14);
  swift_bridgeObjectRelease(v17);

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void sub_1004653C0(uint64_t a1, char *a2, void *a3)
{
  void (*v71)(__int128 *__return_ptr, uint64_t, const char *);
  uint64_t v72;
  os_log_s *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  const char *v77;
  BOOL v78;
  uint64_t v79;
  char *v80;
  char v81;
  uint64_t (*v82)(char *, uint64_t);
  uint64_t v83;
  const char *v84;
  int v85;
  int v86;
  os_log_s *v87;
  os_log_type_t v88;
  uint8_t *v89;
  id v90;
  NSString v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  id v95;
  uint64_t v96;
  os_log_s *v97;
  os_log_type_t v98;
  uint8_t *v99;
  char *v100;
  char v101;
  uint64_t v102;
  const char *v103;
  int v104;
  int v105;
  os_log_s *v106;
  os_log_type_t v107;
  uint8_t *v108;
  os_log_s *v109;
  os_log_type_t v110;
  uint8_t *v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  const char *v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  id v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  unsigned __int8 v135;
  uint64_t v136;
  os_log_s *v137;
  os_log_type_t v138;
  uint8_t *v139;
  uint64_t v140;
  id v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  id v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  id v163;
  void (*v164)(char *, char *, uint64_t);
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  __int128 v187;
  _UNKNOWN **v188;
  uint64_t v189[2];
  uint64_t v190;
  uint64_t v191;
  os_log_type_t v4 = v3;
  v181 = a3;
  int64_t v183 = a1;
  uint64_t ObjectType = swift_getObjectType(v3);
  uint64_t v7 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v7);
  uint64_t v172 = (uint64_t)&v160 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098(&qword_100656BC0);
  int64_t v174 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  int64_t v170 = (char *)&v160 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int64_t v167 = v11;
  __chkstk_darwin(v10);
  uint64_t v171 = (char *)&v160 - v12;
  int64_t v177 = type metadata accessor for SFPlatform(0LL);
  uint64_t v173 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v176 = (char *)&v160 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v182 = type metadata accessor for UUID(0LL);
  int64_t v180 = *(void *)(v182 - 8);
  uint64_t v14 = __chkstk_darwin(v182);
  BOOL v169 = (char *)&v160 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v166 = v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v160 - v16;
  uint64_t v18 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (uint64_t *)((char *)&v160 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v22 = *(void **)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  char v24 = _dispatchPreconditionTest(_:)(v21);
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if ((v24 & 1) != 0)
  {
    uint64_t v163 = v23;
    uint64_t v165 = ObjectType;
    int64_t v168 = v9;
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  uint64_t v25 = type metadata accessor for Logger(0LL);
  uint64_t v26 = sub_100186DE4(v25, (uint64_t)qword_100656748);
  uint64_t v27 = v180;
  uint64_t v28 = v182;
  v164 = *(void (**)(char *, char *, uint64_t))(v180 + 16);
  v164(v17, a2, v182);
  id v29 = v181;
  id v30 = v181;
  uint64_t v179 = v26;
  id v31 = (os_log_s *)Logger.logObject.getter(v30);
  os_log_type_t v32 = static os_log_type_t.default.getter(v31);
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v178 = v30;
    uint64_t v175 = a2;
    uint64_t v162 = v4;
    uint64_t v33 = swift_slowAlloc(32LL, -1LL);
    id v34 = (void *)swift_slowAlloc(8LL, -1LL);
    v161 = swift_slowAlloc(64LL, -1LL);
    v189[0] = v161;
    *(_DWORD *)uint64_t v33 = 136315650;
    id v35 = (id)SFAuthenticationTypeToString(v183);
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    char v38 = v37;

    *(void *)&int64_t v186 = sub_10018CDB4(v36, (unint64_t)v38, v189);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v186, (char *)&v186 + 8, v33 + 4, v33 + 12);
    swift_bridgeObjectRelease(v38);
    *(_WORD *)(v33 + 12) = 2080;
    uint64_t v39 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter(v28, v39);
    uint64_t v42 = (const char *)v41;
    *(void *)&int64_t v186 = sub_10018CDB4(v40, v41, v189);
    id v29 = v181;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v186, (char *)&v186 + 8, v33 + 14, v33 + 22);
    __n128 v43 = swift_bridgeObjectRelease(v42);
    (*(void (**)(char *, uint64_t, __n128))(v180 + 8))(v17, v28, v43);
    *(_WORD *)(v33 + 22) = 2112;
    if (v29)
    {
      id v30 = v178;
      *(void *)&int64_t v186 = v178;
      id v44 = v178;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v186, (char *)&v186 + 8, v33 + 24, v33 + 32);
    }

    else
    {
      *(void *)&int64_t v186 = 0LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v186, (char *)&v186 + 8, v33 + 24, v33 + 32);
      id v30 = v178;
    }

    *id v34 = v29;

    _os_log_impl( (void *)&_mh_execute_header,  v31,  v32,  "Asked to authenticate %s sessionID: %s with options %@",  (uint8_t *)v33,  0x20u);
    uint64_t v45 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v34, 1LL, v45);
    swift_slowDealloc(v34, -1LL, -1LL);
    uint64_t v46 = v161;
    swift_arrayDestroy(v161, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1LL, -1LL);
    swift_slowDealloc(v33, -1LL, -1LL);

    os_log_type_t v4 = v162;
    a2 = v175;
    uint64_t v28 = v182;
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v28);
  }

  unint64_t v47 = sub_10034EC60(v183);
  Swift::UInt v48 = v47;
  if (v47 <= 9 && ((1LL << v47) & 0x228) != 0)
  {
    BOOL v49 = (os_log_s *)Logger.logObject.getter(v47);
    os_log_type_t v50 = static os_log_type_t.error.getter(v49);
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v52 = swift_slowAlloc(32LL, -1LL);
      v189[0] = v52;
      *(_DWORD *)uint64_t v51 = 136315138;
      uint64_t v182 = (uint64_t)(v51 + 4);
      id v53 = (id)SFAuthenticationTypeToString(v183);
      uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
      uint64_t v56 = v55;

      *(void *)&int64_t v186 = sub_10018CDB4(v54, (unint64_t)v56, v189);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v186, (char *)&v186 + 8, v182, v51 + 12);
      swift_bridgeObjectRelease(v56);
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Type %s can only be used in enable SPI", v51, 0xCu);
      swift_arrayDestroy(v52, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1LL, -1LL);
      swift_slowDealloc(v51, -1LL, -1LL);
    }

    uint64_t v57 = 1LL;
LABEL_14:
    uint64_t v58 = 0LL;
    uint64_t v59 = 0xE000000000000000LL;
LABEL_15:
    id v60 = sub_100487C98(v57, v58, v59);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong( &v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate],  v61);
    if (Strong)
    {
      uint64_t v63 = (void *)Strong;
      v64.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v63 manager:v4 didFailAuthenticationFor:v64.super.isa error:v60];
      swift_unknownObjectRelease(v63);

LABEL_17:
      return;
    }

    return;
  }

  if (v29)
  {
    id v65 = [v30 idsDeviceID];
    if (v65)
    {
      uint64_t v66 = v65;
      uint64_t v178 = v30;
      uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
      uint64_t v69 = v68;

      uint64_t v71 = *(void (**)(__int128 *__return_ptr, uint64_t, const char *))&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID];
      uint64_t v70 = *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID + 8];
      swift_retain();
      v71(&v186, v67, v69);
      swift_release(v70);
      if (!*((void *)&v187 + 1))
      {
        swift_bridgeObjectRelease(v69);
        sub_100187100((uint64_t)&v186, &qword_100654080);
        uint64_t v58 = 0xD000000000000032LL;
        uint64_t v59 = 0x8000000100511370LL;
        uint64_t v57 = 1LL;
        goto LABEL_15;
      }

      sub_1001CE0D0(&v186, (uint64_t)v189);
      swift_bridgeObjectRetain(v69);
      uint64_t v73 = (os_log_s *)Logger.logObject.getter(v72);
      uint64_t v74 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v175 = a2;
        uint64_t v75 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v76 = swift_slowAlloc(32LL, -1LL);
        *(void *)&int64_t v186 = v76;
        *(_DWORD *)uint64_t v75 = 136315138;
        swift_bridgeObjectRetain(v69);
        uint64_t v184 = sub_10018CDB4(v67, (unint64_t)v69, (uint64_t *)&v186);
        a2 = v175;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, &v185, v75 + 4, v75 + 12);
        swift_bridgeObjectRelease_n(v69, 3LL);
        _os_log_impl( (void *)&_mh_execute_header,  v73,  v74,  "DeviceID was specified in options, attempting to authenticate with device: %s",  v75,  0xCu);
        swift_arrayDestroy(v76, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v76, -1LL, -1LL);
        swift_slowDealloc(v75, -1LL, -1LL);
      }

      else
      {
        swift_bridgeObjectRelease_n(v69, 2LL);
      }

      id v30 = v178;
      goto LABEL_38;
    }
  }

  __int128 v77 = (const char *)sub_10034F210(v48);
  uint64_t v78 = sub_1003A0674(1uLL, (uint64_t)v77);
  swift_bridgeObjectRelease(v77);
  if (v78)
  {
    sub_10045886C((uint64_t)&v186);
    if (!*((void *)&v187 + 1))
    {
      unint64_t v96 = sub_100187100((uint64_t)&v186, &qword_100654080);
      uint64_t v97 = (os_log_s *)Logger.logObject.getter(v96);
      uint64_t v98 = static os_log_type_t.error.getter(v97);
      if (os_log_type_enabled(v97, v98))
      {
        uint64_t v99 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v99 = 0;
        _os_log_impl((void *)&_mh_execute_header, v97, v98, "No active watch", v99, 2u);
        swift_slowDealloc(v99, -1LL, -1LL);
      }

      uint64_t v57 = 18LL;
      goto LABEL_14;
    }

    sub_1001CE0D0(&v186, (uint64_t)v189);
    if (!v29)
    {
      uint64_t v188 = 0LL;
      int64_t v186 = 0u;
      uint64_t v187 = 0u;
LABEL_39:
      uint64_t v92 = v190;
      uint64_t v93 = v191;
      uint64_t v94 = sub_10019A708(v189, v190);
      uint64_t v95 = v30;
      sub_100485374(v48, (uint64_t)v94, a2, (uint64_t)&v186, v4, v92, v93);
      sub_10018709C(v189);
      sub_100187100((uint64_t)&v186, &qword_1006569F8);
      return;
    }

uint64_t sub_100466578( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[28] = a7;
  v8[29] = a8;
  v8[26] = a5;
  v8[27] = a6;
  v8[25] = a4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags(0LL);
  v8[30] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[31] = v10;
  v8[32] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DispatchQoS(0LL);
  v8[33] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v8[34] = v12;
  v8[35] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for UUID(0LL);
  v8[36] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v8[37] = v14;
  uint64_t v15 = *(void *)(v14 + 64);
  v8[38] = v15;
  v8[39] = swift_task_alloc((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_100183098(&qword_100656BE8);
  v8[40] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v8[41] = v17;
  v8[42] = swift_task_alloc((*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100466660, 0LL, 0LL);
}

uint64_t sub_100466660()
{
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100656748);
  v0[43] = v2;
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Beginning scanning for enabled iPhones", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  uint64_t v6 = v0[27];

  uint64_t v7 = sub_100183098(&qword_100656BC0);
  AsyncThrowingStream.makeAsyncIterator()(v7);
  uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone;
  v0[44] = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone;
  swift_beginAccess(v6 + v8, v0 + 18, 0LL, 0LL);
  uint64_t v9 = (void *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  v0[45] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1004667D8;
  return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 23, 0LL, 0LL, v0[40], v0 + 21);
}

uint64_t sub_1004667D8()
{
  if (v0) {
    uint64_t v2 = sub_100467280;
  }
  else {
    uint64_t v2 = sub_10046683C;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

id sub_10046683C()
{
  uint64_t v1 = *(void **)(v0 + 184);
  if (!v1)
  {
    uint64_t v8 = *(void *)(v0 + 216);
    (*(void (**)(void, void))(*(void *)(v0 + 328) + 8LL))(*(void *)(v0 + 336), *(void *)(v0 + 320));
    id v9 = sub_100487C98(20LL, 0LL, 0xE000000000000000LL);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong( v8 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate,  v10);
    if (Strong)
    {
      uint64_t v12 = (void *)Strong;
      uint64_t v13 = *(void *)(v0 + 216);
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v12 manager:v13 didFailAuthenticationFor:isa error:v9];

      swift_unknownObjectRelease(v12);
    }

    else
    {
    }

uint64_t sub_10046721C()
{
  if (v0) {
    id v2 = sub_100467280;
  }
  else {
    id v2 = sub_10046683C;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_100467280()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 256);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 328) + 8LL))(v1, *(void *)(v0 + 320));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1004672F8(void *a1, void *a2, unint64_t a3, char *a4, void *a5)
{
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v10, (uint64_t)qword_100656748);
  id v11 = a1;
  id v12 = a2;
  id v13 = v11;
  uint64_t v14 = (char *)v12;
  uint64_t v15 = (void *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.default.getter(v15);
  if (!os_log_type_enabled((os_log_t)v15, v16))
  {

    if (a5) {
      goto LABEL_5;
    }
LABEL_7:
    id v30 = 0LL;
    __int128 v28 = 0u;
    __int128 v29 = 0u;
    goto LABEL_8;
  }

  uint64_t v17 = swift_slowAlloc(22LL, -1LL);
  uint64_t v26 = a5;
  id v18 = (void *)swift_slowAlloc(16LL, -1LL);
  *(_DWORD *)uint64_t v17 = 138412546;
  *(void *)&__int128 v28 = v13;
  unint64_t v27 = a3;
  id v19 = v13;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, (char *)&v28 + 8, v17 + 4, v17 + 12);
  *id v18 = v13;

  *(_WORD *)(v17 + 12) = 2112;
  id v20 = *(void **)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *(void *)&__int128 v28 = v20;
  id v21 = v20;
  a3 = v27;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, (char *)&v28 + 8, v17 + 14, v17 + 22);
  v18[1] = v20;

  _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v15,  v16,  "Beginning authentication with %@ on queue %@",  (uint8_t *)v17,  0x16u);
  uint64_t v22 = sub_100183098(&qword_1006454E0);
  swift_arrayDestroy(v18, 2LL, v22);
  id v23 = v18;
  a5 = v26;
  swift_slowDealloc(v23, -1LL, -1LL);
  swift_slowDealloc(v17, -1LL, -1LL);

  if (!v26) {
    goto LABEL_7;
  }
LABEL_5:
  *((void *)&v29 + 1) = sub_100183168(0LL, &qword_1006569F0, &OBJC_CLASS___SFAuthenticationOptions_ptr);
  id v30 = &off_1005DC590;
  *(void *)&__int128 v28 = a5;
LABEL_8:
  id v24 = v13;
  id v25 = a5;
  sub_1004842AC(a3, v24, a4, (uint64_t)&v28, v14);
  sub_100187100((uint64_t)&v28, &qword_1006569F8);
}

void sub_10046763C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  id v9 = (char *)&v41 - v8;
  uint64_t v10 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (uint64_t *)((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v14 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *id v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  uint64_t v45 = v1;
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = sub_100186DE4(v16, (uint64_t)qword_100656748);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, a1, v3);
  uint64_t v44 = v17;
  id v19 = (os_log_s *)Logger.logObject.getter(v18);
  uint64_t v20 = v4;
  os_log_type_t v21 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v43 = swift_slowAlloc(32LL, -1LL);
    *(void *)&__int128 v50 = v43;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v42 = v22 + 4;
    uint64_t v23 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter(v3, v23);
    uint64_t v26 = (const char *)v25;
    *(void *)&__int128 v47 = sub_10018CDB4(v24, v25, (uint64_t *)&v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, (char *)&v47 + 8, v42, v22 + 12);
    __n128 v27 = swift_bridgeObjectRelease(v26);
    __int128 v28 = *(void (**)(char *, uint64_t, __n128))(v20 + 8);
    v28(v9, v3, v27);
    _os_log_impl((void *)&_mh_execute_header, v19, v21, "Asked to cancel %s", v22, 0xCu);
    uint64_t v29 = v43;
    swift_arrayDestroy(v43, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1LL, -1LL);
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  else
  {
    __int128 v28 = *(void (**)(char *, uint64_t, __n128))(v20 + 8);
    ((void (*)(char *, uint64_t))v28)(v9, v3);
  }

  id v30 = (const char **)(v45 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions);
  *(void *)&double v31 = swift_beginAccess( v45 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions,  v46,  0LL,  0LL).n128_u64[0];
  uint64_t v32 = *v30;
  uint64_t v33 = *((void *)*v30 + 2);
  if (v33)
  {
    uint64_t v34 = (uint64_t)(v32 + 32);
    swift_bridgeObjectRetain(*v30, v31);
    while (1)
    {
      sub_10019A6C4(v34, (uint64_t)&v50);
      uint64_t v36 = v51;
      uint64_t v35 = v52;
      sub_10019A708(&v50, v51);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v35 + 8) + 8LL) + 32LL))(v36);
      LOBYTE(v35) = static UUID.== infix(_:_:)(v7, a1);
      ((void (*)(char *, uint64_t))v28)(v7, v3);
      if ((v35 & 1) != 0) {
        break;
      }
      sub_10018709C(&v50);
      v34 += 40LL;
      if (!--v33) {
        goto LABEL_12;
      }
    }

    sub_1001CE0D0(&v50, (uint64_t)&v47);
  }

  else
  {
    swift_bridgeObjectRetain(*v30, v31);
LABEL_12:
    uint64_t v49 = 0LL;
    __int128 v47 = 0u;
    __int128 v48 = 0u;
  }

  swift_bridgeObjectRelease(v32);
  if (*((void *)&v48 + 1))
  {
    sub_1001CE0D0(&v47, (uint64_t)&v50);
    sub_10019A708(&v50, v51);
    sub_1003346E4();
    sub_10018709C(&v50);
  }

  else
  {
    uint64_t v37 = sub_100187100((uint64_t)&v47, &qword_100656B48);
    uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v39 = static os_log_type_t.default.getter(v38);
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Could not find session to cancel", v40, 2u);
      swift_slowDealloc(v40, -1LL, -1LL);
    }
  }

uint64_t sub_100467A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  return swift_task_switch(sub_100467AB0, 0LL, 0LL);
}

uint64_t sub_100467AB0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_approveNearbyInfoAdvertiser;
  *(void *)(v0 + 32) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_approveNearbyInfoAdvertiser;
  uint64_t v3 = *(void *)(v1 + v2);
  *(void *)(v0 + 40) = v3;
  if (!v3) {
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  uint64_t v4 = dword_1006488FC;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc(v4);
  *(void *)(v0 + 48) = v5;
  void *v5 = v0;
  v5[1] = sub_100467B30;
  return sub_10021BC70();
}

uint64_t sub_100467B30()
{
  uint64_t v2 = *(void *)(*v1 + 48);
  uint64_t v3 = *v1;
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    return swift_task_switch(sub_100467BA4, 0LL, 0LL);
  }
  swift_release(*(void *)(v3 + 40));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100467BA4()
{
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_100656748);
  swift_errorRetain(v1);
  uint64_t v3 = swift_errorRetain(v1);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.error.getter(v4);
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 56);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    id v9 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain(v7);
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v8 + 4, v8 + 12);
    *id v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl( (void *)&_mh_execute_header,  v4,  v5,  "Could not start nearbyInfo advertiser for approve, got error %@",  v8,  0xCu);
    uint64_t v11 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v9, 1LL, v11);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 56));
    swift_errorRelease(v7);
  }

  uint64_t v12 = *(void *)(*(void *)(v0 + 24) + *(void *)(v0 + 32));
  uint64_t v13 = *(void *)(v0 + 56);
  if (v12)
  {
    swift_retain();
    sub_10021C13C();
    swift_errorRelease(v13);
    swift_release(v12);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 56));
  }

  uint64_t v15 = *(void *)(v0 + 24);
  uint64_t v14 = *(void *)(v0 + 32);
  uint64_t v16 = *(void *)(v15 + v14);
  *(void *)(v15 + v14) = 0LL;
  swift_release(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100467DE0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v101 = a2;
  uint64_t v102 = a4;
  uint64_t v100 = a3;
  uint64_t v6 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v6);
  uint64_t v97 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for UUID(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v90 - v13;
  uint64_t v15 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char **)((char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v99 = v4;
  id v19 = *(void **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  id v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)(v18);
  (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) != 0)
  {
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = sub_100186DE4(v21, (uint64_t)qword_100656748);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v23(v14, v102, v8);
  unint64_t v24 = v101;
  sub_1001A4C04(a1, v101);
  uint64_t v25 = v100;
  swift_errorRetain(v100);
  sub_1001A4C04(a1, v24);
  uint64_t v26 = swift_errorRetain(v25);
  __n128 v27 = (os_log_s *)Logger.logObject.getter(v26);
  int v28 = static os_log_type_t.default.getter(v27);
  if (os_log_type_enabled(v27, (os_log_type_t)v28))
  {
    int v91 = v28;
    os_log_t v94 = v27;
    uint64_t v95 = v23;
    uint64_t v96 = v22;
    uint64_t v90 = v12;
    uint64_t v29 = v8;
    uint64_t v30 = swift_slowAlloc(28LL, -1LL);
    uint64_t v92 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    uint64_t v93 = swift_slowAlloc(32LL, -1LL);
    v108[0] = v93;
    *(_DWORD *)uint64_t v30 = 136315650;
    uint64_t v31 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter(v29, v31);
    uint64_t v34 = (const char *)v33;
    *(void *)&v106[0] = sub_10018CDB4(v32, v33, v108);
    unint64_t v35 = v101;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 8, v30 + 4, v30 + 12);
    __n128 v36 = swift_bridgeObjectRelease(v34);
    uint64_t v37 = *(void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v38 = v29;
    uint64_t v98 = v37;
    ((void (*)(char *, uint64_t, __n128))v37)(v14, v29, v36);
    *(_WORD *)(v30 + 12) = 1024;
    sub_100189B0C(a1, v35);
    LODWORD(v106[0]) = v35 >> 60 != 15;
    uint64_t v25 = v100;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 4, v30 + 14, v30 + 18);
    sub_100189B0C(a1, v35);
    *(_WORD *)(v30 + 18) = 2112;
    if (v25)
    {
      swift_errorRetain(v25);
      uint64_t v39 = _swift_stdlib_bridgeErrorToNSError(v25);
      *(void *)&v106[0] = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 8, v30 + 20, v30 + 28);
    }

    else
    {
      *(void *)&v106[0] = 0LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 8, v30 + 20, v30 + 28);
      uint64_t v39 = 0LL;
    }

    uint64_t v12 = v90;
    uint64_t v42 = v92;
    *uint64_t v92 = v39;
    swift_errorRelease(v25);
    swift_errorRelease(v25);
    os_log_t v43 = v94;
    _os_log_impl( (void *)&_mh_execute_header,  v94,  (os_log_type_t)v91,  "Got approval result for session %s: User approved - %{BOOL}d, error - %@",  (uint8_t *)v30,  0x1Cu);
    uint64_t v44 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v42, 1LL, v44);
    swift_slowDealloc(v42, -1LL, -1LL);
    uint64_t v45 = v93;
    swift_arrayDestroy(v93, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1LL, -1LL);
    swift_slowDealloc(v30, -1LL, -1LL);

    uint64_t v8 = v38;
    uint64_t v41 = v99;
    uint64_t v23 = v95;
  }

  else
  {
    unint64_t v40 = v101;
    sub_100189B0C(a1, v101);
    uint64_t v98 = *(void (**)(char *, uint64_t))(v9 + 8);
    v98(v14, v8);
    sub_100189B0C(a1, v40);
    swift_errorRelease(v25);
    swift_errorRelease(v25);

    uint64_t v41 = v99;
  }

  uint64_t v46 = (uint64_t *)(v41 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
  swift_beginAccess(v41 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions, v107, 32LL, 0LL);
  uint64_t v47 = *v46;
  if (*(void *)(*v46 + 16) && (unint64_t v48 = sub_1003AD618(v102), (v49 & 1) != 0))
  {
    sub_10019A6C4(*(void *)(v47 + 56) + 40 * v48, (uint64_t)v106);
    sub_1001CE0D0(v106, (uint64_t)v108);
    swift_endAccess(v107);
    int v103 = 0;
    char v104 = 1;
    if (v25)
    {
      type metadata accessor for Code(0LL);
      uint64_t v51 = v50;
      *(void *)&v106[0] = -9LL;
      swift_errorRetain(v25);
      uint64_t v52 = sub_100183F14( &qword_100644D40,  (uint64_t (*)(uint64_t))type metadata accessor for Code,  (uint64_t)&unk_1004CCC38);
      if ((static _ErrorCodeProtocol.~= infix(_:_:)(v106, v25, v51, v52) & 1) != 0) {
        goto LABEL_15;
      }
      *(void *)&v106[0] = -4LL;
      swift_errorRetain(v25);
      char v53 = static _ErrorCodeProtocol.~= infix(_:_:)(v106, v25, v51, v52);
      swift_errorRelease(v25);
      if ((v53 & 1) != 0
        || (*(void *)&v106[0] = -2LL,
            swift_errorRetain(v25),
            char v54 = static _ErrorCodeProtocol.~= infix(_:_:)(v106, v25, v51, v52),
            swift_errorRelease(v25),
            (v54 & 1) != 0))
      {
LABEL_15:
        uint64_t v55 = a1;
        int v56 = 14;
      }

      else
      {
        *(void *)&v106[0] = -1LL;
        swift_errorRetain(v25);
        char v89 = static _ErrorCodeProtocol.~= infix(_:_:)(v106, v25, v51, v52);
        swift_errorRelease(v25);
        uint64_t v55 = a1;
        if ((v89 & 1) != 0) {
          int v56 = 32;
        }
        else {
          int v56 = 31;
        }
      }

      int v103 = v56;
      char v104 = 0;
      swift_errorRetain(v25);
      uint64_t v57 = swift_errorRetain(v25);
      uint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
      os_log_type_t v59 = static os_log_type_t.default.getter(v58);
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = swift_slowAlloc(22LL, -1LL);
        uint64_t v61 = v25;
        uint64_t v62 = (uint64_t *)swift_slowAlloc(16LL, -1LL);
        *(_DWORD *)uint64_t v60 = 138412546;
        swift_errorRetain(v61);
        uint64_t v63 = _swift_stdlib_bridgeErrorToNSError(v61);
        *(void *)&v106[0] = v63;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 8, v60 + 4, v60 + 12);
        *uint64_t v62 = v63;
        swift_errorRelease(v61);
        swift_errorRelease(v61);
        *(_WORD *)(v60 + 12) = 2112;
        swift_beginAccess(&v103, v105, 0LL, 0LL);
        if ((v104 & 1) != 0)
        {
          *(void *)&v106[0] = 0LL;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 8, v60 + 14, v60 + 22);
          uint64_t v64 = 0LL;
        }

        else
        {
          int v75 = v103;
          type metadata accessor for SFAuthenticationError(0LL);
          uint64_t v77 = v76;
          uint64_t v78 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
          uint64_t v79 = swift_allocError(v77, v78, 0LL, 0LL);
          int *v80 = v75;
          uint64_t v64 = _swift_stdlib_bridgeErrorToNSError(v79);
          *(void *)&v106[0] = v64;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 8, v60 + 14, v60 + 22);
        }

        v62[1] = v64;
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "Sending received error %@ as %@", (uint8_t *)v60, 0x16u);
        uint64_t v81 = sub_100183098(&qword_1006454E0);
        swift_arrayDestroy(v62, 2LL, v81);
        swift_slowDealloc(v62, -1LL, -1LL);
        swift_slowDealloc(v60, -1LL, -1LL);

        swift_errorRelease(v100);
      }

      else
      {
        swift_errorRelease(v25);
        swift_errorRelease(v25);
        swift_errorRelease(v25);
      }

      a1 = v55;
    }

    swift_beginAccess(&v103, v107, 0LL, 0LL);
    char v82 = v104;
    if (v104) {
      int v83 = 0;
    }
    else {
      int v83 = v103;
    }
    uint64_t v84 = type metadata accessor for TaskPriority(0LL);
    uint64_t v85 = (uint64_t)v97;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56LL))(v97, 1LL, 1LL, v84);
    sub_10019A6C4((uint64_t)v108, (uint64_t)v106);
    uint64_t v86 = swift_allocObject(&unk_1005E3430, 96LL, 7LL);
    *(void *)(v86 + swift_weakDestroy(v0 + 16) = 0LL;
    *(void *)(v86 + 24) = 0LL;
    sub_1001CE0D0(v106, v86 + 32);
    unint64_t v87 = v101;
    *(void *)(v86 + 72) = a1;
    *(void *)(v86 + 80) = v87;
    *(_BYTE *)(v86 + 88) = v82 ^ 1;
    *(_DWORD *)(v86 + 92) = v83;
    sub_1001A4C04(a1, v87);
    sub_1001A4C04(a1, v87);
    uint64_t v88 = sub_1001B37E8(v85, (uint64_t)&unk_100656BA8, v86);
    swift_release(v88);
    sub_100189B0C(a1, v87);
    sub_10018709C(v108);
  }

  else
  {
    swift_endAccess(v107);
    uint64_t v65 = ((uint64_t (*)(char *, uint64_t, uint64_t))v23)(v12, v102, v8);
    uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
    os_log_type_t v67 = static os_log_type_t.error.getter(v66);
    if (os_log_type_enabled(v66, v67))
    {
      id v68 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v69 = swift_slowAlloc(32LL, -1LL);
      v108[0] = v69;
      *(_DWORD *)id v68 = 136315138;
      uint64_t v70 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter(v8, v70);
      uint64_t v73 = (const char *)v72;
      *(void *)&v106[0] = sub_10018CDB4(v71, v72, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 8, v68 + 4, v68 + 12);
      __n128 v74 = swift_bridgeObjectRelease(v73);
      ((void (*)(char *, uint64_t, __n128))v98)(v12, v8, v74);
      _os_log_impl( (void *)&_mh_execute_header,  v66,  v67,  "No session found for approval result sessionID %s, dropping report",  v68,  0xCu);
      swift_arrayDestroy(v69, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1LL, -1LL);
      swift_slowDealloc(v68, -1LL, -1LL);
    }

    else
    {
      v98(v12, v8);
    }
  }

uint64_t sub_1004688C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  return swift_task_switch(sub_1004688DC, 0LL, 0LL);
}

uint64_t sub_1004688DC()
{
  unint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 64);
  sub_10019A708(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24LL));
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v3;
  *(void *)(v0 + 40) = &type metadata for SDAuthenticationApproveResult;
  *(void *)(v0 + 48) = &off_1005D74F0;
  *(void *)(v0 + 24) = v2;
  *(_BYTE *)(v0 + 32) = v1 & 1;
  *(_DWORD *)(v0 + 36) = HIDWORD(v1);
  sub_1001A4C04(v3, v2);
  uint64_t v4 = (void *)swift_task_alloc(dword_10064FE74);
  *(void *)(v0 + 88) = v4;
  void *v4 = v0;
  v4[1] = sub_100468984;
  return sub_100344650(v0 + 16);
}

uint64_t sub_100468984()
{
  uint64_t v1 = *v0 + 16;
  uint64_t v3 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 88));
  sub_100187100(v1, (uint64_t *)&unk_100650068);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100468AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v3 = type metadata accessor for UUID(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v42 = v2;
  uint64_t v14 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  char v16 = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if ((v16 & 1) != 0)
  {
    uint64_t v41 = v7;
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  uint64_t v17 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v17, (uint64_t)qword_100656748);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v19 = v18(v9, v44, v3);
  id v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    unint64_t v40 = v18;
    uint64_t v24 = v23;
    v46[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v25 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter(v3, v25);
    int v28 = (const char *)v27;
    uint64_t v45 = sub_10018CDB4(v26, v27, v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46, v22 + 4, v22 + 12);
    __n128 v29 = swift_bridgeObjectRelease(v28);
    uint64_t v30 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
    v30(v9, v3, v29);
    _os_log_impl( (void *)&_mh_execute_header,  v20,  v21,  "Added observer for authenticationStateChanged with id: %s",  v22,  0xCu);
    swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v31 = v24;
    uint64_t v18 = v40;
    swift_slowDealloc(v31, -1LL, -1LL);
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  else
  {
    uint64_t v30 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
    ((void (*)(char *, uint64_t))v30)(v9, v3);
  }

  uint64_t v32 = (uint64_t)v41;
  v18(v41, v44, v3);
  unint64_t v33 = (uint64_t *)(v42 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers);
  swift_beginAccess( v42 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers,  v46,  33LL,  0LL);
  uint64_t v34 = v43;
  swift_unknownObjectRetain(v43);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v33);
  uint64_t v45 = *v33;
  *unint64_t v33 = 0x8000000000000000LL;
  sub_1003B4544(v34, v32, isUniquelyReferenced_nonNull_native);
  __n128 v36 = (const char *)*v33;
  *unint64_t v33 = v45;
  __n128 v37 = swift_bridgeObjectRelease(v36);
  v30((char *)v32, v3, v37);
  return swift_endAccess(v46);
}

uint64_t sub_100468EF8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)(v11);
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  uint64_t v14 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v14, (uint64_t)qword_100656748);
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  char v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v19 = swift_slowAlloc(32LL, -1LL);
    uint64_t v30 = a1;
    uint64_t v20 = v19;
    v32[0] = v19;
    uint64_t v29 = v2;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v21 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter(v4, v21);
    uint64_t v24 = (const char *)v23;
    uint64_t v31 = sub_10018CDB4(v22, v23, v32);
    uint64_t v2 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32, v18 + 4, v18 + 12);
    __n128 v25 = swift_bridgeObjectRelease(v24);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v25);
    _os_log_impl( (void *)&_mh_execute_header,  v16,  v17,  "Removed observer for authenticationStateChanged with id: %s",  v18,  0xCu);
    swift_arrayDestroy(v20, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v26 = v20;
    a1 = v30;
    swift_slowDealloc(v26, -1LL, -1LL);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  swift_beginAccess( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers,  v32,  33LL,  0LL);
  uint64_t v27 = sub_1001CAA84(a1);
  swift_endAccess(v32);
  return swift_unknownObjectRelease(v27);
}

uint64_t sub_1004691EC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v7 = type metadata accessor for UUID(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(a3);
  id v11 = a1;
  a4(v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10046928C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100183098(&qword_10064DA60);
  uint64_t v8 = __chkstk_darwin(v7);
  id v11 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (a1 - 9 >= 6)
  {
    if (a1 - 6 >= 2)
    {
      if (a1 != 2)
      {
        if (a1 <= 8)
        {
          if (((1LL << a1) & 0x18E) != 0)
          {
            unint64_t v23 = (const char **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions);
            *(void *)&double v24 = swift_beginAccess( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions,  v38,  0LL,  0LL).n128_u64[0];
            __n128 v25 = *v23;
            swift_bridgeObjectRetain(v25, v24);
            uint64_t v27 = (const char *)sub_1002DECC4(v26);
          }

          else
          {
            uint64_t v34 = (const char **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions);
            *(void *)&double v35 = swift_beginAccess( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions,  v38,  0LL,  0LL).n128_u64[0];
            __n128 v25 = *v34;
            swift_bridgeObjectRetain(v25, v35);
            uint64_t v27 = (const char *)sub_1002DECE8(v36);
          }

          int v28 = v27;
          *(void *)&double v29 = swift_bridgeObjectRelease(v25).n128_u64[0];
          uint64_t v30 = *((void *)v28 + 2);
          swift_bridgeObjectRelease(v28, v29);
          char v32 = v30 == 0;
          return v32 & 1;
        }

uint64_t sub_100469594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  return swift_task_switch(sub_1004695B0, 0LL, 0LL);
}

uint64_t sub_1004695B0()
{
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0LL;
  *(_OWORD *)(v0 + swift_weakDestroy(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc(dword_10064FE74);
  *(void *)(v0 + 88) = v1;
  void *v1 = v0;
  v1[1] = sub_10046961C;
  return sub_100344650(v0 + 16);
}

uint64_t sub_10046961C()
{
  uint64_t v1 = *(void *)v0 + 16LL;
  swift_task_dealloc(*(void *)(*(void *)v0 + 88LL));
  sub_100187100(v1, (uint64_t *)&unk_100650068);
  return swift_task_switch(sub_100469684, 0LL, 0LL);
}

uint64_t sub_100469684()
{
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100656748);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "started auth session", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  uint64_t v6 = *(void *)(v0 + 64);

  id v7 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  [v7 postNotificationName:@"SDAuthenticationSessionStarted" object:0];

  if (v6 != 4)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v0 + 72) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate,  v8);
    if (Strong)
    {
      uint64_t v10 = (void *)Strong;
      uint64_t v11 = *(void *)(v0 + 72);
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v10 manager:v11 didStartAuthenticationFor:isa];
      swift_unknownObjectRelease(v10);
    }
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100469804()
{
  uint64_t v0 = type metadata accessor for SFPlatform(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  os_log_type_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SFPlatform.macOS.getter(v2);
  char v5 = static SFPlatform.isPlatform(_:)(v4);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  uint64_t v7 = v6(v4, v0);
  if ((v5 & 1) != 0)
  {
    uint64_t v8 = sub_100464758(2LL, "eligible iPhone devices: %s");
    sub_100457EC0(v8, (SEL *)&selRef_deviceEnabledAsKeyForIDSDeviceID_);
    int v10 = v9;
    swift_bridgeObjectRelease(v8);
  }

  else
  {
    int v10 = 0;
  }

  static SFPlatform.iOS.getter(v7);
  char v11 = static SFPlatform.isPlatform(_:)(v4);
  v6(v4, v0);
  if ((v11 & 1) != 0)
  {
    uint64_t v12 = sub_100464758(4LL, "eligible mac devices: %s");
    sub_100457EC0(v12, (SEL *)&selRef_deviceEnabledAsKey_);
    int v14 = v13;
    swift_bridgeObjectRelease(v12);
  }

  else
  {
    int v14 = 0;
  }

  return (v10 | v14) & 1;
}

uint64_t sub_100469934(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_beginAccess(a2 + 16, v27, 0LL, 0LL);
  uint64_t result = swift_unknownObjectWeakLoadStrong(a2 + 16, v11);
  if (result)
  {
    int v13 = (void *)result;
    id v14 = *(id *)(result + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);

    aBlock[4] = sub_1004898A4;
    uint64_t v26 = a2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_1001B9FE4;
    aBlock[3] = &unk_1005E3268;
    BOOL v15 = _Block_copy(aBlock);
    uint64_t v16 = swift_retain(a2);
    static DispatchQoS.unspecified.getter(v16);
    double v24 = _swiftEmptyArrayStorage;
    uint64_t v17 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v23 = v7;
    uint64_t v18 = v4;
    uint64_t v19 = v17;
    uint64_t v20 = sub_100183098((uint64_t *)&unk_1006460D0);
    uint64_t v21 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v20, v21, v3, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v10, v6, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
    return swift_release(v26);
  }

  return result;
}

void sub_100469B48(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = sub_100186DE4(v2, (uint64_t)qword_100656748);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "postUnlockKeyRequestNotification by command line", v6, 2u);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  swift_beginAccess(v1, v9, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v1, v7);
  if (Strong) {
}
  }

void sub_100469C44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = sub_100186DE4(v3, (uint64_t)qword_100656748);
  os_log_type_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "triggerStateChange by command line", v7, 2u);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  swift_beginAccess(v2, v10, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v2, v8);
  if (Strong) {
}
  }

void sub_100469D40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = sub_100186DE4(v3, (uint64_t)qword_100656748);
  os_log_type_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "register by command line", v7, 2u);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  swift_beginAccess(v2, v21, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2, v8);
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    sub_100469ED4(0x20646E616D6D6F63LL, 0xEC000000656E696CLL);
  }

  uint64_t v12 = SFDeviceClassCodeGet(Strong, v10);
  if ((_DWORD)v12 == 1)
  {
    swift_beginAccess(v2, v20, 0LL, 0LL);
    uint64_t v15 = swift_unknownObjectWeakLoadStrong(v2, v14);
    if (!v15) {
      return;
    }
    uint64_t v16 = (void *)v15;
    char v17 = 0;
    goto LABEL_13;
  }

  if (SFDeviceClassCodeGet(v12, v13) == 5)
  {
    swift_beginAccess(v2, v20, 0LL, 0LL);
    uint64_t v19 = swift_unknownObjectWeakLoadStrong(v2, v18);
    if (v19)
    {
      uint64_t v16 = (void *)v19;
      char v17 = 1;
LABEL_13:
      sub_1004573D0(v17);
    }
  }

double sub_100469ED4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v24[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v10 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  uint64_t v12 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v12, (uint64_t)qword_100656748);
  uint64_t v13 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.error.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v17 = swift_slowAlloc(32LL, -1LL);
    v24[0] = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    if (a2)
    {
      unint64_t v18 = a2;
    }

    else
    {
      a1 = 0x676E697373696D3CLL;
      unint64_t v18 = 0xE90000000000003ELL;
    }

    swift_bridgeObjectRetain(a2);
    uint64_t v23 = sub_10018CDB4(a1, v18, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, v24, v16 + 4, v16 + 12);
    swift_bridgeObjectRelease_n(a2, 2LL);
    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Resetting registration state because: %s", v16, 0xCu);
    swift_arrayDestroy(v17, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1LL, -1LL);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
  }

  unint64_t v19 = sub_100391A90((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v20 = (unint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
  swift_beginAccess(v20, v24, 1LL, 0LL);
  unint64_t v21 = *v20;
  *uint64_t v20 = v19;
  *(void *)&double result = swift_bridgeObjectRelease(v21).n128_u64[0];
  return result;
}

const char *sub_10046A170()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices;
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0
                                         + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices + 8);
  swift_retain();
  uint64_t v4 = (const char *)v2(5LL);
  swift_release(v3);
  uint64_t v27 = v4;
  v26[3] = (uint64_t)&type metadata for SharingFeatureFlags;
  v26[4] = sub_10048997C();
  LOBYTE(v26[0]) = 8;
  LOBYTE(v3) = isFeatureEnabled(_:)(v26);
  sub_10018709C(v26);
  if ((v3 & 1) != 0)
  {
    uint64_t v6 = *(uint64_t (**)(uint64_t))v1;
    uint64_t v5 = *(void *)(v1 + 8);
    swift_bridgeObjectRetain(v4);
    swift_retain();
    uint64_t v7 = v6(3LL);
    swift_release(v5);
    sub_100457134(v7, v4);
    uint64_t v9 = v8;
    swift_bridgeObjectRelease(v4);
    uint64_t v27 = v9;
  }

  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = sub_100186DE4(v10, (uint64_t)qword_100656748);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v15 = swift_slowAlloc(32LL, -1LL);
    v26[0] = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    swift_beginAccess(&v27, v25, 0LL, 0LL);
    uint64_t v16 = v27;
    uint64_t v17 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
    unint64_t v18 = sub_10023F574();
    swift_bridgeObjectRetain(v16);
    uint64_t v20 = Set.description.getter(v19, v17, v18);
    uint64_t v22 = v21;
    swift_bridgeObjectRelease(v16);
    uint64_t v24 = sub_10018CDB4(v20, (unint64_t)v22, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "eligible reality devices: %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1LL, -1LL);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  swift_beginAccess(&v27, v26, 0LL, 0LL);
  return v27;
}

uint64_t sub_10046A400@<X0>(Swift::UInt a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v53 = a3;
  uint64_t ObjectType = swift_getObjectType(v4);
  uint64_t v9 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for StateMetrics(0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v18 = (uint64_t *)((char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v19 = *(void **)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *unint64_t v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  id v20 = v19;
  unint64_t v21 = _dispatchPreconditionTest(_:)(v18);
  (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if ((v21 & 1) != 0)
  {
    uint64_t v22 = *(uint64_t (**)(uint64_t))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo];
    uint64_t v23 = *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo + 8];
    uint64_t v24 = swift_retain();
    uint64_t v25 = v22(v24);
    unint64_t v21 = v26;
    swift_release(v23);
    int v28 = *(void (**)(uint64_t, unint64_t, char *, Swift::UInt))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessionGenerator];
    uint64_t v27 = *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessionGenerator + 8];
    swift_retain();
    uint64_t v51 = v25;
    v28(v25, v21, a2, a1);
    swift_release(v27);
    uint64_t v62 = ObjectType;
    uint64_t v63 = &off_1005E2BD8;
    v61[0] = v5;
    uint64_t v29 = a4[3];
    uint64_t v30 = a4[4];
    sub_1002499B4((uint64_t)a4, v29);
    uint64_t v31 = *(void *)(*(void *)(v30 + 8) + 8LL);
    char v32 = *(void (**)(void *, uint64_t, uint64_t))(v31 + 16);
    unint64_t v33 = v5;
    v32(v61, v29, v31);
    uint64_t v34 = sub_10019A708(a4, a4[3]);
    uint64_t v35 = (uint64_t)&v33[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
    swift_beginAccess(&v33[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics], v60, 0LL, 0LL);
    sub_1001A4B84(v35, (uint64_t)v14, type metadata accessor for StateMetrics);
    swift_beginAccess(*v34 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics, v61, 33LL, 0LL);
    sub_100335570(v14, a1);
    swift_endAccess(v61);
    sub_1001A4BC8((uint64_t)v14, type metadata accessor for StateMetrics);
    uint64_t v36 = &v33[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager];
    swift_beginAccess(&v33[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager], v59, 0LL, 0LL);
    uint64_t v37 = *sub_10019A708(v36, *((void *)v36 + 3))
        + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
    swift_beginAccess(v37, v58, 0LL, 0LL);
    sub_1001915A4(v37, (uint64_t)v11, &qword_1006457E8);
    uint64_t v39 = a4[3];
    uint64_t v38 = a4[4];
    sub_1002499B4((uint64_t)a4, v39);
    (*(void (**)(char *, uint64_t))(*(void *)(v38 + 8) + 24LL))(v11, v39);
    sub_1001915A4(v53, (uint64_t)v61, &qword_100654080);
    uint64_t v41 = a4[3];
    uint64_t v40 = a4[4];
    sub_1002499B4((uint64_t)a4, v41);
    (*(void (**)(void *, uint64_t))(*(void *)(*(void *)(v40 + 8) + 8LL) + 72LL))(v61, v41);
    sub_10019A6C4((uint64_t)a4, (uint64_t)v61);
    a2 = &v33[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions];
    swift_beginAccess(&v33[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions], v57, 33LL, 0LL);
    unint64_t v18 = *(void **)a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)a2);
    *(void *)a2 = v18;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  unint64_t v18 = sub_10018C8AC(0LL, v18[2] + 1LL, 1, v18);
  *(void *)a2 = v18;
LABEL_3:
  unint64_t v44 = v18[2];
  unint64_t v43 = v18[3];
  if (v44 >= v43 >> 1)
  {
    unint64_t v18 = sub_10018C8AC((void *)(v43 > 1), v44 + 1, 1, v18);
    *(void *)a2 = v18;
  }

  uint64_t v45 = sub_1002499B4((uint64_t)v61, v62);
  __chkstk_darwin(v45);
  uint64_t v47 = (uint64_t *)((char *)&v51 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v48 + 16))(v47);
  uint64_t v49 = *v47;
  uint64_t v55 = type metadata accessor for SDAuthenticationLockSession(0LL);
  int v56 = &off_1005DBB00;
  *(void *)&__int128 v54 = v49;
  v18[2] = v44 + 1;
  sub_1001CE0D0(&v54, (uint64_t)&v18[5 * v44 + 4]);
  sub_10018709C(v61);
  swift_endAccess(v57);
  return sub_100189B20(v51, v21);
}

uint64_t sub_10046A8C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v47 = a3;
  uint64_t ObjectType = swift_getObjectType(v4);
  uint64_t v10 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v17 = *(void **)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  unint64_t v19 = _dispatchPreconditionTest(_:)(v16);
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v19 & 1) != 0)
  {
    id v20 = *(uint64_t (**)(uint64_t))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo];
    uint64_t v21 = *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo + 8];
    uint64_t v22 = swift_retain();
    uint64_t v13 = v20(v22);
    unint64_t v19 = v23;
    swift_release(v21);
    uint64_t v25 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessionInitiatorGenerator];
    uint64_t v24 = *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessionInitiatorGenerator + 8];
    swift_retain();
    v25(v13, v19, a2, a1);
    swift_release(v24);
    uint64_t v54 = ObjectType;
    uint64_t v55 = &off_1005E2BD8;
    v53[0] = v5;
    uint64_t v27 = *((void *)a4 + 3);
    uint64_t v26 = *((void *)a4 + 4);
    sub_1002499B4((uint64_t)a4, v27);
    uint64_t v28 = *(void *)(*(void *)(v26 + 8) + 8LL);
    uint64_t v29 = *(void (**)(void *, uint64_t, uint64_t))(v28 + 16);
    uint64_t v30 = v5;
    v29(v53, v27, v28);
    sub_1001915A4(v47, (uint64_t)v53, &qword_100654080);
    uint64_t v31 = *((void *)a4 + 3);
    uint64_t v32 = *((void *)a4 + 4);
    sub_1002499B4((uint64_t)a4, v31);
    (*(void (**)(void *, uint64_t))(*(void *)(*(void *)(v32 + 8) + 8LL) + 72LL))(v53, v31);
    unint64_t v33 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
    swift_beginAccess(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics], v52, 0LL, 0LL);
    uint64_t v34 = type metadata accessor for StateMetrics(0LL);
    sub_1001915A4((uint64_t)&v33[*(int *)(v34 + 24)], (uint64_t)v12, &qword_1006457E8);
    uint64_t v35 = *((void *)a4 + 3);
    uint64_t v36 = *((void *)a4 + 4);
    sub_1002499B4((uint64_t)a4, v35);
    (*(void (**)(char *, uint64_t))(*(void *)(v36 + 8) + 24LL))(v12, v35);
    sub_10019A6C4((uint64_t)a4, (uint64_t)v53);
    a4 = &v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions];
    swift_beginAccess(&v30[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions], v51, 33LL, 0LL);
    uint64_t v16 = *(void **)a4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)a4);
    *(void *)a4 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  uint64_t v16 = sub_10018C898(0LL, v16[2] + 1LL, 1, v16);
  *(void *)a4 = v16;
LABEL_3:
  unint64_t v39 = v16[2];
  unint64_t v38 = v16[3];
  if (v39 >= v38 >> 1)
  {
    uint64_t v16 = sub_10018C898((void *)(v38 > 1), v39 + 1, 1, v16);
    *(void *)a4 = v16;
  }

  uint64_t v40 = sub_1002499B4((uint64_t)v53, v54);
  __chkstk_darwin(v40);
  uint64_t v42 = (uint64_t *)((char *)&v46 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v43 + 16))(v42);
  uint64_t v44 = *v42;
  uint64_t v49 = type metadata accessor for SDAuthenticationKeySession(0LL);
  uint64_t v50 = &off_1005D9518;
  *(void *)&__int128 v48 = v44;
  v16[2] = v39 + 1;
  sub_1001CE0D0(&v48, (uint64_t)&v16[5 * v39 + 4]);
  sub_10018709C(v53);
  swift_endAccess(v51);
  return sub_100189B20(v13, v19);
}

uint64_t sub_10046AC7C(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionAuthTypes;
  uint64_t result = swift_beginAccess(v3, v20, 0LL, 0LL);
  int64_t v5 = 0LL;
  uint64_t v6 = *(void *)v3 + 64LL;
  uint64_t v7 = 1LL << *(_BYTE *)(*(void *)v3 + 32LL);
  uint64_t v8 = -1LL;
  if (v7 < 64) {
    uint64_t v8 = ~(-1LL << v7);
  }
  unint64_t v9 = v8 & *(void *)(*(void *)v3 + 64LL);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    do
    {
LABEL_4:
      while (v9)
      {
        unint64_t v11 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v12 = v11 | (v5 << 6);
        uint64_t v13 = a1[2];
        if (v13) {
          goto LABEL_23;
        }
      }

      int64_t v14 = v5 + 1;
      if (__OFADD__(v5, 1LL)) {
        goto LABEL_35;
      }
      if (v14 >= v10) {
        return 0LL;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v14);
      ++v5;
      if (!v15)
      {
        int64_t v5 = v14 + 1;
        if (v14 + 1 >= v10) {
          return 0LL;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v5);
        if (!v15)
        {
          int64_t v5 = v14 + 2;
          if (v14 + 2 >= v10) {
            return 0LL;
          }
          unint64_t v15 = *(void *)(v6 + 8 * v5);
          if (!v15)
          {
            int64_t v5 = v14 + 3;
            if (v14 + 3 >= v10) {
              return 0LL;
            }
            unint64_t v15 = *(void *)(v6 + 8 * v5);
            if (!v15)
            {
              int64_t v16 = v14 + 4;
              if (v16 >= v10) {
                return 0LL;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  int64_t v5 = v16 + 1;
                  if (__OFADD__(v16, 1LL)) {
                    goto LABEL_36;
                  }
                  if (v5 >= v10) {
                    return 0LL;
                  }
                  unint64_t v15 = *(void *)(v6 + 8 * v5);
                  ++v16;
                  if (v15) {
                    goto LABEL_22;
                  }
                }
              }

              int64_t v5 = v16;
            }
          }
        }
      }

uint64_t sub_10046AE3C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v36 = a5;
  uint64_t ObjectType = swift_getObjectType(v6);
  uint64_t v13 = type metadata accessor for DispatchPredicate(0LL);
  int64_t v14 = *(char **)(v13 - 8);
  __chkstk_darwin(v13);
  int64_t v16 = (uint64_t *)((char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v17 = *(void **)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *int64_t v16 = v17;
  (*((void (**)(void *, void, uint64_t))v14 + 13))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)(v16);
  (*((void (**)(void *, uint64_t))v14 + 1))(v16, v13);
  if ((v17 & 1) != 0)
  {
    id v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessionGenerator];
    uint64_t v19 = *(void *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessionGenerator + 8];
    swift_retain(v19);
    v20(a1, a2, a3, a4, v36);
    swift_release(v19);
    uint64_t v43 = ObjectType;
    uint64_t v44 = &off_1005E2BD8;
    v42[0] = v7;
    uint64_t v21 = a6[3];
    uint64_t v22 = a6[4];
    sub_1002499B4((uint64_t)a6, v21);
    uint64_t v23 = *(void *)(*(void *)(v22 + 8) + 8LL);
    uint64_t v24 = *(void (**)(void *, uint64_t, uint64_t))(v23 + 16);
    uint64_t v25 = v7;
    v24(v42, v21, v23);
    sub_10019A6C4((uint64_t)a6, (uint64_t)v42);
    int64_t v14 = &v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions];
    swift_beginAccess( &v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions],  v41,  33LL,  0LL);
    a6 = *(void **)v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)v14);
    *(void *)int64_t v14 = a6;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  a6 = sub_10018C5F0(0LL, a6[2] + 1LL, 1, a6);
  *(void *)int64_t v14 = a6;
LABEL_3:
  unint64_t v28 = a6[2];
  unint64_t v27 = a6[3];
  if (v28 >= v27 >> 1)
  {
    a6 = sub_10018C5F0((void *)(v27 > 1), v28 + 1, 1, a6);
    *(void *)int64_t v14 = a6;
  }

  uint64_t v29 = sub_1002499B4((uint64_t)v42, v43);
  __chkstk_darwin(v29);
  uint64_t v31 = (uint64_t *)((char *)&v35 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v32 + 16))(v31);
  uint64_t v33 = *v31;
  uint64_t v39 = type metadata accessor for SDAuthenticationPairingLockSession(0LL);
  uint64_t v40 = &off_1005D63C0;
  *(void *)&__int128 v38 = v33;
  a6[2] = v28 + 1;
  sub_1001CE0D0(&v38, (uint64_t)&a6[5 * v28 + 4]);
  sub_10018709C(v42);
  return swift_endAccess(v41);
}

uint64_t sub_10046B0F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, int a4@<W3>, void *a5@<X8>)
{
  uint64_t v6 = v5;
  int v37 = a4;
  uint64_t ObjectType = swift_getObjectType(v6);
  uint64_t v12 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  int64_t v16 = *(void **)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v15 = v16;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v17 = v16;
  LOBYTE(vswift_weakDestroy(v0 + 16) = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    id v18 = *(void (**)(uint64_t, uint64_t, char *))&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessionGenerator];
    uint64_t v19 = *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessionGenerator + 8];
    swift_retain(v19);
    v18(a1, a2, a3);
    swift_release(v19);
    uint64_t v43 = ObjectType;
    uint64_t v44 = &off_1005E2BD8;
    v42[0] = v6;
    uint64_t v21 = a5[3];
    uint64_t v20 = a5[4];
    sub_1002499B4((uint64_t)a5, v21);
    uint64_t v22 = *(void *)(*(void *)(v20 + 8) + 8LL);
    uint64_t v23 = *(void (**)(void *, uint64_t, uint64_t))(v22 + 16);
    uint64_t v24 = v6;
    v23(v42, v21, v22);
    uint64_t v26 = a5[3];
    uint64_t v25 = a5[4];
    sub_1002499B4((uint64_t)a5, v26);
    (*(void (**)(void, uint64_t))(*(void *)(v25 + 8) + 24LL))(v37 & 1, v26);
    sub_10019A6C4((uint64_t)a5, (uint64_t)v42);
    a3 = &v24[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions];
    swift_beginAccess( &v24[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions],  v41,  33LL,  0LL);
    a5 = *(void **)a3;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)a3);
    *(void *)a3 = a5;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  a5 = sub_10018C604(0LL, a5[2] + 1LL, 1, a5);
  *(void *)a3 = a5;
LABEL_3:
  unint64_t v29 = a5[2];
  unint64_t v28 = a5[3];
  if (v29 >= v28 >> 1)
  {
    a5 = sub_10018C604((void *)(v28 > 1), v29 + 1, 1, a5);
    *(void *)a3 = a5;
  }

  uint64_t v30 = sub_1002499B4((uint64_t)v42, v43);
  __chkstk_darwin(v30);
  uint64_t v32 = (uint64_t *)&v36[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  (*(void (**)(uint64_t *))(v33 + 16))(v32);
  uint64_t v34 = *v32;
  uint64_t v39 = type metadata accessor for SDAuthenticationPairingKeySession(0LL);
  uint64_t v40 = &off_1005DF2D0;
  *(void *)&__int128 v38 = v34;
  a5[2] = v29 + 1;
  sub_1001CE0D0(&v38, (uint64_t)&a5[5 * v29 + 4]);
  sub_10018709C(v42);
  return swift_endAccess(v41);
}

void sub_10046B3C0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v88 = a3;
  uint64_t ObjectType = swift_getObjectType(v3);
  uint64_t v7 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v7);
  char v89 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v9);
  unint64_t v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for UUID(0LL);
  uint64_t v92 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v92 + 64);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v87 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  int64_t v16 = (char *)&v78 - v15;
  id v17 = (void *)type metadata accessor for DispatchPredicate(0LL);
  uint64_t v18 = *(v17 - 1);
  __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  int v91 = v4;
  uint64_t v21 = *(void **)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v20 = v21;
  (*(void (**)(void *, void, void *))(v18 + 104))( v20,  enum case for DispatchPredicate.onQueue(_:),  v17);
  id v22 = v21;
  LOBYTE(v21) = _dispatchPreconditionTest(_:)(v20);
  (*(void (**)(void *, void *))(v18 + 8))(v20, v17);
  if ((v21 & 1) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }

  id v23 = objc_allocWithZone((Class)&OBJC_CLASS___SDAuthenticationPrePairingRequest);
  sub_10019BA8C(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100189B20(a1, a2);
  id v17 = [v23 initWithData:isa];

  if (!v17)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v37 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v37, (uint64_t)qword_100656748);
    sub_10019BA8C(a1, a2);
    uint64_t v38 = sub_10019BA8C(a1, a2);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v39 = static os_log_type_t.error.getter(v34);
    if (os_log_type_enabled(v34, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v41 = swift_slowAlloc(32LL, -1LL);
      *(void *)&v93[0] = v41;
      *(_DWORD *)uint64_t v40 = 136315138;
      sub_10019BA8C(a1, a2);
      uint64_t v42 = Data.description.getter(a1, a2);
      uint64_t v44 = v43;
      sub_100189B20(a1, a2);
      uint64_t v94 = sub_10018CDB4(v42, (unint64_t)v44, (uint64_t *)v93);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v40 + 4, v40 + 12);
      swift_bridgeObjectRelease(v44);
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
      _os_log_impl( (void *)&_mh_execute_header,  v34,  v39,  "Failed to unwrap SDAuthenticationPrePairingRequest (data: %s",  v40,  0xCu);
      swift_arrayDestroy(v41, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1LL, -1LL);
      swift_slowDealloc(v40, -1LL, -1LL);
    }

    else
    {
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
    }

uint64_t sub_10046BCDC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[52] = a8;
  v8[53] = v18;
  v8[50] = a6;
  v8[51] = a7;
  v8[48] = a4;
  v8[49] = a5;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags(0LL);
  v8[54] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[55] = v10;
  v8[56] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DispatchQoS(0LL);
  v8[57] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v8[58] = v12;
  v8[59] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for UUID(0LL);
  v8[60] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v8[61] = v14;
  uint64_t v15 = *(void *)(v14 + 64);
  v8[62] = v15;
  v8[63] = swift_task_alloc((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for String.Encoding(0LL);
  v8[64] = swift_task_alloc((*(void *)(*(void *)(v16 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10046BDE8, 0LL, 0LL);
}

void sub_10046BDE8()
{
  uint64_t aBlock = (unint64_t *)(v0 + 384);
  if (*(void *)(v0 + 384) == 5LL) {
    sub_1004892C8();
  }
  NSString v1 = String._bridgeToObjectiveC()();
  id v3 = (id)SFLocalizedStringForKey(v1, v2);

  if (v3)
  {
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    unint64_t v6 = v5;
  }

  else
  {
    unint64_t v6 = 0x8000000100511150LL;
    uint64_t v4 = 0xD000000000000010LL;
  }

  NSString v7 = String._bridgeToObjectiveC()();
  id v9 = (id)SFLocalizedStringForKey(v7, v8);

  if (!v9)
  {
    __break(1u);
    goto LABEL_55;
  }

  uint64_t v10 = *(void **)(v0 + 392);
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  uint64_t v13 = v12;

  uint64_t v14 = sub_100183098(&qword_1006483E0);
  uint64_t v15 = swift_allocObject(v14, 72LL, 7LL);
  *(_OWORD *)(v15 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
  *(void *)(v15 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = &type metadata for String;
  unint64_t v16 = sub_10021366C();
  *(void *)(v15 + 64) = v16;
  *(void *)(v15 + 32) = v4;
  *(void *)(v15 + 40) = v6;
  static String.localizedStringWithFormat(_:_:)(v11, v13, v15);
  uint64_t v18 = v17;
  *(void *)&double v19 = swift_bridgeObjectRelease(v13).n128_u64[0];
  swift_bridgeObjectRelease((const char *)v15, v19);
  uint64_t v20 = v10[3];
  uint64_t v21 = v10[4];
  sub_10019A708(v10, v20);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 56))(v20, v21);
  if (!v23)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }

  uint64_t v24 = v22;
  id v25 = v23;
  swift_bridgeObjectRelease(v23);
  uint64_t v26 = ((unint64_t)v25 >> 56) & 0xF;
  if (v26)
  {
    NSString v27 = String._bridgeToObjectiveC()();
    id v29 = (id)SFLocalizedStringForKey(v27, v28);

    if (v29)
    {
      uint64_t v30 = *(void **)(v0 + 392);
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
      uint64_t v33 = v32;

      uint64_t v34 = swift_allocObject(v14, 72LL, 7LL);
      *(_OWORD *)(v34 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
      uint64_t v36 = v10[3];
      uint64_t v35 = v10[4];
      sub_10019A708(v30, v36);
      uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 56))(v36, v35);
      if (v38)
      {
        *(void *)(v34 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = &type metadata for String;
        *(void *)(v34 + 64) = v16;
        *(void *)(v34 + 32) = v37;
        *(void *)(v34 + 40) = v38;
        static String.localizedStringWithFormat(_:_:)(v31, v33, v34);
        uint64_t v40 = v39;
        *(void *)&double v41 = swift_bridgeObjectRelease(v33).n128_u64[0];
        *(void *)&double v42 = swift_bridgeObjectRelease((const char *)v34, v41).n128_u64[0];
        goto LABEL_16;
      }

      goto LABEL_57;
    }

uint64_t sub_10046CF10()
{
  uint64_t v1 = *(void *)v0 + 152LL;
  swift_task_dealloc(*(void *)(*(void *)v0 + 536LL));
  sub_100187100(v1, (uint64_t *)&unk_100650068);
  return swift_task_switch(sub_10046CFA4, 0LL, 0LL);
}

uint64_t sub_10046CFA4()
{
  uint64_t v1 = *(void *)(v0 + 528);
  sub_100187100(v0 + 232, &qword_10064DAE0);
  swift_release(v1);
  uint64_t v2 = *(void *)(v0 + 504);
  uint64_t v3 = *(void *)(v0 + 472);
  uint64_t v4 = *(void *)(v0 + 448);
  swift_task_dealloc(*(void *)(v0 + 512));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10046D050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  v13[3] = sub_100183168(0LL, &qword_1006569F0, &OBJC_CLASS___SFAuthenticationOptions_ptr);
  v13[4] = &off_1005DC590;
  v13[0] = a6;
  id v11 = a6;
  sub_100462B08(a3, a4, a5, 0, (uint64_t)v13, (uint64_t)v14);
  sub_100187100((uint64_t)v13, &qword_1006569F8);
  return sub_1001C9860((uint64_t)v14, a1, &qword_10064DAE0);
}

uint64_t sub_10046D108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10018709C(v7);
}

void sub_10046D164(uint64_t a1, unint64_t a2, void *a3)
{
  unint64_t v108 = a3;
  uint64_t v6 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v6);
  uint64_t v105 = (char *)v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_10064DA60);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v104 = (uint64_t)v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v107 = (char *)v98 - v11;
  uint64_t v12 = type metadata accessor for UUID(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v106 = (char *)v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  id v17 = (char *)v98 - v16;
  uint64_t v18 = type metadata accessor for DispatchPredicate(0LL);
  id v19 = *(id *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (void *)((char *)v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v22 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v21 = v22;
  (*((void (**)(void *, void, uint64_t))v19 + 13))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)(v21);
  (*((void (**)(void *, uint64_t))v19 + 1))(v21, v18);
  if ((v22 & 1) == 0)
  {
    __break(1u);
LABEL_55:
    swift_once(&qword_100644408, sub_100458568);
    goto LABEL_4;
  }

  id v24 = objc_allocWithZone((Class)&OBJC_CLASS___SDAuthenticationPairingRequest);
  sub_10019BA8C(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100189B20(a1, a2);
  id v19 = [v24 initWithData:isa];

  if (!v19)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v38 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v38, (uint64_t)qword_100656748);
    sub_10019BA8C(a1, a2);
    uint64_t v39 = sub_10019BA8C(a1, a2);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.error.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      double v42 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v43 = swift_slowAlloc(32LL, -1LL);
      *(void *)&__int128 v114 = v43;
      *(_DWORD *)double v42 = 136315138;
      sub_10019BA8C(a1, a2);
      uint64_t v44 = Data.description.getter(a1, a2);
      uint64_t v46 = v45;
      sub_100189B20(a1, a2);
      *(void *)&__int128 v111 = sub_10018CDB4(v44, (unint64_t)v46, (uint64_t *)&v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, (char *)&v111 + 8, v42 + 4, v42 + 12);
      swift_bridgeObjectRelease(v46);
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
      _os_log_impl( (void *)&_mh_execute_header,  v40,  v41,  "Failed to unwrap SDAuthenticationPairingRequest (data: %s)",  v42,  0xCu);
      swift_arrayDestroy(v43, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1LL, -1LL);
      swift_slowDealloc(v42, -1LL, -1LL);
    }

    else
    {
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
    }

uint64_t sub_10046DDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return swift_task_switch(sub_10046DE14, 0LL, 0LL);
}

uint64_t sub_10046DE14()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10019A708(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24LL));
  *(void *)(v0 + 40) = sub_100183168(0LL, &qword_100654350, off_1005C8858);
  *(void *)(v0 + 48) = &off_1005D7040;
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  uint64_t v2 = dword_10064FE74;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc(v2);
  *(void *)(v0 + 72) = v4;
  void *v4 = v0;
  v4[1] = sub_10048A99C;
  return sub_100344650(v0 + 16);
}

uint64_t sub_10046DEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  v6[7] = a4;
  return swift_task_switch(sub_10046DEC8, 0LL, 0LL);
}

uint64_t sub_10046DEC8()
{
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = sub_100183168(0LL, &qword_100654350, off_1005C8858);
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  *(void *)(v0 + 40) = v3;
  *(void *)(v0 + 48) = &off_1005D7040;
  if ((unint64_t)(v2 - 9) >= 6)
  {
    id v5 = v1;
  }

  else
  {
    id v4 = v1;
    if (v2 == 10)
    {
      sub_100187100(v0 + 16, (uint64_t *)&unk_100650068);
      *(_OWORD *)(v0 + swift_weakDestroy(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
      *(void *)(v0 + 48) = 0LL;
    }
  }

  sub_10019A708(*(void **)(v0 + 72), *(void *)(*(void *)(v0 + 72) + 24LL));
  uint64_t v6 = (void *)swift_task_alloc(dword_10064FE74);
  *(void *)(v0 + 80) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10046DF94;
  return sub_100344650(v0 + 16);
}

uint64_t sub_10046DF94()
{
  return swift_task_switch(sub_10046DFE8, 0LL, 0LL);
}

uint64_t sub_10046DFE8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10046E020(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a1;
  uint64_t v4 = sub_100183098(&qword_10064D6E8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v34 - v8;
  uint64_t v10 = type metadata accessor for RegistrationState(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v35 = (uint64_t)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v36 = (uint64_t)&v34 - v14;
  uint64_t v15 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t *)((char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  id v19 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  id v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)(v18);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) != 0)
  {
    uint64_t v22 = (void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
    swift_beginAccess( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID,  v39,  32LL,  0LL);
    uint64_t v23 = *v22;
    if (!*(void *)(*v22 + 16LL))
    {
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v27(v9, 1LL, 1LL, v10);
      uint64_t v24 = v37;
LABEL_8:
      sub_100187100((uint64_t)v9, &qword_10064D6E8);
      swift_endAccess(v39);
      uint64_t v29 = type metadata accessor for Date(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56LL))(v7, 1LL, 1LL, v29);
      v7[*(int *)(v10 + 20)] = 1;
      v27(v7, 0LL, 1LL, v10);
      swift_beginAccess(v22, v39, 33LL, 0LL);
      swift_bridgeObjectRetain(a2);
      sub_1002E570C((uint64_t)v7, v24, a2);
      return swift_endAccess(v39);
    }

    swift_bridgeObjectRetain(a2);
    uint64_t v24 = v37;
    uint64_t v25 = sub_1003AD53C(v37, a2);
    if ((v26 & 1) != 0)
    {
      sub_1001A4B84( *(void *)(v23 + 56) + *(void *)(v11 + 72) * v25,  (uint64_t)v9,  type metadata accessor for RegistrationState);
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v27(v9, 0LL, 1LL, v10);
    }

    else
    {
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v27(v9, 1LL, 1LL, v10);
    }

    __n128 v28 = swift_bridgeObjectRelease(a2);
    uint64_t v30 = v36;
    sub_1001A4B40((uint64_t)v9, v36, type metadata accessor for RegistrationState);
    swift_endAccess(v39);
    uint64_t v31 = v35;
    sub_1001915A4(v30, v35, &qword_1006457E8);
    *(_BYTE *)(v31 + *(int *)(v10 + 20)) = 1;
    swift_beginAccess(v22, v39, 33LL, 0LL);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v22);
    uint64_t v38 = *v22;
    *uint64_t v22 = 0x8000000000000000LL;
    sub_100481D40(v31, v24, a2, isUniquelyReferenced_nonNull_native, (uint64_t)v7);
    uint64_t v33 = *v22;
    *uint64_t v22 = v38;
    swift_bridgeObjectRelease(v33);
    swift_endAccess(v39);
    sub_100187100((uint64_t)v7, &qword_10064D6E8);
    return sub_1001A4BC8(v30, type metadata accessor for RegistrationState);
  }

  else
  {
    __break(1u);
  }

  return result;
}

void sub_10046E3D0(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v145 = a3;
  uint64_t v6 = sub_100183098(&qword_10064D6E8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v9);
  uint64_t v143 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v148 = type metadata accessor for UUID(0LL);
  uint64_t v147 = *(void *)(v148 - 8);
  uint64_t v14 = __chkstk_darwin(v148);
  uint64_t v144 = (char *)&v143 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v143 - v17;
  __chkstk_darwin(v16);
  uint64_t v149 = (char *)&v143 - v19;
  id v20 = (void *)type metadata accessor for DispatchPredicate(0LL);
  uint64_t v21 = *(v20 - 1);
  __chkstk_darwin(v20);
  uint64_t v23 = (char **)((char *)&v143 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v146 = v3;
  uint64_t v24 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v23 = v24;
  (*(void (**)(void *, void, void *))(v21 + 104))( v23,  enum case for DispatchPredicate.onQueue(_:),  v20);
  id v25 = v24;
  LOBYTE(v24) = _dispatchPreconditionTest(_:)(v23);
  (*(void (**)(void *, void *))(v21 + 8))(v23, v20);
  if ((v24 & 1) == 0)
  {
    __break(1u);
    goto LABEL_85;
  }

  id v26 = objc_allocWithZone((Class)&OBJC_CLASS___SDAuthenticationPairingResponse);
  sub_10019BA8C(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100189B20(a1, a2);
  id v20 = [v26 initWithData:isa];

  if (!v20)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v41 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v41, (uint64_t)qword_100656748);
    sub_10019BA8C(a1, a2);
    uint64_t v42 = sub_10019BA8C(a1, a2);
    uint64_t v38 = (os_log_s *)Logger.logObject.getter(v42);
    os_log_type_t v43 = static os_log_type_t.error.getter(v38);
    if (os_log_type_enabled(v38, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v45 = swift_slowAlloc(32LL, -1LL);
      *(void *)&__int128 v163 = v45;
      *(_DWORD *)uint64_t v44 = 136315138;
      sub_10019BA8C(a1, a2);
      uint64_t v46 = Data.description.getter(a1, a2);
      uint64_t v48 = v47;
      sub_100189B20(a1, a2);
      *(void *)&__int128 v160 = sub_10018CDB4(v46, (unint64_t)v48, (uint64_t *)&v163);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, (char *)&v160 + 8, v44 + 4, v44 + 12);
      swift_bridgeObjectRelease(v48);
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
      _os_log_impl( (void *)&_mh_execute_header,  v38,  v43,  "Failed to unwrap SDAuthenticationPairingResponse (data: %s)",  v44,  0xCu);
      swift_arrayDestroy(v45, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1LL, -1LL);
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    else
    {
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
    }

LABEL_85:
    swift_once(&qword_100644408, sub_100458568);
    goto LABEL_7;
  }

  uint64_t v29 = v28;
  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  uint64_t v32 = v31;

  UUID.init(uuidString:)(v30, v32);
  __n128 v33 = swift_bridgeObjectRelease(v32);
  uint64_t v34 = v147;
  uint64_t v35 = v148;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v147 + 48))(v13, 1LL, v148, v33) == 1)
  {
    sub_100187100((uint64_t)v13, &qword_10064DA60);
    goto LABEL_6;
  }

  uint64_t v49 = (uint64_t)v149;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v149, v13, v35);
  if (![v20 hasType])
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v62 = type metadata accessor for Logger(0LL);
    uint64_t v63 = sub_100186DE4(v62, (uint64_t)qword_100656748);
    uint64_t v64 = (os_log_s *)Logger.logObject.getter(v63);
    os_log_type_t v65 = static os_log_type_t.default.getter(v64);
    if (os_log_type_enabled(v64, v65))
    {
      unint64_t v66 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v66 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v64,  v65,  "PairingResponse does not have an authentication type",  v66,  2u);
      swift_slowDealloc(v66, -1LL, -1LL);
    }

    uint64_t v143 = 0LL;
    goto LABEL_29;
  }

  unint64_t v50 = sub_1003500F4([v20 type]);
  uint64_t v51 = v50;
  if ((v52 & 1) != 0)
  {
    uint64_t v143 = (char *)v50;
LABEL_29:
    char v67 = 1;
    goto LABEL_30;
  }

  if (v50 <= 7 && ((1LL << v50) & 0xC4) != 0 || v50 >= 9)
  {
    uint64_t v53 = (uint64_t *)(v146 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
    swift_beginAccess(v146 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions, &v156, 32LL, 0LL);
    uint64_t v54 = *v53;
    if (*(void *)(*v53 + 16) && (unint64_t v55 = sub_1003AD618(v49), (v56 & 1) != 0))
    {
      sub_10019A6C4(*(void *)(v54 + 56) + 40 * v55, (uint64_t)&v160);
      sub_1001CE0D0(&v160, (uint64_t)&v163);
      swift_endAccess(&v156);
      uint64_t v57 = type metadata accessor for TaskPriority(0LL);
      uint64_t v58 = (uint64_t)v143;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56LL))(v143, 1LL, 1LL, v57);
      sub_10019A6C4((uint64_t)&v163, (uint64_t)&v160);
      uint64_t v59 = (void *)swift_allocObject(&unk_1005E3020, 80LL, 7LL);
      v59[2] = 0LL;
      v59[3] = 0LL;
      sub_1001CE0D0(&v160, (uint64_t)(v59 + 4));
      v59[9] = v20;
      uint64_t v60 = v20;
      unint64_t v61 = &unk_100656AB0;
    }

    else
    {
      swift_endAccess(&v156);
      id v114 = [objc_allocWithZone(SFAuthenticationOptions) init];
      *((void *)&v161 + 1) = sub_100183168(0LL, &qword_1006569F0, &OBJC_CLASS___SFAuthenticationOptions_ptr);
      uint64_t v162 = &off_1005DC590;
      *(void *)&__int128 v160 = v114;
      sub_100462B08(v49, (uint64_t)v145, v51, 0, (uint64_t)&v160, (uint64_t)&v163);
      sub_100187100((uint64_t)&v160, &qword_1006569F8);
      uint64_t v115 = type metadata accessor for TaskPriority(0LL);
      uint64_t v58 = (uint64_t)v143;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56LL))(v143, 1LL, 1LL, v115);
      sub_10019A6C4((uint64_t)&v163, (uint64_t)&v160);
      uint64_t v59 = (void *)swift_allocObject(&unk_1005E2FF8, 80LL, 7LL);
      v59[2] = 0LL;
      v59[3] = 0LL;
      sub_1001CE0D0(&v160, (uint64_t)(v59 + 4));
      v59[9] = v20;
      uint64_t v60 = v20;
      unint64_t v61 = &unk_100656AA0;
    }

    uint64_t v116 = sub_1001B37E8(v58, (uint64_t)v61, (uint64_t)v59);
    swift_release(v116);

    sub_10018709C(&v163);
    (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v49, v148);
    return;
  }

  uint64_t v143 = (char *)v50;
  char v67 = 0;
LABEL_30:
  uint64_t v68 = v145[3];
  uint64_t v69 = v145[4];
  sub_10019A708(v145, v68);
  uint64_t v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 8))(v68, v69);
  if (v71)
  {
    uint64_t v72 = v70;
    uint64_t v73 = v71;
    os_log_type_t v74 = (uint64_t *)(v146 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
    swift_beginAccess( v146 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID,  &v163,  32LL,  0LL);
    uint64_t v75 = *v74;
    if (*(void *)(*v74 + 16) && (uint64_t v76 = sub_1003AD53C(v72, (uint64_t)v73), (v77 & 1) != 0))
    {
      uint64_t v78 = v76;
      uint64_t v79 = *(void *)(v75 + 56);
      uint64_t v80 = type metadata accessor for RegistrationState(0LL);
      uint64_t v81 = *(void *)(v80 - 8);
      sub_1001A4B84(v79 + *(void *)(v81 + 72) * v78, (uint64_t)v8, type metadata accessor for RegistrationState);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v8, 0LL, 1LL, v80);
    }

    else
    {
      uint64_t v80 = type metadata accessor for RegistrationState(0LL);
      uint64_t v81 = *(void *)(v80 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v8, 1LL, 1LL, v80);
    }

    swift_bridgeObjectRelease(v73);
    type metadata accessor for RegistrationState(0LL);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v8, 1LL, v80))
    {
      sub_100187100((uint64_t)v8, &qword_10064D6E8);
      swift_endAccess(&v163);
      int v82 = 0;
    }

    else
    {
      int v82 = v8[*(int *)(v80 + 20)];
      sub_100187100((uint64_t)v8, &qword_10064D6E8);
      swift_endAccess(&v163);
    }

    unsigned int v83 = objc_msgSend(v20, "requestArmingUI", v143);
    uint64_t v84 = v147;
    if ((v67 & 1) == 0 && v143 == (char *)8 && v82 ^ 1 | v83)
    {
      sub_10046AE3C(v49, (uint64_t)v145, 0LL, 0xE000000000000000LL, 8LL, &v163);
      sub_10019A708(&v163, v164);
      sub_10023C4F0(v20);

      sub_10018709C(&v163);
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v49, v148);
      return;
    }

    uint64_t v85 = (const char **)(v146 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions);
    *(void *)&double v86 = swift_beginAccess( v146 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions,  v159,  0LL,  0LL).n128_u64[0];
    uint64_t v87 = *v85;
    uint64_t v88 = *((void *)*v85 + 2);
    if (v88)
    {
      uint64_t v89 = (uint64_t)(v87 + 32);
      swift_bridgeObjectRetain(*v85, v86);
      uint64_t v90 = v148;
      while (1)
      {
        sub_10019A6C4(v89, (uint64_t)&v163);
        uint64_t v91 = v164;
        uint64_t v92 = v165;
        sub_10019A708(&v163, v164);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v92 + 8) + 8LL) + 32LL))(v91);
        LOBYTE(v91) = static UUID.== infix(_:_:)(v18, v49);
        (*(void (**)(char *, uint64_t))(v84 + 8))(v18, v90);
        if ((v91 & 1) != 0) {
          break;
        }
        sub_10018709C(&v163);
        v89 += 40LL;
        if (!--v88) {
          goto LABEL_48;
        }
      }

      sub_1001CE0D0(&v163, (uint64_t)&v160);
    }

    else
    {
      swift_bridgeObjectRetain(*v85, v86);
      uint64_t v90 = v148;
LABEL_48:
      uint64_t v162 = 0LL;
      __int128 v160 = 0u;
      __int128 v161 = 0u;
    }

    swift_bridgeObjectRelease(v87);
    if (*((void *)&v161 + 1))
    {
      sub_1001CE0D0(&v160, (uint64_t)&v163);
      if (qword_100644408 != -1) {
        swift_once(&qword_100644408, sub_100458568);
      }
      uint64_t v93 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v93, (uint64_t)qword_100656748);
      uint64_t v94 = sub_10019A6C4((uint64_t)&v163, (uint64_t)&v156);
      uint64_t v95 = (os_log_s *)Logger.logObject.getter(v94);
      os_log_type_t v96 = static os_log_type_t.default.getter(v95);
      if (os_log_type_enabled(v95, v96))
      {
        unint64_t v97 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v98 = swift_slowAlloc(32LL, -1LL);
        *(void *)&__int128 v151 = v98;
        *(_DWORD *)unint64_t v97 = 136315138;
        uint64_t v100 = *((void *)&v157 + 1);
        uint64_t v99 = v158;
        sub_10019A708(&v156, *((uint64_t *)&v157 + 1));
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v99 + 8) + 8LL) + 32LL))(v100);
        uint64_t v101 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
        uint64_t v102 = dispatch thunk of CustomStringConvertible.description.getter(v148, v101);
        uint64_t v104 = v103;
        (*(void (**)(char *, uint64_t))(v147 + 8))(v18, v148);
        uint64_t v154 = sub_10018CDB4(v102, (unint64_t)v104, (uint64_t *)&v151);
        uint64_t v90 = v148;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, &v155, v97 + 4, v97 + 12);
        swift_bridgeObjectRelease(v104);
        sub_10018709C(&v156);
        _os_log_impl((void *)&_mh_execute_header, v95, v96, "Handling with existing lock session: %s", v97, 0xCu);
        swift_arrayDestroy(v98, 1LL, (char *)&type metadata for Any + 8);
        uint64_t v105 = v98;
        uint64_t v84 = v147;
        swift_slowDealloc(v105, -1LL, -1LL);
        uint64_t v106 = v97;
        uint64_t v49 = (uint64_t)v149;
        swift_slowDealloc(v106, -1LL, -1LL);
      }

      else
      {
        sub_10018709C(&v156);
      }

      sub_10019A708(&v163, v164);
      sub_10023C4F0(v20);
    }

    else
    {
      sub_100187100((uint64_t)&v160, &qword_100656A90);
      uint64_t v107 = (const char **)(v146 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions);
      *(void *)&double v108 = swift_beginAccess( v146 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions,  &v154,  0LL,  0LL).n128_u64[0];
      uint64_t v109 = *v107;
      uint64_t v110 = *((void *)*v107 + 2);
      if (v110)
      {
        uint64_t v111 = (uint64_t)(v109 + 32);
        swift_bridgeObjectRetain(*v107, v108);
        while (1)
        {
          sub_10019A6C4(v111, (uint64_t)&v151);
          uint64_t v112 = v152;
          uint64_t v113 = v153;
          sub_10019A708(&v151, v152);
          (*(void (**)(uint64_t))(*(void *)(*(void *)(v113 + 8) + 8LL) + 32LL))(v112);
          LOBYTE(v112) = static UUID.== infix(_:_:)(v18, v149);
          (*(void (**)(char *, uint64_t))(v84 + 8))(v18, v90);
          if ((v112 & 1) != 0) {
            break;
          }
          sub_10018709C(&v151);
          v111 += 40LL;
          if (!--v110) {
            goto LABEL_65;
          }
        }

        sub_1001CE0D0(&v151, (uint64_t)&v156);
      }

      else
      {
        swift_bridgeObjectRetain(*v107, v108);
LABEL_65:
        uint64_t v158 = 0LL;
        __int128 v156 = 0u;
        __int128 v157 = 0u;
      }

      swift_bridgeObjectRelease(v109);
      uint64_t v49 = (uint64_t)v149;
      uint64_t v117 = v144;
      if (!*((void *)&v157 + 1))
      {
        sub_100187100((uint64_t)&v156, &qword_100656A68);
        if (qword_100644408 != -1) {
          swift_once(&qword_100644408, sub_100458568);
        }
        uint64_t v132 = type metadata accessor for Logger(0LL);
        sub_100186DE4(v132, (uint64_t)qword_100656748);
        uint64_t v133 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 16))(v117, v49, v90);
        uint64_t v134 = (os_log_s *)Logger.logObject.getter(v133);
        os_log_type_t v135 = static os_log_type_t.error.getter(v134);
        if (os_log_type_enabled(v134, v135))
        {
          uint64_t v136 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v137 = swift_slowAlloc(32LL, -1LL);
          *(void *)&__int128 v163 = v137;
          *(_DWORD *)uint64_t v136 = 136315138;
          uint64_t v148 = (uint64_t)(v136 + 4);
          uint64_t v138 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
          uint64_t v139 = dispatch thunk of CustomStringConvertible.description.getter(v90, v138);
          uint64_t v141 = (const char *)v140;
          *(void *)&__int128 v156 = sub_10018CDB4(v139, v140, (uint64_t *)&v163);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v156, (char *)&v156 + 8, v148, v136 + 12);
          __n128 v142 = swift_bridgeObjectRelease(v141);
          (*(void (**)(char *, uint64_t, __n128))(v84 + 8))(v117, v90, v142);
          _os_log_impl((void *)&_mh_execute_header, v134, v135, "Could not find existing session for %s", v136, 0xCu);
          swift_arrayDestroy(v137, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v137, -1LL, -1LL);
          swift_slowDealloc(v136, -1LL, -1LL);
        }

        else
        {

          (*(void (**)(char *, uint64_t))(v84 + 8))(v117, v90);
        }

        uint64_t v49 = (uint64_t)v149;
        goto LABEL_79;
      }

      sub_1001CE0D0(&v156, (uint64_t)&v163);
      if (qword_100644408 != -1) {
        swift_once(&qword_100644408, sub_100458568);
      }
      uint64_t v118 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v118, (uint64_t)qword_100656748);
      uint64_t v119 = sub_10019A6C4((uint64_t)&v163, (uint64_t)&v156);
      Swift::Int v120 = (os_log_s *)Logger.logObject.getter(v119);
      os_log_type_t v121 = static os_log_type_t.default.getter(v120);
      if (os_log_type_enabled(v120, v121))
      {
        uint64_t v122 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v123 = swift_slowAlloc(32LL, -1LL);
        *(void *)&__int128 v151 = v123;
        *(_DWORD *)uint64_t v122 = 136315138;
        uint64_t v125 = *((void *)&v157 + 1);
        uint64_t v124 = v158;
        sub_10019A708(&v156, *((uint64_t *)&v157 + 1));
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v124 + 8) + 8LL) + 32LL))(v125);
        uint64_t v126 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
        uint64_t v127 = dispatch thunk of CustomStringConvertible.description.getter(v148, v126);
        uint64_t v129 = v128;
        (*(void (**)(char *, uint64_t))(v147 + 8))(v18, v148);
        uint64_t v150 = sub_10018CDB4(v127, (unint64_t)v129, (uint64_t *)&v151);
        uint64_t v90 = v148;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, &v151, v122 + 4, v122 + 12);
        swift_bridgeObjectRelease(v129);
        sub_10018709C(&v156);
        _os_log_impl((void *)&_mh_execute_header, v120, v121, "Handling with existing key session: %s", v122, 0xCu);
        swift_arrayDestroy(v123, 1LL, (char *)&type metadata for Any + 8);
        uint64_t v130 = v123;
        uint64_t v84 = v147;
        swift_slowDealloc(v130, -1LL, -1LL);
        unint64_t v131 = v122;
        uint64_t v49 = (uint64_t)v149;
        swift_slowDealloc(v131, -1LL, -1LL);
      }

      else
      {
        sub_10018709C(&v156);
      }

      sub_10019A708(&v163, v164);
      sub_1003D9F60(v20);
    }

    sub_10018709C(&v163);
LABEL_79:
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v49, v90);
    return;
  }

  __break(1u);
}

uint64_t sub_10046F680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return swift_task_switch(sub_10046F698, 0LL, 0LL);
}

uint64_t sub_10046F698()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10019A708(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24LL));
  *(void *)(v0 + 40) = sub_100183168(0LL, &qword_100651648, off_1005C8860);
  *(void *)(v0 + 48) = &off_1005D7048;
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  uint64_t v2 = dword_10064FE74;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc(v2);
  *(void *)(v0 + 72) = v4;
  void *v4 = v0;
  v4[1] = sub_10048A99C;
  return sub_100344650(v0 + 16);
}

uint64_t sub_10046F730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return swift_task_switch(sub_10046F748, 0LL, 0LL);
}

uint64_t sub_10046F748()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10019A708(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24LL));
  *(void *)(v0 + 40) = sub_100183168(0LL, &qword_100651650, off_1005C8848);
  *(void *)(v0 + 48) = &off_1005D7058;
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  uint64_t v2 = dword_10064FE74;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc(v2);
  *(void *)(v0 + 72) = v4;
  void *v4 = v0;
  v4[1] = sub_10048A99C;
  return sub_100344650(v0 + 16);
}

void sub_10046F7E0( uint64_t a1, unint64_t a2, uint64_t a3, Class *a4, uint64_t a5, uint64_t a6, void *a7, void (*a8)(__int128 *, uint64_t *, __n128), void (*a9)(Class *), uint64_t *a10, const char *a11)
{
  uint64_t v94 = a8;
  uint64_t v95 = a7;
  uint64_t v93 = a6;
  uint64_t v91 = a5;
  uint64_t v13 = v11;
  uint64_t v16 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v16);
  uint64_t v92 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v18);
  id v20 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for UUID(0LL);
  uint64_t v22 = *(const char **)(v21 - 8);
  uint64_t v98 = v21;
  uint64_t v99 = v22;
  uint64_t v23 = __chkstk_darwin(v21);
  os_log_type_t v96 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v90 - v26;
  __chkstk_darwin(v25);
  unint64_t v97 = (char *)&v90 - v28;
  uint64_t v29 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v32 = (uint64_t *)((char *)&v90 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __n128 v33 = *(void **)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v32 = v33;
  (*(void (**)(void *, void, uint64_t))(v30 + 104))(v32, enum case for DispatchPredicate.onQueue(_:), v29);
  id v34 = v33;
  LOBYTE(v33) = _dispatchPreconditionTest(_:)(v32);
  (*(void (**)(void *, uint64_t))(v30 + 8))(v32, v29);
  if ((v33 & 1) == 0)
  {
    __break(1u);
    goto LABEL_36;
  }

  id v35 = objc_allocWithZone(*a4);
  sub_10019BA8C(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100189B20(a1, a2);
  a4 = (Class *)[v35 initWithData:isa];

  if (!a4)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v50 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v50, (uint64_t)qword_100656748);
    sub_10019BA8C(a1, a2);
    uint64_t v51 = sub_10019BA8C(a1, a2);
    uint64_t v47 = (os_log_s *)Logger.logObject.getter(v51);
    os_log_type_t v52 = static os_log_type_t.error.getter(v47);
    if (os_log_type_enabled(v47, v52))
    {
      uint64_t v99 = a11;
      uint64_t v53 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v54 = swift_slowAlloc(32LL, -1LL);
      v107[0] = v54;
      *(_DWORD *)uint64_t v53 = 136315138;
      sub_10019BA8C(a1, a2);
      uint64_t v55 = Data.description.getter(a1, a2);
      uint64_t v57 = v56;
      sub_100189B20(a1, a2);
      *(void *)&__int128 v104 = sub_10018CDB4(v55, (unint64_t)v57, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, (char *)&v104 + 8, v53 + 4, v53 + 12);
      swift_bridgeObjectRelease(v57);
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v47, v52, v99, v53, 0xCu);
      swift_arrayDestroy(v54, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1LL, -1LL);
      swift_slowDealloc(v53, -1LL, -1LL);
    }

    else
    {
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
    }

uint64_t sub_100470148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return swift_task_switch(sub_100470160, 0LL, 0LL);
}

uint64_t sub_100470160()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10019A708(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24LL));
  *(void *)(v0 + 40) = sub_100183168(0LL, &qword_100651658, off_1005C8840);
  *(void *)(v0 + 48) = &off_1005D7050;
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  uint64_t v2 = dword_10064FE74;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc(v2);
  *(void *)(v0 + 72) = v4;
  void *v4 = v0;
  v4[1] = sub_10048A99C;
  return sub_100344650(v0 + 16);
}

void sub_1004701F8(uint64_t a1, unint64_t a2, void *a3)
{
  v224 = a3;
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v210 = *(void *)(v6 - 8);
  uint64_t v211 = v6;
  __chkstk_darwin(v6);
  v212 = (char *)&v209 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v219 = type metadata accessor for SFPlatform(0LL);
  uint64_t v213 = *(void *)(v219 - 8);
  __chkstk_darwin(v219);
  v220 = (char *)&v209 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v9);
  v221 = (char *)&v209 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100183098(&qword_10064DA60);
  uint64_t v12 = __chkstk_darwin(v11);
  v223 = (char *)&v209 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v209 - v14;
  uint64_t v16 = type metadata accessor for UUID(0LL);
  uint64_t v17 = *(uint8_t **)(v16 - 8);
  uint64_t v227 = v16;
  uint64_t v228 = v17;
  uint64_t v18 = __chkstk_darwin(v16);
  id v20 = (char *)&v209 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v226 = (char *)&v209 - v22;
  __chkstk_darwin(v21);
  uint64_t v222 = (char *)&v209 - v23;
  uint64_t v24 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (void (**)(void *, uint64_t, uint64_t))((char *)&v209 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v225 = v3;
  uint64_t v28 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  void *v27 = v28;
  uint64_t v29 = *(void (**)(void *))(v25 + 104);
  unsigned int v216 = enum case for DispatchPredicate.onQueue(_:);
  v29(v27);
  id v214 = v28;
  LOBYTE(v28) = _dispatchPreconditionTest(_:)(v27);
  uint64_t v30 = *(void (**)(void *, uint64_t))(v25 + 8);
  uint64_t v217 = v27;
  uint64_t v218 = v24;
  uint64_t v215 = v30;
  v30(v27, v24);
  if ((v28 & 1) == 0)
  {
    __break(1u);
LABEL_98:
    swift_once(&qword_100644408, sub_100458568);
LABEL_8:
    uint64_t v45 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v45, (uint64_t)qword_100656748);
    sub_10019BA8C(a1, a2);
    uint64_t v46 = sub_10019BA8C(a1, a2);
    uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
    os_log_type_t v48 = static os_log_type_t.error.getter(v47);
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v50 = swift_slowAlloc(32LL, -1LL);
      v245[0] = v50;
      *(_DWORD *)uint64_t v49 = 136315138;
      uint64_t v228 = v49 + 4;
      sub_10019BA8C(a1, a2);
      uint64_t v51 = Data.description.getter(a1, a2);
      uint64_t v53 = v52;
      sub_100189B20(a1, a2);
      *(void *)&__int128 v242 = sub_10018CDB4(v51, (unint64_t)v53, v245);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v242, (char *)&v242 + 8, v228, v49 + 12);
      swift_bridgeObjectRelease(v53);
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
      _os_log_impl( (void *)&_mh_execute_header,  v47,  v48,  "Failed to unwrap SDAuthenticationPairingDisable (data: %s)",  v49,  0xCu);
      swift_arrayDestroy(v50, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v50, -1LL, -1LL);
      swift_slowDealloc(v49, -1LL, -1LL);
    }

    else
    {
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
    }

    goto LABEL_76;
  }

  id v31 = objc_allocWithZone((Class)&OBJC_CLASS___SDAuthenticationPairingDisable);
  sub_10019BA8C(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100189B20(a1, a2);
  __n128 v33 = (uint8_t *)[v31 initWithData:isa];

  if (!v33)
  {
    if (qword_100644408 == -1) {
      goto LABEL_8;
    }
    goto LABEL_98;
  }

  unint64_t v34 = sub_1003500F4(-[uint8_t type](v33, "type"));
  if ((v35 & 1) != 0)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v54 = type metadata accessor for Logger(0LL);
    uint64_t v55 = sub_100186DE4(v54, (uint64_t)qword_100656748);
    uint64_t v47 = (os_log_s *)Logger.logObject.getter(v55);
    os_log_type_t v56 = static os_log_type_t.error.getter(v47);
    if (os_log_type_enabled(v47, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v57 = 0;
      uint64_t v58 = "Message does not have authentication type";
LABEL_14:
      _os_log_impl((void *)&_mh_execute_header, v47, v56, v58, v57, 2u);
      swift_slowDealloc(v57, -1LL, -1LL);

      return;
    }

    goto LABEL_75;
  }

  unint64_t v36 = v34;
  id v37 = -[uint8_t sessionID](v33, "sessionID");
  uint64_t v38 = v227;
  if (v37)
  {
    uint64_t v39 = v37;
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    __n128 v42 = v41;

    UUID.init(uuidString:)(v40, v42);
    __n128 v43 = swift_bridgeObjectRelease(v42);
    uint64_t v44 = v228;
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t, __n128))v228 + 6))(v15, 1LL, v38, v43) == 1)
    {
      sub_100187100((uint64_t)v15, &qword_10064DA60);
    }

    else
    {
      uint64_t v59 = v29;
      uint64_t v60 = (uint64_t)v222;
      (*((void (**)(char *, char *, uint64_t))v44 + 4))(v222, v15, v38);
      unint64_t v61 = (uint64_t *)(v225 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
      swift_beginAccess(v225 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions, &v238, 32LL, 0LL);
      uint64_t v62 = *v61;
      if (*(void *)(v62 + 16))
      {
        unint64_t v63 = sub_1003AD618(v60);
        if ((v64 & 1) != 0)
        {
          sub_10019A6C4(*(void *)(v62 + 56) + 40 * v63, (uint64_t)&v242);
          sub_1001CE0D0(&v242, (uint64_t)v245);
          swift_endAccess(&v238);
          uint64_t v65 = type metadata accessor for TaskPriority(0LL);
          uint64_t v66 = (uint64_t)v221;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56LL))(v221, 1LL, 1LL, v65);
          sub_10019A6C4((uint64_t)v245, (uint64_t)&v242);
          uint64_t v67 = (void *)swift_allocObject(&unk_1005E32C8, 80LL, 7LL);
          v67[2] = 0LL;
          uint64_t v67[3] = 0LL;
          sub_1001CE0D0(&v242, (uint64_t)(v67 + 4));
          v67[9] = v33;
          uint64_t v68 = v33;
          uint64_t v69 = sub_1001B37E8(v66, (uint64_t)&unk_100656AF8, (uint64_t)v67);
          swift_release(v69);

          sub_10018709C(v245);
          (*((void (**)(uint64_t, uint64_t))v228 + 1))(v60, v38);
          return;
        }
      }

      swift_endAccess(&v238);
      uint64_t v29 = v59;
      if (v36 - 9 <= 5 && (v36 & 0xFFFFFFFFFFFFFFFELL) == 0xC)
      {
        uint64_t v70 = v38;
        id v71 = [objc_allocWithZone(SFAuthenticationOptions) init];
        *((void *)&v243 + 1) = sub_100183168(0LL, &qword_1006569F0, &OBJC_CLASS___SFAuthenticationOptions_ptr);
        uint64_t v244 = &off_1005DC590;
        *(void *)&__int128 v242 = v71;
        sub_100462B08(v60, (uint64_t)v224, v36, v36 == 13, (uint64_t)&v242, (uint64_t)v245);
        sub_100187100((uint64_t)&v242, &qword_1006569F8);
        uint64_t v72 = type metadata accessor for TaskPriority(0LL);
        uint64_t v73 = (uint64_t)v221;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56LL))(v221, 1LL, 1LL, v72);
        sub_10019A6C4((uint64_t)v245, (uint64_t)&v242);
        uint64_t v74 = (void *)swift_allocObject(&unk_1005E32A0, 80LL, 7LL);
        v74[2] = 0LL;
        v74[3] = 0LL;
        sub_1001CE0D0(&v242, (uint64_t)(v74 + 4));
        v74[9] = v33;
        uint64_t v75 = v33;
        uint64_t v76 = sub_1001B37E8(v73, (uint64_t)&unk_100656AE8, (uint64_t)v74);
        swift_release(v76);

        sub_10018709C(v245);
        (*((void (**)(uint64_t, uint64_t))v228 + 1))(v60, v70);
        return;
      }

      (*((void (**)(uint64_t, uint64_t))v228 + 1))(v60, v38);
    }
  }

  id v77 = -[uint8_t pairingID](v33, "pairingID", v29);
  uint64_t v78 = v225;
  if (!v77) {
    goto LABEL_26;
  }
  uint64_t v79 = v77;
  uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
  int v82 = v81;

  uint64_t v83 = (uint64_t)v223;
  UUID.init(uuidString:)(v80, v82);
  __n128 v84 = swift_bridgeObjectRelease(v82);
  uint64_t v85 = v228;
  if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))v228 + 6))(v83, 1LL, v38, v84) == 1)
  {
    sub_100187100(v83, &qword_10064DA60);
LABEL_26:
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v86 = type metadata accessor for Logger(0LL);
    uint64_t v87 = sub_100186DE4(v86, (uint64_t)qword_100656748);
    __n128 v88 = (os_log_s *)Logger.logObject.getter(v87);
    os_log_type_t v89 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v90 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v90 = 0;
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "Message does not have a session ID", v90, 2u);
      swift_slowDealloc(v90, -1LL, -1LL);
    }

    goto LABEL_63;
  }

  (*((void (**)(char *, uint64_t, uint64_t))v85 + 4))(v226, v83, v38);
  uint64_t v91 = (const char **)(v78 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions);
  *(void *)&double v92 = swift_beginAccess( v78 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions,  v241,  0LL,  0LL).n128_u64[0];
  uint64_t v93 = *v91;
  uint64_t v94 = *((void *)*v91 + 2);
  if (v94)
  {
    uint64_t v95 = (uint64_t)(v93 + 32);
    swift_bridgeObjectRetain(*v91, v92);
    while (1)
    {
      sub_10019A6C4(v95, (uint64_t)&v238);
      uint64_t v97 = v239;
      uint64_t v96 = v240;
      sub_10019A708(&v238, v239);
      uint64_t v98 = v97;
      uint64_t v85 = v228;
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v96 + 8) + 8LL) + 32LL))(v98);
      LOBYTE(v96) = static UUID.== infix(_:_:)(v20, v226);
      (*((void (**)(char *, uint64_t))v85 + 1))(v20, v227);
      if ((v96 & 1) != 0) {
        break;
      }
      sub_10018709C(&v238);
      v95 += 40LL;
      if (!--v94) {
        goto LABEL_37;
      }
    }

    sub_1001CE0D0(&v238, (uint64_t)&v242);
  }

  else
  {
    swift_bridgeObjectRetain(*v91, v92);
LABEL_37:
    uint64_t v244 = 0LL;
    __int128 v242 = 0u;
    __int128 v243 = 0u;
  }

  swift_bridgeObjectRelease(v93);
  if (*((void *)&v243 + 1))
  {
    sub_1001CE0D0(&v242, (uint64_t)v245);
    uint64_t v100 = v246;
    uint64_t v99 = v247;
    sub_10019A708(v245, v246);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v99 + 8) + 8LL) + 88LL))(v100);
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v101 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v101, (uint64_t)qword_100656748);
    uint64_t v102 = sub_10019A6C4((uint64_t)v245, (uint64_t)&v238);
    uint64_t v103 = (os_log_s *)Logger.logObject.getter(v102);
    os_log_type_t v104 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v103, v104))
    {
      __int128 v105 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v222 = (char *)swift_slowAlloc(32LL, -1LL);
      *(void *)&__int128 v235 = v222;
      v223 = (char *)v36;
      *(_DWORD *)__int128 v105 = 136315138;
      v221 = (char *)(v105 + 4);
      uint64_t v107 = v239;
      uint64_t v106 = v240;
      sub_10019A708(&v238, v239);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v106 + 8) + 8LL) + 32LL))(v107);
      uint64_t v108 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v109 = v227;
      uint64_t v110 = dispatch thunk of CustomStringConvertible.description.getter(v227, v108);
      unint64_t v112 = v111;
      (*((void (**)(char *, uint64_t))v228 + 1))(v20, v109);
      *(void *)&__int128 v231 = sub_10018CDB4(v110, v112, (uint64_t *)&v235);
      unint64_t v36 = (unint64_t)v223;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v231, (char *)&v231 + 8, v221, v105 + 12);
      uint64_t v113 = (const char *)v112;
      uint64_t v85 = v228;
      swift_bridgeObjectRelease(v113);
      sub_10018709C(&v238);
      _os_log_impl((void *)&_mh_execute_header, v103, v104, "Invalidated lock session with ID: %s", v105, 0xCu);
      id v114 = v222;
      swift_arrayDestroy(v222, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v78 = v225;
      swift_slowDealloc(v114, -1LL, -1LL);
      swift_slowDealloc(v105, -1LL, -1LL);
    }

    else
    {
      sub_10018709C(&v238);
    }

    sub_10018709C(v245);
  }

  else
  {
    sub_100187100((uint64_t)&v242, &qword_100656A90);
  }

  uint64_t v115 = (const char **)(v78 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions);
  *(void *)&double v116 = swift_beginAccess( v78 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions,  &v234,  0LL,  0LL).n128_u64[0];
  uint64_t v117 = *v115;
  uint64_t v118 = *((void *)*v115 + 2);
  if (v118)
  {
    uint64_t v119 = (uint64_t)(v117 + 32);
    swift_bridgeObjectRetain(*v115, v116);
    while (1)
    {
      sub_10019A6C4(v119, (uint64_t)&v231);
      uint64_t v121 = v232;
      uint64_t v120 = v233;
      sub_10019A708(&v231, v232);
      uint64_t v122 = v121;
      uint64_t v85 = v228;
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v120 + 8) + 8LL) + 32LL))(v122);
      LOBYTE(v120) = static UUID.== infix(_:_:)(v20, v226);
      (*((void (**)(char *, uint64_t))v85 + 1))(v20, v227);
      if ((v120 & 1) != 0) {
        break;
      }
      sub_10018709C(&v231);
      v119 += 40LL;
      if (!--v118) {
        goto LABEL_53;
      }
    }

    sub_1001CE0D0(&v231, (uint64_t)&v235);
  }

  else
  {
    swift_bridgeObjectRetain(*v115, v116);
LABEL_53:
    uint64_t v237 = 0LL;
    __int128 v235 = 0u;
    __int128 v236 = 0u;
  }

  __n128 v123 = swift_bridgeObjectRelease(v117);
  uint64_t v124 = v227;
  if (*((void *)&v236 + 1))
  {
    sub_1001CE0D0(&v235, (uint64_t)&v238);
    uint64_t v126 = v239;
    uint64_t v125 = v240;
    sub_10019A708(&v238, v239);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v125 + 8) + 8LL) + 88LL))(v126);
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v228 = v33;
    uint64_t v127 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v127, (uint64_t)qword_100656748);
    uint64_t v128 = sub_10019A6C4((uint64_t)&v238, (uint64_t)&v231);
    uint64_t v129 = (os_log_s *)Logger.logObject.getter(v128);
    os_log_type_t v130 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v129, v130))
    {
      unint64_t v131 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v132 = swift_slowAlloc(32LL, -1LL);
      uint64_t v230 = v132;
      v223 = (char *)v36;
      *(_DWORD *)unint64_t v131 = 136315138;
      uint64_t v222 = (char *)(v131 + 4);
      uint64_t v133 = v85;
      uint64_t v135 = v232;
      uint64_t v134 = v233;
      sub_10019A708(&v231, v232);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v134 + 8) + 8LL) + 32LL))(v135);
      uint64_t v136 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v137 = dispatch thunk of CustomStringConvertible.description.getter(v227, v136);
      uint64_t v139 = v138;
      unint64_t v140 = (void (*)(char *, uint64_t))*((void *)v133 + 1);
      v140(v20, v227);
      uint64_t v229 = sub_10018CDB4(v137, (unint64_t)v139, &v230);
      unint64_t v36 = (unint64_t)v223;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, &v230, v222, v131 + 12);
      swift_bridgeObjectRelease(v139);
      sub_10018709C(&v231);
      _os_log_impl((void *)&_mh_execute_header, v129, v130, "Invalidated key session with ID: %s", v131, 0xCu);
      swift_arrayDestroy(v132, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v132, -1LL, -1LL);
      uint64_t v141 = v131;
      uint64_t v124 = v227;
      swift_slowDealloc(v141, -1LL, -1LL);
    }

    else
    {
      sub_10018709C(&v231);

      unint64_t v140 = (void (*)(char *, uint64_t))*((void *)v85 + 1);
    }

    v140(v226, v124);
    sub_10018709C(&v238);
    __n128 v33 = v228;
  }

  else
  {
    (*((void (**)(char *, uint64_t, __n128))v85 + 1))(v226, v227, v123);
    sub_100187100((uint64_t)&v235, &qword_100656A68);
  }

uint64_t sub_1004718FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return swift_task_switch(sub_100471914, 0LL, 0LL);
}

uint64_t sub_100471914()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10019A708(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24LL));
  *(void *)(v0 + 40) = sub_100183168(0LL, &qword_10064BDB8, off_1005C8850);
  *(void *)(v0 + 48) = &off_1005D7090;
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  uint64_t v2 = dword_10064FE74;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc(v2);
  *(void *)(v0 + 72) = v4;
  void *v4 = v0;
  v4[1] = sub_10048A99C;
  return sub_100344650(v0 + 16);
}

uint64_t sub_1004719AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return swift_task_switch(sub_1004719C4, 0LL, 0LL);
}

uint64_t sub_1004719C4()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10019A708(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24LL));
  *(void *)(v0 + 40) = sub_100183168(0LL, &qword_10064BDB8, off_1005C8850);
  *(void *)(v0 + 48) = &off_1005D7090;
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  uint64_t v2 = dword_10064FE74;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc(v2);
  *(void *)(v0 + 72) = v4;
  void *v4 = v0;
  v4[1] = sub_100471A5C;
  return sub_100344650(v0 + 16);
}

uint64_t sub_100471A5C()
{
  uint64_t v1 = *v0 + 16;
  uint64_t v3 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 72));
  sub_100187100(v1, (uint64_t *)&unk_100650068);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100471AB8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType(v2);
  uint64_t v7 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = *(void **)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  unint64_t v13 = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if ((v13 & 1) != 0)
  {
    uint64_t v14 = *(uint64_t (**)(uint64_t))&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo];
    uint64_t v15 = *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo + 8];
    uint64_t v16 = swift_retain();
    uint64_t v7 = v14(v16);
    unint64_t v13 = v17;
    swift_release(v15);
    uint64_t v19 = *(void (**)(uint64_t, unint64_t, uint64_t))&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessionGenerator];
    uint64_t v18 = *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessionGenerator + 8];
    swift_retain();
    v19(v7, v13, a1);
    swift_release(v18);
    uint64_t v40 = ObjectType;
    uint64_t v41 = &off_1005E2BD8;
    v39[0] = v3;
    uint64_t v20 = *((void *)a2 + 3);
    uint64_t v21 = *((void *)a2 + 4);
    sub_1002499B4((uint64_t)a2, v20);
    uint64_t v22 = *(void *)(*(void *)(v21 + 8) + 8LL);
    uint64_t v23 = *(void (**)(void *, uint64_t, uint64_t))(v22 + 16);
    uint64_t v24 = v3;
    v23(v39, v20, v22);
    sub_10019A6C4((uint64_t)a2, (uint64_t)v39);
    a2 = &v24[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions];
    swift_beginAccess(&v24[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions], v38, 33LL, 0LL);
    uint64_t v10 = *(void **)a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)a2);
    *(void *)a2 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  uint64_t v10 = sub_10018C898(0LL, v10[2] + 1LL, 1, v10);
  *(void *)a2 = v10;
LABEL_3:
  unint64_t v27 = v10[2];
  unint64_t v26 = v10[3];
  if (v27 >= v26 >> 1)
  {
    uint64_t v10 = sub_10018C898((void *)(v26 > 1), v27 + 1, 1, v10);
    *(void *)a2 = v10;
  }

  uint64_t v28 = sub_1002499B4((uint64_t)v39, v40);
  __chkstk_darwin(v28);
  uint64_t v30 = (uint64_t *)((char *)&v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v31 + 16))(v30);
  uint64_t v32 = *v30;
  uint64_t v36 = type metadata accessor for SDAuthenticationKeySession(0LL);
  id v37 = &off_1005D9518;
  *(void *)&__int128 v35 = v32;
  __int128 v10[2] = v27 + 1;
  sub_1001CE0D0(&v35, (uint64_t)&v10[5 * v27 + 4]);
  sub_10018709C(v39);
  swift_endAccess(v38);
  return sub_100189B20(v7, v13);
}

void sub_100471D7C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v59 = a3;
  uint64_t v6 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v6);
  uint64_t v60 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v61 = type metadata accessor for UUID(0LL);
  uint64_t v11 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  unint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = (void *)type metadata accessor for DispatchPredicate(0LL);
  uint64_t v15 = *(v14 - 1);
  __chkstk_darwin(v14);
  unint64_t v17 = (uint64_t *)((char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v18 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *unint64_t v17 = v18;
  (*(void (**)(void *, void, void *))(v15 + 104))( v17,  enum case for DispatchPredicate.onQueue(_:),  v14);
  id v19 = v18;
  LOBYTE(v18) = _dispatchPreconditionTest(_:)(v17);
  (*(void (**)(void *, void *))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }

  id v20 = objc_allocWithZone((Class)&OBJC_CLASS___SDAuthenticationApprovePrompt);
  sub_10019BA8C(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100189B20(a1, a2);
  uint64_t v14 = [v20 initWithData:isa];

  if (!v14)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v34 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v34, (uint64_t)qword_100656748);
    sub_10019BA8C(a1, a2);
    uint64_t v35 = sub_10019BA8C(a1, a2);
    uint64_t v31 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v36 = static os_log_type_t.error.getter(v31);
    if (os_log_type_enabled(v31, v36))
    {
      id v37 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v38 = swift_slowAlloc(32LL, -1LL);
      v65[0] = v38;
      *(_DWORD *)id v37 = 136315138;
      sub_10019BA8C(a1, a2);
      uint64_t v39 = Data.description.getter(a1, a2);
      uint64_t v41 = v40;
      sub_100189B20(a1, a2);
      *(void *)&__int128 v62 = sub_10018CDB4(v39, (unint64_t)v41, v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, (char *)&v62 + 8, v37 + 4, v37 + 12);
      swift_bridgeObjectRelease(v41);
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
      _os_log_impl( (void *)&_mh_execute_header,  v31,  v36,  "Failed to unwrap SDAuthenticationRequest (data: %s)",  v37,  0xCu);
      swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1LL, -1LL);
      swift_slowDealloc(v37, -1LL, -1LL);
    }

    else
    {
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
    }

uint64_t sub_100472458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return swift_task_switch(sub_100472470, 0LL, 0LL);
}

uint64_t sub_100472470()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10019A708(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24LL));
  *(void *)(v0 + 40) = sub_100183168(0LL, &qword_100645A00, off_1005C8830);
  *(void *)(v0 + 48) = &off_1005D7060;
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  uint64_t v2 = dword_10064FE74;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc(v2);
  *(void *)(v0 + 72) = v4;
  void *v4 = v0;
  v4[1] = sub_10048A99C;
  return sub_100344650(v0 + 16);
}

void sub_100472508(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v67 = a3;
  uint64_t v6 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v6);
  uint64_t v68 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for UUID(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v70 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = (void *)type metadata accessor for DispatchPredicate(0LL);
  uint64_t v15 = *(v14 - 1);
  __chkstk_darwin(v14);
  unint64_t v17 = (uint64_t *)((char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v69 = v3;
  uint64_t v18 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *unint64_t v17 = v18;
  (*(void (**)(void *, void, void *))(v15 + 104))( v17,  enum case for DispatchPredicate.onQueue(_:),  v14);
  id v19 = v18;
  LOBYTE(v18) = _dispatchPreconditionTest(_:)(v17);
  (*(void (**)(void *, void *))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }

  id v20 = objc_allocWithZone((Class)&OBJC_CLASS___SDAuthenticationPreRequest);
  sub_10019BA8C(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100189B20(a1, a2);
  uint64_t v14 = [v20 initWithData:isa];

  if (!v14)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v34 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v34, (uint64_t)qword_100656748);
    sub_10019BA8C(a1, a2);
    uint64_t v35 = sub_10019BA8C(a1, a2);
    uint64_t v31 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v36 = static os_log_type_t.error.getter(v31);
    if (os_log_type_enabled(v31, v36))
    {
      id v37 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v38 = swift_slowAlloc(32LL, -1LL);
      v75[0] = v38;
      *(_DWORD *)id v37 = 136315138;
      sub_10019BA8C(a1, a2);
      uint64_t v39 = Data.description.getter(a1, a2);
      uint64_t v41 = v40;
      sub_100189B20(a1, a2);
      *(void *)&__int128 v71 = sub_10018CDB4(v39, (unint64_t)v41, v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, (char *)&v71 + 8, v37 + 4, v37 + 12);
      swift_bridgeObjectRelease(v41);
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
      _os_log_impl( (void *)&_mh_execute_header,  v31,  v36,  "Failed to unwrap SDAuthenticationPreRequest (data: %s)",  v37,  0xCu);
      swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1LL, -1LL);
      swift_slowDealloc(v37, -1LL, -1LL);
    }

    else
    {
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
    }

uint64_t sub_100472CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return swift_task_switch(sub_100472D0C, 0LL, 0LL);
}

uint64_t sub_100472D0C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10019A708(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24LL));
  *(void *)(v0 + 40) = sub_100183168(0LL, &qword_100656B98, off_1005C8868);
  *(void *)(v0 + 48) = &off_1005D7068;
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  uint64_t v2 = dword_10064FE74;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc(v2);
  *(void *)(v0 + 72) = v4;
  void *v4 = v0;
  v4[1] = sub_10048A99C;
  return sub_100344650(v0 + 16);
}

void sub_100472DA4(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v85 = a3;
  uint64_t v7 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for UUID(0LL);
  uint64_t v87 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v86 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = (void *)type metadata accessor for DispatchPredicate(0LL);
  uint64_t v16 = *(v15 - 1);
  __chkstk_darwin(v15);
  uint64_t v18 = (void **)((char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  id v19 = *(void **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v18 = v19;
  (*(void (**)(void *, void, void *))(v16 + 104))( v18,  enum case for DispatchPredicate.onQueue(_:),  v15);
  id v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)(v18);
  (*(void (**)(void *, void *))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_35;
  }

  id v21 = objc_allocWithZone((Class)&OBJC_CLASS___SDAuthenticationRequest);
  sub_10019BA8C(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100189B20(a1, a2);
  uint64_t v15 = [v21 initWithData:isa];

  if (!v15)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v36 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v36, (uint64_t)qword_100656748);
    sub_10019BA8C(a1, a2);
    uint64_t v37 = sub_10019BA8C(a1, a2);
    __n128 v33 = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v38 = static os_log_type_t.error.getter(v33);
    if (os_log_type_enabled(v33, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v40 = swift_slowAlloc(32LL, -1LL);
      v92[0] = v40;
      *(_DWORD *)uint64_t v39 = 136315138;
      sub_10019BA8C(a1, a2);
      uint64_t v41 = Data.description.getter(a1, a2);
      unint64_t v43 = v42;
      sub_100189B20(a1, a2);
      *(void *)&__int128 v89 = sub_10018CDB4(v41, (unint64_t)v43, v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, (char *)&v89 + 8, v39 + 4, v39 + 12);
      swift_bridgeObjectRelease(v43);
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
      _os_log_impl( (void *)&_mh_execute_header,  v33,  v38,  "Failed to unwrap SDAuthenticationRequest (data: %s)",  v39,  0xCu);
      swift_arrayDestroy(v40, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1LL, -1LL);
      swift_slowDealloc(v39, -1LL, -1LL);
    }

    else
    {
      sub_100189B20(a1, a2);
      sub_100189B20(a1, a2);
    }

uint64_t sub_100473770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return swift_task_switch(sub_100473788, 0LL, 0LL);
}

uint64_t sub_100473788()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10019A708(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24LL));
  *(void *)(v0 + 40) = sub_100183168(0LL, &qword_100645A08, off_1005C8870);
  *(void *)(v0 + 48) = &off_1005D7070;
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  uint64_t v2 = dword_10064FE74;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc(v2);
  *(void *)(v0 + 72) = v4;
  void *v4 = v0;
  v4[1] = sub_10048A99C;
  return sub_100344650(v0 + 16);
}

void sub_100473820(uint64_t a1, id a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v6);
  uint64_t v87 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v90 = type metadata accessor for UUID(0LL);
  uint64_t v11 = *(void *)(v90 - 8);
  uint64_t v12 = __chkstk_darwin(v90);
  __n128 v88 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v86 - v15;
  __chkstk_darwin(v14);
  __int128 v89 = (char *)&v86 - v17;
  uint64_t v18 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v21 = (uint64_t *)((char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  id v22 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *id v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)(v21);
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if ((v22 & 1) == 0)
  {
    __break(1u);
LABEL_34:
    swift_once(&qword_100644408, sub_100458568);
    goto LABEL_7;
  }

  id v24 = objc_allocWithZone((Class)&OBJC_CLASS___SDAuthenticationResponse);
  sub_10019BA8C(a1, (unint64_t)a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100189B20(a1, (unint64_t)a2);
  a2 = [v24 initWithData:isa];

  if (!a2)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v39 = type metadata accessor for Logger(0LL);
    uint64_t v40 = sub_100186DE4(v39, (uint64_t)qword_100656748);
    uint64_t v36 = (os_log_s *)Logger.logObject.getter(v40);
    os_log_type_t v41 = static os_log_type_t.error.getter(v36);
    if (os_log_type_enabled(v36, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v41, "Failed to unwrap to SDAuthenticationResponse", v42, 2u);
      swift_slowDealloc(v42, -1LL, -1LL);
    }

    goto LABEL_13;
  }

  id v26 = [a2 sessionID];
  if (v26)
  {
    __n128 v27 = v26;
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    uint64_t v30 = v29;

    UUID.init(uuidString:)(v28, v30);
    __n128 v31 = swift_bridgeObjectRelease(v30);
    uint64_t v32 = v11;
    uint64_t v33 = v90;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48))(v10, 1LL, v90, v31) != 1)
    {
      uint64_t v43 = (uint64_t)v89;
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v89, v10, v33);
      char v44 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
      swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions, &v91, 32LL, 0LL);
      uint64_t v45 = *v44;
      if (*(void *)(v45 + 16) && (unint64_t v46 = sub_1003AD618(v43), (v47 & 1) != 0))
      {
        sub_10019A6C4(*(void *)(v45 + 56) + 40 * v46, (uint64_t)&v96);
        sub_1001CE0D0(&v96, (uint64_t)v99);
        swift_endAccess(&v91);
        uint64_t v48 = type metadata accessor for TaskPriority(0LL);
        uint64_t v49 = (uint64_t)v87;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56LL))(v87, 1LL, 1LL, v48);
        sub_10019A6C4((uint64_t)v99, (uint64_t)&v96);
        unint64_t v50 = (void *)swift_allocObject(&unk_1005E3368, 80LL, 7LL);
        v50[2] = 0LL;
        v50[3] = 0LL;
        sub_1001CE0D0(&v96, (uint64_t)(v50 + 4));
        v50[9] = a2;
        id v51 = a2;
        uint64_t v52 = sub_1001B37E8(v49, (uint64_t)&unk_100656B40, (uint64_t)v50);

        swift_release(v52);
        sub_10018709C(v99);
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v43, v33);
      }

      else
      {
        swift_endAccess(&v91);
        uint64_t v53 = (const char **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions);
        *(void *)&double v54 = swift_beginAccess( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions,  v95,  0LL,  0LL).n128_u64[0];
        uint64_t v55 = *v53;
        swift_bridgeObjectRetain(v55, v54);
        uint64_t v57 = (const char *)sub_1002DECC4(v56);
        swift_bridgeObjectRelease(v55);
        os_log_type_t v58 = (const char **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions);
        *(void *)&double v59 = swift_beginAccess( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions,  v94,  0LL,  0LL).n128_u64[0];
        id v60 = *v58;
        swift_bridgeObjectRetain(v60, v59);
        uint64_t v62 = sub_1002DECE8(v61);
        swift_bridgeObjectRelease(v60);
        v99[0] = v57;
        sub_10028B064((uint64_t)v62);
        uint64_t v63 = v99[0];
        uint64_t v64 = *((void *)v99[0] + 2);
        if (v64)
        {
          uint64_t v65 = v99[0] + 32;
          swift_bridgeObjectRetain(v99[0]);
          while (1)
          {
            sub_10019A6C4((uint64_t)v65, (uint64_t)&v91);
            uint64_t v67 = v92;
            uint64_t v66 = v93;
            sub_10019A708(&v91, v92);
            uint64_t v68 = *(void *)(v66 + 8);
            uint64_t v32 = v11;
            (*(void (**)(uint64_t))(v68 + 32))(v67);
            char v69 = static UUID.== infix(_:_:)(v16, v43);
            (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v90);
            if ((v69 & 1) != 0) {
              break;
            }
            sub_10018709C(&v91);
            v65 += 40;
            if (!--v64)
            {
              swift_bridgeObjectRelease(v63);
              goto LABEL_23;
            }
          }

          swift_bridgeObjectRelease(v63);
          sub_1001CE0D0(&v91, (uint64_t)&v96);
        }

        else
        {
LABEL_23:
          uint64_t v98 = 0LL;
          __int128 v96 = 0u;
          __int128 v97 = 0u;
        }

        swift_bridgeObjectRelease(v63);
        uint64_t v70 = v88;
        if (*((void *)&v97 + 1))
        {
          sub_1001CE0D0(&v96, (uint64_t)v99);
          uint64_t v71 = v100;
          uint64_t v72 = v101;
          sub_10019A708(v99, v100);
          (*(void (**)(id, uint64_t, uint64_t))(v72 + 56))(a2, v71, v72);

          (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v43, v90);
          sub_10018709C(v99);
        }

        else
        {
          sub_100187100((uint64_t)&v96, &qword_10064F2A0);
          if (qword_100644408 != -1) {
            swift_once(&qword_100644408, sub_100458568);
          }
          uint64_t v73 = type metadata accessor for Logger(0LL);
          sub_100186DE4(v73, (uint64_t)qword_100656748);
          uint64_t v74 = v90;
          uint64_t v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 16))(v70, v43, v90);
          uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
          os_log_type_t v77 = static os_log_type_t.error.getter(v76);
          if (os_log_type_enabled(v76, v77))
          {
            uint64_t v78 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v79 = (const char *)swift_slowAlloc(32LL, -1LL);
            v99[0] = v79;
            *(_DWORD *)uint64_t v78 = 136315138;
            uint64_t v80 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
            uint64_t v81 = dispatch thunk of CustomStringConvertible.description.getter(v90, v80);
            uint64_t v83 = (const char *)v82;
            *(void *)&__int128 v96 = sub_10018CDB4(v81, v82, (uint64_t *)v99);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, (char *)&v96 + 8, v78 + 4, v78 + 12);
            __n128 v84 = swift_bridgeObjectRelease(v83);
            uint64_t v85 = *(void (**)(char *, uint64_t, __n128))(v32 + 8);
            uint64_t v74 = v90;
            v85(v70, v90, v84);
            _os_log_impl((void *)&_mh_execute_header, v76, v77, "Could not find existing session for %s", v78, 0xCu);
            swift_arrayDestroy(v79, 1LL, (char *)&type metadata for Any + 8);
            uint64_t v43 = (uint64_t)v89;
            swift_slowDealloc(v79, -1LL, -1LL);
            swift_slowDealloc(v78, -1LL, -1LL);
          }

          else
          {

            uint64_t v85 = *(void (**)(char *, uint64_t, __n128))(v32 + 8);
            ((void (*)(char *, uint64_t))v85)(v70, v74);
          }

          ((void (*)(uint64_t, uint64_t))v85)(v43, v74);
        }
      }

      return;
    }

    sub_100187100((uint64_t)v10, &qword_10064DA60);
  }

  if (qword_100644408 != -1) {
    goto LABEL_34;
  }
LABEL_7:
  uint64_t v34 = type metadata accessor for Logger(0LL);
  uint64_t v35 = sub_100186DE4(v34, (uint64_t)qword_100656748);
  uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
  os_log_type_t v37 = static os_log_type_t.error.getter(v36);
  if (os_log_type_enabled(v36, v37))
  {
    os_log_type_t v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Message does not have a session ID", v38, 2u);
    swift_slowDealloc(v38, -1LL, -1LL);

LABEL_13:
    return;
  }
}

uint64_t sub_1004740F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return swift_task_switch(sub_10047410C, 0LL, 0LL);
}

uint64_t sub_10047410C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10019A708(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24LL));
  *(void *)(v0 + 40) = sub_100183168(0LL, &qword_100645A10, off_1005C8878);
  *(void *)(v0 + 48) = &off_1005D7078;
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  uint64_t v2 = dword_10064FE74;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc(v2);
  *(void *)(v0 + 72) = v4;
  void *v4 = v0;
  v4[1] = sub_10048A99C;
  return sub_100344650(v0 + 16);
}

void sub_1004741A4(uint64_t a1, id a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v6);
  uint64_t v73 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v76 = type metadata accessor for UUID(0LL);
  uint64_t v11 = *(void *)(v76 - 8);
  uint64_t v12 = __chkstk_darwin(v76);
  uint64_t v74 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v73 - v15;
  __chkstk_darwin(v14);
  uint64_t v75 = (char *)&v73 - v17;
  uint64_t v18 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v21 = (char **)((char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  id v22 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *id v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)(v21);
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if ((v22 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    swift_once(&qword_100644408, sub_100458568);
    goto LABEL_7;
  }

  id v24 = objc_allocWithZone((Class)&OBJC_CLASS___SDAuthenticationToken);
  sub_10019BA8C(a1, (unint64_t)a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100189B20(a1, (unint64_t)a2);
  a2 = [v24 initWithData:isa];

  if (!a2)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v38 = type metadata accessor for Logger(0LL);
    uint64_t v39 = sub_100186DE4(v38, (uint64_t)qword_100656748);
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v40 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, v40))
    {
      os_log_type_t v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v40, "Failed to unwrap to SDAuthenticationToken", v41, 2u);
      swift_slowDealloc(v41, -1LL, -1LL);
    }

    goto LABEL_13;
  }

  id v26 = [a2 sessionID];
  if (v26)
  {
    __n128 v27 = v26;
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    uint64_t v30 = v29;

    UUID.init(uuidString:)(v28, v30);
    __n128 v31 = swift_bridgeObjectRelease(v30);
    uint64_t v32 = v76;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48))(v10, 1LL, v76, v31) != 1)
    {
      uint64_t v42 = (uint64_t)v75;
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v75, v10, v32);
      uint64_t v43 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
      swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions, &v77, 32LL, 0LL);
      uint64_t v44 = *v43;
      if (*(void *)(v44 + 16) && (unint64_t v45 = sub_1003AD618(v42), (v46 & 1) != 0))
      {
        sub_10019A6C4(*(void *)(v44 + 56) + 40 * v45, (uint64_t)&v81);
        sub_1001CE0D0(&v81, (uint64_t)v84);
        swift_endAccess(&v77);
        uint64_t v47 = type metadata accessor for TaskPriority(0LL);
        uint64_t v48 = (uint64_t)v73;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56LL))(v73, 1LL, 1LL, v47);
        sub_10019A6C4((uint64_t)v84, (uint64_t)&v81);
        uint64_t v49 = (void *)swift_allocObject(&unk_1005E3390, 80LL, 7LL);
        v49[2] = 0LL;
        v49[3] = 0LL;
        sub_1001CE0D0(&v81, (uint64_t)(v49 + 4));
        v49[9] = a2;
        id v50 = a2;
        uint64_t v51 = sub_1001B37E8(v48, (uint64_t)&unk_100656B58, (uint64_t)v49);

        swift_release(v51);
        sub_10018709C(v84);
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v42, v32);
      }

      else
      {
        swift_endAccess(&v77);
        uint64_t v52 = (const char **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions);
        *(void *)&double v53 = swift_beginAccess( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions,  v80,  0LL,  0LL).n128_u64[0];
        double v54 = *v52;
        uint64_t v55 = *((void *)*v52 + 2);
        if (v55)
        {
          uint64_t v56 = (uint64_t)(v54 + 32);
          swift_bridgeObjectRetain(*v52, v53);
          while (1)
          {
            sub_10019A6C4(v56, (uint64_t)&v77);
            uint64_t v58 = v78;
            uint64_t v57 = v79;
            sub_10019A708(&v77, v78);
            (*(void (**)(uint64_t))(*(void *)(*(void *)(v57 + 8) + 8LL) + 32LL))(v58);
            LOBYTE(v57) = static UUID.== infix(_:_:)(v16, v42);
            (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v32);
            if ((v57 & 1) != 0) {
              break;
            }
            sub_10018709C(&v77);
            v56 += 40LL;
            if (!--v55) {
              goto LABEL_24;
            }
          }

          sub_1001CE0D0(&v77, (uint64_t)&v81);
        }

        else
        {
          swift_bridgeObjectRetain(*v52, v53);
LABEL_24:
          uint64_t v83 = 0LL;
          __int128 v81 = 0u;
          __int128 v82 = 0u;
        }

        swift_bridgeObjectRelease(v54);
        double v59 = v74;
        if (*((void *)&v82 + 1))
        {
          sub_1001CE0D0(&v81, (uint64_t)v84);
          sub_10019A708(v84, v84[3]);
          sub_100334280(a2);

          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v42, v32);
          sub_10018709C(v84);
        }

        else
        {
          sub_100187100((uint64_t)&v81, &qword_100656B48);
          if (qword_100644408 != -1) {
            swift_once(&qword_100644408, sub_100458568);
          }
          uint64_t v60 = type metadata accessor for Logger(0LL);
          sub_100186DE4(v60, (uint64_t)qword_100656748);
          uint64_t v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v59, v42, v32);
          uint64_t v62 = (os_log_s *)Logger.logObject.getter(v61);
          os_log_type_t v63 = static os_log_type_t.error.getter(v62);
          if (os_log_type_enabled(v62, v63))
          {
            uint64_t v64 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v65 = swift_slowAlloc(32LL, -1LL);
            v84[0] = v65;
            *(_DWORD *)uint64_t v64 = 136315138;
            uint64_t v73 = (char *)(v64 + 4);
            uint64_t v66 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
            uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter(v32, v66);
            char v69 = (const char *)v68;
            *(void *)&__int128 v81 = sub_10018CDB4(v67, v68, v84);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, (char *)&v81 + 8, v73, v64 + 12);
            __n128 v70 = swift_bridgeObjectRelease(v69);
            uint64_t v71 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
            v71(v59, v32, v70);
            _os_log_impl((void *)&_mh_execute_header, v62, v63, "Could not find existing session for %s", v64, 0xCu);
            swift_arrayDestroy(v65, 1LL, (char *)&type metadata for Any + 8);
            uint64_t v72 = v65;
            uint64_t v42 = (uint64_t)v75;
            swift_slowDealloc(v72, -1LL, -1LL);
            swift_slowDealloc(v64, -1LL, -1LL);
          }

          else
          {

            uint64_t v71 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
            ((void (*)(char *, uint64_t))v71)(v59, v32);
          }

          ((void (*)(uint64_t, uint64_t))v71)(v42, v32);
        }
      }

      return;
    }

    sub_100187100((uint64_t)v10, &qword_10064DA60);
  }

  if (qword_100644408 != -1) {
    goto LABEL_35;
  }
LABEL_7:
  uint64_t v33 = type metadata accessor for Logger(0LL);
  uint64_t v34 = sub_100186DE4(v33, (uint64_t)qword_100656748);
  uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
  os_log_type_t v36 = static os_log_type_t.error.getter(v35);
  if (os_log_type_enabled(v35, v36))
  {
    os_log_type_t v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Message does not have a session ID", v37, 2u);
    swift_slowDealloc(v37, -1LL, -1LL);

LABEL_13:
    return;
  }
}

uint64_t sub_1004749C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return swift_task_switch(sub_1004749E0, 0LL, 0LL);
}

uint64_t sub_1004749E0()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10019A708(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24LL));
  *(void *)(v0 + 40) = sub_100183168(0LL, &qword_100645A18, off_1005C8880);
  *(void *)(v0 + 48) = &off_1005D7080;
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  uint64_t v2 = dword_10064FE74;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc(v2);
  *(void *)(v0 + 72) = v4;
  void *v4 = v0;
  v4[1] = sub_10048A99C;
  return sub_100344650(v0 + 16);
}

void sub_100474A78(uint64_t a1, char *a2)
{
  uint64_t v5 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v5);
  __int128 v82 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v84 = type metadata accessor for UUID(0LL);
  uint64_t v86 = *(void *)(v84 - 8);
  uint64_t v10 = __chkstk_darwin(v84);
  __int128 v81 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v81 - v13;
  __chkstk_darwin(v12);
  uint64_t v85 = (char *)&v81 - v15;
  uint64_t v16 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char **)((char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v83 = v2;
  uint64_t v20 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  id v21 = v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)(v19);
  (*(void (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) == 0)
  {
    __break(1u);
LABEL_45:
    swift_once(&qword_100644408, sub_100458568);
    goto LABEL_7;
  }

  id v22 = objc_allocWithZone((Class)&OBJC_CLASS___SDAuthenticationConfirmation);
  sub_10019BA8C(a1, (unint64_t)a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100189B20(a1, (unint64_t)a2);
  a2 = (char *)[v22 initWithData:isa];

  if (!a2)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v37 = type metadata accessor for Logger(0LL);
    uint64_t v38 = sub_100186DE4(v37, (uint64_t)qword_100656748);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v39 = static os_log_type_t.error.getter(v34);
    if (os_log_type_enabled(v34, v39))
    {
      os_log_type_t v40 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v39, "Failed to unwrap to SDAuthenticationConfirmation", v40, 2u);
      swift_slowDealloc(v40, -1LL, -1LL);
    }

    goto LABEL_13;
  }

  id v24 = [a2 sessionID];
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    uint64_t v28 = v27;

    UUID.init(uuidString:)(v26, v28);
    __n128 v29 = swift_bridgeObjectRelease(v28);
    uint64_t v30 = v86;
    uint64_t v31 = v84;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v86 + 48))(v9, 1LL, v84, v29) != 1)
    {
      uint64_t v41 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v85, v9, v31);
      uint64_t v42 = (uint64_t *)(v83 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
      swift_beginAccess(v83 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions, &v94, 32LL, 0LL);
      uint64_t v43 = *v42;
      if (*(void *)(v43 + 16) && (unint64_t v44 = sub_1003AD618(v41), (v45 & 1) != 0))
      {
        sub_10019A6C4(*(void *)(v43 + 56) + 40 * v44, (uint64_t)&v98);
        sub_1001CE0D0(&v98, (uint64_t)v101);
        swift_endAccess(&v94);
        uint64_t v46 = type metadata accessor for TaskPriority(0LL);
        uint64_t v47 = (uint64_t)v82;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56LL))(v82, 1LL, 1LL, v46);
        sub_10019A6C4((uint64_t)v101, (uint64_t)&v98);
        uint64_t v48 = (void *)swift_allocObject(&unk_1005E33B8, 80LL, 7LL);
        v48[2] = 0LL;
        v48[3] = 0LL;
        sub_1001CE0D0(&v98, (uint64_t)(v48 + 4));
        v48[9] = a2;
        uint64_t v49 = a2;
        uint64_t v50 = sub_1001B37E8(v47, (uint64_t)&unk_100656B70, (uint64_t)v48);

        swift_release(v50);
        sub_10018709C(v101);
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v41, v31);
      }

      else
      {
        __int128 v82 = a2;
        swift_endAccess(&v94);
        uint64_t v51 = (const char **)(v83 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions);
        *(void *)&double v52 = swift_beginAccess( v83 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions,  &v97,  0LL,  0LL).n128_u64[0];
        double v53 = *v51;
        uint64_t v54 = *((void *)*v51 + 2);
        if (v54)
        {
          uint64_t v55 = (uint64_t)(v53 + 32);
          swift_bridgeObjectRetain(*v51, v52);
          while (1)
          {
            sub_10019A6C4(v55, (uint64_t)&v94);
            uint64_t v57 = v95;
            uint64_t v56 = v96;
            sub_10019A708(&v94, v95);
            (*(void (**)(uint64_t))(*(void *)(*(void *)(v56 + 8) + 8LL) + 32LL))(v57);
            LOBYTE(vsub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = static UUID.== infix(_:_:)(v14, v41);
            (*(void (**)(char *, uint64_t))(v86 + 8))(v14, v31);
            if ((v56 & 1) != 0) {
              break;
            }
            sub_10018709C(&v94);
            v55 += 40LL;
            if (!--v54) {
              goto LABEL_24;
            }
          }

          sub_1001CE0D0(&v94, (uint64_t)&v98);
        }

        else
        {
          swift_bridgeObjectRetain(*v51, v52);
LABEL_24:
          uint64_t v100 = 0LL;
          __int128 v98 = 0u;
          __int128 v99 = 0u;
        }

        swift_bridgeObjectRelease(v53);
        uint64_t v58 = v86;
        if (*((void *)&v99 + 1))
        {
          sub_1001CE0D0(&v98, (uint64_t)v101);
          sub_10019A708(v101, v101[3]);
          double v59 = v82;
          sub_1002D7954(v82);

          (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v41, v31);
          sub_10018709C(v101);
        }

        else
        {
          sub_100187100((uint64_t)&v98, &qword_100656B60);
          uint64_t v60 = (const char **)(v83 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions);
          *(void *)&double v61 = swift_beginAccess( v83 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions,  &v90,  0LL,  0LL).n128_u64[0];
          uint64_t v62 = *v60;
          uint64_t v63 = *((void *)*v60 + 2);
          if (v63)
          {
            uint64_t v64 = (uint64_t)(v62 + 32);
            swift_bridgeObjectRetain(*v60, v61);
            while (1)
            {
              sub_10019A6C4(v64, (uint64_t)&v87);
              uint64_t v66 = v88;
              uint64_t v65 = v89;
              sub_10019A708(&v87, v88);
              (*(void (**)(uint64_t))(*(void *)(*(void *)(v65 + 8) + 8LL) + 32LL))(v66);
              LOBYTE(v65) = static UUID.== infix(_:_:)(v14, v85);
              (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v31);
              if ((v65 & 1) != 0) {
                break;
              }
              sub_10018709C(&v87);
              v64 += 40LL;
              if (!--v63) {
                goto LABEL_34;
              }
            }

            sub_1001CE0D0(&v87, (uint64_t)&v91);
          }

          else
          {
            swift_bridgeObjectRetain(*v60, v61);
LABEL_34:
            uint64_t v93 = 0LL;
            __int128 v91 = 0u;
            __int128 v92 = 0u;
          }

          swift_bridgeObjectRelease(v62);
          uint64_t v67 = v85;
          unint64_t v68 = v81;
          if (*((void *)&v92 + 1))
          {
            sub_1001CE0D0(&v91, (uint64_t)&v94);
            sub_10019A708(&v94, v95);
            sub_1003DB70C();

            (*(void (**)(char *, uint64_t))(v58 + 8))(v67, v31);
            sub_10018709C(&v94);
          }

          else
          {
            sub_100187100((uint64_t)&v91, &qword_100656A68);
            if (qword_100644408 != -1) {
              swift_once(&qword_100644408, sub_100458568);
            }
            uint64_t v69 = type metadata accessor for Logger(0LL);
            sub_100186DE4(v69, (uint64_t)qword_100656748);
            uint64_t v70 = (*(uint64_t (**)(char *, char *, uint64_t))(v58 + 16))(v68, v67, v31);
            uint64_t v71 = (os_log_s *)Logger.logObject.getter(v70);
            os_log_type_t v72 = static os_log_type_t.error.getter(v71);
            if (os_log_type_enabled(v71, v72))
            {
              uint64_t v73 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v74 = swift_slowAlloc(32LL, -1LL);
              v101[0] = v74;
              *(_DWORD *)uint64_t v73 = 136315138;
              uint64_t v75 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
              uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter(v31, v75);
              uint64_t v78 = (const char *)v77;
              *(void *)&__int128 v98 = sub_10018CDB4(v76, v77, v101);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, (char *)&v98 + 8, v73 + 4, v73 + 12);
              __n128 v79 = swift_bridgeObjectRelease(v78);
              uint64_t v80 = *(void (**)(char *, uint64_t, __n128))(v86 + 8);
              v80(v68, v31, v79);
              _os_log_impl((void *)&_mh_execute_header, v71, v72, "Could not find existing session for %s", v73, 0xCu);
              swift_arrayDestroy(v74, 1LL, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v74, -1LL, -1LL);
              uint64_t v67 = v85;
              swift_slowDealloc(v73, -1LL, -1LL);
            }

            else
            {

              uint64_t v80 = *(void (**)(char *, uint64_t, __n128))(v58 + 8);
              ((void (*)(char *, uint64_t))v80)(v68, v31);
            }

            ((void (*)(char *, uint64_t))v80)(v67, v31);
          }
        }
      }

      return;
    }

    sub_100187100((uint64_t)v9, &qword_10064DA60);
  }

  if (qword_100644408 != -1) {
    goto LABEL_45;
  }
LABEL_7:
  uint64_t v32 = type metadata accessor for Logger(0LL);
  uint64_t v33 = sub_100186DE4(v32, (uint64_t)qword_100656748);
  uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  os_log_type_t v35 = static os_log_type_t.error.getter(v34);
  if (os_log_type_enabled(v34, v35))
  {
    os_log_type_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Message does not have a session ID", v36, 2u);
    swift_slowDealloc(v36, -1LL, -1LL);

LABEL_13:
    return;
  }
}

uint64_t sub_1004753E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return swift_task_switch(sub_1004753FC, 0LL, 0LL);
}

uint64_t sub_1004753FC()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10019A708(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24LL));
  *(void *)(v0 + 40) = sub_100183168(0LL, &qword_100645A20, off_1005C8838);
  *(void *)(v0 + 48) = &off_1005D7088;
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  uint64_t v2 = dword_10064FE74;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc(v2);
  *(void *)(v0 + 72) = v4;
  void *v4 = v0;
  v4[1] = sub_10048A99C;
  return sub_100344650(v0 + 16);
}

void sub_100475494(char *a1, uint64_t a2)
{
  id v3 = &a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone];
  swift_beginAccess( &a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone],  &v43,  33LL,  0LL);
  sub_1001C9860((uint64_t)v45, (uint64_t)v3, &qword_100654080);
  swift_endAccess(&v43);
  uint64_t v4 = (void *)objc_opt_self(&OBJC_CLASS___NSUserDefaults);
  id v5 = [v4 standardUserDefaults];
  uint64_t v6 = *((void *)v3 + 3);
  if (!v6) {
    goto LABEL_4;
  }
  uint64_t v7 = *((void *)v3 + 4);
  uint64_t v8 = sub_10019A708(v3, *((void *)v3 + 3));
  uint64_t v9 = *(void *)(v6 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v9 + 16))(v11);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v6);
  if (v13)
  {
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
  }

  else
  {
LABEL_4:
    NSString v14 = 0LL;
  }

  NSString v15 = String._bridgeToObjectiveC()();
  [v5 setObject:v14 forKey:v15];

  swift_unknownObjectRelease(v14);
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = sub_100186DE4(v16, (uint64_t)qword_100656748);
  uint64_t v18 = a1;
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v42 = v4;
    id v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v22 = swift_slowAlloc(32LL, -1LL);
    v45[0] = v22;
    *(_DWORD *)id v21 = 136315138;
    uint64_t v23 = *((void *)v3 + 3);
    if (!v23) {
      goto LABEL_10;
    }
    uint64_t v24 = *((void *)v3 + 4);
    uint64_t v25 = sub_10019A708(v3, *((void *)v3 + 3));
    uint64_t v39 = (uint64_t)&v39;
    uint64_t v41 = v17;
    uint64_t v26 = *(void *)(v23 - 8);
    __chkstk_darwin(v25);
    uint64_t v40 = v22;
    uint64_t v28 = (char *)&v39 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v26 + 16))(v28);
    uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
    uint64_t v31 = v30;
    uint64_t v32 = v28;
    uint64_t v22 = v40;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v32, v23);
    if (!v31)
    {
LABEL_10:
      swift_bridgeObjectRelease(0LL);
      uint64_t v31 = (const char *)0xE90000000000003ELL;
      uint64_t v29 = 0x676E697373696D3CLL;
    }

    uint64_t v4 = v42;
    uint64_t v43 = sub_10018CDB4(v29, (unint64_t)v31, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v21 + 4, v21 + 12);

    swift_bridgeObjectRelease(v31);
    _os_log_impl( (void *)&_mh_execute_header,  v19,  v20,  "Recorded last mac that put phone into assert delay: %s",  v21,  0xCu);
    swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1LL, -1LL);
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  else
  {
  }

  id v33 = [v4 standardUserDefaults];
  NSString v34 = String._bridgeToObjectiveC()();
  [v33 setBool:1 forKey:v34];

  os_log_type_t v36 = (os_log_s *)Logger.logObject.getter(v35);
  os_log_type_t v37 = static os_log_type_t.default.getter(v36);
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v38 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v36,  v37,  "Recorded Oneness unlock, showing notification on next phone unlock",  v38,  2u);
    swift_slowDealloc(v38, -1LL, -1LL);
  }
}

void sub_100475930()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (void *)((char *)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  id v5 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  void *v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    sub_10045886C((uint64_t)v14);
    uint64_t v7 = v15;
    if (v15)
    {
      uint64_t v8 = v16;
      sub_10019A708(v14, v15);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
      uint64_t v10 = v9;
      sub_10018709C(v14);
      if (v10)
      {
        id v11 = [(id)objc_opt_self(SDAutoUnlockNotificationsManager) sharedManager];
        NSString v12 = String._bridgeToObjectiveC()();
        objc_msgSend(v11, "showAuthenticatedSiriForDeviceID:", v12, swift_bridgeObjectRelease(v10).n128_f64[0]);
      }
    }

    else
    {
      sub_100187100((uint64_t)v14, &qword_100654080);
    }
  }

  else
  {
    __break(1u);
  }

void sub_100475AA0(const char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v67 = (char *)a2;
  uint64_t v64 = a1;
  uint64_t v63 = a3;
  uint64_t v5 = type metadata accessor for UUID(0LL);
  uint64_t v68 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v65 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v66 = sub_100183098(&qword_100646130);
  __chkstk_darwin(v66);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098(&qword_10064DA60);
  uint64_t v10 = __chkstk_darwin(v9);
  NSString v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v62 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v62 - v16;
  uint64_t v18 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v21 = (uint64_t *)((char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v22 = *(void **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *id v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)(v21);
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if ((v22 & 1) == 0)
  {
    __break(1u);
    return;
  }

  uint64_t v24 = (uint64_t)v17;
  UUID.init(uuidString:)(v64, v67);
  uint64_t v25 = (const char **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions);
  *(void *)&double v26 = swift_beginAccess( v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions,  v76,  0LL,  0LL).n128_u64[0];
  uint64_t v27 = *v25;
  swift_bridgeObjectRetain(v27, v26);
  uint64_t v29 = sub_1002DE904(v28);
  swift_bridgeObjectRelease(v27);
  uint64_t v30 = (const char **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions);
  *(void *)&double v31 = swift_beginAccess( v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions,  v75,  0LL,  0LL).n128_u64[0];
  uint64_t v32 = *v30;
  swift_bridgeObjectRetain(v32, v31);
  NSString v34 = sub_1002DE928(v33);
  swift_bridgeObjectRelease(v32);
  *(void *)&__int128 v70 = v29;
  sub_10028A9AC((uint64_t)v34);
  uint64_t v35 = v70;
  os_log_type_t v36 = (const char **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions);
  *(void *)&double v37 = swift_beginAccess( v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions,  v74,  0LL,  0LL).n128_u64[0];
  uint64_t v38 = *v36;
  swift_bridgeObjectRetain(v38, v37);
  uint64_t v40 = sub_1002DEA8C(v39);
  swift_bridgeObjectRelease(v38);
  *(void *)&__int128 v70 = v35;
  sub_10028A9AC((uint64_t)v40);
  uint64_t v41 = v70;
  uint64_t v42 = (const char **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions);
  *(void *)&double v43 = swift_beginAccess( v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions,  v73,  0LL,  0LL).n128_u64[0];
  uint64_t v44 = *v42;
  swift_bridgeObjectRetain(v44, v43);
  uint64_t v46 = sub_1002DEAB0(v45);
  swift_bridgeObjectRelease(v44);
  *(void *)&__int128 v70 = v41;
  sub_10028A9AC((uint64_t)v46);
  uint64_t v47 = (const char *)v70;
  uint64_t v48 = *(void *)(v70 + 16);
  if (!v48)
  {
LABEL_13:
    double v61 = (_OWORD *)v63;
    *(void *)(v63 + 32) = 0LL;
    *double v61 = 0u;
    v61[1] = 0u;
    goto LABEL_16;
  }

  uint64_t v49 = v70 + 32;
  uint64_t v64 = (const char *)v70;
  swift_bridgeObjectRetain((const char *)v70);
  uint64_t v67 = v15;
  uint64_t v69 = v24;
  while (1)
  {
    sub_10019A6C4(v49, (uint64_t)&v70);
    uint64_t v50 = v71;
    uint64_t v51 = v72;
    sub_10019A708(&v70, v71);
    (*(void (**)(uint64_t, uint64_t))(v51 + 32))(v50, v51);
    uint64_t v52 = v68;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v15, 0LL, 1LL, v5);
    uint64_t v53 = (uint64_t)&v8[*(int *)(v66 + 48)];
    sub_1001915A4((uint64_t)v15, (uint64_t)v8, &qword_10064DA60);
    sub_1001915A4(v69, v53, &qword_10064DA60);
    uint64_t v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
    if (v54(v8, 1LL, v5) == 1) {
      break;
    }
    sub_1001915A4((uint64_t)v8, (uint64_t)v12, &qword_10064DA60);
    if (v54((char *)v53, 1LL, v5) == 1)
    {
      sub_100187100((uint64_t)v67, &qword_10064DA60);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v12, v5);
      goto LABEL_5;
    }

    uint64_t v55 = v68;
    uint64_t v56 = v65;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v65, v53, v5);
    uint64_t v57 = sub_100183F14( &qword_100646148,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    char v58 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v56, v5, v57);
    double v59 = *(void (**)(char *, uint64_t))(v55 + 8);
    uint64_t v60 = v56;
    uint64_t v24 = v69;
    v59(v60, v5);
    sub_100187100((uint64_t)v67, &qword_10064DA60);
    v59(v12, v5);
    sub_100187100((uint64_t)v8, &qword_10064DA60);
    if ((v58 & 1) != 0) {
      goto LABEL_15;
    }
LABEL_6:
    sub_10018709C(&v70);
    v49 += 40LL;
    --v48;
    uint64_t v15 = v67;
    if (!v48)
    {
      uint64_t v47 = v64;
      swift_bridgeObjectRelease(v64);
      goto LABEL_13;
    }
  }

  sub_100187100((uint64_t)v15, &qword_10064DA60);
  if (v54((char *)v53, 1LL, v5) != 1)
  {
LABEL_5:
    sub_100187100((uint64_t)v8, &qword_100646130);
    uint64_t v24 = v69;
    goto LABEL_6;
  }

  sub_100187100((uint64_t)v8, &qword_10064DA60);
  uint64_t v24 = v69;
LABEL_15:
  uint64_t v47 = v64;
  swift_bridgeObjectRelease(v64);
  sub_1001CE0D0(&v70, v63);
LABEL_16:
  sub_100187100(v24, &qword_10064DA60);
  swift_bridgeObjectRelease(v47);
}

uint64_t sub_100476340()
{
  return type metadata accessor for SDAuthenticationManager(0LL);
}

uint64_t type metadata accessor for SDAuthenticationManager(uint64_t a1)
{
  return sub_1001A4AD0(a1, (uint64_t *)&unk_1006568A0, (uint64_t)&nominal type descriptor for SDAuthenticationManager);
}

void sub_10047635C(uint64_t a1)
{
  v6[0] = "\b";
  v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[2] = (char *)&value witness table for () + 64;
  v6[3] = (char *)&value witness table for () + 64;
  v6[4] = (char *)&value witness table for () + 64;
  v6[5] = (char *)&value witness table for () + 64;
  v6[6] = (char *)&value witness table for () + 64;
  v6[7] = (char *)&value witness table for () + 64;
  v6[8] = (char *)&value witness table for () + 64;
  v6[9] = (char *)&value witness table for () + 64;
  v6[10] = &unk_1004DCDE0;
  v6[11] = &unk_1004DCDE0;
  v6[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[14] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[16] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[17] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[18] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[19] = &unk_1004DCDF8;
  v6[20] = &unk_1004DCE10;
  v6[21] = (char *)&value witness table for Builtin.Int64 + 64;
  uint64_t v2 = type metadata accessor for StateMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v6[22] = *(void *)(v2 - 8) + 64LL;
    v6[23] = (char *)&value witness table for Builtin.NativeObject + 64;
    v6[24] = &unk_1004DCE28;
    v6[25] = &unk_1004DCE28;
    v6[26] = &unk_1004DCDF8;
    v6[27] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v6[28] = &unk_1004DCE10;
    v6[29] = &unk_1004DCE28;
    sub_1001C1100( 319LL,  (unint64_t *)&qword_100645EF0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
    if (v5 <= 0x3F)
    {
      v6[30] = *(void *)(v4 - 8) + 64LL;
      v6[31] = &unk_1004DCE10;
      v6[32] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[33] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[34] = (char *)&value witness table for () + 64;
      v6[35] = (char *)&value witness table for () + 64;
      v6[36] = (char *)&value witness table for () + 64;
      v6[37] = (char *)&value witness table for () + 64;
      v6[38] = (char *)&value witness table for () + 64;
      v6[39] = &unk_1004DCE10;
      swift_updateClassMetadata2(a1, 256LL, 40LL, v6, a1 + 80);
    }
  }

uint64_t type metadata accessor for StateMetrics(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_100656998, (uint64_t)&nominal type descriptor for StateMetrics);
}

uint64_t sub_1004764D0(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a1;
  uint64_t v4 = sub_100183098(&qword_10064D6E8);
  __chkstk_darwin(v4);
  uint64_t v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v7 = type metadata accessor for RegistrationState(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v11 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v26[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v15 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)(v14);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    uint64_t v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
    swift_beginAccess(v18, v26, 32LL, 0LL);
    uint64_t v19 = *v18;
    if (*(void *)(v19 + 16))
    {
      swift_bridgeObjectRetain(a2);
      uint64_t v20 = sub_1003AD53C(v25, a2);
      if ((v21 & 1) != 0)
      {
        sub_1001A4B84( *(void *)(v19 + 56) + *(void *)(v8 + 72) * v20,  (uint64_t)v6,  type metadata accessor for RegistrationState);
        uint64_t v22 = 0LL;
      }

      else
      {
        uint64_t v22 = 1LL;
      }

      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v22, 1LL, v7);
      __n128 v23 = swift_bridgeObjectRelease(a2);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1LL, v7, v23) != 1)
      {
        sub_1001A4B40((uint64_t)v6, (uint64_t)v10, type metadata accessor for RegistrationState);
        swift_endAccess(v26);
        uint64_t v24 = v10[*(int *)(v7 + 20)];
        sub_1001A4BC8((uint64_t)v10, type metadata accessor for RegistrationState);
        return v24;
      }
    }

    else
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1LL, 1LL, v7);
    }

    sub_100187100((uint64_t)v6, &qword_10064D6E8);
    swift_endAccess(v26);
    return 0LL;
  }

  __break(1u);
  return result;
}

uint64_t sub_10047672C(uint64_t a1, const char *a2)
{
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v3 = sub_100183098(&qword_10064D6E8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v38 - v7;
  uint64_t v9 = type metadata accessor for RegistrationState(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v39 = (uint64_t)&v38 - v14;
  uint64_t v15 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t *)((char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v19 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  id v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)(v18);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) != 0)
  {
    uint64_t v22 = (const char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
    __n128 v23 = swift_beginAccess( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID,  v43,  32LL,  0LL);
    uint64_t v24 = *v22;
    if (!*((void *)*v22 + 2))
    {
      uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56);
      v29(v8, 1LL, 1LL, v9, v23);
      uint64_t v26 = v40;
      uint64_t v25 = v41;
LABEL_8:
      sub_100187100((uint64_t)v8, &qword_10064D6E8);
      swift_endAccess(v43);
      swift_bridgeObjectRetain(v25);
      Date.init()(v31);
      uint64_t v32 = type metadata accessor for Date(0LL);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56LL))(v6, 0LL, 1LL, v32);
      v6[*(int *)(v9 + 20)] = 0;
      ((void (*)(char *, void, uint64_t, uint64_t))v29)(v6, 0LL, 1LL, v9);
      swift_beginAccess(v22, v43, 33LL, 0LL);
      sub_1002E570C((uint64_t)v6, v26, (uint64_t)v25);
      return swift_endAccess(v43);
    }

    uint64_t v25 = v41;
    swift_bridgeObjectRetain(v41, v23.n128_f64[0]);
    uint64_t v26 = v40;
    uint64_t v27 = sub_1003AD53C(v40, (uint64_t)v25);
    if ((v28 & 1) != 0)
    {
      sub_1001A4B84( *((void *)v24 + 7) + *(void *)(v10 + 72) * v27,  (uint64_t)v8,  type metadata accessor for RegistrationState);
      uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v29)(v8, 0LL, 1LL, v9);
    }

    else
    {
      uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v29)(v8, 1LL, 1LL, v9);
    }

    __n128 v30 = swift_bridgeObjectRelease(v25);
    uint64_t v33 = v39;
    sub_1001A4B40((uint64_t)v8, v39, type metadata accessor for RegistrationState);
    uint64_t v34 = swift_endAccess(v43);
    Date.init()(v34);
    uint64_t v35 = type metadata accessor for Date(0LL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56LL))(v13, 0LL, 1LL, v35);
    v13[*(int *)(v9 + 20)] = *(_BYTE *)(v33 + *(int *)(v9 + 20));
    swift_beginAccess(v22, v43, 33LL, 0LL);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v22);
    uint64_t v42 = *v22;
    *uint64_t v22 = (const char *)0x8000000000000000LL;
    sub_100481D40((uint64_t)v13, v26, (uint64_t)v25, isUniquelyReferenced_nonNull_native, (uint64_t)v6);
    double v37 = *v22;
    *uint64_t v22 = v42;
    swift_bridgeObjectRelease(v37);
    swift_endAccess(v43);
    sub_100187100((uint64_t)v6, &qword_10064D6E8);
    return sub_1001A4BC8(v33, type metadata accessor for RegistrationState);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_100476AF0(uint64_t a1, const char *a2)
{
  uint64_t v35 = a1;
  uint64_t v4 = sub_100183098(&qword_10064D6E8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t v10 = type metadata accessor for RegistrationState(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v34 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)(v16);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    id v20 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
    __n128 v21 = swift_beginAccess( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID,  v36,  32LL,  0LL);
    uint64_t v22 = *v20;
    if (!*(void *)(*v20 + 16))
    {
      uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
      v26(v9, 1LL, 1LL, v10, v21);
      uint64_t v23 = v35;
LABEL_8:
      sub_100187100((uint64_t)v9, &qword_10064D6E8);
      swift_endAccess(v36);
      uint64_t v28 = type metadata accessor for Date(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56LL))(v7, 1LL, 1LL, v28);
      v7[*(int *)(v10 + 20)] = 0;
      ((void (*)(char *, void, uint64_t, uint64_t))v26)(v7, 0LL, 1LL, v10);
      *(void *)&double v29 = swift_beginAccess(v20, v36, 33LL, 0LL).n128_u64[0];
      swift_bridgeObjectRetain(a2, v29);
      sub_1002E570C((uint64_t)v7, v23, (uint64_t)a2);
      return swift_endAccess(v36);
    }

    swift_bridgeObjectRetain(a2, v21.n128_f64[0]);
    uint64_t v23 = v35;
    uint64_t v24 = sub_1003AD53C(v35, (uint64_t)a2);
    if ((v25 & 1) != 0)
    {
      sub_1001A4B84( *(void *)(v22 + 56) + *(void *)(v11 + 72) * v24,  (uint64_t)v9,  type metadata accessor for RegistrationState);
      uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v26)(v9, 0LL, 1LL, v10);
    }

    else
    {
      uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v26)(v9, 1LL, 1LL, v10);
    }

    __n128 v27 = swift_bridgeObjectRelease(a2);
    uint64_t v30 = v34;
    sub_1001A4B40((uint64_t)v9, v34, type metadata accessor for RegistrationState);
    swift_endAccess(v36);
    uint64_t v31 = type metadata accessor for Date(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56LL))(v7, 1LL, 1LL, v31);
    v7[*(int *)(v10 + 20)] = *(_BYTE *)(v30 + *(int *)(v10 + 20));
    ((void (*)(char *, void, uint64_t, uint64_t))v26)(v7, 0LL, 1LL, v10);
    *(void *)&double v32 = swift_beginAccess(v20, v36, 33LL, 0LL).n128_u64[0];
    swift_bridgeObjectRetain(a2, v32);
    sub_1002E570C((uint64_t)v7, v23, (uint64_t)a2);
    swift_endAccess(v36);
    return sub_1001A4BC8(v30, type metadata accessor for RegistrationState);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_100476E64(uint64_t a1, uint64_t a2)
{
  if (!v16)
  {
    sub_100187100((uint64_t)&v15, &qword_100654080);
LABEL_7:
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v10 = type metadata accessor for Logger(0LL);
    uint64_t v11 = sub_100186DE4(v10, (uint64_t)qword_100656748);
    uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
    os_log_type_t v13 = static os_log_type_t.error.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "No active device", v14, 2u);
      swift_slowDealloc(v14, -1LL, -1LL);
    }

    return 0LL;
  }

  sub_1001CE0D0(&v15, (uint64_t)v17);
  uint64_t v2 = v18;
  uint64_t v3 = v19;
  sub_10019A708(v17, v18);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  if (v5)
  {
    uint64_t v6 = result;
    uint64_t v7 = v18;
    uint64_t v8 = v19;
    sub_10019A708(v17, v18);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
    if (v9)
    {
      sub_10018709C(v17);
      return v6;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
  return result;
}

uint64_t sub_10047700C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = sub_100186DE4(v5, (uint64_t)qword_100656748);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Set pairing date as lastUnlockDate", v9, 2u);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  Date.init()(v10);
  uint64_t v11 = type metadata accessor for Date(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v4, 0LL, 1LL, v11);
  uint64_t v12 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager, v17, 33LL, 0LL);
  uint64_t v13 = *(void *)(v12 + 24);
  uint64_t v14 = *(void *)(v12 + 32);
  sub_1002499B4(v12, v13);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v4, v13, v14);
  return swift_endAccess(v17);
}

void sub_1004771A0(uint64_t a1, uint8_t *a2)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = &v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( &v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate],  v11);
  if (Strong)
  {
    uint64_t v13 = (void *)Strong;
    uint64_t v46 = a2;
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v14 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v14, (uint64_t)qword_100656748);
    __int128 v15 = v2;
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc(12LL, -1LL);
      uint64_t v44 = a1;
      uint64_t v19 = (uint8_t *)v18;
      uint64_t v43 = swift_slowAlloc(32LL, -1LL);
      uint64_t v49 = v43;
      uint64_t v45 = v3;
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v42 = v19 + 4;
      uint64_t v21 = swift_unknownObjectWeakLoadStrong(v10, v20);
      uint64_t v47 = v21;
      uint64_t v22 = sub_100183098(&qword_100656CA8);
      uint64_t v23 = Optional.debugDescription.getter(v22);
      char v25 = v24;
      swift_unknownObjectRelease(v21);
      uint64_t v47 = sub_10018CDB4(v23, (unint64_t)v25, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v42, v19 + 12);

      swift_bridgeObjectRelease(v25);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Notifying delegate %s of approve request", v19, 0xCu);
      uint64_t v26 = v43;
      swift_arrayDestroy(v43, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1LL, -1LL);
      swift_slowDealloc(v19, -1LL, -1LL);
    }

    else
    {
    }

    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    [v13 manager:v15 didReceiveApproveRequestFor:isa info:v46];
    swift_unknownObjectRelease(v13);
  }

  else
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v27 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v27, (uint64_t)qword_100656748);
    uint64_t v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    double v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v30 = static os_log_type_t.error.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v32 = swift_slowAlloc(32LL, -1LL);
      uint64_t v49 = v32;
      *(_DWORD *)uint64_t v31 = 136315138;
      uint64_t v46 = v31 + 4;
      uint64_t v33 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter(v6, v33);
      os_log_type_t v36 = (const char *)v35;
      uint64_t v47 = sub_10018CDB4(v34, v35, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v46, v31 + 12);
      __n128 v37 = swift_bridgeObjectRelease(v36);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v37);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "No delegate to approve request: %s", v31, 0xCu);
      swift_arrayDestroy(v32, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1LL, -1LL);
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }

    unint64_t v39 = sub_100187014();
    uint64_t v40 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v39, 0LL, 0LL);
    *(_DWORD *)uint64_t v41 = 31;
    *(void *)(v41 + 8) = 0xD000000000000022LL;
    *(void *)(v41 + swift_weakDestroy(v0 + 16) = 0x8000000100511410LL;
    swift_willThrow(v40);
  }

unint64_t sub_1004775FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (void *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v13 = *(void **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once(&qword_100644408, sub_100458568);
    goto LABEL_5;
  }

  sub_10045886C((uint64_t)&v25);
  if (v26)
  {
    sub_1001CE0D0(&v25, (uint64_t)v27);
    unint64_t v15 = sub_1004641AC(a1, a2, (uint64_t)v27, a3, a4);
    unsigned int v16 = v15;
    uint64_t v17 = HIDWORD(v15) & 1;
    sub_10018709C(v27);
    uint64_t v18 = v16;
    goto LABEL_8;
  }

  sub_100187100((uint64_t)&v25, &qword_100654080);
  if (qword_100644408 != -1) {
    goto LABEL_10;
  }
LABEL_5:
  uint64_t v19 = type metadata accessor for Logger(0LL);
  uint64_t v20 = sub_100186DE4(v19, (uint64_t)qword_100656748);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.error.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "No active device", v23, 2u);
    swift_slowDealloc(v23, -1LL, -1LL);
  }

  LOBYTE(v17) = 0;
  uint64_t v18 = 10LL;
LABEL_8:
  LOBYTE(v27[0]) = v17;
  return v18 | ((unint64_t)v17 << 32);
}

uint64_t sub_1004777F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = sub_100186DE4(v10, (uint64_t)qword_100656748);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (_DWORD *)swift_slowAlloc(12LL, -1LL);
    swift_slowAlloc(32LL, -1LL);
    *id v14 = 136315138;
    __asm { BR              X10 }
  }

  unint64_t v15 = sub_1003F0F60(a1, a2, a3, a4, a5);
  return v15 | ((HIDWORD(v15) & 1) << 32);
}

uint64_t sub_100477AA4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v23 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for UUID(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  v20[1] = *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))( (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v9);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v12 + 24) & ~v12;
  uint64_t v14 = swift_allocObject(&unk_1005E3688, v13 + v11, v12 | 7);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v1;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))( v14 + v13,  (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v9);
  aBlock[4] = sub_10048A7C8;
  uint64_t v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1001B9FE4;
  aBlock[3] = &unk_1005E36A0;
  unint64_t v15 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v1);
  uint64_t v24 = _swiftEmptyArrayStorage;
  uint64_t v16 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v17 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v18 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v17, v18, v3, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v8, v5, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
  return swift_release(v26);
}

void sub_100477D08(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_100656A28);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_1006462F0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v50 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for UUID(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions], &v51, 33LL, 0LL);
  sub_1001CA188(a2, (uint64_t)&v54);
  swift_endAccess(&v51);
  if (v55)
  {
    sub_1001CE0D0(&v54, (uint64_t)v56);
    swift_beginAccess( &a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionAuthTypes],  &v54,  33LL,  0LL);
    sub_1001CA28C(a2);
    swift_endAccess(&v54);
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v17 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v17, (uint64_t)qword_100656748);
    uint64_t v18 = sub_10019A6C4((uint64_t)v56, (uint64_t)&v54);
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.default.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v48 = a2;
      uint64_t v21 = swift_slowAlloc(12LL, -1LL);
      uint64_t v49 = v6;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v23 = swift_slowAlloc(32LL, -1LL);
      uint64_t v53 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v47 = v10;
      sub_10019A6C4((uint64_t)&v54, (uint64_t)&v51);
      uint64_t v24 = sub_100183098(&qword_100656C90);
      uint64_t v25 = String.init<A>(describing:)(&v51, v24);
      uint64_t v27 = (const char *)v26;
      uint64_t v51 = sub_10018CDB4(v25, v26, &v53);
      uint64_t v10 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v22 + 4, v22 + 12);
      uint64_t v28 = v27;
      a2 = v48;
      swift_bridgeObjectRelease(v28);
      sub_10018709C(&v54);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Session did complete: %s", v22, 0xCu);
      swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1LL, -1LL);
      double v29 = v22;
      uint64_t v6 = v49;
      swift_slowDealloc(v29, -1LL, -1LL);
    }

    else
    {
      sub_10018709C(&v54);
    }

    swift_beginAccess( &a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestContinuationsBySessionID],  &v54,  33LL,  0LL);
    sub_1001CAB5C(a2, (uint64_t)v9);
    swift_endAccess(&v54);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1LL, v10) == 1)
    {
      sub_100187100((uint64_t)v9, &qword_100656A28);
    }

    else
    {
      uint64_t v41 = v50;
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v50, v9, v10);
      LOBYTE(v54) = 1;
      SFProgressContinuation.finish(with:)(&v54, v10);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v41, v10);
    }

    uint64_t v42 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56LL))(v6, 1LL, 1LL, v42);
    sub_10019A6C4((uint64_t)v56, (uint64_t)&v54);
    uint64_t v43 = (void *)swift_allocObject(&unk_1005E36D8, 80LL, 7LL);
    v43[2] = 0LL;
    v43[3] = 0LL;
    v43[4] = a1;
    sub_1001CE0D0(&v54, (uint64_t)(v43 + 5));
    uint64_t v44 = a1;
    uint64_t v45 = sub_1001B37E8((uint64_t)v6, (uint64_t)&unk_100656C88, (uint64_t)v43);
    swift_release(v45);
    sub_10018709C(v56);
  }

  else
  {
    sub_100187100((uint64_t)&v54, &qword_10064DAE0);
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v30 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v30, (uint64_t)qword_100656748);
    uint64_t v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
    uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
    os_log_type_t v33 = static os_log_type_t.error.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v35 = swift_slowAlloc(32LL, -1LL);
      v56[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      uint64_t v36 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter(v13, v36);
      unint64_t v39 = (const char *)v38;
      *(void *)&__int128 v54 = sub_10018CDB4(v37, v38, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, (char *)&v54 + 8, v34 + 4, v34 + 12);
      __n128 v40 = swift_bridgeObjectRelease(v39);
      (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v40);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Could not find session matching sessionID %s", v34, 0xCu);
      swift_arrayDestroy(v35, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1LL, -1LL);
      swift_slowDealloc(v34, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
  }

uint64_t sub_100478310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  v5[17] = a4;
  v5[18] = a5;
  uint64_t v8 = type metadata accessor for UUID(0LL);
  v5[19] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v5[20] = v9;
  v5[21] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_100646560);
  v5[22] = swift_task_alloc((*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  v5[23] = v11;
  v5[24] = swift_task_alloc((*(void *)(*(void *)(v11 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = *sub_10019A708(a5, a5[3]);
  uint64_t v13 = (void *)swift_task_alloc(dword_100656A44);
  v5[25] = v13;
  *uint64_t v13 = v5;
  v13[1] = sub_1004783EC;
  return sub_1004867B4(v12, 1, a4);
}

uint64_t sub_1004783EC()
{
  return swift_task_switch(sub_100478440, 0LL, 0LL);
}

uint64_t sub_100478440()
{
  uint64_t v1 = sub_10019A708(*(void **)(v0 + 144), *(void *)(*(void *)(v0 + 144) + 24LL));
  *(void *)(v0 + 208) = v1;
  return swift_task_switch(sub_100478484, *v1, 0LL);
}

uint64_t sub_100478484()
{
  return swift_task_switch(sub_1004784CC, 0LL, 0LL);
}

uint64_t sub_1004784CC()
{
  uint64_t v2 = *(int **)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v19 = *(void *)(v0 + 176);
  uint64_t v22 = *(void *)(v0 + 152);
  uint64_t v23 = *(void *)(v0 + 168);
  uint64_t v24 = *(void **)(v0 + 144);
  os_log_type_t v20 = *(void **)(v0 + 136);
  uint64_t v21 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_10019A708((void *)(v0 + 16), v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 24))(v4, v3);
  uint64_t v5 = *(void *)(v1 + v2[7]);
  *(void *)(v0 + 2sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v5;
  sub_1001A4BC8(v1, type metadata accessor for SDAuthenticationCommonOperationInput);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  sub_10019A708((void *)(v0 + 16), v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
  char v8 = *(_BYTE *)(v1 + v2[8]);
  sub_1001A4BC8(v1, type metadata accessor for SDAuthenticationCommonOperationInput);
  uint64_t v9 = *(void *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 48);
  sub_10019A708((void *)(v0 + 16), v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
  sub_10019A6C4(v1 + 40, v0 + 56);
  sub_1001A4BC8(v1, type metadata accessor for SDAuthenticationCommonOperationInput);
  uint64_t v11 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v19, 1LL, 1LL, v11);
  sub_10019A6C4(v0 + 56, v0 + 96);
  uint64_t v12 = swift_allocObject(&unk_1005E3700, 96LL, 7LL);
  *(void *)(v12 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = 0LL;
  *(void *)(v12 + 24) = 0LL;
  *(_BYTE *)(v12 + 32) = (v8 & 1) == 0;
  *(void *)(v12 + 40) = v5;
  *(void *)(v12 + 48) = v20;
  sub_1001CE0D0((__int128 *)(v0 + 96), v12 + 56);
  id v13 = v20;
  uint64_t v14 = sub_1001B341C(v19, (uint64_t)&unk_100656CA0, v12);
  swift_release(v14);
  uint64_t v15 = *(void *)(v0 + 40);
  uint64_t v16 = *(void *)(v0 + 48);
  sub_10019A708((void *)(v0 + 16), v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v23, v1 + v2[6], v22);
  sub_1001A4BC8(v1, type metadata accessor for SDAuthenticationCommonOperationInput);
  uint64_t v17 = sub_10019A708(v24, v24[3]);
  *(void *)(v0 + 224) = v17;
  return swift_task_switch(sub_10047871C, *v17, 0LL);
}

uint64_t sub_10047871C()
{
  return swift_task_switch(sub_10047875C, 0LL, 0LL);
}

uint64_t sub_10047875C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(v2 + 216);
  if ((v3 & 0xFFFFFFFFFFFFFFFDLL) != 8)
  {
    Swift::UInt8 v14 = SFDeviceClassCodeGet(a1, a2);
    uint64_t v15 = (const char *)sub_10034F1E0(v3);
    BOOL v16 = sub_1003A0760(8u, (uint64_t)v15);
    __n128 v17 = swift_bridgeObjectRelease(v15);
    if (v16)
    {
      if ((SFDeviceIsRealityDevice(v17) & 1) != 0) {
        goto LABEL_12;
      }
    }

    else
    {
      uint64_t v19 = (const char *)sub_10034F1E0(*(void *)(v2 + 216));
      BOOL v20 = sub_1003A0760(v14, (uint64_t)v19);
      swift_bridgeObjectRelease(v19);
      if (v20) {
        goto LABEL_12;
      }
    }

    if ((unint64_t)(*(void *)(v2 + 216) - 9LL) > 1)
    {
      int v21 = 0;
      goto LABEL_21;
    }

uint64_t sub_100478C38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 104) = a6;
  *(void *)(v7 + 112) = a7;
  *(void *)(v7 + 96) = a5;
  *(_BYTE *)(v7 + 160) = a4;
  uint64_t v8 = type metadata accessor for ContinuousClock(0LL);
  *(void *)(v7 + 120) = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)(v7 + 128) = v9;
  *(void *)(v7 + 136) = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100478CA0, 0LL, 0LL);
}

uint64_t sub_100478CA0(uint64_t a1)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006461D8 + dword_1006461D8);
  uint64_t v2 = (void *)swift_task_alloc(unk_1006461DC);
  *(void *)(v1 + 144) = v2;
  void *v2 = v1;
  v2[1] = sub_100478D20;
  return v4(1000000000000000000LL, 0LL, 0LL, 0LL, 1);
}

uint64_t sub_100478D20()
{
  uint64_t v3 = *(void *)(*(void *)v1 + 136LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 144LL);
  uint64_t v4 = *(void *)(*(void *)v1 + 120LL);
  uint64_t v5 = *(void *)(*(void *)v1 + 128LL);
  *(void *)(*(void *)v1 + 152LL) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0) {
    uint64_t v6 = sub_100478FB4;
  }
  else {
    uint64_t v6 = sub_100478DA0;
  }
  return swift_task_switch(v6, 0LL, 0LL);
}

uint64_t sub_100478DA0()
{
  unint64_t v1 = *(void *)(v0 + 96);
  if (*(_BYTE *)(v0 + 160) == 1)
  {
    if (v1 > 0xE || ((1LL << v1) & 0x658E) == 0) {
      goto LABEL_16;
    }
    uint64_t v3 = v0 + 56;
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v5 = *(void *)(v0 + 112);
    uint64_t v6 = *(void *)(*(void *)(v0 + 104) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
    char v7 = sub_10034E9D8(v1);
    sub_10019A6C4(v5, v0 + 56);
    sub_1003F0DB4(v7);
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t ObjectType = swift_getObjectType(v8);
    (*(void (**)(uint64_t, uint64_t))(v11 + 56))(ObjectType, v11);
    uint32_t v13 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_transportLock);
    Swift::UInt8 v14 = (void *)swift_task_alloc(48LL);
    __int128 v14[2] = v9;
    void v14[3] = v11;
    v14[4] = v0 + 56;
    v14[5] = v6;
    uint64_t v15 = swift_task_alloc(32LL);
    uint64_t v16 = v15;
  }

  else
  {
    if (v1 <= 0xE && ((1LL << v1) & 0x658E) != 0) {
      goto LABEL_16;
    }
    uint64_t v3 = v0 + 16;
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v20 = *(void *)(v0 + 112);
    uint64_t v21 = *(void *)(*(void *)(v0 + 104)
                    + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
    char v22 = sub_10034E9D8(v1);
    sub_10019A6C4(v20, v0 + 16);
    sub_1003F0DB4(v22);
    uint64_t v9 = v23;
    uint64_t v25 = v24;
    uint64_t v26 = swift_getObjectType(v23);
    (*(void (**)(uint64_t, uint64_t))(v25 + 56))(v26, v25);
    uint32_t v13 = *(os_unfair_lock_s **)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_transportLock);
    Swift::UInt8 v14 = (void *)swift_task_alloc(48LL);
    __int128 v14[2] = v9;
    void v14[3] = v25;
    v14[4] = v0 + 16;
    v14[5] = v21;
    uint64_t v15 = swift_task_alloc(32LL);
    uint64_t v16 = v15;
  }

  *(void *)(v15 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = sub_1002DB064;
  *(void *)(v15 + 24) = v14;
  os_unfair_lock_lock(v13 + 4);
  sub_1002737FC(v17, *(uint64_t (**)(void))(v16 + 16));
  os_unfair_lock_unlock(v13 + 4);
  if (v4) {
    return swift_task_dealloc(v16);
  }
  swift_unknownObjectRelease(v9);
  swift_task_dealloc(v16);
  swift_task_dealloc(v14);
  sub_100187100(v3, &qword_100654080);
LABEL_16:
  swift_task_dealloc(*(void *)(v0 + 136));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100478FB4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100478FE8(void *a1, void *a2)
{
  return sub_100479000(a1, a2) & 1;
}

uint64_t sub_100479000(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v17 - v9;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_10019A708(a1, v11);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v12 + 8) + 8LL) + 32LL))(v11);
  uint64_t v14 = a2[3];
  uint64_t v13 = a2[4];
  sub_10019A708(a2, v14);
  (*(void (**)(uint64_t))(*(void *)(v13 + 8) + 32LL))(v14);
  LOBYTE(v13) = static UUID.== infix(_:_:)(v10, v8);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return v13 & 1;
}

uint64_t sub_100479124(uint64_t a1, int a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = v4;
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  int v34 = a2;
  uint64_t ObjectType = swift_getObjectType(v4);
  uint64_t v39 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v42 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for UUID(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = (v15 + 24) & ~v15;
  unint64_t v17 = (v13 + v16 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v18 = (v17 + 11) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v19 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v20 = swift_allocObject(&unk_1005E2CB0, v19 + 8, v15 | 7);
  *(void *)(v20 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v5;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v20 + v16, v14, v11);
  *(_DWORD *)(v20 + v17) = v34;
  uint64_t v21 = (void *)(v20 + v18);
  char v22 = v36;
  *uint64_t v21 = v35;
  v21[1] = v22;
  *(void *)(v20 + v19) = ObjectType;
  aBlock[4] = sub_10048813C;
  uint64_t v45 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1001B9FE4;
  aBlock[3] = &unk_1005E2CC8;
  uint64_t v23 = _Block_copy(aBlock);
  id v24 = v5;
  swift_bridgeObjectRetain(v22);
  static DispatchQoS.unspecified.getter(v25);
  uint64_t v43 = _swiftEmptyArrayStorage;
  uint64_t v26 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v27 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v28 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
  uint64_t v30 = v38;
  uint64_t v29 = v39;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v43, v27, v28, v39, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v10, v30, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v29);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v41);
  return swift_release(v45);
}

void sub_1004793E8(char *a1, uint64_t a2, unsigned int a3, uint64_t a4, const char *a5, uint64_t a6)
{
  uint64_t v86 = a4;
  __int128 v87 = a5;
  unsigned int v85 = a3;
  uint64_t v9 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v9);
  uint64_t v89 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100183098(&qword_100656A28);
  uint64_t v82 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v82 + 64);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v84 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v88 = (uint64_t)&v72 - v14;
  uint64_t v15 = type metadata accessor for UUID(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v83 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v72 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v72 - v22;
  swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions], &v90, 33LL, 0LL);
  sub_1001CA188(a2, (uint64_t)&v92);
  swift_endAccess(&v90);
  if (v93)
  {
    uint64_t v80 = v12;
    uint64_t v81 = a6;
    sub_1001CE0D0(&v92, (uint64_t)v94);
    swift_beginAccess( &a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionAuthTypes],  &v92,  33LL,  0LL);
    sub_1001CA28C(a2);
    swift_endAccess(&v92);
    uint64_t v24 = a2;
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v25 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v25, (uint64_t)qword_100656748);
    __n128 v79 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    v79(v21, a2, v15);
    uint64_t v26 = (uint64_t)v87;
    swift_bridgeObjectRetain_n(v87, 2LL);
    uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
    os_log_type_t v29 = static os_log_type_t.error.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc(22LL, -1LL);
      unint64_t v77 = a1;
      uint64_t v31 = v30;
      uint64_t v74 = (void *)swift_slowAlloc(8LL, -1LL);
      uint64_t v75 = swift_slowAlloc(32LL, -1LL);
      *(void *)&__int128 v92 = v75;
      *(_DWORD *)uint64_t v31 = 136315394;
      uint64_t v76 = a2;
      uint64_t v32 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      os_log_t v73 = v28;
      uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter(v15, v32);
      uint64_t v35 = (const char *)v34;
      uint64_t v90 = sub_10018CDB4(v33, v34, (uint64_t *)&v92);
      uint64_t v24 = v76;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v91, v31 + 4, v31 + 12);
      __n128 v36 = swift_bridgeObjectRelease(v35);
      (*(void (**)(char *, uint64_t, __n128))(v16 + 8))(v21, v15, v36);
      *(_WORD *)(v31 + 12) = 2112;
      id v37 = sub_100487C98(v85, v86, v26);
      uint64_t v90 = (uint64_t)v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v91, v31 + 14, v31 + 22);
      uint64_t v38 = v74;
      *uint64_t v74 = v37;
      swift_bridgeObjectRelease_n(v26, 2LL);
      os_log_t v39 = v73;
      _os_log_impl((void *)&_mh_execute_header, v73, v29, "Session %s failed with error: %@", (uint8_t *)v31, 0x16u);
      uint64_t v40 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v38, 1LL, v40);
      swift_slowDealloc(v38, -1LL, -1LL);
      uint64_t v41 = v75;
      swift_arrayDestroy(v75, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1LL, -1LL);
      uint64_t v42 = v31;
      a1 = v77;
      swift_slowDealloc(v42, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
      swift_bridgeObjectRelease_n(v26, 2LL);
    }

    uint64_t v78 = v16;
    swift_beginAccess( &a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestContinuationsBySessionID],  &v92,  33LL,  0LL);
    uint64_t v54 = v88;
    sub_1001CAB5C(v24, v88);
    swift_endAccess(&v92);
    uint64_t v55 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56LL))(v89, 1LL, 1LL, v55);
    uint64_t v56 = v84;
    sub_1001915A4(v54, v84, &qword_100656A28);
    sub_10019A6C4((uint64_t)v94, (uint64_t)&v92);
    uint64_t v57 = v83;
    v79(v83, v24, v15);
    uint64_t v58 = *(unsigned __int8 *)(v82 + 80);
    uint64_t v59 = (v58 + 56) & ~v58;
    uint64_t v60 = a1;
    unint64_t v61 = (v80 + v59 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v62 = (v61 + 47) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v63 = *(unsigned __int8 *)(v16 + 80);
    uint64_t v64 = (v63 + v62 + 8) & ~v63;
    unint64_t v65 = (v17 + v64 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v66 = v15;
    uint64_t v67 = swift_allocObject(&unk_1005E2D00, v65 + 8, v58 | v63 | 7);
    *(void *)(v67 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = 0LL;
    *(void *)(v67 + 24) = 0LL;
    *(_DWORD *)(v67 + 32) = v85;
    uint64_t v68 = v67 + v59;
    uint64_t v69 = v87;
    *(void *)(v67 + 40) = v86;
    *(void *)(v67 + 48) = v69;
    sub_1001870BC(v56, v68, &qword_100656A28);
    sub_1001CE0D0(&v92, v67 + v61);
    *(void *)(v67 + v62) = v60;
    (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v67 + v64, v57, v66);
    *(void *)(v67 + v65) = v81;
    swift_bridgeObjectRetain(v69);
    id v70 = v60;
    uint64_t v71 = sub_1001B37E8(v89, (uint64_t)&unk_100656A38, v67);
    swift_release(v71);
    sub_100187100(v88, &qword_100656A28);
    sub_10018709C(v94);
  }

  else
  {
    sub_100187100((uint64_t)&v92, &qword_10064DAE0);
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v43 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v43, (uint64_t)qword_100656748);
    uint64_t v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 16))(v23, a2, v15);
    uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v46 = static os_log_type_t.error.getter(v45);
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v48 = swift_slowAlloc(32LL, -1LL);
      v94[0] = v48;
      *(_DWORD *)uint64_t v47 = 136315138;
      uint64_t v49 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter(v15, v49);
      uint64_t v52 = (const char *)v51;
      *(void *)&__int128 v92 = sub_10018CDB4(v50, v51, v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, (char *)&v92 + 8, v47 + 4, v47 + 12);
      __n128 v53 = swift_bridgeObjectRelease(v52);
      (*(void (**)(char *, uint64_t, __n128))(v16 + 8))(v23, v15, v53);
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Could not find session matching sessionID %s", v47, 0xCu);
      swift_arrayDestroy(v48, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1LL, -1LL);
      swift_slowDealloc(v47, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v23, v15);
    }
  }

uint64_t sub_100479BC0( uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 472) = v22;
  *(_OWORD *)(v8 + 4sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = v21;
  *(void *)(v8 + 440) = a7;
  *(void *)(v8 + 448) = a8;
  *(void *)(v8 + 424) = a5;
  *(void *)(v8 + 432) = a6;
  *(_DWORD *)(v8 + 680) = a4;
  uint64_t v9 = sub_100183098(&qword_100646560);
  *(void *)(v8 + 480) = swift_task_alloc((*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags(0LL);
  *(void *)(v8 + 488) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v8 + 496) = v11;
  *(void *)(v8 + 504) = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for DispatchQoS(0LL);
  *(void *)(v8 + 512) = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  *(void *)(v8 + 520) = v13;
  *(void *)(v8 + 528) = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for UUID(0LL);
  *(void *)(v8 + 536) = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  *(void *)(v8 + 544) = v15;
  uint64_t v16 = *(void *)(v15 + 64);
  *(void *)(v8 + 552) = v16;
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v8 + 560) = swift_task_alloc(v17);
  *(void *)(v8 + 568) = swift_task_alloc(v17);
  *(void *)(v8 + 576) = swift_task_alloc(v17);
  uint64_t v18 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  *(void *)(v8 + 584) = v18;
  *(void *)(v8 + 592) = swift_task_alloc((*(void *)(*(void *)(v18 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_100183098(&qword_100656A28);
  *(void *)(v8 + 600) = swift_task_alloc((*(void *)(*(void *)(v19 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100479D18, 0LL, 0LL);
}

uint64_t sub_100479D18()
{
  uint64_t v1 = *(void *)(v0 + 600);
  uint64_t v2 = *(void *)(v0 + 440);
  id v3 = sub_100487C98(*(unsigned int *)(v0 + 680), *(void *)(v0 + 424), *(void *)(v0 + 432));
  *(void *)(v0 + 608) = v3;
  sub_1001915A4(v2, v1, &qword_100656A28);
  uint64_t v4 = sub_100183098(&qword_1006462F0);
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v1, 1LL, v4);
  uint64_t v7 = *(void *)(v0 + 600);
  if (v6 == 1)
  {
    sub_100187100(*(void *)(v0 + 600), &qword_100656A28);
  }

  else
  {
    id v8 = v3;
    SFProgressContinuation.fail(with:)(v8, v4);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }

  uint64_t v9 = sub_10019A708(*(void **)(v0 + 448), *(void *)(*(void *)(v0 + 448) + 24LL));
  *(void *)(v0 + 6sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v9;
  return swift_task_switch(sub_100479E0C, *v9, 0LL);
}

uint64_t sub_100479E0C()
{
  return swift_task_switch(sub_100479E4C, 0LL, 0LL);
}

uint64_t sub_100479E4C()
{
  uint64_t v1 = sub_10019A708(*(void **)(v0 + 448), *(void *)(*(void *)(v0 + 448) + 24LL));
  *(void *)(v0 + 624) = v1;
  return swift_task_switch(sub_100479E90, *v1, 0LL);
}

uint64_t sub_100479E90()
{
  return swift_task_switch(sub_100479ED8, 0LL, 0LL);
}

uint64_t sub_100479ED8()
{
  uint64_t v1 = v0[74];
  uint64_t v2 = v0[73];
  id v3 = (void *)v0[56];
  uint64_t v4 = v0[43];
  uint64_t v5 = v0[44];
  sub_10019A708(v0 + 40, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  v0[79] = *(void *)(v1 + *(int *)(v2 + 28));
  sub_1001A4BC8(v1, type metadata accessor for SDAuthenticationCommonOperationInput);
  sub_10018709C(v0 + 40);
  int v6 = sub_10019A708(v3, v3[3]);
  v0[80] = v6;
  return swift_task_switch(sub_100479F90, *v6, 0LL);
}

uint64_t sub_100479F90()
{
  return swift_task_switch(sub_100479FD8, 0LL, 0LL);
}

uint64_t sub_100479FD8()
{
  uint64_t v1 = *(void *)(v0 + 592);
  uint64_t v2 = *(void *)(v0 + 584);
  id v3 = *(void **)(v0 + 448);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v5 = *(void *)(v0 + 272);
  sub_10019A708((void *)(v0 + 240), v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  *(_BYTE *)(v0 + 684) = *(_BYTE *)(v1 + *(int *)(v2 + 32));
  sub_1001A4BC8(v1, type metadata accessor for SDAuthenticationCommonOperationInput);
  sub_10018709C((void *)(v0 + 240));
  int v6 = sub_10019A708(v3, v3[3]);
  *(void *)(v0 + 648) = v6;
  return swift_task_switch(sub_10047A090, *v6, 0LL);
}

uint64_t sub_10047A090()
{
  return swift_task_switch(sub_10047A0D8, 0LL, 0LL);
}

uint64_t sub_10047A0D8()
{
  uint64_t v1 = *(void *)(v0 + 592);
  uint64_t v2 = *(void **)(v0 + 576);
  uint64_t v88 = *(void **)(v0 + 568);
  uint64_t v90 = *(void *)(v0 + 552);
  uint64_t v3 = *(void *)(v0 + 544);
  uint64_t v4 = *(void *)(v0 + 536);
  uint64_t aBlock = *(void **)(v0 + 464);
  uint64_t v92 = *(void *)(v0 + 456);
  uint64_t v96 = *(void *)(v0 + 632);
  int v99 = *(_DWORD *)(v0 + 680);
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 192);
  sub_10019A708((void *)(v0 + 160), v6);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v6, v5);
  sub_10019A6C4(v1 + 40, v0 + 280);
  sub_1001A4BC8(v1, type metadata accessor for SDAuthenticationCommonOperationInput);
  sub_10018709C((void *)(v0 + 160));
  uint64_t v7 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 312);
  sub_10019A708((void *)(v0 + 280), v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(void *, void *, uint64_t))(v3 + 16);
  v12(v2, aBlock, v4);
  uint64_t v13 = v88;
  uint64_t v89 = (void (*)(uint64_t, uint64_t, uint64_t))v12;
  v12(v13, v2, v4);
  uint64_t v14 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v16 = v15 + v90;
  uint64_t v91 = v14 | 7;
  uint64_t v17 = swift_allocObject(&unk_1005E2D28, v16, v14 | 7);
  *(void *)(v0 + 6sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = v17;
  *(void *)(v17 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v96;
  *(void *)(v17 + 24) = v92;
  uint64_t v97 = *(void (**)(uint64_t, void *, uint64_t))(v3 + 32);
  v97(v17 + v15, v2, v4);
  uint64_t v103 = v11;
  uint64_t v84 = v9;
  if (v99 == 33)
  {
    uint64_t v18 = *(void *)(v0 + 632);
    uint64_t v19 = *(void **)(v0 + 608);
    uint64_t v80 = *(void **)(v0 + 528);
    uint64_t v93 = *(void *)(v0 + 520);
    uint64_t v100 = *(void *)(v0 + 512);
    uint64_t v20 = *(void *)(v0 + 488);
    aBlocka = *(void (***)(uint64_t, uint64_t))(v0 + 496);
    __int128 v21 = *(void **)(v0 + 456);
    uint64_t v82 = *(void *)(v0 + 504);
    uint64_t v22 = (void *)swift_allocObject(&unk_1005E2E18, 72LL, 7LL);
    *(void *)(v0 + 64) = _NSConcreteStackBlock;
    v22[2] = v9;
    v22[3] = v11;
    v22[4] = v21;
    void v22[5] = v18;
    v22[6] = sub_100488474;
    v22[7] = v17;
    v22[8] = v19;
    *(void *)(v0 + 96) = sub_1004886F4;
    *(void *)(v0 + 104) = v22;
    *(void *)(v0 + 72) = 1107296256LL;
    *(void *)(v0 + 80) = sub_1001B9FE4;
    *(void *)(v0 + 88) = &unk_1005E2E30;
    uint64_t v23 = _Block_copy((const void *)(v0 + 64));
    swift_bridgeObjectRetain(v11);
    swift_retain();
    id v24 = v21;
    id v25 = v19;
    static DispatchQoS.unspecified.getter(v24);
    *(void *)(v0 + 4sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = _swiftEmptyArrayStorage;
    uint64_t v26 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v27 = sub_100183098((uint64_t *)&unk_1006460D0);
    uint64_t v28 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 416, v27, v28, v20, v26);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v80, v82, v23);
    _Block_release(v23);
    aBlocka[1](v82, v20);
    (*(void (**)(void *, uint64_t))(v93 + 8))(v80, v100);
    swift_release(*(void *)(v0 + 104));
  }

  else
  {
    id v29 = *(id *)(v0 + 456);
  }

  unint64_t v30 = *(void *)(v0 + 632);
  if (v30 == 6)
  {
    int v45 = *(_DWORD *)(v0 + 680);
    if (v45 == 34 || v45 == 11)
    {
      os_log_type_t v46 = *(void **)(v0 + 560);
      uint64_t v47 = *(void *)(v0 + 552);
      uint64_t v48 = *(void *)(v0 + 536);
      uint64_t v79 = *(void *)(v0 + 528);
      uint64_t v95 = *(void *)(v0 + 520);
      uint64_t v102 = *(void *)(v0 + 512);
      uint64_t v81 = *(void *)(v0 + 504);
      aBlockb = *(void (***)(uint64_t, uint64_t))(v0 + 496);
      uint64_t v83 = *(void *)(v0 + 488);
      uint64_t v49 = *(void *)(v0 + 464);
      uint64_t v78 = *(void *)(v0 + 472);
      uint64_t v50 = *(void **)(v0 + 456);
      (*(void (**)(void, uint64_t))(*(void *)(v0 + 544) + 8LL))(*(void *)(v0 + 568), v48);
      v89((uint64_t)v46, v49, v48);
      uint64_t v51 = (v14 + 56) & ~v14;
      unint64_t v52 = (v51 + v47 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      unint64_t v53 = (v52 + 23) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v54 = swift_allocObject(&unk_1005E2D78, v53 + 8, v91);
      *(void *)(v54 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v84;
      *(void *)(v54 + 24) = v103;
      *(_DWORD *)(v54 + 32) = v45;
      *(void *)(v54 + 40) = v50;
      *(void *)(v54 + 48) = 6LL;
      v97(v54 + v51, v46, v48);
      uint64_t v55 = (void (**)(uint64_t))(v54 + v52);
      const char *v55 = sub_100488474;
      v55[1] = (void (*)(uint64_t))v17;
      *(void *)(v54 + v53) = v78;
      *(void *)(v0 + 48) = sub_1004885EC;
      *(void *)(v0 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = v54;
      *(void *)(v0 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = _NSConcreteStackBlock;
      *(void *)(v0 + 24) = 1107296256LL;
      *(void *)(v0 + 32) = sub_1001B9FE4;
      *(void *)(v0 + 40) = &unk_1005E2D90;
      uint64_t v56 = _Block_copy((const void *)(v0 + 16));
      id v57 = v50;
      uint64_t v58 = swift_retain();
      static DispatchQoS.unspecified.getter(v58);
      *(void *)(v0 + 400) = _swiftEmptyArrayStorage;
      uint64_t v59 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      uint64_t v60 = sub_100183098((uint64_t *)&unk_1006460D0);
      uint64_t v61 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 400, v60, v61, v83, v59);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v79, v81, v56);
      _Block_release(v56);
      aBlockb[1](v81, v83);
      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v79, v102);
      swift_release(*(void *)(v0 + 56));
    }

    else
    {
      swift_bridgeObjectRelease(v11);
      if (v45 == 36)
      {
        if (qword_100644408 != -1) {
          swift_once(&qword_100644408, sub_100458568);
        }
        uint64_t v67 = type metadata accessor for Logger(0LL);
        uint64_t v68 = sub_100186DE4(v67, (uint64_t)qword_100656748);
        uint64_t v69 = (os_log_s *)Logger.logObject.getter(v68);
        os_log_type_t v70 = static os_log_type_t.default.getter(v69);
        if (os_log_type_enabled(v69, v70))
        {
          uint64_t v71 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v71 = 0;
          _os_log_impl((void *)&_mh_execute_header, v69, v70, "Lock device unarmed, requesting manual arm", v71, 2u);
          swift_slowDealloc(v71, -1LL, -1LL);
        }
      }

      uint64_t v72 = *(void *)(v0 + 568);
      uint64_t v73 = *(void *)(v0 + 544);
      uint64_t v74 = *(void *)(v0 + 536);
      sub_10047B030(*(void *)(v0 + 608), 6uLL, *(char **)(v0 + 456));
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v74);
    }
  }

  else if (v30 == 4)
  {
    uint64_t v31 = *(void **)(v0 + 608);
    uint64_t v32 = *(void *)(v0 + 528);
    uint64_t v98 = *(void *)(v0 + 520);
    uint64_t v33 = *(void *)(v0 + 504);
    uint64_t v101 = *(void *)(v0 + 512);
    uint64_t v34 = *(void *)(v0 + 488);
    uint64_t v94 = *(void *)(v0 + 496);
    uint64_t v35 = *(void **)(v0 + 456);
    int v36 = *(_DWORD *)(v0 + 680);
    (*(void (**)(void, void))(*(void *)(v0 + 544) + 8LL))(*(void *)(v0 + 568), *(void *)(v0 + 536));
    sub_10019A6C4(v0 + 280, v0 + 360);
    uint64_t v37 = swift_allocObject(&unk_1005E2DC8, 112LL, 7LL);
    *(_DWORD *)(v37 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v36;
    *(void *)(v37 + 24) = v35;
    sub_1001CE0D0((__int128 *)(v0 + 360), v37 + 32);
    *(void *)(v37 + 72) = v84;
    *(void *)(v37 + 80) = v103;
    *(void *)(v37 + 88) = sub_100488474;
    *(void *)(v37 + 96) = v17;
    *(void *)(v37 + 104) = v31;
    *(void *)(v0 + 144) = sub_10048869C;
    *(void *)(v0 + 152) = v37;
    *(void *)(v0 + 112) = _NSConcreteStackBlock;
    *(void *)(v0 + 120) = 1107296256LL;
    *(void *)(v0 + 128) = sub_1001B9FE4;
    *(void *)(v0 + 136) = &unk_1005E2DE0;
    uint64_t v38 = _Block_copy((const void *)(v0 + 112));
    id v39 = v31;
    id v40 = v35;
    uint64_t v41 = swift_retain();
    static DispatchQoS.unspecified.getter(v41);
    *(void *)(v0 + 408) = _swiftEmptyArrayStorage;
    uint64_t v42 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v43 = sub_100183098((uint64_t *)&unk_1006460D0);
    uint64_t v44 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 408, v43, v44, v34, v42);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v32, v33, v38);
    _Block_release(v38);
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v33, v34);
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v32, v101);
    swift_release(*(void *)(v0 + 152));
  }

  else
  {
    uint64_t v62 = *(void *)(v0 + 608);
    uint64_t v63 = *(void *)(v0 + 568);
    uint64_t v64 = *(void *)(v0 + 544);
    uint64_t v65 = *(void *)(v0 + 536);
    uint64_t v66 = *(char **)(v0 + 456);
    swift_bridgeObjectRelease(v103);
    sub_10047B030(v62, v30, v66);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
  }

  uint64_t v75 = *sub_10019A708(*(void **)(v0 + 448), *(void *)(*(void *)(v0 + 448) + 24LL));
  uint64_t v76 = (void *)swift_task_alloc(dword_100656A44);
  *(void *)(v0 + 664) = v76;
  void *v76 = v0;
  v76[1] = sub_10047A9C4;
  return sub_1004867B4(v75, 0, *(void *)(v0 + 456));
}

uint64_t sub_10047A9C4()
{
  return swift_task_switch(sub_10047AA18, 0LL, 0LL);
}

uint64_t sub_10047AA18()
{
  char v1 = *(_BYTE *)(v0 + 684);
  uint64_t v2 = *(void *)(v0 + 632);
  uint64_t v3 = *(void *)(v0 + 480);
  uint64_t v4 = *(void **)(v0 + 456);
  uint64_t v5 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v3, 1LL, 1LL, v5);
  sub_10019A6C4(v0 + 280, v0 + 200);
  uint64_t v6 = swift_allocObject(&unk_1005E2D50, 96LL, 7LL);
  *(void *)(v6 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = 0LL;
  *(void *)(v6 + 24) = 0LL;
  *(_BYTE *)(v6 + 32) = (v1 & 1) == 0;
  *(void *)(v6 + 40) = v2;
  *(void *)(v6 + 48) = v4;
  sub_1001CE0D0((__int128 *)(v0 + 200), v6 + 56);
  id v7 = v4;
  uint64_t v8 = sub_1001B341C(v3, (uint64_t)&unk_100656A50, v6);
  uint64_t v9 = swift_release(v8);
  if ((v2 & 0xFFFFFFFFFFFFFFFDLL) == 8)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v11 = type metadata accessor for Logger(0LL);
    uint64_t v12 = sub_100186DE4(v11, (uint64_t)qword_100656748);
    uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
    os_log_type_t v14 = static os_log_type_t.default.getter(v13);
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = *(void *)(v0 + 656);
    if (v15)
    {
      uint64_t v17 = *(void **)(v0 + 608);
      uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v18 = 0;
      uint64_t v19 = "Registration type does not have a delegate to call back";
      uint64_t v20 = v13;
      os_log_type_t v21 = v14;
      uint64_t v22 = v18;
      uint32_t v23 = 2;
      goto LABEL_26;
    }

    uint64_t v30 = v16;
LABEL_34:
    swift_release(v30);
    uint64_t v13 = *(os_log_s **)(v0 + 608);
    goto LABEL_35;
  }

  unint64_t v24 = *(void *)(v0 + 632);
  Swift::UInt8 v25 = SFDeviceClassCodeGet(v9, v10);
  uint64_t v26 = (const char *)sub_10034F1E0(v24);
  BOOL v27 = sub_1003A0760(8u, (uint64_t)v26);
  __n128 v28 = swift_bridgeObjectRelease(v26);
  if (v27)
  {
    if ((SFDeviceIsRealityDevice(v28) & 1) != 0) {
      goto LABEL_13;
    }
  }

  else
  {
    uint64_t v31 = (const char *)sub_10034F1E0(*(void *)(v0 + 632));
    BOOL v32 = sub_1003A0760(v25, (uint64_t)v31);
    swift_bridgeObjectRelease(v31);
    if (v32) {
      goto LABEL_13;
    }
  }

  if ((unint64_t)(*(void *)(v0 + 632) - 9LL) > 1)
  {
    int v33 = 0;
    goto LABEL_22;
  }

void sub_10047B030(uint64_t a1, unint64_t a2, char *a3)
{
  Swift::UInt8 v6 = SFDeviceClassCodeGet(a1, a2);
  id v7 = (const char *)sub_10034F1E0(a2);
  BOOL v8 = sub_1003A0760(8u, (uint64_t)v7);
  __n128 v9 = swift_bridgeObjectRelease(v7);
  if (v8)
  {
    if (!SFDeviceIsRealityDevice(v9))
    {
LABEL_3:
      int v11 = 0;
      goto LABEL_12;
    }
  }

  else
  {
    uint64_t v12 = (const char *)sub_10034F1E0(a2);
    BOOL v13 = sub_1003A0760(v6, (uint64_t)v12);
    swift_bridgeObjectRelease(v12);
    if (!v13) {
      goto LABEL_3;
    }
  }

  uint64_t Strong = swift_unknownObjectWeakLoadStrong( &a3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate],  v10);
  if (Strong)
  {
    BOOL v15 = (void *)Strong;
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v16 = type metadata accessor for Logger(0LL);
    uint64_t v17 = sub_100186DE4(v16, (uint64_t)qword_100656748);
    uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.default.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Calling back to delegate", v20, 2u);
      swift_slowDealloc(v20, -1LL, -1LL);
    }

    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    [v15 manager:a3 didFailAuthenticationFor:isa error:a1];
    swift_unknownObjectRelease(v15);
    goto LABEL_17;
  }

  int v11 = 1;
LABEL_12:
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v21 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v21, (uint64_t)qword_100656748);
  Class isa = a3;
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(isa);
  os_log_type_t v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc(14LL, -1LL);
    *(_DWORD *)uint64_t v24 = 67109376;
    int v29 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v24 + 4, v24 + 8);
    *(_WORD *)(v24 + 8) = 1024;
    uint64_t v26 = swift_unknownObjectWeakLoadStrong( (char *)isa + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate,  v25);

    swift_unknownObjectRelease(v26);
    BOOL v28 = v26 == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v24 + 10, v24 + 14);

    _os_log_impl( (void *)&_mh_execute_header,  v22,  v23,  "Not calling back to delegate (isInitiator: %{BOOL}d, delegate is nil: %{BOOL}d)",  (uint8_t *)v24,  0xEu);
    swift_slowDealloc(v24, -1LL, -1LL);

    return;
  }

LABEL_17:
}

uint64_t sub_10047B344( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v12 = type metadata accessor for UUID(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  BOOL v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a2)
  {
    uint64_t v16 = sub_10034EC60(a4);
    UUID.init()(v16);
    sub_100462F0C(v16, a1, a2, (uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }

  else
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v17 = type metadata accessor for Logger(0LL);
    uint64_t v18 = sub_100186DE4(v17, (uint64_t)qword_100656748);
    os_log_type_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  v20,  "Got notEnabled but coudln't determine who to disable pairing with",  v21,  2u);
      swift_slowDealloc(v21, -1LL, -1LL);
    }
  }

  return a5(a7);
}

uint64_t sub_10047B4CC( int a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t (*a6)(uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a8;
  uint64_t v35 = a6;
  uint64_t v32 = a4;
  uint64_t v13 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v33 = type metadata accessor for Date(0LL);
  uint64_t v17 = *(void *)(v33 - 8);
  uint64_t v18 = __chkstk_darwin(v33);
  uint64_t v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1 == 22)
  {
    sub_10019A6C4(a3, (uint64_t)v37);
    uint64_t v22 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice;
    swift_beginAccess( a2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice,  v36,  33LL,  0LL);
    sub_1001C9860((uint64_t)v37, v22, &qword_100654080);
    uint64_t v18 = swift_endAccess(v36);
  }

  if (a5)
  {
    if (a1 == 24 || a1 == 9)
    {
      uint64_t v23 = *(void *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator);
      uint64_t v24 = *(void *)(v23 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner);
      if (!v24) {
        goto LABEL_11;
      }
      uint64_t v31 = a7;
      swift_beginAccess(v24 + 40, v37, 33LL, 0LL);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain(a5);
      sub_1003B572C(v36, v32, (uint64_t)a5);
      swift_endAccess(v37);
      uint64_t v25 = (const char *)v36[1];
    }

    else
    {
      uint64_t v23 = *(void *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator);
      uint64_t v24 = *(void *)(v23 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner);
      if (!v24) {
        goto LABEL_11;
      }
      uint64_t v31 = a7;
      swift_beginAccess(v24 + 40, v37, 33LL, 0LL);
      swift_retain();
      swift_retain();
      sub_1003BDC14(v32, (uint64_t)a5);
      uint64_t v25 = v26;
      swift_endAccess(v37);
    }

    swift_release(v23);
    swift_release(v24);
    __n128 v19 = swift_bridgeObjectRelease(v25);
  }

void sub_10047B764( uint64_t a1, const char *a2, int a3, uint64_t a4, unint64_t a5, uint64_t a6, void (*a7)(id), uint64_t a8)
{
  uint64_t v98 = a8;
  int v99 = a7;
  uint64_t v104 = type metadata accessor for UUID(0LL);
  uint64_t v103 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v102 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v19 = &qword_100644000;
  if (!a2)
  {
    char v28 = sub_10034F3D4(a5, v16);
    sub_1004573D0(v28 & 1);
    goto LABEL_29;
  }

  if (a3 == 34)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v20 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v20, (uint64_t)qword_100656748);
    swift_bridgeObjectRetain_n(a2, 2LL);
    uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v23 = static os_log_type_t.default.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc(12LL, -1LL);
      uint64_t v105 = a6;
      uint64_t v25 = (uint8_t *)v24;
      *(void *)&__int128 v101 = swift_slowAlloc(32LL, -1LL);
      v112[0] = v101;
      *(_DWORD *)uint64_t v25 = 136315138;
      __n128 v19 = &qword_100644000;
      uint64_t v100 = (char *)(v25 + 4);
      swift_bridgeObjectRetain(a2);
      uint64_t v108 = sub_10018CDB4(a1, (unint64_t)a2, v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, v109, v100, v25 + 12);
      swift_bridgeObjectRelease_n(a2, 3LL);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Clearing Last Registration Date for %s", v25, 0xCu);
      uint64_t v26 = v101;
      swift_arrayDestroy(v101, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1LL, -1LL);
      BOOL v27 = v25;
      a6 = v105;
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(a2, 2LL);
    }

    sub_100476AF0(a1, a2);
  }

  char v29 = sub_10034F3D4(a5, v16);
  uint64_t v30 = sub_10047C118(v29 & 1, a1, (unint64_t)a2, 1);
  char v31 = v30;
  if (SFDeviceClassCodeGet(v30, v32) != 1)
  {
    if ((v31 & 1) != 0) {
      goto LABEL_18;
    }
LABEL_29:
    int v79 = 1;
    goto LABEL_32;
  }

  if ((v31 & 1) == 0)
  {
    if (v19[129] != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v33 = type metadata accessor for Logger(0LL);
    uint64_t v34 = sub_100186DE4(v33, (uint64_t)qword_100656748);
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.default.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Registration not necessary, requesting manual arm", v37, 2u);
      swift_slowDealloc(v37, -1LL, -1LL);
    }

    goto LABEL_29;
  }

uint64_t sub_10047C118(int a1, uint64_t a2, unint64_t a3, int a4)
{
  void (*v26)(__int128 *__return_ptr, uint64_t, unint64_t);
  uint64_t v27;
  uint64_t v28;
  os_log_s *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_log_s *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  unsigned int v42;
  uint64_t v43;
  void *v44;
  id v45;
  NSString v46;
  uint64_t v47;
  os_log_s *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(char *, uint64_t, uint64_t, __n128);
  uint64_t v54;
  char v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  os_log_s *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  os_log_s *v66;
  os_log_type_t v67;
  uint8_t *v68;
  __n128 v69;
  uint64_t v70;
  os_log_s *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t result;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  os_log_s *v81;
  os_log_type_t v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  os_log_s *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  void (**v96)(uint64_t, uint64_t);
  char *v97;
  void *v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  os_log_type_t v107;
  uint8_t *v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int (*v113)(char *, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  void (**v118)(uint64_t, uint64_t);
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE v125[16];
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129[3];
  uint64_t v130;
  uint64_t v131;
  uint64_t v5 = v4;
  uint64_t v120 = a1;
  LODWORD(v121) = a4;
  uint64_t v8 = type metadata accessor for UUID(0LL);
  uint64_t v118 = *(void (***)(uint64_t, uint64_t))(v8 - 8);
  uint64_t v119 = v8;
  __chkstk_darwin(v8);
  uint64_t v117 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_1006457E8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v112 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v112 - v17;
  uint64_t v19 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (uint64_t *)((char *)&v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  os_log_type_t v23 = *(void **)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v22 = v23;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  id v24 = v23;
  LOBYTE(v23) = _dispatchPreconditionTest(_:)(v22);
  (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) == 0)
  {
    __break(1u);
    goto LABEL_78;
  }

  uint64_t v26 = *(void (**)(__int128 *__return_ptr, uint64_t, unint64_t))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID];
  uint64_t v25 = *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID + 8];
  swift_retain(v25);
  v26(&v126, a2, a3);
  swift_release(v25);
  if (!v127)
  {
    sub_100187100((uint64_t)&v126, &qword_100654080);
    if (qword_100644408 == -1)
    {
LABEL_10:
      uint64_t v33 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v33, (uint64_t)qword_100656748);
      uint64_t v34 = swift_bridgeObjectRetain_n(a3, 2LL);
      uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
      os_log_type_t v36 = static os_log_type_t.error.getter(v35);
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v38 = swift_slowAlloc(32LL, -1LL);
        v129[0] = v38;
        *(_DWORD *)uint64_t v37 = 136315138;
        swift_bridgeObjectRetain(a3);
        *(void *)&uint64_t v126 = sub_10018CDB4(a2, a3, v129);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v126, (char *)&v126 + 8, v37 + 4, v37 + 12);
        swift_bridgeObjectRelease_n(a3, 3LL);
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Could not find idsDevice %s for registration", v37, 0xCu);
        swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v38, -1LL, -1LL);
        swift_slowDealloc(v37, -1LL, -1LL);
      }

      else
      {
        swift_bridgeObjectRelease_n(a3, 2LL);
      }

      return 0LL;
    }

LABEL_73:
    uint64_t v122 = sub_10018CDB4(v100, v109, &v123);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123, v101 + 4, v101 + 12);
    swift_bridgeObjectRelease(v109);

    swift_bridgeObjectRelease_n(a3, 2LL);
    *(_WORD *)(v101 + 12) = 2048;
    uint64_t v122 = v114;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123, v101 + 14, v101 + 22);
    *(_WORD *)(v101 + 22) = 1024;
    LODWORD(v122) = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, (char *)&v122 + 4, v101 + 24, v101 + 28);
    *(_WORD *)(v101 + 28) = 2080;
    swift_bridgeObjectRetain(a3);
    uint64_t v122 = sub_10018CDB4(a2, a3, &v123);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123, v101 + 30, v101 + 38);
    swift_bridgeObjectRelease_n(a3, 3LL);
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v98,  (os_log_type_t)v120,  "Device has not been used since  %s which is older than %ld ago and requestArmingUI is %{BOOL}d, not reregistering %s",  (uint8_t *)v101,  0x26u);
    uint64_t v111 = v119;
    swift_arrayDestroy(v119, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v111, -1LL, -1LL);
    swift_slowDealloc(v101, -1LL, -1LL);
    swift_release(v121);
    goto LABEL_74;
  }

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56))(v16, 1LL, 1LL, v39);
LABEL_41:
  sub_100187100((uint64_t)v16, &qword_1006457E8);
LABEL_42:
  uint64_t v70 = swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v71 = (os_log_s *)Logger.logObject.getter(v70);
  uint64_t v72 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v74 = swift_slowAlloc(32LL, -1LL);
    *(void *)&uint64_t v126 = v74;
    *(_DWORD *)uint64_t v73 = 136315138;
    swift_bridgeObjectRetain(a3);
    __n128 v123 = sub_10018CDB4(a2, a3, (uint64_t *)&v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, &v124, v73 + 4, v73 + 12);
    swift_bridgeObjectRelease_n(a3, 3LL);
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "Queuing Registration for device: %s", v73, 0xCu);
    swift_arrayDestroy(v74, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v74, -1LL, -1LL);
    swift_slowDealloc(v73, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(a3, 2LL);
  }

  uint64_t v75 = v130;
  uint64_t v76 = v131;
  sub_10019A708(v129, v130);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 8))(v75, v76);
  if (v78)
  {
    int v79 = v78;
    sub_10046E020(result, v78);
    swift_bridgeObjectRelease(v79);
    if ((v120 & 1) == 0)
    {
      uint64_t v81 = (os_log_s *)Logger.logObject.getter(v80);
      uint64_t v82 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v81, v82))
      {
        os_log_type_t v83 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)os_log_type_t v83 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v81,  v82,  "Starting PairingLockSession with type .registration",  v83,  2u);
        swift_slowDealloc(v83, -1LL, -1LL);
      }

      uint64_t v84 = (uint64_t)v117;
      UUID.init()(v85);
      sub_10046AE3C(v84, (uint64_t)v129, 0LL, 0xE000000000000000LL, 8LL, &v126);
      v118[1](v84, v119);
      uint64_t v86 = v127;
      id v87 = v128;
      sub_1002499B4((uint64_t)&v126, v127);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v87 + 8) + 24LL))(v121 & 1, v86);
      sub_10019A708(&v126, v127);
      sub_10023AC90();
LABEL_54:
      swift_release(v43);
      sub_10018709C(&v126);
LABEL_55:
      sub_10018709C(v129);
      return 1LL;
    }

    uint64_t v88 = [objc_allocWithZone((Class)SDAuthenticationPairingRequest) init];
    uint64_t v89 = Logger.logObject.getter(v88);
    uint64_t v90 = (os_log_s *)v89;
    if (v88)
    {
      uint64_t v91 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v90, v91))
      {
        id v92 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)id v92 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v90,  v91,  "Starting PairingKeySession with type .registration",  v92,  2u);
        swift_slowDealloc(v92, -1LL, -1LL);
      }

      uint64_t v93 = (uint64_t)v117;
      UUID.init()(v94);
      sub_10046B0F0(v93, (uint64_t)v129, (char *)8, v121 & 1, &v126);
      v118[1](v93, v119);
      sub_10019A708(&v126, v127);
      sub_1003D4474(v88);

      goto LABEL_54;
    }

    uint64_t v107 = static os_log_type_t.error.getter(v89);
    if (os_log_type_enabled(v90, v107))
    {
      uint64_t v108 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v108 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v90,  v107,  "Could not create pairing request, this shouldn't happen",  v108,  2u);
      swift_slowDealloc(v108, -1LL, -1LL);
    }

    swift_release(v43);

    goto LABEL_75;
  }

  __break(1u);
  return result;
}

uint64_t sub_10047D200(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 112) = a6;
  *(void *)(v7 + 120) = a7;
  *(void *)(v7 + 104) = a5;
  *(_BYTE *)(v7 + 168) = a4;
  uint64_t v8 = type metadata accessor for ContinuousClock(0LL);
  *(void *)(v7 + 128) = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)(v7 + 136) = v9;
  *(void *)(v7 + 144) = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10047D268, 0LL, 0LL);
}

uint64_t sub_10047D268()
{
  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100656748);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)uint64_t v5 = 134217984;
    *(void *)(v0 + 96) = 1LL;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v5 + 4, v5 + 12);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Waiting for %ld seconds before disconnecting", v5, 0xCu);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  ContinuousClock.init()(v6);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006461D8 + dword_1006461D8);
  uint64_t v7 = (void *)swift_task_alloc(unk_1006461DC);
  *(void *)(v0 + 152) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_10047D3D0;
  return v9(1000000000000000000LL, 0LL, 0LL, 0LL, 1);
}

uint64_t sub_10047D3D0()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 152LL);
  *(void *)(*(void *)v1 + 16(*(void (**)(void, void))(v0 + 32))(*(unsigned __int8 *)(v0 + 64), 0LL) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(void, void))(v2[17] + 8LL))(v2[18], v2[16]);
  if (v0) {
    os_log_type_t v4 = sub_10047D658;
  }
  else {
    os_log_type_t v4 = sub_10047D444;
  }
  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_10047D444()
{
  unint64_t v1 = *(void *)(v0 + 104);
  if (*(_BYTE *)(v0 + 168) == 1)
  {
    if (v1 > 0xE || ((1LL << v1) & 0x658E) == 0) {
      goto LABEL_16;
    }
    uint64_t v3 = v0 + 56;
    uint64_t v4 = *(void *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 120);
    uint64_t v6 = *(void *)(*(void *)(v0 + 112) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
    char v7 = sub_10034E9D8(v1);
    sub_10019A6C4(v5, v0 + 56);
    sub_1003F0DB4(v7);
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t ObjectType = swift_getObjectType(v8);
    (*(void (**)(uint64_t, uint64_t))(v11 + 56))(ObjectType, v11);
    uint64_t v13 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_transportLock);
    uint64_t v14 = (void *)swift_task_alloc(48LL);
    __int128 v14[2] = v9;
    void v14[3] = v11;
    v14[4] = v0 + 56;
    v14[5] = v6;
    uint64_t v15 = swift_task_alloc(32LL);
    uint64_t v16 = v15;
  }

  else
  {
    if (v1 <= 0xE && ((1LL << v1) & 0x658E) != 0) {
      goto LABEL_16;
    }
    uint64_t v3 = v0 + 16;
    uint64_t v4 = *(void *)(v0 + 160);
    uint64_t v20 = *(void *)(v0 + 120);
    uint64_t v21 = *(void *)(*(void *)(v0 + 112)
                    + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
    char v22 = sub_10034E9D8(v1);
    sub_10019A6C4(v20, v0 + 16);
    sub_1003F0DB4(v22);
    uint64_t v9 = v23;
    uint64_t v25 = v24;
    uint64_t v26 = swift_getObjectType(v23);
    (*(void (**)(uint64_t, uint64_t))(v25 + 56))(v26, v25);
    uint64_t v13 = *(os_unfair_lock_s **)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_transportLock);
    uint64_t v14 = (void *)swift_task_alloc(48LL);
    __int128 v14[2] = v9;
    void v14[3] = v25;
    v14[4] = v0 + 16;
    v14[5] = v21;
    uint64_t v15 = swift_task_alloc(32LL);
    uint64_t v16 = v15;
  }

  *(void *)(v15 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = sub_1002DB064;
  *(void *)(v15 + 24) = v14;
  os_unfair_lock_lock(v13 + 4);
  sub_1002737FC(v17, *(uint64_t (**)(void))(v16 + 16));
  os_unfair_lock_unlock(v13 + 4);
  if (v4) {
    return swift_task_dealloc(v16);
  }
  swift_unknownObjectRelease(v9);
  swift_task_dealloc(v16);
  swift_task_dealloc(v14);
  sub_100187100(v3, &qword_100654080);
LABEL_16:
  swift_task_dealloc(*(void *)(v0 + 144));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10047D658()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10047D68C(void *a1, void *a2)
{
  return sub_10047D6A4(a1, a2) & 1;
}

uint64_t sub_10047D6A4(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v17 - v9;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_10019A708(a1, v11);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v12 + 8) + 8LL) + 32LL))(v11);
  uint64_t v13 = a2[3];
  uint64_t v14 = a2[4];
  sub_10019A708(a2, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v13, v14);
  LOBYTE(a1) = static UUID.== infix(_:_:)(v10, v8);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return a1 & 1;
}

uint64_t *sub_10047D818(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain();
  }

  else
  {
    uint64_t v7 = type metadata accessor for Date(0LL);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1LL, v7))
    {
      uint64_t v9 = sub_100183098(&qword_1006457E8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0LL, 1LL, v7);
    }

    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }

  return a1;
}

uint64_t sub_10047D900(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1LL, v2);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  return result;
}

void *sub_10047D968(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1LL, v6))
  {
    uint64_t v8 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
  }

  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_10047DA24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }

    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_10047DB2C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1LL, v6))
  {
    uint64_t v8 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
  }

  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_10047DBE8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }

    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10047DCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10047DCFC);
}

uint64_t sub_10047DCFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100183098(&qword_1006457E8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2) {
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_10047DD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10047DD98);
}

uint64_t sub_10047DD98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100183098(&qword_1006457E8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for RegistrationState(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_100656908, (uint64_t)&nominal type descriptor for RegistrationState);
}

void sub_10047DE28(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = &unk_1004DCDF8;
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
  }

uint64_t *sub_10047DEA8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain();
  }

  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date(0LL);
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1LL, v10))
    {
      uint64_t v13 = sub_100183098(&qword_1006457E8);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
    }

    uint64_t v15 = a3[6];
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if (v12((char *)a2 + v15, 1LL, v10))
    {
      uint64_t v18 = sub_100183098(&qword_1006457E8);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0LL, 1LL, v10);
    }

    uint64_t v19 = a3[7];
    uint64_t v20 = a3[8];
    uint64_t v21 = *(const char **)((char *)a2 + v19);
    *(uint64_t *)((char *)v4 + v19) = (uint64_t)v21;
    char v22 = *(const char **)((char *)a2 + v20);
    *(uint64_t *)((char *)v4 + v20) = (uint64_t)v22;
    *(void *)&double v23 = swift_bridgeObjectRetain(v21).n128_u64[0];
    swift_bridgeObjectRetain(v22, v23);
  }

  return v4;
}

uint64_t sub_10047E030(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1LL, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[6];
  if (!v7(v8, 1LL, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease(*(void *)(a1 + a2[7]));
  return swift_bridgeObjectRelease(*(void *)(a1 + a2[8]));
}

_BYTE *sub_10047E0E0(_BYTE *a1, _BYTE *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1LL, v9))
  {
    uint64_t v12 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (v11(&a2[v13], 1LL, v9))
  {
    uint64_t v16 = sub_100183098(&qword_1006457E8);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0LL, 1LL, v9);
  }

  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = *(const char **)&a2[v17];
  *(void *)&a1[v17] = v19;
  uint64_t v20 = *(const char **)&a2[v18];
  *(void *)&a1[v18] = v20;
  *(void *)&double v21 = swift_bridgeObjectRetain(v19).n128_u64[0];
  swift_bridgeObjectRetain(v20, v21);
  return a1;
}

_BYTE *sub_10047E23C(_BYTE *a1, _BYTE *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1LL, v9);
  int v13 = v11(v8, 1LL, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v13)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1LL, v9);
  int v19 = v11(v17, 1LL, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }

    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }

  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_100183098(&qword_1006457E8);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0LL, 1LL, v9);
LABEL_13:
  uint64_t v21 = a3[7];
  char v22 = *(const char **)&a2[v21];
  double v23 = *(const char **)&a1[v21];
  *(void *)&a1[v21] = v22;
  *(void *)&double v24 = swift_bridgeObjectRetain(v22).n128_u64[0];
  *(void *)&double v25 = swift_bridgeObjectRelease(v23, v24).n128_u64[0];
  uint64_t v26 = a3[8];
  BOOL v27 = *(const char **)&a2[v26];
  char v28 = *(const char **)&a1[v26];
  *(void *)&a1[v26] = v27;
  *(void *)&double v29 = swift_bridgeObjectRetain(v27, v25).n128_u64[0];
  swift_bridgeObjectRelease(v28, v29);
  return a1;
}

_BYTE *sub_10047E440(_BYTE *a1, _BYTE *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1LL, v9))
  {
    uint64_t v12 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (v11(&a2[v13], 1LL, v9))
  {
    uint64_t v16 = sub_100183098(&qword_1006457E8);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0LL, 1LL, v9);
  }

  uint64_t v17 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  return a1;
}

_BYTE *sub_10047E590(_BYTE *a1, _BYTE *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1LL, v9);
  int v13 = v11(v8, 1LL, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v13)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1LL, v9);
  int v19 = v11(v17, 1LL, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v16, v17, v9);
      goto LABEL_13;
    }

    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }

  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_100183098(&qword_1006457E8);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0LL, 1LL, v9);
LABEL_13:
  uint64_t v21 = a3[7];
  char v22 = *(const char **)&a1[v21];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  *(void *)&double v23 = swift_bridgeObjectRelease(v22).n128_u64[0];
  uint64_t v24 = a3[8];
  double v25 = *(const char **)&a1[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  swift_bridgeObjectRelease(v25, v23);
  return a1;
}

uint64_t sub_10047E784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10047E790);
}

uint64_t sub_10047E790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100183098(&qword_1006457E8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  return (v9 + 1);
}

uint64_t sub_10047E814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10047E820);
}

uint64_t sub_10047E820(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100183098(&qword_1006457E8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))( a1 + *(int *)(a4 + 20),  a2,  a2,  result);
  }
  *(void *)(a1 + *(int *)(a4 + 2sub_100189B20(*(void *)v0, *(void *)(v0 + 8)) = (a2 - 1);
  return result;
}

void sub_10047E8A0(uint64_t a1)
{
  uint64_t v4 = &unk_1004DCEB0;
  sub_1001C1100( 319LL,  (unint64_t *)&qword_10064CB50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  if (v3 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v2 - 8) + 64LL;
    uint64_t v6 = v5;
    uint64_t v7 = (char *)&value witness table for Builtin.BridgeObject + 64;
    uint64_t v8 = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256LL, 5LL, &v4, a1 + 16);
  }

uint64_t sub_10047E934(uint64_t a1)
{
  uint64_t v35 = a1;
  uint64_t v1 = type metadata accessor for Calendar.Component(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_1006457E8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = type metadata accessor for Date(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v30 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  char v31 = (char *)&v30 - v16;
  __chkstk_darwin(v15);
  int v18 = (char *)&v30 - v17;
  uint64_t v19 = type metadata accessor for Calendar(0LL);
  uint64_t v32 = *(void *)(v19 - 8);
  uint64_t v33 = v19;
  uint64_t v20 = __chkstk_darwin(v19);
  char v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = static Calendar.current.getter(v20);
  Date.init()(v23);
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v2 + 104))( v4,  enum case for Calendar.Component.day(_:),  v1);
  if (v35 == 0x8000000000000000LL)
  {
    __break(1u);
  }

  else
  {
    Calendar.date(byAdding:value:to:wrappingComponents:)(v4, -v35, v18, 0LL);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_1001915A4((uint64_t)v10, (uint64_t)v8, &qword_1006457E8);
    double v25 = v30;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v30, v18, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1LL, v11) == 1)
    {
      uint64_t v26 = v31;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v31, v25, v11);
      sub_100187100((uint64_t)v8, &qword_1006457E8);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v25, v11);
      uint64_t v26 = v31;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v31, v8, v11);
    }

    uint64_t v27 = sub_100183F14( (unint64_t *)&unk_100656470,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
    char v28 = dispatch thunk of static Comparable.< infix(_:_:)(v34, v26, v11, v27);
    double v29 = *(void (**)(char *, uint64_t))(v12 + 8);
    v29(v26, v11);
    sub_100187100((uint64_t)v10, &qword_1006457E8);
    v29(v18, v11);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v33);
    return (v28 & 1) == 0;
  }

  return result;
}

void sub_10047EC40(uint64_t a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v8);
  uint64_t v10 = &v65[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = type metadata accessor for UUID(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = &v65[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v13);
  uint64_t v17 = &v65[-v16];
  if ((unint64_t)(a1 - 9) <= 5
    && (id v18 = [a2 uniqueIDOverride]) != 0)
  {
    uint64_t v19 = v18;
    uint64_t v71 = a4;
    uint64_t v72 = a1;
    id v73 = v17;
    int v20 = a3 & 1;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    uint64_t v23 = v22;

    if (qword_100644088 != -1) {
      swift_once(&qword_100644088, sub_100270494);
    }
    swift_bridgeObjectRetain(v23);
    sub_1002712F8(3);
    uint64_t v36 = v35;
    int v66 = v20;
    uint64_t v70 = v11;
    swift_bridgeObjectRelease(v23);
    id v37 = v73;
    uint64_t v39 = UUID.init()(v38);
    uint64_t v68 = v65;
    __chkstk_darwin(v39);
    uint64_t v69 = v36;
    *(void *)&v65[-32] = v36;
    *(void *)&v65[-24] = v21;
    os_log_type_t v67 = (uint8_t *)v21;
    os_log_type_t v41 = v40 + 4;
    *(void *)&v65[-16] = v23;
    *(void *)&v65[-8] = v37;
    os_unfair_lock_lock(v40 + 4);
    sub_1002737FC(v42, sub_100287514);
    os_unfair_lock_unlock(v41);
    swift_bridgeObjectRelease(v23);
    uint64_t v43 = v70;
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v44 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v44, (uint64_t)qword_100656748);
    uint64_t v45 = (uint64_t)v73;
    uint64_t v46 = (*(uint64_t (**)(_BYTE *, id, uint64_t))(v12 + 16))(v15, v73, v43);
    double v47 = (os_log_s *)Logger.logObject.getter(v46);
    os_log_type_t v48 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v68 = (_BYTE *)swift_slowAlloc(32LL, -1LL);
      v78[0] = (uint64_t)v68;
      *(_DWORD *)uint64_t v49 = 136315138;
      os_log_type_t v67 = v49 + 4;
      uint64_t v50 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter(v43, v50);
      uint64_t v53 = (const char *)v52;
      *(void *)&__int128 v75 = sub_10018CDB4(v51, v52, v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, (char *)&v75 + 8, v67, v49 + 12);
      __n128 v54 = swift_bridgeObjectRelease(v53);
      uint64_t v55 = *(void (**)(_BYTE *, uint64_t, __n128))(v12 + 8);
      __int128 v56 = v15;
      uint64_t v57 = v43;
      v55(v56, v43, v54);
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "Starting executor for sessionID %s", v49, 0xCu);
      uint64_t v58 = v68;
      swift_arrayDestroy(v68, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1LL, -1LL);
      uint64_t v45 = (uint64_t)v73;
      swift_slowDealloc(v49, -1LL, -1LL);
    }

    else
    {
      uint64_t v55 = *(void (**)(_BYTE *, uint64_t, __n128))(v12 + 8);
      ((void (*)(_BYTE *, uint64_t))v55)(v15, v43);

      uint64_t v57 = v43;
    }

    uint64_t v76 = sub_100183168(0LL, (unint64_t *)&qword_10064D810, &OBJC_CLASS___IDSDevice_ptr);
    uint64_t v77 = &off_1005E0BD0;
    *(void *)&__int128 v75 = a2;
    id v59 = objc_allocWithZone(&OBJC_CLASS___SFAuthenticationOptions);
    id v60 = a2;
    id v61 = [v59 init];
    v74[3] = sub_100183168(0LL, &qword_1006569F0, &OBJC_CLASS___SFAuthenticationOptions_ptr);
    v74[4] = &off_1005DC590;
    v74[0] = v61;
    sub_100462B08(v45, (uint64_t)&v75, v72, v66, (uint64_t)v74, (uint64_t)v78);
    sub_100187100((uint64_t)v74, &qword_1006569F8);
    sub_10018709C(&v75);
    uint64_t v62 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56LL))(v10, 1LL, 1LL, v62);
    sub_10019A6C4((uint64_t)v78, (uint64_t)&v75);
    uint64_t v63 = swift_allocObject(&unk_1005E3660, 72LL, 7LL);
    *(void *)(v63 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = 0LL;
    *(void *)(v63 + 24) = 0LL;
    sub_1001CE0D0(&v75, v63 + 32);
    uint64_t v64 = sub_1001B37E8((uint64_t)v10, (uint64_t)&unk_100656C78, v63);
    swift_release(v69);
    swift_release(v64);
    sub_10018709C(v78);
    ((void (*)(uint64_t, uint64_t))v55)(v45, v57);
  }

  else
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v24 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v24, (uint64_t)qword_100656748);
    id v73 = a2;
    double v25 = (os_log_s *)Logger.logObject.getter(v73);
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc(22LL, -1LL);
      char v28 = (void *)swift_slowAlloc(8LL, -1LL);
      uint64_t v29 = swift_slowAlloc(32LL, -1LL);
      v78[0] = v29;
      *(_DWORD *)uint64_t v27 = 136315394;
      unint64_t v30 = sub_10034F010(a1);
      uint64_t v32 = (const char *)v31;
      *(void *)&__int128 v75 = sub_10018CDB4(v30, v31, v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, (char *)&v75 + 8, v27 + 4, v27 + 12);
      swift_bridgeObjectRelease(v32);
      *(_WORD *)(v27 + 12) = 2112;
      *(void *)&__int128 v75 = v73;
      id v33 = v73;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, (char *)&v75 + 8, v27 + 14, v27 + 22);
      *char v28 = v73;

      _os_log_impl( (void *)&_mh_execute_header,  v25,  v26,  "Skipping registration for %s with %@ as feature is not enabled or no remoteDeviceID",  (uint8_t *)v27,  0x16u);
      uint64_t v34 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v28, 1LL, v34);
      swift_slowDealloc(v28, -1LL, -1LL);
      swift_arrayDestroy(v29, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1LL, -1LL);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    else
    {
    }
  }

void sub_10047F7F0()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  void *v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportsReady) = 1;
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = sub_100186DE4(v7, (uint64_t)qword_100656748);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "All transports are ready", v11, 2u);
    swift_slowDealloc(v11, -1LL, -1LL);
  }
}

void sub_10047F964(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  os_log_type_t v10 = (void *)((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = *(void **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *os_log_type_t v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  char v13 = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if ((v13 & 1) != 0)
  {
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = sub_100186DE4(v14, (uint64_t)qword_100656748);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v19 = swift_slowAlloc(32LL, -1LL);
    v24[0] = v4;
    v24[1] = a1;
    uint64_t v20 = v19;
    uint64_t v26 = v19;
    *(_DWORD *)id v18 = 136315138;
    uint64_t v21 = sub_10034F6BC(a3);
    uint64_t v23 = (const char *)v22;
    uint64_t v25 = sub_10018CDB4(v21, v22, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v18 + 4, v18 + 12);
    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Handling: %s", v18, 0xCu);
    swift_arrayDestroy(v20, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1LL, -1LL);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  __asm { BR              X10 }

void sub_10047FD88(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  int v18 = a1;
  uint64_t v8 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v8);
  uint64_t v17 = type metadata accessor for UUID(0LL);
  __chkstk_darwin(v17);
  uint64_t v16 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char **)((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v14 = *(void **)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *char v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0) {
    __asm { BR              X10 }
  }

  __break(1u);
  JUMPOUT(0x100480A58LL);
}

uint64_t sub_100480ADC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc(a3[1]);
  *(void *)(v3 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v4;
  void *v4 = v3;
  v4[1] = sub_100195708;
  return v6();
}

uint64_t sub_100480B30(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc(a4[1]);
  *(void *)(v4 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v5;
  void *v5 = v4;
  v5[1] = sub_100195708;
  return v7();
}

uint64_t sub_100480B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1LL, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_100187100(a1, &qword_100646560);
    uint64_t v9 = 7168LL;
    uint64_t v10 = *(void *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      uint64_t v11 = *(void *)(a3 + 24);
      uint64_t ObjectType = swift_getObjectType(v10);
      swift_unknownObjectRetain(v10);
      uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      uint64_t v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }

  else
  {
    unsigned __int8 v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    uint64_t v9 = v16 | 0x1C00LL;
    uint64_t v10 = *(void *)(a3 + 16);
    if (v10) {
      goto LABEL_3;
    }
  }

  uint64_t v13 = 0LL;
  uint64_t v15 = 0LL;
LABEL_6:
  uint64_t v17 = swift_allocObject(&unk_1005E3610, 32LL, 7LL);
  *(void *)(v17 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0LL;
    v20[1] = 0LL;
    int v18 = v20;
    void v20[2] = v13;
    v20[3] = v15;
  }

  else
  {
    int v18 = 0LL;
  }

  return swift_task_create(v9, v18, (char *)&type metadata for () + 8, &unk_100656C50, v17);
}

unint64_t sub_100480CD4(uint64_t a1, uint64_t a2)
{
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(a2 + 40));
  unint64_t result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1LL << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1LL << *(_BYTE *)(a2 + 32)));
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

Swift::Int sub_100480D54(uint64_t a1, const char **a2, void *a3, os_unfair_lock_s *a4, char a5)
{
  uint64_t v6 = a4;
  uint64_t v8 = a5 & 1;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    id v9 = &_swiftEmptySetSingleton;
    id v37 = &_swiftEmptySetSingleton;
    if (a1 < 0) {
      uint64_t v10 = a1;
    }
    else {
      uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    id v11 = a3;
    uint64_t v34 = __CocoaSet.makeIterator()(v10);
    uint64_t v12 = __CocoaSet.Iterator.next()(v34);
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
      uint64_t v15 = a2;
      do
      {
        uint64_t v35 = v13;
        swift_dynamicCast(&v36, &v35, (char *)&type metadata for Swift.AnyObject + 8, v14, 7LL);
        sub_100461CB4(&v36, v15, (uint64_t)v11, v6);
        if (v5)
        {
          swift_release(v34);

          uint64_t v32 = v37;
          swift_release(v32);
          return (Swift::Int)v9;
        }

        id v9 = v36;
        if ((v17 & 1) != 0)
        {
          id v18 = v11;
          uint64_t v19 = v8;
          uint64_t v20 = v6;
          uint64_t v21 = v37;
          unint64_t v22 = v37[2];
          if (v37[3] <= v22)
          {
            sub_1003B8014(v22 + 1);
            uint64_t v21 = v37;
          }

          Swift::Int result = NSObject._rawHashValue(seed:)(v21[5]);
          uint64_t v23 = v21 + 7;
          uint64_t v24 = -1LL << *((_BYTE *)v21 + 32);
          unint64_t v25 = result & ~v24;
          unint64_t v26 = v25 >> 6;
          if (((-1LL << v25) & ~v21[(v25 >> 6) + 7]) != 0)
          {
            unint64_t v27 = __clz(__rbit64((-1LL << v25) & ~v21[(v25 >> 6) + 7])) | v25 & 0x7FFFFFFFFFFFFFC0LL;
          }

          else
          {
            char v28 = 0;
            unint64_t v29 = (unint64_t)(63 - v24) >> 6;
            do
            {
              if (++v26 == v29 && (v28 & 1) != 0)
              {
                __break(1u);
                return result;
              }

              BOOL v30 = v26 == v29;
              if (v26 == v29) {
                unint64_t v26 = 0LL;
              }
              v28 |= v30;
              uint64_t v31 = v23[v26];
            }

            while (v31 == -1);
            unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          }

          *(void *)((char *)v23 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v27;
          *(void *)(v21[6] + 8 * v27) = v9;
          ++v21[2];
          uint64_t v6 = v20;
          uint64_t v8 = v19;
          id v11 = v18;
          uint64_t v15 = a2;
        }

        else
        {
        }

        uint64_t v13 = __CocoaSet.Iterator.next()(result);
      }

      while (v13);
      id v9 = v37;
    }

    swift_release(v34);
  }

  else
  {
    id v9 = (id)sub_100488D08(a1, a2, a3, a4);
  }

  return (Swift::Int)v9;
}

uint64_t sub_100480FF4( uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = isStackAllocationSafe;
  char v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (1LL << v5) + 63;
  unint64_t v8 = v7 >> 6;
  size_t v9 = 8 * (v7 >> 6);
  if (v6 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v7 >> 6), 8LL), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0LL), v9);
    uint64_t v10 = a2((char *)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0LL), v8, v4);
    uint64_t v11 = swift_release(v4);
    if (v2) {
      swift_willThrow(v11);
    }
  }

  else
  {
    uint64_t v12 = (void *)swift_slowAlloc(v9, -1LL);
    bzero(v12, v9);
    uint64_t v10 = a2((char *)v12, v8, v4);
    swift_release(v4);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  return v10;
}

uint64_t sub_10048115C(uint64_t isStackAllocationSafe, float a2)
{
  uint64_t v4 = isStackAllocationSafe;
  char v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (1LL << v5) + 63;
  uint64_t v8 = v7 >> 6;
  size_t v9 = 8 * (v7 >> 6);
  if (v6 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v7 >> 6), 8LL), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v16 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0LL), v9);
    sub_100481614((unint64_t *)((char *)&v16 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0LL)), v8, v4, a2);
    uint64_t v11 = v10;
    uint64_t v12 = swift_release(v4);
    if (v2) {
      swift_willThrow(v12);
    }
  }

  else
  {
    uint64_t v13 = (void *)swift_slowAlloc(v9, -1LL);
    bzero(v13, v9);
    sub_100481614((unint64_t *)v13, v8, v4, a2);
    uint64_t v11 = v14;
    swift_release(v4);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  return v11;
}

unint64_t *sub_1004812CC(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v5 = 0LL;
  int64_t v6 = 0LL;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1LL << *(_BYTE *)(a3 + 32);
  uint64_t v9 = -1LL;
  if (v8 < 64) {
    uint64_t v9 = ~(-1LL << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }

    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1LL))
    {
      __break(1u);
      goto LABEL_26;
    }

    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }

unint64_t *sub_100481470(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v5 = 0LL;
  int64_t v6 = 0LL;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1LL << *(_BYTE *)(a3 + 32);
  uint64_t v9 = -1LL;
  if (v8 < 64) {
    uint64_t v9 = ~(-1LL << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }

    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1LL))
    {
      __break(1u);
      goto LABEL_26;
    }

    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }

void sub_100481614(unint64_t *a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v22 = 0LL;
  int64_t v7 = 0LL;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1LL << *(_BYTE *)(a3 + 32);
  uint64_t v10 = -1LL;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    unint64_t v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v14 = v13 | (v7 << 6);
LABEL_17:
    id v23 = *(id *)(*(void *)(a3 + 48) + 8 * v14);
    id v18 = v23;
    unsigned __int8 v19 = sub_10046165C(&v23, a4);

    if (v4) {
      return;
    }
    if ((v19 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v14;
      BOOL v15 = __OFADD__(v22++, 1LL);
      if (v15) {
        goto LABEL_30;
      }
    }
  }

  BOOL v15 = __OFADD__(v7++, 1LL);
  if (v15)
  {
    __break(1u);
    goto LABEL_29;
  }

  if (v7 >= v12) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v7);
  if (v16)
  {
LABEL_16:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
    goto LABEL_17;
  }

  int64_t v17 = v7 + 1;
  if (v7 + 1 >= v12) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v7 + 2;
  if (v7 + 2 >= v12) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v7 + 3;
  if (v7 + 3 >= v12)
  {
LABEL_27:
    swift_retain();
    sub_100481804(a1, a2, v22, a3, &qword_100652550);
    return;
  }

  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
LABEL_15:
    int64_t v7 = v17;
    goto LABEL_16;
  }

  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1LL)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_27;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_16;
    }
  }

Swift::Int sub_1004817F8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100481804(a1, a2, a3, a4, &qword_100646C78);
}

Swift::Int sub_100481804(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a4;
  if (!a3)
  {
    uint64_t v10 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v5);
    return (Swift::Int)v10;
  }

  uint64_t v6 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v5;
  }
  sub_100183098(a5);
  Swift::Int result = static _SetStorage.allocate(capacity:)(v6);
  uint64_t v10 = (void *)result;
  BOOL v30 = a1;
  if (a2 < 1) {
    unint64_t v11 = 0LL;
  }
  else {
    unint64_t v11 = *a1;
  }
  uint64_t v12 = 0LL;
  Swift::Int v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }

    uint64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1LL)) {
      goto LABEL_39;
    }
    if (v16 >= a2) {
      goto LABEL_36;
    }
    unint64_t v17 = v30[v16];
    ++v12;
    if (!v17)
    {
      uint64_t v12 = v16 + 1;
      if (v16 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v17 = v30[v12];
      if (!v17)
      {
        uint64_t v12 = v16 + 2;
        if (v16 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v17 = v30[v12];
        if (!v17) {
          break;
        }
      }
    }

Swift::Int sub_100481A5C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v33 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!a3)
  {
    swift_release(a4);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }

  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_100183098(&qword_100646C68);
  Swift::Int result = static _SetStorage.allocate(capacity:)(a3);
  Swift::Int v11 = result;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  if (a2 < 1) {
    unint64_t v13 = 0LL;
  }
  else {
    unint64_t v13 = *a1;
  }
  uint64_t v14 = 0LL;
  Swift::Int v15 = result + 56;
  while (1)
  {
    if (v13)
    {
      unint64_t v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v17 = v16 | (v14 << 6);
    }

    else
    {
      uint64_t v18 = v14 + 1;
      if (__OFADD__(v14, 1LL)) {
        goto LABEL_40;
      }
      if (v18 >= v32)
      {
LABEL_37:
        swift_release(a4);
        return v11;
      }

      unint64_t v19 = v31[v18];
      ++v14;
      if (!v19)
      {
        uint64_t v14 = v18 + 1;
        if (v18 + 1 >= v32) {
          goto LABEL_37;
        }
        unint64_t v19 = v31[v14];
        if (!v19)
        {
          uint64_t v14 = v18 + 2;
          if (v18 + 2 >= v32) {
            goto LABEL_37;
          }
          unint64_t v19 = v31[v14];
          if (!v19)
          {
            uint64_t v20 = v18 + 3;
            if (v20 >= v32) {
              goto LABEL_37;
            }
            unint64_t v19 = v31[v20];
            if (!v19)
            {
              while (1)
              {
                uint64_t v14 = v20 + 1;
                if (__OFADD__(v20, 1LL)) {
                  goto LABEL_41;
                }
                if (v14 >= v32) {
                  goto LABEL_37;
                }
                unint64_t v19 = v31[v14];
                ++v20;
                if (v19) {
                  goto LABEL_24;
                }
              }
            }

            uint64_t v14 = v20;
          }
        }
      }

uint64_t sub_100481D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_1003AD53C(a2, a3);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }

  else
  {
    char v18 = v13;
    uint64_t v19 = v12[3];
    if (v19 >= v17 && (a4 & 1) != 0)
    {
LABEL_7:
      uint64_t v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        uint64_t v21 = v20[7];
        uint64_t v22 = type metadata accessor for RegistrationState(0LL);
        uint64_t v23 = *(void *)(v22 - 8);
        unint64_t v24 = *(void *)(v23 + 72) * v14;
        sub_1001A4B40(v21 + v24, a5, type metadata accessor for RegistrationState);
        sub_1001A4B40(a1, v20[7] + v24, type metadata accessor for RegistrationState);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(a5, 0LL, 1LL, v22);
      }

      goto LABEL_11;
    }

    if (v19 >= v17 && (a4 & 1) == 0)
    {
      sub_1003AF1A4();
      goto LABEL_7;
    }

    sub_1003AA304(v17, a4 & 1);
    uint64_t v26 = sub_1003AD53C(a2, a3);
    if ((v18 & 1) == (v27 & 1))
    {
      unint64_t v14 = v26;
      uint64_t v20 = *v6;
      if ((v18 & 1) != 0) {
        goto LABEL_8;
      }
LABEL_11:
      sub_1003B4BE8(v14, a2, a3, a1, v20);
      uint64_t v28 = type metadata accessor for RegistrationState(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56LL))(a5, 1LL, 1LL, v28);
      return swift_bridgeObjectRetain(a3);
    }
  }

  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void *sub_100481EEC@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, void *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void *sub_100481F28(int a1, uint64_t a2)
{
  LODWORD(v3) = a1;
  uint64_t v4 = sub_100183098(&qword_100656A10);
  v74[3] = v4;
  uint64_t v5 = sub_1001CD538(&qword_100656A18, &qword_100656A10, (uint64_t)&protocol conformance descriptor for Set<A>);
  v74[4] = v5;
  v74[0] = a2;
  uint64_t v6 = sub_10019A708(v74, v4);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v9 + 16))(v8);
  uint64_t v10 = *(void *)(v5 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL, v10);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness( v10,  v4,  AssociatedTypeWitness,  &protocol requirements base descriptor for Sequence,  &associated conformance descriptor for Sequence.Sequence.Iterator: IteratorProtocol);
  Swift::Int v11 = sub_1001A4B04(v71);
  uint64_t v12 = *v8;
  if ((*v8 & 0xC000000000000001LL) != 0)
  {
    if (v12 >= 0) {
      v12 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    swift_bridgeObjectRetain(a2);
    uint64_t v13 = __CocoaSet.makeIterator()(v12);
    uint64_t v14 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
    unint64_t v15 = sub_10023F574();
    Set.Iterator.init(_cocoa:)(v75, v13, v14, v15);
    uint64_t v12 = v75[0];
    uint64_t v16 = v75[1];
    __int128 v17 = v76;
    uint64_t v18 = v77;
  }

  else
  {
    uint64_t v19 = -1LL << *(_BYTE *)(v12 + 32);
    uint64_t v16 = v12 + 56;
    uint64_t v20 = ~v19;
    uint64_t v21 = -v19;
    if (v21 < 64) {
      uint64_t v22 = ~(-1LL << v21);
    }
    else {
      uint64_t v22 = -1LL;
    }
    uint64_t v18 = v22 & *(void *)(v12 + 56);
    swift_bridgeObjectRetain(a2);
    __int128 v17 = (unint64_t)v20;
  }

  *Swift::Int v11 = v12;
  v11[1] = v16;
  *((_OWORD *)v11 + 1) = v17;
  v11[4] = v18;
  uint64_t v23 = AssociatedTypeWitness;
  uint64_t v24 = AssociatedConformanceWitness;
  sub_1002499B4((uint64_t)v71, AssociatedTypeWitness);
  dispatch thunk of IteratorProtocol.next()(v23, v24);
  uint64_t v26 = (void *)v67;
  if (!(void)v67)
  {
    uint64_t v63 = _swiftEmptyArrayStorage;
LABEL_36:
    sub_10018709C(v71);
    sub_10018709C(v74);
    return v63;
  }

  uint64_t v63 = _swiftEmptyArrayStorage;
  char v27 = &OBJC_CLASS___SDConnectionManager;
  uint64_t v28 = &selRef_setWatchIDsMissingSessionKey_;
  uint64_t v29 = &selRef_setWatchIDsMissingSessionKey_;
  *(void *)&__int128 v25 = 136315138LL;
  __int128 v65 = v25;
  unint64_t v62 = (unint64_t)"Unknown assertion state";
  uint64_t v64 = (char *)&type metadata for Any + 8;
  int v66 = (int)v3;
  while (1)
  {
    while (1)
    {
      uint64_t result = [(id)objc_opt_self(&v27[16]) v28[56]];
      uint64_t v33 = result;
      if (!result) {
        goto LABEL_38;
      }
      id v36 = [v26 v29[432]];
      unsigned __int8 v37 = [v33 deviceEnabledAsKeyForIDSDeviceID:v36];

      if ((v37 & 1) == 0) {
        goto LABEL_11;
      }
LABEL_19:
      uint64_t result = [(id)objc_opt_self(SDAutoUnlockTransport) sharedTransport];
      if (!result) {
        goto LABEL_39;
      }
      uint64_t v38 = result;
      id v39 = [v26 v29[432]];
      id v40 = [v38 idsDeviceForUniqueID:v39];

      if (!v40)
      {
        if (qword_100644408 != -1) {
          swift_once(&qword_100644408, sub_100458568);
        }
        uint64_t v41 = type metadata accessor for Logger(0LL);
        sub_100186DE4(v41, (uint64_t)qword_100656748);
        id v42 = v26;
        uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
        os_log_type_t v44 = static os_log_type_t.error.getter(v43);
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v45 = v27;
          uint64_t v46 = swift_slowAlloc(12LL, -1LL);
          uint64_t v47 = swift_slowAlloc(32LL, -1LL);
          os_log_type_t v48 = v29;
          uint64_t v49 = v47;
          uint64_t v70 = v47;
          *(_DWORD *)uint64_t v46 = v65;
          uint64_t v3 = v48;
          id v50 = [v42 v48[432]];
          if (v50)
          {
            uint64_t v51 = v50;
            uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
            unint64_t v54 = v53;
          }

          else
          {
            *(void *)&__int128 v67 = 0LL;
            *((void *)&v67 + 1) = 0xE000000000000000LL;
            _StringGuts.grow(_:)(17LL);
            swift_bridgeObjectRelease(*((void *)&v67 + 1));
            unint64_t v54 = v62 | 0x8000000000000000LL;
            uint64_t v52 = 0xD000000000000015LL;
          }

          *(void *)(v46 + 4) = sub_10018CDB4(v52, v54, &v70);

          swift_bridgeObjectRelease(v54);
          _os_log_impl( (void *)&_mh_execute_header,  v43,  v44,  "Could not convert ID %s into ids device",  (uint8_t *)v46,  0xCu);
          swift_arrayDestroy(v49, 1LL, v64);
          swift_slowDealloc(v49, -1LL, -1LL);
          swift_slowDealloc(v46, -1LL, -1LL);

          char v27 = v45;
          uint64_t v28 = &selRef_setWatchIDsMissingSessionKey_;
          uint64_t v29 = v3;
          LOBYTE(v3) = v66;
        }

        else
        {
        }

        goto LABEL_12;
      }

      id v55 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native(v63) & 1) == 0) {
        uint64_t v63 = sub_10018C884(0LL, v63[2] + 1LL, 1, v63);
      }
      unint64_t v57 = v63[2];
      unint64_t v56 = v63[3];
      if (v57 >= v56 >> 1) {
        uint64_t v63 = sub_10018C884((void *)(v56 > 1), v57 + 1, 1, v63);
      }
      uint64_t v68 = sub_100183168(0LL, (unint64_t *)&qword_10064D810, &OBJC_CLASS___IDSDevice_ptr);
      uint64_t v69 = &off_1005E0BD0;
      *(void *)&__int128 v67 = v55;
      uint64_t v58 = v63;
      v63[2] = v57 + 1;
      sub_1001CE0D0(&v67, (uint64_t)&v58[5 * v57 + 4]);

      uint64_t v59 = AssociatedTypeWitness;
      uint64_t v60 = AssociatedConformanceWitness;
      sub_1002499B4((uint64_t)v71, AssociatedTypeWitness);
      dispatch thunk of IteratorProtocol.next()(v59, v60);
      uint64_t v26 = (void *)v67;
      if (!(void)v67) {
        goto LABEL_36;
      }
    }

    if (!result) {
      break;
    }
    id v34 = [v26 v29[432]];
    unsigned int v35 = [v33 deviceEnabledAsKey:v34];

    if (v35) {
      goto LABEL_19;
    }
LABEL_11:

LABEL_12:
    uint64_t v30 = AssociatedTypeWitness;
    uint64_t v31 = AssociatedConformanceWitness;
    sub_1002499B4((uint64_t)v71, AssociatedTypeWitness);
    dispatch thunk of IteratorProtocol.next()(v30, v31);
    uint64_t v26 = (void *)v67;
    if (!(void)v67) {
      goto LABEL_36;
    }
  }

  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

void sub_1004825D8(uint64_t a1, id a2, uint8_t *a3, uint8_t **a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  os_log_type_t v296 = a4;
  v297 = a3;
  uint64_t v299 = a1;
  uint64_t v11 = sub_100183098(&qword_10064DA60);
  uint64_t v12 = __chkstk_darwin(v11);
  v281 = (char *)&v279 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v285 = (char *)&v279 - v14;
  uint64_t v15 = sub_100183098(&qword_10064D6E8);
  __chkstk_darwin(v15);
  uint64_t v280 = (uint64_t)&v279 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v292 = type metadata accessor for Date(0LL);
  uint64_t v291 = *(os_log_s **)(v292 - 8);
  __chkstk_darwin(v292);
  uint64_t v290 = (char *)&v279 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for UUID(0LL);
  uint64_t v300 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  v286 = (char *)&v279 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v293 = (char *)&v279 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  __int128 v25 = (char *)&v279 - v24;
  __chkstk_darwin(v23);
  char v27 = (char *)&v279 - v26;
  uint64_t v28 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (uint64_t *)((char *)&v279 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v313 = a6;
  uint64_t v314 = a7;
  uint64_t v32 = sub_1001A4B04(&v312);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16LL))(v32, v299, a6);
  uint64_t v299 = a5;
  uint64_t v33 = *(void **)(a5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v31 = v33;
  unsigned int v34 = enum case for DispatchPredicate.onQueue(_:);
  unsigned int v35 = *(void (**)(void *, void, uint64_t))(v29 + 104);
  v35(v31, enum case for DispatchPredicate.onQueue(_:), v28);
  id v287 = v33;
  LOBYTE(v33) = _dispatchPreconditionTest(_:)(v31);
  id v36 = *(void (**)(void *, uint64_t))(v29 + 8);
  v288 = v31;
  uint64_t v289 = v28;
  v36(v31, v28);
  if ((v33 & 1) != 0)
  {
    unsigned int v283 = v34;
    LODWORD(v298) = (_DWORD)a2;
    a2 = sub_100487C98((uint64_t)a2, (uint64_t)v297, (uint64_t)v296);
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  v282 = v36;
  uint64_t v37 = type metadata accessor for Logger(0LL);
  uint64_t v38 = (uint8_t **)sub_100186DE4(v37, (uint64_t)qword_100656748);
  sub_10019A6C4((uint64_t)&v312, (uint64_t)&v309);
  id v39 = (uint8_t *)a2;
  os_log_type_t v296 = v38;
  id v40 = (os_log_s *)Logger.logObject.getter(v39);
  os_log_type_t v41 = static os_log_type_t.error.getter(v40);
  BOOL v42 = os_log_type_enabled(v40, v41);
  uint64_t v284 = v35;
  if (v42)
  {
    uint64_t v43 = swift_slowAlloc(22LL, -1LL);
    v295 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    v297 = (uint8_t *)swift_slowAlloc(32LL, -1LL);
    uint64_t v304 = v297;
    *(_DWORD *)uint64_t v43 = 136315394;
    os_log_t v294 = v40;
    os_log_type_t v44 = v39;
    uint64_t v45 = v310;
    uint64_t v46 = v311;
    sub_10019A708(&v309, v310);
    (*(void (**)(uint64_t, uint64_t))(v46 + 32))(v45, v46);
    uint64_t v47 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter(v18, v47);
    id v50 = v49;
    (*(void (**)(char *, uint64_t))(v300 + 8))(v27, v18);
    uint64_t v302 = sub_10018CDB4(v48, (unint64_t)v50, (uint64_t *)&v304);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v302, v303, v43 + 4, v43 + 12);
    swift_bridgeObjectRelease(v50);
    sub_10018709C(&v309);
    *(_WORD *)(v43 + 12) = 2112;
    uint64_t v302 = (uint64_t)v44;
    uint64_t v51 = v44;
    id v39 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v302, v303, v43 + 14, v43 + 22);
    uint64_t v52 = v295;
    *(void *)v295 = v44;

    id v40 = v294;
    _os_log_impl((void *)&_mh_execute_header, v294, v41, "Session %s failed with error: %@", (uint8_t *)v43, 0x16u);
    uint64_t v53 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v52, 1LL, v53);
    swift_slowDealloc(v52, -1LL, -1LL);
    unint64_t v54 = v297;
    swift_arrayDestroy(v297, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1LL, -1LL);
    swift_slowDealloc(v43, -1LL, -1LL);
  }

  else
  {
    sub_10018709C(&v309);
  }

  uint64_t v55 = v299;
  uint64_t v56 = v313;
  uint64_t v57 = v314;
  sub_10019A708(&v312, v313);
  v297 = (uint8_t *)(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 40))(v56, v57);
  uint64_t v58 = (const char **)(v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions);
  *(void *)&double v60 = swift_beginAccess( v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions,  v308,  0LL,  0LL).n128_u64[0];
  uint64_t v61 = *v58;
  uint64_t v62 = *((void *)*v58 + 2);
  if (v62)
  {
    v295 = v39;
    uint64_t v63 = v61 + 32;
    swift_bridgeObjectRetain(v61, v60);
    uint64_t v64 = v62 - 1;
    do
    {
      uint64_t v65 = v64;
      uint64_t v67 = v63[3];
      uint64_t v66 = v63[4];
      sub_10019A708(v63, v67);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v66 + 8) + 8LL) + 32LL))(v67);
      uint64_t v68 = v313;
      uint64_t v69 = v314;
      sub_10019A708(&v312, v313);
      (*(void (**)(uint64_t, uint64_t))(v69 + 32))(v68, v69);
      char v70 = static UUID.== infix(_:_:)(v27, v25);
      uint64_t v71 = *(void (**)(char *, uint64_t))(v300 + 8);
      v71(v25, v18);
      v71(v27, v18);
      if ((v70 & 1) != 0) {
        break;
      }
      uint64_t v64 = v65 - 1;
      v63 += 5;
    }

    while (v65);
    swift_bridgeObjectRelease(v61);
    id v39 = v295;
    uint64_t v55 = v299;
  }

  else
  {
    char v70 = 0;
  }

  __chkstk_darwin(v59);
  *(&v279 - 2) = (uint64_t)&v312;
  swift_beginAccess(v58, &v309, 33LL, 0LL);
  sub_1002D8C6C((uint64_t (*)(uint64_t))sub_10048A970, (uint64_t)(&v279 - 4));
  uint64_t v73 = *((void *)*v58 + 2);
  if (v73 < v72)
  {
    __break(1u);
    goto LABEL_95;
  }

  sub_1003C0D5C(v72, v73);
  uint64_t v74 = swift_endAccess(&v309);
  __chkstk_darwin(v74);
  *(&v279 - 2) = (uint64_t)&v312;
  uint64_t v75 = v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions;
  swift_beginAccess(v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions, &v309, 33LL, 0LL);
  sub_1002D8C48((uint64_t (*)(uint64_t))sub_10048A970, (uint64_t)(&v279 - 4));
  uint64_t v77 = *(void *)(*(void *)v75 + 16LL);
  if (v77 < v76)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }

  sub_1003C0D70(v76, v77);
  uint64_t v78 = swift_endAccess(&v309);
  __chkstk_darwin(v78);
  *(&v279 - 2) = (uint64_t)&v312;
  uint64_t v79 = v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions;
  swift_beginAccess( v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions,  &v309,  33LL,  0LL);
  sub_1002D89D4((uint64_t (*)(uint64_t))sub_100488740, (uint64_t)(&v279 - 4));
  uint64_t v81 = *(void *)(*(void *)v79 + 16LL);
  if (v81 < v80)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }

  sub_1003C0D84(v80, v81);
  uint64_t v82 = swift_endAccess(&v309);
  __chkstk_darwin(v82);
  *(&v279 - 2) = (uint64_t)&v312;
  uint64_t v83 = v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions;
  swift_beginAccess( v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions,  &v309,  33LL,  0LL);
  sub_1002D89B0((uint64_t (*)(uint64_t))sub_10048A970, (uint64_t)(&v279 - 4));
  uint64_t v85 = *(void *)(*(void *)v83 + 16LL);
  if (v85 < v84)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }

  os_log_t v294 = 0LL;
  sub_1003C0D98(v84, v85);
  swift_endAccess(&v309);
  uint64_t v86 = v313;
  uint64_t v87 = v314;
  sub_10019A708(&v312, v313);
  (*(void (**)(uint64_t, uint64_t))(v87 + 88))(v86, v87);
  int v88 = (int)v298;
  uint64_t v89 = v300;
  if ((_DWORD)v298 != 33) {
    goto LABEL_24;
  }
  uint64_t v90 = v313;
  uint64_t v91 = v314;
  sub_10019A708(&v312, v313);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v91 + 64))(&v309, v90, v91);
  uint64_t v92 = v310;
  if (v310)
  {
    uint64_t v93 = v311;
    sub_10019A708(&v309, v310);
    uint64_t v94 = (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 8))(v92, v93);
    uint64_t v96 = v95;
    uint64_t v97 = sub_10018709C(&v309);
    if (v96)
    {
      uint64_t v98 = sub_10034EC60((uint64_t)v297);
      UUID.init()(v98);
      sub_100462F0C(v98, v94, v96, (uint64_t)v27);
      __n128 v99 = swift_bridgeObjectRelease((const char *)v96);
      (*(void (**)(char *, uint64_t, __n128))(v89 + 8))(v27, v18, v99);
      goto LABEL_24;
    }
  }

  else
  {
    uint64_t v97 = sub_100187100((uint64_t)&v309, &qword_100654080);
  }

  uint64_t v100 = (os_log_s *)Logger.logObject.getter(v97);
  os_log_type_t v101 = static os_log_type_t.error.getter(v100);
  if (os_log_type_enabled(v100, v101))
  {
    uint64_t v102 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v102 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v100,  v101,  "Got notEnabled error but coudln't determine who to disable pairing with",  v102,  2u);
    swift_slowDealloc(v102, -1LL, -1LL);
  }

LABEL_24:
  if (v297 == (uint8_t *)8)
  {
    uint64_t v117 = v313;
    uint64_t v118 = v314;
    sub_10019A708(&v312, v313);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v118 + 64))(&v309, v117, v118);
    uint64_t v119 = v310;
    if (v310)
    {
      uint64_t v120 = v311;
      sub_10019A708(&v309, v310);
      uint64_t v121 = (*(uint64_t (**)(uint64_t, uint64_t))(v120 + 8))(v119, v120);
      __n128 v123 = v122;
      uint64_t v124 = sub_10018709C(&v309);
      if (v123)
      {
        v295 = v39;
        uint64_t v125 = (os_log_s *)Logger.logObject.getter(v124);
        os_log_type_t v126 = static os_log_type_t.default.getter(v125);
        if (os_log_type_enabled(v125, v126))
        {
          uint64_t v127 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v127 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v125,  v126,  "Registration failed, clearing registration date",  v127,  2u);
          swift_slowDealloc(v127, -1LL, -1LL);
        }

        uint64_t v128 = v299 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID;
        *(void *)&double v129 = swift_beginAccess( v299 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID,  &v304,  33LL,  0LL).n128_u64[0];
        swift_bridgeObjectRetain(v123, v129);
        os_log_type_t v130 = sub_1003A448C(&v309, v121, (uint64_t)v123);
        uint64_t v132 = v131;
        uint64_t v133 = type metadata accessor for RegistrationState(0LL);
        uint64_t v134 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v133 - 8) + 48LL);
        if (!v134(v132, 1LL, v133)) {
          *(_BYTE *)(v132 + *(int *)(v133 + 20)) = 0;
        }
        ((void (*)(uint64_t *, void))v130)(&v309, 0LL);
        swift_endAccess(&v304);
        uint64_t v89 = v300;
        swift_bridgeObjectRelease(v123);
        *(void *)&double v135 = swift_beginAccess(v128, &v304, 33LL, 0LL).n128_u64[0];
        swift_bridgeObjectRetain(v123, v135);
        uint64_t v136 = sub_1003A448C(&v309, v121, (uint64_t)v123);
        uint64_t v138 = v137;
        if (!v134(v137, 1LL, v133))
        {
          sub_100187100(v138, &qword_1006457E8);
          (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v291 + 7))(v138, 1LL, 1LL, v292);
        }

        ((void (*)(uint64_t *, void))v136)(&v309, 0LL);
        swift_endAccess(&v304);
        swift_bridgeObjectRelease_n(v123, 2LL);
        id v39 = v295;
        goto LABEL_54;
      }
    }

    else
    {
      sub_100187100((uint64_t)&v309, &qword_100654080);
    }

    uint64_t v147 = sub_10019A6C4((uint64_t)&v312, (uint64_t)&v309);
    char v148 = (os_log_s *)Logger.logObject.getter(v147);
    os_log_type_t v149 = static os_log_type_t.error.getter(v148);
    if (os_log_type_enabled(v148, v149))
    {
      uint64_t v150 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      v297 = (uint8_t *)swift_slowAlloc(32LL, -1LL);
      uint64_t v304 = v297;
      v295 = v150;
      *(_DWORD *)uint64_t v150 = 136315138;
      uint64_t v151 = v150 + 12;
      uint64_t v292 = (uint64_t)(v150 + 4);
      uint64_t v152 = v39;
      uint64_t v154 = v310;
      uint64_t v153 = v311;
      sub_10019A708(&v309, v310);
      uint64_t v155 = v154;
      id v39 = v152;
      (*(void (**)(uint64_t, uint64_t))(v153 + 32))(v155, v153);
      uint64_t v156 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v157 = dispatch thunk of CustomStringConvertible.description.getter(v18, v156);
      unint64_t v159 = v158;
      (*(void (**)(char *, uint64_t))(v300 + 8))(v27, v18);
      uint64_t v302 = sub_10018CDB4(v157, v159, (uint64_t *)&v304);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v302, v303, v292, v151);
      uint64_t v160 = (const char *)v159;
      uint64_t v89 = v300;
      swift_bridgeObjectRelease(v160);
      sub_10018709C(&v309);
      uint64_t v161 = v295;
      _os_log_impl((void *)&_mh_execute_header, v148, v149, "Could not find peer device for %s", v295, 0xCu);
      uint64_t v162 = v297;
      swift_arrayDestroy(v297, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v162, -1LL, -1LL);
      swift_slowDealloc(v161, -1LL, -1LL);
    }

    else
    {
      sub_10018709C(&v309);
    }

LABEL_54:
    uint64_t v55 = v299;
    __int128 v163 = v293;
    uint64_t v164 = v286;
    uint64_t v165 = (uint64_t)v285;
    uint64_t v166 = v299 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI;
    swift_beginAccess( v299 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI,  v301,  0LL,  0LL);
    sub_1001915A4(v166, v165, &qword_10064DA60);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v165, 1LL, v18) == 1)
    {
      sub_100187100(v165, &qword_10064DA60);
    }

    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v163, v165, v18);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong( v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate,  v167);
      if (Strong)
      {
        uint64_t v169 = (void *)Strong;
        uint64_t v170 = (*(uint64_t (**)(char *, char *, uint64_t))(v89 + 16))(v164, v163, v18);
        BOOL v171 = (os_log_s *)Logger.logObject.getter(v170);
        os_log_type_t v172 = static os_log_type_t.default.getter(v171);
        int v173 = v172;
        if (os_log_type_enabled(v171, v172))
        {
          uint64_t v174 = swift_slowAlloc(22LL, -1LL);
          v295 = v39;
          uint64_t v175 = v174;
          os_log_type_t v296 = (uint8_t **)swift_slowAlloc(8LL, -1LL);
          uint64_t v292 = swift_slowAlloc(32LL, -1LL);
          uint64_t v309 = v292;
          *(_DWORD *)uint64_t v175 = 138412546;
          uint64_t v291 = v171;
          type metadata accessor for SFAuthenticationError(0LL);
          uint64_t v177 = v176;
          uint64_t v178 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
          uint64_t v179 = swift_allocError(v177, v178, 0LL, 0LL);
          _DWORD *v180 = (_DWORD)v298;
          double v181 = (uint8_t *)_swift_stdlib_bridgeErrorToNSError(v179);
          uint64_t v304 = v181;
          LODWORD(v290) = v173;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v304, v305, v175 + 4, v175 + 12);
          *os_log_type_t v296 = v181;
          *(_WORD *)(v175 + 12) = 2080;
          uint64_t v182 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
          uint64_t v183 = dispatch thunk of CustomStringConvertible.description.getter(v18, v182);
          NSString v185 = (const char *)v184;
          uint64_t v304 = (uint8_t *)sub_10018CDB4(v183, v184, &v309);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v304, v305, v175 + 14, v175 + 22);
          __n128 v186 = swift_bridgeObjectRelease(v185);
          v297 = *(uint8_t **)(v300 + 8);
          ((void (*)(char *, uint64_t, __n128))v297)(v164, v18, v186);
          os_log_t v187 = v291;
          _os_log_impl( (void *)&_mh_execute_header,  v291,  (os_log_type_t)v290,  "Calling back to delegate with registration error %@ for sessionID %s",  (uint8_t *)v175,  0x16u);
          uint64_t v188 = sub_100183098(&qword_1006454E0);
          double v189 = v296;
          swift_arrayDestroy(v296, 1LL, v188);
          swift_slowDealloc(v189, -1LL, -1LL);
          uint64_t v190 = v292;
          swift_arrayDestroy(v292, 1LL, (char *)&type metadata for Any + 8);
          uint64_t v191 = v190;
          uint64_t v192 = v298;
          swift_slowDealloc(v191, -1LL, -1LL);
          uint64_t v193 = v175;
          id v39 = v295;
          swift_slowDealloc(v193, -1LL, -1LL);
        }

        else
        {
          v297 = *(uint8_t **)(v89 + 8);
          ((void (*)(char *, uint64_t))v297)(v164, v18);

          uint64_t v192 = v298;
        }

        id v214 = v293;
        Class isa = UUID._bridgeToObjectiveC()().super.isa;
        id v216 = sub_100487C98(v192, 0LL, 0xE000000000000000LL);
        uint64_t v217 = v299;
        [v169 manager:v299 didFailAuthenticationFor:isa error:v216];

        uint64_t v218 = v169;
        uint64_t v55 = v217;
        swift_unknownObjectRelease(v218);
        ((void (*)(char *, uint64_t))v297)(v214, v18);
        uint64_t v89 = v300;
        uint64_t v219 = (uint64_t)v281;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v300 + 56))(v281, 1LL, 1LL, v18);
        swift_beginAccess(v166, &v309, 33LL, 0LL);
        sub_1001C9860(v219, v166, &qword_10064DA60);
        swift_endAccess(&v309);
      }

      else
      {
        uint64_t v211 = (os_log_s *)Logger.logObject.getter(0LL);
        os_log_type_t v212 = static os_log_type_t.error.getter(v211);
        if (os_log_type_enabled(v211, v212))
        {
          uint64_t v213 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v213 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v211,  v212,  "Have session that is waiting but no delegate to report it to. This is bad.",  v213,  2u);
          swift_slowDealloc(v213, -1LL, -1LL);
        }

        (*(void (**)(char *, uint64_t))(v89 + 8))(v163, v18);
        uint64_t v55 = v299;
      }
    }

    goto LABEL_74;
  }

  if (v297 == (uint8_t *)5)
  {
    if (v88 != 10) {
      goto LABEL_74;
    }
    uint64_t v139 = v313;
    uint64_t v140 = v314;
    sub_10019A708(&v312, v313);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v140 + 64))(&v309, v139, v140);
    uint64_t v141 = v310;
    if (v310)
    {
      uint64_t v142 = v311;
      sub_10019A708(&v309, v310);
      uint64_t v143 = (*(uint64_t (**)(uint64_t, uint64_t))(v142 + 8))(v141, v142);
      uint64_t v145 = v144;
      sub_10018709C(&v309);
      if (v145)
      {
        swift_beginAccess( v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID,  &v309,  33LL,  0LL);
        uint64_t v146 = v280;
        sub_1001CA024(v143, (uint64_t)v145, v280);
        swift_endAccess(&v309);
        sub_100187100(v146, &qword_10064D6E8);
        swift_bridgeObjectRelease(v145);
        goto LABEL_74;
      }
    }

    else
    {
      sub_100187100((uint64_t)&v309, &qword_100654080);
    }

    uint64_t v194 = sub_10019A6C4((uint64_t)&v312, (uint64_t)&v309);
    double v195 = (os_log_s *)Logger.logObject.getter(v194);
    os_log_type_t v196 = static os_log_type_t.error.getter(v195);
    if (os_log_type_enabled(v195, v196))
    {
      uint64_t v197 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      v298 = (uint8_t *)swift_slowAlloc(32LL, -1LL);
      uint64_t v304 = v298;
      v297 = v197;
      *(_DWORD *)uint64_t v197 = 136315138;
      uint64_t v198 = v197 + 12;
      os_log_type_t v296 = (uint8_t **)(v197 + 4);
      v199 = v39;
      uint64_t v201 = v310;
      uint64_t v200 = v311;
      sub_10019A708(&v309, v310);
      uint64_t v202 = v201;
      id v39 = v199;
      (*(void (**)(uint64_t, uint64_t))(v200 + 32))(v202, v200);
      uint64_t v203 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v204 = dispatch thunk of CustomStringConvertible.description.getter(v18, v203);
      unint64_t v206 = v205;
      (*(void (**)(char *, uint64_t))(v300 + 8))(v27, v18);
      uint64_t v302 = sub_10018CDB4(v204, v206, (uint64_t *)&v304);
      id v207 = v198;
      uint64_t v55 = v299;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v302, v303, v296, v207);
      char v208 = (const char *)v206;
      uint64_t v89 = v300;
      swift_bridgeObjectRelease(v208);
      sub_10018709C(&v309);
      uint64_t v209 = v297;
      _os_log_impl((void *)&_mh_execute_header, v195, v196, "Could not find peer device for %s", v297, 0xCu);
      uint64_t v210 = v298;
      swift_arrayDestroy(v298, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v210, -1LL, -1LL);
      swift_slowDealloc(v209, -1LL, -1LL);
    }

    else
    {
      sub_10018709C(&v309);
    }

LABEL_74:
    sub_10019A6C4((uint64_t)&v312, (uint64_t)&v309);
    uint64_t v229 = sub_100183098((uint64_t *)&unk_10064B7A0);
    uint64_t v230 = sub_100183098(&qword_1006452E0);
    if (swift_dynamicCast(&v304, &v309, v229, v230, 6LL))
    {
      sub_10018709C(&v304);
      uint64_t v232 = swift_unknownObjectWeakLoadStrong( v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate,  v231);
      if (!v232) {
        goto LABEL_81;
      }
      uint64_t v233 = (void *)v232;
      uint64_t v234 = v313;
      uint64_t v235 = v314;
      sub_10019A708(&v312, v313);
      (*(void (**)(uint64_t, uint64_t))(v235 + 32))(v234, v235);
      v236.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v89 + 8))(v27, v18);
      [v233 manager:v55 didFailAuthenticationFor:v236.super.isa error:v39];
    }

    else
    {
      sub_10019A6C4((uint64_t)&v312, (uint64_t)&v309);
      uint64_t v237 = sub_100183098((uint64_t *)&unk_10064D7E0);
      if ((swift_dynamicCast(&v304, &v309, v229, v237, 6LL) & 1) == 0
        || (sub_10018709C(&v304),
            (uint64_t v239 = swift_unknownObjectWeakLoadStrong( v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate,  v238)) == 0))
      {
LABEL_81:
        sub_10019A6C4((uint64_t)&v312, (uint64_t)&v309);
        if ((v70 & 1) != 0)
        {
          uint64_t v242 = v310;
          uint64_t v243 = v311;
          sub_10019A708(&v309, v310);
          unint64_t v244 = (*(uint64_t (**)(uint64_t, uint64_t))(v243 + 40))(v242, v243);
          if (v244 > 0xE || ((1LL << v244) & 0x658E) == 0)
          {
            sub_10018709C(&v309);
            sub_10019A6C4((uint64_t)&v312, (uint64_t)&v304);

            sub_10018709C(&v304);
            goto LABEL_89;
          }

          sub_10018709C(&v309);
          uint64_t v245 = *(void *)(v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
          uint64_t v246 = v313;
          uint64_t v247 = v314;
          sub_10019A708(&v312, v313);
          unint64_t v248 = (*(uint64_t (**)(uint64_t, uint64_t))(v247 + 40))(v246, v247);
          LOBYTE(v246) = sub_10034E9D8(v248);
          uint64_t v249 = v313;
          uint64_t v250 = v314;
          sub_10019A708(&v312, v313);
          (*(void (**)(uint8_t **__return_ptr, uint64_t, uint64_t))(v250 + 64))(&v304, v249, v250);
          sub_1003F0DB4(v246);
          uint64_t v252 = v251;
          uint64_t v254 = v253;
          uint64_t ObjectType = swift_getObjectType(v251);
          uint64_t v256 = (*(uint64_t (**)(uint64_t, uint64_t))(v254 + 56))(ObjectType, v254);
          __chkstk_darwin(v256);
          *(&v279 - 4) = v252;
          *(&v279 - 3) = v254;
          uint64_t v258 = v257 + 4;
          *(&v279 - 2) = (uint64_t)&v304;
          *(&v279 - 1) = v245;
          os_unfair_lock_lock(v257 + 4);
          sub_1002737FC(v259, sub_1002DB064);
          os_unfair_lock_unlock(v258);
          swift_unknownObjectRelease(v252);

          uint64_t v260 = &v304;
        }

        else
        {
          sub_10018709C(&v309);
          sub_10019A6C4((uint64_t)&v312, (uint64_t)&v304);
          uint64_t v261 = v306;
          uint64_t v262 = v307;
          sub_10019A708(&v304, v306);
          unint64_t v263 = (*(uint64_t (**)(uint64_t, uint64_t))(v262 + 40))(v261, v262);
          if (v263 <= 0xE && ((1LL << v263) & 0x658E) != 0)
          {
            sub_10018709C(&v304);

            goto LABEL_89;
          }

          sub_10018709C(&v304);
          uint64_t v264 = *(void *)(v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
          uint64_t v265 = v313;
          uint64_t v266 = v314;
          sub_10019A708(&v312, v313);
          unint64_t v267 = (*(uint64_t (**)(uint64_t, uint64_t))(v266 + 40))(v265, v266);
          LOBYTE(v265) = sub_10034E9D8(v267);
          uint64_t v268 = v313;
          uint64_t v269 = v314;
          sub_10019A708(&v312, v313);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v269 + 64))(&v302, v268, v269);
          sub_1003F0DB4(v265);
          uint64_t v271 = v270;
          uint64_t v273 = v272;
          uint64_t v274 = swift_getObjectType(v270);
          uint64_t v275 = (*(uint64_t (**)(uint64_t, uint64_t))(v273 + 56))(v274, v273);
          __chkstk_darwin(v275);
          *(&v279 - 4) = v271;
          *(&v279 - 3) = v273;
          v277 = v276 + 4;
          *(&v279 - 2) = (uint64_t)&v302;
          *(&v279 - 1) = v264;
          os_unfair_lock_lock(v276 + 4);
          sub_1002737FC(v278, sub_1002DB064);
          os_unfair_lock_unlock(v277);
          swift_unknownObjectRelease(v271);

          uint64_t v260 = (uint8_t **)&v302;
        }

        sub_100187100((uint64_t)v260, &qword_100654080);
LABEL_89:
        sub_10018709C(&v312);
        return;
      }

      uint64_t v233 = (void *)v239;
      uint64_t v240 = v313;
      uint64_t v241 = v314;
      sub_10019A708(&v312, v313);
      (*(void (**)(uint64_t, uint64_t))(v241 + 32))(v240, v241);
      v236.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v89 + 8))(v27, v18);
      [v233 manager:v55 didFailToEnableDeviceFor:v236.super.isa error:v39];
    }

    swift_unknownObjectRelease(v233);

    goto LABEL_81;
  }

  if (v88 == 22)
  {
    uint64_t v103 = v313;
    uint64_t v104 = v314;
    sub_10019A708(&v312, v313);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v104 + 64))(&v309, v103, v104);
    uint64_t v105 = v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice;
    swift_beginAccess( v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice,  &v304,  33LL,  0LL);
    sub_1001C9860((uint64_t)&v309, v105, &qword_100654080);
    swift_endAccess(&v304);
  }

  uint64_t v106 = v313;
  uint64_t v107 = v314;
  sub_10019A708(&v312, v313);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v107 + 64))(&v309, v106, v107);
  uint64_t v108 = v310;
  if (!v310)
  {
    uint64_t v113 = sub_100187100((uint64_t)&v309, &qword_100654080);
    goto LABEL_72;
  }

  uint64_t v109 = v311;
  sub_10019A708(&v309, v310);
  uint64_t v110 = (*(uint64_t (**)(uint64_t, uint64_t))(v109 + 8))(v108, v109);
  unint64_t v112 = v111;
  uint64_t v113 = sub_10018709C(&v309);
  if (!v112) {
    goto LABEL_72;
  }
  if ((_DWORD)v298 == 9 || (_DWORD)v298 == 24)
  {
    uint64_t v115 = *(void *)(v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator);
    uint64_t v116 = *(void *)(v115 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner);
    if (v116)
    {
      swift_beginAccess(v116 + 40, &v309, 33LL, 0LL);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain(v112);
      uint64_t v89 = v300;
      sub_1003B572C((uint64_t *)&v304, v110, (uint64_t)v112);
      swift_endAccess(&v309);
      swift_bridgeObjectRelease(v305[0]);
      swift_release(v116);
      swift_bridgeObjectRelease(v112);
      uint64_t v113 = swift_release(v115);
      goto LABEL_72;
    }
  }

  else
  {
    uint64_t v220 = *(void *)(v55 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator);
    uint64_t v221 = *(void *)(v220 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner);
    if (v221)
    {
      swift_beginAccess(v221 + 40, &v309, 33LL, 0LL);
      swift_retain();
      swift_retain();
      uint64_t v89 = v300;
      sub_1003BDC14(v110, (uint64_t)v112);
      v223 = v222;
      swift_endAccess(&v309);
      swift_release(v221);
      swift_bridgeObjectRelease(v112);
      swift_release(v220);
      __n128 v114 = swift_bridgeObjectRelease(v223);
      goto LABEL_72;
    }
  }

  __n128 v114 = swift_bridgeObjectRelease(v112);
LABEL_72:
  v224 = v290;
  static Date.distantPast.getter(v113, v114);
  uint64_t v225 = v288;
  uint64_t v226 = v287;
  void *v288 = v287;
  uint64_t v227 = v289;
  v284(v225, v283, v289);
  id v228 = v226;
  LOBYTE(v226) = _dispatchPreconditionTest(_:)(v225);
  v282(v225, v227);
  if ((v226 & 1) != 0)
  {
    (*((void (**)(char *, uint64_t))v291 + 1))(v224, v292);
    goto LABEL_74;
  }

void sub_1004842AC(unint64_t a1, void *a2, char *a3, uint64_t a4, char *a5)
{
  uint64_t v173 = a4;
  unint64_t v178 = a1;
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v163 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v169 = (char *)&v160 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v10);
  uint64_t v174 = (char *)&v160 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for UUID(0LL);
  uint64_t v179 = *(void *)(v12 - 8);
  uint64_t v180 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v160 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v172 = v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v160 - v16;
  uint64_t v18 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v160 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v187[3] = (id)sub_100183168(0LL, (unint64_t *)&qword_10064D810, &OBJC_CLASS___IDSDevice_ptr);
  v187[4] = &off_1005E0BD0;
  uint64_t v22 = *(void **)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  v187[0] = a2;
  *(void *)uint64_t v21 = v22;
  uint64_t v23 = *(void (**)(void))(v19 + 104);
  unsigned int v165 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v166 = (void (*)(char *, void, uint64_t))v23;
  v23(v21);
  id v24 = a2;
  id v164 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)(v21);
  __int128 v25 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v167 = v21;
  uint64_t v168 = v18;
  v25(v21, v18);
  if ((v22 & 1) != 0)
  {
    BOOL v171 = v15;
    uint64_t v161 = v25;
    uint64_t v162 = v8;
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  uint64_t v26 = type metadata accessor for Logger(0LL);
  uint64_t v27 = sub_100186DE4(v26, (uint64_t)qword_100656748);
  uint64_t v28 = v179;
  uint64_t v29 = v180;
  uint64_t v170 = *(void (**)(char *, char *, uint64_t))(v179 + 16);
  v170(v17, a3, v180);
  uint64_t v30 = sub_10019A6C4((uint64_t)v187, (uint64_t)&v183);
  uint64_t v177 = v27;
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
  os_log_type_t v32 = static os_log_type_t.default.getter(v31);
  uint64_t v33 = &selRef_setWatchIDsMissingSessionKey_;
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v176 = a5;
    uint64_t v175 = a3;
    uint64_t v34 = swift_slowAlloc(32LL, -1LL);
    uint64_t v35 = swift_slowAlloc(96LL, -1LL);
    uint64_t v182 = v35;
    *(_DWORD *)uint64_t v34 = 136315650;
    unint64_t v36 = sub_10034F010(v178);
    uint64_t v38 = (const char *)v37;
    *(void *)&v181[0] = sub_10018CDB4(v36, v37, &v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v181, (char *)v181 + 8, v34 + 4, v34 + 12);
    swift_bridgeObjectRelease(v38);
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v39 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter(v180, v39);
    BOOL v42 = (const char *)v41;
    *(void *)&v181[0] = sub_10018CDB4(v40, v41, &v182);
    uint64_t v29 = v180;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v181, (char *)v181 + 8, v34 + 14, v34 + 22);
    __n128 v43 = swift_bridgeObjectRelease(v42);
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v17, v29, v43);
    *(_WORD *)(v34 + 22) = 2080;
    id v44 = objc_msgSend((id)*sub_10019A708(&v183, v185), "uniqueIDOverride");
    if (v44)
    {
      uint64_t v45 = v44;
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      uint64_t v48 = v47;
    }

    else
    {
      *(void *)&v181[0] = 0LL;
      *((void *)&v181[0] + 1) = 0xE000000000000000LL;
      _StringGuts.grow(_:)(17LL);
      swift_bridgeObjectRelease(*((const char **)&v181[0] + 1));
      uint64_t v48 = (const char *)0x80000001005046B0LL;
      uint64_t v46 = 0xD000000000000015LL;
    }

    *(void *)&v181[0] = sub_10018CDB4(v46, (unint64_t)v48, &v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v181, (char *)v181 + 8, v34 + 24, v34 + 32);
    swift_bridgeObjectRelease(v48);
    sub_10018709C(&v183);
    _os_log_impl( (void *)&_mh_execute_header,  v31,  v32,  "Begin authentication for %s sessionID %s with IDS ID %s",  (uint8_t *)v34,  0x20u);
    swift_arrayDestroy(v35, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1LL, -1LL);
    swift_slowDealloc(v34, -1LL, -1LL);

    a3 = v175;
    a5 = v176;
    unint64_t v49 = v178;
    uint64_t v28 = v179;
    uint64_t v33 = &selRef_setWatchIDsMissingSessionKey_;
    if (v178 <= 7)
    {
LABEL_10:
      if (((1LL << v49) & 0xC4) != 0) {
        goto LABEL_11;
      }
    }
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v29);
    sub_10018709C(&v183);

    unint64_t v49 = v178;
    if (v178 <= 7) {
      goto LABEL_10;
    }
  }

  if (v49 < 9)
  {
    float v87 = 0.0;
    if (v49 - 1 <= 7) {
      float v87 = flt_1004DCEEC[v49 - 1];
    }
    int v88 = (const char *)sub_10034F210(v49);
    BOOL v89 = sub_1003A0674(1uLL, (uint64_t)v88);
    *(void *)&double v90 = swift_bridgeObjectRelease(v88).n128_u64[0];
    if (v89)
    {
      sub_10045886C((uint64_t)&v183);
      uint64_t v91 = v185;
      if (v185)
      {
        uint64_t v92 = v186;
        sub_10019A708(&v183, v185);
        uint64_t v93 = (*(uint64_t (**)(uint64_t, uint64_t))(v92 + 64))(v91, v92);
        uint64_t v95 = v94;
        uint64_t v96 = sub_10018709C(&v183);
        *(float *)&double v90 = (float)v93;
      }

      else
      {
        uint64_t v96 = sub_100187100((uint64_t)&v183, &qword_100654080);
        uint64_t v95 = 0LL;
        LODWORD(v90) = 0;
      }

      float v116 = *(float *)&v90 + (float)((float)v95 / 10.0);
      if (v87 > v116)
      {
        uint64_t v117 = (os_log_s *)Logger.logObject.getter(v96);
        os_log_type_t v118 = static os_log_type_t.error.getter(v117);
        if (os_log_type_enabled(v117, v118))
        {
          uint64_t v119 = swift_slowAlloc(22LL, -1LL);
          *(_DWORD *)uint64_t v119 = 134218240;
          double v183 = v87;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v183, v184, v119 + 4, v119 + 12);
          *(_WORD *)(v119 + 12) = 2048;
          double v183 = v116;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v183, v184, v119 + 14, v119 + 22);
          _os_log_impl( (void *)&_mh_execute_header,  v117,  v118,  "Remote Device version is unsupported. Need: %f, got: %f",  (uint8_t *)v119,  0x16u);
          swift_slowDealloc(v119, -1LL, -1LL);
        }

        uint64_t v97 = 15LL;
        goto LABEL_28;
      }
    }

    uint64_t v120 = a5;
    id v121 = v187[0];
    id v122 = objc_msgSend(v187[0], "modelIdentifier", v90);
    if (v122)
    {
      __n128 v123 = v122;
      uint64_t v124 = static String._unconditionallyBridgeFromObjectiveC(_:)(v122);
      uint64_t v126 = v125;
    }

    else
    {
      uint64_t v124 = 0LL;
      uint64_t v126 = 0LL;
    }

    uint64_t v127 = &v120[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
    swift_beginAccess(&v120[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics], &v183, 33LL, 0LL);
    type metadata accessor for StateMetrics(0LL);
    sub_1002E5D50(v124, v126, v49);
    swift_endAccess(&v183);
    id v128 = [v121 productBuildVersion];
    if (v128)
    {
      double v129 = v128;
      uint64_t v130 = static String._unconditionallyBridgeFromObjectiveC(_:)(v128);
      uint64_t v132 = v131;
    }

    else
    {
      uint64_t v130 = 0LL;
      uint64_t v132 = 0LL;
    }

    uint64_t v29 = v180;
    uint64_t v33 = &selRef_setWatchIDsMissingSessionKey_;
    swift_beginAccess(v127, &v183, 33LL, 0LL);
    sub_1002E5D50(v130, v132, v49);
    swift_endAccess(&v183);
    a5 = v120;
    uint64_t v28 = v179;
  }

void sub_100485374(Swift::UInt a1, uint64_t a2, char *a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v173 = a4;
  uint64_t v163 = type metadata accessor for Date(0LL);
  uint64_t v162 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  uint64_t v169 = (char *)&v159 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v14);
  uint64_t v175 = (char *)&v159 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v181 = type metadata accessor for UUID(0LL);
  uint64_t v179 = *(void *)(v181 - 8);
  uint64_t v16 = __chkstk_darwin(v181);
  uint64_t v174 = (char *)&v159 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v172 = v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v159 - v18;
  uint64_t v20 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (unint64_t *)((char *)&v159 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  v188[3] = a6;
  v188[4] = a7;
  uint64_t v177 = a7;
  id v24 = sub_1001A4B04(v188);
  __int128 v25 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16LL);
  unint64_t v178 = v24;
  uint64_t v180 = (uint8_t *)a6;
  v25(v24, a2, a6);
  uint64_t v26 = *(void **)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v23 = v26;
  uint64_t v27 = *(void (**)(void))(v21 + 104);
  unsigned int v165 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v166 = (void (*)(void *, void, uint64_t))v27;
  v27(v23);
  id v164 = v26;
  LOBYTE(v26) = _dispatchPreconditionTest(_:)(v23);
  uint64_t v28 = *(void (**)(void *, uint64_t))(v21 + 8);
  uint64_t v167 = v23;
  uint64_t v168 = v20;
  v28(v23, v20);
  if ((v26 & 1) != 0)
  {
    uint64_t v161 = v28;
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  uint64_t v29 = type metadata accessor for Logger(0LL);
  uint64_t v30 = sub_100186DE4(v29, (uint64_t)qword_100656748);
  uint64_t v31 = v179;
  os_log_type_t v32 = a3;
  uint64_t v33 = v181;
  BOOL v171 = *(void (**)(char *, char *, uint64_t))(v179 + 16);
  v171(v19, a3, v181);
  uint64_t v34 = sub_10019A6C4((uint64_t)v188, (uint64_t)&v184);
  uint64_t v176 = v30;
  uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
  os_log_type_t v36 = static os_log_type_t.default.getter(v35);
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v160 = a5;
    uint64_t v170 = a3;
    uint64_t v37 = swift_slowAlloc(32LL, -1LL);
    uint64_t v38 = swift_slowAlloc(96LL, -1LL);
    uint64_t v183 = v38;
    *(_DWORD *)uint64_t v37 = 136315650;
    unint64_t v159 = a1;
    unint64_t v39 = sub_10034F010(a1);
    unint64_t v41 = (const char *)v40;
    *(void *)&v182[0] = sub_10018CDB4(v39, v40, &v183);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v182, (char *)v182 + 8, v37 + 4, v37 + 12);
    swift_bridgeObjectRelease(v41);
    *(_WORD *)(v37 + 12) = 2080;
    uint64_t v42 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter(v181, v42);
    uint64_t v45 = (const char *)v44;
    *(void *)&v182[0] = sub_10018CDB4(v43, v44, &v183);
    uint64_t v33 = v181;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v182, (char *)v182 + 8, v37 + 14, v37 + 22);
    __n128 v46 = swift_bridgeObjectRelease(v45);
    (*(void (**)(char *, uint64_t, __n128))(v31 + 8))(v19, v33, v46);
    *(_WORD *)(v37 + 22) = 2080;
    sub_10019A708(&v184, v186);
    uint64_t v47 = v177;
    uint64_t v48 = (*(uint64_t (**)(uint8_t *, uint64_t))(v177 + 8))(v180, v177);
    if (v49)
    {
      id v50 = v49;
    }

    else
    {
      *(void *)&v182[0] = 0LL;
      *((void *)&v182[0] + 1) = 0xE000000000000000LL;
      _StringGuts.grow(_:)(17LL);
      swift_bridgeObjectRelease(*((const char **)&v182[0] + 1));
      id v50 = (const char *)0x80000001005046B0LL;
      uint64_t v48 = 0xD000000000000015LL;
    }

    a5 = v160;
    *(void *)&v182[0] = sub_10018CDB4(v48, (unint64_t)v50, &v183);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v182, (char *)v182 + 8, v37 + 24, v37 + 32);
    swift_bridgeObjectRelease(v50);
    sub_10018709C(&v184);
    _os_log_impl( (void *)&_mh_execute_header,  v35,  v36,  "Begin authentication for %s sessionID %s with IDS ID %s",  (uint8_t *)v37,  0x20u);
    swift_arrayDestroy(v38, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1LL, -1LL);
    swift_slowDealloc(v37, -1LL, -1LL);

    os_log_type_t v32 = v170;
    a1 = v159;
    if (v159 <= 7)
    {
LABEL_10:
      if (((1LL << a1) & 0xC4) != 0) {
        goto LABEL_11;
      }
    }
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v33);
    sub_10018709C(&v184);

    uint64_t v47 = v177;
    if (a1 <= 7) {
      goto LABEL_10;
    }
  }

  if (a1 < 9)
  {
    float v87 = 0.0;
    if (a1 - 1 <= 7) {
      float v87 = flt_1004DCEEC[a1 - 1];
    }
    int v88 = (const char *)sub_10034F210(a1);
    BOOL v89 = sub_1003A0674(1uLL, (uint64_t)v88);
    __n128 v90 = swift_bridgeObjectRelease(v88);
    if (v89)
    {
      sub_10045886C((uint64_t)&v184);
      uint64_t v91 = v186;
      if (v186)
      {
        uint64_t v92 = v187;
        sub_10019A708(&v184, v186);
        uint64_t v93 = (*(uint64_t (**)(uint64_t, uint64_t))(v92 + 64))(v91, v92);
        uint64_t v95 = v94;
        uint64_t v96 = sub_10018709C(&v184);
        v90.n128_f32[0] = (float)v93;
      }

      else
      {
        uint64_t v96 = sub_100187100((uint64_t)&v184, &qword_100654080);
        uint64_t v95 = 0LL;
        v90.n128_u32[0] = 0;
      }

      float v118 = v90.n128_f32[0] + (float)((float)v95 / 10.0);
      if (v87 > v118)
      {
        uint64_t v119 = (os_log_s *)Logger.logObject.getter(v96);
        os_log_type_t v120 = static os_log_type_t.error.getter(v119);
        if (os_log_type_enabled(v119, v120))
        {
          uint64_t v121 = swift_slowAlloc(22LL, -1LL);
          *(_DWORD *)uint64_t v121 = 134218240;
          double v184 = v87;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, v185, v121 + 4, v121 + 12);
          *(_WORD *)(v121 + 12) = 2048;
          double v184 = v118;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, v185, v121 + 14, v121 + 22);
          _os_log_impl( (void *)&_mh_execute_header,  v119,  v120,  "Remote Device version is unsupported. Need: %f, got: %f",  (uint8_t *)v121,  0x16u);
          swift_slowDealloc(v121, -1LL, -1LL);
        }

        uint64_t v97 = 15LL;
        goto LABEL_28;
      }
    }

    id v122 = *(uint64_t (**)(uint8_t *, uint64_t, __n128))(v47 + 16);
    uint64_t v170 = v32;
    uint64_t v123 = (uint64_t)v180;
    uint64_t v124 = v122(v180, v47, v90);
    uint64_t v126 = v125;
    uint64_t v127 = &a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
    swift_beginAccess(&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics], &v184, 33LL, 0LL);
    type metadata accessor for StateMetrics(0LL);
    sub_1002E5D50(v124, v126, a1);
    swift_endAccess(&v184);
    uint64_t v128 = v123;
    os_log_type_t v32 = v170;
    uint64_t v129 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 24))(v128, v47);
    uint64_t v131 = v130;
    swift_beginAccess(v127, &v184, 33LL, 0LL);
    uint64_t v33 = v181;
    sub_1002E5D50(v129, v131, a1);
    swift_endAccess(&v184);
  }

uint64_t sub_1004863E0(Swift::UInt a1, void *a2, char *a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (void *)((char *)&v23[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  v29[3] = sub_100183168(0LL, (unint64_t *)&qword_10064D810, &OBJC_CLASS___IDSDevice_ptr);
  v29[4] = &off_1005E0BD0;
  uint64_t v12 = *(void **)(a4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  v29[0] = a2;
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = a2;
  id v14 = v12;
  LOBYTE(a2) = _dispatchPreconditionTest(_:)(v11);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if ((a2 & 1) != 0)
  {
    if (a1 <= 0xE && ((1LL << a1) & 0x658E) != 0)
    {
      sub_10019A6C4((uint64_t)v29, (uint64_t)v26);
      sub_10046A400(a1, a3, (uint64_t)v26, v23);
    }

    else
    {
      sub_10019A6C4((uint64_t)v29, (uint64_t)v26);
      sub_10046A8C4(a1, (uint64_t)a3, (uint64_t)v26, (char *)v23);
    }

    sub_100187100((uint64_t)v26, &qword_100654080);
    uint64_t v16 = v24;
    uint64_t v17 = v25;
    uint64_t v18 = sub_10019A708(v23, v24);
    uint64_t v27 = v16;
    uint64_t v28 = *(void *)(v17 + 8);
    uint64_t v19 = sub_1001A4B04(v26);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16LL))(v19, v18, v16);
    sub_10018709C(v23);
    uint64_t v20 = v27;
    uint64_t v21 = v28;
    sub_10019A708(v26, v27);
    (*(void (**)(uint64_t, uint64_t))(v21 + 40))(v20, v21);
    sub_10018709C(v26);
    return sub_10018709C(v29);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_1004865C8(Swift::UInt a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (void *)((char *)&v27[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  v33[3] = a5;
  v33[4] = a6;
  uint64_t v16 = sub_1001A4B04(v33);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16LL))(v16, a2, a5);
  uint64_t v17 = *(void **)(a4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v15 = v17;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)(v15);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if ((v17 & 1) != 0)
  {
    if (a1 <= 0xE && ((1LL << a1) & 0x658E) != 0)
    {
      sub_10019A6C4((uint64_t)v33, (uint64_t)v30);
      sub_10046A400(a1, a3, (uint64_t)v30, v27);
    }

    else
    {
      sub_10019A6C4((uint64_t)v33, (uint64_t)v30);
      sub_10046A8C4(a1, (uint64_t)a3, (uint64_t)v30, (char *)v27);
    }

    sub_100187100((uint64_t)v30, &qword_100654080);
    uint64_t v20 = v28;
    uint64_t v21 = v29;
    uint64_t v22 = sub_10019A708(v27, v28);
    uint64_t v31 = v20;
    uint64_t v32 = *(void *)(v21 + 8);
    uint64_t v23 = sub_1001A4B04(v30);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16LL))(v23, v22, v20);
    sub_10018709C(v27);
    uint64_t v24 = v31;
    uint64_t v25 = v32;
    sub_10019A708(v30, v31);
    (*(void (**)(uint64_t, uint64_t))(v25 + 40))(v24, v25);
    sub_10018709C(v30);
    return sub_10018709C(v33);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_1004867B4(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v3 + 312) = a3;
  *(_BYTE *)(v3 + 440) = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  *(void *)(v3 + sub_10019A6C4(**(void **)(v0 + 624) + 112LL, v0 + 320) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v3 + 328) = v6;
  *(void *)(v3 + 336) = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  *(void *)(v3 + 344) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v3 + 352) = v8;
  *(void *)(v3 + 360) = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  *(void *)(v3 + 368) = v9;
  unint64_t v10 = (*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v3 + 376) = swift_task_alloc(v10);
  *(void *)(v3 + 384) = swift_task_alloc(v10);
  *(void *)(v3 + 392) = swift_task_alloc(v10);
  uint64_t v11 = type metadata accessor for SDAuthenticationSessionExecutor(0LL);
  *(void *)(v3 + 400) = v11;
  *(void *)(v3 + 288) = v11;
  *(void *)(v3 + 296) = &off_1005DC318;
  *(void *)(v3 + 264) = a1;
  swift_retain();
  return swift_task_switch(sub_1004868A8, 0LL, 0LL);
}

uint64_t sub_1004868A8()
{
  uint64_t v1 = sub_10019A708(v0 + 33, v0[50]);
  v0[51] = v1;
  return swift_task_switch(sub_1004868EC, *v1, 0LL);
}

uint64_t sub_1004868EC()
{
  return swift_task_switch(sub_100486934, 0LL, 0LL);
}

uint64_t sub_100486934()
{
  uint64_t v1 = v0[49];
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  sub_10019A708(v0 + 8, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  v0[52] = *(void *)(v1 + *(int *)(v2 + 28));
  sub_1001A4BC8(v1, type metadata accessor for SDAuthenticationCommonOperationInput);
  uint64_t v5 = sub_10019A708(v0 + 33, v0[36]);
  v0[53] = v5;
  return swift_task_switch(sub_1004869D8, *v5, 0LL);
}

uint64_t sub_1004869D8()
{
  return swift_task_switch(sub_100486A20, 0LL, 0LL);
}

uint64_t sub_100486A20()
{
  uint64_t v1 = *(void *)(v0 + 416);
  uint64_t v2 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 368);
  int v4 = *(unsigned __int8 *)(v0 + 440);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 136);
  sub_10019A708((void *)(v0 + 104), v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
  char v7 = *(_BYTE *)(v2 + *(int *)(v3 + 32));
  sub_1001A4BC8(v2, type metadata accessor for SDAuthenticationCommonOperationInput);
  if (v1 == 6 && (v7 & 1) == 0 && v4)
  {
    uint64_t v8 = sub_10019A708((void *)(v0 + 264), *(void *)(v0 + 288));
    *(void *)(v0 + 432) = v8;
    return swift_task_switch(sub_100486B64, *v8, 0LL);
  }

  else
  {
    uint64_t v11 = *(void *)(v0 + 384);
    uint64_t v10 = *(void *)(v0 + 392);
    uint64_t v12 = *(void *)(v0 + 376);
    uint64_t v13 = *(void *)(v0 + 360);
    uint64_t v14 = *(void *)(v0 + 336);
    sub_10018709C((void *)(v0 + 104));
    sub_10018709C((void *)(v0 + 64));
    sub_10018709C((void *)(v0 + 264));
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_100486B64()
{
  return swift_task_switch(sub_100486BAC, 0LL, 0LL);
}

uint64_t sub_100486BAC()
{
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v20 = *(void *)(v0 + 352);
  uint64_t v21 = *(void *)(v0 + 344);
  uint64_t v17 = *(void *)(v0 + 360);
  uint64_t v18 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v19 = *(void *)(v0 + 328);
  uint64_t v3 = *(void **)(v0 + 312);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 216);
  sub_10019A708((void *)(v0 + 184), v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  sub_10019A6C4(v1 + 40, v0 + 144);
  sub_1001A4BC8(v1, type metadata accessor for SDAuthenticationCommonOperationInput);
  sub_10018709C((void *)(v0 + 184));
  sub_10019A6C4(v0 + 144, v0 + 224);
  uint64_t v6 = swift_allocObject(&unk_1005E2E68, 64LL, 7LL);
  *(void *)(v6 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v3;
  sub_1001CE0D0((__int128 *)(v0 + 224), v6 + 24);
  *(void *)(v0 + 48) = sub_100488734;
  *(void *)(v0 + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = v6;
  *(void *)(v0 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256LL;
  *(void *)(v0 + 32) = sub_1001B9FE4;
  *(void *)(v0 + 40) = &unk_1005E2E80;
  char v7 = _Block_copy((const void *)(v0 + 16));
  static DispatchQoS.unspecified.getter(v3);
  *(void *)(v0 + 304) = _swiftEmptyArrayStorage;
  uint64_t v8 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v9 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v10 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 304, v9, v10, v2, v8);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v17, v18, v7);
  _Block_release(v7);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v2);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v21);
  sub_10018709C((void *)(v0 + 144));
  swift_release(*(void *)(v0 + 56));
  uint64_t v11 = *(void *)(v0 + 384);
  uint64_t v12 = *(void *)(v0 + 392);
  uint64_t v13 = *(void *)(v0 + 376);
  uint64_t v14 = *(void *)(v0 + 360);
  uint64_t v15 = *(void *)(v0 + 336);
  sub_10018709C((void *)(v0 + 104));
  sub_10018709C((void *)(v0 + 64));
  sub_10018709C((void *)(v0 + 264));
  swift_task_dealloc(v12);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100486E40(void *a1, uint64_t a2, void *a3, uint64_t a4, _BYTE *a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(a5);
  uint64_t v10 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v10);
  uint64_t v74 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v81[3] = sub_100183168(0LL, &qword_1006540B0, &OBJC_CLASS___IDSService_ptr);
  v81[4] = &off_1005D9CA8;
  v81[0] = a4;
  v80[3] = type metadata accessor for SDAuthenticationSecurityManager(0LL);
  v80[4] = &off_1005D59A8;
  v80[0] = a2;
  swift_unknownObjectWeakInit(&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate], 0LL);
  *(void *)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions] = _swiftEmptyArrayStorage;
  *(void *)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions] = _swiftEmptyArrayStorage;
  *(void *)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions] = _swiftEmptyArrayStorage;
  *(void *)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions] = _swiftEmptyArrayStorage;
  *(void *)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions] = &_swiftEmptyDictionarySingleton;
  *(void *)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionAuthTypes] = &_swiftEmptyDictionarySingleton;
  *(void *)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_nearbyActionAdvertiser] = 0LL;
  uint64_t v12 = &a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
  a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics] = 2;
  uint64_t v13 = (int *)type metadata accessor for StateMetrics(0LL);
  uint64_t v14 = &v12[v13[5]];
  uint64_t v15 = type metadata accessor for Date(0LL);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL);
  v16(v14, 1LL, 1LL, v15);
  uint64_t v17 = &v12[v13[6]];
  uint64_t v75 = v16;
  v16(v17, 1LL, 1LL, v15);
  *(void *)&v12[v13[7]] = &_swiftEmptyDictionarySingleton;
  *(void *)&v12[v13[8]] = &_swiftEmptyDictionarySingleton;
  uint64_t v18 = &a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiatorDeviceStream];
  *(_OWORD *)uint64_t v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *((void *)v18 + 4) = 0LL;
  uint64_t v19 = &a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice];
  *((void *)v19 + 4) = 0LL;
  *(_OWORD *)uint64_t v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestUnlockNotificationPosted] = 0;
  uint64_t v20 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID;
  uint64_t v21 = a5;
  *(void *)&a5[v20] = sub_100391A90((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v22 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager;
  *(void *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager] = 0LL;
  uint64_t v23 = &v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone];
  *(_OWORD *)uint64_t v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((void *)v23 + 4) = 0LL;
  uint64_t v24 = &v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
  uint64_t v25 = type metadata accessor for UUID(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v24, 1LL, 1LL, v25);
  *(void *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_approveNearbyInfoAdvertiser] = 0LL;
  uint64_t v26 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers;
  *(void *)&v21[v26] = sub_100391C44((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestContinuationsBySessionID] = &_swiftEmptyDictionarySingleton;
  *(void *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager____lazy_storage___unlockVolumeManager] = 0LL;
  uint64_t v27 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue;
  *(void *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue] = a1;
  sub_10019A6C4( (uint64_t)v80,  (uint64_t)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager]);
  *(void *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager] = a3;
  v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportsReady] = 0;
  sub_10019A6C4((uint64_t)v81, (uint64_t)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsService]);
  uint64_t v28 = (id (**)())&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo];
  *uint64_t v28 = sub_100458C80;
  v28[1] = 0LL;
  uint64_t v29 = &v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_commonContextGenerator];
  *uint64_t v29 = sub_100458F38;
  v29[1] = 0LL;
  uint64_t v30 = (uint64_t (**)@<X0>(uint64_t@<X0>, char *@<X1>, void *@<X2>, uint64_t@<X8>))&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_flowGenerator];
  *uint64_t v30 = sub_100459738;
  v30[1] = 0LL;
  uint64_t v31 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionGenerator];
  *uint64_t v31 = sub_10045D850;
  v31[1] = 0LL;
  uint64_t v32 = swift_allocObject(&unk_1005E3098, 24LL, 7LL);
  *(void *)(v32 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = a1;
  uint64_t v33 = (char *(**)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X3>, void *@<X4>, char **@<X8>))&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessionGenerator];
  *uint64_t v33 = sub_100489828;
  v33[1] = (char *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X3>, void *@<X4>, char **@<X8>))v32;
  uint64_t v34 = swift_allocObject(&unk_1005E30C0, 24LL, 7LL);
  *(void *)(v34 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = a1;
  uint64_t v35 = (void (**)(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, char **@<X8>))&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessionGenerator];
  os_log_s *v35 = sub_100489830;
  v35[1] = (void (*)(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, char **@<X8>))v34;
  uint64_t v36 = swift_allocObject(&unk_1005E30E8, 24LL, 7LL);
  *(void *)(v36 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = a1;
  uint64_t v37 = &v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessionGenerator];
  void *v37 = sub_100489838;
  v37[1] = v36;
  uint64_t v38 = swift_allocObject(&unk_1005E3110, 24LL, 7LL);
  *(void *)(v38 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = a1;
  unint64_t v39 = &v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessionInitiatorGenerator];
  void *v39 = sub_100489840;
  v39[1] = v38;
  uint64_t v40 = swift_allocObject(&unk_1005E3138, 24LL, 7LL);
  *(void *)(v40 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = a1;
  unint64_t v41 = &v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessionGenerator];
  void *v41 = sub_100489848;
  v41[1] = v40;
  uint64_t v42 = (id (**)())&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isWifiEnabled];
  *uint64_t v42 = sub_10045DFD4;
  v42[1] = 0LL;
  uint64_t v43 = (id (**)())&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isBluetoothEnabled];
  os_log_s *v43 = sub_10045DFE0;
  v43[1] = 0LL;
  unint64_t v44 = (id (**)(uint64_t))&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices];
  *unint64_t v44 = sub_10045DFEC;
  v44[1] = 0LL;
  uint64_t v45 = (void (**)(uint64_t@<X8>))&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID];
  const char *v45 = sub_10045E0A4;
  v45[1] = 0LL;
  *(void *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_retryCount] = 0LL;
  uint64_t v46 = type metadata accessor for SDAuthenticationBioArmUnarmedDevices(0LL);
  uint64_t v47 = swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
  uint64_t v48 = v47 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_streamContinuation;
  uint64_t v49 = sub_100183098((uint64_t *)&unk_100648E98);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56LL))(v48, 1LL, 1LL, v49);
  *(void *)(v47 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner) = 0LL;
  *(void *)(v47 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyActionScanner) = 0LL;
  *(void *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator] = v47;
  id v50 = a1;
  uint64_t v51 = a3;
  uint64_t v53 = SFDeviceClassCodeGet(v51, v52);
  if ((_DWORD)v53 == 1)
  {
    uint64_t v55 = *(void **)&v21[v27];
    uint64_t v56 = type metadata accessor for SDAuthenticationRegistrationManager();
    swift_allocObject(v56, 49LL, 7LL);
    id v57 = v55;
    char v58 = 0;
LABEL_5:
    uint64_t v61 = sub_10021DD04(v57, v58);
    uint64_t v62 = *(void *)&v21[v22];
    *(void *)&v21[v22] = v61;

    swift_release(v62);
    goto LABEL_7;
  }

  if (SFDeviceClassCodeGet(v53, v54) == 5)
  {
    uint64_t v59 = *(void **)&v21[v27];
    uint64_t v60 = type metadata accessor for SDAuthenticationRegistrationManager();
    swift_allocObject(v60, 49LL, 7LL);
    id v57 = v59;
    char v58 = 1;
    goto LABEL_5;
  }

LABEL_7:
  v79.receiver = v21;
  v79.super_class = ObjectType;
  id v63 = objc_msgSendSuper2(&v79, "init");
  uint64_t v64 = &v51[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_delegate];
  *((void *)v64 + 1) = &off_1005E2BB8;
  swift_unknownObjectWeakAssign(v64, v63);
  uint64_t v65 = (char *)v63;
  uint64_t v66 = (uint64_t)v74;
  Date.init()(v65);
  v75((char *)v66, 0LL, 1LL, v15);
  os_log_type_t v67 = &v65[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
  swift_beginAccess(&v65[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics], aBlock, 33LL, 0LL);
  sub_1001C9860(v66, (uint64_t)&v67[v13[5]], &qword_1006457E8);
  swift_endAccess(aBlock);
  uint64_t v68 = *(dispatch_queue_s **)&v65[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  uint64_t v69 = swift_allocObject(&unk_1005E3160, 24LL, 7LL);
  *(void *)(v69 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v65;
  uint64_t v70 = swift_allocObject(&unk_1005E3188, 32LL, 7LL);
  *(void *)(v70 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = sub_100489850;
  *(void *)(v70 + 24) = v69;
  aBlock[4] = sub_10041A52C;
  uint64_t v78 = v70;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100458548;
  aBlock[3] = &unk_1005E31A0;
  uint64_t v71 = _Block_copy(aBlock);
  uint64_t v72 = v78;
  uint64_t v73 = v65;
  swift_retain(v70);
  swift_release(v72);
  dispatch_sync(v68, v71);
  _Block_release(v71);
  LOBYTE(v68) = swift_isEscapingClosureAtFileLocation(v70, "", 94LL, 344LL, 14LL, 1LL);
  swift_release(v70);
  swift_release(v69);

  if ((v68 & 1) != 0)
  {
    __break(1u);
  }

  else
  {
    sub_10018709C(v81);
    sub_10018709C(v80);
  }

uint64_t sub_1004875D8(int a1)
{
  uint64_t v1 = 0xD000000000000012LL;
  switch(a1)
  {
    case 4:
      NSString v2 = String._bridgeToObjectiveC()();
      id v4 = (id)SFLocalizedStringForKey(v2, v3);

      if (!v4)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }

      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

      NSString v5 = String._bridgeToObjectiveC()();
      id v7 = (id)SFLocalizedStringForKey(v5, v6);

      if (v7) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_5:
      NSString v8 = String._bridgeToObjectiveC()();
      id v10 = (id)SFLocalizedStringForKey(v8, v9);

      if (!v10) {
        goto LABEL_37;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);

      NSString v11 = String._bridgeToObjectiveC()();
      id v7 = (id)SFLocalizedStringForKey(v11, v12);

      if (v7) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_8:
      NSString v13 = String._bridgeToObjectiveC()();
      id v15 = (id)SFLocalizedStringForKey(v13, v14);

      if (!v15) {
        goto LABEL_38;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);

      NSString v16 = String._bridgeToObjectiveC()();
      id v7 = (id)SFLocalizedStringForKey(v16, v17);

      if (v7) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_11:
      NSString v18 = String._bridgeToObjectiveC()();
      id v20 = (id)SFLocalizedStringForKey(v18, v19);

      if (!v20) {
        goto LABEL_39;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);

      NSString v21 = String._bridgeToObjectiveC()();
      id v7 = (id)SFLocalizedStringForKey(v21, v22);

      if (v7) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_14:
      NSString v23 = String._bridgeToObjectiveC()();
      id v25 = (id)SFLocalizedStringForKey(v23, v24);

      if (!v25) {
        goto LABEL_40;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);

      NSString v26 = String._bridgeToObjectiveC()();
      id v7 = (id)SFLocalizedStringForKey(v26, v27);

      if (v7) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_17:
      NSString v28 = String._bridgeToObjectiveC()();
      id v30 = (id)SFLocalizedStringForKey(v28, v29);

      if (!v30) {
        goto LABEL_41;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);

      NSString v31 = String._bridgeToObjectiveC()();
      id v7 = (id)SFLocalizedStringForKey(v31, v32);

      if (v7) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_20:
      NSString v33 = String._bridgeToObjectiveC()();
      id v35 = (id)SFLocalizedStringForKey(v33, v34);

      if (!v35) {
        goto LABEL_42;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);

      NSString v36 = String._bridgeToObjectiveC()();
      id v7 = (id)SFLocalizedStringForKey(v36, v37);

      if (v7) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_23:
      NSString v38 = String._bridgeToObjectiveC()();
      id v40 = (id)SFLocalizedStringForKey(v38, v39);

      if (!v40) {
        goto LABEL_43;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);

      NSString v41 = String._bridgeToObjectiveC()();
      id v7 = (id)SFLocalizedStringForKey(v41, v42);

      if (v7) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_26:
      NSString v43 = String._bridgeToObjectiveC()();
      id v45 = (id)SFLocalizedStringForKey(v43, v44);

      if (!v45) {
        goto LABEL_44;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);

      NSString v46 = String._bridgeToObjectiveC()();
      id v7 = (id)SFLocalizedStringForKey(v46, v47);

      if (v7) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_29:
      NSString v48 = String._bridgeToObjectiveC()();
      id v50 = (id)SFLocalizedStringForKey(v48, v49);

      if (!v50)
      {
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }

      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);

      NSString v51 = String._bridgeToObjectiveC()();
      id v7 = (id)SFLocalizedStringForKey(v51, v52);

      if (!v7)
      {
        __break(1u);
LABEL_32:
        NSString v53 = String._bridgeToObjectiveC()();
        id v55 = (id)SFLocalizedStringForKey(v53, v54);

        if (v55)
        {
          uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);

          NSString v56 = String._bridgeToObjectiveC()();
          id v7 = (id)SFLocalizedStringForKey(v56, v57);

          if (v7) {
            goto LABEL_34;
          }
LABEL_47:
          __break(1u);
          JUMPOUT(0x100487C38LL);
        }

id sub_100487C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  if (String.count.getter(a2, a3) < 1)
  {
    id v6 = (id)SFAuthenticationErrorToString(a1);
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    uint64_t v3 = v7;
  }

  else
  {
    swift_bridgeObjectRetain(v3);
  }

  id v8 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v9 = String._bridgeToObjectiveC()();
  unsigned __int8 v10 = [v8 BOOLForKey:v9];

  if ((v10 & 1) != 0)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v11 = type metadata accessor for Logger(0LL);
    uint64_t v12 = sub_100186DE4(v11, (uint64_t)qword_100656748);
    NSString v13 = (os_log_s *)Logger.logObject.getter(v12);
    os_log_type_t v14 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "OCEUseDebugMsg is set. Preserving debug message", v15, 2u);
      swift_slowDealloc(v15, -1LL, -1LL);
    }

    swift_bridgeObjectRetain(v3);
    unint64_t v16 = 0xE500000000000000LL;
    uint64_t v17 = 0x6775626544LL;
    uint64_t v18 = v4;
    uint64_t v19 = v3;
  }

  else
  {
    uint64_t v17 = sub_1004875D8(a1);
    unint64_t v16 = v20;
    uint64_t v18 = v21;
    uint64_t v19 = v22;
  }

  static String._unconditionallyBridgeFromObjectiveC(_:)(SFKAuthenticationErrorDomain);
  uint64_t v24 = v23;
  uint64_t v36 = a1;
  uint64_t v25 = sub_100183098(&qword_1006555B8);
  uint64_t inited = swift_initStackObject(v25, v37);
  *(_OWORD *)(inited + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = xmmword_1004CD550;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
  *(void *)(inited + 40) = v27;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v4;
  *(void *)(inited + sub_10019A6C4(*(void *)(v0 + 176), v0 + 56) = v3;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(SFAutoUnlockManagerErrorTitleKey);
  *(void *)(inited + 88) = v28;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 96) = v17;
  *(void *)(inited + sub_10019A6C4(**(void **)(v0 + 424) + 112LL, v0 + 104) = v16;
  *(void *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(SFAutoUnlockManagerErrorBodyKey);
  *(void *)(inited + 136) = v29;
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 144) = v18;
  *(void *)(inited + 152) = v19;
  unint64_t v30 = sub_10039153C(inited);
  id v31 = objc_allocWithZone(&OBJC_CLASS___NSError);
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  id v34 = objc_msgSend(v31, "initWithDomain:code:userInfo:", v32, v36, isa, swift_bridgeObjectRelease(v30).n128_f64[0]);

  return v34;
}

uint64_t sub_100487FB4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  id v8 = (void *)swift_task_alloc(dword_1006569E4);
  *(void *)(v2 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v8;
  *id v8 = v2;
  v8[1] = sub_100195708;
  return sub_100464470(a1, v4, v5, v6, v7, (uint64_t)(v1 + 6));
}

uint64_t sub_100488038()
{
  uint64_t v2 = (void *)swift_task_alloc(dword_100656A04);
  *(void *)(v1 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_100195708;
  v2[7] = v0 + 32;
  return swift_task_switch(sub_100464140, 0LL, 0LL);
}

uint64_t sub_100488098()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8LL;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8, v5);
}

void sub_10048813C()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  sub_1004793E8( *(char **)(v0 + 16),  v0 + v2,  *(_DWORD *)(v0 + v3),  *(void *)(v0 + ((v3 + 11) & 0xFFFFFFFFFFFFFFF8LL)),  *(const char **)(v0 + ((v3 + 11) & 0xFFFFFFFFFFFFFFF8LL) + 8),  *(void *)(v0 + ((((v3 + 11) & 0xFFFFFFFFFFFFFFF8LL) + 23) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_10048819C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004881AC(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1004881B4()
{
  uint64_t v1 = *(void *)(sub_100183098(&qword_100656A28) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v13 = *(void *)(v1 + 64);
  uint64_t v3 = type metadata accessor for UUID(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  swift_bridgeObjectRelease(*(const char **)(v0 + 48));
  uint64_t v7 = sub_100183098(&qword_1006462F0);
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v13 + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v10 = (v9 + 47) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v11 = (v5 + v10 + 8) & ~v5;
  sub_10018709C((void *)(v0 + v9));

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v11, v3);
  return swift_deallocObject(v0, ((v6 + v11 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 8);
}

uint64_t sub_1004882E8(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100183098(&qword_100656A28) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  type metadata accessor for UUID(0LL);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v12 = *(void *)(v1 + 16);
  int v7 = *(_DWORD *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v9 = *(void *)(v1 + 48);
  unint64_t v10 = (void *)swift_task_alloc(dword_100656A34);
  *(void *)(v2 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v10;
  *unint64_t v10 = v2;
  v10[1] = sub_100195708;
  return sub_100479BC0(a1, v12, v6, v7, v8, v9, v1 + v4, v1 + v5);
}

uint64_t sub_100488400()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100488474(uint64_t a1)
{
}

uint64_t sub_1004884B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(_BYTE *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc(dword_100656A4C);
  *(void *)(v2 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100195708;
  return sub_10047D200(a1, v4, v5, v6, v7, v8, v1 + 56);
}

uint64_t sub_100488548()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_bridgeObjectRelease(*(void *)(v0 + 24));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8, v5);
}

void sub_1004885EC()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  sub_10047B764( *(void *)(v0 + 16),  *(const char **)(v0 + 24),  *(_DWORD *)(v0 + 32),  *(void *)(v0 + 40),  *(void *)(v0 + 48),  v0 + v2,  *(void (**)(id))(v0 + v3),  *(void *)(v0 + v3 + 8));
}

uint64_t sub_100488658()
{
  sub_10018709C((void *)(v0 + 32));
  swift_bridgeObjectRelease(*(const char **)(v0 + 80));
  swift_release(*(void *)(v0 + 96));

  return swift_deallocObject(v0, 112LL);
}

uint64_t sub_10048869C()
{
  return sub_10047B4CC( *(_DWORD *)(v0 + 16),  *(void *)(v0 + 24),  v0 + 32,  *(void *)(v0 + 72),  *(const char **)(v0 + 80),  *(uint64_t (**)(uint64_t))(v0 + 88),  *(void *)(v0 + 96),  *(void *)(v0 + 104));
}

uint64_t sub_1004886B8()
{
  swift_release(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_1004886F4()
{
  return sub_10047B344( *(void *)(v0 + 16),  *(void **)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(uint64_t (**)(uint64_t))(v0 + 48),  *(void *)(v0 + 56),  *(void *)(v0 + 64));
}

uint64_t sub_100488708()
{
  sub_10018709C((void *)(v0 + 24));
  return swift_deallocObject(v0, 64LL);
}

void sub_100488734()
{
}

uint64_t sub_100488740(void *a1)
{
  return sub_10047D6A4(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_10048875C()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 104LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 8;
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  sub_10018709C((void *)(v0 + 40));
  swift_bridgeObjectRelease(*(const char **)(v0 + 88));

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_1004887F4(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[10];
  uint64_t v7 = v1[11];
  uint64_t v8 = v1[12];
  uint64_t v9 = (void *)swift_task_alloc(dword_100656A5C);
  *(void *)(v2 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100195708;
  return sub_10046BCDC(a1, v3, v4, v5, (uint64_t)(v1 + 5), v6, v7, v8);
}

uint64_t sub_1004888C8()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v5 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8LL;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_10018709C((void *)(v0 + v4));
  swift_bridgeObjectRelease(*(const char **)(v0 + v5 + 8));
  return swift_deallocObject(v0, ((v5 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8);
}

uint64_t sub_100488974()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_10046D108( *(void *)(v0 + 16),  v0 + v2,  v0 + v3,  *(void *)(v0 + ((v3 + 47) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v0 + ((v3 + 47) & 0xFFFFFFFFFFFFFFF8LL) + 8),  *(void *)(v0 + ((((v3 + 47) & 0xFFFFFFFFFFFFFFF8LL) + 23) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_1004889D4()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v5 = (((v4 + 47) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_10018709C((void *)(v0 + v4));

  return swift_deallocObject(v0, v5 + 8);
}

uint64_t sub_100488A7C()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_10046D050( *(void *)(v0 + 16),  *(void *)(v0 + 24),  v0 + v2,  v0 + v3,  *(void *)(v0 + ((v3 + 47) & 0xFFFFFFFFFFFFFFF8LL)),  *(void **)(v0 + ((((v3 + 47) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_100488AD8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_100488AE8( unint64_t *a1, uint64_t a2, uint64_t a3, const char **a4, uint64_t a5, unsigned int a6)
{
  int64_t v9 = 0LL;
  uint64_t v23 = 0LL;
  uint64_t v24 = a3 + 56;
  uint64_t v10 = 1LL << *(_BYTE *)(a3 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(a3 + 56);
  int64_t v25 = (unint64_t)(v10 + 63) >> 6;
  while (v12)
  {
    unint64_t v13 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v14 = v13 | (v9 << 6);
LABEL_17:
    id v28 = *(id *)(*(void *)(a3 + 48) + 8 * v14);
    id v18 = v28;
    sub_100461CB4(&v28, a4, a5, (os_unfair_lock_s *)a6);
    char v20 = v19;

    if (v6) {
      return;
    }
    if ((v20 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v14;
      BOOL v15 = __OFADD__(v23++, 1LL);
      if (v15) {
        goto LABEL_30;
      }
    }
  }

  BOOL v15 = __OFADD__(v9++, 1LL);
  if (v15)
  {
    __break(1u);
    goto LABEL_29;
  }

  if (v9 >= v25) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v24 + 8 * v9);
  if (v16)
  {
LABEL_16:
    unint64_t v12 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v9 << 6);
    goto LABEL_17;
  }

  int64_t v17 = v9 + 1;
  if (v9 + 1 >= v25) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v24 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v9 + 2;
  if (v9 + 2 >= v25) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v24 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v9 + 3;
  if (v9 + 3 >= v25)
  {
LABEL_27:
    swift_retain();
    sub_100481804(a1, a2, v23, a3, &qword_100652550);
    return;
  }

  unint64_t v16 = *(void *)(v24 + 8 * v17);
  if (v16)
  {
LABEL_15:
    int64_t v9 = v17;
    goto LABEL_16;
  }

  while (1)
  {
    int64_t v9 = v17 + 1;
    if (__OFADD__(v17, 1LL)) {
      break;
    }
    if (v9 >= v25) {
      goto LABEL_27;
    }
    unint64_t v16 = *(void *)(v24 + 8 * v9);
    ++v17;
    if (v16) {
      goto LABEL_16;
    }
  }

uint64_t sub_100488D08(uint64_t a1, const char **a2, void *a3, unsigned int a4)
{
  char v8 = *(_BYTE *)(a1 + 32);
  unsigned int v9 = v8 & 0x3F;
  unint64_t v10 = (unint64_t)((1LL << v8) + 63) >> 6;
  uint64_t isStackAllocationSafe = a3;
  unint64_t v12 = (void *)isStackAllocationSafe;
  if (v9 <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * v10, 8LL), (isStackAllocationSafe & 1) != 0))
  {
    uint64_t v22 = (uint64_t)&v22;
    __chkstk_darwin(isStackAllocationSafe);
    unint64_t v13 = (char *)&v22 - ((8 * v10 + 15) & 0x3FFFFFFFFFFFFFF0LL);
    bzero(v13, 8 * v10);
    id v14 = v12;
    sub_100488AE8((unint64_t *)v13, v10, a1, a2, (uint64_t)v14, a4);
    uint64_t v16 = v15;
    swift_release(a1);

    if (v4) {
      swift_willThrow(v17);
    }
  }

  else
  {
    id v18 = (void *)swift_slowAlloc(8 * v10, -1LL);
    bzero(v18, 8 * v10);
    id v19 = v12;
    sub_100488AE8((unint64_t *)v18, v10, a1, a2, (uint64_t)v19, a4);
    uint64_t v16 = v20;
    swift_release(a1);

    swift_slowDealloc(v18, -1LL, -1LL);
  }

  return v16;
}

void sub_100488EE8(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v7 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *unint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    uint64_t v8 = sub_10034EC60(a1);
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  uint64_t v13 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v13, (uint64_t)qword_100656748);
  swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc(22LL, -1LL);
    uint64_t v18 = swift_slowAlloc(64LL, -1LL);
    uint64_t v24 = v18;
    *(_DWORD *)uint64_t v17 = 136315394;
    unint64_t v19 = sub_10034F010(v8);
    uint64_t v21 = (const char *)v20;
    uint64_t v23 = sub_10018CDB4(v19, v20, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v17 + 4, v17 + 12);
    *(void *)&double v22 = swift_bridgeObjectRelease(v21).n128_u64[0];
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain(a3, v22);
    uint64_t v23 = sub_10018CDB4(a2, (unint64_t)a3, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v17 + 14, v17 + 22);
    swift_bridgeObjectRelease_n(a3, 3LL);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Asked to enable %s for device: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1LL, -1LL);
    swift_slowDealloc(v17, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a3, 2LL);
  }

uint64_t sub_100489164()
{
  uint64_t v1 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  uint64_t v5 = type metadata accessor for SDAuthenticationNearbyInfoAdvertiser();
  uint64_t v6 = swift_allocObject(v5, 24LL, 7LL);
  id v7 = objc_allocWithZone(&OBJC_CLASS___SFService);
  id v8 = v4;
  id v9 = [v7 init];
  *(void *)(v6 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v9;
  [v9 setIdentifier:SFServiceIdentifierAutoUnlock];
  id v10 = v9;
  [v10 setDispatchQueue:v8];

  uint64_t v11 = *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_approveNearbyInfoAdvertiser];
  *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_approveNearbyInfoAdvertiser] = v6;
  swift_release(v11);
  uint64_t v12 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v3, 1LL, 1LL, v12);
  uint64_t v13 = (void *)swift_allocObject(&unk_1005E3458, 40LL, 7LL);
  v13[2] = 0LL;
  v13[3] = 0LL;
  v13[4] = v0;
  uint64_t v14 = v0;
  uint64_t v15 = sub_1001B37E8((uint64_t)v3, (uint64_t)&unk_100656BB8, (uint64_t)v13);
  return swift_release(v15);
}

void sub_1004892C8()
{
  uint64_t v16 = 0LL;
  uint64_t v17 = 0LL;
  int domain_answer = os_eligibility_get_domain_answer(27LL, &v17, &v16, 0LL, 0LL);
  if (v17 == 4)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v1 = type metadata accessor for Logger(0LL);
    uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100656748);
    uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Device is eligible for Oneness", v5, 2u);
      swift_slowDealloc(v5, -1LL, -1LL);
    }
  }

  else
  {
    int v6 = domain_answer;
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    uint64_t v7 = type metadata accessor for Logger(0LL);
    uint64_t v8 = sub_100186DE4(v7, (uint64_t)qword_100656748);
    id v9 = (os_log_s *)Logger.logObject.getter(v8);
    os_log_type_t v10 = static os_log_type_t.error.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc(18LL, -1LL);
      *(_DWORD *)uint64_t v11 = 67109376;
      int v18 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v11 + 4, v11 + 8);
      *(_WORD *)(v11 + 8) = 2048;
      swift_beginAccess(&v17, &v18, 0LL, 0LL);
      uint64_t v15 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v11 + 10, v11 + 18);
      _os_log_impl( (void *)&_mh_execute_header,  v9,  v10,  "Device is ineligible for Oneness due to error %d, answer %llu",  (uint8_t *)v11,  0x12u);
      swift_slowDealloc(v11, -1LL, -1LL);
    }

    unint64_t v12 = sub_100187014();
    uint64_t v13 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v12, 0LL, 0LL);
    *(_DWORD *)uint64_t v14 = 35;
    *(void *)(v14 + 8) = 0xD00000000000001CLL;
    *(void *)(v14 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = 0x8000000100511210LL;
    swift_willThrow(v13);
  }

uint64_t sub_100489558()
{
  sub_10018709C((void *)(v0 + 48));
  return swift_deallocObject(v0, 88LL);
}

uint64_t sub_10048958C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  os_log_type_t v4 = (void *)swift_task_alloc(dword_100656A74);
  *(void *)(v1 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[8] = v3;
  v4[9] = v0 + 48;
  v4[7] = v2;
  return swift_task_switch(sub_10046DEC8, 0LL, 0LL);
}

uint64_t sub_100489600()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  os_log_type_t v4 = (void *)swift_task_alloc(dword_100656A84);
  *(void *)(v1 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_10046DE14, 0LL, 0LL);
}

uint64_t sub_100489668()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  os_log_type_t v4 = (void *)swift_task_alloc(dword_100656A9C);
  *(void *)(v1 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_10046F698, 0LL, 0LL);
}

uint64_t sub_1004896D0()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  os_log_type_t v4 = (void *)swift_task_alloc(dword_100656AAC);
  *(void *)(v1 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_10046F698, 0LL, 0LL);
}

uint64_t sub_100489738()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  os_log_type_t v4 = (void *)swift_task_alloc(dword_100656ABC);
  *(void *)(v1 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_10046F748, 0LL, 0LL);
}

uint64_t sub_1004897A0()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  os_log_type_t v4 = (void *)swift_task_alloc(dword_100656ACC);
  *(void *)(v1 + sub_10019A6C4(**(void **)(v0 + 208) + 112LL, v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_100470160, 0LL, 0LL);
}

uint64_t sub_100489804()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

char *sub_100489828@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, char **a6@<X8>)
{
  return sub_10045D970(a1, a2, a3, a4, a5, *(void **)(v6 + 16), a6);
}

void sub_100489830(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char **a4@<X8>)
{
}

uint64_t sub_100489838@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_10045DB54(a1, a2, a3, a4, *(void **)(v5 + 16), a5);
}

uint64_t sub_100489840@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_10045DC4C(a1, a2, a3, a4, *(void **)(v5 + 16), a5);
}

uint64_t sub_100489848@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_10045DDF4(a1, a2, a3, *(void **)(v4 + 16), a4);
}

void sub_100489850()
{
}

uint64_t sub_100489858()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100489868()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10048988C(uint64_t a1)
{
  return sub_100469934(a1, v1);
}

void sub_100489894(uint64_t a1)
{
}

void sub_10048989C(uint64_t a1)
{
}

void sub_1004898A4()
{
}

uint64_t sub_1004898B0()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc(dword_100656AE4);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_1004719C4, 0LL, 0LL);
}

uint64_t sub_100489918()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc(dword_100656AF4);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_100471914, 0LL, 0LL);
}

unint64_t sub_10048997C()
{
  unint64_t result = qword_100656B00;
  if (!qword_100656B00)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D588C, &type metadata for SharingFeatureFlags);
    atomic_store(result, &qword_100656B00);
  }

  return result;
}

uint64_t sub_1004899C4()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc(dword_100656B0C);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_100472470, 0LL, 0LL);
}

uint64_t sub_100489A2C()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc(dword_100656B1C);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_100473788, 0LL, 0LL);
}

uint64_t sub_100489A94()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc(dword_100656B2C);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_100473788, 0LL, 0LL);
}

uint64_t sub_100489AFC()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc(dword_100656B3C);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_10047410C, 0LL, 0LL);
}

uint64_t sub_100489B64()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc(dword_100656B54);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_1004749E0, 0LL, 0LL);
}

uint64_t sub_100489BCC()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc(dword_100656B6C);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_1004753FC, 0LL, 0LL);
}

uint64_t sub_100489C34()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc(dword_100656B7C);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_100472D0C, 0LL, 0LL);
}

uint64_t sub_100489C9C()
{
  return swift_deallocObject(v0, 80LL);
}

uint64_t sub_100489CD0()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc(dword_100656B8C);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100195708;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_100472D0C, 0LL, 0LL);
}

uint64_t sub_100489D34()
{
  unint64_t v1 = v0[10];
  if (v1 >> 60 != 15) {
    sub_100189B20(v0[9], v1);
  }
  return swift_deallocObject(v0, 96LL);
}

uint64_t sub_100489D78()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  unint64_t v5 = *(unsigned __int8 *)(v0 + 88) | ((unint64_t)*(unsigned int *)(v0 + 92) << 32);
  uint64_t v6 = (void *)swift_task_alloc(dword_100656BA4);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_100195708;
  v6[9] = v4;
  v6[10] = v5;
  v6[7] = v2;
  v6[8] = v3;
  return swift_task_switch(sub_1004688DC, 0LL, 0LL);
}

uint64_t sub_100489DF8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc(dword_100656BB4);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_100195708;
  v3[3] = v2;
  return swift_task_switch(sub_100467AB0, 0LL, 0LL);
}

uint64_t sub_100489E58()
{
  uint64_t v1 = sub_100183098(&qword_100656BC0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v5 = type metadata accessor for UUID(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + v4 + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject(v0, ((v8 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8);
}

uint64_t sub_100489F5C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100183098(&qword_100656BC0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v8 = *(void *)(type metadata accessor for UUID(0LL) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + v7 + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = *(void *)(v1 + v6);
  uint64_t v13 = *(void *)(v1 + v7);
  uint64_t v14 = v1 + v9;
  uint64_t v15 = *(void *)(v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8LL));
  uint64_t v16 = (void *)swift_task_alloc(dword_100656BCC);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_1001943E8;
  return sub_100466578(a1, v10, v11, v1 + v5, v12, v13, v14, v15);
}

uint64_t sub_10048A074()
{
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UUID(0LL) - 8) + 80LL);
  uint64_t v3 = v0 + 32;
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = v0 + ((v2 + 88) & ~v2);
  unint64_t v7 = (void *)swift_task_alloc(dword_100656BDC);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *unint64_t v7 = v1;
  v7[1] = sub_100195708;
  v7[9] = v5;
  v7[10] = v6;
  v7[7] = v3;
  v7[8] = v4;
  return swift_task_switch(sub_1004695B0, 0LL, 0LL);
}

uint64_t sub_10048A100()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10048A198()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1004672F8( *(void **)(v0 + 16),  *(void **)(v0 + 24),  *(void *)(v0 + 32),  (char *)(v0 + v2),  *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_10048A1E4()
{
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UUID(0LL) - 8) + 80LL);
  uint64_t v3 = v0 + 32;
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = v0 + ((v2 + 88) & ~v2);
  unint64_t v7 = (void *)swift_task_alloc(dword_100656BDC);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *unint64_t v7 = v1;
  v7[1] = sub_1001943E8;
  v7[9] = v5;
  v7[10] = v6;
  v7[7] = v3;
  v7[8] = v4;
  return swift_task_switch(sub_1004695B0, 0LL, 0LL);
}

uint64_t sub_10048A274()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 88LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  sub_10018709C((void *)(v0 + 32));

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_10048A2F8()
{
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UUID(0LL) - 8) + 80LL);
  uint64_t v3 = v0 + 32;
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = v0 + ((v2 + 88) & ~v2);
  unint64_t v7 = (void *)swift_task_alloc(dword_100656BFC);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *unint64_t v7 = v1;
  v7[1] = sub_100195708;
  v7[9] = v5;
  v7[10] = v6;
  v7[7] = v3;
  v7[8] = v4;
  return swift_task_switch(sub_10046508C, 0LL, 0LL);
}

uint64_t sub_10048A388()
{
  uint64_t v2 = (void *)swift_task_alloc(dword_100656C0C);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_100195708;
  v2[7] = v0 + 32;
  return swift_task_switch(sub_100462E38, 0LL, 0LL);
}

uint64_t sub_10048A3E8()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_10048A414()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc(dword_100656C1C);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100195708;
  return ((uint64_t (*)(uint64_t, void *, void *))((char *)&dword_100656C18 + dword_100656C18))(v2, v3, v4);
}

uint64_t sub_10048A484()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc(dword_100656C2C);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100195708;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_100656C28 + dword_100656C28))(v2, v3, v4);
}

uint64_t sub_10048A500()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_10048A52C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  unint64_t v7 = (void *)swift_task_alloc(dword_100656C3C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_100195708;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_100656C38 + dword_100656C38))( a1,  v4,  v5,  v6);
}

uint64_t sub_10048A5B0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10048A5D4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc(dword_100656C4C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_100195708;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100656C48 + dword_100656C48))(a1, v4);
}

void sub_10048A644(_BYTE *a1@<X8>)
{
}

uint64_t sub_10048A664()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc(dword_100656C64);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_100195708;
  v3[2] = v2;
  return swift_task_switch(sub_10045EC68, 0LL, 0LL);
}

uint64_t sub_10048A6C8()
{
  return swift_deallocObject(v0, 72LL);
}

uint64_t sub_10048A6F4()
{
  uint64_t v2 = (void *)swift_task_alloc(dword_100656C74);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_100195708;
  v2[7] = v0 + 32;
  return swift_task_switch(sub_100464140, 0LL, 0LL);
}

uint64_t sub_10048A754()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10048A7C8()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UUID(0LL) - 8) + 80LL);
  sub_100477D08(*(char **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_10048A7F8()
{
  sub_10018709C((void *)(v0 + 40));
  return swift_deallocObject(v0, 80LL);
}

uint64_t sub_10048A82C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = (void *)swift_task_alloc(dword_100656C84);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_100478310(a1, v4, v5, v6, v1 + 5);
}

uint64_t sub_10048A8AC()
{
  sub_10018709C((void *)(v0 + 56));
  return swift_deallocObject(v0, 96LL);
}

uint64_t sub_10048A8E0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(_BYTE *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  unint64_t v9 = (void *)swift_task_alloc(dword_100656C9C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  *unint64_t v9 = v2;
  v9[1] = sub_100195708;
  return sub_100478C38(a1, v4, v5, v6, v7, v8, v1 + 56);
}

uint64_t sub_10048A970(void *a1)
{
  return sub_100488740(a1) & 1;
}

void sub_10048AA0C(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 absoluteString]);
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Cannot share URL %@ for a process without read permissions",  (uint8_t *)&v4,  0xCu);
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _[a1 CGColor];
}

id objc_msgSend_CGImageWithCacheKey_contactIDs_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGImageWithCacheKey:contactIDs:type:");
}

id objc_msgSend_CGImgDataForActionPlatterWithTitle_tintColor_replyHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGImgDataForActionPlatterWithTitle:tintColor:replyHandler:");
}

id objc_msgSend_CGImgDataForActivityMoreListEntryForActivityTitle_labelColor_activityCategory_replyHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:activityCategory:replyHandler:");
}

id objc_msgSend_CGImgDataForActivityMoreListEntryForActivityTitle_labelColor_processOppositeColor_activityCategory_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:processOppositeColor:activityCategory:");
}

id objc_msgSend_CGImgDataForNameLabelWithString_textColor_maxNumberOfLines_isAirDrop_ignoreNameWrapping_replyHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "CGImgDataForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:replyHandler:");
}

id objc_msgSend_CGImgDataForNearbyBadgeWithCount_replyHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGImgDataForNearbyBadgeWithCount:replyHandler:");
}

id objc_msgSend_CGImgDataForUIActivityTitles_foregroundColor_replyHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGImgDataForUIActivityTitles:foregroundColor:replyHandler:");
}

id objc_msgSend_CGImgForNameLabelWithString_textColor_maxNumberOfLines_isAirDrop_ignoreNameWrapping_processOppositeColor_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "CGImgForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:processOppositeColor:");
}

id objc_msgSend_CGImgForUIActivityTitles_foregroundColor_processOppositeColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGImgForUIActivityTitles:foregroundColor:processOppositeColor:");
}

id objc_msgSend_GeneralContactKeysToFetch(void *a1, const char *a2, ...)
{
  return _[a1 GeneralContactKeysToFetch];
}

id objc_msgSend_IDMSEnvironment(void *a1, const char *a2, ...)
{
  return _[a1 IDMSEnvironment];
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_MD5HashOfStrings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "MD5HashOfStrings:");
}

id objc_msgSend_MIMEType(void *a1, const char *a2, ...)
{
  return _[a1 MIMEType];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:isDirectory:");
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingLastPathComponent];
}

id objc_msgSend_URLByResolvingSymlinksInPath(void *a1, const char *a2, ...)
{
  return _[a1 URLByResolvingSymlinksInPath];
}

id objc_msgSend_URLForDirectory_inDomain_appropriateForURL_create_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForDirectory:inDomain:appropriateForURL:create:error:");
}

id objc_msgSend_URLForRemounting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForRemounting:");
}

id objc_msgSend_URLFromFileInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLFromFileInfo:");
}

id objc_msgSend_URLOverrideForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLOverrideForURL:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_URLWithString_relativeToURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:relativeToURL:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__CFURLRequest(void *a1, const char *a2, ...)
{
  return _[a1 _CFURLRequest];
}

id objc_msgSend__CFURLResponse(void *a1, const char *a2, ...)
{
  return _[a1 _CFURLResponse];
}

id objc_msgSend__LSFailedToOpenURL_withBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_LSFailedToOpenURL:withBundle:");
}

id objc_msgSend___handleAWDLDisabledIfNeededForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__handleAWDLDisabledIfNeededForRequest:");
}

id objc_msgSend__accountForAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accountForAppleID:");
}

id objc_msgSend__accountState(void *a1, const char *a2, ...)
{
  return _[a1 _accountState];
}

id objc_msgSend__activate(void *a1, const char *a2, ...)
{
  return _[a1 _activate];
}

id objc_msgSend__activateUIDelayTimer(void *a1, const char *a2, ...)
{
  return _[a1 _activateUIDelayTimer];
}

id objc_msgSend__activityMonitorCurrentLevelAndNeedsPoll_recentUserActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activityMonitorCurrentLevelAndNeedsPoll:recentUserActivity:");
}

id objc_msgSend__activityMonitorEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _activityMonitorEnsureStarted];
}

id objc_msgSend__activityMonitorEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _activityMonitorEnsureStopped];
}

id objc_msgSend__activityMonitorLastUserEventDelta(void *a1, const char *a2, ...)
{
  return _[a1 _activityMonitorLastUserEventDelta];
}

id objc_msgSend__activityMonitorUpdateUserActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activityMonitorUpdateUserActive:");
}

id objc_msgSend__addAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAppleID:");
}

id objc_msgSend__addObservers(void *a1, const char *a2, ...)
{
  return _[a1 _addObservers];
}

id objc_msgSend__addPersonInfoToCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPersonInfoToCache:");
}

id objc_msgSend__addRequestWithID_content_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addRequestWithID:content:type:");
}

id objc_msgSend__agentClientTokenForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_agentClientTokenForClient:");
}

id objc_msgSend__allowEnhancedDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 _allowEnhancedDiscovery];
}

id objc_msgSend__bleActionDeviceChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleActionDeviceChanged:");
}

id objc_msgSend__bleActionDeviceFoundCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleActionDeviceFoundCandidate:");
}

id objc_msgSend__bleActionDiscoveryEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _bleActionDiscoveryEnsureStarted];
}

id objc_msgSend__bleActionDiscoveryEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _bleActionDiscoveryEnsureStopped];
}

id objc_msgSend__bleActionDiscoveryShouldStart(void *a1, const char *a2, ...)
{
  return _[a1 _bleActionDiscoveryShouldStart];
}

id objc_msgSend__bleActionScanTimerActivate(void *a1, const char *a2, ...)
{
  return _[a1 _bleActionScanTimerActivate];
}

id objc_msgSend__bleActionScanTimerInvalidate(void *a1, const char *a2, ...)
{
  return _[a1 _bleActionScanTimerInvalidate];
}

id objc_msgSend__bleDeviceNearbyEnter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleDeviceNearbyEnter:");
}

id objc_msgSend__bleDeviceNearbyExit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleDeviceNearbyExit:");
}

id objc_msgSend__bleEncryptActivityLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleEncryptActivityLevel:");
}

id objc_msgSend__bleInfoDiscoveryEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _bleInfoDiscoveryEnsureStarted];
}

id objc_msgSend__bleInfoDiscoveryEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _bleInfoDiscoveryEnsureStopped];
}

id objc_msgSend__bleInfoDiscoveryShouldStart(void *a1, const char *a2, ...)
{
  return _[a1 _bleInfoDiscoveryShouldStart];
}

id objc_msgSend__bleNearbyActionAdvertiserEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyActionAdvertiserEnsureStarted];
}

id objc_msgSend__bleNearbyActionAdvertiserEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyActionAdvertiserEnsureStopped];
}

id objc_msgSend__bleNearbyActionAdvertiserShouldAdvertise(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyActionAdvertiserShouldAdvertise];
}

id objc_msgSend__bleNearbyActionScannerEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyActionScannerEnsureStarted];
}

id objc_msgSend__bleNearbyActionScannerEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyActionScannerEnsureStopped];
}

id objc_msgSend__bleNearbyActionScannerShouldScan(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyActionScannerShouldScan];
}

id objc_msgSend__bleNearbyInfoAdvertiserEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoAdvertiserEnsureStarted];
}

id objc_msgSend__bleNearbyInfoAdvertiserEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoAdvertiserEnsureStopped];
}

id objc_msgSend__bleNearbyInfoAdvertiserLingerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoAdvertiserLingerIfNeeded];
}

id objc_msgSend__bleNearbyInfoAdvertiserLingerStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleNearbyInfoAdvertiserLingerStart:");
}

id objc_msgSend__bleNearbyInfoAdvertiserShouldAddField3(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoAdvertiserShouldAddField3];
}

id objc_msgSend__bleNearbyInfoAdvertiserShouldAdvertise(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoAdvertiserShouldAdvertise];
}

id objc_msgSend__bleNearbyInfoAdvertiserUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoAdvertiserUpdate];
}

id objc_msgSend__bleNearbyInfoAdvertiserUpdateAddAudioRoutingScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleNearbyInfoAdvertiserUpdateAddAudioRoutingScore:");
}

id objc_msgSend__bleNearbyInfoAdvertiserUpdateAddHotspotInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleNearbyInfoAdvertiserUpdateAddHotspotInfo:");
}

id objc_msgSend__bleNearbyInfoAdvertiserUpdateAdvertiseReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleNearbyInfoAdvertiserUpdateAdvertiseReason:");
}

id objc_msgSend__bleNearbyInfoReceivedData_cnx_peer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleNearbyInfoReceivedData:cnx:peer:");
}

id objc_msgSend__bleNearbyInfoReceivedFrameType_src_end_cnx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleNearbyInfoReceivedFrameType:src:end:cnx:");
}

id objc_msgSend__bleNearbyInfoScannerEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoScannerEnsureStarted];
}

id objc_msgSend__bleNearbyInfoScannerEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoScannerEnsureStopped];
}

id objc_msgSend__bleNearbyInfoScannerShouldScan(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoScannerShouldScan];
}

id objc_msgSend__bleProximityPairingScannerEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _bleProximityPairingScannerEnsureStarted];
}

id objc_msgSend__bleProximityPairingScannerEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _bleProximityPairingScannerEnsureStopped];
}

id objc_msgSend__bleProximityPairingScannerShouldScan(void *a1, const char *a2, ...)
{
  return _[a1 _bleProximityPairingScannerShouldScan];
}

id objc_msgSend__bleProximityUpdateDeviceCloseNearbyActionDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleProximityUpdateDeviceCloseNearbyActionDevice:");
}

id objc_msgSend__bleProximityUpdateNearbyActionDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleProximityUpdateNearbyActionDevice:");
}

id objc_msgSend__bleProximityUpdateNearbyInfoDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleProximityUpdateNearbyInfoDevice:");
}

id objc_msgSend__bleUpdateAuthTagIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _bleUpdateAuthTagIfNeeded];
}

id objc_msgSend__bleUpdateMappingAndNearby(void *a1, const char *a2, ...)
{
  return _[a1 _bleUpdateMappingAndNearby];
}

id objc_msgSend__bleUpdateMappingReset(void *a1, const char *a2, ...)
{
  return _[a1 _bleUpdateMappingReset];
}

id objc_msgSend__bleUpdateMappingWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleUpdateMappingWithDevice:");
}

id objc_msgSend__bleUpdateScanner_typeFlag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleUpdateScanner:typeFlag:");
}

id objc_msgSend__bleUpdateUseCases_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bleUpdateUseCases:");
}

id objc_msgSend__btPipeEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _btPipeEnsureStarted];
}

id objc_msgSend__btPipeEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _btPipeEnsureStopped];
}

id objc_msgSend__bulletinsEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _bulletinsEnsureStopped];
}

id objc_msgSend__cachedPersonInfoWithEmailOrPhone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachedPersonInfoWithEmailOrPhone:");
}

id objc_msgSend__callResponseHandlerWithInfo_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callResponseHandlerWithInfo:error:");
}

id objc_msgSend__callResponseHandlerWithInfo_errorInfo_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callResponseHandlerWithInfo:errorInfo:error:");
}

id objc_msgSend__canTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canTransition:");
}

id objc_msgSend__cancelCheckForEveryoneModeExpiry(void *a1, const char *a2, ...)
{
  return _[a1 _cancelCheckForEveryoneModeExpiry];
}

id objc_msgSend__cancelDonStateRetryTimers(void *a1, const char *a2, ...)
{
  return _[a1 _cancelDonStateRetryTimers];
}

id objc_msgSend__cancelWiFiRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelWiFiRequest:");
}

id objc_msgSend__checkConditionsForEnhancedDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 _checkConditionsForEnhancedDiscovery];
}

id objc_msgSend__checkEveryoneModeExpiry(void *a1, const char *a2, ...)
{
  return _[a1 _checkEveryoneModeExpiry];
}

id objc_msgSend__checkIfAppleIDCertificateChainIsValidForIdentity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkIfAppleIDCertificateChainIsValidForIdentity:completion:");
}

id objc_msgSend__cleanUpAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanUpAccount:");
}

id objc_msgSend__clearAccount(void *a1, const char *a2, ...)
{
  return _[a1 _clearAccount];
}

id objc_msgSend__clearLegacyPreferencesIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _clearLegacyPreferencesIfNeeded];
}

id objc_msgSend__clearPersonInfoCache(void *a1, const char *a2, ...)
{
  return _[a1 _clearPersonInfoCache];
}

id objc_msgSend__clientDeviceFound_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientDeviceFound:");
}

id objc_msgSend__clientDeviceLost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientDeviceLost:");
}

id objc_msgSend__clientEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _clientEnsureStopped];
}

id objc_msgSend__clientShouldStart(void *a1, const char *a2, ...)
{
  return _[a1 _clientShouldStart];
}

id objc_msgSend__clientUpdateCoalesceTimerForDevice_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientUpdateCoalesceTimerForDevice:identifier:");
}

id objc_msgSend__clinkEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _clinkEnsureStarted];
}

id objc_msgSend__clinkEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _clinkEnsureStopped];
}

id objc_msgSend__clinkHomePodHandleRequest_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clinkHomePodHandleRequest:responseHandler:");
}

id objc_msgSend__clinkShouldStart(void *a1, const char *a2, ...)
{
  return _[a1 _clinkShouldStart];
}

id objc_msgSend__combinedDeviceForUIID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_combinedDeviceForUIID:");
}

id objc_msgSend__combinedDeviceIsSuppressed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_combinedDeviceIsSuppressed:");
}

id objc_msgSend__combinedDevicePending(void *a1, const char *a2, ...)
{
  return _[a1 _combinedDevicePending];
}

id objc_msgSend__combinedDevicePrepareForCallTransferTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_combinedDevicePrepareForCallTransferTrigger:");
}

id objc_msgSend__commonCallCountChanged(void *a1, const char *a2, ...)
{
  return _[a1 _commonCallCountChanged];
}

id objc_msgSend__commonEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _commonEnsureStarted];
}

id objc_msgSend__commonEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _commonEnsureStopped];
}

id objc_msgSend__commonShouldAdvertiseChanged(void *a1, const char *a2, ...)
{
  return _[a1 _commonShouldAdvertiseChanged];
}

id objc_msgSend__connectionHasEntitlement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectionHasEntitlement:");
}

id objc_msgSend__copyIdentityForAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_copyIdentityForAppleID:");
}

id objc_msgSend__copyMyAppleIDCertificate(void *a1, const char *a2, ...)
{
  return _[a1 _copyMyAppleIDCertificate];
}

id objc_msgSend__copyMyAppleIDSecIdentity(void *a1, const char *a2, ...)
{
  return _[a1 _copyMyAppleIDSecIdentity];
}

id objc_msgSend__createBrowseAgent(void *a1, const char *a2, ...)
{
  return _[a1 _createBrowseAgent];
}

id objc_msgSend__createNISession(void *a1, const char *a2, ...)
{
  return _[a1 _createNISession];
}

id objc_msgSend__createOSTransactionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _createOSTransactionIfNeeded];
}

id objc_msgSend__crossPlatformUnifiedMeContactWithKeysToFetch_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_crossPlatformUnifiedMeContactWithKeysToFetch:error:");
}

id objc_msgSend__currentEveryoneModeExpiryInterval(void *a1, const char *a2, ...)
{
  return _[a1 _currentEveryoneModeExpiryInterval];
}

id objc_msgSend__deactivateUIDelayTimer(void *a1, const char *a2, ...)
{
  return _[a1 _deactivateUIDelayTimer];
}

id objc_msgSend__deliverDonnedEventToDevice_allowRetry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deliverDonnedEventToDevice:allowRetry:");
}

id objc_msgSend__detailedDescription(void *a1, const char *a2, ...)
{
  return _[a1 _detailedDescription];
}

id objc_msgSend__deviceCanTriggerEnhancedDiscovery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceCanTriggerEnhancedDiscovery:");
}

id objc_msgSend__deviceChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceChanged:");
}

id objc_msgSend__deviceDiscoveryBLEDeviceChanged_type_changes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceDiscoveryBLEDeviceChanged:type:changes:");
}

id objc_msgSend__deviceDiscoveryBLEDeviceFound_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceDiscoveryBLEDeviceFound:type:");
}

id objc_msgSend__deviceDiscoveryBLEDeviceLost_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceDiscoveryBLEDeviceLost:type:");
}

id objc_msgSend__deviceDiscoveryFastScanEvaluate_device_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceDiscoveryFastScanEvaluate:device:");
}

id objc_msgSend__deviceDiscoveryFastScanStart_device_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceDiscoveryFastScanStart:device:reason:");
}

id objc_msgSend__deviceDiscoveryFastScanStop_reset_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceDiscoveryFastScanStop:reset:reason:");
}

id objc_msgSend__deviceFound_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceFound:");
}

id objc_msgSend__deviceHandlesDovePeaceSetup(void *a1, const char *a2, ...)
{
  return _[a1 _deviceHandlesDovePeaceSetup];
}

id objc_msgSend__deviceStoppedRequesting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceStoppedRequesting:");
}

id objc_msgSend__deviceToPreset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceToPreset:");
}

id objc_msgSend__disableAppSSO(void *a1, const char *a2, ...)
{
  return _[a1 _disableAppSSO];
}

id objc_msgSend__disableEnhancedDiscovery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_disableEnhancedDiscovery:");
}

id objc_msgSend__disableRangeableNI(void *a1, const char *a2, ...)
{
  return _[a1 _disableRangeableNI];
}

id objc_msgSend__discoveryEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _discoveryEnsureStarted];
}

id objc_msgSend__discoveryEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _discoveryEnsureStopped];
}

id objc_msgSend__discoverySessionStateChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_discoverySessionStateChange:");
}

id objc_msgSend__enableEnhancedDiscovery_useCase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enableEnhancedDiscovery:useCase:");
}

id objc_msgSend__enableRangeableIfNeededNI(void *a1, const char *a2, ...)
{
  return _[a1 _enableRangeableIfNeededNI];
}

id objc_msgSend__enhancedDiscoveryScreenChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enhancedDiscoveryScreenChange:");
}

id objc_msgSend__ensureClientStarted(void *a1, const char *a2, ...)
{
  return _[a1 _ensureClientStarted];
}

id objc_msgSend__ensureClientStopped(void *a1, const char *a2, ...)
{
  return _[a1 _ensureClientStopped];
}

id objc_msgSend__ensureKeychainCleaned_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ensureKeychainCleaned:");
}

id objc_msgSend__ensurePeriodicVerifyTimerStarted(void *a1, const char *a2, ...)
{
  return _[a1 _ensurePeriodicVerifyTimerStarted];
}

id objc_msgSend__ensurePeriodicVerifyTimerStopped(void *a1, const char *a2, ...)
{
  return _[a1 _ensurePeriodicVerifyTimerStopped];
}

id objc_msgSend__ensurePushStarted(void *a1, const char *a2, ...)
{
  return _[a1 _ensurePushStarted];
}

id objc_msgSend__ensurePushStopped(void *a1, const char *a2, ...)
{
  return _[a1 _ensurePushStopped];
}

id objc_msgSend__ensureServerStarted(void *a1, const char *a2, ...)
{
  return _[a1 _ensureServerStarted];
}

id objc_msgSend__ensureServerStopped(void *a1, const char *a2, ...)
{
  return _[a1 _ensureServerStopped];
}

id objc_msgSend__ensureThrottledRetryTimerStartedWithSuggestedDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ensureThrottledRetryTimerStartedWithSuggestedDelay:");
}

id objc_msgSend__ensureThrottledRetryTimerStopped(void *a1, const char *a2, ...)
{
  return _[a1 _ensureThrottledRetryTimerStopped];
}

id objc_msgSend__entitled_state_label_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_entitled:state:label:");
}

id objc_msgSend__entitledService_state_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_entitledService:state:");
}

id objc_msgSend__enumerateRemoteObjectProxiesUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateRemoteObjectProxiesUsingBlock:");
}

id objc_msgSend__everyoneModeExpiryDate(void *a1, const char *a2, ...)
{
  return _[a1 _everyoneModeExpiryDate];
}

id objc_msgSend__everyoneModeExpiryInterval(void *a1, const char *a2, ...)
{
  return _[a1 _everyoneModeExpiryInterval];
}

id objc_msgSend__expireEveryoneModeAndOnlySetDefault_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_expireEveryoneModeAndOnlySetDefault:");
}

id objc_msgSend__fetchSymptomsReport(void *a1, const char *a2, ...)
{
  return _[a1 _fetchSymptomsReport];
}

id objc_msgSend__getInteractionsFromDBPerPeopleSuggestion_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getInteractionsFromDBPerPeopleSuggestion:completion:");
}

id objc_msgSend__handleAWDLTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 _handleAWDLTimerFired];
}

id objc_msgSend__handleAccountIdentifierValidationRecordMismatch(void *a1, const char *a2, ...)
{
  return _[a1 _handleAccountIdentifierValidationRecordMismatch];
}

id objc_msgSend__handleAppleIDChangedNotification(void *a1, const char *a2, ...)
{
  return _[a1 _handleAppleIDChangedNotification];
}

id objc_msgSend__handleAppleIDSignedInNotification(void *a1, const char *a2, ...)
{
  return _[a1 _handleAppleIDSignedInNotification];
}

id objc_msgSend__handleAppleIDSignedOutNotification(void *a1, const char *a2, ...)
{
  return _[a1 _handleAppleIDSignedOutNotification];
}

id objc_msgSend__handleCertificate_intermediateCertificate_withTrustResult_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCertificate:intermediateCertificate:withTrustResult:error:");
}

id objc_msgSend__handleCertificateCreateResponseError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCertificateCreateResponseError:");
}

id objc_msgSend__handleCertificateFetchResponseError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCertificateFetchResponseError:");
}

id objc_msgSend__handleCertificateStatusUpdate_forAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCertificateStatusUpdate:forAppleID:");
}

id objc_msgSend__handleFindPersonResponse_forRequest_emailOrPhone_withError_queue_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleFindPersonResponse:forRequest:emailOrPhone:withError:queue:completion:");
}

id objc_msgSend__handleGSTokenIsAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _handleGSTokenIsAvailable];
}

id objc_msgSend__handleInfoResponse_forAppleID_infoRequest_certificateSerialNumber_withError_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleInfoResponse:forAppleID:infoRequest:certificateSerialNumber:withError:completion:");
}

id objc_msgSend__handleKeyBagFirstUnlockNotification(void *a1, const char *a2, ...)
{
  return _[a1 _handleKeyBagFirstUnlockNotification];
}

id objc_msgSend__handleKeyPairAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _handleKeyPairAvailable];
}

id objc_msgSend__handleKeyVerificationFailure(void *a1, const char *a2, ...)
{
  return _[a1 _handleKeyVerificationFailure];
}

id objc_msgSend__handlePeriodicVerifyTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 _handlePeriodicVerifyTimerFired];
}

id objc_msgSend__handleReceivedCertificate(void *a1, const char *a2, ...)
{
  return _[a1 _handleReceivedCertificate];
}

id objc_msgSend__handleReceivedCertificateToken_privateKeyPersistentReference_forAppleID_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleReceivedCertificateToken:privateKeyPersistentReference:forAppleID:");
}

id objc_msgSend__handleReceivedIdentity_forAppleID_identityRequest_withError_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleReceivedIdentity:forAppleID:identityRequest:withError:completion:");
}

id objc_msgSend__handleServerError_withStatusCode_nextSuggestedAttemptDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleServerError:withStatusCode:nextSuggestedAttemptDelay:");
}

id objc_msgSend__handleServerTaskCompletionWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleServerTaskCompletionWithError:");
}

id objc_msgSend__handleThrottledRetryTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 _handleThrottledRetryTimerFired];
}

id objc_msgSend__handleUILockStatusChangedNotification(void *a1, const char *a2, ...)
{
  return _[a1 _handleUILockStatusChangedNotification];
}

id objc_msgSend__handleURLRequestIsAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _handleURLRequestIsAvailable];
}

id objc_msgSend__handleUntrustedAppleIDCertificateChainForIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUntrustedAppleIDCertificateChainForIdentity:");
}

id objc_msgSend__hapticsFireNotificationSuccess(void *a1, const char *a2, ...)
{
  return _[a1 _hapticsFireNotificationSuccess];
}

id objc_msgSend__helpersClientPairingSucceeded_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_helpersClientPairingSucceeded:completion:");
}

id objc_msgSend__homePodEnsureStarted_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_homePodEnsureStarted:completion:");
}

id objc_msgSend__homePodHandleResponse_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_homePodHandleResponse:completion:");
}

id objc_msgSend__identificationCheckFlagsAndACL(void *a1, const char *a2, ...)
{
  return _[a1 _identificationCheckFlagsAndACL];
}

id objc_msgSend__identificationDecryptActivityLevel_device_authTag_identity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identificationDecryptActivityLevel:device:authTag:identity:");
}

id objc_msgSend__identificationDecryptAudioRoutingScoreData_device_authTag_identity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identificationDecryptAudioRoutingScoreData:device:authTag:identity:");
}

id objc_msgSend__identificationDecryptHotspotData_device_authTag_identity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identificationDecryptHotspotData:device:authTag:identity:");
}

id objc_msgSend__identificationEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _identificationEnsureStarted];
}

id objc_msgSend__identificationEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _identificationEnsureStopped];
}

id objc_msgSend__identificationGetIdentities(void *a1, const char *a2, ...)
{
  return _[a1 _identificationGetIdentities];
}

id objc_msgSend__identificationHandleDeviceFound_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identificationHandleDeviceFound:flags:");
}

id objc_msgSend__identificationHandleDeviceLost_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identificationHandleDeviceLost:flags:");
}

id objc_msgSend__identificationHandleDiscoveryStop(void *a1, const char *a2, ...)
{
  return _[a1 _identificationHandleDiscoveryStop];
}

id objc_msgSend__identificationIdentifyDevice_sfDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identificationIdentifyDevice:sfDevice:");
}

id objc_msgSend__identificationReIdentify(void *a1, const char *a2, ...)
{
  return _[a1 _identificationReIdentify];
}

id objc_msgSend__identificationReIdentifySameAccountDevices_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identificationReIdentifySameAccountDevices:type:");
}

id objc_msgSend__identityForAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identityForAppleID:");
}

id objc_msgSend__idsAppleTVCount(void *a1, const char *a2, ...)
{
  return _[a1 _idsAppleTVCount];
}

id objc_msgSend__idsBluetoothDeviceIDsForAnnouncements(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForAnnouncements];
}

id objc_msgSend__idsBluetoothDeviceIDsForHomePods(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForHomePods];
}

id objc_msgSend__idsBluetoothDeviceIDsForLEPipe(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForLEPipe];
}

id objc_msgSend__idsBluetoothDeviceIDsForMe(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForMe];
}

id objc_msgSend__idsBluetoothDeviceIDsForOneness(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForOneness];
}

id objc_msgSend__idsBluetoothDeviceIDsForSMSRelay(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForSMSRelay];
}

id objc_msgSend__idsBluetoothDeviceIDsForSharing(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForSharing];
}

id objc_msgSend__idsBluetoothDeviceIDsForSharingLocked(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForSharingLocked];
}

id objc_msgSend__idsBluetoothDeviceIDsForiMessage(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForiMessage];
}

id objc_msgSend__idsContinuityDeviceCount(void *a1, const char *a2, ...)
{
  return _[a1 _idsContinuityDeviceCount];
}

id objc_msgSend__idsDeviceArrayLocked(void *a1, const char *a2, ...)
{
  return _[a1 _idsDeviceArrayLocked];
}

id objc_msgSend__idsEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _idsEnsureStarted];
}

id objc_msgSend__idsEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _idsEnsureStopped];
}

id objc_msgSend__idsHomePodCount(void *a1, const char *a2, ...)
{
  return _[a1 _idsHomePodCount];
}

id objc_msgSend__idsMeDeviceChanged(void *a1, const char *a2, ...)
{
  return _[a1 _idsMeDeviceChanged];
}

id objc_msgSend__idsShouldAdvertiseNearbyInfo(void *a1, const char *a2, ...)
{
  return _[a1 _idsShouldAdvertiseNearbyInfo];
}

id objc_msgSend__idsShouldEncryptActivityLevel(void *a1, const char *a2, ...)
{
  return _[a1 _idsShouldEncryptActivityLevel];
}

id objc_msgSend__idsVisionOS1Count(void *a1, const char *a2, ...)
{
  return _[a1 _idsVisionOS1Count];
}

id objc_msgSend__idsVisionOS2OrHigherCount(void *a1, const char *a2, ...)
{
  return _[a1 _idsVisionOS2OrHigherCount];
}

id objc_msgSend__idsWatchCount(void *a1, const char *a2, ...)
{
  return _[a1 _idsWatchCount];
}

id objc_msgSend__invalidate(void *a1, const char *a2, ...)
{
  return _[a1 _invalidate];
}

id objc_msgSend__invalidateAWDLTimer(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateAWDLTimer];
}

id objc_msgSend__invalidateAssertions(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateAssertions];
}

id objc_msgSend__invalidateCurrentRequest(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateCurrentRequest];
}

id objc_msgSend__invalidateWatchDiscoveryIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateWatchDiscoveryIfNeeded];
}

id objc_msgSend__invalidateWiFiRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invalidateWiFiRequest:");
}

id objc_msgSend__isEveryoneModeExpired(void *a1, const char *a2, ...)
{
  return _[a1 _isEveryoneModeExpired];
}

id objc_msgSend__isTaskInfoValid(void *a1, const char *a2, ...)
{
  return _[a1 _isTaskInfoValid];
}

id objc_msgSend__keychainCleanupTag(void *a1, const char *a2, ...)
{
  return _[a1 _keychainCleanupTag];
}

id objc_msgSend__launchAppWithMachServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_launchAppWithMachServiceName:");
}

id objc_msgSend__legacy_serverRespondInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_legacy_serverRespondInfo:");
}

id objc_msgSend__loadTransferStore(void *a1, const char *a2, ...)
{
  return _[a1 _loadTransferStore];
}

id objc_msgSend__localAddressAndPort(void *a1, const char *a2, ...)
{
  return _[a1 _localAddressAndPort];
}

id objc_msgSend__metaInfoValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metaInfoValueForKey:");
}

id objc_msgSend__motionEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _motionEnsureStarted];
}

id objc_msgSend__motionEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _motionEnsureStopped];
}

id objc_msgSend__motionShouldStart(void *a1, const char *a2, ...)
{
  return _[a1 _motionShouldStart];
}

id objc_msgSend__multipleUsersLoggedIn(void *a1, const char *a2, ...)
{
  return _[a1 _multipleUsersLoggedIn];
}

id objc_msgSend__myAppleID(void *a1, const char *a2, ...)
{
  return _[a1 _myAppleID];
}

id objc_msgSend__newDeviceOrRegion_region_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_newDeviceOrRegion:region:");
}

id objc_msgSend__newZeroingDataWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_newZeroingDataWithBytes:length:");
}

id objc_msgSend__notifyCameraConfigChange(void *a1, const char *a2, ...)
{
  return _[a1 _notifyCameraConfigChange];
}

id objc_msgSend__notifyRegionLost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyRegionLost:");
}

id objc_msgSend__parseCreateCertificateResponse_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseCreateCertificateResponse:error:");
}

id objc_msgSend__parseFetchCertificateResponse_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseFetchCertificateResponse:error:");
}

id objc_msgSend__parseFindPersonResponse_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseFindPersonResponse:error:");
}

id objc_msgSend__parseGetMyInfoResponse_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseGetMyInfoResponse:error:");
}

id objc_msgSend__parseServerResponse_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseServerResponse:error:");
}

id objc_msgSend__performKeyVerificationForIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performKeyVerificationForIdentity:");
}

id objc_msgSend__performKeychainCount(void *a1, const char *a2, ...)
{
  return _[a1 _performKeychainCount];
}

id objc_msgSend__performMigrations(void *a1, const char *a2, ...)
{
  return _[a1 _performMigrations];
}

id objc_msgSend__performOtherTaskWithInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performOtherTaskWithInfo:completion:");
}

id objc_msgSend__performServerTaskWithInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performServerTaskWithInfo:completion:");
}

id objc_msgSend__personInfoWithEmailOrPhone_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_personInfoWithEmailOrPhone:queue:completion:");
}

id objc_msgSend__pinPairHandleRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pinPairHandleRequest:");
}

id objc_msgSend__postDeviceSetupNotificationForDevice_present_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postDeviceSetupNotificationForDevice:present:");
}

id objc_msgSend__postNotificationWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postNotificationWithName:");
}

id objc_msgSend__prefsChanged(void *a1, const char *a2, ...)
{
  return _[a1 _prefsChanged];
}

id objc_msgSend__primaryAccountChanged(void *a1, const char *a2, ...)
{
  return _[a1 _primaryAccountChanged];
}

id objc_msgSend__processRequestQueue(void *a1, const char *a2, ...)
{
  return _[a1 _processRequestQueue];
}

id objc_msgSend__proxiedNotificationDidDismiss_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_proxiedNotificationDidDismiss:reason:");
}

id objc_msgSend__proximityChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_proximityChanged:");
}

id objc_msgSend__proximityClientDeviceDidUnTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_proximityClientDeviceDidUnTrigger:");
}

id objc_msgSend__proximityClientDeviceEnteredImmediate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_proximityClientDeviceEnteredImmediate:");
}

id objc_msgSend__proximityClientDeviceEnteredNearby_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_proximityClientDeviceEnteredNearby:");
}

id objc_msgSend__proximityClientDeviceExitedImmediate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_proximityClientDeviceExitedImmediate:");
}

id objc_msgSend__proximityClientDeviceExitedNearby_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_proximityClientDeviceExitedNearby:");
}

id objc_msgSend__proximityClientDeviceUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_proximityClientDeviceUpdated:");
}

id objc_msgSend__proximityClientDeviceWasDismissed_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_proximityClientDeviceWasDismissed:reason:");
}

id objc_msgSend__proximityClientDeviceWasSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_proximityClientDeviceWasSelected:");
}

id objc_msgSend__proximityClientDeviceWillTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_proximityClientDeviceWillTrigger:");
}

id objc_msgSend__proximityClientSeedInitialDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_proximityClientSeedInitialDevices:");
}

id objc_msgSend__proximityClientSeedWillTriggerDeviceIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_proximityClientSeedWillTriggerDeviceIfNeeded:");
}

id objc_msgSend__proximityEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _proximityEnsureStarted];
}

id objc_msgSend__proximityEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _proximityEnsureStopped];
}

id objc_msgSend__publish(void *a1, const char *a2, ...)
{
  return _[a1 _publish];
}

id objc_msgSend__readPrefs(void *a1, const char *a2, ...)
{
  return _[a1 _readPrefs];
}

id objc_msgSend__registerForWombatActivityNotification(void *a1, const char *a2, ...)
{
  return _[a1 _registerForWombatActivityNotification];
}

id objc_msgSend__remoteAddressAndPort(void *a1, const char *a2, ...)
{
  return _[a1 _remoteAddressAndPort];
}

id objc_msgSend__remoteObjectProxyForConnection_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteObjectProxyForConnection:usingBlock:");
}

id objc_msgSend__removeAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeAppleID:");
}

id objc_msgSend__removeDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeDevice:");
}

id objc_msgSend__removeObservers(void *a1, const char *a2, ...)
{
  return _[a1 _removeObservers];
}

id objc_msgSend__renewAccountIfNecessaryForCFUItems_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_renewAccountIfNecessaryForCFUItems:completion:");
}

id objc_msgSend__repairHandleCFUItemsChanged(void *a1, const char *a2, ...)
{
  return _[a1 _repairHandleCFUItemsChanged];
}

id objc_msgSend__repairHandleCNSStateChanged(void *a1, const char *a2, ...)
{
  return _[a1 _repairHandleCNSStateChanged];
}

id objc_msgSend__repairHandleCompletion(void *a1, const char *a2, ...)
{
  return _[a1 _repairHandleCompletion];
}

id objc_msgSend__repairProblemFlagsChanged(void *a1, const char *a2, ...)
{
  return _[a1 _repairProblemFlagsChanged];
}

id objc_msgSend__repairSilentStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_repairSilentStart:");
}

id objc_msgSend__repairUpdateIDSCache(void *a1, const char *a2, ...)
{
  return _[a1 _repairUpdateIDSCache];
}

id objc_msgSend__repairVPNError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_repairVPNError:");
}

id objc_msgSend__requestIdentityForAppleID_certificateToken_privateKeyPersistentReference_withCompletion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestIdentityForAppleID:certificateToken:privateKeyPersistentReference:withCompletion:");
}

id objc_msgSend__requestInfoForAppleID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestInfoForAppleID:completion:");
}

id objc_msgSend__resetAllStates(void *a1, const char *a2, ...)
{
  return _[a1 _resetAllStates];
}

id objc_msgSend__resetManagerState(void *a1, const char *a2, ...)
{
  return _[a1 _resetManagerState];
}

id objc_msgSend__resetTriggers(void *a1, const char *a2, ...)
{
  return _[a1 _resetTriggers];
}

id objc_msgSend__responseHandlerWithIdentity_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_responseHandlerWithIdentity:error:");
}

id objc_msgSend__restartAWDLTimer(void *a1, const char *a2, ...)
{
  return _[a1 _restartAWDLTimer];
}

id objc_msgSend__riServerEnsureStarted_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_riServerEnsureStarted:completion:");
}

id objc_msgSend__routeForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_routeForDevice:");
}

id objc_msgSend__routes(void *a1, const char *a2, ...)
{
  return _[a1 _routes];
}

id objc_msgSend__rpCompanionLinkDeviceForSFDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rpCompanionLinkDeviceForSFDevice:");
}

id objc_msgSend__rtiEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _rtiEnsureStarted];
}

id objc_msgSend__rtiEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _rtiEnsureStopped];
}

id objc_msgSend__rtiHandleInputDidBeginWithFlags_sessionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rtiHandleInputDidBeginWithFlags:sessionInfo:");
}

id objc_msgSend__run(void *a1, const char *a2, ...)
{
  return _[a1 _run];
}

id objc_msgSend__runCallHandoffStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_runCallHandoffStart:");
}

id objc_msgSend__runCallHandoffStartDelayTimer(void *a1, const char *a2, ...)
{
  return _[a1 _runCallHandoffStartDelayTimer];
}

id objc_msgSend__runSession(void *a1, const char *a2, ...)
{
  return _[a1 _runSession];
}

id objc_msgSend__runStateVerify_device_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_runStateVerify:device:");
}

id objc_msgSend__scheduleCheckForEveryoneModeExpiry(void *a1, const char *a2, ...)
{
  return _[a1 _scheduleCheckForEveryoneModeExpiry];
}

id objc_msgSend__scheduleCreateRetryWithDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleCreateRetryWithDelay:");
}

id objc_msgSend__scheduleFetchCertificateTaskWithDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleFetchCertificateTaskWithDelay:");
}

id objc_msgSend__scheduleFetchRetryWithDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleFetchRetryWithDelay:");
}

id objc_msgSend__scheduleRunAfter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleRunAfter:");
}

id objc_msgSend__screenLocked(void *a1, const char *a2, ...)
{
  return _[a1 _screenLocked];
}

id objc_msgSend__sendCreateCertificateRequest(void *a1, const char *a2, ...)
{
  return _[a1 _sendCreateCertificateRequest];
}

id objc_msgSend__sendFetchCertificateRequest(void *a1, const char *a2, ...)
{
  return _[a1 _sendFetchCertificateRequest];
}

id objc_msgSend__sendMessage_frameType_service_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessage:frameType:service:session:");
}

id objc_msgSend__sendRTIPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendRTIPayload:");
}

id objc_msgSend__sendRequest(void *a1, const char *a2, ...)
{
  return _[a1 _sendRequest];
}

id objc_msgSend__serverEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _serverEnsureStarted];
}

id objc_msgSend__serverEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _serverEnsureStopped];
}

id objc_msgSend__serverSendTextSessionDidBegin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_serverSendTextSessionDidBegin:");
}

id objc_msgSend__serverSendTextSessionDidEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_serverSendTextSessionDidEnd:");
}

id objc_msgSend__serviceEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _serviceEnsureStarted];
}

id objc_msgSend__serviceEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _serviceEnsureStopped];
}

id objc_msgSend__serviceShouldRequestAutoFill(void *a1, const char *a2, ...)
{
  return _[a1 _serviceShouldRequestAutoFill];
}

id objc_msgSend__serviceShouldStart(void *a1, const char *a2, ...)
{
  return _[a1 _serviceShouldStart];
}

id objc_msgSend__serviceStartRequestingAutoFillIfReady(void *a1, const char *a2, ...)
{
  return _[a1 _serviceStartRequestingAutoFillIfReady];
}

id objc_msgSend__serviceStopRequestingAutoFill(void *a1, const char *a2, ...)
{
  return _[a1 _serviceStopRequestingAutoFill];
}

id objc_msgSend__serviceTimeoutInvalidate(void *a1, const char *a2, ...)
{
  return _[a1 _serviceTimeoutInvalidate];
}

id objc_msgSend__serviceTimeoutStop(void *a1, const char *a2, ...)
{
  return _[a1 _serviceTimeoutStop];
}

id objc_msgSend__sessionHandlePairingSucceededResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sessionHandlePairingSucceededResponse:");
}

id objc_msgSend__sessionStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sessionStart:");
}

id objc_msgSend__sessionStop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sessionStop:");
}

id objc_msgSend__setAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAccount:");
}

id objc_msgSend__setCertificateToken_privateKeyPersistentReference_forAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCertificateToken:privateKeyPersistentReference:forAppleID:");
}

id objc_msgSend__setContactInfo_validationRecord_forAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setContactInfo:validationRecord:forAppleID:");
}

id objc_msgSend__setCurrentAppleIDContactInfo_validationRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCurrentAppleIDContactInfo:validationRecord:");
}

id objc_msgSend__setCurrentAppleIDIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCurrentAppleIDIdentity:");
}

id objc_msgSend__setIdentity_forAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIdentity:forAppleID:");
}

id objc_msgSend__setIdentityLinkedToCurrentUser_forAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIdentityLinkedToCurrentUser:forAppleID:");
}

id objc_msgSend__setIncludesAWDL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIncludesAWDL:");
}

id objc_msgSend__setLastConnectionDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLastConnectionDate:");
}

id objc_msgSend__setLastSuccessfulConnectionDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLastSuccessfulConnectionDate:");
}

id objc_msgSend__setMetaInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setMetaInfo:");
}

id objc_msgSend__setMetaInfoValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setMetaInfoValue:forKey:");
}

id objc_msgSend__setPassword_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPassword:");
}

id objc_msgSend__setQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setQueue:");
}

id objc_msgSend__setupAssertHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _setupAssertHandlers];
}

id objc_msgSend__setupBrowseHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _setupBrowseHandlers];
}

id objc_msgSend__setupHandleCreateSession_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupHandleCreateSession:data:");
}

id objc_msgSend__setupHandleSessionCreated_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupHandleSessionCreated:data:");
}

id objc_msgSend__setupHandleSessionEncryptedFrame_type_cnx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupHandleSessionEncryptedFrame:type:cnx:");
}

id objc_msgSend__setupHandleSessionMessageType_src_end_cnx_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupHandleSessionMessageType:src:end:cnx:session:");
}

id objc_msgSend__setupPolicy(void *a1, const char *a2, ...)
{
  return _[a1 _setupPolicy];
}

id objc_msgSend__setupSendCreateSession_cnx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupSendCreateSession:cnx:");
}

id objc_msgSend__setupSendData_sessionIdentifier_cnx_clientSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupSendData:sessionIdentifier:cnx:clientSession:");
}

id objc_msgSend__shouldDeliverDonStateUpdates(void *a1, const char *a2, ...)
{
  return _[a1 _shouldDeliverDonStateUpdates];
}

id objc_msgSend__shouldMediumPromptWithInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldMediumPromptWithInfo:");
}

id objc_msgSend__shouldOfferPassword_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldOfferPassword:");
}

id objc_msgSend__siriRemoteMonitorEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _siriRemoteMonitorEnsureStarted];
}

id objc_msgSend__siriRemoteMonitorEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _siriRemoteMonitorEnsureStopped];
}

id objc_msgSend__start(void *a1, const char *a2, ...)
{
  return _[a1 _start];
}

id objc_msgSend__startAWDLWithInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startAWDLWithInfo:");
}

id objc_msgSend__startClockWithResetIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _startClockWithResetIfNeeded];
}

id objc_msgSend__stateDumpString(void *a1, const char *a2, ...)
{
  return _[a1 _stateDumpString];
}

id objc_msgSend__statusInfo(void *a1, const char *a2, ...)
{
  return _[a1 _statusInfo];
}

id objc_msgSend__stop(void *a1, const char *a2, ...)
{
  return _[a1 _stop];
}

id objc_msgSend__stopAWDL(void *a1, const char *a2, ...)
{
  return _[a1 _stopAWDL];
}

id objc_msgSend__stopClock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopClock:");
}

id objc_msgSend__systemCanTrigger(void *a1, const char *a2, ...)
{
  return _[a1 _systemCanTrigger];
}

id objc_msgSend__throttleEventDidOccur(void *a1, const char *a2, ...)
{
  return _[a1 _throttleEventDidOccur];
}

id objc_msgSend__throttleEventsReachedMax(void *a1, const char *a2, ...)
{
  return _[a1 _throttleEventsReachedMax];
}

id objc_msgSend__throttleMediumAllowsTrigger(void *a1, const char *a2, ...)
{
  return _[a1 _throttleMediumAllowsTrigger];
}

id objc_msgSend__throttleMediumSetTicks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_throttleMediumSetTicks:");
}

id objc_msgSend__triggerDeviceProximity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_triggerDeviceProximity:");
}

id objc_msgSend__tvHandleResponse_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tvHandleResponse:completion:");
}

id objc_msgSend__uiDismissWhenReady_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiDismissWhenReady:reason:");
}

id objc_msgSend__uiShowing(void *a1, const char *a2, ...)
{
  return _[a1 _uiShowing];
}

id objc_msgSend__uiStart_extraInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStart:extraInfo:");
}

id objc_msgSend__uiStartAppleTVSetup_extraInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartAppleTVSetup:extraInfo:");
}

id objc_msgSend__uiStartAuthenticateAccounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartAuthenticateAccounts:");
}

id objc_msgSend__uiStartHomeKitDeviceDetectedWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartHomeKitDeviceDetectedWithURL:");
}

id objc_msgSend__uiStartIfEnabled_extraInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartIfEnabled:extraInfo:");
}

id objc_msgSend__uiStartPair_extraInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartPair:extraInfo:");
}

id objc_msgSend__uiStartRepair_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartRepair:flags:");
}

id objc_msgSend__uiStartSetupB238_extraInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartSetupB238:extraInfo:");
}

id objc_msgSend__uiStartSetupDovePeace_autoStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartSetupDovePeace:autoStart:");
}

id objc_msgSend__uiStartSetupWHA_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartSetupWHA:");
}

id objc_msgSend__uiStartSetupWatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartSetupWatch:");
}

id objc_msgSend__uiStartSetupiOS_autoStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartSetupiOS:autoStart:");
}

id objc_msgSend__uiStartTVLatencyBanner_forActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartTVLatencyBanner:forActionType:");
}

id objc_msgSend__uiStartTVLatencySetup_extraInfo_forActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartTVLatencySetup:extraInfo:forActionType:");
}

id objc_msgSend__uiStartTVLatencySetup_forActionType_withBLEDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartTVLatencySetup:forActionType:withBLEDevice:");
}

id objc_msgSend__uiStartWiFiPasswordSharing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartWiFiPasswordSharing:");
}

id objc_msgSend__uiStartWithDevice_viewControllerName_label_unlessApps_extraInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartWithDevice:viewControllerName:label:unlessApps:extraInfo:");
}

id objc_msgSend__uiStartWithDevice_viewControllerName_xpcEndpoint_label_extraInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartWithDevice:viewControllerName:xpcEndpoint:label:extraInfo:");
}

id objc_msgSend__uiStartWithDevice_viewControllerName_xpcEndpoint_label_unlessApps_extraInfo_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStartWithDevice:viewControllerName:xpcEndpoint:label:unlessApps:extraInfo:");
}

id objc_msgSend__uiStop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStop:");
}

id objc_msgSend__uiStopIfNeeded_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStopIfNeeded:reason:");
}

id objc_msgSend__uiStopIfNeededWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiStopIfNeededWithDevice:");
}

id objc_msgSend__unlockDeviceFilterChangedForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unlockDeviceFilterChangedForRequest:");
}

id objc_msgSend__unlockReceivedFrameData_peer_device_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unlockReceivedFrameData:peer:device:");
}

id objc_msgSend__unpublish(void *a1, const char *a2, ...)
{
  return _[a1 _unpublish];
}

id objc_msgSend__unregisterForWombatActivityNotification(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterForWombatActivityNotification];
}

id objc_msgSend__update(void *a1, const char *a2, ...)
{
  return _[a1 _update];
}

id objc_msgSend__updateAccountInfoPrefs(void *a1, const char *a2, ...)
{
  return _[a1 _updateAccountInfoPrefs];
}

id objc_msgSend__updateAppleID(void *a1, const char *a2, ...)
{
  return _[a1 _updateAppleID];
}

id objc_msgSend__updateCandidateIsNearby(void *a1, const char *a2, ...)
{
  return _[a1 _updateCandidateIsNearby];
}

id objc_msgSend__updateDonState(void *a1, const char *a2, ...)
{
  return _[a1 _updateDonState];
}

id objc_msgSend__updateEveryoneModeExpiryDateOnChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateEveryoneModeExpiryDateOnChange:");
}

id objc_msgSend__updateMetaInfoPrefs(void *a1, const char *a2, ...)
{
  return _[a1 _updateMetaInfoPrefs];
}

id objc_msgSend__updateMyInfo(void *a1, const char *a2, ...)
{
  return _[a1 _updateMyInfo];
}

id objc_msgSend__updatePersonInfoCachePrefs(void *a1, const char *a2, ...)
{
  return _[a1 _updatePersonInfoCachePrefs];
}

id objc_msgSend__updateShareSheetHostConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _updateShareSheetHostConfiguration];
}

id objc_msgSend__updatedSessionInfoWithAppIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatedSessionInfoWithAppIcon:");
}

id objc_msgSend__urlRequestWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_urlRequestWithCompletion:");
}

id objc_msgSend__urlWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_urlWithCompletion:");
}

id objc_msgSend__useCasesToHexString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_useCasesToHexString:");
}

id objc_msgSend__useSymptomsReport(void *a1, const char *a2, ...)
{
  return _[a1 _useSymptomsReport];
}

id objc_msgSend__userDefaultsKeyForHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_userDefaultsKeyForHash:");
}

id objc_msgSend__verifyState(void *a1, const char *a2, ...)
{
  return _[a1 _verifyState];
}

id objc_msgSend__wasOldAgentIdentityQueried(void *a1, const char *a2, ...)
{
  return _[a1 _wasOldAgentIdentityQueried];
}

id objc_msgSend__watchEnsureStarted_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_watchEnsureStarted:completion:");
}

id objc_msgSend__watchFastScanStartIfAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_watchFastScanStartIfAllowed:");
}

id objc_msgSend__watchFastScanStop(void *a1, const char *a2, ...)
{
  return _[a1 _watchFastScanStop];
}

id objc_msgSend__watchFound_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_watchFound:");
}

id objc_msgSend__watchHandleResponse_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_watchHandleResponse:completion:");
}

id objc_msgSend__watchMigrating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_watchMigrating:");
}

id objc_msgSend__watchStartMigration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_watchStartMigration:");
}

id objc_msgSend__xpcConnection(void *a1, const char *a2, ...)
{
  return _[a1 _xpcConnection];
}

id objc_msgSend_aa_altDSID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_altDSID");
}

id objc_msgSend_aa_isManagedAppleID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_isManagedAppleID");
}

id objc_msgSend_aa_primaryAppleAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_primaryAppleAccount");
}

id objc_msgSend_aa_primaryEmail(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_primaryEmail");
}

id objc_msgSend_aa_updatePropertiesForAppleAccount_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_updatePropertiesForAppleAccount:completion:");
}

id objc_msgSend_abbreviation(void *a1, const char *a2, ...)
{
  return _[a1 abbreviation];
}

id objc_msgSend_abortDevicePairingWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "abortDevicePairingWithReason:");
}

id objc_msgSend_abortPairingWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "abortPairingWithReason:");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_absoluteURL(void *a1, const char *a2, ...)
{
  return _[a1 absoluteURL];
}

id objc_msgSend_absoluteURLIfTopLevelFile_isDirectory_base_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "absoluteURLIfTopLevelFile:isDirectory:base:");
}

id objc_msgSend_accept(void *a1, const char *a2, ...)
{
  return _[a1 accept];
}

id objc_msgSend_acceptActionTriggered(void *a1, const char *a2, ...)
{
  return _[a1 acceptActionTriggered];
}

id objc_msgSend_account(void *a1, const char *a2, ...)
{
  return _[a1 account];
}

id objc_msgSend_accountForAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountForAppleID:");
}

id objc_msgSend_accountID(void *a1, const char *a2, ...)
{
  return _[a1 accountID];
}

id objc_msgSend_accountIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 accountIdentifier];
}

id objc_msgSend_accountName(void *a1, const char *a2, ...)
{
  return _[a1 accountName];
}

id objc_msgSend_accountStatusForAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountStatusForAppleID:");
}

id objc_msgSend_accountStore(void *a1, const char *a2, ...)
{
  return _[a1 accountStore];
}

id objc_msgSend_accountType(void *a1, const char *a2, ...)
{
  return _[a1 accountType];
}

id objc_msgSend_accountTypeWithAccountTypeIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountTypeWithAccountTypeIdentifier:");
}

id objc_msgSend_accountWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountWithIdentifier:");
}

id objc_msgSend_accounts(void *a1, const char *a2, ...)
{
  return _[a1 accounts];
}

id objc_msgSend_accountsWithAccountType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountsWithAccountType:");
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return _[a1 action];
}

id objc_msgSend_actionForBundleProxy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionForBundleProxy:");
}

id objc_msgSend_actionHandler(void *a1, const char *a2, ...)
{
  return _[a1 actionHandler];
}

id objc_msgSend_actionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 actionIdentifier];
}

id objc_msgSend_actionSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionSelected:");
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return _[a1 activate];
}

id objc_msgSend_activate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activate:");
}

id objc_msgSend_activateAssertionWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateAssertionWithIdentifier:");
}

id objc_msgSend_activateCalled(void *a1, const char *a2, ...)
{
  return _[a1 activateCalled];
}

id objc_msgSend_activateDirect(void *a1, const char *a2, ...)
{
  return _[a1 activateDirect];
}

id objc_msgSend_activateSystemMonitor(void *a1, const char *a2, ...)
{
  return _[a1 activateSystemMonitor];
}

id objc_msgSend_activateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateWithCompletion:");
}

id objc_msgSend_activeAKSSessions(void *a1, const char *a2, ...)
{
  return _[a1 activeAKSSessions];
}

id objc_msgSend_activeAccount(void *a1, const char *a2, ...)
{
  return _[a1 activeAccount];
}

id objc_msgSend_activeCallCount(void *a1, const char *a2, ...)
{
  return _[a1 activeCallCount];
}

id objc_msgSend_activeConnection(void *a1, const char *a2, ...)
{
  return _[a1 activeConnection];
}

id objc_msgSend_activeConnections(void *a1, const char *a2, ...)
{
  return _[a1 activeConnections];
}

id objc_msgSend_activeDevice(void *a1, const char *a2, ...)
{
  return _[a1 activeDevice];
}

id objc_msgSend_activeDeviceDescription(void *a1, const char *a2, ...)
{
  return _[a1 activeDeviceDescription];
}

id objc_msgSend_activeDeviceName(void *a1, const char *a2, ...)
{
  return _[a1 activeDeviceName];
}

id objc_msgSend_activeDevices(void *a1, const char *a2, ...)
{
  return _[a1 activeDevices];
}

id objc_msgSend_activeDevicesMatch(void *a1, const char *a2, ...)
{
  return _[a1 activeDevicesMatch];
}

id objc_msgSend_activeIDSDevice(void *a1, const char *a2, ...)
{
  return _[a1 activeIDSDevice];
}

id objc_msgSend_activePairedDeviceSelectorBlock(void *a1, const char *a2, ...)
{
  return _[a1 activePairedDeviceSelectorBlock];
}

id objc_msgSend_activeTVAutoFillPrompts(void *a1, const char *a2, ...)
{
  return _[a1 activeTVAutoFillPrompts];
}

id objc_msgSend_activeUserAltDSID(void *a1, const char *a2, ...)
{
  return _[a1 activeUserAltDSID];
}

id objc_msgSend_activityIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 activityIdentifier];
}

id objc_msgSend_activityPayloadForAdvertisementPayload_command_requestedByDevice_withCompletionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityPayloadForAdvertisementPayload:command:requestedByDevice:withCompletionHandler:");
}

id objc_msgSend_activityPayloadReplySuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityPayloadReplySuccess:");
}

id objc_msgSend_activityService(void *a1, const char *a2, ...)
{
  return _[a1 activityService];
}

id objc_msgSend_activityServiceDevicesChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityServiceDevicesChanged:");
}

id objc_msgSend_activityServiceHasWatch(void *a1, const char *a2, ...)
{
  return _[a1 activityServiceHasWatch];
}

id objc_msgSend_activityStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityStateWithCompletion:");
}

id objc_msgSend_addAdditionalInformationToMeCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAdditionalInformationToMeCard:");
}

id objc_msgSend_addAirDropPerson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAirDropPerson:");
}

id objc_msgSend_addAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAppleID:");
}

id objc_msgSend_addBonjourChildrenFromCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBonjourChildrenFromCache:");
}

id objc_msgSend_addChild_withPendingUnitCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChild:withPendingUnitCount:");
}

id objc_msgSend_addClassroomChildrenFromCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addClassroomChildrenFromCache:");
}

id objc_msgSend_addClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addClient:");
}

id objc_msgSend_addClient_forIdentifer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addClient:forIdentifer:");
}

id objc_msgSend_addClientForNode_shouldPublishProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addClientForNode:shouldPublishProgress:");
}

id objc_msgSend_addConnectedChildrenFromCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConnectedChildrenFromCache:");
}

id objc_msgSend_addDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:");
}

id objc_msgSend_addDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:queue:");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addFakeRangingMeasurementIfAppropriateToNodesInCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFakeRangingMeasurementIfAppropriateToNodesInCache:");
}

id objc_msgSend_addFile_withBase_toBom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFile:withBase:toBom:");
}

id objc_msgSend_addFileURLToBom_file_base_propertyKeys_topLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFileURLToBom:file:base:propertyKeys:topLevel:");
}

id objc_msgSend_addHashesAndValidationRecordToRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHashesAndValidationRecordToRequest:");
}

id objc_msgSend_addManagedChildrenFromCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addManagedChildrenFromCache:");
}

id objc_msgSend_addNearbyDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addNearbyDelegate:");
}

id objc_msgSend_addNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addNode:");
}

id objc_msgSend_addNotificationRequest_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addNotificationRequest:withCompletionHandler:");
}

id objc_msgSend_addNotificationsObservers(void *a1, const char *a2, ...)
{
  return _[a1 addNotificationsObservers];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addObserver_forKeyPaths_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:forKeyPaths:options:context:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObservers(void *a1, const char *a2, ...)
{
  return _[a1 addObservers];
}

id objc_msgSend_addObserversForTests(void *a1, const char *a2, ...)
{
  return _[a1 addObserversForTests];
}

id objc_msgSend_addOpenWithActions(void *a1, const char *a2, ...)
{
  return _[a1 addOpenWithActions];
}

id objc_msgSend_addOperations_waitUntilFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperations:waitUntilFinished:");
}

id objc_msgSend_addOrUpdateIdentity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOrUpdateIdentity:completion:");
}

id objc_msgSend_addOrUpdateNodesForPerson_withChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOrUpdateNodesForPerson:withChanges:");
}

id objc_msgSend_addParentChain_file_base_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addParentChain:file:base:");
}

id objc_msgSend_addPermanentObserverForProperty_notifyInitial_invokeOnMainThread_handler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPermanentObserverForProperty:notifyInitial:invokeOnMainThread:handler:");
}

id objc_msgSend_addPersonInfoToCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPersonInfoToCache:");
}

id objc_msgSend_addPolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPolicy:");
}

id objc_msgSend_addPreventExitForLocaleReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPreventExitForLocaleReason:");
}

id objc_msgSend_addQueryToDictionary_name_type_domain_recordType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addQueryToDictionary:name:type:domain:recordType:");
}

id objc_msgSend_addRapportChildrenFromCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRapportChildrenFromCache:");
}

id objc_msgSend_addReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addReason:");
}

id objc_msgSend_addRemoteLTK_ltkHash_ltkModDate_modernLTK_modernLTKHash_modernLTKModeDate_deviceID_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRemoteLTK:ltkHash:ltkModDate:modernLTK:modernLTKHash:modernLTKModeDate:deviceID:");
}

id objc_msgSend_addService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addService:");
}

id objc_msgSend_addService_type_domain_interface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addService:type:domain:interface:");
}

id objc_msgSend_addServiceClientForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addServiceClientForIdentifier:");
}

id objc_msgSend_addStatusMonitorObservers(void *a1, const char *a2, ...)
{
  return _[a1 addStatusMonitorObservers];
}

id objc_msgSend_addTimer_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTimer:forMode:");
}

id objc_msgSend_addToRecents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addToRecents:");
}

id objc_msgSend_addWindowsChildrenFromCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addWindowsChildrenFromCache:");
}

id objc_msgSend_adjustPropertiesForAutoAcceptSenderIsMe_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustPropertiesForAutoAcceptSenderIsMe:");
}

id objc_msgSend_adjustPropertiesForPhotosBundles(void *a1, const char *a2, ...)
{
  return _[a1 adjustPropertiesForPhotosBundles];
}

id objc_msgSend_advertiseHashes(void *a1, const char *a2, ...)
{
  return _[a1 advertiseHashes];
}

id objc_msgSend_advertiseNonConnectable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "advertiseNonConnectable:");
}

id objc_msgSend_advertiseNonConnectableDebug_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "advertiseNonConnectableDebug:");
}

id objc_msgSend_advertiseRate(void *a1, const char *a2, ...)
{
  return _[a1 advertiseRate];
}

id objc_msgSend_advertisementFields(void *a1, const char *a2, ...)
{
  return _[a1 advertisementFields];
}

id objc_msgSend_advertisementPayload(void *a1, const char *a2, ...)
{
  return _[a1 advertisementPayload];
}

id objc_msgSend_advertisingTimerStart(void *a1, const char *a2, ...)
{
  return _[a1 advertisingTimerStart];
}

id objc_msgSend_agentClient(void *a1, const char *a2, ...)
{
  return _[a1 agentClient];
}

id objc_msgSend_aida_tokenForService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aida_tokenForService:");
}

id objc_msgSend_airDropClient_event_withResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airDropClient:event:withResults:");
}

id objc_msgSend_airDropConnection_event_withResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airDropConnection:event:withResults:");
}

id objc_msgSend_airDropController_didChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airDropController:didChange:");
}

id objc_msgSend_airDropInformation_didChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airDropInformation:didChange:");
}

id objc_msgSend_airDropNodes(void *a1, const char *a2, ...)
{
  return _[a1 airDropNodes];
}

id objc_msgSend_airDropNodesForDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airDropNodesForDomain:");
}

id objc_msgSend_airDropServer_event_withResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airDropServer:event:withResults:");
}

id objc_msgSend_airDropSession_event_withResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airDropSession:event:withResults:");
}

id objc_msgSend_airDropStatus_didChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airDropStatus:didChange:");
}

id objc_msgSend_airDropTransactionBegin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airDropTransactionBegin:");
}

id objc_msgSend_airDropTransactionEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airDropTransactionEnd:");
}

id objc_msgSend_airdropHash1(void *a1, const char *a2, ...)
{
  return _[a1 airdropHash1];
}

id objc_msgSend_airdropHash2(void *a1, const char *a2, ...)
{
  return _[a1 airdropHash2];
}

id objc_msgSend_airdropHash3(void *a1, const char *a2, ...)
{
  return _[a1 airdropHash3];
}

id objc_msgSend_airdropHash4(void *a1, const char *a2, ...)
{
  return _[a1 airdropHash4];
}

id objc_msgSend_airplaneModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 airplaneModeEnabled];
}

id objc_msgSend_aksAuthSessionForDeviceID_originator_usingEscrow_attestation_sessionType_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aksAuthSessionForDeviceID:originator:usingEscrow:attestation:sessionType:");
}

id objc_msgSend_aksAuthorizationSessionForDeviceID_attestation_originator_externalACMContext_sessionType_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aksAuthorizationSessionForDeviceID:attestation:originator:externalACMContext:sessionType:");
}

id objc_msgSend_aksPairingSessionForDeviceID_originator_errorCode_requiresAttestation_requiresEscrow_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aksPairingSessionForDeviceID:originator:errorCode:requiresAttestation:requiresEscrow:");
}

id objc_msgSend_aksPeerAvailable(void *a1, const char *a2, ...)
{
  return _[a1 aksPeerAvailable];
}

id objc_msgSend_aksRegistrationSessionForDeviceID_originator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aksRegistrationSessionForDeviceID:originator:");
}

id objc_msgSend_aksSession(void *a1, const char *a2, ...)
{
  return _[a1 aksSession];
}

id objc_msgSend_aksSessionID(void *a1, const char *a2, ...)
{
  return _[a1 aksSessionID];
}

id objc_msgSend_aksSuccess(void *a1, const char *a2, ...)
{
  return _[a1 aksSuccess];
}

id objc_msgSend_alertManager(void *a1, const char *a2, ...)
{
  return _[a1 alertManager];
}

id objc_msgSend_alertManager_acceptingTransferWithRecordID_withDestinationURL_shouldExtractMediaFromPhotosBundlesForRecordID_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "alertManager:acceptingTransferWithRecordID:withDestinationURL:shouldExtractMediaFromPhotosBundlesForRecordID:");
}

id objc_msgSend_alertManager_cancelingTransferWithRecordID_withFailureReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertManager:cancelingTransferWithRecordID:withFailureReason:");
}

id objc_msgSend_alertMessageLocalizedKeyForTypeDicts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertMessageLocalizedKeyForTypeDicts:");
}

id objc_msgSend_alertMessageLocalizedKeyForTypeDicts_senderIsMe_isVerifiableIdentity_isModernProgress_transferState_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "alertMessageLocalizedKeyForTypeDicts:senderIsMe:isVerifiableIdentity:isModernProgress:transferState:");
}

id objc_msgSend_alertOfUnlock(void *a1, const char *a2, ...)
{
  return _[a1 alertOfUnlock];
}

id objc_msgSend_alerted(void *a1, const char *a2, ...)
{
  return _[a1 alerted];
}

id objc_msgSend_aliasesForAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aliasesForAccount:");
}

id objc_msgSend_allEnabled(void *a1, const char *a2, ...)
{
  return _[a1 allEnabled];
}

id objc_msgSend_allHTTPHeaderFields(void *a1, const char *a2, ...)
{
  return _[a1 allHTTPHeaderFields];
}

id objc_msgSend_allInterfaces(void *a1, const char *a2, ...)
{
  return _[a1 allInterfaces];
}

id objc_msgSend_allKeychainDevices(void *a1, const char *a2, ...)
{
  return _[a1 allKeychainDevices];
}

id objc_msgSend_allKeychainItems(void *a1, const char *a2, ...)
{
  return _[a1 allKeychainItems];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allPairedWatchDeviceIDs(void *a1, const char *a2, ...)
{
  return _[a1 allPairedWatchDeviceIDs];
}

id objc_msgSend_allPeerBTIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 allPeerBTIdentifiers];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_allowAskRequestFromPerson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowAskRequestFromPerson:");
}

id objc_msgSend_allowProgressCircleToComplete(void *a1, const char *a2, ...)
{
  return _[a1 allowProgressCircleToComplete];
}

id objc_msgSend_allowsKeyedCoding(void *a1, const char *a2, ...)
{
  return _[a1 allowsKeyedCoding];
}

id objc_msgSend_altDSID(void *a1, const char *a2, ...)
{
  return _[a1 altDSID];
}

id objc_msgSend_altDSIDForAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "altDSIDForAccount:");
}

id objc_msgSend_altDSIDNeedsFixing(void *a1, const char *a2, ...)
{
  return _[a1 altDSIDNeedsFixing];
}

id objc_msgSend_alwaysAutoAccept(void *a1, const char *a2, ...)
{
  return _[a1 alwaysAutoAccept];
}

id objc_msgSend_alwaysSendPayload(void *a1, const char *a2, ...)
{
  return _[a1 alwaysSendPayload];
}

id objc_msgSend_alwaysShowSetupRetry(void *a1, const char *a2, ...)
{
  return _[a1 alwaysShowSetupRetry];
}

id objc_msgSend_andPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "andPredicateWithSubpredicates:");
}

id objc_msgSend_anyLongTermKeyForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anyLongTermKeyForDeviceID:");
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_appLink(void *a1, const char *a2, ...)
{
  return _[a1 appLink];
}

id objc_msgSend_appLinksWithURL_limit_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appLinksWithURL:limit:error:");
}

id objc_msgSend_appName(void *a1, const char *a2, ...)
{
  return _[a1 appName];
}

id objc_msgSend_appState(void *a1, const char *a2, ...)
{
  return _[a1 appState];
}

id objc_msgSend_appendAllNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendAllNode:");
}

id objc_msgSend_appendBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendBytes:length:");
}

id objc_msgSend_appendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendData:");
}

id objc_msgSend_appendFileURL_withBase_toItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFileURL:withBase:toItems:");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_appleID(void *a1, const char *a2, ...)
{
  return _[a1 appleID];
}

id objc_msgSend_appleIDAccountState(void *a1, const char *a2, ...)
{
  return _[a1 appleIDAccountState];
}

id objc_msgSend_appleIDAccountWithAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appleIDAccountWithAltDSID:");
}

id objc_msgSend_appleIDAccountWithAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appleIDAccountWithAppleID:");
}

id objc_msgSend_applicationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 applicationIdentifier];
}

id objc_msgSend_applicationProxyForBundleProxy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationProxyForBundleProxy:");
}

id objc_msgSend_applicationProxyForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationProxyForIdentifier:");
}

id objc_msgSend_applicationsAvailableForOpeningURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationsAvailableForOpeningURL:");
}

id objc_msgSend_apply(void *a1, const char *a2, ...)
{
  return _[a1 apply];
}

id objc_msgSend_applySSLSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applySSLSettings:");
}

id objc_msgSend_approveBluetoothIDs(void *a1, const char *a2, ...)
{
  return _[a1 approveBluetoothIDs];
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayForKey:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_askBodyDataInFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "askBodyDataInFormat:");
}

id objc_msgSend_askEventForRecordID_withResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "askEventForRecordID:withResults:");
}

id objc_msgSend_askRequestClientBundleID(void *a1, const char *a2, ...)
{
  return _[a1 askRequestClientBundleID];
}

id objc_msgSend_askToAirdropEnabled(void *a1, const char *a2, ...)
{
  return _[a1 askToAirdropEnabled];
}

id objc_msgSend_assertionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 assertionIdentifier];
}

id objc_msgSend_assertionTimer(void *a1, const char *a2, ...)
{
  return _[a1 assertionTimer];
}

id objc_msgSend_attachmentFromURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachmentFromURL:");
}

id objc_msgSend_attachmentURL(void *a1, const char *a2, ...)
{
  return _[a1 attachmentURL];
}

id objc_msgSend_attachmentWithIdentifier_URL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachmentWithIdentifier:URL:options:error:");
}

id objc_msgSend_attemptActivatedHandler(void *a1, const char *a2, ...)
{
  return _[a1 attemptActivatedHandler];
}

id objc_msgSend_attemptAutoUnlockForSiri(void *a1, const char *a2, ...)
{
  return _[a1 attemptAutoUnlockForSiri];
}

id objc_msgSend_attemptAutoUnlockForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attemptAutoUnlockForType:");
}

id objc_msgSend_attemptAutoUnlockForType_externalACMContext_preventRadarNotification_bundlePath_appName_navBarTitle_reply_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "attemptAutoUnlockForType:externalACMContext:preventRadarNotification:bundlePath:appName:navBarTitle:reply:");
}

id objc_msgSend_attemptAutoUnlockWithoutNotifyingWatch(void *a1, const char *a2, ...)
{
  return _[a1 attemptAutoUnlockWithoutNotifyingWatch];
}

id objc_msgSend_attemptCount(void *a1, const char *a2, ...)
{
  return _[a1 attemptCount];
}

id objc_msgSend_attemptDevice(void *a1, const char *a2, ...)
{
  return _[a1 attemptDevice];
}

id objc_msgSend_attemptError(void *a1, const char *a2, ...)
{
  return _[a1 attemptError];
}

id objc_msgSend_attemptExternalACMContext(void *a1, const char *a2, ...)
{
  return _[a1 attemptExternalACMContext];
}

id objc_msgSend_attemptID(void *a1, const char *a2, ...)
{
  return _[a1 attemptID];
}

id objc_msgSend_attemptInProgress(void *a1, const char *a2, ...)
{
  return _[a1 attemptInProgress];
}

id objc_msgSend_attemptPrewarmed(void *a1, const char *a2, ...)
{
  return _[a1 attemptPrewarmed];
}

id objc_msgSend_attemptResults(void *a1, const char *a2, ...)
{
  return _[a1 attemptResults];
}

id objc_msgSend_attemptStart(void *a1, const char *a2, ...)
{
  return _[a1 attemptStart];
}

id objc_msgSend_attemptStartDate(void *a1, const char *a2, ...)
{
  return _[a1 attemptStartDate];
}

id objc_msgSend_attemptTime(void *a1, const char *a2, ...)
{
  return _[a1 attemptTime];
}

id objc_msgSend_attemptTimedOut(void *a1, const char *a2, ...)
{
  return _[a1 attemptTimedOut];
}

id objc_msgSend_attemptType(void *a1, const char *a2, ...)
{
  return _[a1 attemptType];
}

id objc_msgSend_attestedDictionaryForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attestedDictionaryForDevice:");
}

id objc_msgSend_auditToken(void *a1, const char *a2, ...)
{
  return _[a1 auditToken];
}

id objc_msgSend_authKitAccountWithAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authKitAccountWithAltDSID:");
}

id objc_msgSend_authPrompt(void *a1, const char *a2, ...)
{
  return _[a1 authPrompt];
}

id objc_msgSend_authPromptIconData(void *a1, const char *a2, ...)
{
  return _[a1 authPromptIconData];
}

id objc_msgSend_authPromptIconHash(void *a1, const char *a2, ...)
{
  return _[a1 authPromptIconHash];
}

id objc_msgSend_authPromptInfoWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authPromptInfoWithCompletionHandler:");
}

id objc_msgSend_authSessionError(void *a1, const char *a2, ...)
{
  return _[a1 authSessionError];
}

id objc_msgSend_authSessionWithFlags_secret_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authSessionWithFlags:secret:");
}

id objc_msgSend_authSessionWithFlags_secret_errorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authSessionWithFlags:secret:errorCode:");
}

id objc_msgSend_authTag(void *a1, const char *a2, ...)
{
  return _[a1 authTag];
}

id objc_msgSend_authTagForData_type_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authTagForData:type:error:");
}

id objc_msgSend_authTagOverride(void *a1, const char *a2, ...)
{
  return _[a1 authTagOverride];
}

id objc_msgSend_authToken(void *a1, const char *a2, ...)
{
  return _[a1 authToken];
}

id objc_msgSend_authenticateWithContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authenticateWithContext:completion:");
}

id objc_msgSend_authenticationMethod(void *a1, const char *a2, ...)
{
  return _[a1 authenticationMethod];
}

id objc_msgSend_authorizationStatus(void *a1, const char *a2, ...)
{
  return _[a1 authorizationStatus];
}

id objc_msgSend_autoFillDismissUserNotification(void *a1, const char *a2, ...)
{
  return _[a1 autoFillDismissUserNotification];
}

id objc_msgSend_autoFillPairingSucceeded_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoFillPairingSucceeded:completion:");
}

id objc_msgSend_autoFillPromptForPIN_throttleSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoFillPromptForPIN:throttleSeconds:");
}

id objc_msgSend_autoUnlockDevice(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockDevice];
}

id objc_msgSend_autoUnlockDeviceCache(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockDeviceCache];
}

id objc_msgSend_autoUnlockDeviceForBluetoothID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoUnlockDeviceForBluetoothID:");
}

id objc_msgSend_autoUnlockDeviceForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoUnlockDeviceForDeviceID:");
}

id objc_msgSend_autoUnlockDeviceForIDSDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoUnlockDeviceForIDSDevice:");
}

id objc_msgSend_autoUnlockDeviceForIDSDevice_cloudPaired_cached_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoUnlockDeviceForIDSDevice:cloudPaired:cached:");
}

id objc_msgSend_autoUnlockEligibleWatches(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockEligibleWatches];
}

id objc_msgSend_autoUnlockEligibleWatchesWithCloudPairing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoUnlockEligibleWatchesWithCloudPairing:");
}

id objc_msgSend_autoUnlockEnabled(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockEnabled];
}

id objc_msgSend_autoUnlockEnabledUpdatedAfterFirstUnlock(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockEnabledUpdatedAfterFirstUnlock];
}

id objc_msgSend_autoUnlockFolderPath(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockFolderPath];
}

id objc_msgSend_autoUnlockService(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockService];
}

id objc_msgSend_autoUnlockStateWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoUnlockStateWithCompletionHandler:");
}

id objc_msgSend_autoUnlockTransport(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockTransport];
}

id objc_msgSend_autoUnlockWatch(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockWatch];
}

id objc_msgSend_autoupdatingCurrentLocale(void *a1, const char *a2, ...)
{
  return _[a1 autoupdatingCurrentLocale];
}

id objc_msgSend_availableApplications(void *a1, const char *a2, ...)
{
  return _[a1 availableApplications];
}

id objc_msgSend_awdlDevice(void *a1, const char *a2, ...)
{
  return _[a1 awdlDevice];
}

id objc_msgSend_awdlInfo(void *a1, const char *a2, ...)
{
  return _[a1 awdlInfo];
}

id objc_msgSend_awdlInfoData(void *a1, const char *a2, ...)
{
  return _[a1 awdlInfoData];
}

id objc_msgSend_awdlInfoExchange(void *a1, const char *a2, ...)
{
  return _[a1 awdlInfoExchange];
}

id objc_msgSend_awdlInfoForPeerWithServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "awdlInfoForPeerWithServiceName:");
}

id objc_msgSend_awdlInterval(void *a1, const char *a2, ...)
{
  return _[a1 awdlInterval];
}

id objc_msgSend_awdlNetwork(void *a1, const char *a2, ...)
{
  return _[a1 awdlNetwork];
}

id objc_msgSend_awdlPeerList(void *a1, const char *a2, ...)
{
  return _[a1 awdlPeerList];
}

id objc_msgSend_awdlStart(void *a1, const char *a2, ...)
{
  return _[a1 awdlStart];
}

id objc_msgSend_awdlStartFailed(void *a1, const char *a2, ...)
{
  return _[a1 awdlStartFailed];
}

id objc_msgSend_awdlStartedHandler(void *a1, const char *a2, ...)
{
  return _[a1 awdlStartedHandler];
}

id objc_msgSend_awdlStarting(void *a1, const char *a2, ...)
{
  return _[a1 awdlStarting];
}

id objc_msgSend_awdlState(void *a1, const char *a2, ...)
{
  return _[a1 awdlState];
}

id objc_msgSend_awdlStateInfo(void *a1, const char *a2, ...)
{
  return _[a1 awdlStateInfo];
}

id objc_msgSend_awdlTimer(void *a1, const char *a2, ...)
{
  return _[a1 awdlTimer];
}

id objc_msgSend_awdlTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 awdlTimerFired];
}

id objc_msgSend_awdlTotal(void *a1, const char *a2, ...)
{
  return _[a1 awdlTotal];
}

id objc_msgSend_awdlUp(void *a1, const char *a2, ...)
{
  return _[a1 awdlUp];
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "base64EncodedStringWithOptions:");
}

id objc_msgSend_baseDict(void *a1, const char *a2, ...)
{
  return _[a1 baseDict];
}

id objc_msgSend_baseDictDecryptionKeyForDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baseDictDecryptionKeyForDeviceIdentifier:");
}

id objc_msgSend_baseDictEncryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 baseDictEncryptionKey];
}

id objc_msgSend_baseDictWrappingKey(void *a1, const char *a2, ...)
{
  return _[a1 baseDictWrappingKey];
}

id objc_msgSend_baseDictionary(void *a1, const char *a2, ...)
{
  return _[a1 baseDictionary];
}

id objc_msgSend_baseLocalKeysDictionary(void *a1, const char *a2, ...)
{
  return _[a1 baseLocalKeysDictionary];
}

id objc_msgSend_baseLocalKeysDictionaryForDevice_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baseLocalKeysDictionaryForDevice:type:");
}

id objc_msgSend_baseModernSyncedDictionary(void *a1, const char *a2, ...)
{
  return _[a1 baseModernSyncedDictionary];
}

id objc_msgSend_baseRangingDictionary(void *a1, const char *a2, ...)
{
  return _[a1 baseRangingDictionary];
}

id objc_msgSend_baseRangingDictionaryForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baseRangingDictionaryForDevice:");
}

id objc_msgSend_baseResultsDictionaryForError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baseResultsDictionaryForError:");
}

id objc_msgSend_baseSyncedDictionary(void *a1, const char *a2, ...)
{
  return _[a1 baseSyncedDictionary];
}

id objc_msgSend_beganAttemptWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beganAttemptWithDevice:");
}

id objc_msgSend_beginAKSSession(void *a1, const char *a2, ...)
{
  return _[a1 beginAKSSession];
}

id objc_msgSend_beginKeyRegistrationIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 beginKeyRegistrationIfNecessary];
}

id objc_msgSend_beginMigrationWithDevice_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginMigrationWithDevice:withCompletion:");
}

id objc_msgSend_beginUnlockIfNotOnLockScreen(void *a1, const char *a2, ...)
{
  return _[a1 beginUnlockIfNotOnLockScreen];
}

id objc_msgSend_behaviorChangedAfterUpgrade(void *a1, const char *a2, ...)
{
  return _[a1 behaviorChangedAfterUpgrade];
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _[a1 blackColor];
}

id objc_msgSend_bleAuthTag(void *a1, const char *a2, ...)
{
  return _[a1 bleAuthTag];
}

id objc_msgSend_bleChannel(void *a1, const char *a2, ...)
{
  return _[a1 bleChannel];
}

id objc_msgSend_bleDevice(void *a1, const char *a2, ...)
{
  return _[a1 bleDevice];
}

id objc_msgSend_bleNearbyInfoSendFrameType_serviceType_data_peer_isSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:");
}

id objc_msgSend_bleProximityEstimatorForActionType_device_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bleProximityEstimatorForActionType:device:");
}

id objc_msgSend_bleProximityEstimatorsResetDeviceClose(void *a1, const char *a2, ...)
{
  return _[a1 bleProximityEstimatorsResetDeviceClose];
}

id objc_msgSend_bleProximityInfo(void *a1, const char *a2, ...)
{
  return _[a1 bleProximityInfo];
}

id objc_msgSend_bleProximityInfoForActionType_device_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bleProximityInfoForActionType:device:");
}

id objc_msgSend_bleProximityInfoForType_device_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bleProximityInfoForType:device:");
}

id objc_msgSend_bleProximityInfoForType_device_allInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bleProximityInfoForType:device:allInfo:");
}

id objc_msgSend_bleProximityRSSIEstimatorInfo(void *a1, const char *a2, ...)
{
  return _[a1 bleProximityRSSIEstimatorInfo];
}

id objc_msgSend_bleProximityRSSIThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bleProximityRSSIThreshold:");
}

id objc_msgSend_bleRSSI(void *a1, const char *a2, ...)
{
  return _[a1 bleRSSI];
}

id objc_msgSend_bluetoothActivatedWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bluetoothActivatedWithError:");
}

id objc_msgSend_bluetoothAddress(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothAddress];
}

id objc_msgSend_bluetoothAddressData(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothAddressData];
}

id objc_msgSend_bluetoothDidSetPowerStateWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bluetoothDidSetPowerStateWithError:");
}

id objc_msgSend_bluetoothEnabled(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothEnabled];
}

id objc_msgSend_bluetoothEnabledIncludingRestricted(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothEnabledIncludingRestricted];
}

id objc_msgSend_bluetoothErrorCount(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothErrorCount];
}

id objc_msgSend_bluetoothID(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothID];
}

id objc_msgSend_bluetoothIDForIDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bluetoothIDForIDSID:");
}

id objc_msgSend_bluetoothMonitorInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothMonitorInvalidated];
}

id objc_msgSend_bluetoothState(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothState];
}

id objc_msgSend_bluetoothStateChanged(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothStateChanged];
}

id objc_msgSend_bluetoothStateChangedHandler(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothStateChangedHandler];
}

id objc_msgSend_body(void *a1, const char *a2, ...)
{
  return _[a1 body];
}

id objc_msgSend_bodyData(void *a1, const char *a2, ...)
{
  return _[a1 bodyData];
}

id objc_msgSend_bomCopierCopy_destination_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bomCopierCopy:destination:options:");
}

id objc_msgSend_bomCopierCopyFileFinished_type_size_operation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bomCopierCopyFileFinished:type:size:operation:");
}

id objc_msgSend_bomCopierFatalError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bomCopierFatalError:");
}

id objc_msgSend_bomCopierFatalFileError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bomCopierFatalFileError:");
}

id objc_msgSend_bonjourEnabled(void *a1, const char *a2, ...)
{
  return _[a1 bonjourEnabled];
}

id objc_msgSend_bonjourListenerUUID(void *a1, const char *a2, ...)
{
  return _[a1 bonjourListenerUUID];
}

id objc_msgSend_bonjourName(void *a1, const char *a2, ...)
{
  return _[a1 bonjourName];
}

id objc_msgSend_bonjourNodesDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bonjourNodesDidChange:");
}

id objc_msgSend_bonjourNodesForDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bonjourNodesForDomain:");
}

id objc_msgSend_bonjourPTRDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 bonjourPTRDiscovery];
}

id objc_msgSend_bonjourPublisher_propertiesDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bonjourPublisher:propertiesDidChange:");
}

id objc_msgSend_bonjourResolveComplete(void *a1, const char *a2, ...)
{
  return _[a1 bonjourResolveComplete];
}

id objc_msgSend_bonjourResolverDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bonjourResolverDidChange:");
}

id objc_msgSend_bonjourTXTRecordDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 bonjourTXTRecordDiscovery];
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_BOOLValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLValue:");
}

id objc_msgSend_BOOLValueSafe(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValueSafe];
}

id objc_msgSend_browseAgent(void *a1, const char *a2, ...)
{
  return _[a1 browseAgent];
}

id objc_msgSend_browseAllInterfaces(void *a1, const char *a2, ...)
{
  return _[a1 browseAllInterfaces];
}

id objc_msgSend_browseResponse(void *a1, const char *a2, ...)
{
  return _[a1 browseResponse];
}

id objc_msgSend_btAddr(void *a1, const char *a2, ...)
{
  return _[a1 btAddr];
}

id objc_msgSend_btAddressData(void *a1, const char *a2, ...)
{
  return _[a1 btAddressData];
}

id objc_msgSend_btBootstrap(void *a1, const char *a2, ...)
{
  return _[a1 btBootstrap];
}

id objc_msgSend_btOverall(void *a1, const char *a2, ...)
{
  return _[a1 btOverall];
}

id objc_msgSend_btleAdvertisementDataForStrings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "btleAdvertisementDataForStrings:");
}

id objc_msgSend_buildNodes(void *a1, const char *a2, ...)
{
  return _[a1 buildNodes];
}

id objc_msgSend_bumpEncryptionKeyCounterValue(void *a1, const char *a2, ...)
{
  return _[a1 bumpEncryptionKeyCounterValue];
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleID(void *a1, const char *a2, ...)
{
  return _[a1 bundleID];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundleProxy(void *a1, const char *a2, ...)
{
  return _[a1 bundleProxy];
}

id objc_msgSend_bundleProxyForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleProxyForIdentifier:");
}

id objc_msgSend_bundleProxyForiWorkURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleProxyForiWorkURL:");
}

id objc_msgSend_bypassLTKeyAbort(void *a1, const char *a2, ...)
{
  return _[a1 bypassLTKeyAbort];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_cacheCertificate_forRealName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheCertificate:forRealName:");
}

id objc_msgSend_cacheCount(void *a1, const char *a2, ...)
{
  return _[a1 cacheCount];
}

id objc_msgSend_cacheIconImageData_hash_appName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheIconImageData:hash:appName:");
}

id objc_msgSend_cacheIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheIdentity:");
}

id objc_msgSend_cacheLookupKey(void *a1, const char *a2, ...)
{
  return _[a1 cacheLookupKey];
}

id objc_msgSend_cachedApproveBluetoothIDs(void *a1, const char *a2, ...)
{
  return _[a1 cachedApproveBluetoothIDs];
}

id objc_msgSend_cachedBluetoothIDToUniqueIDs(void *a1, const char *a2, ...)
{
  return _[a1 cachedBluetoothIDToUniqueIDs];
}

id objc_msgSend_cachedDecryptionKeyForDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedDecryptionKeyForDeviceIdentifier:");
}

id objc_msgSend_cachedDeviceWiFiState(void *a1, const char *a2, ...)
{
  return _[a1 cachedDeviceWiFiState];
}

id objc_msgSend_cachedIDSDeviceIDsForBluetoothID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedIDSDeviceIDsForBluetoothID:");
}

id objc_msgSend_cachedMetrics(void *a1, const char *a2, ...)
{
  return _[a1 cachedMetrics];
}

id objc_msgSend_cachedPersonInfoWithEmailOrPhone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedPersonInfoWithEmailOrPhone:");
}

id objc_msgSend_cachedSessionKeys(void *a1, const char *a2, ...)
{
  return _[a1 cachedSessionKeys];
}

id objc_msgSend_cachedWatchWiFiState(void *a1, const char *a2, ...)
{
  return _[a1 cachedWatchWiFiState];
}

id objc_msgSend_calendarWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calendarWithIdentifier:");
}

id objc_msgSend_callStackSymbols(void *a1, const char *a2, ...)
{
  return _[a1 callStackSymbols];
}

id objc_msgSend_callTransferInfoForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callTransferInfoForDevice:");
}

id objc_msgSend_calledAWDLStarted(void *a1, const char *a2, ...)
{
  return _[a1 calledAWDLStarted];
}

id objc_msgSend_canAccessAirDropSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canAccessAirDropSettings:");
}

id objc_msgSend_canAutoAccept(void *a1, const char *a2, ...)
{
  return _[a1 canAutoAccept];
}

id objc_msgSend_canCreateTokenSessionForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canCreateTokenSessionForDeviceID:");
}

id objc_msgSend_canHandleTransfer(void *a1, const char *a2, ...)
{
  return _[a1 canHandleTransfer];
}

id objc_msgSend_canHandleTransferRegardlessOfBundleID(void *a1, const char *a2, ...)
{
  return _[a1 canHandleTransferRegardlessOfBundleID];
}

id objc_msgSend_canSuggestForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSuggestForDeviceID:");
}

id objc_msgSend_canTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canTransition:");
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancelAction(void *a1, const char *a2, ...)
{
  return _[a1 cancelAction];
}

id objc_msgSend_cancelActionTitleToAccompanyActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelActionTitleToAccompanyActions:");
}

id objc_msgSend_cancelAirDropRequests(void *a1, const char *a2, ...)
{
  return _[a1 cancelAirDropRequests];
}

id objc_msgSend_cancelAllLockSessionsForScanTimeout(void *a1, const char *a2, ...)
{
  return _[a1 cancelAllLockSessionsForScanTimeout];
}

id objc_msgSend_cancelAndDecline(void *a1, const char *a2, ...)
{
  return _[a1 cancelAndDecline];
}

id objc_msgSend_cancelAttemptsForDeviceUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 cancelAttemptsForDeviceUnlocked];
}

id objc_msgSend_cancelAutoUnlock(void *a1, const char *a2, ...)
{
  return _[a1 cancelAutoUnlock];
}

id objc_msgSend_cancelAutoUnlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelAutoUnlock:");
}

id objc_msgSend_cancelEnablingAllDevices(void *a1, const char *a2, ...)
{
  return _[a1 cancelEnablingAllDevices];
}

id objc_msgSend_cancelEnablingAutoUnlockForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelEnablingAutoUnlockForDevice:");
}

id objc_msgSend_cancelEnablingAutoUnlockForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelEnablingAutoUnlockForDeviceID:");
}

id objc_msgSend_cancelEventForRecordID_withResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelEventForRecordID:withResults:");
}

id objc_msgSend_cancelIdentityQueries(void *a1, const char *a2, ...)
{
  return _[a1 cancelIdentityQueries];
}

id objc_msgSend_cancelParallelRegistrationSessionsForDeviceID_newSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelParallelRegistrationSessionsForDeviceID:newSessionID:");
}

id objc_msgSend_cancelSendingClassroom(void *a1, const char *a2, ...)
{
  return _[a1 cancelSendingClassroom];
}

id objc_msgSend_cancelSendingItemsToPersonWithID_sessionID_clientBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelSendingItemsToPersonWithID:sessionID:clientBundleID:");
}

id objc_msgSend_cancelWiFiRequest(void *a1, const char *a2, ...)
{
  return _[a1 cancelWiFiRequest];
}

id objc_msgSend_cancelWiFiRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelWiFiRequest:");
}

id objc_msgSend_canceled(void *a1, const char *a2, ...)
{
  return _[a1 canceled];
}

id objc_msgSend_canceledAuthLockSessions(void *a1, const char *a2, ...)
{
  return _[a1 canceledAuthLockSessions];
}

id objc_msgSend_canceledPairingKeySessions(void *a1, const char *a2, ...)
{
  return _[a1 canceledPairingKeySessions];
}

id objc_msgSend_candidateIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 candidateIdentifiers];
}

id objc_msgSend_capitalizedString(void *a1, const char *a2, ...)
{
  return _[a1 capitalizedString];
}

id objc_msgSend_carplayConnected(void *a1, const char *a2, ...)
{
  return _[a1 carplayConnected];
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "caseInsensitiveCompare:");
}

id objc_msgSend_certificateExpirationDate(void *a1, const char *a2, ...)
{
  return _[a1 certificateExpirationDate];
}

id objc_msgSend_certificateExpired(void *a1, const char *a2, ...)
{
  return _[a1 certificateExpired];
}

id objc_msgSend_certificatePersistentReference(void *a1, const char *a2, ...)
{
  return _[a1 certificatePersistentReference];
}

id objc_msgSend_certificateToken(void *a1, const char *a2, ...)
{
  return _[a1 certificateToken];
}

id objc_msgSend_certificateTokenCreationDate(void *a1, const char *a2, ...)
{
  return _[a1 certificateTokenCreationDate];
}

id objc_msgSend_changeFlags(void *a1, const char *a2, ...)
{
  return _[a1 changeFlags];
}

id objc_msgSend_channel(void *a1, const char *a2, ...)
{
  return _[a1 channel];
}

id objc_msgSend_channelFlags(void *a1, const char *a2, ...)
{
  return _[a1 channelFlags];
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterAtIndex:");
}

id objc_msgSend_characterSetWithCharactersInString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterSetWithCharactersInString:");
}

id objc_msgSend_checkDevicePairingState(void *a1, const char *a2, ...)
{
  return _[a1 checkDevicePairingState];
}

id objc_msgSend_checkDeviceRegion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkDeviceRegion:");
}

id objc_msgSend_checkEntitlementWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkEntitlementWithHandler:");
}

id objc_msgSend_checkForBackupExclusion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkForBackupExclusion:");
}

id objc_msgSend_checkForEscrowData(void *a1, const char *a2, ...)
{
  return _[a1 checkForEscrowData];
}

id objc_msgSend_checkForLegacyEscrowData(void *a1, const char *a2, ...)
{
  return _[a1 checkForLegacyEscrowData];
}

id objc_msgSend_checkLocalAttestedLTK(void *a1, const char *a2, ...)
{
  return _[a1 checkLocalAttestedLTK];
}

id objc_msgSend_checkLocalLTK(void *a1, const char *a2, ...)
{
  return _[a1 checkLocalLTK];
}

id objc_msgSend_checkRemoteLTKForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkRemoteLTKForDeviceID:");
}

id objc_msgSend_checkRemoteLTKs(void *a1, const char *a2, ...)
{
  return _[a1 checkRemoteLTKs];
}

id objc_msgSend_checkResourceIsReachableAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkResourceIsReachableAndReturnError:");
}

id objc_msgSend_checkedCert(void *a1, const char *a2, ...)
{
  return _[a1 checkedCert];
}

id objc_msgSend_childrenForNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childrenForNode:");
}

id objc_msgSend_chosenDevice(void *a1, const char *a2, ...)
{
  return _[a1 chosenDevice];
}

id objc_msgSend_classroomDelegate(void *a1, const char *a2, ...)
{
  return _[a1 classroomDelegate];
}

id objc_msgSend_cleanUpConnections(void *a1, const char *a2, ...)
{
  return _[a1 cleanUpConnections];
}

id objc_msgSend_cleanUpProxySessions(void *a1, const char *a2, ...)
{
  return _[a1 cleanUpProxySessions];
}

id objc_msgSend_cleanUpTransfer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanUpTransfer:");
}

id objc_msgSend_cleanUpURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanUpURL:");
}

id objc_msgSend_cleanupAirDropRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupAirDropRequest:");
}

id objc_msgSend_cleanupRecordQuery_type_domain_recordType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupRecordQuery:type:domain:recordType:");
}

id objc_msgSend_cleanupRecordQueryForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupRecordQueryForKey:");
}

id objc_msgSend_cleanupRecordQueryForNetService_recordType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupRecordQueryForNetService:recordType:");
}

id objc_msgSend_clearAllDeviceIDsMissingSessionKeys(void *a1, const char *a2, ...)
{
  return _[a1 clearAllDeviceIDsMissingSessionKeys];
}

id objc_msgSend_clearAllKeysWithTokens(void *a1, const char *a2, ...)
{
  return _[a1 clearAllKeysWithTokens];
}

id objc_msgSend_clearAutoUnlockDeviceCache(void *a1, const char *a2, ...)
{
  return _[a1 clearAutoUnlockDeviceCache];
}

id objc_msgSend_clearCache(void *a1, const char *a2, ...)
{
  return _[a1 clearCache];
}

id objc_msgSend_clearCacheAndNotify(void *a1, const char *a2, ...)
{
  return _[a1 clearCacheAndNotify];
}

id objc_msgSend_clearCacheWithSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearCacheWithSync:");
}

id objc_msgSend_clearComputerName(void *a1, const char *a2, ...)
{
  return _[a1 clearComputerName];
}

id objc_msgSend_clearLocalHostName(void *a1, const char *a2, ...)
{
  return _[a1 clearLocalHostName];
}

id objc_msgSend_clearMyAppleIDInfo(void *a1, const char *a2, ...)
{
  return _[a1 clearMyAppleIDInfo];
}

id objc_msgSend_clearMyIconAndHash(void *a1, const char *a2, ...)
{
  return _[a1 clearMyIconAndHash];
}

id objc_msgSend_clearPersistedKeyRequests(void *a1, const char *a2, ...)
{
  return _[a1 clearPersistedKeyRequests];
}

id objc_msgSend_clearPersonInfoCache(void *a1, const char *a2, ...)
{
  return _[a1 clearPersonInfoCache];
}

id objc_msgSend_clearPhoneAutoUnlockNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearPhoneAutoUnlockNotification:");
}

id objc_msgSend_clearPhoneAutoUnlockUpsellNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearPhoneAutoUnlockUpsellNotification:");
}

id objc_msgSend_clearRemoteLTKs(void *a1, const char *a2, ...)
{
  return _[a1 clearRemoteLTKs];
}

id objc_msgSend_clearStateForSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearStateForSession:");
}

id objc_msgSend_clearWirelessState(void *a1, const char *a2, ...)
{
  return _[a1 clearWirelessState];
}

id objc_msgSend_client(void *a1, const char *a2, ...)
{
  return _[a1 client];
}

id objc_msgSend_clientAdvertisement(void *a1, const char *a2, ...)
{
  return _[a1 clientAdvertisement];
}

id objc_msgSend_clientBundleID(void *a1, const char *a2, ...)
{
  return _[a1 clientBundleID];
}

id objc_msgSend_clientDismissUserNotification(void *a1, const char *a2, ...)
{
  return _[a1 clientDismissUserNotification];
}

id objc_msgSend_clientInputStream(void *a1, const char *a2, ...)
{
  return _[a1 clientInputStream];
}

id objc_msgSend_clientMap(void *a1, const char *a2, ...)
{
  return _[a1 clientMap];
}

id objc_msgSend_clientNotificationPostIfNeededForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientNotificationPostIfNeededForDevice:");
}

id objc_msgSend_clientNotificationRemoveForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientNotificationRemoveForDevice:");
}

id objc_msgSend_clientNotificationUpdateForDevice_rtiData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientNotificationUpdateForDevice:rtiData:");
}

id objc_msgSend_clientOutputStream(void *a1, const char *a2, ...)
{
  return _[a1 clientOutputStream];
}

id objc_msgSend_clientPairingSucceeded_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientPairingSucceeded:completion:");
}

id objc_msgSend_clientPromptForPIN_throttleSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientPromptForPIN:throttleSeconds:");
}

id objc_msgSend_clientProvidedError(void *a1, const char *a2, ...)
{
  return _[a1 clientProvidedError];
}

id objc_msgSend_clientProxy(void *a1, const char *a2, ...)
{
  return _[a1 clientProxy];
}

id objc_msgSend_clientQueue(void *a1, const char *a2, ...)
{
  return _[a1 clientQueue];
}

id objc_msgSend_clientSession(void *a1, const char *a2, ...)
{
  return _[a1 clientSession];
}

id objc_msgSend_clientTokens(void *a1, const char *a2, ...)
{
  return _[a1 clientTokens];
}

id objc_msgSend_clientUserDidTapNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientUserDidTapNotification:");
}

id objc_msgSend_clinkDevice(void *a1, const char *a2, ...)
{
  return _[a1 clinkDevice];
}

id objc_msgSend_close(void *a1, const char *a2, ...)
{
  return _[a1 close];
}

id objc_msgSend_closeFile(void *a1, const char *a2, ...)
{
  return _[a1 closeFile];
}

id objc_msgSend_closeNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeNode:");
}

id objc_msgSend_closeProximityEstimatorMedium(void *a1, const char *a2, ...)
{
  return _[a1 closeProximityEstimatorMedium];
}

id objc_msgSend_closeProximityEstimatorSmall(void *a1, const char *a2, ...)
{
  return _[a1 closeProximityEstimatorSmall];
}

id objc_msgSend_closeStreamsForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeStreamsForIdentifier:");
}

id objc_msgSend_cloudPairRetryRecords(void *a1, const char *a2, ...)
{
  return _[a1 cloudPairRetryRecords];
}

id objc_msgSend_coalesceMe(void *a1, const char *a2, ...)
{
  return _[a1 coalesceMe];
}

id objc_msgSend_coalescedNodesForNewAvailableNodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coalescedNodesForNewAvailableNodes:");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_colorArrayFromEcolor_icolor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorArrayFromEcolor:icolor:");
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithRed:green:blue:alpha:");
}

id objc_msgSend_combineRecentAndConnectedNodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "combineRecentAndConnectedNodes:");
}

id objc_msgSend_combinedProblemFlags(void *a1, const char *a2, ...)
{
  return _[a1 combinedProblemFlags];
}

id objc_msgSend_commentChanged_comment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commentChanged:comment:");
}

id objc_msgSend_commonNameForCertificate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commonNameForCertificate:");
}

id objc_msgSend_companionCurrentlySyncing(void *a1, const char *a2, ...)
{
  return _[a1 companionCurrentlySyncing];
}

id objc_msgSend_companionDeviceModel(void *a1, const char *a2, ...)
{
  return _[a1 companionDeviceModel];
}

id objc_msgSend_companionIDForWatchID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "companionIDForWatchID:");
}

id objc_msgSend_companionIDStorageFilePath(void *a1, const char *a2, ...)
{
  return _[a1 companionIDStorageFilePath];
}

id objc_msgSend_companionNeedsUnlock(void *a1, const char *a2, ...)
{
  return _[a1 companionNeedsUnlock];
}

id objc_msgSend_companionStreamClosedStreams_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "companionStreamClosedStreams:");
}

id objc_msgSend_companionViewNotSyncing(void *a1, const char *a2, ...)
{
  return _[a1 companionViewNotSyncing];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_compare_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:options:");
}

id objc_msgSend_compareWithRPIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compareWithRPIdentity:");
}

id objc_msgSend_compatibilityState(void *a1, const char *a2, ...)
{
  return _[a1 compatibilityState];
}

id objc_msgSend_completeAttemptIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 completeAttemptIfNecessary];
}

id objc_msgSend_completeAttemptPostNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completeAttemptPostNotification:");
}

id objc_msgSend_completeAutoUnlockWithNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completeAutoUnlockWithNotification:");
}

id objc_msgSend_completeExchange(void *a1, const char *a2, ...)
{
  return _[a1 completeExchange];
}

id objc_msgSend_completeSuccessfulAttempt(void *a1, const char *a2, ...)
{
  return _[a1 completeSuccessfulAttempt];
}

id objc_msgSend_completedURLs(void *a1, const char *a2, ...)
{
  return _[a1 completedURLs];
}

id objc_msgSend_completedUnitCount(void *a1, const char *a2, ...)
{
  return _[a1 completedUnitCount];
}

id objc_msgSend_completedUnlockWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completedUnlockWithDevice:");
}

id objc_msgSend_completionHandler(void *a1, const char *a2, ...)
{
  return _[a1 completionHandler];
}

id objc_msgSend_completionHandlersByMessageIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 completionHandlersByMessageIdentifier];
}

id objc_msgSend_components_fromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "components:fromDate:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByCharactersInSet:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_compressionType(void *a1, const char *a2, ...)
{
  return _[a1 compressionType];
}

id objc_msgSend_computerName(void *a1, const char *a2, ...)
{
  return _[a1 computerName];
}

id objc_msgSend_computerToComputer(void *a1, const char *a2, ...)
{
  return _[a1 computerToComputer];
}

id objc_msgSend_configChangeType(void *a1, const char *a2, ...)
{
  return _[a1 configChangeType];
}

id objc_msgSend_configureSettingsForAirDrop(void *a1, const char *a2, ...)
{
  return _[a1 configureSettingsForAirDrop];
}

id objc_msgSend_confirmSession(void *a1, const char *a2, ...)
{
  return _[a1 confirmSession];
}

id objc_msgSend_confirmUnlockWithAuthSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "confirmUnlockWithAuthSession:");
}

id objc_msgSend_confirmation(void *a1, const char *a2, ...)
{
  return _[a1 confirmation];
}

id objc_msgSend_confirmationDuration(void *a1, const char *a2, ...)
{
  return _[a1 confirmationDuration];
}

id objc_msgSend_confirmationReceived(void *a1, const char *a2, ...)
{
  return _[a1 confirmationReceived];
}

id objc_msgSend_confirmationSendDate(void *a1, const char *a2, ...)
{
  return _[a1 confirmationSendDate];
}

id objc_msgSend_confirmationTimer(void *a1, const char *a2, ...)
{
  return _[a1 confirmationTimer];
}

id objc_msgSend_conflictResolvedURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conflictResolvedURL:");
}

id objc_msgSend_connected(void *a1, const char *a2, ...)
{
  return _[a1 connected];
}

id objc_msgSend_connectedBluetoothDevices(void *a1, const char *a2, ...)
{
  return _[a1 connectedBluetoothDevices];
}

id objc_msgSend_connectedCallCount(void *a1, const char *a2, ...)
{
  return _[a1 connectedCallCount];
}

id objc_msgSend_connectedEnabled(void *a1, const char *a2, ...)
{
  return _[a1 connectedEnabled];
}

id objc_msgSend_connectedNodes(void *a1, const char *a2, ...)
{
  return _[a1 connectedNodes];
}

id objc_msgSend_connection(void *a1, const char *a2, ...)
{
  return _[a1 connection];
}

id objc_msgSend_connection_didReceiveIncomingMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connection:didReceiveIncomingMessage:");
}

id objc_msgSend_connectionDate(void *a1, const char *a2, ...)
{
  return _[a1 connectionDate];
}

id objc_msgSend_connectionEstablished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionEstablished:");
}

id objc_msgSend_connectionInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 connectionInvalidated];
}

id objc_msgSend_connectionInvalidated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionInvalidated:");
}

id objc_msgSend_connectionManagerDidInvalidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionManagerDidInvalidate:");
}

id objc_msgSend_connectionOverP2P_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionOverP2P:");
}

id objc_msgSend_connectionState(void *a1, const char *a2, ...)
{
  return _[a1 connectionState];
}

id objc_msgSend_connectionTime(void *a1, const char *a2, ...)
{
  return _[a1 connectionTime];
}

id objc_msgSend_connectionWaitTime(void *a1, const char *a2, ...)
{
  return _[a1 connectionWaitTime];
}

id objc_msgSend_consolidateLatencies_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "consolidateLatencies:");
}

id objc_msgSend_consumeAuthTokenIfReady(void *a1, const char *a2, ...)
{
  return _[a1 consumeAuthTokenIfReady];
}

id objc_msgSend_consumeSandboxExtensions(void *a1, const char *a2, ...)
{
  return _[a1 consumeSandboxExtensions];
}

id objc_msgSend_contact(void *a1, const char *a2, ...)
{
  return _[a1 contact];
}

id objc_msgSend_contactID(void *a1, const char *a2, ...)
{
  return _[a1 contactID];
}

id objc_msgSend_contactIDs(void *a1, const char *a2, ...)
{
  return _[a1 contactIDs];
}

id objc_msgSend_contactIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 contactIdentifier];
}

id objc_msgSend_contactIdentifierForMediumHashes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactIdentifierForMediumHashes:");
}

id objc_msgSend_contactIdentifierIsBlocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactIdentifierIsBlocked:");
}

id objc_msgSend_contactInfo(void *a1, const char *a2, ...)
{
  return _[a1 contactInfo];
}

id objc_msgSend_contactIsBlocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactIsBlocked:");
}

id objc_msgSend_contactWithContactIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactWithContactIdentifier:");
}

id objc_msgSend_contactWithPreferredIdentifierForContacts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactWithPreferredIdentifierForContacts:");
}

id objc_msgSend_contacts(void *a1, const char *a2, ...)
{
  return _[a1 contacts];
}

id objc_msgSend_contactsContainsShortHashes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactsContainsShortHashes:");
}

id objc_msgSend_contactsForCombinedHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactsForCombinedHash:");
}

id objc_msgSend_contactsForEmailHash_phoneHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactsForEmailHash:phoneHash:");
}

id objc_msgSend_contactsWithPhoneNumberOrEmail_keys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactsWithPhoneNumberOrEmail:keys:");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_containsValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsValueForKey:");
}

id objc_msgSend_continuationStream_connectedToService_withFileHandle_acceptHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "continuationStream:connectedToService:withFileHandle:acceptHandler:");
}

id objc_msgSend_controlFlags(void *a1, const char *a2, ...)
{
  return _[a1 controlFlags];
}

id objc_msgSend_convertMediaItemsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertMediaItemsWithCompletionHandler:");
}

id objc_msgSend_convertURLStringsToURLs(void *a1, const char *a2, ...)
{
  return _[a1 convertURLStringsToURLs];
}

id objc_msgSend_coordinateAccessWithIntents_queue_byAccessor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinateAccessWithIntents:queue:byAccessor:");
}

id objc_msgSend_coordinatedAlertRequestCancel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinatedAlertRequestCancel:");
}

id objc_msgSend_coordinatedAlertRequestFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinatedAlertRequestFinish:");
}

id objc_msgSend_coordinatedAlertRequestStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinatedAlertRequestStart:");
}

id objc_msgSend_coordinator(void *a1, const char *a2, ...)
{
  return _[a1 coordinator];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyCertificate(void *a1, const char *a2, ...)
{
  return _[a1 copyCertificate];
}

id objc_msgSend_copyCertificateForRealName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyCertificateForRealName:");
}

id objc_msgSend_copyIdentity(void *a1, const char *a2, ...)
{
  return _[a1 copyIdentity];
}

id objc_msgSend_copyIdentityForAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyIdentityForAppleID:");
}

id objc_msgSend_copyIntermediateCertificate(void *a1, const char *a2, ...)
{
  return _[a1 copyIntermediateCertificate];
}

id objc_msgSend_copyMyAppleIDAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyMyAppleIDAndReturnError:");
}

id objc_msgSend_copyMyAppleIDIntermediateCertificate(void *a1, const char *a2, ...)
{
  return _[a1 copyMyAppleIDIntermediateCertificate];
}

id objc_msgSend_copyMyAppleIDSecIdentity(void *a1, const char *a2, ...)
{
  return _[a1 copyMyAppleIDSecIdentity];
}

id objc_msgSend_copyNodeForService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyNodeForService:");
}

id objc_msgSend_copyPrivateKey(void *a1, const char *a2, ...)
{
  return _[a1 copyPrivateKey];
}

id objc_msgSend_copyReadStream(void *a1, const char *a2, ...)
{
  return _[a1 copyReadStream];
}

id objc_msgSend_copyReverseParentChain_base_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyReverseParentChain:base:");
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countForObject:");
}

id objc_msgSend_createAdvertisingInformation(void *a1, const char *a2, ...)
{
  return _[a1 createAdvertisingInformation];
}

id objc_msgSend_createAuthTokenIfReady(void *a1, const char *a2, ...)
{
  return _[a1 createAuthTokenIfReady];
}

id objc_msgSend_createConnectionForEnabledEnterpriseConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 createConnectionForEnabledEnterpriseConfiguration];
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createHostNameKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createHostNameKey:");
}

id objc_msgSend_createLockSessionWithWatchDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createLockSessionWithWatchDevice:");
}

id objc_msgSend_createPairingKeySessionWithIdentifier_deviceID_requestData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPairingKeySessionWithIdentifier:deviceID:requestData:");
}

id objc_msgSend_createPersonForAskRequest(void *a1, const char *a2, ...)
{
  return _[a1 createPersonForAskRequest];
}

id objc_msgSend_createPlaceholderFiles(void *a1, const char *a2, ...)
{
  return _[a1 createPlaceholderFiles];
}

id objc_msgSend_createRadarForError_devices_rangingResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRadarForError:devices:rangingResults:");
}

id objc_msgSend_createRapportClientWithDestinationDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRapportClientWithDestinationDevice:");
}

id objc_msgSend_createRegistrationKeySessionWithIdentifier_deviceID_requestData_locallyGenerated_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRegistrationKeySessionWithIdentifier:deviceID:requestData:locallyGenerated:");
}

id objc_msgSend_createSFNodeFromCNContacts_identifier_device_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSFNodeFromCNContacts:identifier:device:");
}

id objc_msgSend_createSFNodeFromMyRPDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSFNodeFromMyRPDevice:");
}

id objc_msgSend_createSFNodeFromRPPerson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSFNodeFromRPPerson:");
}

id objc_msgSend_createSession(void *a1, const char *a2, ...)
{
  return _[a1 createSession];
}

id objc_msgSend_createWiFiRequest(void *a1, const char *a2, ...)
{
  return _[a1 createWiFiRequest];
}

id objc_msgSend_credentialForTrust_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "credentialForTrust:");
}

id objc_msgSend_credentialWithIdentity_certificates_persistence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "credentialWithIdentity:certificates:persistence:");
}

id objc_msgSend_cuFilteredArrayUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cuFilteredArrayUsingBlock:");
}

id objc_msgSend_cuValueForEntitlementNoCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cuValueForEntitlementNoCache:");
}

id objc_msgSend_currentApplicationLabel(void *a1, const char *a2, ...)
{
  return _[a1 currentApplicationLabel];
}

id objc_msgSend_currentBluetoothIDs(void *a1, const char *a2, ...)
{
  return _[a1 currentBluetoothIDs];
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 currentCalendar];
}

id objc_msgSend_currentConnection(void *a1, const char *a2, ...)
{
  return _[a1 currentConnection];
}

id objc_msgSend_currentConsoleUser(void *a1, const char *a2, ...)
{
  return _[a1 currentConsoleUser];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_currentHistoryToken(void *a1, const char *a2, ...)
{
  return _[a1 currentHistoryToken];
}

id objc_msgSend_currentKnownNetworkProfile(void *a1, const char *a2, ...)
{
  return _[a1 currentKnownNetworkProfile];
}

id objc_msgSend_currentPayload(void *a1, const char *a2, ...)
{
  return _[a1 currentPayload];
}

id objc_msgSend_currentPreferredPollingType(void *a1, const char *a2, ...)
{
  return _[a1 currentPreferredPollingType];
}

id objc_msgSend_currentRequest(void *a1, const char *a2, ...)
{
  return _[a1 currentRequest];
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 currentRunLoop];
}

id objc_msgSend_currentTransaction(void *a1, const char *a2, ...)
{
  return _[a1 currentTransaction];
}

id objc_msgSend_customDestinationURL(void *a1, const char *a2, ...)
{
  return _[a1 customDestinationURL];
}

id objc_msgSend_customEntitlement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customEntitlement:");
}

id objc_msgSend_d2dEncryptionChanged(void *a1, const char *a2, ...)
{
  return _[a1 d2dEncryptionChanged];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataClassStringForDataClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataClassStringForDataClass:");
}

id objc_msgSend_dataFromTXTRecordDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataFromTXTRecordDictionary:");
}

id objc_msgSend_dataFromUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataFromUUID:");
}

id objc_msgSend_dataRepresentationForCurrentEncryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 dataRepresentationForCurrentEncryptionKey];
}

id objc_msgSend_dataTaskWithRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataTaskWithRequest:completionHandler:");
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithBytes:length:");
}

id objc_msgSend_dataWithBytesNoCopy_length_freeWhenDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithBytesNoCopy:length:freeWhenDone:");
}

id objc_msgSend_dataWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithCapacity:");
}

id objc_msgSend_dataWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:");
}

id objc_msgSend_dataWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithData:");
}

id objc_msgSend_dataWithJSONObject_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithJSONObject:options:error:");
}

id objc_msgSend_dataWithLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithLength:");
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithPropertyList:format:options:error:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingTimeInterval:");
}

id objc_msgSend_dateCreated(void *a1, const char *a2, ...)
{
  return _[a1 dateCreated];
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSince1970:");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_day(void *a1, const char *a2, ...)
{
  return _[a1 day];
}

id objc_msgSend_decimalDigitCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 decimalDigitCharacterSet];
}

id objc_msgSend_declareSystemActivityAssertion(void *a1, const char *a2, ...)
{
  return _[a1 declareSystemActivityAssertion];
}

id objc_msgSend_decodeBoolForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeBoolForKey:");
}

id objc_msgSend_decodeDictionaryWithKeysOfClasses_objectsOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeDictionaryWithKeysOfClasses:objectsOfClasses:forKey:");
}

id objc_msgSend_decodeIntegerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeIntegerForKey:");
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_decrementAttemptCount(void *a1, const char *a2, ...)
{
  return _[a1 decrementAttemptCount];
}

id objc_msgSend_decryptMessage_authTag_nonce_bluetoothID_cachedDevices_errorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decryptMessage:authTag:nonce:bluetoothID:cachedDevices:errorCode:");
}

id objc_msgSend_decryptedActivityLevel(void *a1, const char *a2, ...)
{
  return _[a1 decryptedActivityLevel];
}

id objc_msgSend_decryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 decryptionKey];
}

id objc_msgSend_decryptionKeyForDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decryptionKeyForDeviceIdentifier:");
}

id objc_msgSend_defaultActionForBundleProxy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultActionForBundleProxy:");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultDatabaseDirectory(void *a1, const char *a2, ...)
{
  return _[a1 defaultDatabaseDirectory];
}

id objc_msgSend_defaultDiscoverableMode(void *a1, const char *a2, ...)
{
  return _[a1 defaultDiscoverableMode];
}

id objc_msgSend_defaultFolder(void *a1, const char *a2, ...)
{
  return _[a1 defaultFolder];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultOpenActionBundleID(void *a1, const char *a2, ...)
{
  return _[a1 defaultOpenActionBundleID];
}

id objc_msgSend_defaultSFNodeFlags(void *a1, const char *a2, ...)
{
  return _[a1 defaultSFNodeFlags];
}

id objc_msgSend_defaultStore(void *a1, const char *a2, ...)
{
  return _[a1 defaultStore];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_delayedStartTimer(void *a1, const char *a2, ...)
{
  return _[a1 delayedStartTimer];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_delegates(void *a1, const char *a2, ...)
{
  return _[a1 delegates];
}

id objc_msgSend_deleteAllEncryptionAndDecryptionKeys(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllEncryptionAndDecryptionKeys];
}

id objc_msgSend_deleteAllEscrowSecrets(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllEscrowSecrets];
}

id objc_msgSend_deleteAllRangingKeys(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllRangingKeys];
}

id objc_msgSend_deleteCharactersInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCharactersInRange:");
}

id objc_msgSend_deleteEscrowData(void *a1, const char *a2, ...)
{
  return _[a1 deleteEscrowData];
}

id objc_msgSend_deleteEscrowSecretForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteEscrowSecretForDeviceID:");
}

id objc_msgSend_deleteEscrowSecretForPhones(void *a1, const char *a2, ...)
{
  return _[a1 deleteEscrowSecretForPhones];
}

id objc_msgSend_deleteLegacyCompanionIDs(void *a1, const char *a2, ...)
{
  return _[a1 deleteLegacyCompanionIDs];
}

id objc_msgSend_deleteLegacyEscrowData(void *a1, const char *a2, ...)
{
  return _[a1 deleteLegacyEscrowData];
}

id objc_msgSend_deleteLegacyWatchToCompanionIDs(void *a1, const char *a2, ...)
{
  return _[a1 deleteLegacyWatchToCompanionIDs];
}

id objc_msgSend_deleteLongTermKeys(void *a1, const char *a2, ...)
{
  return _[a1 deleteLongTermKeys];
}

id objc_msgSend_deletePersistedLongTermKeys(void *a1, const char *a2, ...)
{
  return _[a1 deletePersistedLongTermKeys];
}

id objc_msgSend_deletePersonInfoCacheWithAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deletePersonInfoCacheWithAccount:");
}

id objc_msgSend_deleteRangingKeyForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteRangingKeyForDeviceID:");
}

id objc_msgSend_deleteRemoteLongTermKeyForDeviceID_modern_tombstone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteRemoteLongTermKeyForDeviceID:modern:tombstone:");
}

id objc_msgSend_deregisterRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deregisterRequestID:");
}

id objc_msgSend_deriveKeyFromSharedSecret_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deriveKeyFromSharedSecret:");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_descriptorForRequiredKeysForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptorForRequiredKeysForStyle:");
}

id objc_msgSend_detailedDescription(void *a1, const char *a2, ...)
{
  return _[a1 detailedDescription];
}

id objc_msgSend_device(void *a1, const char *a2, ...)
{
  return _[a1 device];
}

id objc_msgSend_deviceActionType(void *a1, const char *a2, ...)
{
  return _[a1 deviceActionType];
}

id objc_msgSend_deviceChangedHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceChangedHandler];
}

id objc_msgSend_deviceClassCode(void *a1, const char *a2, ...)
{
  return _[a1 deviceClassCode];
}

id objc_msgSend_deviceColorCode(void *a1, const char *a2, ...)
{
  return _[a1 deviceColorCode];
}

id objc_msgSend_deviceCurrentlyUnlockedByWatch(void *a1, const char *a2, ...)
{
  return _[a1 deviceCurrentlyUnlockedByWatch];
}

id objc_msgSend_deviceDidUntriggerHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceDidUntriggerHandler];
}

id objc_msgSend_deviceDiscoveryDeviceChanged_changes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceDiscoveryDeviceChanged:changes:");
}

id objc_msgSend_deviceDiscoveryFastScanCancel_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceDiscoveryFastScanCancel:reason:");
}

id objc_msgSend_deviceDiscoveryFastScanTrigger_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceDiscoveryFastScanTrigger:reason:");
}

id objc_msgSend_deviceDiscoveryFoundDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceDiscoveryFoundDevice:");
}

id objc_msgSend_deviceDiscoveryLostDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceDiscoveryLostDevice:");
}

id objc_msgSend_deviceDiscoveryRequestStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceDiscoveryRequestStart:");
}

id objc_msgSend_deviceDiscoveryRequestStop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceDiscoveryRequestStop:");
}

id objc_msgSend_deviceDiscoveryRequestUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceDiscoveryRequestUpdate:");
}

id objc_msgSend_deviceDiscoveryScanStateChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceDiscoveryScanStateChanged:");
}

id objc_msgSend_deviceDiscoveryTriggerEnhancedDiscovery_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceDiscoveryTriggerEnhancedDiscovery:reason:");
}

id objc_msgSend_deviceDiscoveryTriggerEnhancedDiscovery_reason_useCase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceDiscoveryTriggerEnhancedDiscovery:reason:useCase:");
}

id objc_msgSend_deviceEnabledAsKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceEnabledAsKey:");
}

id objc_msgSend_deviceEnabledAsKeyForIDSDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceEnabledAsKeyForIDSDeviceID:");
}

id objc_msgSend_deviceEnteredImmediateHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceEnteredImmediateHandler];
}

id objc_msgSend_deviceEnteredNearbyHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceEnteredNearbyHandler];
}

id objc_msgSend_deviceExitedImmediateHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceExitedImmediateHandler];
}

id objc_msgSend_deviceExitedNearbyHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceExitedNearbyHandler];
}

id objc_msgSend_deviceFilter(void *a1, const char *a2, ...)
{
  return _[a1 deviceFilter];
}

id objc_msgSend_deviceFlags(void *a1, const char *a2, ...)
{
  return _[a1 deviceFlags];
}

id objc_msgSend_deviceForFromID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceForFromID:");
}

id objc_msgSend_deviceForIDSDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceForIDSDevice:");
}

id objc_msgSend_deviceFoundHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceFoundHandler];
}

id objc_msgSend_deviceID(void *a1, const char *a2, ...)
{
  return _[a1 deviceID];
}

id objc_msgSend_deviceIDs(void *a1, const char *a2, ...)
{
  return _[a1 deviceIDs];
}

id objc_msgSend_deviceIDsMissingSessionKey(void *a1, const char *a2, ...)
{
  return _[a1 deviceIDsMissingSessionKey];
}

id objc_msgSend_deviceIRKData(void *a1, const char *a2, ...)
{
  return _[a1 deviceIRKData];
}

id objc_msgSend_deviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 deviceIdentifier];
}

id objc_msgSend_deviceInfoChanged_model_ecolor_icolor_osxvers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceInfoChanged:model:ecolor:icolor:osxvers:");
}

id objc_msgSend_deviceInformation(void *a1, const char *a2, ...)
{
  return _[a1 deviceInformation];
}

id objc_msgSend_deviceIsEligibleForAirDrop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceIsEligibleForAirDrop:");
}

id objc_msgSend_deviceIsLocalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceIsLocalDevice:");
}

id objc_msgSend_deviceIsPaired(void *a1, const char *a2, ...)
{
  return _[a1 deviceIsPaired];
}

id objc_msgSend_deviceKeyBagDisabled(void *a1, const char *a2, ...)
{
  return _[a1 deviceKeyBagDisabled];
}

id objc_msgSend_deviceKeyBagLocked(void *a1, const char *a2, ...)
{
  return _[a1 deviceKeyBagLocked];
}

id objc_msgSend_deviceKeyBagState(void *a1, const char *a2, ...)
{
  return _[a1 deviceKeyBagState];
}

id objc_msgSend_deviceKeyBagUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 deviceKeyBagUnlocked];
}

id objc_msgSend_deviceKeyBagUnlockedAndScreenOn(void *a1, const char *a2, ...)
{
  return _[a1 deviceKeyBagUnlockedAndScreenOn];
}

id objc_msgSend_deviceLostHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceLostHandler];
}

id objc_msgSend_deviceModel(void *a1, const char *a2, ...)
{
  return _[a1 deviceModel];
}

id objc_msgSend_deviceModelCode(void *a1, const char *a2, ...)
{
  return _[a1 deviceModelCode];
}

id objc_msgSend_deviceName(void *a1, const char *a2, ...)
{
  return _[a1 deviceName];
}

id objc_msgSend_deviceNameForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceNameForDeviceID:");
}

id objc_msgSend_deviceNearby(void *a1, const char *a2, ...)
{
  return _[a1 deviceNearby];
}

id objc_msgSend_devicePresenceNotifier(void *a1, const char *a2, ...)
{
  return _[a1 devicePresenceNotifier];
}

id objc_msgSend_devicePresencePreset(void *a1, const char *a2, ...)
{
  return _[a1 devicePresencePreset];
}

id objc_msgSend_deviceRequiresNewRanging(void *a1, const char *a2, ...)
{
  return _[a1 deviceRequiresNewRanging];
}

id objc_msgSend_deviceSupportsRanging(void *a1, const char *a2, ...)
{
  return _[a1 deviceSupportsRanging];
}

id objc_msgSend_deviceSupportsWAPI(void *a1, const char *a2, ...)
{
  return _[a1 deviceSupportsWAPI];
}

id objc_msgSend_deviceTimer(void *a1, const char *a2, ...)
{
  return _[a1 deviceTimer];
}

id objc_msgSend_deviceTracked(void *a1, const char *a2, ...)
{
  return _[a1 deviceTracked];
}

id objc_msgSend_deviceTypeForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceTypeForDevice:");
}

id objc_msgSend_deviceTypeForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceTypeForDeviceID:");
}

id objc_msgSend_deviceTypeFromModelIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceTypeFromModelIdentifier:");
}

id objc_msgSend_deviceUIUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 deviceUIUnlocked];
}

id objc_msgSend_deviceUnlockedWithMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceUnlockedWithMask:");
}

id objc_msgSend_deviceUpdateHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceUpdateHandler];
}

id objc_msgSend_deviceWasDismissedHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceWasDismissedHandler];
}

id objc_msgSend_deviceWasDismissedHandlerEx(void *a1, const char *a2, ...)
{
  return _[a1 deviceWasDismissedHandlerEx];
}

id objc_msgSend_deviceWasLocked(void *a1, const char *a2, ...)
{
  return _[a1 deviceWasLocked];
}

id objc_msgSend_deviceWasSelectedHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceWasSelectedHandler];
}

id objc_msgSend_deviceWasUnlockedOnce(void *a1, const char *a2, ...)
{
  return _[a1 deviceWasUnlockedOnce];
}

id objc_msgSend_deviceWillTriggerHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceWillTriggerHandler];
}

id objc_msgSend_devices(void *a1, const char *a2, ...)
{
  return _[a1 devices];
}

id objc_msgSend_devicesForBTUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "devicesForBTUUID:");
}

id objc_msgSend_devicesWithDiscoveryFlags_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "devicesWithDiscoveryFlags:error:");
}

id objc_msgSend_devicesWithLTKs(void *a1, const char *a2, ...)
{
  return _[a1 devicesWithLTKs];
}

id objc_msgSend_dhSecretKey(void *a1, const char *a2, ...)
{
  return _[a1 dhSecretKey];
}

id objc_msgSend_diagnosticBLEModeStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "diagnosticBLEModeStart:");
}

id objc_msgSend_diagnosticBLEModeStop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "diagnosticBLEModeStop:");
}

id objc_msgSend_diagnosticMockChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "diagnosticMockChanged:");
}

id objc_msgSend_diagnosticMockFound_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "diagnosticMockFound:");
}

id objc_msgSend_diagnosticMockLost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "diagnosticMockLost:");
}

id objc_msgSend_dictRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictRepresentation];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictionaryRepresentation];
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObject:forKey:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didCloseConnection(void *a1, const char *a2, ...)
{
  return _[a1 didCloseConnection];
}

id objc_msgSend_didDelayWorkDueToPowerAssertion(void *a1, const char *a2, ...)
{
  return _[a1 didDelayWorkDueToPowerAssertion];
}

id objc_msgSend_didFail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didFail:");
}

id objc_msgSend_didFailToSendResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didFailToSendResponse:");
}

id objc_msgSend_didFinishLoading(void *a1, const char *a2, ...)
{
  return _[a1 didFinishLoading];
}

id objc_msgSend_didFinishSendingAskBodyData(void *a1, const char *a2, ...)
{
  return _[a1 didFinishSendingAskBodyData];
}

id objc_msgSend_didLosePeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didLosePeer:");
}

id objc_msgSend_didSendPayloadForActivityIdentifier_toDevice_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didSendPayloadForActivityIdentifier:toDevice:error:");
}

id objc_msgSend_didStartSendingAskBodyData(void *a1, const char *a2, ...)
{
  return _[a1 didStartSendingAskBodyData];
}

id objc_msgSend_disableAutoAccept(void *a1, const char *a2, ...)
{
  return _[a1 disableAutoAccept];
}

id objc_msgSend_disableAutoAcceptForPhotosAssetBundles(void *a1, const char *a2, ...)
{
  return _[a1 disableAutoAcceptForPhotosAssetBundles];
}

id objc_msgSend_disableAutoUnlockForAllWatches(void *a1, const char *a2, ...)
{
  return _[a1 disableAutoUnlockForAllWatches];
}

id objc_msgSend_disableAutoUnlockForDevice_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableAutoUnlockForDevice:completionHandler:");
}

id objc_msgSend_disableCompression(void *a1, const char *a2, ...)
{
  return _[a1 disableCompression];
}

id objc_msgSend_disableContinuityTLS(void *a1, const char *a2, ...)
{
  return _[a1 disableContinuityTLS];
}

id objc_msgSend_disableEncryption(void *a1, const char *a2, ...)
{
  return _[a1 disableEncryption];
}

id objc_msgSend_disableKeyPairingForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableKeyPairingForDeviceID:");
}

id objc_msgSend_disablePairingForAllKeyDevices(void *a1, const char *a2, ...)
{
  return _[a1 disablePairingForAllKeyDevices];
}

id objc_msgSend_disablePairingForDeviceID_pairingID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disablePairingForDeviceID:pairingID:");
}

id objc_msgSend_disablePairingWithKeyDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disablePairingWithKeyDevice:");
}

id objc_msgSend_disablePictureQuery(void *a1, const char *a2, ...)
{
  return _[a1 disablePictureQuery];
}

id objc_msgSend_disablePipelining(void *a1, const char *a2, ...)
{
  return _[a1 disablePipelining];
}

id objc_msgSend_disableRotation(void *a1, const char *a2, ...)
{
  return _[a1 disableRotation];
}

id objc_msgSend_disableTLS(void *a1, const char *a2, ...)
{
  return _[a1 disableTLS];
}

id objc_msgSend_disableUnlockPairing(void *a1, const char *a2, ...)
{
  return _[a1 disableUnlockPairing];
}

id objc_msgSend_disableUnlockPairingForSecManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableUnlockPairingForSecManager:");
}

id objc_msgSend_disableUnlockPairingForSecurityManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableUnlockPairingForSecurityManager:");
}

id objc_msgSend_disambiguatedModelName(void *a1, const char *a2, ...)
{
  return _[a1 disambiguatedModelName];
}

id objc_msgSend_discoverBodyDataInFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoverBodyDataInFormat:");
}

id objc_msgSend_discoverabilityMetricsForNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoverabilityMetricsForNode:");
}

id objc_msgSend_discoverableByContactsOnly(void *a1, const char *a2, ...)
{
  return _[a1 discoverableByContactsOnly];
}

id objc_msgSend_discoverableByEveryone(void *a1, const char *a2, ...)
{
  return _[a1 discoverableByEveryone];
}

id objc_msgSend_discoverableLevel(void *a1, const char *a2, ...)
{
  return _[a1 discoverableLevel];
}

id objc_msgSend_discoverableMode(void *a1, const char *a2, ...)
{
  return _[a1 discoverableMode];
}

id objc_msgSend_discoveredPeople(void *a1, const char *a2, ...)
{
  return _[a1 discoveredPeople];
}

id objc_msgSend_discoveryDate(void *a1, const char *a2, ...)
{
  return _[a1 discoveryDate];
}

id objc_msgSend_discoveryFlags(void *a1, const char *a2, ...)
{
  return _[a1 discoveryFlags];
}

id objc_msgSend_discoveryMetric(void *a1, const char *a2, ...)
{
  return _[a1 discoveryMetric];
}

id objc_msgSend_discoveryTime(void *a1, const char *a2, ...)
{
  return _[a1 discoveryTime];
}

id objc_msgSend_discreteProgressWithTotalUnitCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discreteProgressWithTotalUnitCount:");
}

id objc_msgSend_dismissNotification(void *a1, const char *a2, ...)
{
  return _[a1 dismissNotification];
}

id objc_msgSend_dismissPinDialogWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissPinDialogWithToken:");
}

id objc_msgSend_dismissReason(void *a1, const char *a2, ...)
{
  return _[a1 dismissReason];
}

id objc_msgSend_dispatchQueue(void *a1, const char *a2, ...)
{
  return _[a1 dispatchQueue];
}

id objc_msgSend_displayClamshellWaitTime(void *a1, const char *a2, ...)
{
  return _[a1 displayClamshellWaitTime];
}

id objc_msgSend_displayNameForContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayNameForContact:");
}

id objc_msgSend_displayNameForDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayNameForDomain:");
}

id objc_msgSend_displayOrClamshellWaitingDate(void *a1, const char *a2, ...)
{
  return _[a1 displayOrClamshellWaitingDate];
}

id objc_msgSend_distance(void *a1, const char *a2, ...)
{
  return _[a1 distance];
}

id objc_msgSend_distanceMeters(void *a1, const char *a2, ...)
{
  return _[a1 distanceMeters];
}

id objc_msgSend_doNotPostUnlockConfirmation(void *a1, const char *a2, ...)
{
  return _[a1 doNotPostUnlockConfirmation];
}

id objc_msgSend_dockHasDownloadsFolder(void *a1, const char *a2, ...)
{
  return _[a1 dockHasDownloadsFolder];
}

id objc_msgSend_documentName(void *a1, const char *a2, ...)
{
  return _[a1 documentName];
}

id objc_msgSend_documentTraits(void *a1, const char *a2, ...)
{
  return _[a1 documentTraits];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_domainChildren(void *a1, const char *a2, ...)
{
  return _[a1 domainChildren];
}

id objc_msgSend_donateDeviceUnlockedWithMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateDeviceUnlockedWithMask:");
}

id objc_msgSend_donateTransferInteractionToDuet(void *a1, const char *a2, ...)
{
  return _[a1 donateTransferInteractionToDuet];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_dropEscrowRecordsIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 dropEscrowRecordsIfNecessary];
}

id objc_msgSend_duetSync(void *a1, const char *a2, ...)
{
  return _[a1 duetSync];
}

id objc_msgSend_dumpDBAtFileURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dumpDBAtFileURL:");
}

id objc_msgSend_edPKData(void *a1, const char *a2, ...)
{
  return _[a1 edPKData];
}

id objc_msgSend_eduModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 eduModeEnabled];
}

id objc_msgSend_effectiveBlockedAppBundleIDs(void *a1, const char *a2, ...)
{
  return _[a1 effectiveBlockedAppBundleIDs];
}

id objc_msgSend_effectiveID(void *a1, const char *a2, ...)
{
  return _[a1 effectiveID];
}

id objc_msgSend_effectiveIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 effectiveIdentifier];
}

id objc_msgSend_ejectDisksIfNeeded_diskNames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ejectDisksIfNeeded:diskNames:");
}

id objc_msgSend_ejectMountPoints_useAssistant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ejectMountPoints:useAssistant:");
}

id objc_msgSend_eligibleDevicesFilterCompatibleDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eligibleDevicesFilterCompatibleDevices:");
}

id objc_msgSend_eligibleDevicesRequestFromBundleID_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eligibleDevicesRequestFromBundleID:withCompletionHandler:");
}

id objc_msgSend_emailAddress(void *a1, const char *a2, ...)
{
  return _[a1 emailAddress];
}

id objc_msgSend_emailAddresses(void *a1, const char *a2, ...)
{
  return _[a1 emailAddresses];
}

id objc_msgSend_emailAddressesForAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emailAddressesForAppleID:");
}

id objc_msgSend_emailOrPhone(void *a1, const char *a2, ...)
{
  return _[a1 emailOrPhone];
}

id objc_msgSend_emailOrPhoneForCombinedHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emailOrPhoneForCombinedHash:");
}

id objc_msgSend_emailOrPhoneForEmailHash_phoneHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emailOrPhoneForEmailHash:phoneHash:");
}

id objc_msgSend_enableAirDropAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 enableAirDropAdvertising];
}

id objc_msgSend_enableAirDropReceiving(void *a1, const char *a2, ...)
{
  return _[a1 enableAirDropReceiving];
}

id objc_msgSend_enableAutoUnlockWithDevice_passcode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableAutoUnlockWithDevice:passcode:");
}

id objc_msgSend_enableBugs(void *a1, const char *a2, ...)
{
  return _[a1 enableBugs];
}

id objc_msgSend_enableContinuity(void *a1, const char *a2, ...)
{
  return _[a1 enableContinuity];
}

id objc_msgSend_enableDVZip(void *a1, const char *a2, ...)
{
  return _[a1 enableDVZip];
}

id objc_msgSend_enableDemoMode(void *a1, const char *a2, ...)
{
  return _[a1 enableDemoMode];
}

id objc_msgSend_enableDevice(void *a1, const char *a2, ...)
{
  return _[a1 enableDevice];
}

id objc_msgSend_enablePKZip(void *a1, const char *a2, ...)
{
  return _[a1 enablePKZip];
}

id objc_msgSend_enablePKZipCompression(void *a1, const char *a2, ...)
{
  return _[a1 enablePKZipCompression];
}

id objc_msgSend_enableStrangers(void *a1, const char *a2, ...)
{
  return _[a1 enableStrangers];
}

id objc_msgSend_enableStreamDebugging(void *a1, const char *a2, ...)
{
  return _[a1 enableStreamDebugging];
}

id objc_msgSend_enableUnlockPairing(void *a1, const char *a2, ...)
{
  return _[a1 enableUnlockPairing];
}

id objc_msgSend_enableWebloc(void *a1, const char *a2, ...)
{
  return _[a1 enableWebloc];
}

id objc_msgSend_enableXML(void *a1, const char *a2, ...)
{
  return _[a1 enableXML];
}

id objc_msgSend_enabledAutoUnlockDevices(void *a1, const char *a2, ...)
{
  return _[a1 enabledAutoUnlockDevices];
}

id objc_msgSend_enabledAutoUnlockDevicesUsingCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enabledAutoUnlockDevicesUsingCache:");
}

id objc_msgSend_enabledDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enabledDevice:");
}

id objc_msgSend_enclosureColor(void *a1, const char *a2, ...)
{
  return _[a1 enclosureColor];
}

id objc_msgSend_encodeBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeBool:forKey:");
}

id objc_msgSend_encodeInteger_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInteger:forKey:");
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_encodedData(void *a1, const char *a2, ...)
{
  return _[a1 encodedData];
}

id objc_msgSend_encryptMessageData_deviceID_encryptedMessage_authTag_nonce_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encryptMessageData:deviceID:encryptedMessage:authTag:nonce:");
}

id objc_msgSend_encryptedAdvertisingInformation(void *a1, const char *a2, ...)
{
  return _[a1 encryptedAdvertisingInformation];
}

id objc_msgSend_encryptedPayload(void *a1, const char *a2, ...)
{
  return _[a1 encryptedPayload];
}

id objc_msgSend_encryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 encryptionKey];
}

id objc_msgSend_endpointService(void *a1, const char *a2, ...)
{
  return _[a1 endpointService];
}

id objc_msgSend_enhancedDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 enhancedDiscovery];
}

id objc_msgSend_enqueueBadResponseForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueBadResponseForRequest:");
}

id objc_msgSend_enqueueResponse_code_body_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueResponse:code:body:");
}

id objc_msgSend_enumerateContactsWithFetchRequest_error_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateContactsWithFetchRequest:error:usingBlock:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumeratorAtURL_includingPropertiesForKeys_options_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:");
}

id objc_msgSend_enumeratorForChangeHistoryFetchRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratorForChangeHistoryFetchRequest:error:");
}

id objc_msgSend_ephemeralSessionConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 ephemeralSessionConfiguration];
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return _[a1 error];
}

id objc_msgSend_errorCode(void *a1, const char *a2, ...)
{
  return _[a1 errorCode];
}

id objc_msgSend_errorCodeForBluetoothEnabled_wifiEnabled_faceIDEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorCodeForBluetoothEnabled:wifiEnabled:faceIDEnabled:");
}

id objc_msgSend_errorEventForRecordID_withResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorEventForRecordID:withResults:");
}

id objc_msgSend_errorHandler(void *a1, const char *a2, ...)
{
  return _[a1 errorHandler];
}

id objc_msgSend_errorRequestingUnlock(void *a1, const char *a2, ...)
{
  return _[a1 errorRequestingUnlock];
}

id objc_msgSend_errorStringForBluetoothEnabled_wifiEnabled_faceIDEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorStringForBluetoothEnabled:wifiEnabled:faceIDEnabled:");
}

id objc_msgSend_errorType(void *a1, const char *a2, ...)
{
  return _[a1 errorType];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_escrowCreationSessionAsOriginator_errorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "escrowCreationSessionAsOriginator:errorCode:");
}

id objc_msgSend_escrowData(void *a1, const char *a2, ...)
{
  return _[a1 escrowData];
}

id objc_msgSend_escrowSecret(void *a1, const char *a2, ...)
{
  return _[a1 escrowSecret];
}

id objc_msgSend_escrowSecretCreationDateForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "escrowSecretCreationDateForDeviceID:");
}

id objc_msgSend_escrowSecretExistsForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "escrowSecretExistsForDevice:");
}

id objc_msgSend_escrowSecretForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "escrowSecretForDevice:");
}

id objc_msgSend_escrowSecretForDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 escrowSecretForDeviceID];
}

id objc_msgSend_escrowSecretWithAuthSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "escrowSecretWithAuthSession:");
}

id objc_msgSend_estimatedRSSI(void *a1, const char *a2, ...)
{
  return _[a1 estimatedRSSI];
}

id objc_msgSend_evaluateCert(void *a1, const char *a2, ...)
{
  return _[a1 evaluateCert];
}

id objc_msgSend_evaluateReceiverTrust_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateReceiverTrust:completion:");
}

id objc_msgSend_eventMessageHandler(void *a1, const char *a2, ...)
{
  return _[a1 eventMessageHandler];
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_exchageResponseDate(void *a1, const char *a2, ...)
{
  return _[a1 exchageResponseDate];
}

id objc_msgSend_exchangeResponse(void *a1, const char *a2, ...)
{
  return _[a1 exchangeResponse];
}

id objc_msgSend_excludeBackfills(void *a1, const char *a2, ...)
{
  return _[a1 excludeBackfills];
}

id objc_msgSend_executeReadWithAdaptiveCompression(void *a1, const char *a2, ...)
{
  return _[a1 executeReadWithAdaptiveCompression];
}

id objc_msgSend_executeWriteWithAdaptiveCompression(void *a1, const char *a2, ...)
{
  return _[a1 executeWriteWithAdaptiveCompression];
}

id objc_msgSend_expireDate(void *a1, const char *a2, ...)
{
  return _[a1 expireDate];
}

id objc_msgSend_expireTime(void *a1, const char *a2, ...)
{
  return _[a1 expireTime];
}

id objc_msgSend_exportedInterface(void *a1, const char *a2, ...)
{
  return _[a1 exportedInterface];
}

id objc_msgSend_externalACMContext(void *a1, const char *a2, ...)
{
  return _[a1 externalACMContext];
}

id objc_msgSend_externalID(void *a1, const char *a2, ...)
{
  return _[a1 externalID];
}

id objc_msgSend_extraInfoData(void *a1, const char *a2, ...)
{
  return _[a1 extraInfoData];
}

id objc_msgSend_extractParameter_inString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extractParameter:inString:");
}

id objc_msgSend_failTransfer_withState_failureReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failTransfer:withState:failureReason:");
}

id objc_msgSend_failedAttemptBeforeStarting_metricErrorString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedAttemptBeforeStarting:metricErrorString:");
}

id objc_msgSend_failedToEnableDevice_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedToEnableDevice:error:");
}

id objc_msgSend_failedUnlockWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedUnlockWithError:");
}

id objc_msgSend_failureReason(void *a1, const char *a2, ...)
{
  return _[a1 failureReason];
}

id objc_msgSend_failureReasons(void *a1, const char *a2, ...)
{
  return _[a1 failureReasons];
}

id objc_msgSend_familyName(void *a1, const char *a2, ...)
{
  return _[a1 familyName];
}

id objc_msgSend_fastScanCancel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fastScanCancel:");
}

id objc_msgSend_fastScanMode(void *a1, const char *a2, ...)
{
  return _[a1 fastScanMode];
}

id objc_msgSend_featureFlags(void *a1, const char *a2, ...)
{
  return _[a1 featureFlags];
}

id objc_msgSend_fetchStartDate(void *a1, const char *a2, ...)
{
  return _[a1 fetchStartDate];
}

id objc_msgSend_fileComplete(void *a1, const char *a2, ...)
{
  return _[a1 fileComplete];
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:isDirectory:");
}

id objc_msgSend_fileHandle(void *a1, const char *a2, ...)
{
  return _[a1 fileHandle];
}

id objc_msgSend_fileInfoExpectedClassForKeyMap(void *a1, const char *a2, ...)
{
  return _[a1 fileInfoExpectedClassForKeyMap];
}

id objc_msgSend_fileNodes(void *a1, const char *a2, ...)
{
  return _[a1 fileNodes];
}

id objc_msgSend_filePathURL(void *a1, const char *a2, ...)
{
  return _[a1 filePathURL];
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 fileSystemRepresentation];
}

id objc_msgSend_fileURLWithFileSystemRepresentation_isDirectory_relativeToURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_fileZipper_event_withProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileZipper:event:withProperty:");
}

id objc_msgSend_files(void *a1, const char *a2, ...)
{
  return _[a1 files];
}

id objc_msgSend_filesToCleanup(void *a1, const char *a2, ...)
{
  return _[a1 filesToCleanup];
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_finalMessage(void *a1, const char *a2, ...)
{
  return _[a1 finalMessage];
}

id objc_msgSend_finalizeEscrowPairing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finalizeEscrowPairing:");
}

id objc_msgSend_finalizeRegistration(void *a1, const char *a2, ...)
{
  return _[a1 finalizeRegistration];
}

id objc_msgSend_finderAirDropEnabled(void *a1, const char *a2, ...)
{
  return _[a1 finderAirDropEnabled];
}

id objc_msgSend_finderServer(void *a1, const char *a2, ...)
{
  return _[a1 finderServer];
}

id objc_msgSend_finishOperation(void *a1, const char *a2, ...)
{
  return _[a1 finishOperation];
}

id objc_msgSend_finishTasksAndInvalidate(void *a1, const char *a2, ...)
{
  return _[a1 finishTasksAndInvalidate];
}

id objc_msgSend_finishedEventForRecordID_withResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedEventForRecordID:withResults:");
}

id objc_msgSend_fire(void *a1, const char *a2, ...)
{
  return _[a1 fire];
}

id objc_msgSend_firstName(void *a1, const char *a2, ...)
{
  return _[a1 firstName];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_firstReceivedFilename(void *a1, const char *a2, ...)
{
  return _[a1 firstReceivedFilename];
}

id objc_msgSend_firstSend(void *a1, const char *a2, ...)
{
  return _[a1 firstSend];
}

id objc_msgSend_firstUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 firstUnlocked];
}

id objc_msgSend_fixRemoteLTKWithStatus_retryBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fixRemoteLTKWithStatus:retryBlock:");
}

id objc_msgSend_fixedRelativePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fixedRelativePath:");
}

id objc_msgSend_flags(void *a1, const char *a2, ...)
{
  return _[a1 flags];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_forceAWDL(void *a1, const char *a2, ...)
{
  return _[a1 forceAWDL];
}

id objc_msgSend_forceAWDLDeviceRefresh_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceAWDLDeviceRefresh:");
}

id objc_msgSend_forceManateeStateRefresh(void *a1, const char *a2, ...)
{
  return _[a1 forceManateeStateRefresh];
}

id objc_msgSend_foundDeviceWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "foundDeviceWithDevice:");
}

id objc_msgSend_foundFirstPeer(void *a1, const char *a2, ...)
{
  return _[a1 foundFirstPeer];
}

id objc_msgSend_foundPeer(void *a1, const char *a2, ...)
{
  return _[a1 foundPeer];
}

id objc_msgSend_foundPeers(void *a1, const char *a2, ...)
{
  return _[a1 foundPeers];
}

id objc_msgSend_foundTicks(void *a1, const char *a2, ...)
{
  return _[a1 foundTicks];
}

id objc_msgSend_fractionCompleted(void *a1, const char *a2, ...)
{
  return _[a1 fractionCompleted];
}

id objc_msgSend_fromServerStorage(void *a1, const char *a2, ...)
{
  return _[a1 fromServerStorage];
}

id objc_msgSend_generateACMContextData(void *a1, const char *a2, ...)
{
  return _[a1 generateACMContextData];
}

id objc_msgSend_generateAppIconImageWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateAppIconImageWithOptions:");
}

id objc_msgSend_generateDebugInfo(void *a1, const char *a2, ...)
{
  return _[a1 generateDebugInfo];
}

id objc_msgSend_generateEscrowSecret(void *a1, const char *a2, ...)
{
  return _[a1 generateEscrowSecret];
}

id objc_msgSend_generateLocalLTKWithAttestation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateLocalLTKWithAttestation:");
}

id objc_msgSend_generateLocalLTKWithAttestation_forceDCRTRetrievalWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateLocalLTKWithAttestation:forceDCRTRetrievalWithCompletion:");
}

id objc_msgSend_generateLocalLongTermKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateLocalLongTermKey:");
}

id objc_msgSend_generateNewEncryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 generateNewEncryptionKey];
}

id objc_msgSend_generatePreviewForFileURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generatePreviewForFileURL:");
}

id objc_msgSend_generateSessionID(void *a1, const char *a2, ...)
{
  return _[a1 generateSessionID];
}

id objc_msgSend_generateSessionToken(void *a1, const char *a2, ...)
{
  return _[a1 generateSessionToken];
}

id objc_msgSend_generateSymptomReportWithContext_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateSymptomReportWithContext:completionHandler:");
}

id objc_msgSend_generatedError(void *a1, const char *a2, ...)
{
  return _[a1 generatedError];
}

id objc_msgSend_getAllDevicesWithArchivedAltAccountDevicesMatching_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAllDevicesWithArchivedAltAccountDevicesMatching:");
}

id objc_msgSend_getAllDevicesWithArchivedDevices(void *a1, const char *a2, ...)
{
  return _[a1 getAllDevicesWithArchivedDevices];
}

id objc_msgSend_getAppName(void *a1, const char *a2, ...)
{
  return _[a1 getAppName];
}

id objc_msgSend_getBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBytes:length:");
}

id objc_msgSend_getContinuationStreamsForMessage_bundleID_usingID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getContinuationStreamsForMessage:bundleID:usingID:completionHandler:");
}

id objc_msgSend_getDevicesMatching_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDevicesMatching:");
}

id objc_msgSend_getIdentitiesWithFlags_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getIdentitiesWithFlags:completion:");
}

id objc_msgSend_getInputStream_outputStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getInputStream:outputStream:");
}

id objc_msgSend_getInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getInterface:");
}

id objc_msgSend_getMacAddressAsString(void *a1, const char *a2, ...)
{
  return _[a1 getMacAddressAsString];
}

id objc_msgSend_getNotificationSettingsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getNotificationSettingsWithCompletionHandler:");
}

id objc_msgSend_getOppositeColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getOppositeColor:");
}

id objc_msgSend_getPeerUUID(void *a1, const char *a2, ...)
{
  return _[a1 getPeerUUID];
}

id objc_msgSend_getRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRed:green:blue:alpha:");
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getResourceValue:forKey:error:");
}

id objc_msgSend_getResultWhileDecryptingBytesInPlace_andCounter_withTag_version_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getResultWhileDecryptingBytesInPlace:andCounter:withTag:version:");
}

id objc_msgSend_getScanningDeviceCandidates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getScanningDeviceCandidates:");
}

id objc_msgSend_getSmartCoverState_usage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSmartCoverState:usage:");
}

id objc_msgSend_getStatusCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStatusCode:");
}

id objc_msgSend_getStreamsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStreamsWithCompletionHandler:");
}

id objc_msgSend_getTagAndCounterWhileEncryptingBytesInPlace_forAdvertisementWithVersion_handler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getTagAndCounterWhileEncryptingBytesInPlace:forAdvertisementWithVersion:handler:");
}

id objc_msgSend_getTagWhileEncryptingBytesInPlace_counterValue_forAdvertisementWithVersion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getTagWhileEncryptingBytesInPlace:counterValue:forAdvertisementWithVersion:");
}

id objc_msgSend_getTransferRate(void *a1, const char *a2, ...)
{
  return _[a1 getTransferRate];
}

id objc_msgSend_getTransferSize(void *a1, const char *a2, ...)
{
  return _[a1 getTransferSize];
}

id objc_msgSend_getUUIDBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getUUIDBytes:");
}

id objc_msgSend_givenName(void *a1, const char *a2, ...)
{
  return _[a1 givenName];
}

id objc_msgSend_groupMonogramImageDataForContacts_style_diameter_monogramsAsFlatImages_processOppositeBackgroundStyle_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "groupMonogramImageDataForContacts:style:diameter:monogramsAsFlatImages:processOppositeBackgroundStyle:");
}

id objc_msgSend_groupMonogramImageDataForContactsSync_style_diameter_monogramsAsFlatImages_replyHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupMonogramImageDataForContactsSync:style:diameter:monogramsAsFlatImages:replyHandler:");
}

id objc_msgSend_gsToken(void *a1, const char *a2, ...)
{
  return _[a1 gsToken];
}

id objc_msgSend_handleAWDLInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAWDLInfo:");
}

id objc_msgSend_handleAWDLState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAWDLState:");
}

id objc_msgSend_handleAWDLUp(void *a1, const char *a2, ...)
{
  return _[a1 handleAWDLUp];
}

id objc_msgSend_handleAction(void *a1, const char *a2, ...)
{
  return _[a1 handleAction];
}

id objc_msgSend_handleActiveDeviceUpdated(void *a1, const char *a2, ...)
{
  return _[a1 handleActiveDeviceUpdated];
}

id objc_msgSend_handleAppleAccountSignIn(void *a1, const char *a2, ...)
{
  return _[a1 handleAppleAccountSignIn];
}

id objc_msgSend_handleAppleAccountSignOut(void *a1, const char *a2, ...)
{
  return _[a1 handleAppleAccountSignOut];
}

id objc_msgSend_handleAskRequest(void *a1, const char *a2, ...)
{
  return _[a1 handleAskRequest];
}

id objc_msgSend_handleAuthPromptImageData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAuthPromptImageData:");
}

id objc_msgSend_handleAuthPromptRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAuthPromptRequest:");
}

id objc_msgSend_handleAuthPromptResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAuthPromptResponse:");
}

id objc_msgSend_handleBLEScanTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 handleBLEScanTimerFired];
}

id objc_msgSend_handleBioLockout(void *a1, const char *a2, ...)
{
  return _[a1 handleBioLockout];
}

id objc_msgSend_handleBrowserMessage_forConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleBrowserMessage:forConnection:");
}

id objc_msgSend_handleButtonEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleButtonEvent:");
}

id objc_msgSend_handleBytesAvailable(void *a1, const char *a2, ...)
{
  return _[a1 handleBytesAvailable];
}

id objc_msgSend_handleBytesForStream(void *a1, const char *a2, ...)
{
  return _[a1 handleBytesForStream];
}

id objc_msgSend_handleCanceledAfterSuccess(void *a1, const char *a2, ...)
{
  return _[a1 handleCanceledAfterSuccess];
}

id objc_msgSend_handleClassALongTermKeyRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleClassALongTermKeyRequest:");
}

id objc_msgSend_handleCleanUpAWDL(void *a1, const char *a2, ...)
{
  return _[a1 handleCleanUpAWDL];
}

id objc_msgSend_handleConfigState(void *a1, const char *a2, ...)
{
  return _[a1 handleConfigState];
}

id objc_msgSend_handleConfirmationACK(void *a1, const char *a2, ...)
{
  return _[a1 handleConfirmationACK];
}

id objc_msgSend_handleConfirmationFailed(void *a1, const char *a2, ...)
{
  return _[a1 handleConfirmationFailed];
}

id objc_msgSend_handleCreateEscrowSecret_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCreateEscrowSecret:");
}

id objc_msgSend_handleDeviceAuthenticationSetupRequest(void *a1, const char *a2, ...)
{
  return _[a1 handleDeviceAuthenticationSetupRequest];
}

id objc_msgSend_handleDeviceUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 handleDeviceUnlocked];
}

id objc_msgSend_handleEncryptionKeyReply_forRequestRecord_fromDevice_transportLinkType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEncryptionKeyReply:forRequestRecord:fromDevice:transportLinkType:");
}

id objc_msgSend_handleEncryptionKeyReplyRapport_options_forRequestRecord_fromDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEncryptionKeyReplyRapport:options:forRequestRecord:fromDevice:");
}

id objc_msgSend_handleEncyptionKeyRequest_fromIDSDevice_withRequestIdentifier_transportType_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "handleEncyptionKeyRequest:fromIDSDevice:withRequestIdentifier:transportType:completionHandler:");
}

id objc_msgSend_handleEndpointsChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEndpointsChanged:");
}

id objc_msgSend_handleEscrowSessionRequest(void *a1, const char *a2, ...)
{
  return _[a1 handleEscrowSessionRequest];
}

id objc_msgSend_handleEscrowSessionRequest_withUpdatedLongTermKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEscrowSessionRequest:withUpdatedLongTermKey:");
}

id objc_msgSend_handleEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEvent:");
}

id objc_msgSend_handleEventWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEventWithData:");
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:");
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInMethod:object:file:lineNumber:description:");
}

id objc_msgSend_handleFinalize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFinalize:");
}

id objc_msgSend_handleFoundBLEDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFoundBLEDevice:");
}

id objc_msgSend_handleFoundBLEDevice_available_lockedOnWrist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFoundBLEDevice:available:lockedOnWrist:");
}

id objc_msgSend_handleFoundHashes_rssi_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFoundHashes:rssi:");
}

id objc_msgSend_handleFoundPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFoundPeer:");
}

id objc_msgSend_handleHeaderRead(void *a1, const char *a2, ...)
{
  return _[a1 handleHeaderRead];
}

id objc_msgSend_handleInitialResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleInitialResponse:");
}

id objc_msgSend_handleInputDidBeginWithFlags_sessionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleInputDidBeginWithFlags:sessionInfo:");
}

id objc_msgSend_handleInputDidEndWithFlags_sessionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleInputDidEndWithFlags:sessionInfo:");
}

id objc_msgSend_handleKeyBagLockStateChanged(void *a1, const char *a2, ...)
{
  return _[a1 handleKeyBagLockStateChanged];
}

id objc_msgSend_handleKeyDeviceLocked(void *a1, const char *a2, ...)
{
  return _[a1 handleKeyDeviceLocked];
}

id objc_msgSend_handleLTKRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleLTKRequest:");
}

id objc_msgSend_handleLTKResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleLTKResponse:");
}

id objc_msgSend_handleLTKTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 handleLTKTimerFired];
}

id objc_msgSend_handleLockConnectionStartedForSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleLockConnectionStartedForSession:");
}

id objc_msgSend_handleLongTermKeyRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleLongTermKeyRequest:");
}

id objc_msgSend_handleMessage_fromDeviceID_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMessage:fromDeviceID:type:");
}

id objc_msgSend_handleMessageRead(void *a1, const char *a2, ...)
{
  return _[a1 handleMessageRead];
}

id objc_msgSend_handleMessageWithWrapper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMessageWithWrapper:");
}

id objc_msgSend_handleMessageWritten_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMessageWritten:");
}

id objc_msgSend_handleNetworkStarted_request_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNetworkStarted:request:error:");
}

id objc_msgSend_handleNetworkStoppedWithError_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNetworkStoppedWithError:error:");
}

id objc_msgSend_handleNewAdvertisementDevice_data_receivedViaScanning_withSuccessHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNewAdvertisementDevice:data:receivedViaScanning:withSuccessHandler:");
}

id objc_msgSend_handleNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNewConnection:");
}

id objc_msgSend_handleNotificationWasDismissed_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNotificationWasDismissed:reason:");
}

id objc_msgSend_handleOpenedStream(void *a1, const char *a2, ...)
{
  return _[a1 handleOpenedStream];
}

id objc_msgSend_handleOpenedStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleOpenedStream:");
}

id objc_msgSend_handleOperationMessage_forConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleOperationMessage:forConnection:");
}

id objc_msgSend_handlePairedSuccessfully(void *a1, const char *a2, ...)
{
  return _[a1 handlePairedSuccessfully];
}

id objc_msgSend_handlePayloadReply_forRequestRecord_fromDevice_transportLinkType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePayloadReply:forRequestRecord:fromDevice:transportLinkType:");
}

id objc_msgSend_handlePayloadReplyRapport_options_forRequestRecord_fromDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePayloadReplyRapport:options:forRequestRecord:fromDevice:");
}

id objc_msgSend_handlePayloadRequest_fromIDSDevice_withRequestIdentifier_transportType_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePayloadRequest:fromIDSDevice:withRequestIdentifier:transportType:completionHandler:");
}

id objc_msgSend_handlePeerFound_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePeerFound:");
}

id objc_msgSend_handlePeerInRange(void *a1, const char *a2, ...)
{
  return _[a1 handlePeerInRange];
}

id objc_msgSend_handlePeerOutOfRange(void *a1, const char *a2, ...)
{
  return _[a1 handlePeerOutOfRange];
}

id objc_msgSend_handleProxyConnectionStartedForSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleProxyConnectionStartedForSession:");
}

id objc_msgSend_handleRangingResults_errorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRangingResults:errorCode:");
}

id objc_msgSend_handleRangingStarted(void *a1, const char *a2, ...)
{
  return _[a1 handleRangingStarted];
}

id objc_msgSend_handleRegistrationCompletedSuccessfully_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRegistrationCompletedSuccessfully:");
}

id objc_msgSend_handleRegistrationFailedKeyLocked(void *a1, const char *a2, ...)
{
  return _[a1 handleRegistrationFailedKeyLocked];
}

id objc_msgSend_handleRemoteLockStateChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRemoteLockStateChanged:");
}

id objc_msgSend_handleRemoteRegistrationRequested(void *a1, const char *a2, ...)
{
  return _[a1 handleRemoteRegistrationRequested];
}

id objc_msgSend_handleRequiredStateDisabled(void *a1, const char *a2, ...)
{
  return _[a1 handleRequiredStateDisabled];
}

id objc_msgSend_handleResetState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleResetState:");
}

id objc_msgSend_handleScanTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 handleScanTimerFired];
}

id objc_msgSend_handleServerRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleServerRequest:");
}

id objc_msgSend_handleSessionAuthToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSessionAuthToken:");
}

id objc_msgSend_handleSessionKeyExchangeRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSessionKeyExchangeRequest:");
}

id objc_msgSend_handleSessionKeyExchangeResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSessionKeyExchangeResponse:");
}

id objc_msgSend_handleSetupCreateRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSetupCreateRecord:");
}

id objc_msgSend_handleSetupRequest(void *a1, const char *a2, ...)
{
  return _[a1 handleSetupRequest];
}

id objc_msgSend_handleSetupRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSetupRequest:");
}

id objc_msgSend_handleSetupSessionCreated_fromDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSetupSessionCreated:fromDeviceID:");
}

id objc_msgSend_handleSleepWakeCallBack_messageArguement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSleepWakeCallBack:messageArguement:");
}

id objc_msgSend_handleSpaceAvailable(void *a1, const char *a2, ...)
{
  return _[a1 handleSpaceAvailable];
}

id objc_msgSend_handleSpaceForMessage(void *a1, const char *a2, ...)
{
  return _[a1 handleSpaceForMessage];
}

id objc_msgSend_handleStashConfirmation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleStashConfirmation:");
}

id objc_msgSend_handleStashKeyExchangeResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleStashKeyExchangeResponse:");
}

id objc_msgSend_handleStepData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleStepData:");
}

id objc_msgSend_handleStreamRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleStreamRequest:");
}

id objc_msgSend_handleStreamResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleStreamResponse:");
}

id objc_msgSend_handleSuccessfulMessageSentWithIdentifier_sessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSuccessfulMessageSentWithIdentifier:sessionID:");
}

id objc_msgSend_handleSuccessfulPairing(void *a1, const char *a2, ...)
{
  return _[a1 handleSuccessfulPairing];
}

id objc_msgSend_handleTerminalCallBack(void *a1, const char *a2, ...)
{
  return _[a1 handleTerminalCallBack];
}

id objc_msgSend_handleTextInputData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleTextInputData:");
}

id objc_msgSend_handleTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 handleTimerFired];
}

id objc_msgSend_handleUnlockConfirmation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUnlockConfirmation:");
}

id objc_msgSend_handleUnlockStateResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUnlockStateResponse:");
}

id objc_msgSend_handleUsername_password_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUsername:password:");
}

id objc_msgSend_handleWiFiPowerChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleWiFiPowerChanged:");
}

id objc_msgSend_handleWiFiRequestInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 handleWiFiRequestInvalidated];
}

id objc_msgSend_handlerForTransfer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlerForTransfer:");
}

id objc_msgSend_handlingAppBundleID(void *a1, const char *a2, ...)
{
  return _[a1 handlingAppBundleID];
}

id objc_msgSend_handlingAppInstalled(void *a1, const char *a2, ...)
{
  return _[a1 handlingAppInstalled];
}

id objc_msgSend_hasAuthToken(void *a1, const char *a2, ...)
{
  return _[a1 hasAuthToken];
}

id objc_msgSend_hasBytesAvailable(void *a1, const char *a2, ...)
{
  return _[a1 hasBytesAvailable];
}

id objc_msgSend_hasEncryptedPayload(void *a1, const char *a2, ...)
{
  return _[a1 hasEncryptedPayload];
}

id objc_msgSend_hasErrorCode(void *a1, const char *a2, ...)
{
  return _[a1 hasErrorCode];
}

id objc_msgSend_hasFailureReasons(void *a1, const char *a2, ...)
{
  return _[a1 hasFailureReasons];
}

id objc_msgSend_hasIconHash(void *a1, const char *a2, ...)
{
  return _[a1 hasIconHash];
}

id objc_msgSend_hasImageData(void *a1, const char *a2, ...)
{
  return _[a1 hasImageData];
}

id objc_msgSend_hasIsAuthenticatingForSiri(void *a1, const char *a2, ...)
{
  return _[a1 hasIsAuthenticatingForSiri];
}

id objc_msgSend_hasKey(void *a1, const char *a2, ...)
{
  return _[a1 hasKey];
}

id objc_msgSend_hasKeyData(void *a1, const char *a2, ...)
{
  return _[a1 hasKeyData];
}

id objc_msgSend_hasKeyFailed(void *a1, const char *a2, ...)
{
  return _[a1 hasKeyFailed];
}

id objc_msgSend_hasLongTermKey(void *a1, const char *a2, ...)
{
  return _[a1 hasLongTermKey];
}

id objc_msgSend_hasLtkHash(void *a1, const char *a2, ...)
{
  return _[a1 hasLtkHash];
}

id objc_msgSend_hasLtkID(void *a1, const char *a2, ...)
{
  return _[a1 hasLtkID];
}

id objc_msgSend_hasPairedDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 hasPairedDeviceID];
}

id objc_msgSend_hasPairingID(void *a1, const char *a2, ...)
{
  return _[a1 hasPairingID];
}

id objc_msgSend_hasPasscodeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 hasPasscodeEnabled];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasResetReason(void *a1, const char *a2, ...)
{
  return _[a1 hasResetReason];
}

id objc_msgSend_hasSecret(void *a1, const char *a2, ...)
{
  return _[a1 hasSecret];
}

id objc_msgSend_hasSenderID(void *a1, const char *a2, ...)
{
  return _[a1 hasSenderID];
}

id objc_msgSend_hasSessionID(void *a1, const char *a2, ...)
{
  return _[a1 hasSessionID];
}

id objc_msgSend_hasSkipMotionCheck(void *a1, const char *a2, ...)
{
  return _[a1 hasSkipMotionCheck];
}

id objc_msgSend_hasSpaceAvailable(void *a1, const char *a2, ...)
{
  return _[a1 hasSpaceAvailable];
}

id objc_msgSend_hasStepData(void *a1, const char *a2, ...)
{
  return _[a1 hasStepData];
}

id objc_msgSend_hasSuccess(void *a1, const char *a2, ...)
{
  return _[a1 hasSuccess];
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hasSupportsACK(void *a1, const char *a2, ...)
{
  return _[a1 hasSupportsACK];
}

id objc_msgSend_hasSupportsConfirmationACK(void *a1, const char *a2, ...)
{
  return _[a1 hasSupportsConfirmationACK];
}

id objc_msgSend_hasToken(void *a1, const char *a2, ...)
{
  return _[a1 hasToken];
}

id objc_msgSend_hasUnlockEnabled(void *a1, const char *a2, ...)
{
  return _[a1 hasUnlockEnabled];
}

id objc_msgSend_hasUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 hasUnlocked];
}

id objc_msgSend_hasUsingRecord(void *a1, const char *a2, ...)
{
  return _[a1 hasUsingRecord];
}

id objc_msgSend_hasWatchNewLTKSyncStatus(void *a1, const char *a2, ...)
{
  return _[a1 hasWatchNewLTKSyncStatus];
}

id objc_msgSend_hasWatchOldLTKSyncStatus(void *a1, const char *a2, ...)
{
  return _[a1 hasWatchOldLTKSyncStatus];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_hashMatchesAnyRemoteLTKForDeviceID_ltkHash_isPreferred_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashMatchesAnyRemoteLTKForDeviceID:ltkHash:isPreferred:");
}

id objc_msgSend_hashTableWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashTableWithOptions:");
}

id objc_msgSend_header(void *a1, const char *a2, ...)
{
  return _[a1 header];
}

id objc_msgSend_headerFields(void *a1, const char *a2, ...)
{
  return _[a1 headerFields];
}

id objc_msgSend_headerWithLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headerWithLength:");
}

id objc_msgSend_helper_didPickUsername_password_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helper:didPickUsername:password:error:");
}

id objc_msgSend_helper_tryPIN_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helper:tryPIN:");
}

id objc_msgSend_helper_userNotificationDidActivate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helper:userNotificationDidActivate:");
}

id objc_msgSend_helper_userNotificationDidDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helper:userNotificationDidDismiss:");
}

id objc_msgSend_helperConnection(void *a1, const char *a2, ...)
{
  return _[a1 helperConnection];
}

id objc_msgSend_helperStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helperStart:");
}

id objc_msgSend_hexStringMacAddressFromData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hexStringMacAddressFromData:");
}

id objc_msgSend_hintToken(void *a1, const char *a2, ...)
{
  return _[a1 hintToken];
}

id objc_msgSend_homePodHandoffContentForDevice_info_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homePodHandoffContentForDevice:info:");
}

id objc_msgSend_homePodHandoffPostIfNeeded_info_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homePodHandoffPostIfNeeded:info:");
}

id objc_msgSend_homePodHandoffRemove_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homePodHandoffRemove:reason:");
}

id objc_msgSend_homePodHandoffRemoveAll(void *a1, const char *a2, ...)
{
  return _[a1 homePodHandoffRemoveAll];
}

id objc_msgSend_homePodHandoffUpdateIfNeeded_info_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "homePodHandoffUpdateIfNeeded:info:");
}

id objc_msgSend_homePodType(void *a1, const char *a2, ...)
{
  return _[a1 homePodType];
}

id objc_msgSend_horizontalAngle(void *a1, const char *a2, ...)
{
  return _[a1 horizontalAngle];
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return _[a1 host];
}

id objc_msgSend_hostName(void *a1, const char *a2, ...)
{
  return _[a1 hostName];
}

id objc_msgSend_hostTraitCollection(void *a1, const char *a2, ...)
{
  return _[a1 hostTraitCollection];
}

id objc_msgSend_hour(void *a1, const char *a2, ...)
{
  return _[a1 hour];
}

id objc_msgSend_iCloudDriveIsAccessible(void *a1, const char *a2, ...)
{
  return _[a1 iCloudDriveIsAccessible];
}

id objc_msgSend_iCloudDriveURL(void *a1, const char *a2, ...)
{
  return _[a1 iCloudDriveURL];
}

id objc_msgSend_iCloudSharedPhotoLibraryEnabled(void *a1, const char *a2, ...)
{
  return _[a1 iCloudSharedPhotoLibraryEnabled];
}

id objc_msgSend_iWorkApplicationName(void *a1, const char *a2, ...)
{
  return _[a1 iWorkApplicationName];
}

id objc_msgSend_iWorkDocumentName(void *a1, const char *a2, ...)
{
  return _[a1 iWorkDocumentName];
}

id objc_msgSend_iconCache(void *a1, const char *a2, ...)
{
  return _[a1 iconCache];
}

id objc_msgSend_iconData(void *a1, const char *a2, ...)
{
  return _[a1 iconData];
}

id objc_msgSend_iconForApplicationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconForApplicationIdentifier:");
}

id objc_msgSend_iconForSystemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconForSystemImageNamed:");
}

id objc_msgSend_iconHash(void *a1, const char *a2, ...)
{
  return _[a1 iconHash];
}

id objc_msgSend_iconImageDataForHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconImageDataForHash:");
}

id objc_msgSend_iconIndex(void *a1, const char *a2, ...)
{
  return _[a1 iconIndex];
}

id objc_msgSend_iconTransferStore(void *a1, const char *a2, ...)
{
  return _[a1 iconTransferStore];
}

id objc_msgSend_id(void *a1, const char *a2, ...)
{
  return _[a1 id];
}

id objc_msgSend_idSelfIdentity(void *a1, const char *a2, ...)
{
  return _[a1 idSelfIdentity];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_identifierForColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifierForColor:");
}

id objc_msgSend_identifiersForPerson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifiersForPerson:");
}

id objc_msgSend_identity(void *a1, const char *a2, ...)
{
  return _[a1 identity];
}

id objc_msgSend_identityForAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identityForAppleID:");
}

id objc_msgSend_identityQueryComplete(void *a1, const char *a2, ...)
{
  return _[a1 identityQueryComplete];
}

id objc_msgSend_idsAddCachedIDSIdentifier_device_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsAddCachedIDSIdentifier:device:");
}

id objc_msgSend_idsAddCachedIDSIdentifierToDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsAddCachedIDSIdentifierToDevice:");
}

id objc_msgSend_idsBluetoothDeviceIDsForLEPipe(void *a1, const char *a2, ...)
{
  return _[a1 idsBluetoothDeviceIDsForLEPipe];
}

id objc_msgSend_idsBluetoothDeviceIDsForRIServers(void *a1, const char *a2, ...)
{
  return _[a1 idsBluetoothDeviceIDsForRIServers];
}

id objc_msgSend_idsBluetoothDeviceIDsForSharing(void *a1, const char *a2, ...)
{
  return _[a1 idsBluetoothDeviceIDsForSharing];
}

id objc_msgSend_idsBluetoothDeviceIDsForWatches(void *a1, const char *a2, ...)
{
  return _[a1 idsBluetoothDeviceIDsForWatches];
}

id objc_msgSend_idsController(void *a1, const char *a2, ...)
{
  return _[a1 idsController];
}

id objc_msgSend_idsController_didReceiveProtoData_forType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsController:didReceiveProtoData:forType:");
}

id objc_msgSend_idsController_didReceiveProtoData_forType_deviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsController:didReceiveProtoData:forType:deviceID:");
}

id objc_msgSend_idsControllerNearbyStateChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsControllerNearbyStateChanged:");
}

id objc_msgSend_idsControllerSpaceDidBecomeAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsControllerSpaceDidBecomeAvailable:");
}

id objc_msgSend_idsDevice(void *a1, const char *a2, ...)
{
  return _[a1 idsDevice];
}

id objc_msgSend_idsDeviceArray(void *a1, const char *a2, ...)
{
  return _[a1 idsDeviceArray];
}

id objc_msgSend_idsDeviceForBluetoothDeviceID_conflictDetected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsDeviceForBluetoothDeviceID:conflictDetected:");
}

id objc_msgSend_idsDeviceForBluetoothID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsDeviceForBluetoothID:");
}

id objc_msgSend_idsDeviceForUniqueID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsDeviceForUniqueID:");
}

id objc_msgSend_idsDeviceFromBTIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsDeviceFromBTIdentifier:");
}

id objc_msgSend_idsDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 idsDeviceID];
}

id objc_msgSend_idsDeviceIDsForBluetoothID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsDeviceIDsForBluetoothID:");
}

id objc_msgSend_idsDeviceIDsForRIServers(void *a1, const char *a2, ...)
{
  return _[a1 idsDeviceIDsForRIServers];
}

id objc_msgSend_idsDeviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 idsDeviceIdentifier];
}

id objc_msgSend_idsDeviceIdentifierConflict(void *a1, const char *a2, ...)
{
  return _[a1 idsDeviceIdentifierConflict];
}

id objc_msgSend_idsDeviceWithUniqueID_onService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsDeviceWithUniqueID:onService:");
}

id objc_msgSend_idsDevicesAppendDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsDevicesAppendDescription:");
}

id objc_msgSend_idsDevicesIDs(void *a1, const char *a2, ...)
{
  return _[a1 idsDevicesIDs];
}

id objc_msgSend_idsIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 idsIdentifier];
}

id objc_msgSend_idsIsSignedIn(void *a1, const char *a2, ...)
{
  return _[a1 idsIsSignedIn];
}

id objc_msgSend_idsMacCountCache(void *a1, const char *a2, ...)
{
  return _[a1 idsMacCountCache];
}

id objc_msgSend_idsMacDeviceIDs(void *a1, const char *a2, ...)
{
  return _[a1 idsMacDeviceIDs];
}

id objc_msgSend_idsService(void *a1, const char *a2, ...)
{
  return _[a1 idsService];
}

id objc_msgSend_idsServiceClassA(void *a1, const char *a2, ...)
{
  return _[a1 idsServiceClassA];
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _[a1 image];
}

id objc_msgSend_imageCachedForHash_device_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageCachedForHash:device:");
}

id objc_msgSend_imageData(void *a1, const char *a2, ...)
{
  return _[a1 imageData];
}

id objc_msgSend_imageDataAlreadyCached(void *a1, const char *a2, ...)
{
  return _[a1 imageDataAlreadyCached];
}

id objc_msgSend_imageForKey_contactIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForKey:contactIDs:");
}

id objc_msgSend_imageHash(void *a1, const char *a2, ...)
{
  return _[a1 imageHash];
}

id objc_msgSend_imageTitle(void *a1, const char *a2, ...)
{
  return _[a1 imageTitle];
}

id objc_msgSend_inConfigureState(void *a1, const char *a2, ...)
{
  return _[a1 inConfigureState];
}

id objc_msgSend_inRange(void *a1, const char *a2, ...)
{
  return _[a1 inRange];
}

id objc_msgSend_incomingResponseIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 incomingResponseIdentifier];
}

id objc_msgSend_incrementAttemptCount(void *a1, const char *a2, ...)
{
  return _[a1 incrementAttemptCount];
}

id objc_msgSend_incrementCount(void *a1, const char *a2, ...)
{
  return _[a1 incrementCount];
}

id objc_msgSend_incrementTransfersCompleted(void *a1, const char *a2, ...)
{
  return _[a1 incrementTransfersCompleted];
}

id objc_msgSend_incrementTransfersInitiated(void *a1, const char *a2, ...)
{
  return _[a1 incrementTransfersInitiated];
}

id objc_msgSend_incrementedCountID(void *a1, const char *a2, ...)
{
  return _[a1 incrementedCountID];
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexesOfObjectsPassingTest:");
}

id objc_msgSend_infoProximityEstimator(void *a1, const char *a2, ...)
{
  return _[a1 infoProximityEstimator];
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_initAsResponder_macAddress_key_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initAsResponder:macAddress:key:");
}

id objc_msgSend_initBomWithFiles(void *a1, const char *a2, ...)
{
  return _[a1 initBomWithFiles];
}

id objc_msgSend_initForReadingFromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForReadingFromData:error:");
}

id objc_msgSend_initRequiringSecureCoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initRequiringSecureCoding:");
}

id objc_msgSend_initWithAccountIdentifier_emailOrPhone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccountIdentifier:emailOrPhone:");
}

id objc_msgSend_initWithAdvertisementVersion_advertisementPayload_options_device_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAdvertisementVersion:advertisementPayload:options:device:");
}

id objc_msgSend_initWithAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAltDSID:");
}

id objc_msgSend_initWithAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAppleID:");
}

id objc_msgSend_initWithAppleID_altDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAppleID:altDSID:");
}

id objc_msgSend_initWithAppleID_certificateToken_privateKeyPersistentReference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAppleID:certificateToken:privateKeyPersistentReference:");
}

id objc_msgSend_initWithApplicationLabel_pkData_bonjourListenerUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplicationLabel:pkData:bonjourListenerUUID:");
}

id objc_msgSend_initWithApplicationLabel_supportedApplicationLabels_pkData_bonjourListenerUUID_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplicationLabel:supportedApplicationLabels:pkData:bonjourListenerUUID:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithAssetBundleAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssetBundleAtURL:");
}

id objc_msgSend_initWithAuthorData_streamHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAuthorData:streamHandler:");
}

id objc_msgSend_initWithAutoUnlockDevice_sessionID_bleDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAutoUnlockDevice:sessionID:bleDevice:");
}

id objc_msgSend_initWithAwdlInfo_isRangingInitiator_rangingPeer_queueAvailableHandler_awdlStartedHandler_peerFoundHandler_rangingStartedHandler_rangingCompletedHandler_invalidationHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithAwdlInfo:isRangingInitiator:rangingPeer:queueAvailableHandler:awdlStartedHandler:peerFoundHandler:ran gingStartedHandler:rangingCompletedHandler:invalidationHandler:");
}

id objc_msgSend_initWithBLEDevice_sessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBLEDevice:sessionID:");
}

id objc_msgSend_initWithBase64EncodedString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBase64EncodedString:options:");
}

id objc_msgSend_initWithBluetoothModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBluetoothModel:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:");
}

id objc_msgSend_initWithBytes_length_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:encoding:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithClient_browseDescriptor_browseResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClient:browseDescriptor:browseResponse:");
}

id objc_msgSend_initWithClientIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientIdentifier:");
}

id objc_msgSend_initWithClientProxy_withIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientProxy:withIdentifier:");
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:");
}

id objc_msgSend_initWithConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:");
}

id objc_msgSend_initWithContact_icon_atIndex_cacheLookupKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContact:icon:atIndex:cacheLookupKey:");
}

id objc_msgSend_initWithContacts_icon_atIndex_cacheLookupKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContacts:icon:atIndex:cacheLookupKey:");
}

id objc_msgSend_initWithContentsOfFile_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfFile:options:error:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:queue:");
}

id objc_msgSend_initWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDevice:");
}

id objc_msgSend_initWithDevice_acceptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDevice:acceptor:");
}

id objc_msgSend_initWithDevice_sessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDevice:sessionID:");
}

id objc_msgSend_initWithDevice_sessionID_bleDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDevice:sessionID:bleDevice:");
}

id objc_msgSend_initWithDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceID:");
}

id objc_msgSend_initWithDictRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictRepresentation:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithDispatchQueue_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDispatchQueue:delegate:");
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:code:userInfo:");
}

id objc_msgSend_initWithDomain_type_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:type:name:");
}

id objc_msgSend_initWithDomain_type_name_port_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:type:name:port:");
}

id objc_msgSend_initWithDomain_types_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:types:");
}

id objc_msgSend_initWithEnvironmentName_namedDelegatePort_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEnvironmentName:namedDelegatePort:queue:");
}

id objc_msgSend_initWithFileDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFileDescriptor:");
}

id objc_msgSend_initWithFilePresenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFilePresenter:");
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:");
}

id objc_msgSend_initWithHTTPUTLResponse_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHTTPUTLResponse:data:");
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:");
}

id objc_msgSend_initWithIdentifier_initialInformation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:initialInformation:");
}

id objc_msgSend_initWithIdentifier_queue_operation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:queue:operation:");
}

id objc_msgSend_initWithImageTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImageTitle:");
}

id objc_msgSend_initWithImageTitle_image_cacheLookupKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImageTitle:image:cacheLookupKey:");
}

id objc_msgSend_initWithImageTitle_imageData_cacheLookupKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImageTitle:imageData:cacheLookupKey:");
}

id objc_msgSend_initWithInnerBoundary_outerBoundary_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInnerBoundary:outerBoundary:error:");
}

id objc_msgSend_initWithInputStream_outputStream_isClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInputStream:outputStream:isClient:");
}

id objc_msgSend_initWithKeyOptions_valueOptions_capacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeyOptions:valueOptions:capacity:");
}

id objc_msgSend_initWithKeysToFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeysToFetch:");
}

id objc_msgSend_initWithKind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKind:");
}

id objc_msgSend_initWithKind_rootNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKind:rootNode:");
}

id objc_msgSend_initWithLabel_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLabel:value:");
}

id objc_msgSend_initWithLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLength:");
}

id objc_msgSend_initWithLocalLTK_remoteLTK_sessionType_originator_deviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:");
}

id objc_msgSend_initWithLocalLTK_remoteLTK_sessionType_originator_deviceID_escrowSecret_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:escrowSecret:");
}

id objc_msgSend_initWithLocalLTK_remoteLTK_sessionType_originator_deviceID_escrowSecret_usingEscrow_externalACMContext_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:escrowSecret:usingEscrow:externalACMContext:");
}

id objc_msgSend_initWithLocalLTK_remoteLTK_sessionType_originator_deviceID_externalACMContext_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:externalACMContext:");
}

id objc_msgSend_initWithLocalLTK_remoteLTK_sessionType_originator_deviceID_usingEscrow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:usingEscrow:");
}

id objc_msgSend_initWithMacAddressAsData_secureRangingKeyID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMacAddressAsData:secureRangingKeyID:");
}

id objc_msgSend_initWithMachServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMachServiceName:");
}

id objc_msgSend_initWithName_devicePresencePreset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:devicePresencePreset:");
}

id objc_msgSend_initWithName_type_domain_path_timeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:type:domain:path:timeout:");
}

id objc_msgSend_initWithNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNode:");
}

id objc_msgSend_initWithNode_protocol_flags_kind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNode:protocol:flags:kind:");
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:");
}

id objc_msgSend_initWithOpaqueRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOpaqueRepresentation:");
}

id objc_msgSend_initWithOrder_result_conditions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrder:result:conditions:");
}

id objc_msgSend_initWithPairingID_pairingStorePath_deviceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPairingID:pairingStorePath:deviceName:");
}

id objc_msgSend_initWithPeer_distanceMeters_initiator_shouldUnlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPeer:distanceMeters:initiator:shouldUnlock:");
}

id objc_msgSend_initWithPerson_items_forDiscovery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPerson:items:forDiscovery:");
}

id objc_msgSend_initWithPerson_items_sandboxExtensions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPerson:items:sandboxExtensions:");
}

id objc_msgSend_initWithPort_identity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPort:identity:");
}

id objc_msgSend_initWithProtobufData_type_isResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProtobufData:type:isResponse:");
}

id objc_msgSend_initWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:");
}

id objc_msgSend_initWithRSSI_identifier_model_channel_machContinuousTimeSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRSSI:identifier:model:channel:machContinuousTimeSeconds:");
}

id objc_msgSend_initWithRTIPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRTIPayload:");
}

id objc_msgSend_initWithReadStream_writeStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReadStream:writeStream:");
}

id objc_msgSend_initWithRequest_wiFiManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:wiFiManager:");
}

id objc_msgSend_initWithRequestMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestMessage:");
}

id objc_msgSend_initWithSenderMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSenderMetadata:");
}

id objc_msgSend_initWithServer_xpcConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServer:xpcConnection:");
}

id objc_msgSend_initWithService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithService:");
}

id objc_msgSend_initWithServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceName:");
}

id objc_msgSend_initWithServiceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceType:");
}

id objc_msgSend_initWithStreamHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStreamHandler:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_initWithTransfer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTransfer:");
}

id objc_msgSend_initWithTransferIdentifier_actionIdentifier_title_singleItemTitle_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTransferIdentifier:actionIdentifier:title:singleItemTitle:type:");
}

id objc_msgSend_initWithTransport_magnetTransport_keyManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTransport:magnetTransport:keyManager:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_initWithType_appleID_info_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:appleID:info:");
}

id objc_msgSend_initWithType_subtype_isFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:subtype:isFile:");
}

id objc_msgSend_initWithURL_gsToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:gsToken:");
}

id objc_msgSend_initWithURL_resolvingAgainstBaseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:resolvingAgainstBaseURL:");
}

id objc_msgSend_initWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUTF8String:");
}

id objc_msgSend_initWithUUIDBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDBytes:");
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDString:");
}

id objc_msgSend_initWithUnlockEnabled_remotePasscodeEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUnlockEnabled:remotePasscodeEnabled:");
}

id objc_msgSend_initWithWorkgroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWorkgroup:");
}

id objc_msgSend_initWithXPCConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithXPCConnection:");
}

id objc_msgSend_initialize(void *a1, const char *a2, ...)
{
  return _[a1 initialize];
}

id objc_msgSend_initializeAttemptState(void *a1, const char *a2, ...)
{
  return _[a1 initializeAttemptState];
}

id objc_msgSend_initializeCaptureBlock(void *a1, const char *a2, ...)
{
  return _[a1 initializeCaptureBlock];
}

id objc_msgSend_initializeMetrics(void *a1, const char *a2, ...)
{
  return _[a1 initializeMetrics];
}

id objc_msgSend_initializeRemotePeer(void *a1, const char *a2, ...)
{
  return _[a1 initializeRemotePeer];
}

id objc_msgSend_initializeStateCaptureBlock(void *a1, const char *a2, ...)
{
  return _[a1 initializeStateCaptureBlock];
}

id objc_msgSend_initiateRemoteUnlock(void *a1, const char *a2, ...)
{
  return _[a1 initiateRemoteUnlock];
}

id objc_msgSend_initiateStashBagCreationWithManifest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initiateStashBagCreationWithManifest:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_insideMediumBubble(void *a1, const char *a2, ...)
{
  return _[a1 insideMediumBubble];
}

id objc_msgSend_insideSmallBubble(void *a1, const char *a2, ...)
{
  return _[a1 insideSmallBubble];
}

id objc_msgSend_installAirPlayPreferencesMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installAirPlayPreferencesMonitor];
}

id objc_msgSend_installAirplaneModeMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installAirplaneModeMonitor];
}

id objc_msgSend_installAppleIDAccountInfoMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installAppleIDAccountInfoMonitor];
}

id objc_msgSend_installAppleIDUsernameMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installAppleIDUsernameMonitor];
}

id objc_msgSend_installBacklightMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installBacklightMonitor];
}

id objc_msgSend_installBacklightServicesMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installBacklightServicesMonitor];
}

id objc_msgSend_installBluetoothMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installBluetoothMonitor];
}

id objc_msgSend_installBonjourNameMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installBonjourNameMonitor];
}

id objc_msgSend_installCarPlayStatusMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installCarPlayStatusMonitor];
}

id objc_msgSend_installClamshellStateChangeMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installClamshellStateChangeMonitor];
}

id objc_msgSend_installContactsMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installContactsMonitor];
}

id objc_msgSend_installCoreTelephonyMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installCoreTelephonyMonitor];
}

id objc_msgSend_installD2DEncryptionMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installD2DEncryptionMonitor];
}

id objc_msgSend_installDisplayConfigurationMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installDisplayConfigurationMonitor];
}

id objc_msgSend_installDisplaySleepMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installDisplaySleepMonitor];
}

id objc_msgSend_installDynamicStoreCallBack(void *a1, const char *a2, ...)
{
  return _[a1 installDynamicStoreCallBack];
}

id objc_msgSend_installFinderSidebarPrefsMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installFinderSidebarPrefsMonitor];
}

id objc_msgSend_installKeyBagUnlockMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installKeyBagUnlockMonitor];
}

id objc_msgSend_installLocaleChangeMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installLocaleChangeMonitor];
}

id objc_msgSend_installLowPowerModeMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installLowPowerModeMonitor];
}

id objc_msgSend_installMISMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installMISMonitor];
}

id objc_msgSend_installManagedConfigurationMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installManagedConfigurationMonitor];
}

id objc_msgSend_installMirroringMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installMirroringMonitor];
}

id objc_msgSend_installSMBPreferencesMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installSMBPreferencesMonitor];
}

id objc_msgSend_installSSIDCacheMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installSSIDCacheMonitor];
}

id objc_msgSend_installSleepNotification(void *a1, const char *a2, ...)
{
  return _[a1 installSleepNotification];
}

id objc_msgSend_installSleepStateMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installSleepStateMonitor];
}

id objc_msgSend_installSleepWakeCallBack(void *a1, const char *a2, ...)
{
  return _[a1 installSleepWakeCallBack];
}

id objc_msgSend_installSmartCoverMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installSmartCoverMonitor];
}

id objc_msgSend_installSmartCoverStatusMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installSmartCoverStatusMonitor];
}

id objc_msgSend_installSpringBoardStateMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installSpringBoardStateMonitor];
}

id objc_msgSend_installSystemStateInterfaces(void *a1, const char *a2, ...)
{
  return _[a1 installSystemStateInterfaces];
}

id objc_msgSend_installSystemUIMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installSystemUIMonitor];
}

id objc_msgSend_installUILockStatusMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installUILockStatusMonitor];
}

id objc_msgSend_installUserPictureMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installUserPictureMonitor];
}

id objc_msgSend_installVolumesMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installVolumesMonitor];
}

id objc_msgSend_installWiFiPasswordSharingMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installWiFiPasswordSharingMonitor];
}

id objc_msgSend_installWifiInterfaceMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installWifiInterfaceMonitor];
}

id objc_msgSend_installWirelessCarPlayMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installWirelessCarPlayMonitor];
}

id objc_msgSend_installWirelessMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installWirelessMonitor];
}

id objc_msgSend_installWristStateMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installWristStateMonitor];
}

id objc_msgSend_instantMessageAddresses(void *a1, const char *a2, ...)
{
  return _[a1 instantMessageAddresses];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerForKey:");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interactionBehavior(void *a1, const char *a2, ...)
{
  return _[a1 interactionBehavior];
}

id objc_msgSend_interactionDirection(void *a1, const char *a2, ...)
{
  return _[a1 interactionDirection];
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_intermediateCertificateExpirationDate(void *a1, const char *a2, ...)
{
  return _[a1 intermediateCertificateExpirationDate];
}

id objc_msgSend_intermediateCertificatePersistentReference(void *a1, const char *a2, ...)
{
  return _[a1 intermediateCertificatePersistentReference];
}

id objc_msgSend_intermediateCertificateSerialNumber(void *a1, const char *a2, ...)
{
  return _[a1 intermediateCertificateSerialNumber];
}

id objc_msgSend_internetLocationFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "internetLocationFile:");
}

id objc_msgSend_internetSharingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 internetSharingEnabled];
}

id objc_msgSend_intersectsSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectsSet:");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidateAssertionTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateAssertionTimer];
}

id objc_msgSend_invalidateAttempt(void *a1, const char *a2, ...)
{
  return _[a1 invalidateAttempt];
}

id objc_msgSend_invalidateCalled(void *a1, const char *a2, ...)
{
  return _[a1 invalidateCalled];
}

id objc_msgSend_invalidateConfirmationTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateConfirmationTimer];
}

id objc_msgSend_invalidateDelayedStartTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateDelayedStartTimer];
}

id objc_msgSend_invalidateExistingSessionsForBLEDevice_incomingSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateExistingSessionsForBLEDevice:incomingSessionID:");
}

id objc_msgSend_invalidateGoodbyeTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateGoodbyeTimer];
}

id objc_msgSend_invalidateLongTermKeyTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateLongTermKeyTimer];
}

id objc_msgSend_invalidateOnQueue(void *a1, const char *a2, ...)
{
  return _[a1 invalidateOnQueue];
}

id objc_msgSend_invalidateOpenTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateOpenTimer];
}

id objc_msgSend_invalidateResponseTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateResponseTimer];
}

id objc_msgSend_invalidateScanTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateScanTimer];
}

id objc_msgSend_invalidateScanner(void *a1, const char *a2, ...)
{
  return _[a1 invalidateScanner];
}

id objc_msgSend_invalidateStashTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateStashTimer];
}

id objc_msgSend_invalidateStateTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateStateTimer];
}

id objc_msgSend_invalidateSuggestedDeviceTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateSuggestedDeviceTimer];
}

id objc_msgSend_invalidateSuggestionService(void *a1, const char *a2, ...)
{
  return _[a1 invalidateSuggestionService];
}

id objc_msgSend_invalidateTimerIfReady(void *a1, const char *a2, ...)
{
  return _[a1 invalidateTimerIfReady];
}

id objc_msgSend_invalidateTimers(void *a1, const char *a2, ...)
{
  return _[a1 invalidateTimers];
}

id objc_msgSend_invalidateTransaction_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateTransaction:context:");
}

id objc_msgSend_invalidateUnlockTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateUnlockTimer];
}

id objc_msgSend_invalidateWithFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateWithFlags:");
}

id objc_msgSend_invalidated(void *a1, const char *a2, ...)
{
  return _[a1 invalidated];
}

id objc_msgSend_invalidationHandler(void *a1, const char *a2, ...)
{
  return _[a1 invalidationHandler];
}

id objc_msgSend_invoke(void *a1, const char *a2, ...)
{
  return _[a1 invoke];
}

id objc_msgSend_is2GHz(void *a1, const char *a2, ...)
{
  return _[a1 is2GHz];
}

id objc_msgSend_isActivated(void *a1, const char *a2, ...)
{
  return _[a1 isActivated];
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _[a1 isActive];
}

id objc_msgSend_isActiveDeviceNearby(void *a1, const char *a2, ...)
{
  return _[a1 isActiveDeviceNearby];
}

id objc_msgSend_isActivityContinuationAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isActivityContinuationAllowed];
}

id objc_msgSend_isAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 isAdvertising];
}

id objc_msgSend_isAirDropAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isAirDropAllowed];
}

id objc_msgSend_isAirDropAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isAirDropAvailable];
}

id objc_msgSend_isAirDropEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAirDropEnabled];
}

id objc_msgSend_isAirDropReady(void *a1, const char *a2, ...)
{
  return _[a1 isAirDropReady];
}

id objc_msgSend_isAirPods(void *a1, const char *a2, ...)
{
  return _[a1 isAirPods];
}

id objc_msgSend_isAuthenticatingForSiri(void *a1, const char *a2, ...)
{
  return _[a1 isAuthenticatingForSiri];
}

id objc_msgSend_isBeingUsedForSiri(void *a1, const char *a2, ...)
{
  return _[a1 isBeingUsedForSiri];
}

id objc_msgSend_isBluetoothEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isBluetoothEnabled];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _[a1 isCancelled];
}

id objc_msgSend_isClarityBoardEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isClarityBoardEnabled];
}

id objc_msgSend_isClassroomEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isClassroomEnabled];
}

id objc_msgSend_isCompressor(void *a1, const char *a2, ...)
{
  return _[a1 isCompressor];
}

id objc_msgSend_isConnected(void *a1, const char *a2, ...)
{
  return _[a1 isConnected];
}

id objc_msgSend_isDecompressor(void *a1, const char *a2, ...)
{
  return _[a1 isDecompressor];
}

id objc_msgSend_isDefaultPairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 isDefaultPairedDevice];
}

id objc_msgSend_isDefaultPairedDeviceNearby(void *a1, const char *a2, ...)
{
  return _[a1 isDefaultPairedDeviceNearby];
}

id objc_msgSend_isDeviceValidRIServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDeviceValidRIServer:");
}

id objc_msgSend_isDisplayOff(void *a1, const char *a2, ...)
{
  return _[a1 isDisplayOff];
}

id objc_msgSend_isEmail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEmail:");
}

id objc_msgSend_isEntitled(void *a1, const char *a2, ...)
{
  return _[a1 isEntitled];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToData:");
}

id objc_msgSend_isEqualToDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDate:");
}

id objc_msgSend_isEqualToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDictionary:");
}

id objc_msgSend_isEqualToIgnoringCase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToIgnoringCase:");
}

id objc_msgSend_isEqualToPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToPeer:");
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToSet:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isFaceIDEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isFaceIDEnabled];
}

id objc_msgSend_isFile(void *a1, const char *a2, ...)
{
  return _[a1 isFile];
}

id objc_msgSend_isFileURL(void *a1, const char *a2, ...)
{
  return _[a1 isFileURL];
}

id objc_msgSend_isInstalled(void *a1, const char *a2, ...)
{
  return _[a1 isInstalled];
}

id objc_msgSend_isInvalid(void *a1, const char *a2, ...)
{
  return _[a1 isInvalid];
}

id objc_msgSend_isJustFiles(void *a1, const char *a2, ...)
{
  return _[a1 isJustFiles];
}

id objc_msgSend_isJustLinks(void *a1, const char *a2, ...)
{
  return _[a1 isJustLinks];
}

id objc_msgSend_isKeyBagLocked(void *a1, const char *a2, ...)
{
  return _[a1 isKeyBagLocked];
}

id objc_msgSend_isKnownIdentity(void *a1, const char *a2, ...)
{
  return _[a1 isKnownIdentity];
}

id objc_msgSend_isLocallyGenerated(void *a1, const char *a2, ...)
{
  return _[a1 isLocallyGenerated];
}

id objc_msgSend_isLocallyPaired(void *a1, const char *a2, ...)
{
  return _[a1 isLocallyPaired];
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMemberOfClass:");
}

id objc_msgSend_isMirroringActive(void *a1, const char *a2, ...)
{
  return _[a1 isMirroringActive];
}

id objc_msgSend_isMobileActivationErrorNetworkError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMobileActivationErrorNetworkError:");
}

id objc_msgSend_isModernProgress(void *a1, const char *a2, ...)
{
  return _[a1 isModernProgress];
}

id objc_msgSend_isMulticastAdvertisementsDisabled(void *a1, const char *a2, ...)
{
  return _[a1 isMulticastAdvertisementsDisabled];
}

id objc_msgSend_isNearby(void *a1, const char *a2, ...)
{
  return _[a1 isNearby];
}

id objc_msgSend_isPasswordProximityAutoFillRequestingAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isPasswordProximityAutoFillRequestingAllowed];
}

id objc_msgSend_isPersonalHotspot(void *a1, const char *a2, ...)
{
  return _[a1 isPersonalHotspot];
}

id objc_msgSend_isPersonalHotspotModificationAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isPersonalHotspotModificationAllowed];
}

id objc_msgSend_isProximitySetupToNewDeviceAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isProximitySetupToNewDeviceAllowed];
}

id objc_msgSend_isRangingInitiator(void *a1, const char *a2, ...)
{
  return _[a1 isRangingInitiator];
}

id objc_msgSend_isReady(void *a1, const char *a2, ...)
{
  return _[a1 isReady];
}

id objc_msgSend_isRestricted(void *a1, const char *a2, ...)
{
  return _[a1 isRestricted];
}

id objc_msgSend_isSmartCoverClosed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSmartCoverClosed:");
}

id objc_msgSend_isStale(void *a1, const char *a2, ...)
{
  return _[a1 isStale];
}

id objc_msgSend_isSubsetOfSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSubsetOfSet:");
}

id objc_msgSend_isUnsupportedApplicationLabel(void *a1, const char *a2, ...)
{
  return _[a1 isUnsupportedApplicationLabel];
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return _[a1 isValid];
}

id objc_msgSend_isValidKey(void *a1, const char *a2, ...)
{
  return _[a1 isValidKey];
}

id objc_msgSend_isVerifiableIdentity(void *a1, const char *a2, ...)
{
  return _[a1 isVerifiableIdentity];
}

id objc_msgSend_isWaitingToCompleteUnlock(void *a1, const char *a2, ...)
{
  return _[a1 isWaitingToCompleteUnlock];
}

id objc_msgSend_isWarmingUp(void *a1, const char *a2, ...)
{
  return _[a1 isWarmingUp];
}

id objc_msgSend_isWiFiPasswordSharingAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isWiFiPasswordSharingAllowed];
}

id objc_msgSend_isWifiCritical(void *a1, const char *a2, ...)
{
  return _[a1 isWifiCritical];
}

id objc_msgSend_isWifiEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isWifiEnabled];
}

id objc_msgSend_isWifiPersonalHotspot(void *a1, const char *a2, ...)
{
  return _[a1 isWifiPersonalHotspot];
}

id objc_msgSend_isiWorkURL(void *a1, const char *a2, ...)
{
  return _[a1 isiWorkURL];
}

id objc_msgSend_itemTypesForTransfer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemTypesForTransfer:");
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _[a1 items];
}

id objc_msgSend_itemsDescription(void *a1, const char *a2, ...)
{
  return _[a1 itemsDescription];
}

id objc_msgSend_itemsDescriptionAdvanced(void *a1, const char *a2, ...)
{
  return _[a1 itemsDescriptionAdvanced];
}

id objc_msgSend_kStatusContactsHashesChanged(void *a1, const char *a2, ...)
{
  return _[a1 kStatusContactsHashesChanged];
}

id objc_msgSend_kStatusMeCardChanged(void *a1, const char *a2, ...)
{
  return _[a1 kStatusMeCardChanged];
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _[a1 key];
}

id objc_msgSend_keyAuthSessions(void *a1, const char *a2, ...)
{
  return _[a1 keyAuthSessions];
}

id objc_msgSend_keyClassForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyClassForDeviceID:");
}

id objc_msgSend_keyData(void *a1, const char *a2, ...)
{
  return _[a1 keyData];
}

id objc_msgSend_keyDerivedFromRelevantTraitCollectionProperties(void *a1, const char *a2, ...)
{
  return _[a1 keyDerivedFromRelevantTraitCollectionProperties];
}

id objc_msgSend_keyDerivedFromRelevantTraitCollectionPropertiesWithOppositeUserInterfaceStyle( void *a1, const char *a2, ...)
{
  return _[a1 keyDerivedFromRelevantTraitCollectionPropertiesWithOppositeUserInterfaceStyle];
}

id objc_msgSend_keyDeviceLocked(void *a1, const char *a2, ...)
{
  return _[a1 keyDeviceLocked];
}

id objc_msgSend_keyDeviceLocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyDeviceLocked:");
}

id objc_msgSend_keyDeviceModel(void *a1, const char *a2, ...)
{
  return _[a1 keyDeviceModel];
}

id objc_msgSend_keyExchangeDate(void *a1, const char *a2, ...)
{
  return _[a1 keyExchangeDate];
}

id objc_msgSend_keyExchangeDuration(void *a1, const char *a2, ...)
{
  return _[a1 keyExchangeDuration];
}

id objc_msgSend_keyExchangeInterval(void *a1, const char *a2, ...)
{
  return _[a1 keyExchangeInterval];
}

id objc_msgSend_keyExchangeResponseReceived(void *a1, const char *a2, ...)
{
  return _[a1 keyExchangeResponseReceived];
}

id objc_msgSend_keyFailed(void *a1, const char *a2, ...)
{
  return _[a1 keyFailed];
}

id objc_msgSend_keyIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 keyIdentifier];
}

id objc_msgSend_keyManager(void *a1, const char *a2, ...)
{
  return _[a1 keyManager];
}

id objc_msgSend_keyPairingIDForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyPairingIDForDeviceID:");
}

id objc_msgSend_keyPairingSessions(void *a1, const char *a2, ...)
{
  return _[a1 keyPairingSessions];
}

id objc_msgSend_keyRegistrationSessionsByDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 keyRegistrationSessionsByDeviceID];
}

id objc_msgSend_keyRequestExchange(void *a1, const char *a2, ...)
{
  return _[a1 keyRequestExchange];
}

id objc_msgSend_keybagAssertionTimer(void *a1, const char *a2, ...)
{
  return _[a1 keybagAssertionTimer];
}

id objc_msgSend_keychainDataForQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keychainDataForQuery:");
}

id objc_msgSend_keychainDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keychainDevices:");
}

id objc_msgSend_keysWithAKSTokens(void *a1, const char *a2, ...)
{
  return _[a1 keysWithAKSTokens];
}

id objc_msgSend_kind(void *a1, const char *a2, ...)
{
  return _[a1 kind];
}

id objc_msgSend_kvoObservingKeys(void *a1, const char *a2, ...)
{
  return _[a1 kvoObservingKeys];
}

id objc_msgSend_lastActivityAdvertisement(void *a1, const char *a2, ...)
{
  return _[a1 lastActivityAdvertisement];
}

id objc_msgSend_lastAdvertisementOptions(void *a1, const char *a2, ...)
{
  return _[a1 lastAdvertisementOptions];
}

id objc_msgSend_lastAdvertisementPayload(void *a1, const char *a2, ...)
{
  return _[a1 lastAdvertisementPayload];
}

id objc_msgSend_lastCounter(void *a1, const char *a2, ...)
{
  return _[a1 lastCounter];
}

id objc_msgSend_lastDisconnectError(void *a1, const char *a2, ...)
{
  return _[a1 lastDisconnectError];
}

id objc_msgSend_lastLockedByRelock(void *a1, const char *a2, ...)
{
  return _[a1 lastLockedByRelock];
}

id objc_msgSend_lastName(void *a1, const char *a2, ...)
{
  return _[a1 lastName];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastProxyState(void *a1, const char *a2, ...)
{
  return _[a1 lastProxyState];
}

id objc_msgSend_lastSeenWatchDate(void *a1, const char *a2, ...)
{
  return _[a1 lastSeenWatchDate];
}

id objc_msgSend_lastSleepType(void *a1, const char *a2, ...)
{
  return _[a1 lastSleepType];
}

id objc_msgSend_lastSuccessfulDevice(void *a1, const char *a2, ...)
{
  return _[a1 lastSuccessfulDevice];
}

id objc_msgSend_lastUnlockDate(void *a1, const char *a2, ...)
{
  return _[a1 lastUnlockDate];
}

id objc_msgSend_lastUnlockedByWatch(void *a1, const char *a2, ...)
{
  return _[a1 lastUnlockedByWatch];
}

id objc_msgSend_lastUpdateTicks(void *a1, const char *a2, ...)
{
  return _[a1 lastUpdateTicks];
}

id objc_msgSend_lastUsedCounter(void *a1, const char *a2, ...)
{
  return _[a1 lastUsedCounter];
}

id objc_msgSend_laterDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "laterDate:");
}

id objc_msgSend_launchFilesToDefaultFolderWithURLs_defaultFolder_openURLs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchFilesToDefaultFolderWithURLs:defaultFolder:openURLs:completion:");
}

id objc_msgSend_launchMoveToAppShareSheetForFiles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchMoveToAppShareSheetForFiles:");
}

id objc_msgSend_layoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 layoutDirection];
}

id objc_msgSend_lePipeDevices(void *a1, const char *a2, ...)
{
  return _[a1 lePipeDevices];
}

id objc_msgSend_legacyEscrowData(void *a1, const char *a2, ...)
{
  return _[a1 legacyEscrowData];
}

id objc_msgSend_legacyLocalLongTermKey(void *a1, const char *a2, ...)
{
  return _[a1 legacyLocalLongTermKey];
}

id objc_msgSend_legacyRemoteLongTermKey(void *a1, const char *a2, ...)
{
  return _[a1 legacyRemoteLongTermKey];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_linkClient(void *a1, const char *a2, ...)
{
  return _[a1 linkClient];
}

id objc_msgSend_linkedToCurrentUser(void *a1, const char *a2, ...)
{
  return _[a1 linkedToCurrentUser];
}

id objc_msgSend_listener_didReceiveError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listener:didReceiveError:");
}

id objc_msgSend_listener_didReceiveNewRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listener:didReceiveNewRequest:");
}

id objc_msgSend_listener_informationDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listener:informationDidChange:");
}

id objc_msgSend_loadAirDrop(void *a1, const char *a2, ...)
{
  return _[a1 loadAirDrop];
}

id objc_msgSend_loadAllPersistedTransfers(void *a1, const char *a2, ...)
{
  return _[a1 loadAllPersistedTransfers];
}

id objc_msgSend_loadBatchImageCacheData_cacheKey_mapCacheHitImage_runProxy_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadBatchImageCacheData:cacheKey:mapCacheHitImage:runProxy:type:");
}

id objc_msgSend_loadBonjour(void *a1, const char *a2, ...)
{
  return _[a1 loadBonjour];
}

id objc_msgSend_loadClassroom(void *a1, const char *a2, ...)
{
  return _[a1 loadClassroom];
}

id objc_msgSend_loadCloudPairRetries(void *a1, const char *a2, ...)
{
  return _[a1 loadCloudPairRetries];
}

id objc_msgSend_loadCompanionIDs(void *a1, const char *a2, ...)
{
  return _[a1 loadCompanionIDs];
}

id objc_msgSend_loadConnected(void *a1, const char *a2, ...)
{
  return _[a1 loadConnected];
}

id objc_msgSend_loadDecryptionKeyDataRepresentationForDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadDecryptionKeyDataRepresentationForDeviceIdentifier:");
}

id objc_msgSend_loadDomains(void *a1, const char *a2, ...)
{
  return _[a1 loadDomains];
}

id objc_msgSend_loadEncryptionKeyDataRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 loadEncryptionKeyDataRepresentation];
}

id objc_msgSend_loadKeyDataRepresentationWithBaseDict_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadKeyDataRepresentationWithBaseDict:");
}

id objc_msgSend_loadLegacyWatchIDToCompanionIDMapping(void *a1, const char *a2, ...)
{
  return _[a1 loadLegacyWatchIDToCompanionIDMapping];
}

id objc_msgSend_loadLocalAttestedLTKIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 loadLocalAttestedLTKIfNecessary];
}

id objc_msgSend_loadLocalLTK(void *a1, const char *a2, ...)
{
  return _[a1 loadLocalLTK];
}

id objc_msgSend_loadLocalUniqueIDIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 loadLocalUniqueIDIfNeeded];
}

id objc_msgSend_loadLongTermKeys(void *a1, const char *a2, ...)
{
  return _[a1 loadLongTermKeys];
}

id objc_msgSend_loadManaged(void *a1, const char *a2, ...)
{
  return _[a1 loadManaged];
}

id objc_msgSend_loadODisk(void *a1, const char *a2, ...)
{
  return _[a1 loadODisk];
}

id objc_msgSend_loadPresentedBluetoothError(void *a1, const char *a2, ...)
{
  return _[a1 loadPresentedBluetoothError];
}

id objc_msgSend_loadPresentedWiFiError(void *a1, const char *a2, ...)
{
  return _[a1 loadPresentedWiFiError];
}

id objc_msgSend_loadPreviousSessionIDs(void *a1, const char *a2, ...)
{
  return _[a1 loadPreviousSessionIDs];
}

id objc_msgSend_loadRapport(void *a1, const char *a2, ...)
{
  return _[a1 loadRapport];
}

id objc_msgSend_loadRemoteLTKsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 loadRemoteLTKsIfNeeded];
}

id objc_msgSend_loadSharePoints(void *a1, const char *a2, ...)
{
  return _[a1 loadSharePoints];
}

id objc_msgSend_loadSidebarPrefsMonitor(void *a1, const char *a2, ...)
{
  return _[a1 loadSidebarPrefsMonitor];
}

id objc_msgSend_loadSuggestedPeers(void *a1, const char *a2, ...)
{
  return _[a1 loadSuggestedPeers];
}

id objc_msgSend_loadWatchIDsToPairingRecords(void *a1, const char *a2, ...)
{
  return _[a1 loadWatchIDsToPairingRecords];
}

id objc_msgSend_loadWindows(void *a1, const char *a2, ...)
{
  return _[a1 loadWindows];
}

id objc_msgSend_loadWorkgroups(void *a1, const char *a2, ...)
{
  return _[a1 loadWorkgroups];
}

id objc_msgSend_loadWrappingKeyData(void *a1, const char *a2, ...)
{
  return _[a1 loadWrappingKeyData];
}

id objc_msgSend_localAWDLInfo(void *a1, const char *a2, ...)
{
  return _[a1 localAWDLInfo];
}

id objc_msgSend_localAttestedLTK(void *a1, const char *a2, ...)
{
  return _[a1 localAttestedLTK];
}

id objc_msgSend_localDeviceController(void *a1, const char *a2, ...)
{
  return _[a1 localDeviceController];
}

id objc_msgSend_localDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 localDeviceID];
}

id objc_msgSend_localDeviceIDSRegistered(void *a1, const char *a2, ...)
{
  return _[a1 localDeviceIDSRegistered];
}

id objc_msgSend_localDeviceNeedsArming(void *a1, const char *a2, ...)
{
  return _[a1 localDeviceNeedsArming];
}

id objc_msgSend_localID(void *a1, const char *a2, ...)
{
  return _[a1 localID];
}

id objc_msgSend_localLTK(void *a1, const char *a2, ...)
{
  return _[a1 localLTK];
}

id objc_msgSend_localLongTermKey(void *a1, const char *a2, ...)
{
  return _[a1 localLongTermKey];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithFormat:");
}

id objc_msgSend_lockAuthSessions(void *a1, const char *a2, ...)
{
  return _[a1 lockAuthSessions];
}

id objc_msgSend_lockDevice(void *a1, const char *a2, ...)
{
  return _[a1 lockDevice];
}

id objc_msgSend_lockKeyBagIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 lockKeyBagIfNeeded];
}

id objc_msgSend_lockPairingSessions(void *a1, const char *a2, ...)
{
  return _[a1 lockPairingSessions];
}

id objc_msgSend_lockRegistrationSessionsByDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 lockRegistrationSessionsByDeviceID];
}

id objc_msgSend_lockSessionToCurrentProcess(void *a1, const char *a2, ...)
{
  return _[a1 lockSessionToCurrentProcess];
}

id objc_msgSend_lockState(void *a1, const char *a2, ...)
{
  return _[a1 lockState];
}

id objc_msgSend_lockStateChangedDate(void *a1, const char *a2, ...)
{
  return _[a1 lockStateChangedDate];
}

id objc_msgSend_lockedKeyBag(void *a1, const char *a2, ...)
{
  return _[a1 lockedKeyBag];
}

id objc_msgSend_locksWithAKSTokens(void *a1, const char *a2, ...)
{
  return _[a1 locksWithAKSTokens];
}

id objc_msgSend_logActivityType_sessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logActivityType:sessionID:");
}

id objc_msgSend_logAirDropDiscoveryInfoForNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logAirDropDiscoveryInfoForNode:");
}

id objc_msgSend_logAirDropSessionInfo(void *a1, const char *a2, ...)
{
  return _[a1 logAirDropSessionInfo];
}

id objc_msgSend_logAirDropTransactionForClientServer_beginEnd_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logAirDropTransactionForClientServer:beginEnd:count:");
}

id objc_msgSend_logAutoUnlockStart(void *a1, const char *a2, ...)
{
  return _[a1 logAutoUnlockStart];
}

id objc_msgSend_logBluetoothIDCache(void *a1, const char *a2, ...)
{
  return _[a1 logBluetoothIDCache];
}

id objc_msgSend_logClientReceived(void *a1, const char *a2, ...)
{
  return _[a1 logClientReceived];
}

id objc_msgSend_logClientSent(void *a1, const char *a2, ...)
{
  return _[a1 logClientSent];
}

id objc_msgSend_logDashboardHandoffRequestViaTransportLinkType_type_success_rtt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logDashboardHandoffRequestViaTransportLinkType:type:success:rtt:");
}

id objc_msgSend_logDevices(void *a1, const char *a2, ...)
{
  return _[a1 logDevices];
}

id objc_msgSend_logDiscoveryWithHash_rssi_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logDiscoveryWithHash:rssi:");
}

id objc_msgSend_logInterfaceUsedForSending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logInterfaceUsedForSending:");
}

id objc_msgSend_logMetrics(void *a1, const char *a2, ...)
{
  return _[a1 logMetrics];
}

id objc_msgSend_logMetricsWithSessionTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logMetricsWithSessionTime:");
}

id objc_msgSend_logProtoBufReceived_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logProtoBufReceived:");
}

id objc_msgSend_logProtoBufSend_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logProtoBufSend:");
}

id objc_msgSend_logReceiverBundleID_forAppProxy_andURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logReceiverBundleID:forAppProxy:andURL:");
}

id objc_msgSend_logReceiverBundleID_forURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logReceiverBundleID:forURL:");
}

id objc_msgSend_logResults(void *a1, const char *a2, ...)
{
  return _[a1 logResults];
}

id objc_msgSend_logTransfer(void *a1, const char *a2, ...)
{
  return _[a1 logTransfer];
}

id objc_msgSend_logWiFiPowerState(void *a1, const char *a2, ...)
{
  return _[a1 logWiFiPowerState];
}

id objc_msgSend_loginID(void *a1, const char *a2, ...)
{
  return _[a1 loginID];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _[a1 longLongValue];
}

id objc_msgSend_longTermKey(void *a1, const char *a2, ...)
{
  return _[a1 longTermKey];
}

id objc_msgSend_longTermKeyForDevice_modern_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longTermKeyForDevice:modern:");
}

id objc_msgSend_longTermKeyStorageFilePath(void *a1, const char *a2, ...)
{
  return _[a1 longTermKeyStorageFilePath];
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return _[a1 longValue];
}

id objc_msgSend_lostAllDevices(void *a1, const char *a2, ...)
{
  return _[a1 lostAllDevices];
}

id objc_msgSend_lostDeviceWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lostDeviceWithDevice:");
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_ltk(void *a1, const char *a2, ...)
{
  return _[a1 ltk];
}

id objc_msgSend_ltkExistsForKeyDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ltkExistsForKeyDevice:");
}

id objc_msgSend_ltkExistsForKeyDevice_updateLTKs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ltkExistsForKeyDevice:updateLTKs:");
}

id objc_msgSend_ltkHash(void *a1, const char *a2, ...)
{
  return _[a1 ltkHash];
}

id objc_msgSend_ltkHashForLocalLTK(void *a1, const char *a2, ...)
{
  return _[a1 ltkHashForLocalLTK];
}

id objc_msgSend_ltkHashMatches(void *a1, const char *a2, ...)
{
  return _[a1 ltkHashMatches];
}

id objc_msgSend_ltkID(void *a1, const char *a2, ...)
{
  return _[a1 ltkID];
}

id objc_msgSend_ltkInfoForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ltkInfoForDeviceID:");
}

id objc_msgSend_ltkInfoForDeviceID_modern_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ltkInfoForDeviceID:modern:");
}

id objc_msgSend_ltkKeyClassWithAttestation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ltkKeyClassWithAttestation:");
}

id objc_msgSend_ltkSyncStatusForDeviceID_hash_modern_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ltkSyncStatusForDeviceID:hash:modern:");
}

id objc_msgSend_ltkSyncing(void *a1, const char *a2, ...)
{
  return _[a1 ltkSyncing];
}

id objc_msgSend_ltkTimer(void *a1, const char *a2, ...)
{
  return _[a1 ltkTimer];
}

id objc_msgSend_ltkTimerRetryCount(void *a1, const char *a2, ...)
{
  return _[a1 ltkTimerRetryCount];
}

id objc_msgSend_ltksExist(void *a1, const char *a2, ...)
{
  return _[a1 ltksExist];
}

id objc_msgSend_macAddress(void *a1, const char *a2, ...)
{
  return _[a1 macAddress];
}

id objc_msgSend_machServiceName(void *a1, const char *a2, ...)
{
  return _[a1 machServiceName];
}

id objc_msgSend_magnetLinkTimer(void *a1, const char *a2, ...)
{
  return _[a1 magnetLinkTimer];
}

id objc_msgSend_magnetTransport(void *a1, const char *a2, ...)
{
  return _[a1 magnetTransport];
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _[a1 mainQueue];
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 mainRunLoop];
}

id objc_msgSend_mainThread(void *a1, const char *a2, ...)
{
  return _[a1 mainThread];
}

id objc_msgSend_makeActivatedConnection(void *a1, const char *a2, ...)
{
  return _[a1 makeActivatedConnection];
}

id objc_msgSend_makeDestinationDirectory(void *a1, const char *a2, ...)
{
  return _[a1 makeDestinationDirectory];
}

id objc_msgSend_makeDestinationDirectoryWithIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeDestinationDirectoryWithIdentifier:error:");
}

id objc_msgSend_manager_connectedToService_withFileHandle_acceptHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manager:connectedToService:withFileHandle:acceptHandler:");
}

id objc_msgSend_managerID(void *a1, const char *a2, ...)
{
  return _[a1 managerID];
}

id objc_msgSend_manateeAvailable(void *a1, const char *a2, ...)
{
  return _[a1 manateeAvailable];
}

id objc_msgSend_manateeState(void *a1, const char *a2, ...)
{
  return _[a1 manateeState];
}

id objc_msgSend_mappedContactIdentifierForContactIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mappedContactIdentifierForContactIdentifier:");
}

id objc_msgSend_masterChannel(void *a1, const char *a2, ...)
{
  return _[a1 masterChannel];
}

id objc_msgSend_matchedValue(void *a1, const char *a2, ...)
{
  return _[a1 matchedValue];
}

id objc_msgSend_maxPeople(void *a1, const char *a2, ...)
{
  return _[a1 maxPeople];
}

id objc_msgSend_maxTransferState(void *a1, const char *a2, ...)
{
  return _[a1 maxTransferState];
}

id objc_msgSend_maximumRangeOfUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumRangeOfUnit:");
}

id objc_msgSend_meCard(void *a1, const char *a2, ...)
{
  return _[a1 meCard];
}

id objc_msgSend_meDeviceFMFDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 meDeviceFMFDeviceID];
}

id objc_msgSend_meDeviceIDSDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 meDeviceIDSDeviceID];
}

id objc_msgSend_meDeviceIsMe(void *a1, const char *a2, ...)
{
  return _[a1 meDeviceIsMe];
}

id objc_msgSend_meDeviceName(void *a1, const char *a2, ...)
{
  return _[a1 meDeviceName];
}

id objc_msgSend_medBubbleDelayed(void *a1, const char *a2, ...)
{
  return _[a1 medBubbleDelayed];
}

id objc_msgSend_mediaAccessControlSetting(void *a1, const char *a2, ...)
{
  return _[a1 mediaAccessControlSetting];
}

id objc_msgSend_mediaRemoteServiceProxy(void *a1, const char *a2, ...)
{
  return _[a1 mediaRemoteServiceProxy];
}

id objc_msgSend_mediaRouteID(void *a1, const char *a2, ...)
{
  return _[a1 mediaRouteID];
}

id objc_msgSend_mediaRouteIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 mediaRouteIdentifier];
}

id objc_msgSend_mediaTransferInfoFromInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaTransferInfoFromInfo:");
}

id objc_msgSend_mediumBubbleVersion(void *a1, const char *a2, ...)
{
  return _[a1 mediumBubbleVersion];
}

id objc_msgSend_messageIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 messageIdentifier];
}

id objc_msgSend_messageTimeout(void *a1, const char *a2, ...)
{
  return _[a1 messageTimeout];
}

id objc_msgSend_messageTimeoutFromServer(void *a1, const char *a2, ...)
{
  return _[a1 messageTimeoutFromServer];
}

id objc_msgSend_messageType(void *a1, const char *a2, ...)
{
  return _[a1 messageType];
}

id objc_msgSend_messageWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageWithData:");
}

id objc_msgSend_messageWithIdentifier_didSendWithSuccess_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageWithIdentifier:didSendWithSuccess:error:");
}

id objc_msgSend_metaData(void *a1, const char *a2, ...)
{
  return _[a1 metaData];
}

id objc_msgSend_metaInfo(void *a1, const char *a2, ...)
{
  return _[a1 metaInfo];
}

id objc_msgSend_methodForSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "methodForSelector:");
}

id objc_msgSend_metricDates(void *a1, const char *a2, ...)
{
  return _[a1 metricDates];
}

id objc_msgSend_metrics(void *a1, const char *a2, ...)
{
  return _[a1 metrics];
}

id objc_msgSend_migrateEscrowDataIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 migrateEscrowDataIfNeeded];
}

id objc_msgSend_migrateLegacyCompanionIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "migrateLegacyCompanionIDs:");
}

id objc_msgSend_migrateOldKeysIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 migrateOldKeysIfNeeded];
}

id objc_msgSend_minPersonImageSize(void *a1, const char *a2, ...)
{
  return _[a1 minPersonImageSize];
}

id objc_msgSend_minRequiredTransferState(void *a1, const char *a2, ...)
{
  return _[a1 minRequiredTransferState];
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_minute(void *a1, const char *a2, ...)
{
  return _[a1 minute];
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _[a1 model];
}

id objc_msgSend_modelCode(void *a1, const char *a2, ...)
{
  return _[a1 modelCode];
}

id objc_msgSend_modelDescription(void *a1, const char *a2, ...)
{
  return _[a1 modelDescription];
}

id objc_msgSend_modelIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 modelIdentifier];
}

id objc_msgSend_modelIdentifierForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modelIdentifierForDeviceID:");
}

id objc_msgSend_modelName(void *a1, const char *a2, ...)
{
  return _[a1 modelName];
}

id objc_msgSend_modelNameForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modelNameForDevice:");
}

id objc_msgSend_modernSignedDevices(void *a1, const char *a2, ...)
{
  return _[a1 modernSignedDevices];
}

id objc_msgSend_modernSyncedDictionaryForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modernSyncedDictionaryForDevice:");
}

id objc_msgSend_modificationDataForDeviceID_modern_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modificationDataForDeviceID:modern:");
}

id objc_msgSend_monogramImageDataForContact_style_diameter_monogramsAsFlatImages_isContactImage_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monogramImageDataForContact:style:diameter:monogramsAsFlatImages:isContactImage:");
}

id objc_msgSend_monogramImageDataForContactSync_style_diameter_monogramsAsFlatImages_replyHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monogramImageDataForContactSync:style:diameter:monogramsAsFlatImages:replyHandler:");
}

id objc_msgSend_monogramImagesForMultipleContactsSync_style_diameter_monogramAsFlatImages_replyHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monogramImagesForMultipleContactsSync:style:diameter:monogramAsFlatImages:replyHandler:");
}

id objc_msgSend_month(void *a1, const char *a2, ...)
{
  return _[a1 month];
}

id objc_msgSend_motionDetector(void *a1, const char *a2, ...)
{
  return _[a1 motionDetector];
}

id objc_msgSend_mount(void *a1, const char *a2, ...)
{
  return _[a1 mount];
}

id objc_msgSend_mountPointsForServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mountPointsForServer:");
}

id objc_msgSend_mountedVolumeURLsIncludingResourceValuesForKeys_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mountedVolumeURLsIncludingResourceValuesForKeys:options:");
}

id objc_msgSend_moveFile_toDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveFile:toDestination:");
}

id objc_msgSend_moveFilesToDestination(void *a1, const char *a2, ...)
{
  return _[a1 moveFilesToDestination];
}

id objc_msgSend_moveItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveItemAtURL:toURL:error:");
}

id objc_msgSend_moveToAppEnabled(void *a1, const char *a2, ...)
{
  return _[a1 moveToAppEnabled];
}

id objc_msgSend_multipleUsersLoggedIn(void *a1, const char *a2, ...)
{
  return _[a1 multipleUsersLoggedIn];
}

id objc_msgSend_mutableBytes(void *a1, const char *a2, ...)
{
  return _[a1 mutableBytes];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_myAccount(void *a1, const char *a2, ...)
{
  return _[a1 myAccount];
}

id objc_msgSend_myAltDSID(void *a1, const char *a2, ...)
{
  return _[a1 myAltDSID];
}

id objc_msgSend_myAppleID(void *a1, const char *a2, ...)
{
  return _[a1 myAppleID];
}

id objc_msgSend_myAppleIDCommonName(void *a1, const char *a2, ...)
{
  return _[a1 myAppleIDCommonName];
}

id objc_msgSend_myAppleIDEmailAddresses(void *a1, const char *a2, ...)
{
  return _[a1 myAppleIDEmailAddresses];
}

id objc_msgSend_myAppleIDEmailHash(void *a1, const char *a2, ...)
{
  return _[a1 myAppleIDEmailHash];
}

id objc_msgSend_myAppleIDIsManaged(void *a1, const char *a2, ...)
{
  return _[a1 myAppleIDIsManaged];
}

id objc_msgSend_myAppleIDPhoneHash(void *a1, const char *a2, ...)
{
  return _[a1 myAppleIDPhoneHash];
}

id objc_msgSend_myAppleIDPhoneNumbers(void *a1, const char *a2, ...)
{
  return _[a1 myAppleIDPhoneNumbers];
}

id objc_msgSend_myAppleIDValidationRecord(void *a1, const char *a2, ...)
{
  return _[a1 myAppleIDValidationRecord];
}

id objc_msgSend_myIPAddress(void *a1, const char *a2, ...)
{
  return _[a1 myIPAddress];
}

id objc_msgSend_myMediumHashes(void *a1, const char *a2, ...)
{
  return _[a1 myMediumHashes];
}

id objc_msgSend_myShortHashesForAirDrop(void *a1, const char *a2, ...)
{
  return _[a1 myShortHashesForAirDrop];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nameForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameForDevice:");
}

id objc_msgSend_navBarTitle(void *a1, const char *a2, ...)
{
  return _[a1 navBarTitle];
}

id objc_msgSend_nearFieldController(void *a1, const char *a2, ...)
{
  return _[a1 nearFieldController];
}

id objc_msgSend_nearbyReceiverIsEligible(void *a1, const char *a2, ...)
{
  return _[a1 nearbyReceiverIsEligible];
}

id objc_msgSend_nearbyReceiverRequiresConfirmationWithContactID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nearbyReceiverRequiresConfirmationWithContactID:completionHandler:");
}

id objc_msgSend_nearbyServiceDevicesChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nearbyServiceDevicesChanged:");
}

id objc_msgSend_needsAWDL(void *a1, const char *a2, ...)
{
  return _[a1 needsAWDL];
}

id objc_msgSend_needsArming(void *a1, const char *a2, ...)
{
  return _[a1 needsArming];
}

id objc_msgSend_needsImageData(void *a1, const char *a2, ...)
{
  return _[a1 needsImageData];
}

id objc_msgSend_needsKeyboard(void *a1, const char *a2, ...)
{
  return _[a1 needsKeyboard];
}

id objc_msgSend_needsKeyboardOnly(void *a1, const char *a2, ...)
{
  return _[a1 needsKeyboardOnly];
}

id objc_msgSend_needsNewImage(void *a1, const char *a2, ...)
{
  return _[a1 needsNewImage];
}

id objc_msgSend_needsOffWristBeforePairedUnlock(void *a1, const char *a2, ...)
{
  return _[a1 needsOffWristBeforePairedUnlock];
}

id objc_msgSend_needsRenewal(void *a1, const char *a2, ...)
{
  return _[a1 needsRenewal];
}

id objc_msgSend_needsSetup(void *a1, const char *a2, ...)
{
  return _[a1 needsSetup];
}

id objc_msgSend_needsStrictMotionCheck(void *a1, const char *a2, ...)
{
  return _[a1 needsStrictMotionCheck];
}

id objc_msgSend_needsUpdate(void *a1, const char *a2, ...)
{
  return _[a1 needsUpdate];
}

id objc_msgSend_neighborhoodNodes(void *a1, const char *a2, ...)
{
  return _[a1 neighborhoodNodes];
}

id objc_msgSend_netAgentUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "netAgentUUID:");
}

id objc_msgSend_netServiceBrowser(void *a1, const char *a2, ...)
{
  return _[a1 netServiceBrowser];
}

id objc_msgSend_netbiosName(void *a1, const char *a2, ...)
{
  return _[a1 netbiosName];
}

id objc_msgSend_networkBrowser_nodesChangedForParent_protocol_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkBrowser:nodesChangedForParent:protocol:error:");
}

id objc_msgSend_networkBufferSpaceAvailable(void *a1, const char *a2, ...)
{
  return _[a1 networkBufferSpaceAvailable];
}

id objc_msgSend_networkEjecter_event_withResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkEjecter:event:withResults:");
}

id objc_msgSend_networkOperation_event_withResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkOperation:event:withResults:");
}

id objc_msgSend_networkResolver_event_withResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkResolver:event:withResults:");
}

id objc_msgSend_newDecryptionKeyFromDataRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newDecryptionKeyFromDataRepresentation:");
}

id objc_msgSend_newDiscoverableMode(void *a1, const char *a2, ...)
{
  return _[a1 newDiscoverableMode];
}

id objc_msgSend_newEncryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 newEncryptionKey];
}

id objc_msgSend_nextCheckDate(void *a1, const char *a2, ...)
{
  return _[a1 nextCheckDate];
}

id objc_msgSend_nextState(void *a1, const char *a2, ...)
{
  return _[a1 nextState];
}

id objc_msgSend_nfcTagReaderUIActivateWithEndpoint_params_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nfcTagReaderUIActivateWithEndpoint:params:completion:");
}

id objc_msgSend_niRangingPeer(void *a1, const char *a2, ...)
{
  return _[a1 niRangingPeer];
}

id objc_msgSend_niSession(void *a1, const char *a2, ...)
{
  return _[a1 niSession];
}

id objc_msgSend_nickname(void *a1, const char *a2, ...)
{
  return _[a1 nickname];
}

id objc_msgSend_nodeBrowser_nodesChangedForParent_protocol_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nodeBrowser:nodesChangedForParent:protocol:error:");
}

id objc_msgSend_nodes(void *a1, const char *a2, ...)
{
  return _[a1 nodes];
}

id objc_msgSend_nonce(void *a1, const char *a2, ...)
{
  return _[a1 nonce];
}

id objc_msgSend_notification(void *a1, const char *a2, ...)
{
  return _[a1 notification];
}

id objc_msgSend_notificationBubble(void *a1, const char *a2, ...)
{
  return _[a1 notificationBubble];
}

id objc_msgSend_notificationDidDismiss_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationDidDismiss:reason:");
}

id objc_msgSend_notificationDurationSecs(void *a1, const char *a2, ...)
{
  return _[a1 notificationDurationSecs];
}

id objc_msgSend_notificationHomePodTypeForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationHomePodTypeForDevice:");
}

id objc_msgSend_notificationInfo(void *a1, const char *a2, ...)
{
  return _[a1 notificationInfo];
}

id objc_msgSend_notificationModel(void *a1, const char *a2, ...)
{
  return _[a1 notificationModel];
}

id objc_msgSend_notificationTicks(void *a1, const char *a2, ...)
{
  return _[a1 notificationTicks];
}

id objc_msgSend_notificationTimer(void *a1, const char *a2, ...)
{
  return _[a1 notificationTimer];
}

id objc_msgSend_notificationType(void *a1, const char *a2, ...)
{
  return _[a1 notificationType];
}

id objc_msgSend_notificiationDidDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificiationDidDismiss:");
}

id objc_msgSend_notified(void *a1, const char *a2, ...)
{
  return _[a1 notified];
}

id objc_msgSend_notifiedForProxy(void *a1, const char *a2, ...)
{
  return _[a1 notifiedForProxy];
}

id objc_msgSend_notifyBluetoothSample_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyBluetoothSample:");
}

id objc_msgSend_notifyClient(void *a1, const char *a2, ...)
{
  return _[a1 notifyClient];
}

id objc_msgSend_notifyClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyClient:");
}

id objc_msgSend_notifyClient_withResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyClient:withResults:");
}

id objc_msgSend_notifyClientAboutEject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyClientAboutEject:");
}

id objc_msgSend_notifyClientAboutResolve_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyClientAboutResolve:");
}

id objc_msgSend_notifyClientAboutWorkgroups(void *a1, const char *a2, ...)
{
  return _[a1 notifyClientAboutWorkgroups];
}

id objc_msgSend_notifyClientForEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyClientForEvent:");
}

id objc_msgSend_notifyClientForEvent_withProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyClientForEvent:withProperty:");
}

id objc_msgSend_notifyClientIfDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyClientIfDone:");
}

id objc_msgSend_notifyClientOfBytesCopied_timeRemaining_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyClientOfBytesCopied:timeRemaining:");
}

id objc_msgSend_notifyClientWithPosixError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyClientWithPosixError:");
}

id objc_msgSend_notifyDelegate(void *a1, const char *a2, ...)
{
  return _[a1 notifyDelegate];
}

id objc_msgSend_notifyDelegateWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegateWithError:");
}

id objc_msgSend_notifyObserverOfAttemptBeganWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyObserverOfAttemptBeganWithDevice:");
}

id objc_msgSend_notifyObserverOfEnabledDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyObserverOfEnabledDevice:");
}

id objc_msgSend_notifyObserverOfFailedToEnableDevice_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyObserverOfFailedToEnableDevice:error:");
}

id objc_msgSend_notifyObserverOfKeyDeviceLockWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyObserverOfKeyDeviceLockWithDevice:");
}

id objc_msgSend_notifyObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyObservers:");
}

id objc_msgSend_notifyObserversOfRemovedTransfer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyObserversOfRemovedTransfer:");
}

id objc_msgSend_notifyObserversOfUnlockCompletionWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyObserversOfUnlockCompletionWithDevice:");
}

id objc_msgSend_notifyObserversOfUnlockFailureWithResults_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyObserversOfUnlockFailureWithResults:error:");
}

id objc_msgSend_notifyObserversOfUpdatedTransfer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyObserversOfUpdatedTransfer:");
}

id objc_msgSend_notifyProgress_force_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyProgress:force:");
}

id objc_msgSend_notifyStashStateWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyStashStateWithError:");
}

id objc_msgSend_notifyStreamRequestWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyStreamRequestWithError:");
}

id objc_msgSend_notifyUnlockStateWithState_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyUnlockStateWithState:error:");
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_nq_awdlNetworkStarted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nq_awdlNetworkStarted");
}

id objc_msgSend_nq_handleWiFiRequestInvalidated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nq_handleWiFiRequestInvalidated");
}

id objc_msgSend_nq_handleWiFiRequestStartedWithStartAWDLHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nq_handleWiFiRequestStartedWithStartAWDLHandler:");
}

id objc_msgSend_nsuuid(void *a1, const char *a2, ...)
{
  return _[a1 nsuuid];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLong:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedChar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedChar:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_numberWithUnsignedShort_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedShort:");
}

id objc_msgSend_obfuscatedMediumHashDataForStrings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "obfuscatedMediumHashDataForStrings:");
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objectKey(void *a1, const char *a2, ...)
{
  return _[a1 objectKey];
}

id objc_msgSend_observerTable(void *a1, const char *a2, ...)
{
  return _[a1 observerTable];
}

id objc_msgSend_observers(void *a1, const char *a2, ...)
{
  return _[a1 observers];
}

id objc_msgSend_odiskMountPointsForServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "odiskMountPointsForServer:");
}

id objc_msgSend_odiskNodes(void *a1, const char *a2, ...)
{
  return _[a1 odiskNodes];
}

id objc_msgSend_odiskNodesForDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "odiskNodesForDomain:");
}

id objc_msgSend_oneHundredContinue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oneHundredContinue:");
}

id objc_msgSend_onlyRanging(void *a1, const char *a2, ...)
{
  return _[a1 onlyRanging];
}

id objc_msgSend_onqueue_autoUnlockEligibleDevices_deviceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onqueue_autoUnlockEligibleDevices:deviceType:");
}

id objc_msgSend_onqueue_bluetoothDeviceIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onqueue_bluetoothDeviceIdentifiers");
}

id objc_msgSend_onqueue_bluetoothIDForIDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onqueue_bluetoothIDForIDSID:");
}

id objc_msgSend_onqueue_connectionInvalidated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onqueue_connectionInvalidated:");
}

id objc_msgSend_onqueue_devicesWithLTKs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onqueue_devicesWithLTKs");
}

id objc_msgSend_onqueue_enabledAutoUnlockDevicesUsingCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onqueue_enabledAutoUnlockDevicesUsingCache:");
}

id objc_msgSend_opMode(void *a1, const char *a2, ...)
{
  return _[a1 opMode];
}

id objc_msgSend_open(void *a1, const char *a2, ...)
{
  return _[a1 open];
}

id objc_msgSend_openAppURLs(void *a1, const char *a2, ...)
{
  return _[a1 openAppURLs];
}

id objc_msgSend_openCompletedItemsWithFilesApp(void *a1, const char *a2, ...)
{
  return _[a1 openCompletedItemsWithFilesApp];
}

id objc_msgSend_openLinks(void *a1, const char *a2, ...)
{
  return _[a1 openLinks];
}

id objc_msgSend_openNode_forProtocol_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openNode:forProtocol:flags:");
}

id objc_msgSend_openSensitiveURL_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openSensitiveURL:withOptions:");
}

id objc_msgSend_openSetupURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openSetupURL:");
}

id objc_msgSend_openStreams(void *a1, const char *a2, ...)
{
  return _[a1 openStreams];
}

id objc_msgSend_openURL_configuration_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:configuration:completionHandler:");
}

id objc_msgSend_openURL_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:withOptions:");
}

id objc_msgSend_openURLs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURLs:");
}

id objc_msgSend_openURLs_bundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURLs:bundleIdentifier:");
}

id objc_msgSend_operatingSystemVersion(void *a1, const char *a2, ...)
{
  return _[a1 operatingSystemVersion];
}

id objc_msgSend_operationToOpenResource_usingApplication_uniqueDocumentIdentifier_userInfo_delegate_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationToOpenResource:usingApplication:uniqueDocumentIdentifier:userInfo:delegate:");
}

id objc_msgSend_opticalDisk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "opticalDisk:");
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _[a1 options];
}

id objc_msgSend_originator(void *a1, const char *a2, ...)
{
  return _[a1 originator];
}

id objc_msgSend_osVersion(void *a1, const char *a2, ...)
{
  return _[a1 osVersion];
}

id objc_msgSend_otherProviderCancel(void *a1, const char *a2, ...)
{
  return _[a1 otherProviderCancel];
}

id objc_msgSend_otherSessionCancel(void *a1, const char *a2, ...)
{
  return _[a1 otherSessionCancel];
}

id objc_msgSend_otherStuff(void *a1, const char *a2, ...)
{
  return _[a1 otherStuff];
}

id objc_msgSend_outgoingResponseIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 outgoingResponseIdentifier];
}

id objc_msgSend_overrideScreenOff(void *a1, const char *a2, ...)
{
  return _[a1 overrideScreenOff];
}

id objc_msgSend_overrideScreenOffRescanInterval(void *a1, const char *a2, ...)
{
  return _[a1 overrideScreenOffRescanInterval];
}

id objc_msgSend_paired(void *a1, const char *a2, ...)
{
  return _[a1 paired];
}

id objc_msgSend_pairedDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 pairedDeviceID];
}

id objc_msgSend_pairedWatchLockState(void *a1, const char *a2, ...)
{
  return _[a1 pairedWatchLockState];
}

id objc_msgSend_pairedWatchSupportsRelock(void *a1, const char *a2, ...)
{
  return _[a1 pairedWatchSupportsRelock];
}

id objc_msgSend_pairedWatchWristState(void *a1, const char *a2, ...)
{
  return _[a1 pairedWatchWristState];
}

id objc_msgSend_pairingAgentDeviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 pairingAgentDeviceIdentifier];
}

id objc_msgSend_pairingCompatibilityState(void *a1, const char *a2, ...)
{
  return _[a1 pairingCompatibilityState];
}

id objc_msgSend_pairingID(void *a1, const char *a2, ...)
{
  return _[a1 pairingID];
}

id objc_msgSend_pairingIDForWatchID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pairingIDForWatchID:");
}

id objc_msgSend_pairingRequestIsValidForDeviceID_messageContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pairingRequestIsValidForDeviceID:messageContext:");
}

id objc_msgSend_pairingStorePath(void *a1, const char *a2, ...)
{
  return _[a1 pairingStorePath];
}

id objc_msgSend_parseAskRequest(void *a1, const char *a2, ...)
{
  return _[a1 parseAskRequest];
}

id objc_msgSend_parseAskResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseAskResponse:");
}

id objc_msgSend_parseDiscoverRequest(void *a1, const char *a2, ...)
{
  return _[a1 parseDiscoverRequest];
}

id objc_msgSend_parseDiscoverResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseDiscoverResponse:");
}

id objc_msgSend_parseDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseDomain:");
}

id objc_msgSend_parseHeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseHeader:");
}

id objc_msgSend_passcode(void *a1, const char *a2, ...)
{
  return _[a1 passcode];
}

id objc_msgSend_passcodeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 passcodeEnabled];
}

id objc_msgSend_passwordPickerStart_bundleID_localizedAppName_unlocalizedAppName_associatedDomains_appIconData_deviceName_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "passwordPickerStart:bundleID:localizedAppName:unlocalizedAppName:associatedDomains:appIconData:deviceName:completion:");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathExistsInPlaceholderInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathExistsInPlaceholderInfo:");
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _[a1 pathExtension];
}

id objc_msgSend_payload(void *a1, const char *a2, ...)
{
  return _[a1 payload];
}

id objc_msgSend_payloadFilterData(void *a1, const char *a2, ...)
{
  return _[a1 payloadFilterData];
}

id objc_msgSend_payloadWithData_version_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "payloadWithData:version:");
}

id objc_msgSend_peerDevice(void *a1, const char *a2, ...)
{
  return _[a1 peerDevice];
}

id objc_msgSend_peerDisconnectedHandler(void *a1, const char *a2, ...)
{
  return _[a1 peerDisconnectedHandler];
}

id objc_msgSend_peerFoundInterval(void *a1, const char *a2, ...)
{
  return _[a1 peerFoundInterval];
}

id objc_msgSend_peerIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 peerIdentifier];
}

id objc_msgSend_peerInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerInRange:");
}

id objc_msgSend_peerList(void *a1, const char *a2, ...)
{
  return _[a1 peerList];
}

id objc_msgSend_peerListFromAWDLInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peerListFromAWDLInfo:");
}

id objc_msgSend_peerMacAddress(void *a1, const char *a2, ...)
{
  return _[a1 peerMacAddress];
}

id objc_msgSend_pendingContentDurationSecs(void *a1, const char *a2, ...)
{
  return _[a1 pendingContentDurationSecs];
}

id objc_msgSend_pendingContentTicks(void *a1, const char *a2, ...)
{
  return _[a1 pendingContentTicks];
}

id objc_msgSend_pendingFollowUpItemsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingFollowUpItemsWithCompletion:");
}

id objc_msgSend_performActionWithBundleProxy_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performActionWithBundleProxy:completionHandler:");
}

id objc_msgSend_performBlockForAllProgresses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockForAllProgresses:");
}

id objc_msgSend_performRegistrationIfNecessaryForLockSession_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performRegistrationIfNecessaryForLockSession:error:");
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:");
}

id objc_msgSend_performUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performUpdate:");
}

id objc_msgSend_persistedTransfersBaseURL(void *a1, const char *a2, ...)
{
  return _[a1 persistedTransfersBaseURL];
}

id objc_msgSend_personHasAirDropEligibleDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personHasAirDropEligibleDevice:");
}

id objc_msgSend_personID(void *a1, const char *a2, ...)
{
  return _[a1 personID];
}

id objc_msgSend_personId(void *a1, const char *a2, ...)
{
  return _[a1 personId];
}

id objc_msgSend_personInfo(void *a1, const char *a2, ...)
{
  return _[a1 personInfo];
}

id objc_msgSend_personInfoCache(void *a1, const char *a2, ...)
{
  return _[a1 personInfoCache];
}

id objc_msgSend_personInfoChanged_flags_atag_cname_phash_ehash_nhash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personInfoChanged:flags:atag:cname:phash:ehash:nhash:");
}

id objc_msgSend_personInfoWithEmailOrPhone_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personInfoWithEmailOrPhone:completion:");
}

id objc_msgSend_personInfoWithEmailOrPhone_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personInfoWithEmailOrPhone:queue:completion:");
}

id objc_msgSend_perspectiveDataForActionPlatterWithTitle_tintColor_replyHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "perspectiveDataForActionPlatterWithTitle:tintColor:replyHandler:");
}

id objc_msgSend_perspectiveDataForActivityMoreListEntryForActivityTitle_labelColor_activityCategory_replyHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "perspectiveDataForActivityMoreListEntryForActivityTitle:labelColor:activityCategory:replyHandler:");
}

id objc_msgSend_perspectiveDataForNameLabelWithString_textColor_maxNumberOfLines_isAirDrop_ignoreNameWrapping_replyHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "perspectiveDataForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:replyHandler:");
}

id objc_msgSend_perspectiveDataForNearbyBadgeWithCount_replyHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "perspectiveDataForNearbyBadgeWithCount:replyHandler:");
}

id objc_msgSend_perspectiveDataForUIActivityTitle_textColor_replyHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "perspectiveDataForUIActivityTitle:textColor:replyHandler:");
}

id objc_msgSend_phoneNumber(void *a1, const char *a2, ...)
{
  return _[a1 phoneNumber];
}

id objc_msgSend_phoneNumberWithStringValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneNumberWithStringValue:");
}

id objc_msgSend_phoneNumbers(void *a1, const char *a2, ...)
{
  return _[a1 phoneNumbers];
}

id objc_msgSend_phoneNumbersForAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneNumbersForAppleID:");
}

id objc_msgSend_phoneUnlockDate(void *a1, const char *a2, ...)
{
  return _[a1 phoneUnlockDate];
}

id objc_msgSend_pid(void *a1, const char *a2, ...)
{
  return _[a1 pid];
}

id objc_msgSend_pillUpdated(void *a1, const char *a2, ...)
{
  return _[a1 pillUpdated];
}

id objc_msgSend_pkData(void *a1, const char *a2, ...)
{
  return _[a1 pkData];
}

id objc_msgSend_placeholder(void *a1, const char *a2, ...)
{
  return _[a1 placeholder];
}

id objc_msgSend_placeholderDevice(void *a1, const char *a2, ...)
{
  return _[a1 placeholderDevice];
}

id objc_msgSend_platformStore(void *a1, const char *a2, ...)
{
  return _[a1 platformStore];
}

id objc_msgSend_policySession(void *a1, const char *a2, ...)
{
  return _[a1 policySession];
}

id objc_msgSend_port(void *a1, const char *a2, ...)
{
  return _[a1 port];
}

id objc_msgSend_portNumber(void *a1, const char *a2, ...)
{
  return _[a1 portNumber];
}

id objc_msgSend_possibleActions(void *a1, const char *a2, ...)
{
  return _[a1 possibleActions];
}

id objc_msgSend_postBeganUnlockingNotification(void *a1, const char *a2, ...)
{
  return _[a1 postBeganUnlockingNotification];
}

id objc_msgSend_postNotification(void *a1, const char *a2, ...)
{
  return _[a1 postNotification];
}

id objc_msgSend_postNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotification:");
}

id objc_msgSend_postNotification_forNeighborhood_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotification:forNeighborhood:");
}

id objc_msgSend_postNotification_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotification:userInfo:");
}

id objc_msgSend_postNotificationForTransferStatus_progress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationForTransferStatus:progress:");
}

id objc_msgSend_postNotificationIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 postNotificationIfNeeded];
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_postNotificationName_object_userInfo_deliverImmediately_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:deliverImmediately:");
}

id objc_msgSend_postSuggestionNotification(void *a1, const char *a2, ...)
{
  return _[a1 postSuggestionNotification];
}

id objc_msgSend_powerOn(void *a1, const char *a2, ...)
{
  return _[a1 powerOn];
}

id objc_msgSend_predicateForContactsMatchingEmailAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForContactsMatchingEmailAddress:");
}

id objc_msgSend_predicateForContactsMatchingPhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForContactsMatchingPhoneNumber:");
}

id objc_msgSend_predicateForContactsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForContactsWithIdentifiers:");
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithFormat:");
}

id objc_msgSend_preferVibrantIcons(void *a1, const char *a2, ...)
{
  return _[a1 preferVibrantIcons];
}

id objc_msgSend_preferredChannel(void *a1, const char *a2, ...)
{
  return _[a1 preferredChannel];
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 preferredContentSizeCategory];
}

id objc_msgSend_preferredRemoteLTKForDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 preferredRemoteLTKForDeviceID];
}

id objc_msgSend_prefillDefaultsForGenuineCheckIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 prefillDefaultsForGenuineCheckIfNecessary];
}

id objc_msgSend_prefsChanged(void *a1, const char *a2, ...)
{
  return _[a1 prefsChanged];
}

id objc_msgSend_prepareForAcceptWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForAcceptWithCompletion:");
}

id objc_msgSend_prepareForNewEncryptionRequest(void *a1, const char *a2, ...)
{
  return _[a1 prepareForNewEncryptionRequest];
}

id objc_msgSend_prepareOrPerformOpenAction(void *a1, const char *a2, ...)
{
  return _[a1 prepareOrPerformOpenAction];
}

id objc_msgSend_preprocessItems_forClientBundleID_receiverIdentifier_receiverSupportsURLs_receiverIsUnknown_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "preprocessItems:forClientBundleID:receiverIdentifier:receiverSupportsURLs:receiverIsUnknown:");
}

id objc_msgSend_presentedBluetoothError(void *a1, const char *a2, ...)
{
  return _[a1 presentedBluetoothError];
}

id objc_msgSend_presentedWiFiError(void *a1, const char *a2, ...)
{
  return _[a1 presentedWiFiError];
}

id objc_msgSend_preventExitForLocaleIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 preventExitForLocaleIfNeeded];
}

id objc_msgSend_preventIdleSleepAssertion(void *a1, const char *a2, ...)
{
  return _[a1 preventIdleSleepAssertion];
}

id objc_msgSend_previousKeyIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 previousKeyIdentifier];
}

id objc_msgSend_previousSessionIDs(void *a1, const char *a2, ...)
{
  return _[a1 previousSessionIDs];
}

id objc_msgSend_prewarmAutoUnlock(void *a1, const char *a2, ...)
{
  return _[a1 prewarmAutoUnlock];
}

id objc_msgSend_prewarmIdleStartDate(void *a1, const char *a2, ...)
{
  return _[a1 prewarmIdleStartDate];
}

id objc_msgSend_prewarmIdleTime(void *a1, const char *a2, ...)
{
  return _[a1 prewarmIdleTime];
}

id objc_msgSend_prewarmStart(void *a1, const char *a2, ...)
{
  return _[a1 prewarmStart];
}

id objc_msgSend_primaryAppleIDIsHSA2(void *a1, const char *a2, ...)
{
  return _[a1 primaryAppleIDIsHSA2];
}

id objc_msgSend_primaryClient(void *a1, const char *a2, ...)
{
  return _[a1 primaryClient];
}

id objc_msgSend_printerNodes(void *a1, const char *a2, ...)
{
  return _[a1 printerNodes];
}

id objc_msgSend_privateContactDiscoveryEnabled(void *a1, const char *a2, ...)
{
  return _[a1 privateContactDiscoveryEnabled];
}

id objc_msgSend_privateKeyPersistentReference(void *a1, const char *a2, ...)
{
  return _[a1 privateKeyPersistentReference];
}

id objc_msgSend_problemFlags(void *a1, const char *a2, ...)
{
  return _[a1 problemFlags];
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 processIdentifier];
}

id objc_msgSend_processNetworkStatistics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processNetworkStatistics:");
}

id objc_msgSend_processTXTRecordUpdate_rdlen_rdata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processTXTRecordUpdate:rdlen:rdata:");
}

id objc_msgSend_productBuildVersion(void *a1, const char *a2, ...)
{
  return _[a1 productBuildVersion];
}

id objc_msgSend_productName(void *a1, const char *a2, ...)
{
  return _[a1 productName];
}

id objc_msgSend_productVersion(void *a1, const char *a2, ...)
{
  return _[a1 productVersion];
}

id objc_msgSend_progressEventForRecordID_withResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progressEventForRecordID:withResults:");
}

id objc_msgSend_prompt(void *a1, const char *a2, ...)
{
  return _[a1 prompt];
}

id objc_msgSend_promptForApproval(void *a1, const char *a2, ...)
{
  return _[a1 promptForApproval];
}

id objc_msgSend_promptingForApproval(void *a1, const char *a2, ...)
{
  return _[a1 promptingForApproval];
}

id objc_msgSend_propertyForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyForKey:");
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListWithData:options:format:error:");
}

id objc_msgSend_protectionSpace(void *a1, const char *a2, ...)
{
  return _[a1 protectionSpace];
}

id objc_msgSend_protobufDataFromRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "protobufDataFromRequest:");
}

id objc_msgSend_protocol(void *a1, const char *a2, ...)
{
  return _[a1 protocol];
}

id objc_msgSend_proxPairProximityEstimator(void *a1, const char *a2, ...)
{
  return _[a1 proxPairProximityEstimator];
}

id objc_msgSend_proximityClient_dismissContentForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClient:dismissContentForDevice:");
}

id objc_msgSend_proximityClient_provideContent_forDevice_force_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClient:provideContent:forDevice:force:");
}

id objc_msgSend_proximityClient_stopSuppressingDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClient:stopSuppressingDevice:");
}

id objc_msgSend_proximityClient_suppressDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClient:suppressDevice:");
}

id objc_msgSend_proximityClient_updateContent_forDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClient:updateContent:forDevice:");
}

id objc_msgSend_proximityClientDeviceDidUntriggerHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClientDeviceDidUntriggerHandler:");
}

id objc_msgSend_proximityClientDeviceEnteredImmediate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClientDeviceEnteredImmediate:");
}

id objc_msgSend_proximityClientDeviceEnteredNearby_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClientDeviceEnteredNearby:");
}

id objc_msgSend_proximityClientDeviceExitedImmediate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClientDeviceExitedImmediate:");
}

id objc_msgSend_proximityClientDeviceExitedNearby_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClientDeviceExitedNearby:");
}

id objc_msgSend_proximityClientDeviceUpdated_rssi_state_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClientDeviceUpdated:rssi:state:");
}

id objc_msgSend_proximityClientDeviceWasDismissedHandler_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClientDeviceWasDismissedHandler:reason:");
}

id objc_msgSend_proximityClientDeviceWasSelectedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClientDeviceWasSelectedHandler:");
}

id objc_msgSend_proximityClientDeviceWillTriggerHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClientDeviceWillTriggerHandler:");
}

id objc_msgSend_proximityClientStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClientStart:");
}

id objc_msgSend_proximityClientStop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClientStop:");
}

id objc_msgSend_proximityClientUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityClientUpdate:");
}

id objc_msgSend_proximityDeviceDidTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityDeviceDidTrigger:");
}

id objc_msgSend_proximityEstimatorWithProximityInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proximityEstimatorWithProximityInfo:");
}

id objc_msgSend_proxyBluetoothID(void *a1, const char *a2, ...)
{
  return _[a1 proxyBluetoothID];
}

id objc_msgSend_proxyConnectionTime(void *a1, const char *a2, ...)
{
  return _[a1 proxyConnectionTime];
}

id objc_msgSend_proxyDeviceModel(void *a1, const char *a2, ...)
{
  return _[a1 proxyDeviceModel];
}

id objc_msgSend_proxyDiscoverTime(void *a1, const char *a2, ...)
{
  return _[a1 proxyDiscoverTime];
}

id objc_msgSend_proxyDiscoveryTime(void *a1, const char *a2, ...)
{
  return _[a1 proxyDiscoveryTime];
}

id objc_msgSend_proxyErrorCode(void *a1, const char *a2, ...)
{
  return _[a1 proxyErrorCode];
}

id objc_msgSend_proxyNotAvailableForUnlock(void *a1, const char *a2, ...)
{
  return _[a1 proxyNotAvailableForUnlock];
}

id objc_msgSend_proxyRSSI(void *a1, const char *a2, ...)
{
  return _[a1 proxyRSSI];
}

id objc_msgSend_proxySessions(void *a1, const char *a2, ...)
{
  return _[a1 proxySessions];
}

id objc_msgSend_ptsScore(void *a1, const char *a2, ...)
{
  return _[a1 ptsScore];
}

id objc_msgSend_publish(void *a1, const char *a2, ...)
{
  return _[a1 publish];
}

id objc_msgSend_publishWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publishWithOptions:");
}

id objc_msgSend_pushDateForPreventExitForLocaleReason_expirationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushDateForPreventExitForLocaleReason:expirationDate:");
}

id objc_msgSend_pushPreventionDateForReason_newDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushPreventionDateForReason:newDate:");
}

id objc_msgSend_quarantineFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quarantineFile:");
}

id objc_msgSend_queryInteractionsUsingPredicate_sortDescriptors_limit_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryInteractionsUsingPredicate:sortDescriptors:limit:error:");
}

id objc_msgSend_queryItems(void *a1, const char *a2, ...)
{
  return _[a1 queryItems];
}

id objc_msgSend_queryKey_type_domain_recordType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryKey:type:domain:recordType:");
}

id objc_msgSend_queryVerifiedIdentityForEmailOrPhone_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryVerifiedIdentityForEmailOrPhone:queue:completion:");
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return _[a1 queue];
}

id objc_msgSend_queueAvailableHandler(void *a1, const char *a2, ...)
{
  return _[a1 queueAvailableHandler];
}

id objc_msgSend_queuedBlocks(void *a1, const char *a2, ...)
{
  return _[a1 queuedBlocks];
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_rangeOfCharacterFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:");
}

id objc_msgSend_rangeOfCharacterFromSet_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:options:");
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_rangeOfString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:options:");
}

id objc_msgSend_rangeable(void *a1, const char *a2, ...)
{
  return _[a1 rangeable];
}

id objc_msgSend_rangingCompletedHandler(void *a1, const char *a2, ...)
{
  return _[a1 rangingCompletedHandler];
}

id objc_msgSend_rangingDisabled(void *a1, const char *a2, ...)
{
  return _[a1 rangingDisabled];
}

id objc_msgSend_rangingErrorString(void *a1, const char *a2, ...)
{
  return _[a1 rangingErrorString];
}

id objc_msgSend_rangingInterval(void *a1, const char *a2, ...)
{
  return _[a1 rangingInterval];
}

id objc_msgSend_rangingKey(void *a1, const char *a2, ...)
{
  return _[a1 rangingKey];
}

id objc_msgSend_rangingKeyForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangingKeyForDeviceID:");
}

id objc_msgSend_rangingPeer(void *a1, const char *a2, ...)
{
  return _[a1 rangingPeer];
}

id objc_msgSend_rangingStart(void *a1, const char *a2, ...)
{
  return _[a1 rangingStart];
}

id objc_msgSend_rangingTimedOut(void *a1, const char *a2, ...)
{
  return _[a1 rangingTimedOut];
}

id objc_msgSend_rangingTimeout(void *a1, const char *a2, ...)
{
  return _[a1 rangingTimeout];
}

id objc_msgSend_rankedGlobalSuggestionsFromContext_contactsOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rankedGlobalSuggestionsFromContext:contactsOnly:");
}

id objc_msgSend_rapportIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 rapportIdentifier];
}

id objc_msgSend_rawFiles(void *a1, const char *a2, ...)
{
  return _[a1 rawFiles];
}

id objc_msgSend_read(void *a1, const char *a2, ...)
{
  return _[a1 read];
}

id objc_msgSend_read_maxLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "read:maxLength:");
}

id objc_msgSend_readClientStream(void *a1, const char *a2, ...)
{
  return _[a1 readClientStream];
}

id objc_msgSend_readData_length_fromStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readData:length:fromStream:");
}

id objc_msgSend_readIncomingChunk(void *a1, const char *a2, ...)
{
  return _[a1 readIncomingChunk];
}

id objc_msgSend_readKey(void *a1, const char *a2, ...)
{
  return _[a1 readKey];
}

id objc_msgSend_readNonce(void *a1, const char *a2, ...)
{
  return _[a1 readNonce];
}

id objc_msgSend_readingIntentWithURL_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingIntentWithURL:options:");
}

id objc_msgSend_rebuildDB(void *a1, const char *a2, ...)
{
  return _[a1 rebuildDB];
}

id objc_msgSend_receivedAWDLInfo(void *a1, const char *a2, ...)
{
  return _[a1 receivedAWDLInfo];
}

id objc_msgSend_receivedAdvertisement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "receivedAdvertisement:");
}

id objc_msgSend_receivedAuthPromptResponse(void *a1, const char *a2, ...)
{
  return _[a1 receivedAuthPromptResponse];
}

id objc_msgSend_receivedExchangeRequest(void *a1, const char *a2, ...)
{
  return _[a1 receivedExchangeRequest];
}

id objc_msgSend_receivedFrameHandler(void *a1, const char *a2, ...)
{
  return _[a1 receivedFrameHandler];
}

id objc_msgSend_receivedFramePeerHandler(void *a1, const char *a2, ...)
{
  return _[a1 receivedFramePeerHandler];
}

id objc_msgSend_receivedSetupACK(void *a1, const char *a2, ...)
{
  return _[a1 receivedSetupACK];
}

id objc_msgSend_receivedTokenACK(void *a1, const char *a2, ...)
{
  return _[a1 receivedTokenACK];
}

id objc_msgSend_receiverDeviceModelNameSuggestsMacPlatform(void *a1, const char *a2, ...)
{
  return _[a1 receiverDeviceModelNameSuggestsMacPlatform];
}

id objc_msgSend_recentNodes(void *a1, const char *a2, ...)
{
  return _[a1 recentNodes];
}

id objc_msgSend_recipientMetadataWithContactID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recipientMetadataWithContactID:completion:");
}

id objc_msgSend_recipients(void *a1, const char *a2, ...)
{
  return _[a1 recipients];
}

id objc_msgSend_reconciledDiscoverableMode(void *a1, const char *a2, ...)
{
  return _[a1 reconciledDiscoverableMode];
}

id objc_msgSend_reenableProxCardType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reenableProxCardType:");
}

id objc_msgSend_refreshAutoUnlockDeviceCache(void *a1, const char *a2, ...)
{
  return _[a1 refreshAutoUnlockDeviceCache];
}

id objc_msgSend_regenerateTemporarySelfIdentityWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "regenerateTemporarySelfIdentityWithCompletion:");
}

id objc_msgSend_registerAllInterfaces(void *a1, const char *a2, ...)
{
  return _[a1 registerAllInterfaces];
}

id objc_msgSend_registerConnectedStreams(void *a1, const char *a2, ...)
{
  return _[a1 registerConnectedStreams];
}

id objc_msgSend_registerManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerManager:");
}

id objc_msgSend_registerObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerObserver:");
}

id objc_msgSend_registerRemotePeerIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 registerRemotePeerIfNecessary];
}

id objc_msgSend_registerRequestID_options_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerRequestID:options:handler:");
}

id objc_msgSend_registrationStatus(void *a1, const char *a2, ...)
{
  return _[a1 registrationStatus];
}

id objc_msgSend_relativeLocation(void *a1, const char *a2, ...)
{
  return _[a1 relativeLocation];
}

id objc_msgSend_relativePath(void *a1, const char *a2, ...)
{
  return _[a1 relativePath];
}

id objc_msgSend_releaseIdleSleepAssertion(void *a1, const char *a2, ...)
{
  return _[a1 releaseIdleSleepAssertion];
}

id objc_msgSend_releaseKeyBagAssertion(void *a1, const char *a2, ...)
{
  return _[a1 releaseKeyBagAssertion];
}

id objc_msgSend_releaseKeybagAssertion(void *a1, const char *a2, ...)
{
  return _[a1 releaseKeybagAssertion];
}

id objc_msgSend_releaseSandboxExtensions(void *a1, const char *a2, ...)
{
  return _[a1 releaseSandboxExtensions];
}

id objc_msgSend_reloadPairingRecordsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 reloadPairingRecordsIfNeeded];
}

id objc_msgSend_remoteAWDLInfo(void *a1, const char *a2, ...)
{
  return _[a1 remoteAWDLInfo];
}

id objc_msgSend_remoteDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 remoteDeviceID];
}

id objc_msgSend_remoteDeviceLocked(void *a1, const char *a2, ...)
{
  return _[a1 remoteDeviceLocked];
}

id objc_msgSend_remoteInteractionSessionRemoteTextEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteInteractionSessionRemoteTextEvent:");
}

id objc_msgSend_remoteInteractionSessionTextSessionDidBegin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteInteractionSessionTextSessionDidBegin:");
}

id objc_msgSend_remoteInteractionSessionTextSessionDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteInteractionSessionTextSessionDidChange:");
}

id objc_msgSend_remoteInteractionSessionTextSessionDidEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteInteractionSessionTextSessionDidEnd:");
}

id objc_msgSend_remoteLTK(void *a1, const char *a2, ...)
{
  return _[a1 remoteLTK];
}

id objc_msgSend_remoteLTKEntryForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteLTKEntryForDeviceID:");
}

id objc_msgSend_remoteLTKForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteLTKForDeviceID:");
}

id objc_msgSend_remoteLTKHash(void *a1, const char *a2, ...)
{
  return _[a1 remoteLTKHash];
}

id objc_msgSend_remoteLTKHashForDeviceID_modern_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteLTKHashForDeviceID:modern:");
}

id objc_msgSend_remoteLTKList(void *a1, const char *a2, ...)
{
  return _[a1 remoteLTKList];
}

id objc_msgSend_remoteLTKStorageFilePath(void *a1, const char *a2, ...)
{
  return _[a1 remoteLTKStorageFilePath];
}

id objc_msgSend_remoteLTKs(void *a1, const char *a2, ...)
{
  return _[a1 remoteLTKs];
}

id objc_msgSend_remoteLongTermKey(void *a1, const char *a2, ...)
{
  return _[a1 remoteLongTermKey];
}

id objc_msgSend_remoteObjectInterface(void *a1, const char *a2, ...)
{
  return _[a1 remoteObjectInterface];
}

id objc_msgSend_remoteObjectProxy(void *a1, const char *a2, ...)
{
  return _[a1 remoteObjectProxy];
}

id objc_msgSend_remoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteObjectProxyWithErrorHandler:");
}

id objc_msgSend_remotePeer(void *a1, const char *a2, ...)
{
  return _[a1 remotePeer];
}

id objc_msgSend_remoteTextEventHandler(void *a1, const char *a2, ...)
{
  return _[a1 remoteTextEventHandler];
}

id objc_msgSend_removeAirDropPerson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAirDropPerson:");
}

id objc_msgSend_removeAirDropPersonInternal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAirDropPersonInternal:");
}

id objc_msgSend_removeAllDelegates(void *a1, const char *a2, ...)
{
  return _[a1 removeAllDelegates];
}

id objc_msgSend_removeAllDeliveredNotifications(void *a1, const char *a2, ...)
{
  return _[a1 removeAllDeliveredNotifications];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeAllRemoteLTKsOnSignOut(void *a1, const char *a2, ...)
{
  return _[a1 removeAllRemoteLTKsOnSignOut];
}

id objc_msgSend_removeAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAppleID:");
}

id objc_msgSend_removeAuthorizationRequestNotification(void *a1, const char *a2, ...)
{
  return _[a1 removeAuthorizationRequestNotification];
}

id objc_msgSend_removeAutoUnlockNotification(void *a1, const char *a2, ...)
{
  return _[a1 removeAutoUnlockNotification];
}

id objc_msgSend_removeClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeClient:");
}

id objc_msgSend_removeClientAlerts(void *a1, const char *a2, ...)
{
  return _[a1 removeClientAlerts];
}

id objc_msgSend_removeClientForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeClientForIdentifier:");
}

id objc_msgSend_removeClientWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeClientWithToken:");
}

id objc_msgSend_removeCorruptedRemoteLTKIfNecessaryForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCorruptedRemoteLTKIfNecessaryForDeviceID:");
}

id objc_msgSend_removeDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDelegate:");
}

id objc_msgSend_removeDeliveredNotificationsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDeliveredNotificationsWithIdentifiers:");
}

id objc_msgSend_removeDeviceIDMissingSessionKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDeviceIDMissingSessionKey:");
}

id objc_msgSend_removeFileFromPlaceholderList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFileFromPlaceholderList:");
}

id objc_msgSend_removeFileIconsFromProperties(void *a1, const char *a2, ...)
{
  return _[a1 removeFileIconsFromProperties];
}

id objc_msgSend_removeFromKeychain(void *a1, const char *a2, ...)
{
  return _[a1 removeFromKeychain];
}

id objc_msgSend_removeFromRunLoop_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromRunLoop:forMode:");
}

id objc_msgSend_removeInvalidNodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeInvalidNodes:");
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtPath:error:");
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _[a1 removeLastObject];
}

id objc_msgSend_removeNearbyDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeNearbyDelegate:");
}

id objc_msgSend_removeNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeNode:");
}

id objc_msgSend_removeNodesForPerson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeNodesForPerson:");
}

id objc_msgSend_removeNotificationObservers(void *a1, const char *a2, ...)
{
  return _[a1 removeNotificationObservers];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsAtIndexes:");
}

id objc_msgSend_removeObjectsForKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsForKeys:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_forKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:");
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:context:");
}

id objc_msgSend_removeObserver_forKeyPaths_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPaths:context:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeObservers(void *a1, const char *a2, ...)
{
  return _[a1 removeObservers];
}

id objc_msgSend_removePairingRecordForWatchID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePairingRecordForWatchID:");
}

id objc_msgSend_removePendingNotificationRequestsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePendingNotificationRequestsWithIdentifiers:");
}

id objc_msgSend_removePreventExitForLocaleReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePreventExitForLocaleReason:");
}

id objc_msgSend_removeReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeReason:");
}

id objc_msgSend_removeRemoteLTKForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeRemoteLTKForDeviceID:");
}

id objc_msgSend_removeService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeService:");
}

id objc_msgSend_removeService_type_domain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeService:type:domain:");
}

id objc_msgSend_removeServiceClientForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeServiceClientForIdentifier:");
}

id objc_msgSend_removeTransfer_shouldCleanup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTransfer:shouldCleanup:");
}

id objc_msgSend_removeUnusedPlaceholderFiles(void *a1, const char *a2, ...)
{
  return _[a1 removeUnusedPlaceholderFiles];
}

id objc_msgSend_renewCredentialsForAccount_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renewCredentialsForAccount:completion:");
}

id objc_msgSend_repairCloudPairing(void *a1, const char *a2, ...)
{
  return _[a1 repairCloudPairing];
}

id objc_msgSend_repairDevice_flags_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "repairDevice:flags:completion:");
}

id objc_msgSend_replaceContentForRequestWithIdentifier_replacementContent_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceContentForRequestWithIdentifier:replacementContent:completionHandler:");
}

id objc_msgSend_replaceIconValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceIconValue:forKey:");
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return _[a1 request];
}

id objc_msgSend_requestAuthorizationWithOptions_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestAuthorizationWithOptions:completionHandler:");
}

id objc_msgSend_requestCreatedDate(void *a1, const char *a2, ...)
{
  return _[a1 requestCreatedDate];
}

id objc_msgSend_requestData(void *a1, const char *a2, ...)
{
  return _[a1 requestData];
}

id objc_msgSend_requestFromProtobufData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestFromProtobufData:");
}

id objc_msgSend_requestID(void *a1, const char *a2, ...)
{
  return _[a1 requestID];
}

id objc_msgSend_requestIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 requestIdentifier];
}

id objc_msgSend_requestMessageHandler(void *a1, const char *a2, ...)
{
  return _[a1 requestMessageHandler];
}

id objc_msgSend_requestPostOrUpdate_info_mediumVariant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestPostOrUpdate:info:mediumVariant:");
}

id objc_msgSend_requestRelock(void *a1, const char *a2, ...)
{
  return _[a1 requestRelock];
}

id objc_msgSend_requestRemove_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestRemove:withReason:");
}

id objc_msgSend_requestRemoveAll(void *a1, const char *a2, ...)
{
  return _[a1 requestRemoveAll];
}

id objc_msgSend_requestSSID(void *a1, const char *a2, ...)
{
  return _[a1 requestSSID];
}

id objc_msgSend_requestTokenForTopic_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestTokenForTopic:identifier:");
}

id objc_msgSend_requestUpdate_info_mediumVariant_canPostNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestUpdate:info:mediumVariant:canPostNotification:");
}

id objc_msgSend_requestWithIdentifier_content_trigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithIdentifier:content:trigger:");
}

id objc_msgSend_requestWithInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithInfo:completion:");
}

id objc_msgSend_requestWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithURL:");
}

id objc_msgSend_requireAWDL(void *a1, const char *a2, ...)
{
  return _[a1 requireAWDL];
}

id objc_msgSend_requiredAgentDomain_agentType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requiredAgentDomain:agentType:");
}

id objc_msgSend_requiresUnlockedUI(void *a1, const char *a2, ...)
{
  return _[a1 requiresUnlockedUI];
}

id objc_msgSend_rescanIntervalScreenOff(void *a1, const char *a2, ...)
{
  return _[a1 rescanIntervalScreenOff];
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return _[a1 reset];
}

id objc_msgSend_resetAndClearState(void *a1, const char *a2, ...)
{
  return _[a1 resetAndClearState];
}

id objc_msgSend_resetAppleWatchExisted(void *a1, const char *a2, ...)
{
  return _[a1 resetAppleWatchExisted];
}

id objc_msgSend_resetMeCardWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetMeCardWithReason:");
}

id objc_msgSend_resetReadState(void *a1, const char *a2, ...)
{
  return _[a1 resetReadState];
}

id objc_msgSend_resetReason(void *a1, const char *a2, ...)
{
  return _[a1 resetReason];
}

id objc_msgSend_resetSession(void *a1, const char *a2, ...)
{
  return _[a1 resetSession];
}

id objc_msgSend_resetSetupState(void *a1, const char *a2, ...)
{
  return _[a1 resetSetupState];
}

id objc_msgSend_resetStashState(void *a1, const char *a2, ...)
{
  return _[a1 resetStashState];
}

id objc_msgSend_resetState(void *a1, const char *a2, ...)
{
  return _[a1 resetState];
}

id objc_msgSend_resetTicks(void *a1, const char *a2, ...)
{
  return _[a1 resetTicks];
}

id objc_msgSend_resignRemoteLTKForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resignRemoteLTKForDeviceID:");
}

id objc_msgSend_resolve(void *a1, const char *a2, ...)
{
  return _[a1 resolve];
}

id objc_msgSend_resourceURL(void *a1, const char *a2, ...)
{
  return _[a1 resourceURL];
}

id objc_msgSend_responseEndDate(void *a1, const char *a2, ...)
{
  return _[a1 responseEndDate];
}

id objc_msgSend_responseHandler(void *a1, const char *a2, ...)
{
  return _[a1 responseHandler];
}

id objc_msgSend_responseInfo(void *a1, const char *a2, ...)
{
  return _[a1 responseInfo];
}

id objc_msgSend_responseMessageInternalHandler(void *a1, const char *a2, ...)
{
  return _[a1 responseMessageInternalHandler];
}

id objc_msgSend_responseTimeout(void *a1, const char *a2, ...)
{
  return _[a1 responseTimeout];
}

id objc_msgSend_responseTimeoutFromServer(void *a1, const char *a2, ...)
{
  return _[a1 responseTimeoutFromServer];
}

id objc_msgSend_responseTimer(void *a1, const char *a2, ...)
{
  return _[a1 responseTimer];
}

id objc_msgSend_restart(void *a1, const char *a2, ...)
{
  return _[a1 restart];
}

id objc_msgSend_restartAfterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restartAfterDelay:");
}

id objc_msgSend_restartAssertionTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartAssertionTimer];
}

id objc_msgSend_restartBonjourNameMonitor(void *a1, const char *a2, ...)
{
  return _[a1 restartBonjourNameMonitor];
}

id objc_msgSend_restartConfirmationTimer_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restartConfirmationTimer:error:");
}

id objc_msgSend_restartKeybagAssertionTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartKeybagAssertionTimer];
}

id objc_msgSend_restartLTKTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartLTKTimer];
}

id objc_msgSend_restartLongTermKeyTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restartLongTermKeyTimer:");
}

id objc_msgSend_restartPublishTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartPublishTimer];
}

id objc_msgSend_restartResponseTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restartResponseTimer:");
}

id objc_msgSend_restartScanTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restartScanTimer:");
}

id objc_msgSend_restartStashTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartStashTimer];
}

id objc_msgSend_restartStateTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartStateTimer];
}

id objc_msgSend_restartUnlockTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restartUnlockTimer:");
}

id objc_msgSend_results(void *a1, const char *a2, ...)
{
  return _[a1 results];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_resumeForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resumeForReason:");
}

id objc_msgSend_resumeHandoffAdvertisingIfAppropriate(void *a1, const char *a2, ...)
{
  return _[a1 resumeHandoffAdvertisingIfAppropriate];
}

id objc_msgSend_retainArguments(void *a1, const char *a2, ...)
{
  return _[a1 retainArguments];
}

id objc_msgSend_retriedSetup(void *a1, const char *a2, ...)
{
  return _[a1 retriedSetup];
}

id objc_msgSend_retriggerProximitySetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retriggerProximitySetup:");
}

id objc_msgSend_retryInstallBluetoothMonitor(void *a1, const char *a2, ...)
{
  return _[a1 retryInstallBluetoothMonitor];
}

id objc_msgSend_retryRequestForError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retryRequestForError:");
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 reverseObjectEnumerator];
}

id objc_msgSend_riServerContentForDevice_backgroundAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "riServerContentForDevice:backgroundAction:");
}

id objc_msgSend_riServerPostIfNeeded_backgroundAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "riServerPostIfNeeded:backgroundAction:");
}

id objc_msgSend_riServerRemove_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "riServerRemove:");
}

id objc_msgSend_riServerUpdate_info_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "riServerUpdate:info:");
}

id objc_msgSend_riServerUpdate_rtiData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "riServerUpdate:rtiData:");
}

id objc_msgSend_route(void *a1, const char *a2, ...)
{
  return _[a1 route];
}

id objc_msgSend_rpIdentity(void *a1, const char *a2, ...)
{
  return _[a1 rpIdentity];
}

id objc_msgSend_rssi(void *a1, const char *a2, ...)
{
  return _[a1 rssi];
}

id objc_msgSend_rssiChangeDetection(void *a1, const char *a2, ...)
{
  return _[a1 rssiChangeDetection];
}

id objc_msgSend_rssiEstimate(void *a1, const char *a2, ...)
{
  return _[a1 rssiEstimate];
}

id objc_msgSend_rssiThreshold(void *a1, const char *a2, ...)
{
  return _[a1 rssiThreshold];
}

id objc_msgSend_run(void *a1, const char *a2, ...)
{
  return _[a1 run];
}

id objc_msgSend_runWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runWithConfiguration:");
}

id objc_msgSend_runningAsSetupUser(void *a1, const char *a2, ...)
{
  return _[a1 runningAsSetupUser];
}

id objc_msgSend_safariBundleID(void *a1, const char *a2, ...)
{
  return _[a1 safariBundleID];
}

id objc_msgSend_saveAccount_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveAccount:withCompletionHandler:");
}

id objc_msgSend_saveCompletedItemsToiCloudDrive(void *a1, const char *a2, ...)
{
  return _[a1 saveCompletedItemsToiCloudDrive];
}

id objc_msgSend_saveDecryptionKeyDataRepresentation_forDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveDecryptionKeyDataRepresentation:forDeviceIdentifier:");
}

id objc_msgSend_saveEncryptionKeyDataRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveEncryptionKeyDataRepresentation:");
}

id objc_msgSend_saveKeyDataRepresentation_withBaseDict_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveKeyDataRepresentation:withBaseDict:");
}

id objc_msgSend_saveLongTermKeys(void *a1, const char *a2, ...)
{
  return _[a1 saveLongTermKeys];
}

id objc_msgSend_savePresentedBluetoothError(void *a1, const char *a2, ...)
{
  return _[a1 savePresentedBluetoothError];
}

id objc_msgSend_savePresentedWiFiError(void *a1, const char *a2, ...)
{
  return _[a1 savePresentedWiFiError];
}

id objc_msgSend_saveRemoteLTKs(void *a1, const char *a2, ...)
{
  return _[a1 saveRemoteLTKs];
}

id objc_msgSend_saveToDefaultFolderWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveToDefaultFolderWithError:");
}

id objc_msgSend_saveVerifiedAccount_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveVerifiedAccount:withCompletionHandler:");
}

id objc_msgSend_saveWatchIDsToPairingRecords(void *a1, const char *a2, ...)
{
  return _[a1 saveWatchIDsToPairingRecords];
}

id objc_msgSend_scanAutoUnlockDevices(void *a1, const char *a2, ...)
{
  return _[a1 scanAutoUnlockDevices];
}

id objc_msgSend_scanCache(void *a1, const char *a2, ...)
{
  return _[a1 scanCache];
}

id objc_msgSend_scanErrorString(void *a1, const char *a2, ...)
{
  return _[a1 scanErrorString];
}

id objc_msgSend_scanPhoneIDs(void *a1, const char *a2, ...)
{
  return _[a1 scanPhoneIDs];
}

id objc_msgSend_scanRate(void *a1, const char *a2, ...)
{
  return _[a1 scanRate];
}

id objc_msgSend_scanRateOverride(void *a1, const char *a2, ...)
{
  return _[a1 scanRateOverride];
}

id objc_msgSend_scanState(void *a1, const char *a2, ...)
{
  return _[a1 scanState];
}

id objc_msgSend_scanStateChangedHandler(void *a1, const char *a2, ...)
{
  return _[a1 scanStateChangedHandler];
}

id objc_msgSend_scanTimer(void *a1, const char *a2, ...)
{
  return _[a1 scanTimer];
}

id objc_msgSend_scanWatchIDs(void *a1, const char *a2, ...)
{
  return _[a1 scanWatchIDs];
}

id objc_msgSend_scanner(void *a1, const char *a2, ...)
{
  return _[a1 scanner];
}

id objc_msgSend_scheduleBrowser(void *a1, const char *a2, ...)
{
  return _[a1 scheduleBrowser];
}

id objc_msgSend_scheduleInRunLoop_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleInRunLoop:forMode:");
}

id objc_msgSend_scheduleOperation(void *a1, const char *a2, ...)
{
  return _[a1 scheduleOperation];
}

id objc_msgSend_scheduleWiFiRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleWiFiRequest:");
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return _[a1 scheme];
}

id objc_msgSend_screenLocked(void *a1, const char *a2, ...)
{
  return _[a1 screenLocked];
}

id objc_msgSend_screenOn(void *a1, const char *a2, ...)
{
  return _[a1 screenOn];
}

id objc_msgSend_screenSaverActive(void *a1, const char *a2, ...)
{
  return _[a1 screenSaverActive];
}

id objc_msgSend_screenStateSupportsAirDrop(void *a1, const char *a2, ...)
{
  return _[a1 screenStateSupportsAirDrop];
}

id objc_msgSend_sd_connectionBundleID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sd_connectionBundleID");
}

id objc_msgSend_sd_description(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sd_description");
}

id objc_msgSend_searchForBrowsableDomains(void *a1, const char *a2, ...)
{
  return _[a1 searchForBrowsableDomains];
}

id objc_msgSend_searchForServicesOfType_inDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchForServicesOfType:inDomain:");
}

id objc_msgSend_secTrustRef(void *a1, const char *a2, ...)
{
  return _[a1 secTrustRef];
}

id objc_msgSend_second(void *a1, const char *a2, ...)
{
  return _[a1 second];
}

id objc_msgSend_secret(void *a1, const char *a2, ...)
{
  return _[a1 secret];
}

id objc_msgSend_secureConnectionEndDate(void *a1, const char *a2, ...)
{
  return _[a1 secureConnectionEndDate];
}

id objc_msgSend_secureConnectionStartDate(void *a1, const char *a2, ...)
{
  return _[a1 secureConnectionStartDate];
}

id objc_msgSend_secureRangingKeyID(void *a1, const char *a2, ...)
{
  return _[a1 secureRangingKeyID];
}

id objc_msgSend_securityLevel(void *a1, const char *a2, ...)
{
  return _[a1 securityLevel];
}

id objc_msgSend_securityLevelForAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "securityLevelForAccount:");
}

id objc_msgSend_securityManager(void *a1, const char *a2, ...)
{
  return _[a1 securityManager];
}

id objc_msgSend_selectedAction(void *a1, const char *a2, ...)
{
  return _[a1 selectedAction];
}

id objc_msgSend_selectedApplication(void *a1, const char *a2, ...)
{
  return _[a1 selectedApplication];
}

id objc_msgSend_send(void *a1, const char *a2, ...)
{
  return _[a1 send];
}

id objc_msgSend_sendAWDLInfo(void *a1, const char *a2, ...)
{
  return _[a1 sendAWDLInfo];
}

id objc_msgSend_sendAWDLInfoData_type_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendAWDLInfoData:type:completionHandler:");
}

id objc_msgSend_sendActivityPayloadRequestMessageToDevice_withRequestRecord_withDestinationDevice_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "sendActivityPayloadRequestMessageToDevice:withRequestRecord:withDestinationDevice:completionHandler:");
}

id objc_msgSend_sendActivityPayloadRequestToDeviceIdentifier_withAdvertisementPayload_command_timeout_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "sendActivityPayloadRequestToDeviceIdentifier:withAdvertisementPayload:command:timeout:completionHandler:");
}

id objc_msgSend_sendActivityPayloadWithAdvertisementData_forAdvertisementPayload_activityIdentifier_activityPayload_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "sendActivityPayloadWithAdvertisementData:forAdvertisementPayload:activityIdentifier:activityPayload:");
}

id objc_msgSend_sendAskResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendAskResponse:");
}

id objc_msgSend_sendAuthPromptImageDataIfReady_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendAuthPromptImageDataIfReady:");
}

id objc_msgSend_sendAuthPromptRequestWithImageHash_appName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendAuthPromptRequestWithImageHash:appName:");
}

id objc_msgSend_sendAuthPromptResponseWithData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendAuthPromptResponseWithData:error:");
}

id objc_msgSend_sendAutoUnlockPayload_toDevice_type_sessionID_queueOneID_timeout_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendAutoUnlockPayload:toDevice:type:sessionID:queueOneID:timeout:completion:");
}

id objc_msgSend_sendClassALongTermKeyResponse_sessionID_errorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendClassALongTermKeyResponse:sessionID:errorCode:");
}

id objc_msgSend_sendConfirmationACK(void *a1, const char *a2, ...)
{
  return _[a1 sendConfirmationACK];
}

id objc_msgSend_sendCreateSecretWithStepData_sessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCreateSecretWithStepData:sessionID:");
}

id objc_msgSend_sendData_bleDevice_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:bleDevice:completionHandler:");
}

id objc_msgSend_sendData_bleDevice_direct_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:bleDevice:direct:completionHandler:");
}

id objc_msgSend_sendData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:completion:");
}

id objc_msgSend_sendData_type_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:type:completionHandler:");
}

id objc_msgSend_sendData_type_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:type:errorHandler:");
}

id objc_msgSend_sendDataDirect_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDataDirect:completion:");
}

id objc_msgSend_sendDataQueue(void *a1, const char *a2, ...)
{
  return _[a1 sendDataQueue];
}

id objc_msgSend_sendDatesByMessageIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 sendDatesByMessageIdentifier];
}

id objc_msgSend_sendDisableMessage(void *a1, const char *a2, ...)
{
  return _[a1 sendDisableMessage];
}

id objc_msgSend_sendDisableMessageToDeviceID_pairingID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDisableMessageToDeviceID:pairingID:");
}

id objc_msgSend_sendDiscoverResponse_forKnownAlias_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDiscoverResponse:forKnownAlias:");
}

id objc_msgSend_sendEncryptionKeyRequestToDeviceIdentifier_previousKeyIdentifier_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEncryptionKeyRequestToDeviceIdentifier:previousKeyIdentifier:completionHandler:");
}

id objc_msgSend_sendEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEvent:");
}

id objc_msgSend_sendFrameType_payload_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendFrameType:payload:completion:");
}

id objc_msgSend_sendFrameTypeDirect_payload_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendFrameTypeDirect:payload:completion:");
}

id objc_msgSend_sendIdentifierToSessionID(void *a1, const char *a2, ...)
{
  return _[a1 sendIdentifierToSessionID];
}

id objc_msgSend_sendInitialRequest(void *a1, const char *a2, ...)
{
  return _[a1 sendInitialRequest];
}

id objc_msgSend_sendInitialResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendInitialResponse:");
}

id objc_msgSend_sendKeyExchangeRequestWithData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendKeyExchangeRequestWithData:error:");
}

id objc_msgSend_sendKeyExchangeResponseWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendKeyExchangeResponseWithData:");
}

id objc_msgSend_sendLongTermKeyResponse_requestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendLongTermKeyResponse:requestID:");
}

id objc_msgSend_sendMessage_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:withCompletionHandler:");
}

id objc_msgSend_sendOutgoingChunk_length_compressed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendOutgoingChunk:length:compressed:");
}

id objc_msgSend_sendPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendPayload:");
}

id objc_msgSend_sendPayload_toDevice_type_sessionID_queueOneID_timeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendPayload:toDevice:type:sessionID:queueOneID:timeout:completion:");
}

id objc_msgSend_sendPayload_toDevice_type_sessionID_queueOneID_timeout_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendPayload:toDevice:type:sessionID:queueOneID:timeout:errorHandler:");
}

id objc_msgSend_sendPayload_toDevice_type_sessionID_queueOneID_wantsACK_timeout_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendPayload:toDevice:type:sessionID:queueOneID:wantsACK:timeout:completion:");
}

id objc_msgSend_sendPayload_toDevice_type_sessionID_timeout_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendPayload:toDevice:type:sessionID:timeout:errorHandler:");
}

id objc_msgSend_sendProtobuf_toDestinations_priority_options_identifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendProtobuf:toDestinations:priority:options:identifier:error:");
}

id objc_msgSend_sendProtocolBufferData_withType_timeout_option_dataClass_queueOneID_errorHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendProtocolBufferData:withType:timeout:option:dataClass:queueOneID:errorHandler:");
}

id objc_msgSend_sendProtocolBufferData_withType_timeout_option_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendProtocolBufferData:withType:timeout:option:errorHandler:");
}

id objc_msgSend_sendRapportActivityPayloadRequest_withRequestRecord_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRapportActivityPayloadRequest:withRequestRecord:completionHandler:");
}

id objc_msgSend_sendRapportEncryptionKeyRequest_withRequestRecord_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRapportEncryptionKeyRequest:withRequestRecord:completionHandler:");
}

id objc_msgSend_sendRelockRequestWithReset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRelockRequestWithReset:");
}

id objc_msgSend_sendRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequest:");
}

id objc_msgSend_sendRequestID_request_destinationID_options_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequestID:request:destinationID:options:responseHandler:");
}

id objc_msgSend_sendRequestID_request_options_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequestID:request:options:responseHandler:");
}

id objc_msgSend_sendResetMessage_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendResetMessage:reason:");
}

id objc_msgSend_sendResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendResponse:");
}

id objc_msgSend_sendSessionAuthToken_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSessionAuthToken:error:");
}

id objc_msgSend_sendSessionAuthenticationToken_sessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSessionAuthenticationToken:sessionID:");
}

id objc_msgSend_sendSessionKeyExchangeRequest_usedEscrow_sessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSessionKeyExchangeRequest:usedEscrow:sessionID:");
}

id objc_msgSend_sendSetupCreateEscrowRecordStepData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSetupCreateEscrowRecordStepData:error:");
}

id objc_msgSend_sendSetupCreateEscrowRecordWithSessionID_stepData_errorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSetupCreateEscrowRecordWithSessionID:stepData:errorCode:");
}

id objc_msgSend_sendSetupRequest(void *a1, const char *a2, ...)
{
  return _[a1 sendSetupRequest];
}

id objc_msgSend_sendSetupSessionCreatedWithLocalKey_stepData_error_failureReason_ltkSyncing_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSetupSessionCreatedWithLocalKey:stepData:error:failureReason:ltkSyncing:");
}

id objc_msgSend_sendSetupSessionCreatedWithLocalKey_stepData_sessionID_errorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSetupSessionCreatedWithLocalKey:stepData:sessionID:errorCode:");
}

id objc_msgSend_sendStashKeyRequest_sessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendStashKeyRequest:sessionID:");
}

id objc_msgSend_sendStashToken_sessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendStashToken:sessionID:");
}

id objc_msgSend_sendState(void *a1, const char *a2, ...)
{
  return _[a1 sendState];
}

id objc_msgSend_sendStepData_type_errorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendStepData:type:errorCode:");
}

id objc_msgSend_sendUnlockConfirmation_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUnlockConfirmation:withError:");
}

id objc_msgSend_sendUnlockData_toBLEDevice_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUnlockData:toBLEDevice:completion:");
}

id objc_msgSend_sendUnlockDataDirect_toBLEDevice_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUnlockDataDirect:toBLEDevice:completion:");
}

id objc_msgSend_sendUploadResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUploadResponse:");
}

id objc_msgSend_sender(void *a1, const char *a2, ...)
{
  return _[a1 sender];
}

id objc_msgSend_sender__notifyBluetoothSample_withId_forType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sender:_notifyBluetoothSample:withId:forType:");
}

id objc_msgSend_sender_notifyBluetoothSample_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sender:notifyBluetoothSample:");
}

id objc_msgSend_senderBundleID(void *a1, const char *a2, ...)
{
  return _[a1 senderBundleID];
}

id objc_msgSend_senderCompositeName(void *a1, const char *a2, ...)
{
  return _[a1 senderCompositeName];
}

id objc_msgSend_senderID(void *a1, const char *a2, ...)
{
  return _[a1 senderID];
}

id objc_msgSend_senderInfoAvailable(void *a1, const char *a2, ...)
{
  return _[a1 senderInfoAvailable];
}

id objc_msgSend_senderIsBlocked(void *a1, const char *a2, ...)
{
  return _[a1 senderIsBlocked];
}

id objc_msgSend_senderIsMe(void *a1, const char *a2, ...)
{
  return _[a1 senderIsMe];
}

id objc_msgSend_senderIsTrusted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "senderIsTrusted:");
}

id objc_msgSend_senderName(void *a1, const char *a2, ...)
{
  return _[a1 senderName];
}

id objc_msgSend_sendingConfirmation(void *a1, const char *a2, ...)
{
  return _[a1 sendingConfirmation];
}

id objc_msgSend_sentExchangeResponse(void *a1, const char *a2, ...)
{
  return _[a1 sentExchangeResponse];
}

id objc_msgSend_sentImageData(void *a1, const char *a2, ...)
{
  return _[a1 sentImageData];
}

id objc_msgSend_serialNumber(void *a1, const char *a2, ...)
{
  return _[a1 serialNumber];
}

id objc_msgSend_serverFriendlyDescription(void *a1, const char *a2, ...)
{
  return _[a1 serverFriendlyDescription];
}

id objc_msgSend_serverNameForHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverNameForHost:");
}

id objc_msgSend_serverReceivedTime(void *a1, const char *a2, ...)
{
  return _[a1 serverReceivedTime];
}

id objc_msgSend_serverTrust(void *a1, const char *a2, ...)
{
  return _[a1 serverTrust];
}

id objc_msgSend_serversChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serversChanged:");
}

id objc_msgSend_service_account_identifier_didSendWithSuccess_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "service:account:identifier:didSendWithSuccess:error:");
}

id objc_msgSend_service_devicesChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "service:devicesChanged:");
}

id objc_msgSend_serviceClients(void *a1, const char *a2, ...)
{
  return _[a1 serviceClients];
}

id objc_msgSend_serviceError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceError:");
}

id objc_msgSend_serviceFromAuthorData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceFromAuthorData:");
}

id objc_msgSend_serviceFromServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceFromServiceName:");
}

id objc_msgSend_serviceName(void *a1, const char *a2, ...)
{
  return _[a1 serviceName];
}

id objc_msgSend_servicePeerDisconnected_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "servicePeerDisconnected:error:");
}

id objc_msgSend_serviceQueue(void *a1, const char *a2, ...)
{
  return _[a1 serviceQueue];
}

id objc_msgSend_serviceReceivedEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceReceivedEvent:");
}

id objc_msgSend_serviceReceivedFrameType_data_peer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceReceivedFrameType:data:peer:");
}

id objc_msgSend_serviceReceivedFrameType_serviceType_data_peer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceReceivedFrameType:serviceType:data:peer:");
}

id objc_msgSend_serviceReceivedRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceReceivedRequest:");
}

id objc_msgSend_serviceReceivedResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceReceivedResponse:");
}

id objc_msgSend_serviceSendEvent_service_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceSendEvent:service:");
}

id objc_msgSend_serviceSendRequest_service_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceSendRequest:service:");
}

id objc_msgSend_serviceSendResponse_service_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceSendResponse:service:");
}

id objc_msgSend_serviceStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceStart:");
}

id objc_msgSend_serviceStop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceStop:");
}

id objc_msgSend_serviceTimer(void *a1, const char *a2, ...)
{
  return _[a1 serviceTimer];
}

id objc_msgSend_serviceType(void *a1, const char *a2, ...)
{
  return _[a1 serviceType];
}

id objc_msgSend_serviceUUID(void *a1, const char *a2, ...)
{
  return _[a1 serviceUUID];
}

id objc_msgSend_servicesContainIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "servicesContainIdentifier:");
}

id objc_msgSend_session_didBeginAttemptWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didBeginAttemptWithDevice:");
}

id objc_msgSend_session_didCompleteUnlockWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didCompleteUnlockWithDevice:");
}

id objc_msgSend_session_didCompleteWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didCompleteWithError:");
}

id objc_msgSend_session_didEnableWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didEnableWithDevice:");
}

id objc_msgSend_session_didFailToEnableDevice_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didFailToEnableDevice:error:");
}

id objc_msgSend_session_didFailUnlockWithResults_error_incrementedAttempt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didFailUnlockWithResults:error:incrementedAttempt:");
}

id objc_msgSend_session_didReceiveKeyDeviceLocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didReceiveKeyDeviceLocked:");
}

id objc_msgSend_sessionAuthToken(void *a1, const char *a2, ...)
{
  return _[a1 sessionAuthToken];
}

id objc_msgSend_sessionBluetoothStateChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionBluetoothStateChanged:");
}

id objc_msgSend_sessionCompleted(void *a1, const char *a2, ...)
{
  return _[a1 sessionCompleted];
}

id objc_msgSend_sessionCreated(void *a1, const char *a2, ...)
{
  return _[a1 sessionCreated];
}

id objc_msgSend_sessionCreatedMessage(void *a1, const char *a2, ...)
{
  return _[a1 sessionCreatedMessage];
}

id objc_msgSend_sessionDidReceiveKeyDeviceLocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionDidReceiveKeyDeviceLocked:");
}

id objc_msgSend_sessionDidSendInitialData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionDidSendInitialData:");
}

id objc_msgSend_sessionDidStartConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionDidStartConnection:");
}

id objc_msgSend_sessionError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionError:");
}

id objc_msgSend_sessionFlags(void *a1, const char *a2, ...)
{
  return _[a1 sessionFlags];
}

id objc_msgSend_sessionID(void *a1, const char *a2, ...)
{
  return _[a1 sessionID];
}

id objc_msgSend_sessionIsValid(void *a1, const char *a2, ...)
{
  return _[a1 sessionIsValid];
}

id objc_msgSend_sessionKeyExistsForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionKeyExistsForDeviceID:");
}

id objc_msgSend_sessionKeyForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionKeyForDeviceID:");
}

id objc_msgSend_sessionManagerQueue(void *a1, const char *a2, ...)
{
  return _[a1 sessionManagerQueue];
}

id objc_msgSend_sessionQueue(void *a1, const char *a2, ...)
{
  return _[a1 sessionQueue];
}

id objc_msgSend_sessionRangingKey(void *a1, const char *a2, ...)
{
  return _[a1 sessionRangingKey];
}

id objc_msgSend_sessionReceivedEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionReceivedEvent:");
}

id objc_msgSend_sessionReceivedFrameType_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionReceivedFrameType:data:");
}

id objc_msgSend_sessionReceivedFrameType_serviceType_data_peer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionReceivedFrameType:serviceType:data:peer:");
}

id objc_msgSend_sessionReceivedRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionReceivedRequest:");
}

id objc_msgSend_sessionReceivedResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionReceivedResponse:");
}

id objc_msgSend_sessionSendEvent_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionSendEvent:session:");
}

id objc_msgSend_sessionSendRequest_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionSendRequest:session:");
}

id objc_msgSend_sessionSendResponse_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionSendResponse:session:");
}

id objc_msgSend_sessionStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionStart:");
}

id objc_msgSend_sessionStop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionStop:");
}

id objc_msgSend_sessionType(void *a1, const char *a2, ...)
{
  return _[a1 sessionType];
}

id objc_msgSend_sessionWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionWithConfiguration:");
}

id objc_msgSend_sessionWithConfiguration_delegate_delegateQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionWithConfiguration:delegate:delegateQueue:");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAcceptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAcceptor:");
}

id objc_msgSend_setAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccount:");
}

id objc_msgSend_setAccountID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountID:");
}

id objc_msgSend_setAccountIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountIdentifier:");
}

id objc_msgSend_setActionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionHandler:");
}

id objc_msgSend_setActivateCalled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivateCalled:");
}

id objc_msgSend_setActiveConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveConnection:");
}

id objc_msgSend_setActiveConnections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveConnections:");
}

id objc_msgSend_setActivityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityIdentifier:");
}

id objc_msgSend_setAdvertiseRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdvertiseRate:");
}

id objc_msgSend_setAdvertisementFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdvertisementFields:");
}

id objc_msgSend_setAdvertisementPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdvertisementPayload:");
}

id objc_msgSend_setAgent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAgent:");
}

id objc_msgSend_setAirDropPublished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirDropPublished:");
}

id objc_msgSend_setAirplaneModeEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirplaneModeEnabled:");
}

id objc_msgSend_setAksSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAksSession:");
}

id objc_msgSend_setAksSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAksSessionID:");
}

id objc_msgSend_setAksSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAksSuccess:");
}

id objc_msgSend_setAksToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAksToken:");
}

id objc_msgSend_setAlerted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlerted:");
}

id objc_msgSend_setAllowedDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedDevices:");
}

id objc_msgSend_setAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAltDSID:");
}

id objc_msgSend_setAppBundleId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppBundleId:");
}

id objc_msgSend_setAppIconData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppIconData:");
}

id objc_msgSend_setAppName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppName:");
}

id objc_msgSend_setAssertionTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssertionTimer:");
}

id objc_msgSend_setAssociatedDomains_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssociatedDomains:");
}

id objc_msgSend_setAttachmentURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttachmentURL:");
}

id objc_msgSend_setAttachments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttachments:");
}

id objc_msgSend_setAttemptActivatedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptActivatedHandler:");
}

id objc_msgSend_setAttemptAppName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptAppName:");
}

id objc_msgSend_setAttemptBundlePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptBundlePath:");
}

id objc_msgSend_setAttemptCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptCount:");
}

id objc_msgSend_setAttemptDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptDevice:");
}

id objc_msgSend_setAttemptError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptError:");
}

id objc_msgSend_setAttemptExternalACMContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptExternalACMContext:");
}

id objc_msgSend_setAttemptHourLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptHourLocal:");
}

id objc_msgSend_setAttemptID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptID:");
}

id objc_msgSend_setAttemptInProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptInProgress:");
}

id objc_msgSend_setAttemptNavBarTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptNavBarTitle:");
}

id objc_msgSend_setAttemptPrewarmed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptPrewarmed:");
}

id objc_msgSend_setAttemptStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptStart:");
}

id objc_msgSend_setAttemptStartDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptStartDate:");
}

id objc_msgSend_setAttemptTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptTime:");
}

id objc_msgSend_setAttemptTimedOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptTimedOut:");
}

id objc_msgSend_setAttemptType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttemptType:");
}

id objc_msgSend_setAudioRoutingScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioRoutingScore:");
}

id objc_msgSend_setAuditToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuditToken:");
}

id objc_msgSend_setAuthPrompt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthPrompt:");
}

id objc_msgSend_setAuthPromptIconData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthPromptIconData:");
}

id objc_msgSend_setAuthPromptIconHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthPromptIconHash:");
}

id objc_msgSend_setAuthSessionError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthSessionError:");
}

id objc_msgSend_setAuthTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthTag:");
}

id objc_msgSend_setAuthToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthToken:");
}

id objc_msgSend_setAuthenticatingForSiri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthenticatingForSiri:");
}

id objc_msgSend_setAuthenticationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthenticationType:");
}

id objc_msgSend_setAutoUnlockActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoUnlockActive:");
}

id objc_msgSend_setAutoUnlockDisabledDueToManagement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoUnlockDisabledDueToManagement:");
}

id objc_msgSend_setAutoUnlockEnabledUpdatedAfterFirstUnlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoUnlockEnabledUpdatedAfterFirstUnlock:");
}

id objc_msgSend_setAvailableApplications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvailableApplications:");
}

id objc_msgSend_setAwdlInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAwdlInfo:");
}

id objc_msgSend_setAwdlInfoExchange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAwdlInfoExchange:");
}

id objc_msgSend_setAwdlInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAwdlInterval:");
}

id objc_msgSend_setAwdlNetwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAwdlNetwork:");
}

id objc_msgSend_setAwdlStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAwdlStart:");
}

id objc_msgSend_setAwdlStartFailed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAwdlStartFailed:");
}

id objc_msgSend_setAwdlStartedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAwdlStartedHandler:");
}

id objc_msgSend_setAwdlStarting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAwdlStarting:");
}

id objc_msgSend_setAwdlTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAwdlTimer:");
}

id objc_msgSend_setAwdlTimerFired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAwdlTimerFired:");
}

id objc_msgSend_setAwdlTotal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAwdlTotal:");
}

id objc_msgSend_setAwdlUp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAwdlUp:");
}

id objc_msgSend_setBleDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBleDevice:");
}

id objc_msgSend_setBleEncrypted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBleEncrypted:");
}

id objc_msgSend_setBluetoothAddressChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBluetoothAddressChangedHandler:");
}

id objc_msgSend_setBluetoothCloudPaired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBluetoothCloudPaired:");
}

id objc_msgSend_setBluetoothEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBluetoothEnabled:");
}

id objc_msgSend_setBluetoothErrorCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBluetoothErrorCount:");
}

id objc_msgSend_setBluetoothID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBluetoothID:");
}

id objc_msgSend_setBluetoothStateChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBluetoothStateChangedHandler:");
}

id objc_msgSend_setBody_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBody:");
}

id objc_msgSend_setBodyData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBodyData:");
}

id objc_msgSend_setBodyKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBodyKey:");
}

id objc_msgSend_setBonjourBrowserMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBonjourBrowserMode:");
}

id objc_msgSend_setBonjourPTRDiscovery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBonjourPTRDiscovery:");
}

id objc_msgSend_setBonjourResolveComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBonjourResolveComplete:");
}

id objc_msgSend_setBonjourTXTRecordDiscovery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBonjourTXTRecordDiscovery:");
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBool:forKey:");
}

id objc_msgSend_setBoostMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBoostMessage:");
}

id objc_msgSend_setBrowseAgent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrowseAgent:");
}

id objc_msgSend_setBtAddr_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBtAddr:");
}

id objc_msgSend_setBtBootstrap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBtBootstrap:");
}

id objc_msgSend_setBtOverall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBtOverall:");
}

id objc_msgSend_setBufferSize_socket_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBufferSize:socket:");
}

id objc_msgSend_setBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleID:");
}

id objc_msgSend_setBundleProxy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleProxy:");
}

id objc_msgSend_setByAddingObjectsFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByAddingObjectsFromSet:");
}

id objc_msgSend_setCacheAccessInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCacheAccessInfo:");
}

id objc_msgSend_setCacheFileCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCacheFileCount:");
}

id objc_msgSend_setCacheLookupKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCacheLookupKey:");
}

id objc_msgSend_setCachedApproveBluetoothIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedApproveBluetoothIDs:");
}

id objc_msgSend_setCachedBluetoothIDToUniqueIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedBluetoothIDToUniqueIDs:");
}

id objc_msgSend_setCachedMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedMetrics:");
}

id objc_msgSend_setCachedSessionKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedSessionKeys:");
}

id objc_msgSend_setCallChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallChangedHandler:");
}

id objc_msgSend_setCalledAWDLStarted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCalledAWDLStarted:");
}

id objc_msgSend_setCanRelock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanRelock:");
}

id objc_msgSend_setCancelAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancelAction:");
}

id objc_msgSend_setCanceled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanceled:");
}

id objc_msgSend_setCancellationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancellationHandler:");
}

id objc_msgSend_setCategoryID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategoryID:");
}

id objc_msgSend_setCategoryIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategoryIdentifier:");
}

id objc_msgSend_setCertificateExpirationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCertificateExpirationDate:");
}

id objc_msgSend_setCertificatePersistentReference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCertificatePersistentReference:");
}

id objc_msgSend_setCertificateToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCertificateToken:");
}

id objc_msgSend_setCertificateToken_privateKeyPersistentReference_forAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCertificateToken:privateKeyPersistentReference:forAppleID:");
}

id objc_msgSend_setCertificateTokenCreationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCertificateTokenCreationDate:");
}

id objc_msgSend_setCertificateTokenHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCertificateTokenHandler:");
}

id objc_msgSend_setChangeFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChangeFlags:");
}

id objc_msgSend_setChannelFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChannelFlags:");
}

id objc_msgSend_setCheckedCert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCheckedCert:");
}

id objc_msgSend_setChosenDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChosenDevice:");
}

id objc_msgSend_setClass_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClass:forSelector:argumentIndex:ofReply:");
}

id objc_msgSend_setClasses_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClasses:forSelector:argumentIndex:ofReply:");
}

id objc_msgSend_setClassroomDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassroomDelegate:");
}

id objc_msgSend_setClientBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientBundleID:");
}

id objc_msgSend_setClientInputStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientInputStream:");
}

id objc_msgSend_setClientOutputStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientOutputStream:");
}

id objc_msgSend_setClientPid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientPid:");
}

id objc_msgSend_setClientProvidedError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientProvidedError:");
}

id objc_msgSend_setClientProxy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientProxy:");
}

id objc_msgSend_setClientSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientSession:");
}

id objc_msgSend_setClinkDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClinkDevice:");
}

id objc_msgSend_setCloseProximityEstimatorMedium_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloseProximityEstimatorMedium:");
}

id objc_msgSend_setCloseProximityEstimatorSmall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloseProximityEstimatorSmall:");
}

id objc_msgSend_setCloudPairRetryRecords_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudPairRetryRecords:");
}

id objc_msgSend_setCombinedFileURLsAndItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCombinedFileURLsAndItems:");
}

id objc_msgSend_setCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommand:");
}

id objc_msgSend_setCompanionCurrentlySyncing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionCurrentlySyncing:");
}

id objc_msgSend_setCompanionDeviceModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionDeviceModel:");
}

id objc_msgSend_setCompanionID_forWatchID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionID:forWatchID:");
}

id objc_msgSend_setCompanionNeedsUnlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionNeedsUnlock:");
}

id objc_msgSend_setCompanionViewNotSyncing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionViewNotSyncing:");
}

id objc_msgSend_setCompleteExchange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompleteExchange:");
}

id objc_msgSend_setCompletedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletedHandler:");
}

id objc_msgSend_setCompletedURLs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletedURLs:");
}

id objc_msgSend_setCompletedUnitCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletedUnitCount:");
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionBlock:");
}

id objc_msgSend_setCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionHandler:");
}

id objc_msgSend_setConfigChangeType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfigChangeType:");
}

id objc_msgSend_setConfirmation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfirmation:");
}

id objc_msgSend_setConfirmationDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfirmationDuration:");
}

id objc_msgSend_setConfirmationReceived_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfirmationReceived:");
}

id objc_msgSend_setConfirmationSendDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfirmationSendDate:");
}

id objc_msgSend_setConfirmationTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfirmationTimer:");
}

id objc_msgSend_setConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnected:");
}

id objc_msgSend_setConnectedBluetoothDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectedBluetoothDevices:");
}

id objc_msgSend_setConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnection:");
}

id objc_msgSend_setConnectionDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionDate:");
}

id objc_msgSend_setConnectionProxyDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionProxyDictionary:");
}

id objc_msgSend_setConnectionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionState:");
}

id objc_msgSend_setConnectionTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionTime:");
}

id objc_msgSend_setConnectionWaitTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionWaitTime:");
}

id objc_msgSend_setContactID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactID:");
}

id objc_msgSend_setContactIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactIdentifier:");
}

id objc_msgSend_setContactInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactInfo:");
}

id objc_msgSend_setContactsOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContactsOnly:");
}

id objc_msgSend_setContentsDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentsDescription:");
}

id objc_msgSend_setContentsTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentsTitle:");
}

id objc_msgSend_setControlFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlFlags:");
}

id objc_msgSend_setCredential_forAccount_serviceID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCredential:forAccount:serviceID:error:");
}

id objc_msgSend_setCurrentApplicationLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentApplicationLabel:");
}

id objc_msgSend_setCurrentBluetoothIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentBluetoothIDs:");
}

id objc_msgSend_setCurrentHistoryToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentHistoryToken:");
}

id objc_msgSend_setCurrentRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentRequest:");
}

id objc_msgSend_setDaemonPID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDaemonPID:");
}

id objc_msgSend_setDateCreated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateCreated:");
}

id objc_msgSend_setDecryptedActivityLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDecryptedActivityLevel:");
}

id objc_msgSend_setDecryptionKey_forDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDecryptionKey:forDeviceIdentifier:");
}

id objc_msgSend_setDecryptionKeyDataRepresentation_forDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDecryptionKeyDataRepresentation:forDeviceIdentifier:");
}

id objc_msgSend_setDefaultPairedDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultPairedDevice:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestination:");
}

id objc_msgSend_setDestinationDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestinationDevice:");
}

id objc_msgSend_setDeviceActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceActionType:");
}

id objc_msgSend_setDeviceAsStereoLeader_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceAsStereoLeader:withOptions:");
}

id objc_msgSend_setDeviceChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceChangedHandler:");
}

id objc_msgSend_setDeviceClassCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceClassCode:");
}

id objc_msgSend_setDeviceColorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceColorCode:");
}

id objc_msgSend_setDeviceDidUntriggerHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceDidUntriggerHandler:");
}

id objc_msgSend_setDeviceEnteredBioLockoutHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceEnteredBioLockoutHandler:");
}

id objc_msgSend_setDeviceEnteredImmediateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceEnteredImmediateHandler:");
}

id objc_msgSend_setDeviceEnteredNearbyHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceEnteredNearbyHandler:");
}

id objc_msgSend_setDeviceExitedImmediateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceExitedImmediateHandler:");
}

id objc_msgSend_setDeviceExitedNearbyHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceExitedNearbyHandler:");
}

id objc_msgSend_setDeviceFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceFilter:");
}

id objc_msgSend_setDeviceFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceFlags:");
}

id objc_msgSend_setDeviceFoundHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceFoundHandler:");
}

id objc_msgSend_setDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceID:");
}

id objc_msgSend_setDeviceIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceIDs:");
}

id objc_msgSend_setDeviceIRKData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceIRKData:");
}

id objc_msgSend_setDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceIdentifier:");
}

id objc_msgSend_setDeviceLostHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceLostHandler:");
}

id objc_msgSend_setDeviceModelCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceModelCode:");
}

id objc_msgSend_setDeviceTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceTimer:");
}

id objc_msgSend_setDeviceTracked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceTracked:");
}

id objc_msgSend_setDeviceUpdateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceUpdateHandler:");
}

id objc_msgSend_setDeviceWasDismissedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceWasDismissedHandler:");
}

id objc_msgSend_setDeviceWasDismissedHandlerEx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceWasDismissedHandlerEx:");
}

id objc_msgSend_setDeviceWasLocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceWasLocked:");
}

id objc_msgSend_setDeviceWasSelectedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceWasSelectedHandler:");
}

id objc_msgSend_setDeviceWillTriggerHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceWillTriggerHandler:");
}

id objc_msgSend_setDhSecretKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDhSecretKey:");
}

id objc_msgSend_setDidAutoAccept_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidAutoAccept:");
}

id objc_msgSend_setDidDelayWorkDueToPowerAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidDelayWorkDueToPowerAssertion:");
}

id objc_msgSend_setDisableAdaptiveCompressionForZipping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisableAdaptiveCompressionForZipping:");
}

id objc_msgSend_setDisableDuplicateFilterOnce_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisableDuplicateFilterOnce:");
}

id objc_msgSend_setDisableSilentAuth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisableSilentAuth:");
}

id objc_msgSend_setDiscoverableMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoverableMode:");
}

id objc_msgSend_setDiscoveryDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryDate:");
}

id objc_msgSend_setDiscoveryFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryFlags:");
}

id objc_msgSend_setDiscoveryMetric_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryMetric:");
}

id objc_msgSend_setDiscoveryMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryMetrics:");
}

id objc_msgSend_setDiscoveryMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryMode:");
}

id objc_msgSend_setDiscoveryTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryTime:");
}

id objc_msgSend_setDismissReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissReason:");
}

id objc_msgSend_setDismissUserNotificationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissUserNotificationHandler:");
}

id objc_msgSend_setDismissedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissedHandler:");
}

id objc_msgSend_setDispatchQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDispatchQueue:");
}

id objc_msgSend_setDisplayClamshellWaitTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayClamshellWaitTime:");
}

id objc_msgSend_setDisplayOrClamshellWaitingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayOrClamshellWaitingDate:");
}

id objc_msgSend_setDistance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistance:");
}

id objc_msgSend_setDoNotPostUnlockConfirmation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDoNotPostUnlockConfirmation:");
}

id objc_msgSend_setDurationInMS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDurationInMS:");
}

id objc_msgSend_setEdPKData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEdPKData:");
}

id objc_msgSend_setEligibleDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEligibleDevices:");
}

id objc_msgSend_setEmailAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEmailAddress:");
}

id objc_msgSend_setEmailAddresses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEmailAddresses:");
}

id objc_msgSend_setEnableDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnableDevice:");
}

id objc_msgSend_setEnabledTopics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabledTopics:");
}

id objc_msgSend_setEnclosureColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnclosureColor:");
}

id objc_msgSend_setEncryptedPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEncryptedPayload:");
}

id objc_msgSend_setEndpointsChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndpointsChangedHandler:");
}

id objc_msgSend_setEnhancedDiscovery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnhancedDiscovery:");
}

id objc_msgSend_setError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setError:");
}

id objc_msgSend_setErrorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setErrorCode:");
}

id objc_msgSend_setErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setErrorHandler:");
}

id objc_msgSend_setErrorString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setErrorString:");
}

id objc_msgSend_setErrorType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setErrorType:");
}

id objc_msgSend_setEscrowSecret_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEscrowSecret:");
}

id objc_msgSend_setEventHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventHandler:");
}

id objc_msgSend_setEventMessageHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventMessageHandler:");
}

id objc_msgSend_setEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEvents:");
}

id objc_msgSend_setExchageResponseDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExchageResponseDate:");
}

id objc_msgSend_setExchangeResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExchangeResponse:");
}

id objc_msgSend_setExcludeBackfillSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExcludeBackfillSuggestions:");
}

id objc_msgSend_setExpireDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpireDate:");
}

id objc_msgSend_setExpireTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpireTime:");
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedInterface:");
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedObject:");
}

id objc_msgSend_setExtendedTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExtendedTimer:");
}

id objc_msgSend_setExternalACMContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExternalACMContext:");
}

id objc_msgSend_setExtraInfoData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExtraInfoData:");
}

id objc_msgSend_setFailureReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFailureReason:");
}

id objc_msgSend_setFailureReasons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFailureReasons:");
}

id objc_msgSend_setFamilyName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFamilyName:");
}

id objc_msgSend_setFastScanMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFastScanMode:");
}

id objc_msgSend_setFeatureSuggestedForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFeatureSuggestedForDeviceID:");
}

id objc_msgSend_setFiles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFiles:");
}

id objc_msgSend_setFilesToCleanup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilesToCleanup:");
}

id objc_msgSend_setFinalMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFinalMessage:");
}

id objc_msgSend_setFinderServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFinderServer:");
}

id objc_msgSend_setFireDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFireDate:");
}

id objc_msgSend_setFirstSend_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstSend:");
}

id objc_msgSend_setFirstUnlockHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstUnlockHandler:");
}

id objc_msgSend_setFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFlags:");
}

id objc_msgSend_setFloat_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFloat:forKey:");
}

id objc_msgSend_setForced_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForced:");
}

id objc_msgSend_setForcedID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForcedID:");
}

id objc_msgSend_setFoundFirstPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFoundFirstPeer:");
}

id objc_msgSend_setFoundPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFoundPeer:");
}

id objc_msgSend_setGivenName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGivenName:");
}

id objc_msgSend_setGsToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGsToken:");
}

id objc_msgSend_setHTTPAdditionalHeaders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHTTPAdditionalHeaders:");
}

id objc_msgSend_setHTTPBody_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHTTPBody:");
}

id objc_msgSend_setHTTPMaximumConnectionsPerHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHTTPMaximumConnectionsPerHost:");
}

id objc_msgSend_setHTTPMethod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHTTPMethod:");
}

id objc_msgSend_setHTTPShouldHandleCookies_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHTTPShouldHandleCookies:");
}

id objc_msgSend_setHTTPShouldUsePipelining_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHTTPShouldUsePipelining:");
}

id objc_msgSend_setHandler_forTransfer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandler:forTransfer:");
}

id objc_msgSend_setHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandles:");
}

id objc_msgSend_setHeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeader:");
}

id objc_msgSend_setHeaderFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeaderFields:");
}

id objc_msgSend_setHelperConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHelperConnection:");
}

id objc_msgSend_setHidePINHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidePINHandler:");
}

id objc_msgSend_setHintToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHintToken:");
}

id objc_msgSend_setHomePodType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomePodType:");
}

id objc_msgSend_setHotspotInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHotspotInfo:");
}

id objc_msgSend_setIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIcon:");
}

id objc_msgSend_setIconCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIconCache:");
}

id objc_msgSend_setIconData_iconHash_forPerson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIconData:iconHash:forPerson:");
}

id objc_msgSend_setIconHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIconHash:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentity:");
}

id objc_msgSend_setIdentityQueryComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentityQueryComplete:");
}

id objc_msgSend_setIdsDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsDevice:");
}

id objc_msgSend_setIdsDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsDeviceID:");
}

id objc_msgSend_setIdsIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsIdentifier:");
}

id objc_msgSend_setIdsMacCountCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsMacCountCache:");
}

id objc_msgSend_setImage_forKey_contactIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:forKey:contactIDs:");
}

id objc_msgSend_setImageData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageData:");
}

id objc_msgSend_setImageDataAlreadyCached_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageDataAlreadyCached:");
}

id objc_msgSend_setImageHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageHash:");
}

id objc_msgSend_setImportedFiles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImportedFiles:");
}

id objc_msgSend_setInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInRange:");
}

id objc_msgSend_setIncrementedCountID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncrementedCountID:");
}

id objc_msgSend_setInfoProximityEstimator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInfoProximityEstimator:");
}

id objc_msgSend_setInsideMediumBubble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInsideMediumBubble:");
}

id objc_msgSend_setInsideSmallBubble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInsideSmallBubble:");
}

id objc_msgSend_setInteger_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteger:forKey:");
}

id objc_msgSend_setInteractionBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteractionBehavior:");
}

id objc_msgSend_setInteractionDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteractionDirection:");
}

id objc_msgSend_setIntermediateCertificateExpirationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIntermediateCertificateExpirationDate:");
}

id objc_msgSend_setIntermediateCertificatePersistentReference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIntermediateCertificatePersistentReference:");
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterruptionHandler:");
}

id objc_msgSend_setInvalidateCalled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvalidateCalled:");
}

id objc_msgSend_setInvalidated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvalidated:");
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvalidationHandler:");
}

id objc_msgSend_setIsAuthenticatingForSiri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAuthenticatingForSiri:");
}

id objc_msgSend_setIsBLEDeviceReplaced_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsBLEDeviceReplaced:");
}

id objc_msgSend_setIsBeingUsedForSiri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsBeingUsedForSiri:");
}

id objc_msgSend_setIsCollaborative_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsCollaborative:");
}

id objc_msgSend_setIsDarkMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDarkMode:");
}

id objc_msgSend_setIsEntitled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEntitled:");
}

id objc_msgSend_setIsUsernameEditable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUsernameEditable:");
}

id objc_msgSend_setItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItems:");
}

id objc_msgSend_setKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKey:");
}

id objc_msgSend_setKeyCounter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyCounter:");
}

id objc_msgSend_setKeyData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyData:");
}

id objc_msgSend_setKeyDeviceLocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyDeviceLocked:");
}

id objc_msgSend_setKeyExchangeDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyExchangeDate:");
}

id objc_msgSend_setKeyExchangeDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyExchangeDuration:");
}

id objc_msgSend_setKeyExchangeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyExchangeInterval:");
}

id objc_msgSend_setKeyExchangeResponseReceived_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyExchangeResponseReceived:");
}

id objc_msgSend_setKeyExists_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyExists:");
}

id objc_msgSend_setKeyFailed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyFailed:");
}

id objc_msgSend_setKeyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyIdentifier:");
}

id objc_msgSend_setKeyRequestExchange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyRequestExchange:");
}

id objc_msgSend_setKeybagAssertionTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeybagAssertionTimer:");
}

id objc_msgSend_setLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabel:");
}

id objc_msgSend_setLastConnectionDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastConnectionDate:");
}

id objc_msgSend_setLastLocalUnlockDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastLocalUnlockDate:");
}

id objc_msgSend_setLastLockedByRelock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastLockedByRelock:");
}

id objc_msgSend_setLastProxyState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastProxyState:");
}

id objc_msgSend_setLastSeenWatchDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSeenWatchDate:");
}

id objc_msgSend_setLastSleepType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSleepType:");
}

id objc_msgSend_setLastSuccessfulConnectionDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSuccessfulConnectionDate:");
}

id objc_msgSend_setLastSuccessfulDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSuccessfulDevice:");
}

id objc_msgSend_setLastUnlockDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastUnlockDate:");
}

id objc_msgSend_setLastUnlockUsedMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastUnlockUsedMask:");
}

id objc_msgSend_setLastUpdateTicks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastUpdateTicks:");
}

id objc_msgSend_setLastUsedCounter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastUsedCounter:");
}

id objc_msgSend_setLastValidationAttemptDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastValidationAttemptDate:");
}

id objc_msgSend_setLastValidationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastValidationDate:");
}

id objc_msgSend_setLatencyCritical_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLatencyCritical:");
}

id objc_msgSend_setLePipeCapable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLePipeCapable:");
}

id objc_msgSend_setLePipeDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLePipeDevices:");
}

id objc_msgSend_setLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLength:");
}

id objc_msgSend_setLinkClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLinkClient:");
}

id objc_msgSend_setLinkedToCurrentUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLinkedToCurrentUser:");
}

id objc_msgSend_setLinks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLinks:");
}

id objc_msgSend_setLocalAWDLInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalAWDLInfo:");
}

id objc_msgSend_setLocalAttestedLTK_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalAttestedLTK:");
}

id objc_msgSend_setLocalDeviceController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalDeviceController:");
}

id objc_msgSend_setLocalDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalDeviceID:");
}

id objc_msgSend_setLocalDeviceNeedsArming_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalDeviceNeedsArming:");
}

id objc_msgSend_setLocalLTK_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalLTK:");
}

id objc_msgSend_setLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocale:");
}

id objc_msgSend_setLocalizedAppName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedAppName:");
}

id objc_msgSend_setLocalizedTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedTitle:");
}

id objc_msgSend_setLocallyGenerated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocallyGenerated:");
}

id objc_msgSend_setLockStateChangedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockStateChangedDate:");
}

id objc_msgSend_setLockedKeyBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockedKeyBag:");
}

id objc_msgSend_setLongTermKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLongTermKey:");
}

id objc_msgSend_setLtk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLtk:");
}

id objc_msgSend_setLtkHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLtkHash:");
}

id objc_msgSend_setLtkID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLtkID:");
}

id objc_msgSend_setLtkSyncing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLtkSyncing:");
}

id objc_msgSend_setLtkTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLtkTimer:");
}

id objc_msgSend_setLtkTimerRetryCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLtkTimerRetryCount:");
}

id objc_msgSend_setMacAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMacAddress:");
}

id objc_msgSend_setMacAddressData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMacAddressData:");
}

id objc_msgSend_setMagnetLinkTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMagnetLinkTimer:");
}

id objc_msgSend_setMajorOSVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMajorOSVersion:");
}

id objc_msgSend_setManateeChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManateeChangedHandler:");
}

id objc_msgSend_setMappedContactIdentifier_relatedContactIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMappedContactIdentifier:relatedContactIdentifiers:");
}

id objc_msgSend_setMasterChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMasterChannel:");
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxConcurrentOperationCount:");
}

id objc_msgSend_setMaxDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxDelay:");
}

id objc_msgSend_setMaxTransferState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxTransferState:");
}

id objc_msgSend_setMaximumNumberOfSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumNumberOfSuggestions:");
}

id objc_msgSend_setMeCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMeCard:");
}

id objc_msgSend_setMeDeviceChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMeDeviceChangedHandler:");
}

id objc_msgSend_setMedBubbleDelayed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMedBubbleDelayed:");
}

id objc_msgSend_setMessageIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageIdentifier:");
}

id objc_msgSend_setMessageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageType:");
}

id objc_msgSend_setMetricDates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetricDates:");
}

id objc_msgSend_setMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetrics:");
}

id objc_msgSend_setMiddleName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMiddleName:");
}

id objc_msgSend_setMinDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinDelay:");
}

id objc_msgSend_setMinRequiredTransferState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinRequiredTransferState:");
}

id objc_msgSend_setMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMode:");
}

id objc_msgSend_setModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModel:");
}

id objc_msgSend_setModelDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModelDescription:");
}

id objc_msgSend_setModelIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModelIdentifier:");
}

id objc_msgSend_setModelName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModelName:");
}

id objc_msgSend_setModificationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModificationDate:");
}

id objc_msgSend_setMotionDetector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMotionDetector:");
}

id objc_msgSend_setMoveToShareSheetCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMoveToShareSheetCompletion:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNavBarTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavBarTitle:");
}

id objc_msgSend_setNearbyDeviceChangedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNearbyDeviceChangedDate:");
}

id objc_msgSend_setNeedsArming_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsArming:");
}

id objc_msgSend_setNeedsImageData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsImageData:");
}

id objc_msgSend_setNeedsKeyboard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsKeyboard:");
}

id objc_msgSend_setNeedsNewImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsNewImage:");
}

id objc_msgSend_setNeedsOffWristBeforePairedUnlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsOffWristBeforePairedUnlock:");
}

id objc_msgSend_setNeedsStrictMotionCheck_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsStrictMotionCheck:");
}

id objc_msgSend_setNetServiceBrowser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNetServiceBrowser:");
}

id objc_msgSend_setNetworkBufferSpaceAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNetworkBufferSpaceAvailable:");
}

id objc_msgSend_setNextState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNextState:");
}

id objc_msgSend_setNiRangingPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNiRangingPeer:");
}

id objc_msgSend_setNiSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNiSession:");
}

id objc_msgSend_setNodeModel_protocol_url_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNodeModel:protocol:url:");
}

id objc_msgSend_setNonce_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNonce:");
}

id objc_msgSend_setNotificationDurationSecs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationDurationSecs:");
}

id objc_msgSend_setNotificationInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationInfo:");
}

id objc_msgSend_setNotificationTicks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationTicks:");
}

id objc_msgSend_setNotificationTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationTimer:");
}

id objc_msgSend_setNotificationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationType:");
}

id objc_msgSend_setNotified_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotified:");
}

id objc_msgSend_setNotifiedForProxy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotifiedForProxy:");
}

id objc_msgSend_setNumberOfSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfSuggestions:");
}

id objc_msgSend_setODiskMountPoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setODiskMountPoints:");
}

id objc_msgSend_setODiskServers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setODiskServers:");
}

id objc_msgSend_setObject_atIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:atIndexedSubscript:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setObjectKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObjectKey:");
}

id objc_msgSend_setOldApproveProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOldApproveProtocol:");
}

id objc_msgSend_setOldWatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOldWatch:");
}

id objc_msgSend_setOnlyRanging_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOnlyRanging:");
}

id objc_msgSend_setOpenAppURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpenAppURL:");
}

id objc_msgSend_setOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptions:");
}

id objc_msgSend_setOsVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOsVersion:");
}

id objc_msgSend_setOtherSessionCancel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOtherSessionCancel:");
}

id objc_msgSend_setOtherStuff_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOtherStuff:");
}

id objc_msgSend_setOutOfBandHints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutOfBandHints:");
}

id objc_msgSend_setOverrideScreenOff_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideScreenOff:");
}

id objc_msgSend_setOverrideScreenOffRescanInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideScreenOffRescanInterval:");
}

id objc_msgSend_setPairedDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairedDeviceID:");
}

id objc_msgSend_setPairingFinishedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairingFinishedHandler:");
}

id objc_msgSend_setPairingID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairingID:");
}

id objc_msgSend_setPairingID_forWatchID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairingID:forWatchID:");
}

id objc_msgSend_setPairingResponseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairingResponseHandler:");
}

id objc_msgSend_setPasscode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPasscode:");
}

id objc_msgSend_setPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPayload:");
}

id objc_msgSend_setPayloadFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPayloadFields:");
}

id objc_msgSend_setPayloadFilterData_mask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPayloadFilterData:mask:");
}

id objc_msgSend_setPeerDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerDevice:");
}

id objc_msgSend_setPeerDisconnectedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerDisconnectedHandler:");
}

id objc_msgSend_setPeerFoundHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerFoundHandler:");
}

id objc_msgSend_setPeerFoundInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerFoundInterval:");
}

id objc_msgSend_setPeerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerIdentifier:");
}

id objc_msgSend_setPeerList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerList:");
}

id objc_msgSend_setPeerMacAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeerMacAddress:");
}

id objc_msgSend_setPendingContentDurationSecs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingContentDurationSecs:");
}

id objc_msgSend_setPendingContentTicks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingContentTicks:");
}

id objc_msgSend_setPeriocularStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeriocularStatus:");
}

id objc_msgSend_setPersonChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonChangedHandler:");
}

id objc_msgSend_setPersonFoundHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonFoundHandler:");
}

id objc_msgSend_setPersonInfoCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonInfoCache:");
}

id objc_msgSend_setPersonLostHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonLostHandler:");
}

id objc_msgSend_setPhoneAutoUnlockEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhoneAutoUnlockEnabled:");
}

id objc_msgSend_setPhoneNumbers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhoneNumbers:");
}

id objc_msgSend_setPhoneState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhoneState:");
}

id objc_msgSend_setPhoneUnlockDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhoneUnlockDate:");
}

id objc_msgSend_setPillDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPillDelay:");
}

id objc_msgSend_setPillUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPillUpdated:");
}

id objc_msgSend_setPipeConnectionChangedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPipeConnectionChangedDate:");
}

id objc_msgSend_setPlaceholder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaceholder:");
}

id objc_msgSend_setPlaceholderFiles_withCreationCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaceholderFiles:withCreationCompletionHandler:");
}

id objc_msgSend_setPolicySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPolicySession:");
}

id objc_msgSend_setPossibleActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPossibleActions:");
}

id objc_msgSend_setPowerState_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPowerState:completion:");
}

id objc_msgSend_setPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicate:");
}

id objc_msgSend_setPreferredChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredChannel:");
}

id objc_msgSend_setPresentedBluetoothError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentedBluetoothError:");
}

id objc_msgSend_setPresentedWiFiError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentedWiFiError:");
}

id objc_msgSend_setPreventNearbyActionAdvertising_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreventNearbyActionAdvertising:");
}

id objc_msgSend_setPreventNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreventNotifications:");
}

id objc_msgSend_setPreventRadarNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreventRadarNotification:");
}

id objc_msgSend_setPreventRepair_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreventRepair:");
}

id objc_msgSend_setPreviousKeyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousKeyIdentifier:");
}

id objc_msgSend_setPreviousSessionIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousSessionIDs:");
}

id objc_msgSend_setPrewarmIdleStartDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrewarmIdleStartDate:");
}

id objc_msgSend_setPrewarmIdleTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrewarmIdleTime:");
}

id objc_msgSend_setPrewarmStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrewarmStart:");
}

id objc_msgSend_setPrewarmStartDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrewarmStartDate:");
}

id objc_msgSend_setPrimaryAppleIDChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryAppleIDChangedHandler:");
}

id objc_msgSend_setPrimaryClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryClient:");
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriority:");
}

id objc_msgSend_setPrivateKeyPersistentReference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrivateKeyPersistentReference:");
}

id objc_msgSend_setProblemFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProblemFlags:");
}

id objc_msgSend_setProductBuildVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProductBuildVersion:");
}

id objc_msgSend_setProductName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProductName:");
}

id objc_msgSend_setProductVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProductVersion:");
}

id objc_msgSend_setProgressHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgressHandler:");
}

id objc_msgSend_setPrompt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrompt:");
}

id objc_msgSend_setPromptForPINHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPromptForPINHandler:");
}

id objc_msgSend_setPromptForPickerHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPromptForPickerHandler:");
}

id objc_msgSend_setProperty_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProperty:forKey:");
}

id objc_msgSend_setProtobufAction_forIncomingRequestsOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProtobufAction:forIncomingRequestsOfType:");
}

id objc_msgSend_setProtobufAction_forIncomingResponsesOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProtobufAction:forIncomingResponsesOfType:");
}

id objc_msgSend_setProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProtocol:");
}

id objc_msgSend_setProxPairProximityEstimator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProxPairProximityEstimator:");
}

id objc_msgSend_setProxyBluetoothID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProxyBluetoothID:");
}

id objc_msgSend_setProxyConnectionTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProxyConnectionTime:");
}

id objc_msgSend_setProxyDeviceModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProxyDeviceModel:");
}

id objc_msgSend_setProxyDiscoverTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProxyDiscoverTime:");
}

id objc_msgSend_setProxyDiscoveryTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProxyDiscoveryTime:");
}

id objc_msgSend_setProxyErrorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProxyErrorCode:");
}

id objc_msgSend_setProxyNotAvailableForUnlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProxyNotAvailableForUnlock:");
}

id objc_msgSend_setProxyRSSI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProxyRSSI:");
}

id objc_msgSend_setPurpose_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPurpose:");
}

id objc_msgSend_setQueueAvailableHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueueAvailableHandler:");
}

id objc_msgSend_setRSSIEstimatorInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRSSIEstimatorInfo:");
}

id objc_msgSend_setRangeable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRangeable:");
}

id objc_msgSend_setRangingCompletedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRangingCompletedHandler:");
}

id objc_msgSend_setRangingErrorString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRangingErrorString:");
}

id objc_msgSend_setRangingInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRangingInterval:");
}

id objc_msgSend_setRangingStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRangingStart:");
}

id objc_msgSend_setRangingStartedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRangingStartedHandler:");
}

id objc_msgSend_setRangingTimedOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRangingTimedOut:");
}

id objc_msgSend_setRangingToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRangingToken:");
}

id objc_msgSend_setReadKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadKey:");
}

id objc_msgSend_setReadNonce_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadNonce:");
}

id objc_msgSend_setReadStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadStream:");
}

id objc_msgSend_setReceivedAWDLInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceivedAWDLInfo:");
}

id objc_msgSend_setReceivedAuthPromptResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceivedAuthPromptResponse:");
}

id objc_msgSend_setReceivedCredentialsHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceivedCredentialsHandler:");
}

id objc_msgSend_setReceivedExchangeRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceivedExchangeRequest:");
}

id objc_msgSend_setReceivedFrameHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceivedFrameHandler:");
}

id objc_msgSend_setReceivedFramePeerHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceivedFramePeerHandler:");
}

id objc_msgSend_setReceivedObjectHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceivedObjectHandler:");
}

id objc_msgSend_setReceivedRequestHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceivedRequestHandler:");
}

id objc_msgSend_setReceivedSetupACK_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceivedSetupACK:");
}

id objc_msgSend_setReceivedTokenACK_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReceivedTokenACK:");
}

id objc_msgSend_setRegistrationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegistrationID:");
}

id objc_msgSend_setRelockedWatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRelockedWatch:");
}

id objc_msgSend_setRemoteAWDLInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteAWDLInfo:");
}

id objc_msgSend_setRemoteDeviceLocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteDeviceLocked:");
}

id objc_msgSend_setRemoteLTK_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteLTK:");
}

id objc_msgSend_setRemoteLTKHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteLTKHash:");
}

id objc_msgSend_setRemoteLTKs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteLTKs:");
}

id objc_msgSend_setRemoteNeedsLTK_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteNeedsLTK:");
}

id objc_msgSend_setRemoteObjectInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteObjectInterface:");
}

id objc_msgSend_setRemotePeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemotePeer:");
}

id objc_msgSend_setRemoteTextEventHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteTextEventHandler:");
}

id objc_msgSend_setRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequest:");
}

id objc_msgSend_setRequestCachePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestCachePolicy:");
}

id objc_msgSend_setRequestCreatedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestCreatedDate:");
}

id objc_msgSend_setRequestData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestData:");
}

id objc_msgSend_setRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestID:");
}

id objc_msgSend_setRequestIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestIdentifier:");
}

id objc_msgSend_setRequestMessageHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestMessageHandler:");
}

id objc_msgSend_setRequestSSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestSSID:");
}

id objc_msgSend_setRequiredServiceTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiredServiceTypes:");
}

id objc_msgSend_setRequiresUnlockedUI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiresUnlockedUI:");
}

id objc_msgSend_setRescanIntervalScreenOff_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRescanIntervalScreenOff:");
}

id objc_msgSend_setResetReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResetReason:");
}

id objc_msgSend_setResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResourceValue:forKey:error:");
}

id objc_msgSend_setResponseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResponseHandler:");
}

id objc_msgSend_setResponseMessageInternalHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResponseMessageInternalHandler:");
}

id objc_msgSend_setResponseTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResponseTimer:");
}

id objc_msgSend_setResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResults:");
}

id objc_msgSend_setRetriedSetup(void *a1, const char *a2, ...)
{
  return _[a1 setRetriedSetup];
}

id objc_msgSend_setRetriedWithEscrowRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRetriedWithEscrowRecord:");
}

id objc_msgSend_setRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoute:");
}

id objc_msgSend_setRpIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRpIdentity:");
}

id objc_msgSend_setRssiLog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRssiLog:");
}

id objc_msgSend_setRssiThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRssiThreshold:");
}

id objc_msgSend_setScanAutoUnlockDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScanAutoUnlockDevices:");
}

id objc_msgSend_setScanCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScanCache:");
}

id objc_msgSend_setScanErrorString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScanErrorString:");
}

id objc_msgSend_setScanPhoneIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScanPhoneIDs:");
}

id objc_msgSend_setScanRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScanRate:");
}

id objc_msgSend_setScanRateOverride_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScanRateOverride:");
}

id objc_msgSend_setScanStateChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScanStateChangedHandler:");
}

id objc_msgSend_setScanTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScanTimer:");
}

id objc_msgSend_setScanWatchIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScanWatchIDs:");
}

id objc_msgSend_setScanner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScanner:");
}

id objc_msgSend_setScreenLockedChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreenLockedChangedHandler:");
}

id objc_msgSend_setScreenOnChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreenOnChangedHandler:");
}

id objc_msgSend_setScreenSaverChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreenSaverChangedHandler:");
}

id objc_msgSend_setSecret_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecret:");
}

id objc_msgSend_setSecurityManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecurityManager:");
}

id objc_msgSend_setSelectedAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedAction:");
}

id objc_msgSend_setSelectedApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedApplication:");
}

id objc_msgSend_setSendDataQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSendDataQueue:");
}

id objc_msgSend_setSendFrameHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSendFrameHandler:");
}

id objc_msgSend_setSendFramePeerHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSendFramePeerHandler:");
}

id objc_msgSend_setSendState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSendState:");
}

id objc_msgSend_setSenderID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSenderID:");
}

id objc_msgSend_setSenderName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSenderName:");
}

id objc_msgSend_setSendersKnownAlias_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSendersKnownAlias:");
}

id objc_msgSend_setSendingConfirmation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSendingConfirmation:");
}

id objc_msgSend_setSentExchangeResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSentExchangeResponse:");
}

id objc_msgSend_setSentImageData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSentImageData:");
}

id objc_msgSend_setSerialNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSerialNumber:");
}

id objc_msgSend_setServerMountPoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerMountPoints:");
}

id objc_msgSend_setServers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServers:");
}

id objc_msgSend_setServiceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServiceIdentifier:");
}

id objc_msgSend_setServiceTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServiceTimer:");
}

id objc_msgSend_setServiceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServiceType:");
}

id objc_msgSend_setSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSession:");
}

id objc_msgSend_setSessionAuthToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionAuthToken:");
}

id objc_msgSend_setSessionCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionCompleted:");
}

id objc_msgSend_setSessionCreated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionCreated:");
}

id objc_msgSend_setSessionCreatedMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionCreatedMessage:");
}

id objc_msgSend_setSessionFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionFlags:");
}

id objc_msgSend_setSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionID:");
}

id objc_msgSend_setSessionKeepAliveTransactionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionKeepAliveTransactionIdentifier:");
}

id objc_msgSend_setSessionRangingKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionRangingKey:");
}

id objc_msgSend_setSetupAuthSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetupAuthSession:");
}

id objc_msgSend_setSetupError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetupError:");
}

id objc_msgSend_setSetupMessageIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetupMessageIdentifier:");
}

id objc_msgSend_setSetupProximityEstimator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetupProximityEstimator:");
}

id objc_msgSend_setSetupRetryDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetupRetryDevice:");
}

id objc_msgSend_setSetupRetryDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetupRetryDeviceID:");
}

id objc_msgSend_setSetupRetryDeviceTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetupRetryDeviceTimer:");
}

id objc_msgSend_setSfService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSfService:");
}

id objc_msgSend_setSf_transferState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSf_transferState:");
}

id objc_msgSend_setShouldAdvertise_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAdvertise:");
}

id objc_msgSend_setShouldAlertOnNotify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAlertOnNotify:");
}

id objc_msgSend_setShouldBackgroundDefaultAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldBackgroundDefaultAction:");
}

id objc_msgSend_setShouldDelayWorkDueToPowerAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldDelayWorkDueToPowerAssertion:");
}

id objc_msgSend_setShouldExtractMediaFromPhotosBundles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldExtractMediaFromPhotosBundles:");
}

id objc_msgSend_setShouldHideDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldHideDate:");
}

id objc_msgSend_setShouldHideTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldHideTime:");
}

id objc_msgSend_setShouldIgnoreDoNotDisturb_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldIgnoreDoNotDisturb:");
}

id objc_msgSend_setShouldPublishProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldPublishProgress:");
}

id objc_msgSend_setShouldReadNetwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldReadNetwork:");
}

id objc_msgSend_setShouldSuppressDefaultAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldSuppressDefaultAction:");
}

id objc_msgSend_setShouldUnlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldUnlock:");
}

id objc_msgSend_setShouldUpdatePersistentServiceTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldUpdatePersistentServiceTokens:");
}

id objc_msgSend_setShouldUpdateUserResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldUpdateUserResponse:");
}

id objc_msgSend_setShouldWaitToCompleteUnlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldWaitToCompleteUnlock:");
}

id objc_msgSend_setShowPINHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowPINHandler:");
}

id objc_msgSend_setSignout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignout:");
}

id objc_msgSend_setSingleItemLocalizedTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSingleItemLocalizedTitle:");
}

id objc_msgSend_setSkipMotionCheck_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSkipMotionCheck:");
}

id objc_msgSend_setSkipReadableCheckFiles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSkipReadableCheckFiles:");
}

id objc_msgSend_setSound_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSound:");
}

id objc_msgSend_setSourceFiles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceFiles:");
}

id objc_msgSend_setSpotlightMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpotlightMetadata:");
}

id objc_msgSend_setStartDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartDate:");
}

id objc_msgSend_setStarted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStarted:");
}

id objc_msgSend_setStashBagSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStashBagSession:");
}

id objc_msgSend_setStashToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStashToken:");
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setState:");
}

id objc_msgSend_setStateHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStateHandle:");
}

id objc_msgSend_setStatusHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusHandler:");
}

id objc_msgSend_setStepData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStepData:");
}

id objc_msgSend_setSubtitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubtitle:");
}

id objc_msgSend_setSucceeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSucceeded:");
}

id objc_msgSend_setSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuccess:");
}

id objc_msgSend_setSuggestedDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuggestedDeviceID:");
}

id objc_msgSend_setSuggestedPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuggestedPeer:");
}

id objc_msgSend_setSuggestedPeers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuggestedPeers:");
}

id objc_msgSend_setSuggestedValidDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuggestedValidDuration:");
}

id objc_msgSend_setSuggestionsHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuggestionsHash:");
}

id objc_msgSend_setSupportsACK_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsACK:");
}

id objc_msgSend_setSupportsAdvertisingUnlocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsAdvertisingUnlocked:");
}

id objc_msgSend_setSupportsAlwaysDirect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsAlwaysDirect:");
}

id objc_msgSend_setSupportsApproveIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsApproveIcon:");
}

id objc_msgSend_setSupportsApproveWithWatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsApproveWithWatch:");
}

id objc_msgSend_setSupportsConfirmationACK_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsConfirmationACK:");
}

id objc_msgSend_setSupportsConnectionCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsConnectionCache:");
}

id objc_msgSend_setSupportsEncryption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsEncryption:");
}

id objc_msgSend_setSupportsHEIC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsHEIC:");
}

id objc_msgSend_setSuppressAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuppressAlert:");
}

id objc_msgSend_setSuppressNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuppressNotification:");
}

id objc_msgSend_setSuppressWatchNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuppressWatchNotification:");
}

id objc_msgSend_setTCPProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTCPProperties:");
}

id objc_msgSend_setTLSMaximumSupportedProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTLSMaximumSupportedProtocol:");
}

id objc_msgSend_setTappedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTappedHandler:");
}

id objc_msgSend_setTcpConnectionComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTcpConnectionComplete:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextInputDidBegin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextInputDidBegin:");
}

id objc_msgSend_setTextInputDidEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextInputDidEnd:");
}

id objc_msgSend_setTextSessionDidBegin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextSessionDidBegin:");
}

id objc_msgSend_setTextSessionDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextSessionDidChange:");
}

id objc_msgSend_setTextSessionDidEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextSessionDidEnd:");
}

id objc_msgSend_setTimeSinceLastMachineWake_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeSinceLastMachineWake:");
}

id objc_msgSend_setTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeout:");
}

id objc_msgSend_setTimeoutHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutHandler:");
}

id objc_msgSend_setTimeoutIntervalForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutIntervalForRequest:");
}

id objc_msgSend_setTimeoutIntervalForResource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutIntervalForResource:");
}

id objc_msgSend_setTimeoutTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutTimeInterval:");
}

id objc_msgSend_setTimeoutTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutTimer:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setTitleKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleKey:");
}

id objc_msgSend_setTlsHandshakeComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTlsHandshakeComplete:");
}

id objc_msgSend_setToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToken:");
}

id objc_msgSend_setTokenExchange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTokenExchange:");
}

id objc_msgSend_setTokenExchangeDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTokenExchangeDate:");
}

id objc_msgSend_setTokenExchangeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTokenExchangeInterval:");
}

id objc_msgSend_setTokenMessageIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTokenMessageIdentifier:");
}

id objc_msgSend_setTotalBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTotalBytes:");
}

id objc_msgSend_setTotalCacheAccessCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTotalCacheAccessCount:");
}

id objc_msgSend_setTotalUnitCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTotalUnitCount:");
}

id objc_msgSend_setTotalUnlockDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTotalUnlockDuration:");
}

id objc_msgSend_setTotalUnlockProcessDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTotalUnlockProcessDuration:");
}

id objc_msgSend_setTrackPeers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackPeers:");
}

id objc_msgSend_setTrackedPeers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackedPeers:");
}

id objc_msgSend_setTransfer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransfer:");
}

id objc_msgSend_setTransferDoneDurationSecs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransferDoneDurationSecs:");
}

id objc_msgSend_setTransferDoneTicks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransferDoneTicks:");
}

id objc_msgSend_setTransferPendingDurationSecs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransferPendingDurationSecs:");
}

id objc_msgSend_setTransferPendingStartTicks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransferPendingStartTicks:");
}

id objc_msgSend_setTransferState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransferState:");
}

id objc_msgSend_setTransferState_forTransfer_shouldNotify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransferState:forTransfer:shouldNotify:");
}

id objc_msgSend_setTransferState_forTransfer_shouldNotify_shouldCleanup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransferState:forTransfer:shouldNotify:shouldCleanup:");
}

id objc_msgSend_setTransferTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransferTypes:");
}

id objc_msgSend_setTransfersCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransfersCompleted:");
}

id objc_msgSend_setTransfersInitiated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransfersInitiated:");
}

id objc_msgSend_setTriggerMs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTriggerMs:");
}

id objc_msgSend_setTriggered_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTriggered:");
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setType:");
}

id objc_msgSend_setUniqueID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUniqueID:");
}

id objc_msgSend_setUnlocalizedAppName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnlocalizedAppName:");
}

id objc_msgSend_setUnlockAuthSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnlockAuthSession:");
}

id objc_msgSend_setUnlockEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnlockEnabled:");
}

id objc_msgSend_setUnlockSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnlockSessionID:");
}

id objc_msgSend_setUnlockSucceeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnlockSucceeded:");
}

id objc_msgSend_setUnlockedOnWristDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnlockedOnWristDate:");
}

id objc_msgSend_setUnlockingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnlockingState:");
}

id objc_msgSend_setUnzipCompressionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnzipCompressionType:");
}

id objc_msgSend_setUpHandoffPreferenceMonitor(void *a1, const char *a2, ...)
{
  return _[a1 setUpHandoffPreferenceMonitor];
}

id objc_msgSend_setUpIDSServices(void *a1, const char *a2, ...)
{
  return _[a1 setUpIDSServices];
}

id objc_msgSend_setUpRapport(void *a1, const char *a2, ...)
{
  return _[a1 setUpRapport];
}

id objc_msgSend_setUpSystemMonitor(void *a1, const char *a2, ...)
{
  return _[a1 setUpSystemMonitor];
}

id objc_msgSend_setUpdateTransferStateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdateTransferStateHandler:");
}

id objc_msgSend_setUpsellDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpsellDevice:");
}

id objc_msgSend_setUrlRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrlRequest:");
}

id objc_msgSend_setUseAKSToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseAKSToken:");
}

id objc_msgSend_setUseBTPipe_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseBTPipe:");
}

id objc_msgSend_setUseCase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseCase:");
}

id objc_msgSend_setUseCases_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseCases:");
}

id objc_msgSend_setUseEncryption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseEncryption:");
}

id objc_msgSend_setUseOpenWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseOpenWithText:");
}

id objc_msgSend_setUseProxy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseProxy:");
}

id objc_msgSend_setUseToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseToken:");
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInfo:");
}

id objc_msgSend_setUserInfoObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInfoObject:forKey:");
}

id objc_msgSend_setUserName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserName:");
}

id objc_msgSend_setUserRequestRequired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserRequestRequired:");
}

id objc_msgSend_setUserResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserResponse:");
}

id objc_msgSend_setUsername_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsername:");
}

id objc_msgSend_setUsingEscrowRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsingEscrowRecord:");
}

id objc_msgSend_setUsingImageCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsingImageCache:");
}

id objc_msgSend_setUsingMessages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsingMessages:");
}

id objc_msgSend_setUsingRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsingRecord:");
}

id objc_msgSend_setValidKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValidKey:");
}

id objc_msgSend_setValidStartDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValidStartDate:");
}

id objc_msgSend_setValidatedEmailHashes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValidatedEmailHashes:");
}

id objc_msgSend_setValidatedPhoneHashes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValidatedPhoneHashes:");
}

id objc_msgSend_setValidationRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValidationRecord:");
}

id objc_msgSend_setValue_forHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forHTTPHeaderField:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setVerifiableIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVerifiableIdentity:");
}

id objc_msgSend_setVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVersion:");
}

id objc_msgSend_setWaitingForAutoUnlockStateUpdateToStartPairedUnlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitingForAutoUnlockStateUpdateToStartPairedUnlock:");
}

id objc_msgSend_setWaitingForCloudPairing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitingForCloudPairing:");
}

id objc_msgSend_setWaitingForDisplayOrClamshell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitingForDisplayOrClamshell:");
}

id objc_msgSend_setWaitingForLTK_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitingForLTK:");
}

id objc_msgSend_setWaitingForNetworkToDisable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitingForNetworkToDisable:");
}

id objc_msgSend_setWaitingToCompleteUnlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitingToCompleteUnlock:");
}

id objc_msgSend_setWaitsForConnectivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitsForConnectivity:");
}

id objc_msgSend_setWakeGestureDates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWakeGestureDates:");
}

id objc_msgSend_setWantsNotificationResponsesDelivered(void *a1, const char *a2, ...)
{
  return _[a1 setWantsNotificationResponsesDelivered];
}

id objc_msgSend_setWasInLockScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWasInLockScreen:");
}

id objc_msgSend_setWatchCurrentlyInList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWatchCurrentlyInList:");
}

id objc_msgSend_setWatchExistedInUnlockList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWatchExistedInUnlockList:");
}

id objc_msgSend_setWatchHardwareModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWatchHardwareModel:");
}

id objc_msgSend_setWatchIDsMissingSessionKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWatchIDsMissingSessionKey:");
}

id objc_msgSend_setWatchNewLTKSyncStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWatchNewLTKSyncStatus:");
}

id objc_msgSend_setWatchOldLTKSyncStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWatchOldLTKSyncStatus:");
}

id objc_msgSend_setWatchSoftwareVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWatchSoftwareVersion:");
}

id objc_msgSend_setWifiEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWifiEnabled:");
}

id objc_msgSend_setWifiErrorCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWifiErrorCount:");
}

id objc_msgSend_setWifiErrorDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWifiErrorDomain:");
}

id objc_msgSend_setWifiRangingErrorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWifiRangingErrorCode:");
}

id objc_msgSend_setWifiRangingResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWifiRangingResults:");
}

id objc_msgSend_setWifiRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWifiRequest:");
}

id objc_msgSend_setWifiRequestStartedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWifiRequestStartedHandler:");
}

id objc_msgSend_setWifiStateChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWifiStateChangedHandler:");
}

id objc_msgSend_setWirelessEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWirelessEnabled:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithCapacity:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWithSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithSet:");
}

id objc_msgSend_setWriteKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWriteKey:");
}

id objc_msgSend_setWriteNonce_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWriteNonce:");
}

id objc_msgSend_setXpcConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setXpcConnection:");
}

id objc_msgSend_set_allowsTCPFastOpen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_allowsTCPFastOpen:");
}

id objc_msgSend_set_appleIDContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_appleIDContext:");
}

id objc_msgSend_set_connectionCachePurgeTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_connectionCachePurgeTimeout:");
}

id objc_msgSend_set_socketStreamProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_socketStreamProperties:");
}

id objc_msgSend_set_sourceApplicationSecondaryIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_sourceApplicationSecondaryIdentifier:");
}

id objc_msgSend_set_tlsTrustPinningPolicyName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_tlsTrustPinningPolicyName:");
}

id objc_msgSend_setupAuthSession(void *a1, const char *a2, ...)
{
  return _[a1 setupAuthSession];
}

id objc_msgSend_setupAuthorizationSession(void *a1, const char *a2, ...)
{
  return _[a1 setupAuthorizationSession];
}

id objc_msgSend_setupDevice_homeIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupDevice:homeIdentifier:completion:");
}

id objc_msgSend_setupError(void *a1, const char *a2, ...)
{
  return _[a1 setupError];
}

id objc_msgSend_setupMessageIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 setupMessageIdentifier];
}

id objc_msgSend_setupProximityEstimator(void *a1, const char *a2, ...)
{
  return _[a1 setupProximityEstimator];
}

id objc_msgSend_setupRequestVersion(void *a1, const char *a2, ...)
{
  return _[a1 setupRequestVersion];
}

id objc_msgSend_setupRetryDevice(void *a1, const char *a2, ...)
{
  return _[a1 setupRetryDevice];
}

id objc_msgSend_setupRetryDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 setupRetryDeviceID];
}

id objc_msgSend_setupRetryDeviceTimer(void *a1, const char *a2, ...)
{
  return _[a1 setupRetryDeviceTimer];
}

id objc_msgSend_setupRetryIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 setupRetryIfNeeded];
}

id objc_msgSend_setupSession(void *a1, const char *a2, ...)
{
  return _[a1 setupSession];
}

id objc_msgSend_sf_failedWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sf_failedWithError:");
}

id objc_msgSend_sf_initWithAppBundle_sessionID_andPersonRealName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sf_initWithAppBundle:sessionID:andPersonRealName:");
}

id objc_msgSend_sf_initWithFileURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sf_initWithFileURL:");
}

id objc_msgSend_sf_personRealName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sf_personRealName");
}

id objc_msgSend_sharePointNodes(void *a1, const char *a2, ...)
{
  return _[a1 sharePointNodes];
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _[a1 shared];
}

id objc_msgSend_sharedAdvertiser(void *a1, const char *a2, ...)
{
  return _[a1 sharedAdvertiser];
}

id objc_msgSend_sharedAgent(void *a1, const char *a2, ...)
{
  return _[a1 sharedAgent];
}

id objc_msgSend_sharedBag(void *a1, const char *a2, ...)
{
  return _[a1 sharedBag];
}

id objc_msgSend_sharedBrowser(void *a1, const char *a2, ...)
{
  return _[a1 sharedBrowser];
}

id objc_msgSend_sharedClient(void *a1, const char *a2, ...)
{
  return _[a1 sharedClient];
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _[a1 sharedConnection];
}

id objc_msgSend_sharedController(void *a1, const char *a2, ...)
{
  return _[a1 sharedController];
}

id objc_msgSend_sharedDaemon(void *a1, const char *a2, ...)
{
  return _[a1 sharedDaemon];
}

id objc_msgSend_sharedEncryptionManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedEncryptionManager];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedKeyManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedKeyManager];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sharedMigrator(void *a1, const char *a2, ...)
{
  return _[a1 sharedMigrator];
}

id objc_msgSend_sharedMonitor(void *a1, const char *a2, ...)
{
  return _[a1 sharedMonitor];
}

id objc_msgSend_sharedNearbyAgent(void *a1, const char *a2, ...)
{
  return _[a1 sharedNearbyAgent];
}

id objc_msgSend_sharedNearbyPipe(void *a1, const char *a2, ...)
{
  return _[a1 sharedNearbyPipe];
}

id objc_msgSend_sharedPayloadManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedPayloadManager];
}

id objc_msgSend_sharedRapportBrowser(void *a1, const char *a2, ...)
{
  return _[a1 sharedRapportBrowser];
}

id objc_msgSend_sharedScanner(void *a1, const char *a2, ...)
{
  return _[a1 sharedScanner];
}

id objc_msgSend_sharedSession(void *a1, const char *a2, ...)
{
  return _[a1 sharedSession];
}

id objc_msgSend_sharedSetupAgent(void *a1, const char *a2, ...)
{
  return _[a1 sharedSetupAgent];
}

id objc_msgSend_sharedTransport(void *a1, const char *a2, ...)
{
  return _[a1 sharedTransport];
}

id objc_msgSend_shouldAbort(void *a1, const char *a2, ...)
{
  return _[a1 shouldAbort];
}

id objc_msgSend_shouldAcceptNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAcceptNewConnection:");
}

id objc_msgSend_shouldAdvertise(void *a1, const char *a2, ...)
{
  return _[a1 shouldAdvertise];
}

id objc_msgSend_shouldAlertOnNotify(void *a1, const char *a2, ...)
{
  return _[a1 shouldAlertOnNotify];
}

id objc_msgSend_shouldBoostScan(void *a1, const char *a2, ...)
{
  return _[a1 shouldBoostScan];
}

id objc_msgSend_shouldCancelTransferForError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldCancelTransferForError:");
}

id objc_msgSend_shouldDelayWorkDueToPowerAssertion(void *a1, const char *a2, ...)
{
  return _[a1 shouldDelayWorkDueToPowerAssertion];
}

id objc_msgSend_shouldEndAfterOpen(void *a1, const char *a2, ...)
{
  return _[a1 shouldEndAfterOpen];
}

id objc_msgSend_shouldExtractMediaFromPhotosBundles(void *a1, const char *a2, ...)
{
  return _[a1 shouldExtractMediaFromPhotosBundles];
}

id objc_msgSend_shouldOpenAutomaticallyAfterUserAccepts(void *a1, const char *a2, ...)
{
  return _[a1 shouldOpenAutomaticallyAfterUserAccepts];
}

id objc_msgSend_shouldPrewarmAttempt(void *a1, const char *a2, ...)
{
  return _[a1 shouldPrewarmAttempt];
}

id objc_msgSend_shouldReadNetwork(void *a1, const char *a2, ...)
{
  return _[a1 shouldReadNetwork];
}

id objc_msgSend_shouldScanForCopyPaste(void *a1, const char *a2, ...)
{
  return _[a1 shouldScanForCopyPaste];
}

id objc_msgSend_shouldScanForHandoff(void *a1, const char *a2, ...)
{
  return _[a1 shouldScanForHandoff];
}

id objc_msgSend_shouldShowErrorForBluetoothEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowErrorForBluetoothEnabled:");
}

id objc_msgSend_shouldShowErrorForWiFiEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowErrorForWiFiEnabled:");
}

id objc_msgSend_shouldStart(void *a1, const char *a2, ...)
{
  return _[a1 shouldStart];
}

id objc_msgSend_shouldStartUnlock(void *a1, const char *a2, ...)
{
  return _[a1 shouldStartUnlock];
}

id objc_msgSend_shouldStopHandoffAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 shouldStopHandoffAdvertising];
}

id objc_msgSend_shouldUnlock(void *a1, const char *a2, ...)
{
  return _[a1 shouldUnlock];
}

id objc_msgSend_shouldUpdateUserResponse(void *a1, const char *a2, ...)
{
  return _[a1 shouldUpdateUserResponse];
}

id objc_msgSend_shouldUseTwoPartPill(void *a1, const char *a2, ...)
{
  return _[a1 shouldUseTwoPartPill];
}

id objc_msgSend_shouldWaitToCompleteUnlock(void *a1, const char *a2, ...)
{
  return _[a1 shouldWaitToCompleteUnlock];
}

id objc_msgSend_showAuthenticatedSiriForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAuthenticatedSiriForDeviceID:");
}

id objc_msgSend_showDevicePickerWithInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showDevicePickerWithInfo:completion:");
}

id objc_msgSend_showIDInName(void *a1, const char *a2, ...)
{
  return _[a1 showIDInName];
}

id objc_msgSend_showMeInWormhole(void *a1, const char *a2, ...)
{
  return _[a1 showMeInWormhole];
}

id objc_msgSend_showOtherDevices(void *a1, const char *a2, ...)
{
  return _[a1 showOtherDevices];
}

id objc_msgSend_showPhoneAutoRelockNotification(void *a1, const char *a2, ...)
{
  return _[a1 showPhoneAutoRelockNotification];
}

id objc_msgSend_showPhoneAutoUnlockNotificationWithBodyText_isUpsell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPhoneAutoUnlockNotificationWithBodyText:isUpsell:");
}

id objc_msgSend_showPinDialogWithOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPinDialogWithOptions:completion:");
}

id objc_msgSend_showSetupRetryNotificationWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSetupRetryNotificationWithDevice:");
}

id objc_msgSend_showSuggestionNotificationWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSuggestionNotificationWithDevice:");
}

id objc_msgSend_showThisComputer(void *a1, const char *a2, ...)
{
  return _[a1 showThisComputer];
}

id objc_msgSend_showUnlockedByDeviceNotificationWithDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showUnlockedByDeviceNotificationWithDeviceID:");
}

id objc_msgSend_showsStatus(void *a1, const char *a2, ...)
{
  return _[a1 showsStatus];
}

id objc_msgSend_shutdown(void *a1, const char *a2, ...)
{
  return _[a1 shutdown];
}

id objc_msgSend_sidebarChildren(void *a1, const char *a2, ...)
{
  return _[a1 sidebarChildren];
}

id objc_msgSend_sidebarMaxCount(void *a1, const char *a2, ...)
{
  return _[a1 sidebarMaxCount];
}

id objc_msgSend_sidebarNodes(void *a1, const char *a2, ...)
{
  return _[a1 sidebarNodes];
}

id objc_msgSend_sidebarNodesFromServerNodes_nonServerCount_addAllNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sidebarNodesFromServerNodes:nonServerCount:addAllNode:");
}

id objc_msgSend_signAndStoreRemoteLTK_forDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signAndStoreRemoteLTK:forDeviceID:");
}

id objc_msgSend_signLTK_modernLTK_forDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signLTK:modernLTK:forDeviceID:");
}

id objc_msgSend_signLTKsForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signLTKsForDeviceID:");
}

id objc_msgSend_signRemoteKey_withLocalKey_localKeyClass_remoteKeyClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signRemoteKey:withLocalKey:localKeyClass:remoteKeyClass:");
}

id objc_msgSend_signedDevices(void *a1, const char *a2, ...)
{
  return _[a1 signedDevices];
}

id objc_msgSend_signedIntoPrimaryiCloudAccount(void *a1, const char *a2, ...)
{
  return _[a1 signedIntoPrimaryiCloudAccount];
}

id objc_msgSend_silentlyCancelRequest(void *a1, const char *a2, ...)
{
  return _[a1 silentlyCancelRequest];
}

id objc_msgSend_silentlyCancelRequestOnMainThread(void *a1, const char *a2, ...)
{
  return _[a1 silentlyCancelRequestOnMainThread];
}

id objc_msgSend_singleItemActionTitle(void *a1, const char *a2, ...)
{
  return _[a1 singleItemActionTitle];
}

id objc_msgSend_skipMotionCheck(void *a1, const char *a2, ...)
{
  return _[a1 skipMotionCheck];
}

id objc_msgSend_smartCoverIsClosed(void *a1, const char *a2, ...)
{
  return _[a1 smartCoverIsClosed];
}

id objc_msgSend_smbConfiguration_netBiosName_workgroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smbConfiguration:netBiosName:workgroup:");
}

id objc_msgSend_smoothedRSSI(void *a1, const char *a2, ...)
{
  return _[a1 smoothedRSSI];
}

id objc_msgSend_someComputerName(void *a1, const char *a2, ...)
{
  return _[a1 someComputerName];
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:");
}

id objc_msgSend_sortUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingComparator:");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_sortedArrayUsingSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingSelector:");
}

id objc_msgSend_soundWithAlertType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "soundWithAlertType:");
}

id objc_msgSend_splitOutFileURLs(void *a1, const char *a2, ...)
{
  return _[a1 splitOutFileURLs];
}

id objc_msgSend_sslSettings(void *a1, const char *a2, ...)
{
  return _[a1 sslSettings];
}

id objc_msgSend_stableBluetoothIdentifierForIDSDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stableBluetoothIdentifierForIDSDevice:");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _[a1 start];
}

id objc_msgSend_startAWDL(void *a1, const char *a2, ...)
{
  return _[a1 startAWDL];
}

id objc_msgSend_startAWDLError(void *a1, const char *a2, ...)
{
  return _[a1 startAWDLError];
}

id objc_msgSend_startAdvertisingOfType_withData_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAdvertisingOfType:withData:withOptions:");
}

id objc_msgSend_startAirDropBrowsing_bundleID_sessionID_helperConnection_delayBonjour_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAirDropBrowsing:bundleID:sessionID:helperConnection:delayBonjour:");
}

id objc_msgSend_startAirDropBrowsing_connection_sessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAirDropBrowsing:connection:sessionID:");
}

id objc_msgSend_startAirDropRequestForNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAirDropRequestForNode:");
}

id objc_msgSend_startBomCopy_destination_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startBomCopy:destination:options:");
}

id objc_msgSend_startBrowser(void *a1, const char *a2, ...)
{
  return _[a1 startBrowser];
}

id objc_msgSend_startBrowsingDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startBrowsingDomain:");
}

id objc_msgSend_startBrowsingWorkgroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startBrowsingWorkgroup:");
}

id objc_msgSend_startCalled(void *a1, const char *a2, ...)
{
  return _[a1 startCalled];
}

id objc_msgSend_startConnectionlessAWDLServiceAdvertisingWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startConnectionlessAWDLServiceAdvertisingWithData:");
}

id objc_msgSend_startConnectionlessAWDLServiceScanning(void *a1, const char *a2, ...)
{
  return _[a1 startConnectionlessAWDLServiceScanning];
}

id objc_msgSend_startConnectionlessAdvertisingWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startConnectionlessAdvertisingWithData:");
}

id objc_msgSend_startDate(void *a1, const char *a2, ...)
{
  return _[a1 startDate];
}

id objc_msgSend_startGoodbyeTimer(void *a1, const char *a2, ...)
{
  return _[a1 startGoodbyeTimer];
}

id objc_msgSend_startHTTPServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startHTTPServer:");
}

id objc_msgSend_startIdentityQueryForNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startIdentityQueryForNode:");
}

id objc_msgSend_startLTKExchange(void *a1, const char *a2, ...)
{
  return _[a1 startLTKExchange];
}

id objc_msgSend_startMonitoringEventType_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startMonitoringEventType:error:");
}

id objc_msgSend_startODiskBrowsing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startODiskBrowsing:");
}

id objc_msgSend_startOpenTimer(void *a1, const char *a2, ...)
{
  return _[a1 startOpenTimer];
}

id objc_msgSend_startPolling_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startPolling:context:");
}

id objc_msgSend_startProgress(void *a1, const char *a2, ...)
{
  return _[a1 startProgress];
}

id objc_msgSend_startProximityScanner(void *a1, const char *a2, ...)
{
  return _[a1 startProximityScanner];
}

id objc_msgSend_startPublishingProgress(void *a1, const char *a2, ...)
{
  return _[a1 startPublishingProgress];
}

id objc_msgSend_startPublishingProgressForPlaceholderFiles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startPublishingProgressForPlaceholderFiles:");
}

id objc_msgSend_startReceivingBody_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startReceivingBody:error:");
}

id objc_msgSend_startReceivingFile_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startReceivingFile:error:");
}

id objc_msgSend_startRecordQuery_type_domain_recordType_interface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRecordQuery:type:domain:recordType:interface:");
}

id objc_msgSend_startRequestingAutoFill(void *a1, const char *a2, ...)
{
  return _[a1 startRequestingAutoFill];
}

id objc_msgSend_startScanningForType_withData_mask_peers_withOptions_boostedScan_duplicates_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startScanningForType:withData:mask:peers:withOptions:boostedScan:duplicates:");
}

id objc_msgSend_startScanningWithIdentifier_deviceUpdatesHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startScanningWithIdentifier:deviceUpdatesHandler:");
}

id objc_msgSend_startSending(void *a1, const char *a2, ...)
{
  return _[a1 startSending];
}

id objc_msgSend_startSendingClassroom(void *a1, const char *a2, ...)
{
  return _[a1 startSendingClassroom];
}

id objc_msgSend_startSendingItems_withProperties_toPersonWithID_clientBundleID_airDropClientDelegate_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSendingItems:withProperties:toPersonWithID:clientBundleID:airDropClientDelegate:");
}

id objc_msgSend_startServer(void *a1, const char *a2, ...)
{
  return _[a1 startServer];
}

id objc_msgSend_startTime(void *a1, const char *a2, ...)
{
  return _[a1 startTime];
}

id objc_msgSend_startTimers(void *a1, const char *a2, ...)
{
  return _[a1 startTimers];
}

id objc_msgSend_startUnlockBLEConnectionWithDevice_encrypted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startUnlockBLEConnectionWithDevice:encrypted:");
}

id objc_msgSend_startUnlockIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 startUnlockIfNeeded];
}

id objc_msgSend_startZipping(void *a1, const char *a2, ...)
{
  return _[a1 startZipping];
}

id objc_msgSend_started(void *a1, const char *a2, ...)
{
  return _[a1 started];
}

id objc_msgSend_stashBagSession(void *a1, const char *a2, ...)
{
  return _[a1 stashBagSession];
}

id objc_msgSend_stashBagSessionAsOriginator_escrowSecret_manifest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stashBagSessionAsOriginator:escrowSecret:manifest:");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stateAppendXPCConnections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateAppendXPCConnections:");
}

id objc_msgSend_stateIsClose(void *a1, const char *a2, ...)
{
  return _[a1 stateIsClose];
}

id objc_msgSend_stateIsMedium(void *a1, const char *a2, ...)
{
  return _[a1 stateIsMedium];
}

id objc_msgSend_stateIsNearby(void *a1, const char *a2, ...)
{
  return _[a1 stateIsNearby];
}

id objc_msgSend_statusChangedHandler(void *a1, const char *a2, ...)
{
  return _[a1 statusChangedHandler];
}

id objc_msgSend_statusCode(void *a1, const char *a2, ...)
{
  return _[a1 statusCode];
}

id objc_msgSend_statusFlags(void *a1, const char *a2, ...)
{
  return _[a1 statusFlags];
}

id objc_msgSend_statusInfo(void *a1, const char *a2, ...)
{
  return _[a1 statusInfo];
}

id objc_msgSend_stepData(void *a1, const char *a2, ...)
{
  return _[a1 stepData];
}

id objc_msgSend_stepSessionWithData_outputData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stepSessionWithData:outputData:");
}

id objc_msgSend_stepWithAuthSession_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stepWithAuthSession:data:");
}

id objc_msgSend_stepWithAuthSession_data_authStep_errorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stepWithAuthSession:data:authStep:errorCode:");
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _[a1 stop];
}

id objc_msgSend_stopAdvertisingOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAdvertisingOfType:");
}

id objc_msgSend_stopAirDropBrowsing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAirDropBrowsing:");
}

id objc_msgSend_stopBrowsingDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopBrowsingDomain:");
}

id objc_msgSend_stopBrowsingWorkgroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopBrowsingWorkgroup:");
}

id objc_msgSend_stopConnectionlessAWDLServiceAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 stopConnectionlessAWDLServiceAdvertising];
}

id objc_msgSend_stopConnectionlessAWDLServiceScanning(void *a1, const char *a2, ...)
{
  return _[a1 stopConnectionlessAWDLServiceScanning];
}

id objc_msgSend_stopConnectionlessAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 stopConnectionlessAdvertising];
}

id objc_msgSend_stopForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopForReason:");
}

id objc_msgSend_stopHandoffAdvertisingIfAppropriate(void *a1, const char *a2, ...)
{
  return _[a1 stopHandoffAdvertisingIfAppropriate];
}

id objc_msgSend_stopIfReady(void *a1, const char *a2, ...)
{
  return _[a1 stopIfReady];
}

id objc_msgSend_stopODiskBrowsing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopODiskBrowsing:");
}

id objc_msgSend_stopProximityScanner(void *a1, const char *a2, ...)
{
  return _[a1 stopProximityScanner];
}

id objc_msgSend_stopRequestingAutoFill(void *a1, const char *a2, ...)
{
  return _[a1 stopRequestingAutoFill];
}

id objc_msgSend_stopScanningAndStartServer(void *a1, const char *a2, ...)
{
  return _[a1 stopScanningAndStartServer];
}

id objc_msgSend_stopScanningForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopScanningForType:");
}

id objc_msgSend_stopScanningWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopScanningWithIdentifier:");
}

id objc_msgSend_stopUnlockBLEConnectionWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopUnlockBLEConnectionWithDevice:");
}

id objc_msgSend_store(void *a1, const char *a2, ...)
{
  return _[a1 store];
}

id objc_msgSend_storeArrayValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeArrayValue:forKey:");
}

id objc_msgSend_storeAttestedLongTermKey_forDeviceID_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeAttestedLongTermKey:forDeviceID:name:");
}

id objc_msgSend_storeCachedImageForHash_device_appName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeCachedImageForHash:device:appName:");
}

id objc_msgSend_storeDataValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeDataValue:forKey:");
}

id objc_msgSend_storeEscrowData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeEscrowData:");
}

id objc_msgSend_storeEscrowSecret_pairingID_deviceID_requiresUnlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeEscrowSecret:pairingID:deviceID:requiresUnlock:");
}

id objc_msgSend_storeExists(void *a1, const char *a2, ...)
{
  return _[a1 storeExists];
}

id objc_msgSend_storeIconValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeIconValue:forKey:");
}

id objc_msgSend_storeKeychainItemWithAttributeDictionary_updateDictionary_addDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeKeychainItemWithAttributeDictionary:updateDictionary:addDictionary:");
}

id objc_msgSend_storeLongTermKey_forDeviceID_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeLongTermKey:forDeviceID:name:");
}

id objc_msgSend_storeLongTermKey_forDeviceID_name_modern_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeLongTermKey:forDeviceID:name:modern:");
}

id objc_msgSend_storeNumberValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeNumberValue:forKey:");
}

id objc_msgSend_storePropertyValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storePropertyValue:forKey:");
}

id objc_msgSend_storeRangingKey_forDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeRangingKey:forDeviceID:");
}

id objc_msgSend_storeRequestValue_forKey_convertToNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeRequestValue:forKey:convertToNumber:");
}

id objc_msgSend_storeStringValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeStringValue:forKey:");
}

id objc_msgSend_storeWithAccount_personInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeWithAccount:personInfo:");
}

id objc_msgSend_storeWithDirectory_readOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeWithDirectory:readOnly:");
}

id objc_msgSend_streamError(void *a1, const char *a2, ...)
{
  return _[a1 streamError];
}

id objc_msgSend_streamHandler(void *a1, const char *a2, ...)
{
  return _[a1 streamHandler];
}

id objc_msgSend_streamHandler_bufferSpaceChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "streamHandler:bufferSpaceChanged:");
}

id objc_msgSend_streamHandler_didReceiveMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "streamHandler:didReceiveMessage:");
}

id objc_msgSend_streamHandler_didReceiveStreamData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "streamHandler:didReceiveStreamData:");
}

id objc_msgSend_streamHandlerDidClose_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "streamHandlerDidClose:withError:");
}

id objc_msgSend_streamStatus(void *a1, const char *a2, ...)
{
  return _[a1 streamStatus];
}

id objc_msgSend_streamToService_withFileHandle_acceptReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "streamToService:withFileHandle:acceptReply:");
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathComponent:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _[a1 stringByDeletingPathExtension];
}

id objc_msgSend_stringByRemovingCharactersFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByRemovingCharactersFromSet:");
}

id objc_msgSend_stringByReplacingCharactersInRange_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingCharactersInRange:withString:");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByTrimmingCharactersInSet:");
}

id objc_msgSend_stringForBrowserMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForBrowserMode:");
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForKey:");
}

id objc_msgSend_stringForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForState:");
}

id objc_msgSend_stringForWatchWristState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForWatchWristState:");
}

id objc_msgSend_stringFromContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromContact:");
}

id objc_msgSend_stringFromContact_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromContact:style:");
}

id objc_msgSend_stringFromState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromState:");
}

id objc_msgSend_stringFromXPCObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromXPCObject:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithString:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subarrayWithRange:");
}

id objc_msgSend_subdataWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subdataWithRange:");
}

id objc_msgSend_submitEvent(void *a1, const char *a2, ...)
{
  return _[a1 submitEvent];
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringFromIndex:");
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringToIndex:");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_subtype(void *a1, const char *a2, ...)
{
  return _[a1 subtype];
}

id objc_msgSend_success(void *a1, const char *a2, ...)
{
  return _[a1 success];
}

id objc_msgSend_suggestedDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 suggestedDeviceID];
}

id objc_msgSend_suggestedPeer(void *a1, const char *a2, ...)
{
  return _[a1 suggestedPeer];
}

id objc_msgSend_suggestedPeers(void *a1, const char *a2, ...)
{
  return _[a1 suggestedPeers];
}

id objc_msgSend_suggestedValidDuration(void *a1, const char *a2, ...)
{
  return _[a1 suggestedValidDuration];
}

id objc_msgSend_suggestionManager(void *a1, const char *a2, ...)
{
  return _[a1 suggestionManager];
}

id objc_msgSend_suggestionManagerQueue(void *a1, const char *a2, ...)
{
  return _[a1 suggestionManagerQueue];
}

id objc_msgSend_suggestionManagerSessionID(void *a1, const char *a2, ...)
{
  return _[a1 suggestionManagerSessionID];
}

id objc_msgSend_suitableContentsDescription(void *a1, const char *a2, ...)
{
  return _[a1 suitableContentsDescription];
}

id objc_msgSend_suitableContentsDescriptionWithSenderName_itemsCount_items_senderIsMe_isVerifiableIdentity_hasPhotos_hasVideos_isModernProgress_transferState_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "suitableContentsDescriptionWithSenderName:itemsCount:items:senderIsMe:isVerifiableIdentity:hasPhotos:hasVideo s:isModernProgress:transferState:");
}

id objc_msgSend_suitableContentsTitle(void *a1, const char *a2, ...)
{
  return _[a1 suitableContentsTitle];
}

id objc_msgSend_supportedApplicationLabels(void *a1, const char *a2, ...)
{
  return _[a1 supportedApplicationLabels];
}

id objc_msgSend_supportsACK(void *a1, const char *a2, ...)
{
  return _[a1 supportsACK];
}

id objc_msgSend_supportsAdvertisingUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 supportsAdvertisingUnlocked];
}

id objc_msgSend_supportsAlwaysDirect(void *a1, const char *a2, ...)
{
  return _[a1 supportsAlwaysDirect];
}

id objc_msgSend_supportsApproveIcon(void *a1, const char *a2, ...)
{
  return _[a1 supportsApproveIcon];
}

id objc_msgSend_supportsApproveWithWatch(void *a1, const char *a2, ...)
{
  return _[a1 supportsApproveWithWatch];
}

id objc_msgSend_supportsConfirmationACK(void *a1, const char *a2, ...)
{
  return _[a1 supportsConfirmationACK];
}

id objc_msgSend_supportsConnectionCache(void *a1, const char *a2, ...)
{
  return _[a1 supportsConnectionCache];
}

id objc_msgSend_supportsEncryption(void *a1, const char *a2, ...)
{
  return _[a1 supportsEncryption];
}

id objc_msgSend_supportsFitnessPlusPairing(void *a1, const char *a2, ...)
{
  return _[a1 supportsFitnessPlusPairing];
}

id objc_msgSend_supportsHEIC(void *a1, const char *a2, ...)
{
  return _[a1 supportsHEIC];
}

id objc_msgSend_supportsHandoff(void *a1, const char *a2, ...)
{
  return _[a1 supportsHandoff];
}

id objc_msgSend_supportsMMSRelay(void *a1, const char *a2, ...)
{
  return _[a1 supportsMMSRelay];
}

id objc_msgSend_supportsSMSRelay(void *a1, const char *a2, ...)
{
  return _[a1 supportsSMSRelay];
}

id objc_msgSend_supportsXcodePairing(void *a1, const char *a2, ...)
{
  return _[a1 supportsXcodePairing];
}

id objc_msgSend_suppressAlert(void *a1, const char *a2, ...)
{
  return _[a1 suppressAlert];
}

id objc_msgSend_suppressNotification(void *a1, const char *a2, ...)
{
  return _[a1 suppressNotification];
}

id objc_msgSend_suppressWatchNotification(void *a1, const char *a2, ...)
{
  return _[a1 suppressWatchNotification];
}

id objc_msgSend_switchToStreaming(void *a1, const char *a2, ...)
{
  return _[a1 switchToStreaming];
}

id objc_msgSend_symbolCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 symbolCharacterSet];
}

id objc_msgSend_syncUnlockEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncUnlockEnabled:");
}

id objc_msgSend_syncedDictionaryForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncedDictionaryForDevice:");
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _[a1 synchronize];
}

id objc_msgSend_synchronousRemoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronousRemoteObjectProxyWithErrorHandler:");
}

id objc_msgSend_systemAttentionState(void *a1, const char *a2, ...)
{
  return _[a1 systemAttentionState];
}

id objc_msgSend_systemInfoChanged_diskInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemInfoChanged:diskInfo:");
}

id objc_msgSend_systemMonitor(void *a1, const char *a2, ...)
{
  return _[a1 systemMonitor];
}

id objc_msgSend_systemPairState(void *a1, const char *a2, ...)
{
  return _[a1 systemPairState];
}

id objc_msgSend_systemUIFlags(void *a1, const char *a2, ...)
{
  return _[a1 systemUIFlags];
}

id objc_msgSend_t208Machine(void *a1, const char *a2, ...)
{
  return _[a1 t208Machine];
}

id objc_msgSend_takeActionOnServerChanged_neighborhood_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "takeActionOnServerChanged:neighborhood:");
}

id objc_msgSend_takeMobileKeybagAssertion(void *a1, const char *a2, ...)
{
  return _[a1 takeMobileKeybagAssertion];
}

id objc_msgSend_targetApplicationProxy(void *a1, const char *a2, ...)
{
  return _[a1 targetApplicationProxy];
}

id objc_msgSend_targetApplicationRecord(void *a1, const char *a2, ...)
{
  return _[a1 targetApplicationRecord];
}

id objc_msgSend_targetAuthTag(void *a1, const char *a2, ...)
{
  return _[a1 targetAuthTag];
}

id objc_msgSend_taskInfo(void *a1, const char *a2, ...)
{
  return _[a1 taskInfo];
}

id objc_msgSend_tcpConnectionComplete(void *a1, const char *a2, ...)
{
  return _[a1 tcpConnectionComplete];
}

id objc_msgSend_tearDownAWDLIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 tearDownAWDLIfNecessary];
}

id objc_msgSend_temporaryBomPath(void *a1, const char *a2, ...)
{
  return _[a1 temporaryBomPath];
}

id objc_msgSend_temporaryDirectory(void *a1, const char *a2, ...)
{
  return _[a1 temporaryDirectory];
}

id objc_msgSend_temporaryWeblocURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "temporaryWeblocURL:");
}

id objc_msgSend_testAutoFillRemove(void *a1, const char *a2, ...)
{
  return _[a1 testAutoFillRemove];
}

id objc_msgSend_testAutofillPost(void *a1, const char *a2, ...)
{
  return _[a1 testAutofillPost];
}

id objc_msgSend_testDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 testDeviceID];
}

id objc_msgSend_testDiskFull(void *a1, const char *a2, ...)
{
  return _[a1 testDiskFull];
}

id objc_msgSend_testHandoffPost(void *a1, const char *a2, ...)
{
  return _[a1 testHandoffPost];
}

id objc_msgSend_testHomeKitDeviceDetected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testHomeKitDeviceDetected:");
}

id objc_msgSend_testKeyboardPost(void *a1, const char *a2, ...)
{
  return _[a1 testKeyboardPost];
}

id objc_msgSend_testKeyboardPostAutoFill(void *a1, const char *a2, ...)
{
  return _[a1 testKeyboardPostAutoFill];
}

id objc_msgSend_testKeyboardRemove(void *a1, const char *a2, ...)
{
  return _[a1 testKeyboardRemove];
}

id objc_msgSend_testKeyboardUpdate(void *a1, const char *a2, ...)
{
  return _[a1 testKeyboardUpdate];
}

id objc_msgSend_testKeychain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testKeychain:");
}

id objc_msgSend_testNFCUI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testNFCUI:");
}

id objc_msgSend_testPINHide(void *a1, const char *a2, ...)
{
  return _[a1 testPINHide];
}

id objc_msgSend_testPINShow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testPINShow:");
}

id objc_msgSend_testPairUI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testPairUI:");
}

id objc_msgSend_testPipePing(void *a1, const char *a2, ...)
{
  return _[a1 testPipePing];
}

id objc_msgSend_testPost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testPost:");
}

id objc_msgSend_testPostBasic(void *a1, const char *a2, ...)
{
  return _[a1 testPostBasic];
}

id objc_msgSend_testProxCardKit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testProxCardKit:");
}

id objc_msgSend_testRemote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testRemote:");
}

id objc_msgSend_testRepairUI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testRepairUI:");
}

id objc_msgSend_testService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testService:");
}

id objc_msgSend_testSetupUIB238_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testSetupUIB238:");
}

id objc_msgSend_testSetupUIPasswordSharing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testSetupUIPasswordSharing:");
}

id objc_msgSend_testSetupUIWHA_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testSetupUIWHA:");
}

id objc_msgSend_testSetupUIWatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testSetupUIWatch:");
}

id objc_msgSend_testUI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testUI:");
}

id objc_msgSend_testUIAppleTVSetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testUIAppleTVSetup:");
}

id objc_msgSend_testUITVLatencyColorimeterSetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testUITVLatencyColorimeterSetup:");
}

id objc_msgSend_testUITVLatencySetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testUITVLatencySetup:");
}

id objc_msgSend_testWatchKeyboard(void *a1, const char *a2, ...)
{
  return _[a1 testWatchKeyboard];
}

id objc_msgSend_testWatchKeyboardAutoFill(void *a1, const char *a2, ...)
{
  return _[a1 testWatchKeyboardAutoFill];
}

id objc_msgSend_testWrappingKeychainItem(void *a1, const char *a2, ...)
{
  return _[a1 testWrappingKeychainItem];
}

id objc_msgSend_thereIsEnoughFreeSpace(void *a1, const char *a2, ...)
{
  return _[a1 thereIsEnoughFreeSpace];
}

id objc_msgSend_thisIsTheFinder(void *a1, const char *a2, ...)
{
  return _[a1 thisIsTheFinder];
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceDate:");
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceNow];
}

id objc_msgSend_timeRemaining_timeNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeRemaining:timeNow:");
}

id objc_msgSend_timeSinceLastMachineWake(void *a1, const char *a2, ...)
{
  return _[a1 timeSinceLastMachineWake];
}

id objc_msgSend_timeZone(void *a1, const char *a2, ...)
{
  return _[a1 timeZone];
}

id objc_msgSend_timeoutTimeInterval(void *a1, const char *a2, ...)
{
  return _[a1 timeoutTimeInterval];
}

id objc_msgSend_timeoutTimer(void *a1, const char *a2, ...)
{
  return _[a1 timeoutTimer];
}

id objc_msgSend_timerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_tlsHandshakeComplete(void *a1, const char *a2, ...)
{
  return _[a1 tlsHandshakeComplete];
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return _[a1 token];
}

id objc_msgSend_tokenExchange(void *a1, const char *a2, ...)
{
  return _[a1 tokenExchange];
}

id objc_msgSend_tokenExchangeDate(void *a1, const char *a2, ...)
{
  return _[a1 tokenExchangeDate];
}

id objc_msgSend_tokenExchangeInterval(void *a1, const char *a2, ...)
{
  return _[a1 tokenExchangeInterval];
}

id objc_msgSend_tokenMessageIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 tokenMessageIdentifier];
}

id objc_msgSend_topic(void *a1, const char *a2, ...)
{
  return _[a1 topic];
}

id objc_msgSend_totalFileSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "totalFileSize:");
}

id objc_msgSend_totalSharedItemsCount(void *a1, const char *a2, ...)
{
  return _[a1 totalSharedItemsCount];
}

id objc_msgSend_totalUnitCount(void *a1, const char *a2, ...)
{
  return _[a1 totalUnitCount];
}

id objc_msgSend_trackPeers(void *a1, const char *a2, ...)
{
  return _[a1 trackPeers];
}

id objc_msgSend_trackedPeers(void *a1, const char *a2, ...)
{
  return _[a1 trackedPeers];
}

id objc_msgSend_transactionMetrics(void *a1, const char *a2, ...)
{
  return _[a1 transactionMetrics];
}

id objc_msgSend_transfer(void *a1, const char *a2, ...)
{
  return _[a1 transfer];
}

id objc_msgSend_transfer_actionTriggeredForAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transfer:actionTriggeredForAction:");
}

id objc_msgSend_transferBubble(void *a1, const char *a2, ...)
{
  return _[a1 transferBubble];
}

id objc_msgSend_transferContainsPhotosAssetBundles(void *a1, const char *a2, ...)
{
  return _[a1 transferContainsPhotosAssetBundles];
}

id objc_msgSend_transferDataFromPayload_sessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transferDataFromPayload:sessionID:");
}

id objc_msgSend_transferDoneTicks(void *a1, const char *a2, ...)
{
  return _[a1 transferDoneTicks];
}

id objc_msgSend_transferIdentifierToHandler(void *a1, const char *a2, ...)
{
  return _[a1 transferIdentifierToHandler];
}

id objc_msgSend_transferIdentifierToTransfer(void *a1, const char *a2, ...)
{
  return _[a1 transferIdentifierToTransfer];
}

id objc_msgSend_transferIsOverPrebufferLimit(void *a1, const char *a2, ...)
{
  return _[a1 transferIsOverPrebufferLimit];
}

id objc_msgSend_transferPendingStartTicks(void *a1, const char *a2, ...)
{
  return _[a1 transferPendingStartTicks];
}

id objc_msgSend_transferState(void *a1, const char *a2, ...)
{
  return _[a1 transferState];
}

id objc_msgSend_transferTypes(void *a1, const char *a2, ...)
{
  return _[a1 transferTypes];
}

id objc_msgSend_transferURLForTransfer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transferURLForTransfer:");
}

id objc_msgSend_transferUpdated(void *a1, const char *a2, ...)
{
  return _[a1 transferUpdated];
}

id objc_msgSend_transferUserResponseUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transferUserResponseUpdated:");
}

id objc_msgSend_transferWithIdentifierWasAccepted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transferWithIdentifierWasAccepted:");
}

id objc_msgSend_transferWithIdentifierWasDeclined_withFailureReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transferWithIdentifierWasDeclined:withFailureReason:");
}

id objc_msgSend_transfersCompleted(void *a1, const char *a2, ...)
{
  return _[a1 transfersCompleted];
}

id objc_msgSend_transfersInitiated(void *a1, const char *a2, ...)
{
  return _[a1 transfersInitiated];
}

id objc_msgSend_transport(void *a1, const char *a2, ...)
{
  return _[a1 transport];
}

id objc_msgSend_transport_didReceiveDisableMessage_fromDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transport:didReceiveDisableMessage:fromDeviceID:");
}

id objc_msgSend_transport_didReceiveKeyOriginatingRegistrationRequestWithSessionID_deviceID_requestData_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transport:didReceiveKeyOriginatingRegistrationRequestWithSessionID:deviceID:requestData:");
}

id objc_msgSend_transport_didReceiveMessageACKForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transport:didReceiveMessageACKForIdentifier:");
}

id objc_msgSend_transport_didReceivePairingRequestWithSessionID_deviceID_requestData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transport:didReceivePairingRequestWithSessionID:deviceID:requestData:");
}

id objc_msgSend_transport_didReceivePayload_type_deviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transport:didReceivePayload:type:deviceID:");
}

id objc_msgSend_transport_didReceiveRegistrationRequestWithSessionID_deviceID_requestData_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transport:didReceiveRegistrationRequestWithSessionID:deviceID:requestData:");
}

id objc_msgSend_transportDidChangeDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transportDidChangeDevices:");
}

id objc_msgSend_transportDidChangeNearbyState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transportDidChangeNearbyState:");
}

id objc_msgSend_transportQueue(void *a1, const char *a2, ...)
{
  return _[a1 transportQueue];
}

id objc_msgSend_trigger(void *a1, const char *a2, ...)
{
  return _[a1 trigger];
}

id objc_msgSend_triggerAppStoreSearch(void *a1, const char *a2, ...)
{
  return _[a1 triggerAppStoreSearch];
}

id objc_msgSend_triggerCloudPairRetryWithShortRetryDeviceIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerCloudPairRetryWithShortRetryDeviceIDs:");
}

id objc_msgSend_triggerDevicesIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 triggerDevicesIfNeeded];
}

id objc_msgSend_triggerHomeKitDeviceDetectedWithURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerHomeKitDeviceDetectedWithURL:completion:");
}

id objc_msgSend_triggerProximityAutoFillDetectedWithURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerProximityAutoFillDetectedWithURL:completion:");
}

id objc_msgSend_triggerSelectedActionIfAppropriate(void *a1, const char *a2, ...)
{
  return _[a1 triggerSelectedActionIfAppropriate];
}

id objc_msgSend_triggered(void *a1, const char *a2, ...)
{
  return _[a1 triggered];
}

id objc_msgSend_trimHeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trimHeader:");
}

id objc_msgSend_tryPIN_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tryPIN:");
}

id objc_msgSend_tvAutoFillPostIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvAutoFillPostIfNeeded:");
}

id objc_msgSend_tvAutoFillRemove_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvAutoFillRemove:");
}

id objc_msgSend_tvsui_applicationIconImageForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tvsui_applicationIconImageForBundleIdentifier:");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_typeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 typeIdentifier];
}

id objc_msgSend_typeWithFilenameExtension_conformingToType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "typeWithFilenameExtension:conformingToType:");
}

id objc_msgSend_types(void *a1, const char *a2, ...)
{
  return _[a1 types];
}

id objc_msgSend_uiShowing(void *a1, const char *a2, ...)
{
  return _[a1 uiShowing];
}

id objc_msgSend_unarchivedObjectOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClass:fromData:error:");
}

id objc_msgSend_unarchivedObjectOfClasses_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClasses:fromData:error:");
}

id objc_msgSend_unifiedAppleIDInfo(void *a1, const char *a2, ...)
{
  return _[a1 unifiedAppleIDInfo];
}

id objc_msgSend_unifiedContactWithIdentifier_keysToFetch_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unifiedContactWithIdentifier:keysToFetch:error:");
}

id objc_msgSend_unifiedContactsMatchingPredicate_keysToFetch_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unifiedContactsMatchingPredicate:keysToFetch:error:");
}

id objc_msgSend_uninstallBonjourNameMonitor(void *a1, const char *a2, ...)
{
  return _[a1 uninstallBonjourNameMonitor];
}

id objc_msgSend_unionSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionSet:");
}

id objc_msgSend_uniqueID(void *a1, const char *a2, ...)
{
  return _[a1 uniqueID];
}

id objc_msgSend_uniqueIDOverride(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIDOverride];
}

id objc_msgSend_uniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIdentifier];
}

id objc_msgSend_unloadAirDrop(void *a1, const char *a2, ...)
{
  return _[a1 unloadAirDrop];
}

id objc_msgSend_unloadBonjour(void *a1, const char *a2, ...)
{
  return _[a1 unloadBonjour];
}

id objc_msgSend_unloadClassroom(void *a1, const char *a2, ...)
{
  return _[a1 unloadClassroom];
}

id objc_msgSend_unloadConnected(void *a1, const char *a2, ...)
{
  return _[a1 unloadConnected];
}

id objc_msgSend_unloadDomains(void *a1, const char *a2, ...)
{
  return _[a1 unloadDomains];
}

id objc_msgSend_unloadManaged(void *a1, const char *a2, ...)
{
  return _[a1 unloadManaged];
}

id objc_msgSend_unloadODisk(void *a1, const char *a2, ...)
{
  return _[a1 unloadODisk];
}

id objc_msgSend_unloadRapport(void *a1, const char *a2, ...)
{
  return _[a1 unloadRapport];
}

id objc_msgSend_unloadSharePoints(void *a1, const char *a2, ...)
{
  return _[a1 unloadSharePoints];
}

id objc_msgSend_unloadSidebarPrefsMonitor(void *a1, const char *a2, ...)
{
  return _[a1 unloadSidebarPrefsMonitor];
}

id objc_msgSend_unloadWindows(void *a1, const char *a2, ...)
{
  return _[a1 unloadWindows];
}

id objc_msgSend_unloadWorkgroups(void *a1, const char *a2, ...)
{
  return _[a1 unloadWorkgroups];
}

id objc_msgSend_unlockAllowed(void *a1, const char *a2, ...)
{
  return _[a1 unlockAllowed];
}

id objc_msgSend_unlockAuthSession(void *a1, const char *a2, ...)
{
  return _[a1 unlockAuthSession];
}

id objc_msgSend_unlockEnabled(void *a1, const char *a2, ...)
{
  return _[a1 unlockEnabled];
}

id objc_msgSend_unlockSessionAsOriginator_usingEscrow_escrowSecret_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unlockSessionAsOriginator:usingEscrow:escrowSecret:");
}

id objc_msgSend_unlockSessionAsOriginator_usingEscrow_escrowSecret_errorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unlockSessionAsOriginator:usingEscrow:escrowSecret:errorCode:");
}

id objc_msgSend_unlockSessionID(void *a1, const char *a2, ...)
{
  return _[a1 unlockSessionID];
}

id objc_msgSend_unlockSessions(void *a1, const char *a2, ...)
{
  return _[a1 unlockSessions];
}

id objc_msgSend_unlockStartTestClientWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unlockStartTestClientWithDevice:");
}

id objc_msgSend_unlockStopTestClient(void *a1, const char *a2, ...)
{
  return _[a1 unlockStopTestClient];
}

id objc_msgSend_unlockSucceeded(void *a1, const char *a2, ...)
{
  return _[a1 unlockSucceeded];
}

id objc_msgSend_unlockUpdateAdvertising_mask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unlockUpdateAdvertising:mask:");
}

id objc_msgSend_unlocked(void *a1, const char *a2, ...)
{
  return _[a1 unlocked];
}

id objc_msgSend_unlockedOnWristDate(void *a1, const char *a2, ...)
{
  return _[a1 unlockedOnWristDate];
}

id objc_msgSend_unlockingState(void *a1, const char *a2, ...)
{
  return _[a1 unlockingState];
}

id objc_msgSend_unpublish(void *a1, const char *a2, ...)
{
  return _[a1 unpublish];
}

id objc_msgSend_unregisterConnectedStreams(void *a1, const char *a2, ...)
{
  return _[a1 unregisterConnectedStreams];
}

id objc_msgSend_unregisterManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterManager:");
}

id objc_msgSend_unregisterObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterObserver:");
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntValue];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_unwrappedDataRepresentationForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unwrappedDataRepresentationForKey:");
}

id objc_msgSend_unzip(void *a1, const char *a2, ...)
{
  return _[a1 unzip];
}

id objc_msgSend_update(void *a1, const char *a2, ...)
{
  return _[a1 update];
}

id objc_msgSend_updateAWDLStateInfo(void *a1, const char *a2, ...)
{
  return _[a1 updateAWDLStateInfo];
}

id objc_msgSend_updateAdvertiser(void *a1, const char *a2, ...)
{
  return _[a1 updateAdvertiser];
}

id objc_msgSend_updateAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 updateAdvertising];
}

id objc_msgSend_updateAirDropAllowed(void *a1, const char *a2, ...)
{
  return _[a1 updateAirDropAllowed];
}

id objc_msgSend_updateApproveBluetoothIDs(void *a1, const char *a2, ...)
{
  return _[a1 updateApproveBluetoothIDs];
}

id objc_msgSend_updateAutoHotspotState(void *a1, const char *a2, ...)
{
  return _[a1 updateAutoHotspotState];
}

id objc_msgSend_updateBluetoothIDCache(void *a1, const char *a2, ...)
{
  return _[a1 updateBluetoothIDCache];
}

id objc_msgSend_updateCacheFromSFCGImageData_cacheKey_contactIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCacheFromSFCGImageData:cacheKey:contactIDs:");
}

id objc_msgSend_updateDiscoverableMode(void *a1, const char *a2, ...)
{
  return _[a1 updateDiscoverableMode];
}

id objc_msgSend_updateDynamicStoreEnabled(void *a1, const char *a2, ...)
{
  return _[a1 updateDynamicStoreEnabled];
}

id objc_msgSend_updateExitPrevention(void *a1, const char *a2, ...)
{
  return _[a1 updateExitPrevention];
}

id objc_msgSend_updateFamilyHotspotState(void *a1, const char *a2, ...)
{
  return _[a1 updateFamilyHotspotState];
}

id objc_msgSend_updateFriendRPIdentityForAccountID_withAirDropClientInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateFriendRPIdentityForAccountID:withAirDropClientInfo:");
}

id objc_msgSend_updateLTKs(void *a1, const char *a2, ...)
{
  return _[a1 updateLTKs];
}

id objc_msgSend_updateLocalLTK(void *a1, const char *a2, ...)
{
  return _[a1 updateLocalLTK];
}

id objc_msgSend_updateLocalLongTermKey_remoteLongTermKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLocalLongTermKey:remoteLongTermKey:");
}

id objc_msgSend_updateLongTermKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLongTermKey:");
}

id objc_msgSend_updateMediaAccessControlSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMediaAccessControlSetting:");
}

id objc_msgSend_updateMetrics_withNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMetrics:withNode:");
}

id objc_msgSend_updatePersonalHotspotAllowed(void *a1, const char *a2, ...)
{
  return _[a1 updatePersonalHotspotAllowed];
}

id objc_msgSend_updatePossibleActions(void *a1, const char *a2, ...)
{
  return _[a1 updatePossibleActions];
}

id objc_msgSend_updatePreferredRemoteLTKForDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePreferredRemoteLTKForDeviceID:");
}

id objc_msgSend_updateRangingKeysIfNeccesary(void *a1, const char *a2, ...)
{
  return _[a1 updateRangingKeysIfNeccesary];
}

id objc_msgSend_updateRangingMeasurementForDevice_inNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRangingMeasurementForDevice:inNode:");
}

id objc_msgSend_updateRangingMeasurementForPerson_inNode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRangingMeasurementForPerson:inNode:");
}

id objc_msgSend_updateRemoteLTKs(void *a1, const char *a2, ...)
{
  return _[a1 updateRemoteLTKs];
}

id objc_msgSend_updateSecondaryNameForNodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSecondaryNameForNodes:");
}

id objc_msgSend_updateSecurityManager(void *a1, const char *a2, ...)
{
  return _[a1 updateSecurityManager];
}

id objc_msgSend_updateSelectionReasonInNodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSelectionReasonInNodes:");
}

id objc_msgSend_updateSendOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSendOptions:");
}

id objc_msgSend_updateServerCacheIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 updateServerCacheIfNeeded];
}

id objc_msgSend_updateServerState(void *a1, const char *a2, ...)
{
  return _[a1 updateServerState];
}

id objc_msgSend_updateSessionKeys(void *a1, const char *a2, ...)
{
  return _[a1 updateSessionKeys];
}

id objc_msgSend_updateShareSheetHostConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateShareSheetHostConfiguration:");
}

id objc_msgSend_updateSmartCoverIsClosed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSmartCoverIsClosed:");
}

id objc_msgSend_updateStringForProxySession(void *a1, const char *a2, ...)
{
  return _[a1 updateStringForProxySession];
}

id objc_msgSend_updateTXTRecordAndNotify(void *a1, const char *a2, ...)
{
  return _[a1 updateTXTRecordAndNotify];
}

id objc_msgSend_updateTransferStateHandler(void *a1, const char *a2, ...)
{
  return _[a1 updateTransferStateHandler];
}

id objc_msgSend_updateWiFiRequest_setRangingPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWiFiRequest:setRangingPeer:");
}

id objc_msgSend_updateWifiState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWifiState:");
}

id objc_msgSend_updateWirelessCritical_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWirelessCritical:");
}

id objc_msgSend_updateWirelessDevice(void *a1, const char *a2, ...)
{
  return _[a1 updateWirelessDevice];
}

id objc_msgSend_updateWithAirDropNodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithAirDropNodes:");
}

id objc_msgSend_updateWithBLEDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithBLEDevice:");
}

id objc_msgSend_updateWithInformation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithInformation:");
}

id objc_msgSend_updateWithRPIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithRPIdentity:");
}

id objc_msgSend_updateWithRawAdvertisementData_receivedViaScanning_isReplay_newAdvertisementHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithRawAdvertisementData:receivedViaScanning:isReplay:newAdvertisementHandler:");
}

id objc_msgSend_updateWithRawAdvertisementData_receivedViaScanning_newAdvertisementHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithRawAdvertisementData:receivedViaScanning:newAdvertisementHandler:");
}

id objc_msgSend_updateWithSFBLEDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithSFBLEDevice:");
}

id objc_msgSend_updateWithService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithService:");
}

id objc_msgSend_updatedTransfer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedTransfer:");
}

id objc_msgSend_uploadTaskWithRequest_fromData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uploadTaskWithRequest:fromData:");
}

id objc_msgSend_uploadTaskWithStreamedRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uploadTaskWithStreamedRequest:");
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 uppercaseString];
}

id objc_msgSend_upsellDevice(void *a1, const char *a2, ...)
{
  return _[a1 upsellDevice];
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _[a1 url];
}

id objc_msgSend_urlAtKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlAtKey:");
}

id objc_msgSend_urlRequest(void *a1, const char *a2, ...)
{
  return _[a1 urlRequest];
}

id objc_msgSend_urlToCGImgDataForCallHandoffIconWithAppIconImageData_contact_replyHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlToCGImgDataForCallHandoffIconWithAppIconImageData:contact:replyHandler:");
}

id objc_msgSend_useAKSToken(void *a1, const char *a2, ...)
{
  return _[a1 useAKSToken];
}

id objc_msgSend_useAttestedProtocol(void *a1, const char *a2, ...)
{
  return _[a1 useAttestedProtocol];
}

id objc_msgSend_useBTPipe(void *a1, const char *a2, ...)
{
  return _[a1 useBTPipe];
}

id objc_msgSend_useCases(void *a1, const char *a2, ...)
{
  return _[a1 useCases];
}

id objc_msgSend_useEncryption(void *a1, const char *a2, ...)
{
  return _[a1 useEncryption];
}

id objc_msgSend_useKeychainForLTKSyncing(void *a1, const char *a2, ...)
{
  return _[a1 useKeychainForLTKSyncing];
}

id objc_msgSend_useProxy(void *a1, const char *a2, ...)
{
  return _[a1 useProxy];
}

id objc_msgSend_useRealRangingKey(void *a1, const char *a2, ...)
{
  return _[a1 useRealRangingKey];
}

id objc_msgSend_useToken(void *a1, const char *a2, ...)
{
  return _[a1 useToken];
}

id objc_msgSend_userDidTapNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userDidTapNotification:");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInfoCompanionViewNotSyncing(void *a1, const char *a2, ...)
{
  return _[a1 userInfoCompanionViewNotSyncing];
}

id objc_msgSend_userInfoForInternetSharing(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForInternetSharing];
}

id objc_msgSend_userInfoForKeychainMismatch(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForKeychainMismatch];
}

id objc_msgSend_userInfoForMacNotSignedIn(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForMacNotSignedIn];
}

id objc_msgSend_userInfoForMissingLTK(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForMissingLTK];
}

id objc_msgSend_userInfoForNewProtocol(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForNewProtocol];
}

id objc_msgSend_userInfoForNoCommunincation(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForNoCommunincation];
}

id objc_msgSend_userInfoForNoPasscode(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForNoPasscode];
}

id objc_msgSend_userInfoForNoWristDetection(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForNoWristDetection];
}

id objc_msgSend_userInfoForNoWristDetectionNoPasscode(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForNoWristDetectionNoPasscode];
}

id objc_msgSend_userInfoForNotCloudPaired(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForNotCloudPaired];
}

id objc_msgSend_userInfoForOldProtocol(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForOldProtocol];
}

id objc_msgSend_userInfoForWatchLocked(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForWatchLocked];
}

id objc_msgSend_userInfoForWatchNotSignedIn(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForWatchNotSignedIn];
}

id objc_msgSend_userInfoForiPhoneNeedsUnlock(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForiPhoneNeedsUnlock];
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceStyle];
}

id objc_msgSend_userName(void *a1, const char *a2, ...)
{
  return _[a1 userName];
}

id objc_msgSend_userRequestRequired(void *a1, const char *a2, ...)
{
  return _[a1 userRequestRequired];
}

id objc_msgSend_userResponse(void *a1, const char *a2, ...)
{
  return _[a1 userResponse];
}

id objc_msgSend_username(void *a1, const char *a2, ...)
{
  return _[a1 username];
}

id objc_msgSend_usingEscrow(void *a1, const char *a2, ...)
{
  return _[a1 usingEscrow];
}

id objc_msgSend_usingImageCache(void *a1, const char *a2, ...)
{
  return _[a1 usingImageCache];
}

id objc_msgSend_usingMessages(void *a1, const char *a2, ...)
{
  return _[a1 usingMessages];
}

id objc_msgSend_usingProxy(void *a1, const char *a2, ...)
{
  return _[a1 usingProxy];
}

id objc_msgSend_usingRecord(void *a1, const char *a2, ...)
{
  return _[a1 usingRecord];
}

id objc_msgSend_validAirDropInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validAirDropInterface:");
}

id objc_msgSend_validFileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validFileName:");
}

id objc_msgSend_validStartDate(void *a1, const char *a2, ...)
{
  return _[a1 validStartDate];
}

id objc_msgSend_validateAirDropItemsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateAirDropItemsWithCompletionHandler:");
}

id objc_msgSend_validateKeybagUUID(void *a1, const char *a2, ...)
{
  return _[a1 validateKeybagUUID];
}

id objc_msgSend_validatePasscode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatePasscode:");
}

id objc_msgSend_validatedEmailAddresses(void *a1, const char *a2, ...)
{
  return _[a1 validatedEmailAddresses];
}

id objc_msgSend_validatedEmailHashes(void *a1, const char *a2, ...)
{
  return _[a1 validatedEmailHashes];
}

id objc_msgSend_validatedFileInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatedFileInfo:");
}

id objc_msgSend_validatedFilesArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatedFilesArray:");
}

id objc_msgSend_validatedItemsArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validatedItemsArray:");
}

id objc_msgSend_validatedPhoneHashes(void *a1, const char *a2, ...)
{
  return _[a1 validatedPhoneHashes];
}

id objc_msgSend_validatedPhoneNumbers(void *a1, const char *a2, ...)
{
  return _[a1 validatedPhoneNumbers];
}

id objc_msgSend_validationRecord(void *a1, const char *a2, ...)
{
  return _[a1 validationRecord];
}

id objc_msgSend_validationRecordInfoForAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validationRecordInfoForAppleID:");
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_valueForEntitlement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForEntitlement:");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueForKey_inTXTRecord_withLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:inTXTRecord:withLength:");
}

id objc_msgSend_valueForKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKeyPath:");
}

id objc_msgSend_valueForProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForProperty:");
}

id objc_msgSend_valueWithNonretainedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithNonretainedObject:");
}

id objc_msgSend_verifiableIdentity(void *a1, const char *a2, ...)
{
  return _[a1 verifiableIdentity];
}

id objc_msgSend_verifiedIdentityForAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifiedIdentityForAppleID:");
}

id objc_msgSend_verifiedIdentityForCertificateChain_emailOrPhone_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifiedIdentityForCertificateChain:emailOrPhone:error:");
}

id objc_msgSend_verifiedIdentityForEmailOrPhone_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifiedIdentityForEmailOrPhone:completion:");
}

id objc_msgSend_verifiedIdentityForEmailOrPhone_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifiedIdentityForEmailOrPhone:queue:completion:");
}

id objc_msgSend_verifyAndParseValidationRecordData_intoDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyAndParseValidationRecordData:intoDictionary:");
}

id objc_msgSend_verifyAuthTag_data_type_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyAuthTag:data:type:error:");
}

id objc_msgSend_verifyKeys(void *a1, const char *a2, ...)
{
  return _[a1 verifyKeys];
}

id objc_msgSend_version(void *a1, const char *a2, ...)
{
  return _[a1 version];
}

id objc_msgSend_viewSyncing(void *a1, const char *a2, ...)
{
  return _[a1 viewSyncing];
}

id objc_msgSend_waitingForAutoUnlockStateUpdateToStartPairedUnlock(void *a1, const char *a2, ...)
{
  return _[a1 waitingForAutoUnlockStateUpdateToStartPairedUnlock];
}

id objc_msgSend_waitingForCloudPairing(void *a1, const char *a2, ...)
{
  return _[a1 waitingForCloudPairing];
}

id objc_msgSend_waitingForDisplayOrClamshell(void *a1, const char *a2, ...)
{
  return _[a1 waitingForDisplayOrClamshell];
}

id objc_msgSend_waitingForLTK(void *a1, const char *a2, ...)
{
  return _[a1 waitingForLTK];
}

id objc_msgSend_waitingForNetworkToDisable(void *a1, const char *a2, ...)
{
  return _[a1 waitingForNetworkToDisable];
}

id objc_msgSend_wakeGestureDates(void *a1, const char *a2, ...)
{
  return _[a1 wakeGestureDates];
}

id objc_msgSend_wantsUpdates(void *a1, const char *a2, ...)
{
  return _[a1 wantsUpdates];
}

id objc_msgSend_wasInLockScreen(void *a1, const char *a2, ...)
{
  return _[a1 wasInLockScreen];
}

id objc_msgSend_watchAvailableForUnlockWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "watchAvailableForUnlockWithCompletionHandler:");
}

id objc_msgSend_watchBuildVersion(void *a1, const char *a2, ...)
{
  return _[a1 watchBuildVersion];
}

id objc_msgSend_watchCurrentlyInList(void *a1, const char *a2, ...)
{
  return _[a1 watchCurrentlyInList];
}

id objc_msgSend_watchExistedInUnlockList(void *a1, const char *a2, ...)
{
  return _[a1 watchExistedInUnlockList];
}

id objc_msgSend_watchIDToCompanionIDStorageFilePath(void *a1, const char *a2, ...)
{
  return _[a1 watchIDToCompanionIDStorageFilePath];
}

id objc_msgSend_watchIDsMissingSessionKey(void *a1, const char *a2, ...)
{
  return _[a1 watchIDsMissingSessionKey];
}

id objc_msgSend_watchIDsToPairingRecords(void *a1, const char *a2, ...)
{
  return _[a1 watchIDsToPairingRecords];
}

id objc_msgSend_watchIDsToPairingRecordsStorageFilePath(void *a1, const char *a2, ...)
{
  return _[a1 watchIDsToPairingRecordsStorageFilePath];
}

id objc_msgSend_watchKeyboardContentForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "watchKeyboardContentForDevice:");
}

id objc_msgSend_watchKeyboardPostIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "watchKeyboardPostIfNeeded:");
}

id objc_msgSend_watchKeyboardRemove_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "watchKeyboardRemove:");
}

id objc_msgSend_watchKeyboardUpdate_info_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "watchKeyboardUpdate:info:");
}

id objc_msgSend_watchKeyboardUpdate_rtiData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "watchKeyboardUpdate:rtiData:");
}

id objc_msgSend_watchLocked(void *a1, const char *a2, ...)
{
  return _[a1 watchLocked];
}

id objc_msgSend_watchModelID(void *a1, const char *a2, ...)
{
  return _[a1 watchModelID];
}

id objc_msgSend_watchNewLTKSyncStatus(void *a1, const char *a2, ...)
{
  return _[a1 watchNewLTKSyncStatus];
}

id objc_msgSend_watchOSVersion(void *a1, const char *a2, ...)
{
  return _[a1 watchOSVersion];
}

id objc_msgSend_watchOldLTKSyncStatus(void *a1, const char *a2, ...)
{
  return _[a1 watchOldLTKSyncStatus];
}

id objc_msgSend_watchRSSI(void *a1, const char *a2, ...)
{
  return _[a1 watchRSSI];
}

id objc_msgSend_watchVersionEligibleForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "watchVersionEligibleForDevice:");
}

id objc_msgSend_watchWristState(void *a1, const char *a2, ...)
{
  return _[a1 watchWristState];
}

id objc_msgSend_weakObjectsHashTable(void *a1, const char *a2, ...)
{
  return _[a1 weakObjectsHashTable];
}

id objc_msgSend_webURLFromInternetLocationFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webURLFromInternetLocationFile:");
}

id objc_msgSend_whereFromInfo(void *a1, const char *a2, ...)
{
  return _[a1 whereFromInfo];
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _[a1 whiteColor];
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceCharacterSet];
}

id objc_msgSend_wiFiManager(void *a1, const char *a2, ...)
{
  return _[a1 wiFiManager];
}

id objc_msgSend_wifiEnabled(void *a1, const char *a2, ...)
{
  return _[a1 wifiEnabled];
}

id objc_msgSend_wifiErrorCount(void *a1, const char *a2, ...)
{
  return _[a1 wifiErrorCount];
}

id objc_msgSend_wifiErrorDomain(void *a1, const char *a2, ...)
{
  return _[a1 wifiErrorDomain];
}

id objc_msgSend_wifiFlags(void *a1, const char *a2, ...)
{
  return _[a1 wifiFlags];
}

id objc_msgSend_wifiPasswordSharingAvailability(void *a1, const char *a2, ...)
{
  return _[a1 wifiPasswordSharingAvailability];
}

id objc_msgSend_wifiRangingError(void *a1, const char *a2, ...)
{
  return _[a1 wifiRangingError];
}

id objc_msgSend_wifiRangingErrorCode(void *a1, const char *a2, ...)
{
  return _[a1 wifiRangingErrorCode];
}

id objc_msgSend_wifiRangingResults(void *a1, const char *a2, ...)
{
  return _[a1 wifiRangingResults];
}

id objc_msgSend_wifiRequest(void *a1, const char *a2, ...)
{
  return _[a1 wifiRequest];
}

id objc_msgSend_wifiRequestQueue(void *a1, const char *a2, ...)
{
  return _[a1 wifiRequestQueue];
}

id objc_msgSend_wifiRequestStartedHandler(void *a1, const char *a2, ...)
{
  return _[a1 wifiRequestStartedHandler];
}

id objc_msgSend_wifiSSIDForSSIDHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wifiSSIDForSSIDHash:");
}

id objc_msgSend_wifiState(void *a1, const char *a2, ...)
{
  return _[a1 wifiState];
}

id objc_msgSend_wifiStateNeedsUpdating(void *a1, const char *a2, ...)
{
  return _[a1 wifiStateNeedsUpdating];
}

id objc_msgSend_windowsNodesDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windowsNodesDidChange:");
}

id objc_msgSend_windowsNodesForWorkgroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windowsNodesForWorkgroup:");
}

id objc_msgSend_wirelessAccessPoint(void *a1, const char *a2, ...)
{
  return _[a1 wirelessAccessPoint];
}

id objc_msgSend_wirelessCarPlay(void *a1, const char *a2, ...)
{
  return _[a1 wirelessCarPlay];
}

id objc_msgSend_wirelessCritical(void *a1, const char *a2, ...)
{
  return _[a1 wirelessCritical];
}

id objc_msgSend_wirelessEnabled(void *a1, const char *a2, ...)
{
  return _[a1 wirelessEnabled];
}

id objc_msgSend_workgroup(void *a1, const char *a2, ...)
{
  return _[a1 workgroup];
}

id objc_msgSend_workgroupChildren(void *a1, const char *a2, ...)
{
  return _[a1 workgroupChildren];
}

id objc_msgSend_workgroupThreshold(void *a1, const char *a2, ...)
{
  return _[a1 workgroupThreshold];
}

id objc_msgSend_workgroups(void *a1, const char *a2, ...)
{
  return _[a1 workgroups];
}

id objc_msgSend_wrapPayload_withType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wrapPayload:withType:");
}

id objc_msgSend_wrapPayload_withType_useProxy_senderID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wrapPayload:withType:useProxy:senderID:");
}

id objc_msgSend_write_maxLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "write:maxLength:");
}

id objc_msgSend_writeClientStream(void *a1, const char *a2, ...)
{
  return _[a1 writeClientStream];
}

id objc_msgSend_writeData_length_toStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeData:length:toStream:");
}

id objc_msgSend_writeFolderRepresentationToDirectory_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeFolderRepresentationToDirectory:error:");
}

id objc_msgSend_writeKey(void *a1, const char *a2, ...)
{
  return _[a1 writeKey];
}

id objc_msgSend_writeNetworkStream(void *a1, const char *a2, ...)
{
  return _[a1 writeNetworkStream];
}

id objc_msgSend_writeNonce(void *a1, const char *a2, ...)
{
  return _[a1 writeNonce];
}

id objc_msgSend_writeSnapshotForTransfer_initialInfo_name_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeSnapshotForTransfer:initialInfo:name:error:");
}

id objc_msgSend_writeToFile_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToFile:options:error:");
}

id objc_msgSend_writeToStreamWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToStreamWithData:");
}

id objc_msgSend_writeToURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:options:error:");
}

id objc_msgSend_xpcArrayForSFNodeArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xpcArrayForSFNodeArray:");
}

id objc_msgSend_xpcConnection(void *a1, const char *a2, ...)
{
  return _[a1 xpcConnection];
}

id objc_msgSend_xpcManagerInterface(void *a1, const char *a2, ...)
{
  return _[a1 xpcManagerInterface];
}

id objc_msgSend_xpcObjectForSFOperationResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xpcObjectForSFOperationResults:");
}

id objc_msgSend_year(void *a1, const char *a2, ...)
{
  return _[a1 year];
}

id objc_msgSend_zip(void *a1, const char *a2, ...)
{
  return _[a1 zip];
}

id objc_msgSend_zipCompressionType(void *a1, const char *a2, ...)
{
  return _[a1 zipCompressionType];
}