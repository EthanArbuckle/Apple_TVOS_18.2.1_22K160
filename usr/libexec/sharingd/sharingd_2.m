uint64_t sub_1001F4A64(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_s *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_s *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  v7 = type metadata accessor for NWEndpoint(0LL);
  v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  if (a1)
  {
    v11 = qword_100643F08;
    swift_retain(a1);
    if (v11 != -1) {
      swift_once(&qword_100643F08, sub_1001EE100);
    }
    v12 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v12, (uint64_t)qword_1006473E0);
    v13 = swift_retain_n(a1, 2LL);
    v14 = (os_log_s *)Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      v17 = swift_slowAlloc(32LL, -1LL);
      v39 = v17;
      *(_DWORD *)v16 = 136315138;
      v18 = NWConnection.debugDescription.getter(v17);
      v20 = v19;
      v37 = sub_10018CDB4(v18, v19, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v16 + 4, v16 + 12);
      swift_release_n(a1, 2LL);
      swift_bridgeObjectRelease(v20);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Creating new AirDrop connection from existing %s", v16, 0xCu);
      swift_arrayDestroy(v17, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1LL, -1LL);
      swift_slowDealloc(v16, -1LL, -1LL);
    }

    else
    {

      swift_release_n(a1, 2LL);
    }

    v26 = sub_10041839C(a1);
    swift_release(a1);
  }

  else
  {
    if (qword_100643F08 != -1) {
      swift_once(&qword_100643F08, sub_1001EE100);
    }
    v36 = v3;
    v21 = type metadata accessor for Logger(0LL);
    v22 = sub_100186DE4(v21, (uint64_t)qword_1006473E0);
    v23 = (os_log_s *)Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Creating new AirDrop connection", v25, 2u);
      swift_slowDealloc(v25, -1LL, -1LL);
    }

    v26 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint;
    v27 = *(void *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_queue);
    v28 = swift_allocObject(&unk_1005D4780, 24LL, 7LL);
    swift_unknownObjectWeakInit(v28 + 16, a2);
    v29 = swift_allocObject(&unk_1005D4780, 24LL, 7LL);
    swift_unknownObjectWeakInit(v29 + 16, a2);
    swift_retain(v28);
    swift_retain(v29);
    v30 = v36;
    sub_1004116A8(v27, a2, a3 & 1, (uint64_t)sub_1001FB674, v28, (uint64_t)sub_1001FB67C, v29);
    v32 = v31;
    swift_release_n(v28, 2LL);
    swift_release_n(v29, 2LL);
    if (!v30)
    {
      sub_10020C834();
      *v10 = v34;
      (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for NWEndpoint.opaque(_:), v7);
      v35 = type metadata accessor for NWConnection(0LL);
      swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
      return NWConnection.init(to:using:)(v10, v32);
    }
  }

  return v26;
}

void sub_1001F4E40(uint64_t a1, sec_trust *a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v7 = a5 + 16;
  swift_beginAccess(a5 + 16, v11, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v7, v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    sub_1001FB31C(a2, a3);
  }

uint64_t sub_1001F4EB4(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 16;
  swift_beginAccess(a4 + 16, v10, 0LL, 0LL);
  uint64_t result = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (result)
  {
    uint64_t v8 = (void *)result;
    sec_identity_t v9 = sub_1002DED54();
    a2();

    return swift_unknownObjectRelease(v9);
  }

  return result;
}

uint64_t sub_1001F4F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NWConnection.State(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v9);
  v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v12 = a2 + 16;
  uint64_t v13 = a3 + 16;
  uint64_t v14 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v11, 1LL, 1LL, v14);
  uint64_t v15 = swift_allocObject(&unk_1005D4780, 24LL, 7LL);
  swift_beginAccess(v12, v26, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v12, v16);
  swift_unknownObjectWeakInit(v15 + 16, Strong);

  uint64_t v18 = swift_allocObject(&unk_1005D47A8, 24LL, 7LL);
  swift_beginAccess(v13, v25, 0LL, 0LL);
  uint64_t v19 = swift_weakLoadStrong(v13);
  swift_weakInit(v18 + 16, v19);
  swift_release(v19);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(&v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)], a1, v6);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (v20 + 48) & ~v20;
  v22 = (char *)swift_allocObject(&unk_1005D47F8, v21 + v8, v20 | 7);
  *((void *)v22 + 2) = 0LL;
  *((void *)v22 + 3) = 0LL;
  *((void *)v22 + 4) = v18;
  *((void *)v22 + 5) = v15;
  (*(void (**)(char *, _BYTE *, uint64_t))(v7 + 32))(&v22[v21], &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)], v6);
  uint64_t v23 = sub_1001B37E8((uint64_t)v11, (uint64_t)&unk_100647670, (uint64_t)v22);
  return swift_release(v23);
}

uint64_t sub_1001F512C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  return swift_task_switch(sub_1001F5148, 0LL, 0LL);
}

uint64_t sub_1001F5148()
{
  uint64_t v1 = *(void *)(v0 + 64) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v1);
  *(void *)(v0 + 88) = Strong;
  if (Strong)
  {
    uint64_t v3 = Strong;
    uint64_t v4 = *(void *)(v0 + 72) + 16LL;
    swift_beginAccess(v4, v0 + 40, 0LL, 0LL);
    uint64_t v6 = swift_unknownObjectWeakLoadStrong(v4, v5);
    *(void *)(v0 + 96) = v6;
    if (v6)
    {
      uint64_t v7 = (void *)swift_task_alloc(dword_10064767C);
      *(void *)(v0 + 104) = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_1001F5218;
      return sub_1001F52A0(*(void *)(v0 + 80), v3);
    }

    swift_release(v3);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F5218()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 96LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 104LL));

  return swift_task_switch(sub_1001F5270, 0LL, 0LL);
}

uint64_t sub_1001F5270()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F52A0(uint64_t a1, uint64_t a2)
{
  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v3[16] = v4;
  v3[17] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0LL);
  v3[18] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[19] = v6;
  v3[20] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for NWError(0LL);
  v3[21] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[22] = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[23] = swift_task_alloc(v9);
  v3[24] = swift_task_alloc(v9);
  v3[25] = swift_task_alloc(v9);
  v3[26] = swift_task_alloc(v9);
  v3[27] = swift_task_alloc(v9);
  v3[28] = swift_task_alloc(v9);
  uint64_t v10 = type metadata accessor for NWConnection.State(0LL);
  v3[29] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v3[30] = v11;
  v3[31] = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v12 = static AirDropActor.shared;
  v3[32] = static AirDropActor.shared;
  return swift_task_switch(sub_1001F53EC, v12, 0LL);
}

uint64_t sub_1001F53EC()
{
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 232);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, *(void *)(v0 + 104), v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for NWConnection.State.waiting(_:))
  {
    os_log_t log = (os_log_t)(v0 + 64);
    uint64_t v5 = *(void *)(v0 + 248);
    uint64_t v6 = *(void *)(v0 + 224);
    uint64_t v7 = *(void *)(v0 + 216);
    uint64_t v8 = *(void *)(v0 + 168);
    uint64_t v9 = *(void *)(v0 + 176);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 240) + 96LL))(v5, *(void *)(v0 + 232));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v6, v5, v8);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    v10(v7, v6, v8);
    int v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v7, v8);
    uint64_t v12 = *(unsigned int **)(v0 + 216);
    uint64_t v13 = *(void *)(v0 + 168);
    uint64_t v14 = *(void *)(v0 + 176);
    if (v11 == enum case for NWError.posix(_:))
    {
      (*(void (**)(void, uint64_t))(v14 + 96))(*(void *)(v0 + 216), v13);
      int v15 = POSIXErrorCode.rawValue.getter(*v12);
      if (v15 == POSIXErrorCode.rawValue.getter(50LL))
      {
        if (qword_100643F08 != -1) {
          swift_once(&qword_100643F08, sub_1001EE100);
        }
        uint64_t v16 = *(void *)(v0 + 224);
        uint64_t v17 = *(void *)(v0 + 208);
        uint64_t v18 = *(void *)(v0 + 168);
        uint64_t v19 = *(void *)(v0 + 112);
        uint64_t v20 = type metadata accessor for Logger(0LL);
        sub_100186DE4(v20, (uint64_t)qword_1006473E0);
        v10(v17, v16, v18);
        uint64_t v21 = swift_retain_n(v19, 2LL);
        loga = (os_log_s *)Logger.logObject.getter(v21);
        os_log_type_t type = static os_log_type_t.default.getter();
        BOOL v22 = os_log_type_enabled(loga, type);
        uint64_t v23 = *(void *)(v0 + 224);
        uint64_t v24 = *(void *)(v0 + 208);
        uint64_t v25 = *(void *)(v0 + 168);
        uint64_t v26 = *(void *)(v0 + 176);
        uint64_t v27 = *(void *)(v0 + 112);
        if (v22)
        {
          uint64_t v28 = swift_slowAlloc(22LL, -1LL);
          v29 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
          uint64_t v185 = swift_slowAlloc(32LL, -1LL);
          uint64_t v196 = v185;
          *(_DWORD *)uint64_t v28 = 138412546;
          uint64_t v30 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
          uint64_t v31 = swift_allocError(v25, v30, 0LL, 0LL);
          v32 = v10;
          uint64_t v33 = v31;
          v32(v34, v24, v25);
          uint64_t v35 = _swift_stdlib_bridgeErrorToNSError(v33);
          *(void *)(v0 + 80) = v35;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v28 + 4, v28 + 12);
          uint64_t *v29 = v35;
          v36 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
          uint64_t v37 = v36(v24, v25);
          *(_WORD *)(v28 + 12) = 2080;
          uint64_t v38 = NWConnection.debugDescription.getter(v37);
          unint64_t v40 = v39;
          *(void *)(v0 + 88) = sub_10018CDB4(v38, v39, &v196);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96, v28 + 14, v28 + 22);
          swift_bridgeObjectRelease(v40);
          swift_release_n(v27, 2LL);
          _os_log_impl( (void *)&_mh_execute_header,  loga,  type,  "Ignoring error %@ for connection %s",  (uint8_t *)v28,  0x16u);
          uint64_t v41 = sub_100183098(&qword_1006454E0);
          swift_arrayDestroy(v29, 1LL, v41);
          swift_slowDealloc(v29, -1LL, -1LL);
          swift_arrayDestroy(v185, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v185, -1LL, -1LL);
          swift_slowDealloc(v28, -1LL, -1LL);

          v36(v23, v25);
        }

        else
        {

          swift_release_n(v27, 2LL);
          v143 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
          v143(v24, v25);
          v143(v23, v25);
        }

        goto LABEL_57;
      }
    }

    else
    {
      (*(void (**)(void, uint64_t))(v14 + 8))(*(void *)(v0 + 216), v13);
    }

    if (qword_100643F08 != -1) {
      swift_once(&qword_100643F08, sub_1001EE100);
    }
    uint64_t v70 = *(void *)(v0 + 224);
    uint64_t v71 = *(void *)(v0 + 200);
    uint64_t v72 = *(void *)(v0 + 168);
    uint64_t v73 = *(void *)(v0 + 112);
    uint64_t v74 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v74, (uint64_t)qword_1006473E0);
    v10(v71, v70, v72);
    uint64_t v75 = swift_retain_n(v73, 2LL);
    v76 = (os_log_s *)Logger.logObject.getter(v75);
    os_log_type_t v77 = static os_log_type_t.default.getter();
    BOOL v78 = os_log_type_enabled(v76, v77);
    uint64_t v79 = *(void *)(v0 + 200);
    v80 = v10;
    uint64_t v82 = *(void *)(v0 + 168);
    uint64_t v81 = *(void *)(v0 + 176);
    uint64_t v83 = *(void *)(v0 + 112);
    if (v78)
    {
      v186 = v80;
      uint64_t v84 = swift_slowAlloc(22LL, -1LL);
      v188 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      uint64_t typeb = swift_slowAlloc(32LL, -1LL);
      uint64_t v196 = typeb;
      *(_DWORD *)uint64_t v84 = 136315394;
      uint64_t v85 = NWConnection.debugDescription.getter(typeb);
      uint64_t v184 = v81;
      unint64_t v87 = v86;
      *(void *)os_log_t log = sub_10018CDB4(v85, v86, &v196);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(log, v0 + 72, v84 + 4, v84 + 12);
      swift_bridgeObjectRelease(v87);
      swift_release_n(v83, 2LL);
      *(_WORD *)(v84 + 12) = 2112;
      uint64_t v88 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v89 = swift_allocError(v82, v88, 0LL, 0LL);
      v186(v90, v79, v82);
      uint64_t v91 = _swift_stdlib_bridgeErrorToNSError(v89);
      *(void *)(v0 + 72) = v91;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v84 + 14, v84 + 22);
      uint64_t *v188 = v91;
      v92 = *(void (**)(uint64_t, uint64_t))(v184 + 8);
      v92(v79, v82);
      _os_log_impl( (void *)&_mh_execute_header,  v76,  v77,  "Waiting for transfer connection %s %@",  (uint8_t *)v84,  0x16u);
      uint64_t v93 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v188, 1LL, v93);
      swift_slowDealloc(v188, -1LL, -1LL);
      swift_arrayDestroy(typeb, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(typeb, -1LL, -1LL);
      swift_slowDealloc(v84, -1LL, -1LL);
    }

    else
    {
      swift_release_n(*(void *)(v0 + 112), 2LL);
      v92 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
      v92(v79, v82);
    }

    *(void *)(v0 + 264) = v92;
    uint64_t v107 = *(void *)(v0 + 128);
    uint64_t v106 = *(void *)(v0 + 136);
    uint64_t v108 = *(void *)(v0 + 120) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint;
    sub_1001A4B84(v108, v106, type metadata accessor for SDAirDropDiscoveredEndpoint);
    BOOL v109 = swift_getEnumCaseMultiPayload(v106, v107) == 1;
    if (v109) {
      v110 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
    }
    else {
      v110 = type metadata accessor for SDAirDropDiscoveredEndpoint;
    }
    sub_1001A4BC8(*(void *)(v0 + 136), v110);
    uint64_t v112 = *(void *)(v0 + 152);
    v111 = *(BOOL **)(v0 + 160);
    uint64_t v113 = *(void *)(v0 + 144);
    uint64_t v114 = *(void *)(v0 + 120) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_sendRequest;
    BOOL *v111 = v109;
    uint64_t v115 = enum case for SFAirDropSend.Failure.resolveFailure(_:);
    uint64_t v116 = type metadata accessor for SFAirDropSend.Failure(0LL);
    v117 = *(void (**)(BOOL *, uint64_t, uint64_t))(*(void *)(v116 - 8) + 104LL);
    v117(v111, v115, v116);
    (*(void (**)(BOOL *, void, uint64_t))(v112 + 104))( v111,  enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:),  v113);
    sub_100275658(v114, v108, (uint64_t)v111);
    (*(void (**)(BOOL *, uint64_t))(v112 + 8))(v111, v113);
    NWConnection.cancel()();
    uint64_t v118 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    uint64_t v119 = swift_allocError(v116, v118, 0LL, 0LL);
    *(void *)(v0 + 272) = v119;
    BOOL *v120 = 0;
    v117(v120, v115, v116);
    v121 = (void *)swift_task_alloc(dword_10064768C);
    *(void *)(v0 + 280) = v121;
    v122 = sub_1001F6654;
LABEL_30:
    void *v121 = v0;
    v121[1] = v122;
    return sub_1001F686C(*(void *)(v0 + 112), v119);
  }

  if (v4 == enum case for NWConnection.State.failed(_:))
  {
    v192 = (uint64_t *)(v0 + 32);
    uint64_t v42 = *(void *)(v0 + 248);
    uint64_t v43 = *(void *)(v0 + 192);
    uint64_t v44 = *(void *)(v0 + 168);
    uint64_t v45 = *(void *)(v0 + 176);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 240) + 96LL))(v42, *(void *)(v0 + 232));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v43, v42, v44);
    if (qword_100643F08 != -1) {
      swift_once(&qword_100643F08, sub_1001EE100);
    }
    uint64_t v47 = *(void *)(v0 + 184);
    uint64_t v46 = *(void *)(v0 + 192);
    uint64_t v48 = *(void *)(v0 + 168);
    uint64_t v49 = *(void *)(v0 + 176);
    uint64_t v50 = *(void *)(v0 + 112);
    uint64_t v51 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v51, (uint64_t)qword_1006473E0);
    os_log_t logb = *(os_log_t *)(v49 + 16);
    ((void (*)(uint64_t, uint64_t, uint64_t))logb)(v47, v46, v48);
    uint64_t v52 = swift_retain_n(v50, 2LL);
    v53 = (os_log_s *)Logger.logObject.getter(v52);
    os_log_type_t v54 = static os_log_type_t.default.getter();
    BOOL v55 = os_log_type_enabled(v53, v54);
    uint64_t v56 = *(void *)(v0 + 176);
    uint64_t v57 = *(void *)(v0 + 184);
    uint64_t v58 = *(void *)(v0 + 168);
    uint64_t v59 = *(void *)(v0 + 112);
    if (v55)
    {
      uint64_t v60 = swift_slowAlloc(22LL, -1LL);
      v187 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      uint64_t typea = swift_slowAlloc(32LL, -1LL);
      uint64_t v196 = typea;
      *(_DWORD *)uint64_t v60 = 136315394;
      uint64_t v61 = NWConnection.debugDescription.getter(typea);
      uint64_t v183 = v56;
      unint64_t v63 = v62;
      uint64_t *v192 = sub_10018CDB4(v61, v62, &v196);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v192, v0 + 40, v60 + 4, v60 + 12);
      swift_bridgeObjectRelease(v63);
      swift_release_n(v59, 2LL);
      *(_WORD *)(v60 + 12) = 2112;
      uint64_t v64 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v65 = swift_allocError(v58, v64, 0LL, 0LL);
      ((void (*)(uint64_t, uint64_t, uint64_t))logb)(v66, v57, v58);
      uint64_t v67 = _swift_stdlib_bridgeErrorToNSError(v65);
      *(void *)(v0 + 40) = v67;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v60 + 14, v60 + 22);
      uint64_t *v187 = v67;
      v68 = *(void (**)(uint64_t, uint64_t))(v183 + 8);
      v68(v57, v58);
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "Transfer connection failed %s %@", (uint8_t *)v60, 0x16u);
      uint64_t v69 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v187, 1LL, v69);
      swift_slowDealloc(v187, -1LL, -1LL);
      swift_arrayDestroy(typea, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(typea, -1LL, -1LL);
      swift_slowDealloc(v60, -1LL, -1LL);
    }

    else
    {
      swift_release_n(*(void *)(v0 + 112), 2LL);
      v68 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
      v68(v57, v58);
    }

    *(void *)(v0 + 288) = v68;
    uint64_t v123 = *(void *)(v0 + 192);
    uint64_t v124 = *(void *)(v0 + 168);
    NWConnection.cancel()();
    uint64_t v125 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
    uint64_t v119 = swift_allocError(v124, v125, 0LL, 0LL);
    *(void *)(v0 + 296) = v119;
    ((void (*)(uint64_t, uint64_t, uint64_t))logb)(v126, v123, v124);
    v121 = (void *)swift_task_alloc(dword_10064768C);
    *(void *)(v0 + 304) = v121;
    v122 = sub_1001F6760;
    goto LABEL_30;
  }

  if (v4 == enum case for NWConnection.State.setup(_:))
  {
    if (qword_100643F08 != -1) {
      swift_once(&qword_100643F08, sub_1001EE100);
    }
    uint64_t v94 = *(void *)(v0 + 112);
    uint64_t v95 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v95, (uint64_t)qword_1006473E0);
    uint64_t v96 = swift_retain_n(v94, 2LL);
    v97 = (os_log_s *)Logger.logObject.getter(v96);
    os_log_type_t v98 = static os_log_type_t.default.getter();
    BOOL v99 = os_log_type_enabled(v97, v98);
    uint64_t v100 = *(void *)(v0 + 112);
    if (v99)
    {
      v101 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v102 = swift_slowAlloc(32LL, -1LL);
      *(_DWORD *)v101 = 136315138;
      uint64_t v196 = v102;
      uint64_t v103 = NWConnection.debugDescription.getter(v102);
      unint64_t v105 = v104;
      *(void *)(v0 + 96) = sub_10018CDB4(v103, v104, &v196);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v101 + 4, v101 + 12);
      swift_bridgeObjectRelease(v105);
      swift_release_n(v100, 2LL);
      _os_log_impl((void *)&_mh_execute_header, v97, v98, "Setting up transfer connection %s", v101, 0xCu);
      swift_arrayDestroy(v102, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v102, -1LL, -1LL);
      swift_slowDealloc(v101, -1LL, -1LL);
    }

    else
    {
      swift_release_n(*(void *)(v0 + 112), 2LL);
    }

    goto LABEL_57;
  }

  v128 = (uint64_t *)(v0 + 56);
  if (v4 != enum case for NWConnection.State.preparing(_:))
  {
    if (v4 == enum case for NWConnection.State.ready(_:))
    {
      if (qword_100643F08 != -1) {
        swift_once(&qword_100643F08, sub_1001EE100);
      }
      uint64_t v144 = *(void *)(v0 + 112);
      uint64_t v145 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v145, (uint64_t)qword_1006473E0);
      uint64_t v146 = swift_retain_n(v144, 2LL);
      v132 = (os_log_s *)Logger.logObject.getter(v146);
      os_log_type_t v133 = static os_log_type_t.default.getter();
      BOOL v147 = os_log_type_enabled(v132, v133);
      uint64_t v135 = *(void *)(v0 + 112);
      if (v147)
      {
        v136 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v138 = swift_slowAlloc(32LL, -1LL);
        *(_DWORD *)v136 = 136315138;
        uint64_t v196 = v138;
        uint64_t v148 = NWConnection.debugDescription.getter(v138);
        unint64_t v150 = v149;
        *(void *)(v0 + 48) = sub_10018CDB4(v148, v149, &v196);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v136 + 4, v136 + 12);
        swift_bridgeObjectRelease(v150);
        swift_release_n(v135, 2LL);
        v142 = "Transfer connection ready %s";
        goto LABEL_43;
      }
    }

    else
    {
      if (v4 != enum case for NWConnection.State.cancelled(_:))
      {
        if (qword_100643F08 != -1) {
          swift_once(&qword_100643F08, sub_1001EE100);
        }
        uint64_t v162 = *(void *)(v0 + 112);
        uint64_t v163 = type metadata accessor for Logger(0LL);
        sub_100186DE4(v163, (uint64_t)qword_1006473E0);
        uint64_t v164 = swift_retain_n(v162, 2LL);
        v165 = (os_log_s *)Logger.logObject.getter(v164);
        os_log_type_t v166 = static os_log_type_t.default.getter();
        BOOL v167 = os_log_type_enabled(v165, v166);
        uint64_t v168 = *(void *)(v0 + 112);
        if (v167)
        {
          v169 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v170 = swift_slowAlloc(32LL, -1LL);
          uint64_t v196 = v170;
          uint64_t v171 = v170;
          *(_DWORD *)v169 = 136315138;
          uint64_t v172 = NWConnection.debugDescription.getter(v170);
          unint64_t v174 = v173;
          *(void *)(v0 + 16) = sub_10018CDB4(v172, v173, &v196);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v169 + 4, v169 + 12);
          swift_bridgeObjectRelease(v174);
          swift_release_n(v168, 2LL);
          _os_log_impl((void *)&_mh_execute_header, v165, v166, "Unknown transfer connection state %s", v169, 0xCu);
          swift_arrayDestroy(v171, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v171, -1LL, -1LL);
          swift_slowDealloc(v169, -1LL, -1LL);
        }

        else
        {
          swift_release_n(*(void *)(v0 + 112), 2LL);
        }

        (*(void (**)(void, void))(*(void *)(v0 + 240) + 8LL))( *(void *)(v0 + 248),  *(void *)(v0 + 232));
        goto LABEL_57;
      }

      if (qword_100643F08 != -1) {
        swift_once(&qword_100643F08, sub_1001EE100);
      }
      uint64_t v152 = *(void *)(v0 + 112);
      uint64_t v153 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v153, (uint64_t)qword_1006473E0);
      uint64_t v154 = swift_retain_n(v152, 2LL);
      v132 = (os_log_s *)Logger.logObject.getter(v154);
      os_log_type_t v155 = static os_log_type_t.default.getter();
      BOOL v156 = os_log_type_enabled(v132, v155);
      uint64_t v135 = *(void *)(v0 + 112);
      if (v156)
      {
        v157 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v158 = swift_slowAlloc(32LL, -1LL);
        uint64_t v196 = v158;
        *(_DWORD *)v157 = 136315138;
        uint64_t v159 = NWConnection.debugDescription.getter(v158);
        unint64_t v161 = v160;
        *(void *)(v0 + 24) = sub_10018CDB4(v159, v160, &v196);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v157 + 4, v157 + 12);
        swift_bridgeObjectRelease(v161);
        swift_release_n(v135, 2LL);
        _os_log_impl((void *)&_mh_execute_header, v132, v155, "Transfer connection invalidated %s", v157, 0xCu);
        swift_arrayDestroy(v158, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v158, -1LL, -1LL);
        v151 = v157;
        goto LABEL_44;
      }
    }

uint64_t sub_1001F6654()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 272LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 256LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 280LL));
  swift_errorRelease(v1);
  return swift_task_switch(sub_1001F66B4, v2, 0LL);
}

uint64_t sub_1001F66B4()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 192);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v8 = *(void *)(v0 + 136);
  swift_task_dealloc(*(void *)(v0 + 248));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F6760()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 296LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 256LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 304LL));
  swift_errorRelease(v1);
  return swift_task_switch(sub_1001F67C0, v2, 0LL);
}

uint64_t sub_1001F67C0()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 192);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v8 = *(void *)(v0 + 136);
  swift_task_dealloc(*(void *)(v0 + 248));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F686C(uint64_t a1, uint64_t a2)
{
  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  uint64_t v4 = sub_100183098((uint64_t *)&unk_1006474F0);
  v3[17] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[18] = v5;
  v3[19] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_1006474E0);
  v3[20] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[21] = v7;
  v3[22] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_1006474C8);
  v3[23] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v3[24] = v9;
  v3[25] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_1006474B0);
  v3[26] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v3[27] = v11;
  v3[28] = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1001F6988, static AirDropActor.shared, 0LL);
}

uint64_t sub_1001F6988()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_helloConnection);
  if (v3) {
    BOOL v4 = v2 == v3;
  }
  else {
    BOOL v4 = 0;
  }
  if (v4)
  {
    uint64_t v11 = (uint64_t *)(v0 + 216);
    uint64_t v17 = *(void *)(v0 + 216);
    uint64_t v14 = (uint64_t *)(v0 + 208);
    uint64_t v18 = *(void *)(v0 + 208);
    uint64_t v15 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_helloContinuation;
    swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_helloContinuation,  v0 + 88,  0LL,  0LL);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1LL, v18))
    {
      uint64_t v16 = 224LL;
      goto LABEL_26;
    }
  }

  else
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_askConnection);
    if (v5) {
      BOOL v6 = v2 == v5;
    }
    else {
      BOOL v6 = 0;
    }
    if (v6)
    {
      uint64_t v11 = (uint64_t *)(v0 + 192);
      uint64_t v19 = *(void *)(v0 + 192);
      uint64_t v14 = (uint64_t *)(v0 + 184);
      uint64_t v20 = *(void *)(v0 + 184);
      uint64_t v15 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_askContinuation;
      swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_askContinuation,  v0 + 64,  0LL,  0LL);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v15, 1LL, v20))
      {
        uint64_t v16 = 200LL;
        goto LABEL_26;
      }
    }

    else
    {
      uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection);
      if (v7) {
        BOOL v8 = v2 == v7;
      }
      else {
        BOOL v8 = 0;
      }
      if (v8)
      {
        uint64_t v11 = (uint64_t *)(v0 + 168);
        uint64_t v21 = *(void *)(v0 + 168);
        uint64_t v14 = (uint64_t *)(v0 + 160);
        uint64_t v22 = *(void *)(v0 + 160);
        uint64_t v15 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContinuation;
        swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContinuation,  v0 + 40,  0LL,  0LL);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v15, 1LL, v22))
        {
          uint64_t v16 = 176LL;
          goto LABEL_26;
        }
      }

      else
      {
        uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_exchangeConnection);
        if (v9) {
          BOOL v10 = v2 == v9;
        }
        else {
          BOOL v10 = 0;
        }
        if (v10)
        {
          uint64_t v11 = (uint64_t *)(v0 + 144);
          uint64_t v12 = *(void *)(v0 + 144);
          uint64_t v14 = (uint64_t *)(v0 + 136);
          uint64_t v13 = *(void *)(v0 + 136);
          uint64_t v15 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_exchangeContinuation;
          swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_exchangeContinuation,  v0 + 16,  0LL,  0LL);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v15, 1LL, v13))
          {
            uint64_t v16 = 152LL;
LABEL_26:
            uint64_t v23 = *(void *)(v0 + v16);
            uint64_t v24 = *v14;
            uint64_t v25 = *v11;
            uint64_t v26 = *(void *)(v0 + 120);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, v15, v24);
            SFProgressContinuation.fail(with:)(v26, v24);
            (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
          }
        }
      }
    }
  }

  uint64_t v27 = *(void *)(v0 + 200);
  uint64_t v28 = *(void *)(v0 + 176);
  uint64_t v29 = *(void *)(v0 + 152);
  swift_task_dealloc(*(void *)(v0 + 224));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F6BD4(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_1006474E0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDrop.Progress(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F08 != -1) {
    swift_once(&qword_100643F08, sub_1001EE100);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v10, (uint64_t)qword_1006473E0);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v23 = v5;
    uint64_t v24 = v3;
    uint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v15 = swift_slowAlloc(32LL, -1LL);
    v28[0] = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    double v16 = COERCE_DOUBLE(SFAirDrop.Progress.percent.getter());
    uint64_t v25 = a1;
    if ((v17 & 1) != 0)
    {
      unint64_t v20 = 0x8000000100505210LL;
      uint64_t v18 = 0xD000000000000015LL;
    }

    else
    {
      uint64_t v18 = Double.description.getter(v16);
      unint64_t v20 = v19;
    }

    uint64_t v27 = sub_10018CDB4(v18, v20, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease(v20);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Upload progress %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1LL, -1LL);
    swift_slowDealloc(v14, -1LL, -1LL);

    uint64_t v3 = v24;
    a1 = v25;
    uint64_t v5 = v23;
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  uint64_t v21 = v26 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContinuation;
  swift_beginAccess(v26 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContinuation, v28, 0LL, 0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v21, 1LL, v2);
  if (!(_DWORD)result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v21, v2);
    SFProgressContinuation.yield(_:)(a1, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

  return result;
}

uint64_t sub_1001F6EA4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100183098(&qword_1006474E0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F08 != -1) {
    swift_once(&qword_100643F08, sub_1001EE100);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v8, (uint64_t)qword_1006473E0);
  swift_errorRetain(a1);
  uint64_t v9 = swift_errorRetain(a1);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v22 = v7;
    uint64_t v12 = swift_slowAlloc(12LL, -1LL);
    uint64_t v21 = v2;
    os_log_type_t v13 = (uint8_t *)v12;
    uint64_t v14 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)os_log_type_t v13 = 138412290;
    swift_errorRetain(a1);
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError(a1);
    uint64_t v23 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v13 + 4, v13 + 12);
    *uint64_t v14 = v15;
    uint64_t v7 = v22;
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Send compression failed %@", v13, 0xCu);
    uint64_t v16 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v14, 1LL, v16);
    swift_slowDealloc(v14, -1LL, -1LL);
    char v17 = v13;
    uint64_t v2 = v21;
    swift_slowDealloc(v17, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  uint64_t v18 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContinuation;
  swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContinuation, &v23, 0LL, 0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v18, 1LL, v4);
  if (!(_DWORD)result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v18, v4);
    SFProgressContinuation.fail(with:)(a1, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  return result;
}

uint64_t sub_1001F7334()
{
  return type metadata accessor for SDAirDropSendConnection(0LL);
}

uint64_t type metadata accessor for SDAirDropSendConnection(uint64_t a1)
{
  return sub_1001A4AD0(a1, (uint64_t *)&unk_100647490, (uint64_t)&nominal type descriptor for SDAirDropSendConnection);
}

void sub_1001F7350(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint(319LL);
  if (v3 <= 0x3F)
  {
    v24[0] = *(void *)(v2 - 8) + 64LL;
    v24[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v24[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v24[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    uint64_t v4 = type metadata accessor for SFAirDropSend.Request(319LL);
    if (v5 <= 0x3F)
    {
      v24[4] = *(void *)(v4 - 8) + 64LL;
      v24[5] = (char *)&value witness table for Builtin.Int32 + 64;
      v24[6] = "\b";
      sub_1001C1100(319LL, &qword_1006474A0, _s12HelloRequestVMa);
      if (v7 <= 0x3F)
      {
        v24[7] = *(void *)(v6 - 8) + 64LL;
        sub_1001F7588(319LL, &qword_1006474A8, &qword_1006474B0);
        if (v9 <= 0x3F)
        {
          v24[8] = *(void *)(v8 - 8) + 64LL;
          v24[9] = "\b";
          sub_1001C1100(319LL, &qword_1006474B8, _s14descr1005DF7D1C10AskRequestVMa);
          if (v11 <= 0x3F)
          {
            v24[10] = *(void *)(v10 - 8) + 64LL;
            v24[11] = "\b";
            sub_1001F7588(319LL, &qword_1006474C0, &qword_1006474C8);
            if (v13 <= 0x3F)
            {
              v24[12] = *(void *)(v12 - 8) + 64LL;
              sub_1001C1100(319LL, &qword_1006474D0, _s14descr1005D9BD1C13UploadRequestVMa);
              if (v15 <= 0x3F)
              {
                v24[13] = *(void *)(v14 - 8) + 64LL;
                v24[14] = "\b";
                v24[15] = "\b";
                sub_1001F7588(319LL, &qword_1006474D8, &qword_1006474E0);
                if (v17 <= 0x3F)
                {
                  v24[16] = *(void *)(v16 - 8) + 64LL;
                  v24[17] = (char *)&value witness table for Builtin.BridgeObject + 64;
                  v24[18] = "\b";
                  v24[19] = "\b";
                  sub_1001F7588(319LL, &qword_1006474E8, (uint64_t *)&unk_1006474F0);
                  if (v19 <= 0x3F)
                  {
                    v24[20] = *(void *)(v18 - 8) + 64LL;
                    v24[21] = "\b";
                    uint64_t v20 = type metadata accessor for SDAirDropSendConnectionTelemetry(319LL);
                    if (v21 <= 0x3F)
                    {
                      v24[22] = *(void *)(v20 - 8) + 64LL;
                      uint64_t v22 = type metadata accessor for SFNWInterfaceType(319LL);
                      if (v23 <= 0x3F)
                      {
                        v24[23] = *(void *)(v22 - 8) + 64LL;
                        swift_updateClassMetadata2(a1, 256LL, 24LL, v24, a1 + 80);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

void sub_1001F7588(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    uint64_t v5 = sub_100183124(a3);
    unint64_t v6 = type metadata accessor for Optional(a1, v5);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }

uint64_t type metadata accessor for SDAirDropSendConnectionTelemetry(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_100647558, (uint64_t)&nominal type descriptor for SDAirDropSendConnectionTelemetry);
}

uint64_t *sub_1001F75E8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v11);
  }

  else
  {
    uint64_t v7 = type metadata accessor for Date(0LL);
    uint64_t v8 = *(void *)(v7 - 8);
    unint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1LL, v7))
    {
      uint64_t v10 = sub_100183098(&qword_1006457E8);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0LL, 1LL, v7);
    }

    uint64_t v12 = a3[5];
    unint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1LL, v7))
    {
      uint64_t v15 = sub_100183098(&qword_1006457E8);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0LL, 1LL, v7);
    }

    uint64_t v16 = a3[6];
    unint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1LL, v7))
    {
      uint64_t v19 = sub_100183098(&qword_1006457E8);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0LL, 1LL, v7);
    }

    uint64_t v20 = a3[7];
    unint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (v9((uint64_t *)((char *)a2 + v20), 1LL, v7))
    {
      uint64_t v23 = sub_100183098(&qword_1006457E8);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0LL, 1LL, v7);
    }

    uint64_t v24 = a3[8];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    if (v9((uint64_t *)((char *)a2 + v24), 1LL, v7))
    {
      uint64_t v27 = sub_100183098(&qword_1006457E8);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0LL, 1LL, v7);
    }

    uint64_t v28 = a3[9];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    if (v9((uint64_t *)v30, 1LL, v7))
    {
      uint64_t v31 = sub_100183098(&qword_1006457E8);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0LL, 1LL, v7);
    }
  }

  return a1;
}

uint64_t sub_1001F78FC(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v7 = a1 + a2[5];
  if (!v6(v7, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v8 = a1 + a2[6];
  if (!v6(v8, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  }
  uint64_t v9 = a1 + a2[7];
  if (!v6(v9, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
  }
  uint64_t v10 = a1 + a2[8];
  if (!v6(v10, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v10, v4);
  }
  uint64_t v11 = a1 + a2[9];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v11, 1LL, v4);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v11, v4);
  }
  return result;
}

char *sub_1001F7A50(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1LL, v6))
  {
    uint64_t v9 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
  }

  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1LL, v6))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0LL, 1LL, v6);
  }

  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v8(&a2[v14], 1LL, v6))
  {
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0LL, 1LL, v6);
  }

  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if (v8(&a2[v18], 1LL, v6))
  {
    uint64_t v21 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0LL, 1LL, v6);
  }

  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  if (v8(&a2[v22], 1LL, v6))
  {
    uint64_t v25 = sub_100183098(&qword_1006457E8);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v23, v24, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0LL, 1LL, v6);
  }

  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  if (v8(v28, 1LL, v6))
  {
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v27, v28, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v27, 0LL, 1LL, v6);
  }

  return a1;
}

char *sub_1001F7D38(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1LL, v6);
  int v16 = v8(v14, 1LL, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0LL, 1LL, v6);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1LL, v6);
  int v22 = v8(v20, 1LL, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0LL, 1LL, v6);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
LABEL_19:
  uint64_t v24 = a3[7];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  int v27 = v8(&a1[v24], 1LL, v6);
  int v28 = v8(v26, 1LL, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0LL, 1LL, v6);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = a3[8];
  uint64_t v31 = &a1[v30];
  v32 = &a2[v30];
  int v33 = v8(&a1[v30], 1LL, v6);
  int v34 = v8(v32, 1LL, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v31, v32, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0LL, 1LL, v6);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
LABEL_30:
    uint64_t v35 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v31, v32, v6);
LABEL_31:
  uint64_t v36 = a3[9];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  int v39 = v8(&a1[v36], 1LL, v6);
  int v40 = v8(v38, 1LL, v6);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v37, v38, v6);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
    goto LABEL_36;
  }

  if (v40)
  {
LABEL_36:
    uint64_t v41 = sub_100183098(&qword_1006457E8);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v37, v38, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v37, 0LL, 1LL, v6);
  return a1;
}

char *sub_1001F81C0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1LL, v6))
  {
    uint64_t v9 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
  }

  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1LL, v6))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0LL, 1LL, v6);
  }

  uint64_t v14 = a3[6];
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  if (v8(&a2[v14], 1LL, v6))
  {
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0LL, 1LL, v6);
  }

  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if (v8(&a2[v18], 1LL, v6))
  {
    uint64_t v21 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0LL, 1LL, v6);
  }

  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  if (v8(&a2[v22], 1LL, v6))
  {
    uint64_t v25 = sub_100183098(&qword_1006457E8);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v23, v24, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0LL, 1LL, v6);
  }

  uint64_t v26 = a3[9];
  int v27 = &a1[v26];
  int v28 = &a2[v26];
  if (v8(v28, 1LL, v6))
  {
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v27, v28, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v27, 0LL, 1LL, v6);
  }

  return a1;
}

char *sub_1001F84A8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1LL, v6);
  int v16 = v8(v14, 1LL, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0LL, 1LL, v6);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1LL, v6);
  int v22 = v8(v20, 1LL, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0LL, 1LL, v6);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
LABEL_19:
  uint64_t v24 = a3[7];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  int v27 = v8(&a1[v24], 1LL, v6);
  int v28 = v8(v26, 1LL, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0LL, 1LL, v6);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = a3[8];
  uint64_t v31 = &a1[v30];
  v32 = &a2[v30];
  int v33 = v8(&a1[v30], 1LL, v6);
  int v34 = v8(v32, 1LL, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v31, v32, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0LL, 1LL, v6);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
LABEL_30:
    uint64_t v35 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v31, v32, v6);
LABEL_31:
  uint64_t v36 = a3[9];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  int v39 = v8(&a1[v36], 1LL, v6);
  int v40 = v8(v38, 1LL, v6);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v37, v38, v6);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
    goto LABEL_36;
  }

  if (v40)
  {
LABEL_36:
    uint64_t v41 = sub_100183098(&qword_1006457E8);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v37, v38, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v37, 0LL, 1LL, v6);
  return a1;
}

uint64_t sub_1001F8930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F893C);
}

uint64_t sub_1001F893C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_1006457E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48LL))(a1, a2, v4);
}

uint64_t sub_1001F897C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F8988);
}

uint64_t sub_1001F8988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_1006457E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(a1, a2, a2, v4);
}

void sub_1001F89CC(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = v4[0];
    v4[2] = v4[0];
    v4[3] = v4[0];
    v4[4] = v4[0];
    v4[5] = v4[0];
    swift_initStructMetadata(a1, 256LL, 6LL, v4, a1 + 16);
  }

uint64_t sub_1001F8A4C()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v22 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v22 - v12;
  sub_1001915A4(v0, (uint64_t)v6, &qword_1006457E8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1LL, v7) == 1)
  {
    uint64_t v15 = (uint64_t)v6;
LABEL_5:
    sub_100187100(v15, &qword_1006457E8);
    return 0LL;
  }

  int v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v13, v6, v7);
  uint64_t v17 = type metadata accessor for SDAirDropSendConnectionTelemetry(0LL);
  sub_1001915A4(v0 + *(int *)(v17 + 20), (uint64_t)v4, &qword_1006457E8);
  if (v14(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v15 = (uint64_t)v4;
    goto LABEL_5;
  }

  v16(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v20)(v13, v7);
  double v21 = v19 * 1000.0;
  if ((~COERCE__INT64(v19 * 1000.0) & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }

  if (v21 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }

  if (v21 < 9.22337204e18) {
    return (uint64_t)v21;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1001F8C7C()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v22 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v22 - v12;
  sub_1001915A4(v0, (uint64_t)v6, &qword_1006457E8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1LL, v7) == 1)
  {
    uint64_t v15 = (uint64_t)v6;
LABEL_5:
    sub_100187100(v15, &qword_1006457E8);
    return 0LL;
  }

  int v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v13, v6, v7);
  uint64_t v17 = type metadata accessor for SDAirDropSendConnectionTelemetry(0LL);
  sub_1001915A4(v0 + *(int *)(v17 + 24), (uint64_t)v4, &qword_1006457E8);
  if (v14(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v15 = (uint64_t)v4;
    goto LABEL_5;
  }

  v16(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v20)(v13, v7);
  double v21 = v19 * 1000.0;
  if ((~COERCE__INT64(v19 * 1000.0) & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }

  if (v21 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }

  if (v21 < 9.22337204e18) {
    return (uint64_t)v21;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1001F8EAC()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v22 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v22 - v12;
  uint64_t v14 = type metadata accessor for SDAirDropSendConnectionTelemetry(0LL);
  sub_1001915A4(v0 + *(int *)(v14 + 28), (uint64_t)v6, &qword_1006457E8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1LL, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_100187100(v16, &qword_1006457E8);
    return 0LL;
  }

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_1001915A4(v0 + *(int *)(v14 + 32), (uint64_t)v4, &qword_1006457E8);
  if (v15(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }

  v17(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v20)(v13, v7);
  double v21 = v19 * 1000.0;
  if ((~COERCE__INT64(v19 * 1000.0) & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }

  if (v21 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }

  if (v21 < 9.22337204e18) {
    return (uint64_t)v21;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1001F90E4()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v22 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v22 - v12;
  uint64_t v14 = type metadata accessor for SDAirDropSendConnectionTelemetry(0LL);
  sub_1001915A4(v0 + *(int *)(v14 + 28), (uint64_t)v6, &qword_1006457E8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1LL, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_100187100(v16, &qword_1006457E8);
    return 0LL;
  }

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_1001915A4(v0 + *(int *)(v14 + 36), (uint64_t)v4, &qword_1006457E8);
  if (v15(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }

  v17(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v20)(v13, v7);
  double v21 = v19 * 1000.0;
  if ((~COERCE__INT64(v19 * 1000.0) & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }

  if (v21 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }

  if (v21 < 9.22337204e18) {
    return (uint64_t)v21;
  }
LABEL_12:
  __break(1u);
  return result;
}

void *sub_1001F931C()
{
  if (sub_1001F8A4C() >= 1)
  {
    sub_1001F8A4C();
    Class isa = Int._bridgeToObjectiveC()().super.super.isa;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_1003B3168( (uint64_t)isa,  0x6E65536F6C6C6568LL,  (const char *)0xEB00000000534D74LL,  isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease((const char *)0x8000000000000000LL);
  }

  if (sub_1001F8C7C() >= 1)
  {
    sub_1001F8C7C();
    Class v2 = Int._bridgeToObjectiveC()().super.super.isa;
    char v3 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_1003B3168((uint64_t)v2, 0x6E69466F6C6C6568LL, (const char *)0xEF534D6465687369LL, v3);
    swift_bridgeObjectRelease((const char *)0x8000000000000000LL);
  }

  if (sub_1001F8EAC() >= 1)
  {
    sub_1001F8EAC();
    Class v4 = Int._bridgeToObjectiveC()().super.super.isa;
    char v5 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_1003B3168((uint64_t)v4, 0x4D746E65536B7361LL, (const char *)0xE900000000000053LL, v5);
    swift_bridgeObjectRelease((const char *)0x8000000000000000LL);
  }

  if (sub_1001F90E4() >= 1)
  {
    sub_1001F90E4();
    Class v6 = Int._bridgeToObjectiveC()().super.super.isa;
    char v7 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    sub_1003B3168((uint64_t)v6, 0x73696E69466B7361LL, (const char *)0xED0000534D646568LL, v7);
    swift_bridgeObjectRelease((const char *)0x8000000000000000LL);
  }

  return &_swiftEmptyDictionarySingleton;
}

uint64_t sub_1001F94E4()
{
  v0._countAndFlagsBits = 0xD000000000000031LL;
  v0._object = (void *)0x8000000100505160LL;
  String.append(_:)(v0);
  sub_1001F8A4C();
  v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  object = (const char *)v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  v3._countAndFlagsBits = 0xD000000000000013LL;
  v3._object = (void *)0x80000001005051A0LL;
  String.append(_:)(v3);
  sub_1001F8C7C();
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  char v5 = (const char *)v4._object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(v5);
  v6._countAndFlagsBits = 0x746E65536B736120LL;
  v6._object = (void *)0xED0000202D20534DLL;
  String.append(_:)(v6);
  sub_1001F8EAC();
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  uint64_t v8 = (const char *)v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v8);
  v9._object = (void *)0x80000001005051C0LL;
  v9._countAndFlagsBits = 0xD000000000000011LL;
  String.append(_:)(v9);
  sub_1001F90E4();
  v10._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  uint64_t v11 = (const char *)v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v11);
  v12._countAndFlagsBits = 62LL;
  v12._object = (void *)0xE100000000000000LL;
  String.append(_:)(v12);
  return 0LL;
}

uint64_t sub_1001F96A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(_BYTE *)(v5 + 208) = a4;
  *(void *)(v5 + 80) = a3;
  *(void *)(v5 + 88) = v4;
  *(void *)(v5 + 64) = a1;
  *(void *)(v5 + 72) = a2;
  uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  *(void *)(v5 + 96) = v6;
  *(void *)(v5 + 104) = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFNWInterfaceType(0LL);
  *(void *)(v5 + 112) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v5 + 120) = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v5 + 128) = swift_task_alloc(v9);
  *(void *)(v5 + 136) = swift_task_alloc(v9);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v10 = static AirDropActor.shared;
  *(void *)(v5 + 144) = static AirDropActor.shared;
  return swift_task_switch(sub_1001F9774, v10, 0LL);
}

uint64_t sub_1001F9774()
{
  if (qword_100643F08 != -1) {
    swift_once(&qword_100643F08, sub_1001EE100);
  }
  uint64_t v1 = *(void *)(v0 + 64);
  Class v2 = *(void **)(v0 + 88);
  unint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = type metadata accessor for Logger(0LL);
  *(void *)(v0 + 152) = sub_100186DE4(v4, (uint64_t)qword_1006473E0);
  sub_10019BA8C(v1, v3);
  id v5 = v2;
  sub_10019BA8C(v1, v3);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  unint64_t v9 = *(char **)(v0 + 88);
  uint64_t v10 = off_100647000;
  uint64_t v12 = *(void *)(v0 + 64);
  unint64_t v11 = *(void *)(v0 + 72);
  if (v8)
  {
    os_log_type_t v55 = v7;
    os_log_t log = v6;
    uint64_t v13 = swift_slowAlloc(22LL, -1LL);
    uint64_t v54 = swift_slowAlloc(64LL, -1LL);
    v57[0] = v54;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_10019BA8C(v12, v11);
    uint64_t v14 = Data.description.getter(v12, v11);
    unint64_t v16 = v15;
    sub_100189B20(v12, v11);
    *(void *)(v0 + 48) = sub_10018CDB4(v14, v16, v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease(v16);
    sub_100189B20(v12, v11);
    uint64_t v17 = v12;
    uint64_t v18 = (uint8_t *)v13;
    uint64_t v19 = sub_100189B20(v17, v11);
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v20 = *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection];
    if (v20)
    {
      uint64_t v21 = *(void *)(v0 + 136);
      swift_retain(*(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection]);
      sub_100410970(v21);
      swift_release(v20);
    }

    else
    {
      uint64_t v22 = (os_log_s *)Logger.logObject.getter(v19);
      uint64_t v23 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v22, (os_log_type_t)v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v23, "UPLOAD connection is not active", v24, 2u);
        swift_slowDealloc(v24, -1LL, -1LL);
      }

      uint64_t v25 = *(void *)(v0 + 136);
      uint64_t v27 = *(void *)(v0 + 112);
      uint64_t v26 = *(void *)(v0 + 120);

      (*(void (**)(uint64_t, void, uint64_t))(v26 + 104))( v25,  enum case for SFNWInterfaceType.other(_:),  v27);
    }

    uint64_t v28 = *(void *)(v0 + 136);
    uint64_t v29 = *(void *)(v0 + 112);
    uint64_t v30 = *(void *)(v0 + 120);
    uint64_t v31 = *(void **)(v0 + 88);
    uint64_t v32 = sub_100183F14( &qword_1006475F8,  (uint64_t (*)(uint64_t))&type metadata accessor for SFNWInterfaceType,  (uint64_t)&protocol conformance descriptor for SFNWInterfaceType);
    uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter(v29, v32);
    unint64_t v35 = v34;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
    *(void *)(v0 + 56) = sub_10018CDB4(v33, v35, v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v18 + 14, v18 + 22);
    swift_bridgeObjectRelease(v35);

    _os_log_impl((void *)&_mh_execute_header, log, v55, "Sending compressed data %s on interface %s", v18, 0x16u);
    swift_arrayDestroy(v54, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1LL, -1LL);
    swift_slowDealloc(v18, -1LL, -1LL);

    uint64_t v10 = off_100647000;
  }

  else
  {
    sub_100189B20(*(void *)(v0 + 64), *(void *)(v0 + 72));
    sub_100189B20(v12, v11);
  }

  uint64_t v36 = *(void *)(v0 + 88);
  uint64_t v37 = v10[134];
  *(void *)(v0 + 160) = v37;
  uint64_t v38 = *(void *)((char *)v37 + v36);
  *(void *)(v0 + 168) = v38;
  if (v38
    && (uint64_t v39 = *(void *)(v36 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContext),
        (*(void *)(v0 + 176) = v39) != 0LL))
  {
    uint64_t v41 = *(void *)(v0 + 96);
    uint64_t v40 = *(void *)(v0 + 104);
    sub_1001A4B84( v36 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint,  v40,  type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t EnumCaseMultiPayload = (int)swift_getEnumCaseMultiPayload(v40, v41);
    uint64_t v43 = off_1005D49C8[EnumCaseMultiPayload];
    uint64_t v44 = *(void *)((char *)&unk_1004CE940 + EnumCaseMultiPayload * 8);
    uint64_t v45 = *(void *)(v0 + 104);
    swift_retain(v38);
    swift_unknownObjectRetain(v39);
    sub_1001A4BC8(v45, (uint64_t (*)(void))v43);
    uint64_t v46 = (void *)swift_task_alloc(dword_100654CDC);
    *(void *)(v0 + 184) = v46;
    *uint64_t v46 = v0;
    v46[1] = sub_1001F9C78;
    return sub_100416104(v39, *(void *)(v0 + 64), *(void *)(v0 + 72), v44, *(_BYTE *)(v0 + 208));
  }

  else
  {
    uint64_t v48 = type metadata accessor for SFAirDropSend.Failure(0LL);
    uint64_t v49 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v48, v49, 0LL, 0LL);
    uint64_t v51 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v48 - 8) + 104LL))( v50,  enum case for SFAirDropSend.Failure.cancelled(_:),  v48);
    swift_willThrow(v51);
    uint64_t v52 = *(void *)(v0 + 128);
    uint64_t v53 = *(void *)(v0 + 104);
    swift_task_dealloc(*(void *)(v0 + 136));
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1001F9C78()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 184);
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_1001F9FA4;
  }
  else {
    uint64_t v4 = sub_1001F9CDC;
  }
  return swift_task_switch(v4, *(void *)(v2 + 144), 0LL);
}

uint64_t sub_1001F9CDC(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(*(void *)(v1 + 88) + v2);
  if (v3)
  {
    uint64_t v4 = *(void *)(v1 + 128);
    swift_retain(*(void *)(*(void *)(v1 + 88) + v2));
    sub_100410970(v4);
    swift_release(v3);
  }

  else
  {
    id v5 = (os_log_s *)Logger.logObject.getter(a1);
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      os_log_type_t v7 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "UPLOAD connection is not active", v7, 2u);
      swift_slowDealloc(v7, -1LL, -1LL);
    }

    uint64_t v9 = *(void *)(v1 + 120);
    uint64_t v8 = *(void *)(v1 + 128);
    uint64_t v10 = *(void *)(v1 + 112);

    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v8, enum case for SFNWInterfaceType.other(_:), v10);
  }

  uint64_t v12 = *(void *)(v1 + 120);
  uint64_t v11 = *(void *)(v1 + 128);
  uint64_t v13 = *(void *)(v1 + 112);
  char v14 = *(_BYTE *)(v1 + 208);
  uint64_t v15 = *(void *)(v1 + 88) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_lastActiveInterfaceType;
  swift_beginAccess(v15, v1 + 16, 33LL, 0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(v15, v11, v13);
  uint64_t v16 = swift_endAccess(v1 + 16);
  if ((v14 & 1) != 0)
  {
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = *(void *)(v1 + 80);
      uint64_t v20 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      *(_DWORD *)uint64_t v20 = 134217984;
      *(void *)(v1 + 40) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 40, v1 + 48, v20 + 4, v20 + 12);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Total bytes read %ld", v20, 0xCu);
      swift_slowDealloc(v20, -1LL, -1LL);
    }

    uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Finished sending UPLOAD", v24, 2u);
      swift_slowDealloc(v24, -1LL, -1LL);
    }

    uint64_t v25 = (void *)swift_task_alloc(dword_1006475F4);
    *(void *)(v1 + 200) = v25;
    *uint64_t v25 = v1;
    v25[1] = sub_1001FA004;
    return sub_1001F45DC();
  }

  else
  {
    uint64_t v27 = *(void *)(v1 + 168);
    swift_unknownObjectRelease(*(void *)(v1 + 176));
    swift_release(v27);
    uint64_t v28 = *(void *)(v1 + 128);
    uint64_t v29 = *(void *)(v1 + 104);
    swift_task_dealloc(*(void *)(v1 + 136));
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

uint64_t sub_1001F9FA4()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_unknownObjectRelease(*(void *)(v0 + 176));
  swift_release(v1);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 104);
  swift_task_dealloc(*(void *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FA004()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 200LL));
  return swift_task_switch(sub_1001FA05C, v1, 0LL);
}

uint64_t sub_1001FA05C()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_unknownObjectRelease(*(void *)(v0 + 176));
  swift_release(v1);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 104);
  swift_task_dealloc(*(void *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FA0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v4[12] = v5;
  v4[13] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SDAirDropMessage(0LL);
  v4[14] = v6;
  v4[15] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_1006475C8);
  v4[16] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = _s14descr1005D9BD1C13UploadRequestVMa(0LL);
  v4[17] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[18] = v9;
  v4[19] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_100647608);
  v4[20] = swift_task_alloc((*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100183098(&qword_1006475B8);
  v4[21] = swift_task_alloc((*(void *)(*(void *)(v11 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = _s14descr1005DF7D1C10AskRequestVMa(0LL);
  v4[22] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v4[23] = v13;
  v4[24] = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v14 = static AirDropActor.shared;
  v4[25] = static AirDropActor.shared;
  return swift_task_switch(sub_1001FA228, v14, 0LL);
}

uint64_t sub_1001FA228()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection);
  *(void *)(v0 + 208) = v2;
  if (!v2) {
    goto LABEL_4;
  }
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_askRequest;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_askRequest, v0 + 16, 0LL, 0LL);
  sub_1001915A4(v6, v5, &qword_1006475B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1LL, v3) == 1)
  {
    sub_100187100(*(void *)(v0 + 168), &qword_1006475B8);
LABEL_4:
    uint64_t v7 = type metadata accessor for SFAirDropSend.Failure(0LL);
    uint64_t v8 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v7, v8, 0LL, 0LL);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 104LL))( v9,  enum case for SFAirDropSend.Failure.badRequest(_:),  v7);
    swift_willThrow(v10);
    uint64_t v12 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 168);
    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v15 = *(void *)(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 128);
    uint64_t v16 = *(void *)(v0 + 104);
    swift_task_dealloc(*(void *)(v0 + 192));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v55 = v0 + 40;
  uint64_t v18 = *(void *)(v0 + 192);
  uint64_t v19 = *(void *)(v0 + 176);
  uint64_t v20 = *(void *)(v0 + 160);
  sub_1001A4B40(*(void *)(v0 + 168), v18, _s14descr1005DF7D1C10AskRequestVMa);
  sub_1001915A4(v18 + *(int *)(v19 + 20), v20, &qword_100647608);
  uint64_t v21 = type metadata accessor for SFAirDrop.TransferType(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  LODWORD(v20) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1LL, v21);
  uint64_t v23 = swift_retain(v2);
  uint64_t v24 = *(void *)(v0 + 160);
  if ((_DWORD)v20 == 1)
  {
    sub_100187100(*(void *)(v0 + 160), &qword_100647608);
LABEL_9:
    sub_10040AAB0();
    uint64_t v51 = v26;
    uint64_t v49 = v27;
    uint64_t v50 = sub_10040F588();
    uint64_t v48 = v28;
    goto LABEL_10;
  }

  char v25 = SFAirDrop.TransferType.isOnlyExchange.getter(v23);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v21);
  if ((v25 & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v50 = 0LL;
  uint64_t v51 = 0LL;
  uint64_t v48 = 0LL;
  uint64_t v49 = 0LL;
LABEL_10:
  uint64_t v29 = *(void *)(v0 + 152);
  uint64_t v47 = *(void *)(v0 + 144);
  uint64_t v31 = *(void *)(v0 + 128);
  uint64_t v30 = *(int **)(v0 + 136);
  uint64_t v32 = *(void *)(v0 + 120);
  uint64_t v52 = *(void *)(v0 + 112);
  uint64_t v53 = *(void *)(v0 + 104);
  uint64_t v33 = *(void *)(v0 + 88);
  uint64_t v54 = *(void *)(v0 + 96);
  uint64_t v34 = *(void *)(v0 + 72);
  uint64_t v35 = *(void *)(v0 + 80);
  uint64_t v36 = *(void *)(v0 + 64);
  sub_1001915A4(*(void *)(v0 + 192), v29, (uint64_t *)&unk_100647610);
  *(void *)(v29 + v30[5]) = v36;
  uint64_t v37 = (void *)(v29 + v30[6]);
  *uint64_t v37 = v34;
  v37[1] = v35;
  *(_OWORD *)(v29 + v30[7]) = xmmword_1004CD540;
  *(_BYTE *)(v29 + v30[8]) = 0;
  uint64_t v38 = (void *)(v29 + v30[9]);
  *uint64_t v38 = v51;
  v38[1] = v49;
  uint64_t v39 = (uint64_t *)(v29 + v30[10]);
  *uint64_t v39 = v50;
  v39[1] = v48;
  sub_1001A4B84(v29, v31, _s14descr1005D9BD1C13UploadRequestVMa);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v47 + 56))(v31, 0LL, 1LL, v30);
  uint64_t v40 = v33 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadRequest;
  swift_beginAccess(v33 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadRequest, v55, 33LL, 0LL);
  swift_bridgeObjectRetain(v35);
  sub_1001C9860(v31, v40, &qword_1006475C8);
  swift_endAccess(v55);
  sub_1001A4B84(v29, v32, _s14descr1005D9BD1C13UploadRequestVMa);
  swift_storeEnumTagMultiPayload(v32, v52, 6LL);
  sub_100443EEC();
  uint64_t v42 = v41;
  *(void *)(v0 + 216) = v41;
  sub_1001A4BC8(v32, type metadata accessor for SDAirDropMessage);
  uint64_t v43 = *(void *)(v33 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContext);
  *(void *)(v33 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContext) = v42;
  swift_unknownObjectRetain(v42);
  swift_unknownObjectRelease(v43);
  sub_1001A4B84( v33 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint,  v53,  type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t EnumCaseMultiPayload = (int)swift_getEnumCaseMultiPayload(v53, v54);
  uint64_t v45 = *(void *)((char *)&unk_1004CE960 + EnumCaseMultiPayload * 8);
  sub_1001A4BC8(*(void *)(v0 + 104), (uint64_t (*)(void))off_1005D49E8[EnumCaseMultiPayload]);
  uint64_t v46 = (void *)swift_task_alloc(dword_100654CDC);
  *(void *)(v0 + 224) = v46;
  *uint64_t v46 = v0;
  v46[1] = sub_1001FA690;
  return sub_100416104(v42, 0LL, 0xC000000000000000LL, v45, 0);
}

uint64_t sub_1001FA690()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 224);
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_1001FA870;
  }
  else {
    uint64_t v4 = sub_1001FA6F4;
  }
  return swift_task_switch(v4, *(void *)(v2 + 200), 0LL);
}

uint64_t sub_1001FA6F4()
{
  if (qword_100643F08 != -1) {
    swift_once(&qword_100643F08, sub_1001EE100);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_1006473E0);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Sent Initial UPLOAD Request", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  uint64_t v7 = *(void *)(v0 + 208);
  uint64_t v6 = *(void *)(v0 + 216);
  uint64_t v8 = *(void *)(v0 + 192);
  uint64_t v10 = *(void *)(v0 + 160);
  uint64_t v9 = *(void *)(v0 + 168);
  uint64_t v11 = *(void *)(v0 + 152);
  uint64_t v13 = *(void *)(v0 + 120);
  uint64_t v12 = *(void *)(v0 + 128);
  uint64_t v15 = *(void *)(v0 + 104);

  swift_unknownObjectRelease(v6);
  swift_release(v7);
  sub_1001A4BC8(v11, _s14descr1005D9BD1C13UploadRequestVMa);
  sub_1001A4BC8(v8, _s14descr1005DF7D1C10AskRequestVMa);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FA870()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 152);
  swift_unknownObjectRelease(*(void *)(v0 + 216));
  swift_release(v1);
  sub_1001A4BC8(v3, _s14descr1005D9BD1C13UploadRequestVMa);
  sub_1001A4BC8(v2, _s14descr1005DF7D1C10AskRequestVMa);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 152);
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v9 = *(void *)(v0 + 104);
  swift_task_dealloc(*(void *)(v0 + 192));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FA934()
{
  uint64_t v1 = (int *)_s14descr1005DEB71C15ExchangeRequestVMa(0LL);
  uint64_t v2 = *((void *)v1 - 1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);

  uint64_t v5 = v0 + v3;
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v0 + v3, v6);
  swift_bridgeObjectRelease(*(void *)(v0 + v3 + v1[5] + 8));
  swift_bridgeObjectRelease(*(void *)(v0 + v3 + v1[6] + 8));
  unint64_t v7 = v0 + v3 + v1[7];
  uint64_t v8 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = (uint64_t *)(v5 + v1[8]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_100189B20(*v10, v11);
  }
  uint64_t v12 = (void *)(v5 + v1[9]);
  if (v12[9])
  {
    swift_bridgeObjectRelease(v12[1]);
    unint64_t v13 = v12[3];
    if (v13 >> 60 != 15) {
      sub_100189B20(v12[2], v13);
    }
    sub_100189B20(v12[4], v12[5]);
    sub_100189B20(v12[6], v12[7]);
    swift_bridgeObjectRelease(v12[9]);
  }

  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_1001FAA88(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(_s14descr1005DEB71C15ExchangeRequestVMa(0LL) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((v4 + 24) & ~v4);
  unint64_t v7 = (void *)swift_task_alloc(dword_10064762C);
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_1001F2198(a1, v5, v6);
}

uint64_t sub_1001FAB04()
{
  uint64_t v1 = (int *)_s14descr1005DEB71C15ExchangeRequestVMa(0LL);
  uint64_t v2 = *((void *)v1 - 1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);

  uint64_t v5 = v0 + v3;
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v0 + v3, v6);
  swift_bridgeObjectRelease(*(void *)(v0 + v3 + v1[5] + 8));
  swift_bridgeObjectRelease(*(void *)(v0 + v3 + v1[6] + 8));
  unint64_t v7 = v0 + v3 + v1[7];
  uint64_t v8 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = (uint64_t *)(v5 + v1[8]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_100189B20(*v10, v11);
  }
  uint64_t v12 = (void *)(v5 + v1[9]);
  if (v12[9])
  {
    swift_bridgeObjectRelease(v12[1]);
    unint64_t v13 = v12[3];
    if (v13 >> 60 != 15) {
      sub_100189B20(v12[2], v13);
    }
    sub_100189B20(v12[4], v12[5]);
    sub_100189B20(v12[6], v12[7]);
    swift_bridgeObjectRelease(v12[9]);
  }

  unint64_t v14 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v15 = v14 + 8;
  swift_release(*(void *)(v0 + v14));
  return swift_deallocObject(v0, v15);
}

uint64_t sub_1001FAC74(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s14descr1005DEB71C15ExchangeRequestVMa(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8LL));
  uint64_t v9 = (void *)swift_task_alloc(dword_100647644);
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100195708;
  return sub_1001F2500(a1, v6, v7, v8);
}

uint64_t sub_1001FAD0C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001FAD30(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc(dword_100647654);
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100195708;
  return sub_1001F2B3C(a1, v4);
}

uint64_t sub_1001FAD88()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001FADAC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001FADD0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1001FADFC(uint64_t a1)
{
  return sub_1001F4F3C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001FAE04()
{
  uint64_t v1 = type metadata accessor for NWConnection.State(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease(*((void *)v0 + 2));
  swift_release(*((void *)v0 + 4));
  swift_release(*((void *)v0 + 5));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001FAE88()
{
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for NWConnection.State(0LL) - 8) + 80LL);
  uint64_t v3 = v0 + ((v2 + 48) & ~v2);
  uint64_t v4 = swift_task_alloc(dword_10064766C);
  __int128 v5 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1001943E8;
  *(void *)(v4 + 80) = v3;
  *(_OWORD *)(v4 + 64) = v5;
  return swift_task_switch(sub_1001F5148, 0LL, 0LL);
}

id sub_1001FAF08(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType(v6);
  *(_DWORD *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_receiverFeatureFlags] = 0;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_primaryConnection] = 0LL;
  uint64_t v12 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_helloRequest];
  uint64_t v13 = _s12HelloRequestVMa(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56LL))(v12, 1LL, 1LL, v13);
  unint64_t v14 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_helloContinuation];
  uint64_t v15 = sub_100183098(&qword_1006474B0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL))(v14, 1LL, 1LL, v15);
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_helloConnection] = 0LL;
  uint64_t v16 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_askRequest];
  uint64_t v17 = _s14descr1005DF7D1C10AskRequestVMa(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v16, 1LL, 1LL, v17);
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_askConnection] = 0LL;
  uint64_t v18 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_askContinuation];
  uint64_t v19 = sub_100183098(&qword_1006474C8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v18, 1LL, 1LL, v19);
  uint64_t v20 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadRequest];
  uint64_t v21 = _s14descr1005D9BD1C13UploadRequestVMa(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v20, 1LL, 1LL, v21);
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContext] = 0LL;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection] = 0LL;
  uint64_t v22 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContinuation];
  uint64_t v23 = sub_100183098(&qword_1006474E0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))(v22, 1LL, 1LL, v23);
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_sandboxTokenURLPairs] = _swiftEmptyArrayStorage;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_sendCompressionAdapter] = 0LL;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_exchangeConnection] = 0LL;
  uint64_t v24 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_exchangeContinuation];
  uint64_t v25 = sub_100183098((uint64_t *)&unk_1006474F0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v24, 1LL, 1LL, v25);
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_errorConnection] = 0LL;
  uint64_t v26 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_lastActiveInterfaceType];
  uint64_t v27 = enum case for SFNWInterfaceType.awdl(_:);
  uint64_t v28 = type metadata accessor for SFNWInterfaceType(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104LL))(v26, v27, v28);
  uint64_t v29 = v6;
  uint64_t v43 = a1;
  sub_1004112E0();
  sub_1001A4B84( a1,  (uint64_t)&v29[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint],  type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)&v29[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_queue] = a4;
  *(void *)&v29[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_deviceStatus] = a2;
  uint64_t v30 = a3;
  *(void *)&v29[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_pseudonymService] = a3;
  uint64_t v31 = &v29[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_sendRequest];
  uint64_t v32 = type metadata accessor for SFAirDropSend.Request(0LL);
  uint64_t v33 = *(void *)(v32 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v31, a5, v32);
  uint64_t v34 = &v29[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_telemetry];
  uint64_t v35 = type metadata accessor for Date(0LL);
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56LL);
  v36(v34, 1LL, 1LL, v35);
  uint64_t v37 = (int *)type metadata accessor for SDAirDropSendConnectionTelemetry(0LL);
  v36(&v34[v37[5]], 1LL, 1LL, v35);
  v36(&v34[v37[6]], 1LL, 1LL, v35);
  v36(&v34[v37[7]], 1LL, 1LL, v35);
  v36(&v34[v37[8]], 1LL, 1LL, v35);
  v36(&v34[v37[9]], 1LL, 1LL, v35);
  id v38 = a4;
  id v39 = a2;
  swift_retain(v30);

  v45.receiver = v29;
  v45.super_class = ObjectType;
  id v40 = objc_msgSendSuper2(&v45, "init");
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(a5, v32);
  sub_1001A4BC8(v43, type metadata accessor for SDAirDropDiscoveredEndpoint);
  return v40;
}

uint64_t sub_1001FB31C(sec_trust *a1, void (*a2)(void))
{
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_1001A4B84( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint,  (uint64_t)v7,  type metadata accessor for SDAirDropDiscoveredEndpoint);
  if (swift_getEnumCaseMultiPayload(v7, v5) == 1)
  {
    sub_1001A4B40((uint64_t)v7, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    unint64_t v11 = (uint64_t *)&v10[*(int *)(v8 + 40)];
    uint64_t v12 = v11[1];
    if (v12)
    {
      uint64_t v13 = *v11;
      swift_bridgeObjectRetain(v12);
      unint64_t v14 = sec_trust_copy_ref(a1);
      char v15 = sub_1002DEE3C(v13, v12, v14);

      swift_bridgeObjectRelease(v12);
      if (qword_100643F08 != -1) {
        swift_once(&qword_100643F08, sub_1001EE100);
      }
      uint64_t v16 = type metadata accessor for Logger(0LL);
      uint64_t v17 = sub_100186DE4(v16, (uint64_t)qword_1006473E0);
      uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
      os_log_type_t v19 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v18, v19)) {
        goto LABEL_13;
      }
      uint64_t v20 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v20 = 67109120;
      int v26 = v15 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v20 + 4, v20 + 8);
      _os_log_impl( (void *)&_mh_execute_header,  v18,  v19,  "Validated appleID and secTrust - receiver trusted: %{BOOL}d",  v20,  8u);
    }

    else
    {
      if (qword_100643F08 != -1) {
        swift_once(&qword_100643F08, sub_1001EE100);
      }
      uint64_t v21 = type metadata accessor for Logger(0LL);
      uint64_t v22 = sub_100186DE4(v21, (uint64_t)qword_1006473E0);
      uint64_t v18 = (os_log_s *)Logger.logObject.getter(v22);
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v18, v23))
      {
        char v15 = 1;
        goto LABEL_13;
      }

      uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  v23,  "No appleID for receiver present - handling as unknown receiver",  v20,  2u);
      char v15 = 1;
    }

    swift_slowDealloc(v20, -1LL, -1LL);
LABEL_13:

    a2(v15 & 1);
    return sub_1001A4BC8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  }

  sub_1001A4BC8((uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505260LL,  "DaemoniOSLibrary/SDAirDropSendConnection.swift",  46LL,  2LL,  456LL,  0);
  __break(1u);
  return result;
}

void sub_1001FB674(uint64_t a1, sec_trust *a2, void (*a3)(void), uint64_t a4)
{
}

uint64_t sub_1001FB67C(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  return sub_1001F4EB4(a1, a2, a3, v3);
}

uint64_t sub_1001FB684()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_1001FB6B0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_100647694);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_1001F43B8(a1, v4, v5, v6);
}

uint64_t sub_1001FB71C()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 24));
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1001FB748(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc(dword_1006476AC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100195708;
  return sub_1001F165C(a1, v5, v4);
}

unint64_t sub_1001FB7A8()
{
  unint64_t result = qword_1006476C0;
  if (!qword_1006476C0)
  {
    uint64_t v1 = sub_100183124((uint64_t *)&unk_1006464E0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1006476C0);
  }

  return result;
}

uint64_t sub_1001FB7F4()
{
  uint64_t v1 = _s14descr1005DD3D1C12ErrorRequestVMa(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);

  uint64_t v5 = v0 + v3;
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
  uint64_t v7 = v5 + *(int *)(v1 + 20);
  uint64_t v8 = type metadata accessor for CodableError(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_1001FB89C(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(_s14descr1005DD3D1C12ErrorRequestVMa(0LL) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((v4 + 24) & ~v4);
  uint64_t v7 = (void *)swift_task_alloc(dword_1006476D4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_1001F32FC(a1, v5, v6);
}

uint64_t sub_1001FB918()
{
  uint64_t v1 = _s14descr1005DD3D1C12ErrorRequestVMa(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;

  uint64_t v5 = v0 + v3;
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
  uint64_t v7 = v5 + *(int *)(v1 + 20);
  uint64_t v8 = type metadata accessor for CodableError(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);
  swift_release(*(void *)(v0 + v4));
  return swift_deallocObject(v0, v4 + 8);
}

uint64_t sub_1001FB9D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s14descr1005DD3D1C12ErrorRequestVMa(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8LL));
  uint64_t v9 = (void *)swift_task_alloc(dword_1006476E4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100195708;
  return sub_1001F36CC(a1, v6, v7, v8);
}

uint64_t sub_1001FBA6C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc(dword_1006476F4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100195708;
  return sub_1001F3A68(a1, v4);
}

uint64_t sub_1001FBAC4()
{
  uint64_t v1 = *(void *)(_s12HelloRequestVMa(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);

  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(v0 + v2, v4);
  return swift_deallocObject(v0, v3);
}

uint64_t sub_1001FBB3C(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(_s12HelloRequestVMa(0LL) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((v4 + 24) & ~v4);
  uint64_t v7 = (void *)swift_task_alloc(dword_10064770C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_1001EE514(a1, v5, v6);
}

uint64_t sub_1001FBBB8()
{
  uint64_t v1 = *(void *)(_s12HelloRequestVMa(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;

  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(v0 + v2, v4);
  swift_release(*(void *)(v0 + v3));
  return swift_deallocObject(v0, v3 + 8);
}

uint64_t sub_1001FBC4C(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s12HelloRequestVMa(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8LL));
  uint64_t v9 = (void *)swift_task_alloc(dword_10064771C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100195708;
  return sub_1001EECE4(a1, v6, v7, v8);
}

uint64_t sub_1001FBCE4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc(dword_10064772C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100195708;
  return sub_1001EF4A8(a1, v4);
}

uint64_t sub_1001FBD3C()
{
  uint64_t v1 = (int *)_s14descr1005DF7D1C10AskRequestVMa(0LL);
  uint64_t v2 = *((void *)v1 - 1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);

  uint64_t v5 = v0 + v3;
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v5 + v1[5];
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferType(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (uint64_t *)(v5 + v1[6]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_100189B20(*v11, v12);
  }
  swift_bridgeObjectRelease(*(void *)(v5 + v1[7] + 8));
  swift_bridgeObjectRelease(*(void *)(v5 + v1[8] + 8));
  swift_bridgeObjectRelease(*(void *)(v5 + v1[9] + 8));
  swift_bridgeObjectRelease(*(void *)(v5 + v1[10] + 8));
  swift_bridgeObjectRelease(*(void *)(v5 + v1[11]));
  swift_bridgeObjectRelease(*(void *)(v5 + v1[12]));
  swift_bridgeObjectRelease(*(void *)(v5 + v1[13] + 8));
  uint64_t v13 = (uint64_t *)(v5 + v1[14]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15) {
    sub_100189B20(*v13, v14);
  }
  char v15 = (uint64_t *)(v5 + v1[15]);
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15) {
    sub_100189B20(*v15, v16);
  }
  uint64_t v17 = (uint64_t *)(v5 + v1[17]);
  unint64_t v18 = v17[1];
  if (v18 >> 60 != 15) {
    sub_100189B20(*v17, v18);
  }
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_1001FBF0C(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(_s14descr1005DF7D1C10AskRequestVMa(0LL) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((v4 + 24) & ~v4);
  uint64_t v7 = (void *)swift_task_alloc(dword_100647744);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1001943E8;
  return sub_1001EFCF4(a1, v5, v6);
}

uint64_t sub_1001FBF88()
{
  uint64_t v1 = (int *)_s14descr1005DF7D1C10AskRequestVMa(0LL);
  uint64_t v2 = *((void *)v1 - 1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);

  uint64_t v5 = v0 + v3;
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v5 + v1[5];
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferType(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (uint64_t *)(v5 + v1[6]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_100189B20(*v11, v12);
  }
  swift_bridgeObjectRelease(*(void *)(v5 + v1[7] + 8));
  swift_bridgeObjectRelease(*(void *)(v5 + v1[8] + 8));
  swift_bridgeObjectRelease(*(void *)(v5 + v1[9] + 8));
  swift_bridgeObjectRelease(*(void *)(v5 + v1[10] + 8));
  swift_bridgeObjectRelease(*(void *)(v5 + v1[11]));
  swift_bridgeObjectRelease(*(void *)(v5 + v1[12]));
  swift_bridgeObjectRelease(*(void *)(v5 + v1[13] + 8));
  uint64_t v13 = (uint64_t *)(v5 + v1[14]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15) {
    sub_100189B20(*v13, v14);
  }
  char v15 = (uint64_t *)(v5 + v1[15]);
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15) {
    sub_100189B20(*v15, v16);
  }
  uint64_t v17 = (uint64_t *)(v5 + v1[17]);
  unint64_t v18 = v17[1];
  if (v18 >> 60 != 15) {
    sub_100189B20(*v17, v18);
  }
  unint64_t v19 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v20 = v19 + 8;
  swift_release(*(void *)(v0 + v19));
  return swift_deallocObject(v0, v20);
}

uint64_t sub_1001FC174(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s14descr1005DF7D1C10AskRequestVMa(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8LL));
  uint64_t v9 = (void *)swift_task_alloc(dword_100647754);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100195708;
  return sub_1001F01AC(a1, v6, v7, v8);
}

uint64_t sub_1001FC20C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc(dword_100647764);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100195708;
  return sub_1001F0D10(a1, v4);
}

void *sub_1001FC264(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[6];
  uint64_t v4 = a1[8];
  uint64_t v5 = a1[10];
  uint64_t v6 = a1[11];
  unint64_t v7 = a1[12];
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  sub_100189B0C(v6, v7);
  return a1;
}

uint64_t sub_1001FC2FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NWTXTRecord(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(@"flags");
  uint64_t v8 = v7;
  type metadata accessor for SFAirDropUserDefaults(0LL, v7);
  uint64_t v9 = (void *)static SFAirDropUserDefaults.shared.getter();
  char v10 = SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter();

  uint64_t v11 = 13307LL;
  if ((v10 & 1) != 0) {
    uint64_t v11 = 13311LL;
  }
  unint64_t v38 = v11;
  uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for UInt,  &protocol witness table for UInt);
  uint64_t v14 = v13;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  uint64_t v37 = &_swiftEmptyDictionarySingleton;
  unint64_t v38 = 0x8000000000000000LL;
  sub_1003B3174(v12, v14, v6, v8, isUniquelyReferenced_nonNull_native);
  unint64_t v16 = (const char *)v38;
  unint64_t v38 = (unint64_t)v37;
  *(void *)&double v17 = swift_bridgeObjectRelease(v8).n128_u64[0];
  if (!objc_msgSend( *(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropDeviceSupportManager_deviceStatus),  "enableStrangers",  swift_bridgeObjectRelease(v16, v17).n128_f64[0])
    || (sub_1002DF104() & 1) == 0
    || (id v18 =  [*(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropDeviceSupportManager_nearbyAgent) bleAuthTag]) == 0)
  {
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(@"atag");
    int v26 = v30;
    goto LABEL_9;
  }

  unint64_t v19 = v18;
  uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v18);
  unint64_t v22 = v21;

  Swift::String v23 = Data.base64EncodedString(options:)(0LL);
  sub_100189B20(v20, v22);
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(@"atag");
  int v26 = v25;
  if (!v23._object)
  {
LABEL_9:
    sub_1001C9AD0(v24, (uint64_t)v26);
    uint64_t v29 = v31;
    goto LABEL_10;
  }

  uint64_t v27 = (void *)v38;
  char v28 = swift_isUniquelyReferenced_nonNull_native(v38);
  uint64_t v37 = v27;
  unint64_t v38 = 0x8000000000000000LL;
  sub_1003B3174(v23._countAndFlagsBits, (uint64_t)v23._object, v24, v26, v28);
  uint64_t v29 = (const char *)v38;
  unint64_t v38 = (unint64_t)v37;
LABEL_10:
  *(void *)&double v32 = swift_bridgeObjectRelease(v26).n128_u64[0];
  __n128 v33 = swift_bridgeObjectRelease(v29, v32);
  uint64_t v34 = NWTXTRecord.init(_:)(v38, v33);
  uint64_t v35 = NWTXTRecord.data.getter(v34);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v35;
}

uint64_t type metadata accessor for SDAirDropDeviceSupportManager()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary29SDAirDropDeviceSupportManager);
}

uint64_t sub_1001FC600()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_1006477B8);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_1006477B8);
  if (qword_100644028 != -1) {
    swift_once(&qword_100644028, sub_10023A59C);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1001FC690()
{
  int v2 = 0;
  char v3 = 1;
  uint64_t v0 = sub_100183098(&qword_1006477D8);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = TaskLocal.init(wrappedValue:)(&v2);
  qword_100669490 = result;
  return result;
}

void sub_1001FC6E8()
{
  uint64_t v1 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)(16LL, &type metadata for UInt8);
  v1[2] = 16LL;
  v1[4] = 0LL;
  int v2 = v1 + 4;
  v1[5] = 0LL;
  if (qword_100643F18 != -1) {
    swift_once(&qword_100643F18, sub_1001FC690);
  }
  TaskLocal.get()(&v6);
  uint64_t v3 = 0LL;
  if ((v6 & 0x100000000LL) == 0 && (_DWORD)v6)
  {
    if ((v6 & 0x80000000) != 0)
    {
      __break(1u);
      return;
    }

    uint64_t v3 = -(int)v6;
  }

  uint64_t bag_uuid = aks_get_bag_uuid(v3, v2);
  sub_1001FF4E0(bag_uuid, 0xD00000000000001ALL, 0x8000000100505310LL);
  if (v0)
  {
    swift_bridgeObjectRelease(v1);
  }

  else
  {
    id v5 = [objc_allocWithZone(NSUUID) initWithUUIDBytes:v2];
    swift_bridgeObjectRelease(v1);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v5);
  }

void sub_1001FC810( uint64_t a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, char a9)
{
  unint64_t v9 = a8;
  unint64_t v13 = a8 >> 60;
  __int16 v14 = sub_1001FF744(a1, a2, (a8 >> 60 != 15) & (a9 ^ 1));
  if (qword_100643F10 != -1) {
    swift_once(&qword_100643F10, sub_1001FC600);
  }
  uint64_t v15 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v15, (uint64_t)qword_1006477B8);
  sub_10019BA8C(a3, a4);
  sub_10019BA8C(a5, a6);
  sub_10019BA8C(a3, a4);
  uint64_t v16 = sub_10019BA8C(a5, a6);
  double v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    unint64_t v33 = v13;
    uint64_t v19 = swift_slowAlloc(32LL, -1LL);
    unint64_t v34 = v9;
    uint64_t v20 = (Class *)swift_slowAlloc(16LL, -1LL);
    uint64_t v32 = swift_slowAlloc(32LL, -1LL);
    uint64_t v39 = v32;
    *(_DWORD *)uint64_t v19 = 136315650;
    uint64_t v21 = sub_1001FEFC4(v14);
    os_log_t log = v17;
    uint64_t v22 = a3;
    uint64_t v24 = (const char *)v23;
    uint64_t v36 = sub_10018CDB4(v21, v23, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v19 + 12) = 2112;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v36 = (uint64_t)isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v19 + 14, v19 + 22);
    *uint64_t v20 = isa;
    sub_100189B20(v22, a4);
    sub_100189B20(v22, a4);
    *(_WORD *)(v19 + 22) = 2112;
    Class v26 = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v36 = (uint64_t)v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v19 + 24, v19 + 32);
    v20[1] = v26;
    sub_100189B20(a5, a6);
    sub_100189B20(a5, a6);
    _os_log_impl( (void *)&_mh_execute_header,  log,  v18,  "Creating AKSSession with flags: %s localLTK: %@ remoteLTK: %@",  (uint8_t *)v19,  0x20u);
    uint64_t v27 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v20, 2LL, v27);
    char v28 = v20;
    unint64_t v9 = v34;
    swift_slowDealloc(v28, -1LL, -1LL);
    swift_arrayDestroy(v32, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1LL, -1LL);
    uint64_t v29 = v19;
    unint64_t v13 = v33;
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  else
  {
    sub_100189B20(a3, a4);
    sub_100189B20(a3, a4);
    sub_100189B20(a5, a6);
    sub_100189B20(a5, a6);
  }

  int v38 = 0;
  if (v13 >= 0xF) {
    unint64_t v30 = 0xC000000000000000LL;
  }
  else {
    unint64_t v30 = v9;
  }
  __asm { BR              X10 }

void sub_1001FD7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }

uint64_t sub_1001FD86C()
{
  uint64_t v8 = v4;
  __int16 v9 = v0;
  char v10 = BYTE2(v0);
  char v11 = BYTE3(v0);
  char v12 = BYTE4(v0);
  char v13 = BYTE5(v0);
  sub_10019BA8C(v2, v1);
  sub_1001FDB0C((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v0), v2, v1);
  if (v3)
  {
    sub_100189B20(v2, v1);
    __break(1u);
    JUMPOUT(0x1001FDAC0LL);
  }

  uint64_t result = sub_100189B20(v2, v1);
  *uint64_t v6 = v7;
  return result;
}

void sub_1001FDB0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }

uint64_t sub_1001FDB70( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = v12;
  __int16 v17 = v9;
  char v18 = BYTE2(v9);
  char v19 = BYTE3(v9);
  char v20 = BYTE4(v9);
  char v21 = BYTE5(v9);
  uint64_t result = sub_1001FDDDC((uint64_t)&v16, (uint64_t)&v16 + BYTE6(v9), v8, v13, v11, a6, a7, a8, &v15);
  _DWORD *v10 = v15;
  return result;
}

uint64_t sub_1001FDDDC@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _DWORD *a9@<X8>)
{
  if (qword_100643F18 != -1) {
    swift_once(&qword_100643F18, sub_1001FC690);
  }
  TaskLocal.get()(&v39);
  uint64_t v16 = 0LL;
  if ((v39 & 0x100000000LL) == 0 && (_DWORD)v39)
  {
    if ((v39 & 0x80000000) != 0)
    {
      __break(1u);
LABEL_32:
      swift_once(&qword_100643F10, sub_1001FC600);
      goto LABEL_18;
    }

    uint64_t v16 = -(int)v39;
  }

  if (a4) {
    a5 -= a4;
  }
  else {
    a5 = 0LL;
  }
  if (a1) {
    a2 -= a1;
  }
  else {
    a2 = 0LL;
  }
  if (a6) {
    a7 -= a6;
  }
  else {
    a7 = 0LL;
  }
  uint64_t result = aks_remote_session(v16, a3, a4, a5, a1, a2, a6, a7, a8);
  if ((_DWORD)result != -536870211) {
    goto LABEL_30;
  }
  unint64_t v34 = a9;
  if (qword_100643F10 != -1) {
    goto LABEL_32;
  }
LABEL_18:
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = sub_100186DE4(v18, (uint64_t)qword_1006477B8);
  char v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v32 = a7;
    uint64_t v22 = a2;
    uint64_t v23 = a5;
    uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  v21,  "Received no memory error when creating session, clearing and retrying",  v24,  2u);
    uint64_t v25 = v24;
    a5 = v23;
    a2 = v22;
    a7 = v32;
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  uint64_t v26 = aks_remote_session_reset_all();
  if ((_DWORD)v26)
  {
    int v27 = v26;
    char v28 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v29 = static os_log_type_t.error.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v33 = a5;
      unint64_t v30 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)unint64_t v30 = 67109120;
      int v37 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v30 + 4, v30 + 8);
      _os_log_impl( (void *)&_mh_execute_header,  v28,  v29,  "Failed to aks_remote_session_reset_all, errCode: %d",  v30,  8u);
      uint64_t v31 = v30;
      a5 = v33;
      swift_slowDealloc(v31, -1LL, -1LL);
    }
  }

  TaskLocal.get()(&v38);
  uint64_t result = 0LL;
  if ((v38 & 0x100000000LL) != 0)
  {
    a9 = v34;
    goto LABEL_29;
  }

  a9 = v34;
  if (!(_DWORD)v38)
  {
LABEL_29:
    uint64_t result = aks_remote_session(result, a3, a4, a5, a1, a2, a6, a7, a8);
LABEL_30:
    *a9 = result;
    return result;
  }

  if ((v38 & 0x80000000) == 0)
  {
    uint64_t result = -(int)v38;
    goto LABEL_29;
  }

  __break(1u);
  return result;
}

void sub_1001FE0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }

uint64_t sub_1001FE140()
{
  if (v2)
  {
    sub_100189B20(v1, v0);
    __break(1u);
    JUMPOUT(0x1001FE3A4LL);
  }

  sub_100189B20(v1, v0);
  return sub_1001FFA50(v4, v6, v5, 0xD000000000000019LL, 0x8000000100505420LL);
}

void sub_1001FE3F0()
{
  uint64_t v8 = type metadata accessor for AKSKeyClass(0LL);
  uint64_t v0 = __chkstk_darwin(v8);
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  __asm { BR              X10 }

uint64_t sub_1001FE564(uint64_t a1, uint64_t a2)
{
  *(void *)(v4 - 104) = *(void *)(v4 - 136);
  *(_WORD *)(v4 - 96) = a2;
  *(_BYTE *)(v4 - 94) = BYTE2(a2);
  *(void *)(v4 - 208) = a2;
  *(_BYTE *)(v4 - 93) = BYTE3(a2);
  *(_BYTE *)(v4 - 92) = BYTE4(a2);
  *(_BYTE *)(v4 - 91) = BYTE5(a2);
  if (qword_100643F18 != -1) {
    swift_once(&qword_100643F18, sub_1001FC690);
  }
  TaskLocal.get()((void *)(v4 - 112));
  uint64_t v5 = 0LL;
  uint64_t v6 = *(void *)(v4 - 128);
  if ((*(_BYTE *)(v4 - 108) & 1) == 0)
  {
    int v7 = *(_DWORD *)(v4 - 112);
    if (v7)
    {
      if (v7 < 0)
      {
        __break(1u);
        JUMPOUT(0x1001FED3CLL);
      }

      uint64_t v5 = -v7;
    }
  }

  if (*(_DWORD *)(v4 - 148))
  {
    else {
      uint64_t v8 = (unsigned int *)&enum case for AKSKeyClass.dku(_:);
    }
  }

  else
  {
    uint64_t v8 = (unsigned int *)&enum case for AKSKeyClass.aku(_:);
  }

  uint64_t v9 = *(void *)(v4 - 144);
  char v10 = *(uint64_t (**)(uint64_t, void, uint64_t))(v9 + 104);
  uint64_t v11 = v10(v2, *v8, *(void *)(v4 - 128));
  uint64_t v12 = ((uint64_t (*)(uint64_t))AKSKeyClass.rawValue.getter)(v11);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v13(v2, v6);
  if (v12 < (uint64_t)0xFFFFFFFF80000000LL)
  {
    __break(1u);
    goto LABEL_21;
  }

  if (v12 > 0x7FFFFFFF)
  {
LABEL_21:
    __break(1u);
    JUMPOUT(0x1001FECC8LL);
  }

  uint64_t v14 = *(void *)(v4 - 120);
  if (v14) {
    uint64_t v15 = *(void *)(v4 - 168) - v14;
  }
  else {
    uint64_t v15 = 0LL;
  }
  uint64_t v16 = v10(v3, *(unsigned int *)*(&off_1005D4A50 + (char)*(void *)(v4 - 160)), v6);
  uint64_t v17 = ((uint64_t (*)(uint64_t))AKSKeyClass.rawValue.getter)(v16);
  v13(v3, v6);
  if (v17 < (uint64_t)0xFFFFFFFF80000000LL)
  {
    __break(1u);
    goto LABEL_23;
  }

  if (v17 > 0x7FFFFFFF)
  {
LABEL_23:
    __break(1u);
    JUMPOUT(0x1001FED08LL);
  }

  uint64_t result = aks_sign_signing_key( v5,  v12,  *(void *)(v4 - 120),  v15,  v17,  v4 - 104,  BYTE6(*(void *)(v4 - 208)),  *(void *)(v4 - 192),  *(void *)(v4 - 200));
  **(_DWORD **)(v4 - 184) = result;
  return result;
}

_DWORD *sub_1001FED5C@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

Swift::Int sub_1001FED68()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1001FEDAC()
{
}

Swift::Int sub_1001FEDD4()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1001FEE14(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_1001FEE1C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_1001FEE30@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_1001FEE44@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1001FEE58(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1001FEE88@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_1001FEEB4@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *v2 |= *result;
  int v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_1001FEED8(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

_DWORD *sub_1001FEEEC(_DWORD *result)
{
  *v1 &= *result;
  return result;
}

_DWORD *sub_1001FEF00(_DWORD *result)
{
  *v1 ^= *result;
  return result;
}

_DWORD *sub_1001FEF14@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1001FEF28(_DWORD *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1001FEF3C(_DWORD *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1001FEF50(_DWORD *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1001FEF64()
{
  return *v0 == 0;
}

_DWORD *sub_1001FEF74(_DWORD *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_1001FEF88@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v4 = sub_100184674(a1);
  uint64_t result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_1001FEFC4(__int16 a1)
{
  unint64_t v3 = sub_100396F3C((uint64_t)&off_1005D0A90);
  uint64_t v4 = sub_100183098(&qword_1006477D0);
  swift_arrayDestroy(&unk_1005D0AB0, 8LL, v4);
  int64_t v5 = 0LL;
  unint64_t v7 = v3 + 64;
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v8 = 1LL << *(_BYTE *)(v3 + 32);
  uint64_t v9 = -1LL;
  if (v8 < 64) {
    uint64_t v9 = ~(-1LL << v8);
  }
  __int16 v34 = a1;
  int v10 = a1 & 0x7F;
  unint64_t v11 = v9 & v6;
  int64_t v12 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v13 = (char *)&_swiftEmptyArrayStorage;
  if ((v9 & v6) == 0) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v14 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v5 << 6))
  {
    if (v10 == *(_DWORD *)(*(void *)(v3 + 48) + 4 * i))
    {
      uint64_t v19 = (uint64_t *)(*(void *)(v3 + 56) + 16 * i);
      uint64_t v20 = *v19;
      uint64_t v1 = v19[1];
      swift_bridgeObjectRetain(v1);
      uint64_t v35 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0) {
        uint64_t v13 = sub_10018BC54(0LL, *((void *)v13 + 2) + 1LL, 1, v13);
      }
      unint64_t v22 = *((void *)v13 + 2);
      unint64_t v21 = *((void *)v13 + 3);
      if (v22 >= v21 >> 1) {
        uint64_t v13 = sub_10018BC54((char *)(v21 > 1), v22 + 1, 1, v13);
      }
      *((void *)v13 + 2) = v22 + 1;
      uint64_t v23 = &v13[16 * v22];
      *((void *)v23 + 4) = v35;
      *((void *)v23 + 5) = v1;
      if (v11) {
        goto LABEL_4;
      }
    }

    else if (v11)
    {
      goto LABEL_4;
    }

uint64_t sub_1001FF324()
{
  return sub_1001FEFC4(*v0);
}

void sub_1001FF32C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Data.Iterator(0LL);
  __chkstk_darwin(v3);
  __asm { BR              X10 }

void *sub_1001FF3A8()
{
  if (BYTE6(v0))
  {
    uint64_t v6 = sub_100183098(&qword_1006451F0);
    uint64_t v4 = (void *)swift_allocObject(v6, BYTE6(v0) + 32LL, 7LL);
    size_t v7 = j__malloc_size(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v7 - 64;
    sub_10019BA8C(v2, v0);
    uint64_t v8 = ((uint64_t (*)(uint64_t, void *, void, uint64_t, unint64_t))Data._copyContents(initializing:))( v3,  v4 + 4,  BYTE6(v0),  v2,  v0);
    sub_100189B20(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v8 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x1001FF47CLL);
    }
  }

  return v4;
}

unint64_t sub_1001FF494()
{
  unint64_t result = qword_100649800;
  if (!qword_100649800)
  {
    uint64_t v1 = sub_100183124((uint64_t *)&unk_10064D7D0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100649800);
  }

  return result;
}

uint64_t sub_1001FF4E0(uint64_t result, uint64_t a2, unint64_t a3)
{
  if ((_DWORD)result)
  {
    int v5 = result;
    if (qword_100643F10 != -1) {
      swift_once(&qword_100643F10, sub_1001FC600);
    }
    uint64_t v6 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v6, (uint64_t)qword_1006477B8);
    uint64_t v7 = swift_bridgeObjectRetain_n(a3, 2LL);
    uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v9 = static os_log_type_t.error.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc(18LL, -1LL);
      uint64_t v11 = swift_slowAlloc(32LL, -1LL);
      uint64_t v20 = v11;
      *(_DWORD *)uint64_t v10 = 136315394;
      swift_bridgeObjectRetain(a3);
      uint64_t v22 = sub_10018CDB4(a2, a3, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v10 + 4, v10 + 12);
      swift_bridgeObjectRelease_n(a3, 3LL);
      *(_WORD *)(v10 + 12) = 1024;
      LODWORD(v22) = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, (char *)&v22 + 4, v10 + 14, v10 + 18);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s, AKS errCode: %d", (uint8_t *)v10, 0x12u);
      swift_arrayDestroy(v11, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1LL, -1LL);
      swift_slowDealloc(v10, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a3, 2LL);
    }

    uint64_t v20 = a2;
    unint64_t v21 = a3;
    swift_bridgeObjectRetain(a3);
    v12._countAndFlagsBits = 0x646F43727265202CLL;
    v12._object = (void *)0xEB00000000203A65LL;
    String.append(_:)(v12);
    LODWORD(v22) = v5;
    v13._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int32,  &protocol witness table for Int32);
    object = v13._object;
    String.append(_:)(v13);
    swift_bridgeObjectRelease(object);
    uint64_t v15 = v20;
    unint64_t v16 = v21;
    unint64_t v17 = sub_100187014();
    uint64_t v18 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v17, 0LL, 0LL);
    *(_DWORD *)uint64_t v19 = 10;
    *(void *)(v19 + 8) = v15;
    *(void *)(v19 + swift_weakDestroy(v0 + 16) = v16;
    return swift_willThrow(v18);
  }

  return result;
}

uint64_t sub_1001FF744(uint64_t a1, char a2, char a3)
{
  switch(a1)
  {
    case 1LL:
    case 4LL:
      uint64_t result = 10LL;
      if ((a2 & 1) != 0) {
        goto LABEL_3;
      }
      break;
    case 2LL:
      uint64_t result = 5LL;
      if ((a2 & 1) != 0) {
        goto LABEL_3;
      }
      break;
    case 3LL:
      uint64_t result = 7LL;
      if ((a2 & 1) != 0) {
        goto LABEL_3;
      }
      break;
    case 5LL:
      uint64_t result = 1LL;
      if ((a2 & 1) != 0) {
        goto LABEL_3;
      }
      break;
    case 6LL:
      uint64_t result = 4LL;
      if ((a2 & 1) != 0) {
        goto LABEL_3;
      }
      break;
    case 7LL:
      uint64_t result = 11LL;
      if ((a2 & 1) != 0) {
        goto LABEL_3;
      }
      break;
    case 8LL:
      uint64_t result = 12LL;
      if ((a2 & 1) != 0) {
        goto LABEL_3;
      }
      break;
    case 9LL:
      if ((a3 & 1) != 0) {
        uint64_t result = 263LL;
      }
      else {
        uint64_t result = 7LL;
      }
      if ((a2 & 1) != 0) {
        goto LABEL_3;
      }
      break;
    case 10LL:
      uint64_t result = 2LL;
      if ((a2 & 1) != 0) {
LABEL_3:
      }
        uint64_t result = result | 0x80;
      break;
    default:
      _StringGuts.grow(_:)(28LL);
      swift_bridgeObjectRelease(0xE000000000000000LL);
      v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
      object = v4._object;
      String.append(_:)(v4);
      swift_bridgeObjectRelease(object);
      uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000001ALL,  0x8000000100505400LL,  "DaemoniOSLibrary/SDAuthentication.AKSUtilities.swift",  52LL,  2LL,  249LL,  0);
      __break(1u);
      break;
  }

  return result;
}

void sub_1001FF898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = __DataStorage._bytes.getter();
  if (v9)
  {
    uint64_t v10 = __DataStorage._offset.getter();
    if (__OFSUB__(a1, v10))
    {
LABEL_13:
      __break(1u);
      return;
    }

    v9 += a1 - v10;
  }

  BOOL v11 = __OFSUB__(a2, a1);
  uint64_t v12 = a2 - a1;
  if (v11)
  {
    __break(1u);
    goto LABEL_13;
  }

  uint64_t v13 = __DataStorage._length.getter();
  if (v13 >= v12) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v13;
  }
  uint64_t v15 = v9 + v14;
  if (v9) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0LL;
  }
  sub_1001FDB0C(v9, v16, a4, a5);
}

void sub_1001FF974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = __DataStorage._bytes.getter();
  if (v9)
  {
    uint64_t v10 = __DataStorage._offset.getter();
    if (__OFSUB__(a1, v10))
    {
LABEL_13:
      __break(1u);
      return;
    }

    v9 += a1 - v10;
  }

  BOOL v11 = __OFSUB__(a2, a1);
  uint64_t v12 = a2 - a1;
  if (v11)
  {
    __break(1u);
    goto LABEL_13;
  }

  uint64_t v13 = __DataStorage._length.getter();
  if (v13 >= v12) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v13;
  }
  uint64_t v15 = v9 + v14;
  if (v9) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0LL;
  }
  sub_1001FD7FC(v9, v16, a4, a5);
}

uint64_t sub_1001FFA50(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1001FF4E0(a1, a4, a5);
  if (!v5)
  {
    if (a2 && a3 >= 1)
    {
      uint64_t v11 = sub_10033C9DC(a2, a3);
      free(a2);
      return v11;
    }

    else
    {
      if (qword_100643F10 != -1) {
        swift_once(&qword_100643F10, sub_1001FC600);
      }
      uint64_t v12 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v12, (uint64_t)qword_1006477B8);
      uint64_t v13 = swift_bridgeObjectRetain_n(a5, 2LL);
      uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
      os_log_type_t v15 = static os_log_type_t.error.getter(v14);
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v17 = swift_slowAlloc(32LL, -1LL);
        uint64_t v25 = v17;
        *(_DWORD *)uint64_t v16 = 136315138;
        swift_bridgeObjectRetain(a5);
        uint64_t v24 = sub_10018CDB4(a4, a5, &v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v16 + 4, v16 + 12);
        swift_bridgeObjectRelease_n(a5, 3LL);
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s, no AKS output", v16, 0xCu);
        swift_arrayDestroy(v17, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v17, -1LL, -1LL);
        swift_slowDealloc(v16, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(a5, 2LL);
      }

      uint64_t v25 = a4;
      unint64_t v26 = a5;
      swift_bridgeObjectRetain(a5);
      v18._countAndFlagsBits = 0x74756F206F6E202CLL;
      v18._object = (void *)0xEB00000000747570LL;
      String.append(_:)(v18);
      uint64_t v19 = v25;
      unint64_t v20 = v26;
      unint64_t v21 = sub_100187014();
      uint64_t v22 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v21, 0LL, 0LL);
      *(_DWORD *)uint64_t v23 = 10;
      *(void *)(v23 + 8) = v19;
      *(void *)(v23 + swift_weakDestroy(v0 + 16) = v20;
      return swift_willThrow(v22);
    }
  }

  return result;
}

uint64_t sub_1001FFCA8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  LODWORD(v55) = a2;
  uint64_t v56 = a1;
  uint64_t v4 = type metadata accessor for AKSRefKeyParam(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v52 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v49 - v8;
  uint64_t v10 = type metadata accessor for AKSKeyClass(0LL);
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v51 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v49 - v13;
  if (qword_100643F10 != -1) {
    swift_once(&qword_100643F10, sub_1001FC600);
  }
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = sub_100186DE4(v15, (uint64_t)qword_1006477B8);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v49 = v2;
    unint64_t v50 = v4;
    uint64_t v53 = v10;
    uint64_t v19 = swift_slowAlloc(18LL, -1LL);
    uint64_t v4 = swift_slowAlloc(32LL, -1LL);
    uint64_t v59 = (_BYTE *)v4;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v58 = sub_10018CDB4(qword_1004CEBC8[(char)v56], 0xE100000000000000LL, (uint64_t *)&v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease(0xE100000000000000LL);
    *(_WORD *)(v19 + 12) = 1024;
    if (qword_100643F18 != -1) {
      swift_once(&qword_100643F18, sub_1001FC690);
    }
    TaskLocal.get()(&v58);
    int v20 = 0;
    if ((v58 & 0x100000000LL) == 0 && (_DWORD)v58)
    {
      if ((v58 & 0x80000000) != 0) {
        goto LABEL_36;
      }
      int v20 = -(int)v58;
    }

    LODWORD(v58) = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, (char *)&v58 + 4, v19 + 14, v19 + 18);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Generating LTK of class %s, keybag: %d", (uint8_t *)v19, 0x12u);
    swift_arrayDestroy(v4, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v4, -1LL, -1LL);
    swift_slowDealloc(v19, -1LL, -1LL);

    uint64_t v10 = v53;
    uint64_t v3 = v49;
    uint64_t v4 = v50;
  }

  else
  {
  }

  uint64_t v58 = 0LL;
  uint64_t v59 = 0LL;
  if ((v55 & 1) == 0)
  {
    if (qword_100643F18 != -1) {
      swift_once(&qword_100643F18, sub_1001FC690);
    }
    TaskLocal.get()(&v57);
    uint64_t v4 = 0LL;
    if ((v57 & 0x100000000LL) == 0 && (_DWORD)v57)
    {
      if ((v57 & 0x80000000) != 0)
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }

      uint64_t v4 = -(int)v57;
    }

    uint64_t v5 = v54;
    uint64_t v31 = (*(uint64_t (**)(char *, void, uint64_t))(v54 + 104))( v14,  *(unsigned int *)*(&off_1005D4A50 + (char)v56),  v10);
    uint64_t v32 = AKSKeyClass.rawValue.getter(v31);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v10);
    if (v32 < (uint64_t)0xFFFFFFFF80000000LL)
    {
      __break(1u);
    }

    else if (v32 <= 0x7FFFFFFF)
    {
      uint64_t v33 = aks_create_signing_key(v4, v32, &v59, &v58);
      uint64_t v34 = sub_1001FFA50(v33, v59, v58, 0xD00000000000001BLL, 0x8000000100505330LL);
      if (!v3) {
        return v34;
      }
      return v4;
    }

    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }

  uint64_t v21 = v5;
  uint64_t v22 = sub_1002B69D0();
  if (!v3)
  {
    uint64_t v24 = (uint64_t)v22;
    unint64_t v25 = v23;
    uint64_t v26 = type metadata accessor for AKSRefKeyParams(0LL);
    swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
    uint64_t v27 = AKSRefKeyParams.init()();
    uint64_t v55 = *(void (**)(char *, void, uint64_t))(v21 + 104);
    v55(v9, enum case for AKSRefKeyParam.remoteSessionSigningKeyCertificate(_:), v4);
    sub_10019BA8C(v24, v25);
    sub_1001FF32C(v24, v25);
    uint64_t v28 = v4;
    uint64_t v30 = v29;
    sub_100189B20(v24, v25);
    dispatch thunk of AKSRefKeyParams.set_data(key:value:)(v9, v30);
    uint64_t v49 = v24;
    unint64_t v50 = v25;
    uint64_t v53 = v10;
    uint64_t v35 = *(void (**)(char *, uint64_t))(v21 + 8);
    v35(v9, v28);
    swift_release(v30);
    uint64_t v36 = v52;
    v55(v52, enum case for AKSRefKeyParam.remoteSessionSigningKeyType(_:), v28);
    dispatch thunk of AKSRefKeyParams.set_number(key:value:)(v36, 4LL);
    uint64_t v37 = v28;
    uint64_t v14 = (char *)v27;
    uint64_t v39 = ((uint64_t (*)(char *, uint64_t))v35)(v36, v37);
    uint64_t v40 = dispatch thunk of AKSRefKeyParams.serialize()(v39);
    uint64_t v5 = v49;
    uint64_t v4 = v40;
    if (qword_100643F18 == -1)
    {
LABEL_27:
      TaskLocal.get()(&v57);
      uint64_t v41 = 0LL;
      uint64_t v42 = v53;
      if ((v57 & 0x100000000LL) == 0 && (_DWORD)v57)
      {
        if ((v57 & 0x80000000) != 0) {
          goto LABEL_41;
        }
        uint64_t v41 = -(int)v57;
      }

      uint64_t v43 = v54;
      uint64_t v44 = v51;
      uint64_t v45 = (*(uint64_t (**)(char *, void, uint64_t))(v54 + 104))( v51,  *(unsigned int *)*(&off_1005D4A50 + (char)v56),  v53);
      uint64_t v46 = AKSKeyClass.rawValue.getter(v45);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v42);
      if (v46 < (uint64_t)0xFFFFFFFF80000000LL)
      {
        __break(1u);
      }

      else
      {
        unint64_t v47 = v50;
        if (v46 <= 0x7FFFFFFF)
        {
          uint64_t v48 = aks_create_signing_key_with_params(v41, v46, v4 + 32, *(void *)(v4 + 16), &v59, &v58);
          swift_bridgeObjectRelease(v4);
          uint64_t v4 = sub_1001FFA50(v48, v59, v58, 0xD00000000000001BLL, 0x8000000100505330LL);
          swift_release(v14);
          sub_100189B20(v5, v47);
          return v4;
        }
      }

      __break(1u);
LABEL_41:
      __break(1u);
    }

void sub_100200388(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }

uint64_t sub_1002003DC()
{
  uint64_t v6 = v0;
  __int16 v7 = v1;
  char v8 = BYTE2(v1);
  char v9 = BYTE3(v1);
  char v10 = BYTE4(v1);
  char v11 = BYTE5(v1);
  if (qword_100643F18 != -1) {
    swift_once(&qword_100643F18, sub_1001FC690);
  }
  TaskLocal.get()(&v5);
  uint64_t v2 = 0LL;
  if ((v5 & 0x100000000LL) == 0 && (_DWORD)v5)
  {
    if ((v5 & 0x80000000) != 0)
    {
      __break(1u);
      JUMPOUT(0x10020071CLL);
    }

    uint64_t v2 = -(int)v5;
  }

  uint64_t v3 = ((uint64_t (*)(uint64_t, uint64_t *, void))aks_remote_peer_drop)(v2, &v6, BYTE6(v1));
  return sub_1001FF4E0(v3, 0xD00000000000001ELL, 0x8000000100505380LL);
}

void sub_10020073C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }

uint64_t sub_100200794()
{
  uint64_t v8 = v1;
  __int16 v9 = v2;
  char v10 = BYTE2(v2);
  char v11 = BYTE3(v2);
  char v12 = BYTE4(v2);
  char v13 = BYTE5(v2);
  if (qword_100643F18 != -1) {
    swift_once(&qword_100643F18, sub_1001FC690);
  }
  TaskLocal.get()(&v7);
  uint64_t v3 = 0LL;
  if ((v7 & 0x100000000LL) == 0 && (_DWORD)v7)
  {
    if ((v7 & 0x80000000) != 0)
    {
      __break(1u);
      JUMPOUT(0x100200AF0LL);
    }

    uint64_t v3 = -(int)v7;
  }

  uint64_t state = aks_remote_peer_get_state(v3, &v8, BYTE6(v2), &v6);
  uint64_t result = sub_1001FF4E0(state, 0xD000000000000023LL, 0x8000000100505470LL);
  if (!v0) {
    return v6;
  }
  return result;
}

void sub_100200B10(uint64_t a1, uint64_t a2)
{
  if (!__DataStorage._bytes.getter() || !__OFSUB__(a1, __DataStorage._offset.getter()))
  {
    if (!__OFSUB__(a2, a1))
    {
      __DataStorage._length.getter();
      sub_1001FE3F0();
      return;
    }

    __break(1u);
  }

  __break(1u);
}

void sub_100200BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for AKSKeyClass(0LL);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  __asm { BR              X10 }

uint64_t sub_100200CD8()
{
  *(void *)(v5 - 104) = v2;
  *(_WORD *)(v5 - 96) = v3;
  *(_BYTE *)(v5 - 94) = BYTE2(v3);
  *(_BYTE *)(v5 - 93) = BYTE3(v3);
  *(_BYTE *)(v5 - 92) = BYTE4(v3);
  *(_BYTE *)(v5 - 91) = BYTE5(v3);
  if (qword_100643F18 != -1) {
    swift_once(&qword_100643F18, sub_1001FC690);
  }
  TaskLocal.get()((void *)(v5 - 112));
  uint64_t v6 = 0LL;
  if ((*(_BYTE *)(v5 - 108) & 1) == 0)
  {
    int v7 = *(_DWORD *)(v5 - 112);
    if (v7)
    {
      if (v7 < 0)
      {
        __break(1u);
        JUMPOUT(0x1002011E8LL);
      }

      uint64_t v6 = -v7;
    }
  }

  uint64_t v8 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v1 + 104))( v4,  *(unsigned int *)*(&off_1005D4A50 + (char)*(void *)(v5 - 120)),  v0);
  uint64_t v9 = ((uint64_t (*)(uint64_t))AKSKeyClass.rawValue.getter)(v8);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  if (v9 < (uint64_t)0xFFFFFFFF80000000LL)
  {
    __break(1u);
    goto LABEL_11;
  }

  if (v9 > 0x7FFFFFFF)
  {
LABEL_11:
    __break(1u);
    JUMPOUT(0x100201178LL);
  }

  uint64_t v10 = aks_validate_local_key(v6, v9, v5 - 104, BYTE6(v3));
  return sub_1001FF4E0(v10, 0xD000000000000020LL, 0x8000000100505350LL);
}

ValueMetadata *type metadata accessor for AKSSessionFlags()
{
  return &type metadata for AKSSessionFlags;
}

unint64_t sub_10020121C()
{
  unint64_t result = qword_1006477E0;
  if (!qword_1006477E0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CEA24, &type metadata for AKSSessionFlags);
    atomic_store(result, (unint64_t *)&qword_1006477E0);
  }

  return result;
}

unint64_t sub_100201264()
{
  unint64_t result = qword_1006477E8;
  if (!qword_1006477E8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CE9F4, &type metadata for AKSSessionFlags);
    atomic_store(result, (unint64_t *)&qword_1006477E8);
  }

  return result;
}

unint64_t sub_1002012AC()
{
  unint64_t result = qword_1006477F0;
  if (!qword_1006477F0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CEA4C, &type metadata for AKSSessionFlags);
    atomic_store(result, (unint64_t *)&qword_1006477F0);
  }

  return result;
}

unint64_t sub_1002012F4()
{
  unint64_t result = qword_1006477F8;
  if (!qword_1006477F8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CEA84, &type metadata for AKSSessionFlags);
    atomic_store(result, (unint64_t *)&qword_1006477F8);
  }

  return result;
}

void sub_100201338(uint64_t a1, uint64_t a2)
{
  if (!v2 && v3)
  {
    if (qword_100643F10 != -1) {
      swift_once(&qword_100643F10, sub_1001FC600);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL);
    uint64_t v5 = sub_100186DE4(v4, (uint64_t)qword_1006477B8);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "wrapped_escrow_record_status for peer is not valid", v8, 2u);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    unint64_t v9 = sub_100187014();
    uint64_t v10 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v9, 0LL, 0LL);
    *(_DWORD *)uint64_t v11 = 10;
    *(void *)(v11 + 8) = 0xD000000000000020LL;
    *(void *)(v11 + swift_weakDestroy(v0 + 16) = 0x8000000100505440LL;
    swift_willThrow(v10);
  }

uint64_t sub_100201468()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100647800);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100647800);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

__n128 sub_1002014F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F20 != -1) {
    swift_once(&qword_100643F20, sub_100201468);
  }
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = sub_100186DE4(v5, (uint64_t)qword_100647800);
  os_log_type_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)unint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "SDAirDropSendService start", v9, 2u);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  uint64_t v10 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v4, 1LL, 1LL, v10);
  uint64_t v11 = qword_100643F28;
  swift_retain(v1);
  if (v11 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v12 = static AirDropActor.shared;
  uint64_t v13 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v14 = (void *)swift_allocObject(&unk_1005D4BF0, 40LL, 7LL);
  v14[2] = v12;
  v14[3] = v13;
  v14[4] = v1;
  swift_retain(v12);
  uint64_t v15 = sub_1001B341C((uint64_t)v4, (uint64_t)&unk_100647908, (uint64_t)v14);
  swift_release(v15);
  sub_100418F9C(0);
  uint64_t v16 = *(const char **)(v1 + 64);
  *(void *)(v1 + 64) = &_swiftEmptyDictionarySingleton;
  return swift_bridgeObjectRelease(v16);
}

uint64_t sub_1002016E8(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  void v3[9] = a1;
  uint64_t v4 = type metadata accessor for SFAirDropSend.Request(0LL);
  v3[12] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[13] = v5;
  uint64_t v6 = *(void *)(v5 + 64);
  v3[14] = v6;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  v3[15] = swift_task_alloc(v7);
  v3[16] = swift_task_alloc(v7);
  uint64_t v8 = sub_100183098(&qword_100646560);
  v3[17] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098((uint64_t *)&unk_1006463F0);
  v3[18] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v3[19] = v10;
  uint64_t v11 = *(void *)(v10 + 64);
  v3[20] = v11;
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  v3[21] = swift_task_alloc(v12);
  v3[22] = swift_task_alloc(v12);
  v3[23] = swift_task_alloc(v12);
  uint64_t v13 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  v3[24] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v3[25] = v14;
  unint64_t v15 = (*(void *)(v14 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[26] = swift_task_alloc(v15);
  v3[27] = swift_task_alloc(v15);
  uint64_t v16 = type metadata accessor for UUID(0LL);
  v3[28] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v3[29] = v17;
  v3[30] = swift_task_alloc((*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v18 = static AirDropActor.shared;
  v3[31] = static AirDropActor.shared;
  return swift_task_switch(sub_100201864, v18, 0LL);
}

uint64_t sub_100201864(uint64_t a1)
{
  v1[32] = *(void *)(v1[11] + 72LL);
  SFAirDropSend.Request.endpointID.getter(a1);
  uint64_t v2 = (void *)swift_task_alloc(dword_10064DC04);
  v1[33] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1002018C8;
  return sub_1002E6364(v1[30]);
}

uint64_t sub_1002018C8(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 264);
  uint64_t v4 = *(void *)(*v1 + 240);
  uint64_t v5 = *(void *)(*v1 + 248);
  uint64_t v6 = *(void *)(*v1 + 224);
  uint64_t v7 = *(void *)(*v1 + 232);
  *(void *)(*v1 + 272) = a1;
  swift_task_dealloc(v3);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(void *)(v2 + 280) = v8;
  v8(v4, v6);
  return swift_task_switch(sub_100201950, v5, 0LL);
}

uint64_t sub_100201950()
{
  uint64_t v1 = *(void *)(v0 + 272);
  if (*(void *)(v1 + 16))
  {
    if (qword_100643F20 != -1)
    {
      swift_once(&qword_100643F20, sub_100201468);
      uint64_t v1 = *(void *)(v0 + 272);
    }

    uint64_t v2 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v2, (uint64_t)qword_100647800);
    uint64_t v3 = swift_bridgeObjectRetain_n(v1, 2LL);
    uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
    os_log_type_t v5 = static os_log_type_t.default.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(const char **)(v0 + 272);
    if (v6)
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v9 = swift_slowAlloc(32LL, -1LL);
      v100[0] = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      uint64_t v10 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
      uint64_t v11 = sub_100183F14( &qword_1006453A0,  type metadata accessor for SDAirDropDiscoveredEndpoint,  (uint64_t)&unk_1004CF398);
      swift_bridgeObjectRetain(v7);
      uint64_t v13 = Set.description.getter(v12, v10, v11);
      unint64_t v15 = v14;
      swift_bridgeObjectRelease(v7);
      *(void *)(v0 + 56) = sub_10018CDB4(v13, (unint64_t)v15, v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v8 + 4, v8 + 12);
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease_n(v7, 2LL);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Starting send to %s", v8, 0xCu);
      swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1LL, -1LL);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(*(void *)(v0 + 272), 2LL);
    }

    uint64_t Strong = swift_unknownObjectWeakLoadStrong(*(void *)(v0 + 88) + 40LL, v32);
    uint64_t v34 = *(void *)(v0 + 216);
    if (Strong)
    {
      uint64_t v35 = Strong;
      uint64_t v37 = *(void *)(v0 + 200);
      uint64_t v36 = *(void *)(v0 + 208);
      uint64_t v38 = *(void *)(v0 + 192);
      sub_1002C9F94(v36);
      swift_unknownObjectRelease(v35);
      uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v34, v36, v38);
    }

    else
    {
      uint64_t v39 = (*(uint64_t (**)(void, void, void))(*(void *)(v0 + 200) + 104LL))( *(void *)(v0 + 216),  enum case for SFAirDropClient.Identifier.daemon(_:),  *(void *)(v0 + 192));
    }

    uint64_t v40 = *(const char **)(v0 + 272);
    uint64_t v73 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 280);
    uint64_t v41 = *(void *)(v0 + 240);
    uint64_t v42 = *(void *)(v0 + 216);
    uint64_t v43 = *(void *)(v0 + 224);
    uint64_t v82 = *(void *)(v0 + 200);
    uint64_t v83 = *(void *)(v0 + 192);
    uint64_t v84 = *(void *)(v0 + 208);
    uint64_t v92 = *(void *)(v0 + 176);
    uint64_t v95 = *(void *)(v0 + 168);
    uint64_t v98 = *(void *)(v0 + 184);
    uint64_t v80 = *(void *)(v0 + 160);
    uint64_t v75 = *(void *)(v0 + 152);
    uint64_t v87 = *(void *)(v0 + 144);
    uint64_t v89 = *(void *)(v0 + 136);
    uint64_t v85 = *(void *)(v0 + 120);
    uint64_t v81 = *(void *)(v0 + 112);
    uint64_t v76 = *(void *)(v0 + 104);
    uint64_t v77 = *(void *)(v0 + 96);
    uint64_t v78 = *(void *)(v0 + 128);
    uint64_t v79 = *(void *)(v0 + 88);
    uint64_t v44 = *(void *)(v0 + 80);
    uint64_t v74 = *(void *)(v0 + 72);
    SFAirDropSend.Request.endpointID.getter(v39);
    sub_1002E6764(v41, v0 + 16);
    uint64_t v45 = v73(v41, v43);
    uint64_t v46 = SFAirDropSend.Request.requestSource.getter(v45);
    uint64_t v48 = v47;
    sub_1003702A4(v44, v40, v0 + 16, v46, v47, v42, v98);
    *(void *)&double v49 = swift_bridgeObjectRelease(v40).n128_u64[0];
    __n128 v50 = swift_bridgeObjectRelease(v48, v49);
    SFProgressTask.split()(v74, v92, v87, v50);
    uint64_t v51 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56LL))(v89, 1LL, 1LL, v51);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v95, v92, v87);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 16))(v78, v44, v77);
    uint64_t v52 = *(unsigned __int8 *)(v75 + 80);
    uint64_t v53 = (v52 + 16) & ~v52;
    unint64_t v54 = (v80 + v53 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v55 = *(unsigned __int8 *)(v76 + 80);
    uint64_t v56 = (v55 + v54 + 8) & ~v55;
    uint64_t v57 = swift_allocObject(&unk_1005D4C18, v56 + v81, v52 | v55 | 7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v57 + v53, v95, v87);
    *(void *)(v57 + v54) = v79;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 32))(v57 + v56, v78, v77);
    swift_retain(v79);
    uint64_t v58 = static Task<>.noThrow(priority:operation:)(v89, &unk_100647950, v57, (char *)&type metadata for () + 8);
    swift_release(v57);
    swift_release(v58);
    sub_100187100(v89, &qword_100646560);
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v59(v92, v87);
    v59(v98, v87);
    sub_100187100(v0 + 16, &qword_10064DBB0);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v42, v83);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v84);
    swift_task_dealloc(v98);
    swift_task_dealloc(v92);
    swift_task_dealloc(v95);
    swift_task_dealloc(v89);
    swift_task_dealloc(v78);
    swift_task_dealloc(v85);
    uint64_t v60 = *(uint64_t (**)(void))(v0 + 8);
  }

  else
  {
    swift_bridgeObjectRelease(*(const char **)(v0 + 272));
    if (qword_100643F20 != -1) {
      swift_once(&qword_100643F20, sub_100201468);
    }
    uint64_t v16 = *(void *)(v0 + 120);
    uint64_t v17 = *(void *)(v0 + 96);
    uint64_t v18 = *(void *)(v0 + 104);
    uint64_t v19 = *(void *)(v0 + 80);
    uint64_t v20 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v20, (uint64_t)qword_100647800);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, v19, v17);
    uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v88 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
      uint64_t v24 = *(void *)(v0 + 240);
      uint64_t v25 = *(void *)(v0 + 224);
      uint64_t v86 = *(void *)(v0 + 120);
      uint64_t v91 = *(void *)(v0 + 104);
      uint64_t v97 = *(void *)(v0 + 96);
      uint64_t v26 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v94 = swift_slowAlloc(32LL, -1LL);
      v100[0] = v94;
      *(_DWORD *)uint64_t v26 = 136315138;
      SFAirDropSend.Request.endpointID.getter(v94);
      uint64_t v27 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter(v25, v27);
      uint64_t v30 = v29;
      v88(v24, v25);
      *(void *)(v0 + 64) = sub_10018CDB4(v28, (unint64_t)v30, v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v26 + 4, v26 + 12);
      __n128 v31 = swift_bridgeObjectRelease(v30);
      (*(void (**)(uint64_t, uint64_t, __n128))(v91 + 8))(v86, v97, v31);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "No resolved endpoints from initial endpoint: %s", v26, 0xCu);
      swift_arrayDestroy(v94, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v94, -1LL, -1LL);
      swift_slowDealloc(v26, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 104) + 8LL))( *(void *)(v0 + 120),  *(void *)(v0 + 96));
    }

    uint64_t v61 = *(void *)(v0 + 240);
    uint64_t v63 = *(void *)(v0 + 208);
    uint64_t v62 = *(void *)(v0 + 216);
    uint64_t v64 = *(void *)(v0 + 176);
    uint64_t v65 = *(void *)(v0 + 184);
    uint64_t v90 = *(void *)(v0 + 168);
    uint64_t v93 = *(void *)(v0 + 136);
    uint64_t v96 = *(void *)(v0 + 128);
    uint64_t v99 = *(void *)(v0 + 120);
    uint64_t v66 = type metadata accessor for SFAirDropSend.Failure(0LL);
    uint64_t v67 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    uint64_t v68 = swift_allocError(v66, v67, 0LL, 0LL);
    uint64_t v70 = v69;
    SFAirDropSend.Request.endpointID.getter(v68);
    uint64_t v71 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v66 - 8) + 104LL))( v70,  enum case for SFAirDropSend.Failure.missingEndpoint(_:),  v66);
    swift_willThrow(v71);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v65);
    swift_task_dealloc(v64);
    swift_task_dealloc(v90);
    swift_task_dealloc(v93);
    swift_task_dealloc(v96);
    swift_task_dealloc(v99);
    uint64_t v60 = *(uint64_t (**)(void))(v0 + 8);
  }

  return v60();
}

uint64_t sub_1002021A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[21] = a3;
  v4[22] = a4;
  v4[20] = a2;
  uint64_t v5 = type metadata accessor for UUID(0LL);
  v4[23] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[24] = v6;
  v4[25] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFAirDrop.DisplayPriority(0LL);
  v4[26] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[27] = v8;
  v4[28] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SFAirDropSend.Transfer.State(0LL);
  v4[29] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[30] = v10;
  v4[31] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100183098(&qword_100647958);
  v4[32] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v4[33] = v12;
  v4[34] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v13 = (*(void *)(*(void *)(sub_100183098(&qword_100647938) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[35] = swift_task_alloc(v13);
  v4[36] = swift_task_alloc(v13);
  v4[37] = swift_task_alloc(v13);
  v4[38] = swift_task_alloc(v13);
  uint64_t v14 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v4[39] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v4[40] = v15;
  unint64_t v16 = (*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[41] = swift_task_alloc(v16);
  v4[42] = swift_task_alloc(v16);
  v4[43] = swift_task_alloc(v16);
  v4[44] = swift_task_alloc(v16);
  v4[45] = swift_task_alloc(v16);
  v4[46] = swift_task_alloc(v16);
  v4[47] = swift_task_alloc(v16);
  uint64_t v17 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  v4[48] = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  v4[49] = v18;
  unint64_t v19 = (*(void *)(v18 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[50] = swift_task_alloc(v19);
  v4[51] = swift_task_alloc(v19);
  v4[52] = swift_task_alloc(v19);
  v4[53] = swift_task_alloc(v19);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v20 = static AirDropActor.shared;
  v4[54] = static AirDropActor.shared;
  return swift_task_switch(sub_1002023C8, v20, 0LL);
}

uint64_t sub_1002023C8()
{
  uint64_t v38 = sub_100183098((uint64_t *)&unk_1006463F0);
  uint64_t v1 = SFProgressTask.initialValue.getter();
  SFAirDropSend.Transfer.id.getter(v1);
  if (qword_100643F20 != -1) {
    swift_once(&qword_100643F20, sub_100201468);
  }
  uint64_t v3 = v0[46];
  uint64_t v2 = v0[47];
  uint64_t v5 = v0[39];
  uint64_t v4 = v0[40];
  uint64_t v6 = type metadata accessor for Logger(0LL);
  v0[55] = sub_100186DE4(v6, (uint64_t)qword_100647800);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[56] = v7;
  uint64_t v37 = v7;
  uint64_t v8 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v3, v2, v5);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = v0[46];
  uint64_t v13 = v0[39];
  uint64_t v14 = v0[40];
  if (v11)
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v36 = swift_slowAlloc(32LL, -1LL);
    uint64_t v39 = v36;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v16 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter(v13, v16);
    unint64_t v19 = v18;
    v0[19] = sub_10018CDB4(v17, v18, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 19, v0 + 20, v15 + 4, v15 + 12);
    __n128 v20 = swift_bridgeObjectRelease(v19);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, __n128))(v14 + 8);
    v21(v12, v13, v20);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "SDAirDropSendService.transfers ADD {id: %s}", v15, 0xCu);
    swift_arrayDestroy(v36, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1LL, -1LL);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  else
  {
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, __n128))(v14 + 8);
    ((void (*)(void, void))v21)(v0[46], v0[39]);
  }

  v0[57] = v21;
  uint64_t v22 = v0[53];
  uint64_t v24 = v0[48];
  uint64_t v23 = v0[49];
  uint64_t v25 = v0[47];
  uint64_t v26 = v0[45];
  uint64_t v28 = v0[38];
  uint64_t v27 = v0[39];
  v0[58] = *(void *)(v0[21] + 16LL);
  v37(v26, v25, v27);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v0[59] = v29;
  v29(v28, v22, v24);
  uint64_t v30 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56);
  v0[60] = v30;
  v30(v28, 0LL, 1LL, v24);
  __n128 v31 = (void (*)(void *, void))CurrentValueSubject.value.modify(v0 + 2);
  sub_1002E56E8(v28, v26);
  v31(v0 + 2, 0LL);
  SFProgressTask.makeAsyncIterator()(v38);
  uint64_t v32 = static AirDropActor.shared;
  uint64_t v33 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  v0[61] = v33;
  uint64_t v34 = (void *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  v0[62] = v34;
  *uint64_t v34 = v0;
  v34[1] = sub_100202714;
  return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0[37], v32, v33, v0[32], v0 + 17);
}

uint64_t sub_100202714()
{
  uint64_t v2 = *(void **)v1;
  swift_task_dealloc(*(void *)(*(void *)v1 + 496LL));
  if (v0)
  {
    uint64_t v3 = v2[54];
    uint64_t v4 = sub_100203164;
  }

  else
  {
    v2[63] = v2[57];
    uint64_t v3 = v2[54];
    uint64_t v4 = sub_100202780;
  }

  return swift_task_switch(v4, v3, 0LL);
}

uint64_t sub_100202780()
{
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v4(v3, 1LL, v1) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 264) + 8LL))(*(void *)(v0 + 272), *(void *)(v0 + 256));
    uint64_t v5 = (*(uint64_t (**)(void, void, void))(v0 + 448))( *(void *)(v0 + 336),  *(void *)(v0 + 376),  *(void *)(v0 + 312));
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.default.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 456);
    uint64_t v10 = *(void *)(v0 + 336);
    uint64_t v11 = *(void *)(v0 + 312);
    if (v8)
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v13 = swift_slowAlloc(32LL, -1LL);
      uint64_t v113 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      uint64_t v14 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter(v11, v14);
      unint64_t v17 = v16;
      *(void *)(v0 + 112) = sub_10018CDB4(v15, v16, &v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v12 + 4, v12 + 12);
      __n128 v18 = swift_bridgeObjectRelease(v17);
      v9(v10, v11, v18);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "SDAirDropSendService.transfers REMOVE {id: %s}", v12, 0xCu);
      swift_arrayDestroy(v13, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1LL, -1LL);
      swift_slowDealloc(v12, -1LL, -1LL);
    }

    else
    {
      ((void (*)(void, void))v9)(*(void *)(v0 + 336), *(void *)(v0 + 312));
    }

    __n128 v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 480);
    uint64_t v51 = *(void *)(v0 + 384);
    uint64_t v52 = *(void *)(v0 + 360);
    uint64_t v53 = *(void *)(v0 + 304);
    (*(void (**)(uint64_t, void, void))(v0 + 448))(v52, *(void *)(v0 + 376), *(void *)(v0 + 312));
    v50(v53, 1LL, 1LL, v51);
    unint64_t v54 = (uint64_t (*)(uint64_t, void))CurrentValueSubject.value.modify(v0 + 80);
    sub_1002E56E8(v53, v52);
    uint64_t v55 = v54(v0 + 80, 0LL);
    SFAirDropSend.Request.endpointID.getter(v55);
    uint64_t v56 = (void *)swift_task_alloc(dword_10064DC0C);
    *(void *)(v0 + 528) = v56;
    *uint64_t v56 = v0;
    v56[1] = sub_100202F94;
    return sub_1002E6C64(*(void *)(v0 + 200));
  }

  else
  {
    uint64_t v106 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 472);
    BOOL v109 = v4;
    unint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    uint64_t v112 = v0 + 48;
    uint64_t v21 = *(void *)(v0 + 408);
    uint64_t v20 = *(void *)(v0 + 416);
    uint64_t v22 = *(void *)(v0 + 376);
    uint64_t v23 = *(void *)(v0 + 352);
    uint64_t v24 = *(void *)(v0 + 312);
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v25(v20, v3, v1);
    v19(v23, v22, v24);
    uint64_t v26 = v106(v21, v20, v1);
    uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.default.getter();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 504);
    uint64_t v31 = *(void *)(v0 + 408);
    uint64_t v32 = *(void *)(v0 + 384);
    uint64_t v33 = *(void *)(v0 + 392);
    uint64_t v34 = *(void *)(v0 + 352);
    uint64_t v35 = *(void *)(v0 + 312);
    if (v29)
    {
      uint64_t v107 = v25;
      uint64_t v36 = *(void *)(v0 + 248);
      uint64_t v102 = *(void *)(v0 + 232);
      uint64_t v103 = *(void *)(v0 + 240);
      uint64_t v110 = *(void *)(v0 + 392);
      uint64_t v37 = swift_slowAlloc(22LL, -1LL);
      uint64_t v104 = swift_slowAlloc(64LL, -1LL);
      uint64_t v113 = v104;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v38 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter(v35, v38);
      uint64_t v101 = v32;
      unint64_t v41 = v40;
      *(void *)(v37 + 4) = sub_10018CDB4(v39, v40, &v113);
      __n128 v42 = swift_bridgeObjectRelease(v41);
      uint64_t v43 = v30(v34, v35, v42);
      *(_WORD *)(v37 + 12) = 2080;
      SFAirDropSend.Transfer.state.getter(v43);
      uint64_t v44 = sub_100183F14( &qword_100647960,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer.State,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer.State);
      uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter(v102, v44);
      unint64_t v47 = v46;
      uint64_t v48 = v36;
      uint64_t v25 = v107;
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v48, v102);
      *(void *)(v37 + 14) = sub_10018CDB4(v45, v47, &v113);
      __n128 v49 = swift_bridgeObjectRelease(v47);
      v111 = *(void (**)(uint64_t, uint64_t, __n128))(v110 + 8);
      v111(v31, v101, v49);
      _os_log_impl( (void *)&_mh_execute_header,  v27,  v28,  "SDAirDropSendService.transfers UPDATE {id: %s, state: %s}",  (uint8_t *)v37,  0x16u);
      swift_arrayDestroy(v104, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v104, -1LL, -1LL);
      swift_slowDealloc(v37, -1LL, -1LL);
    }

    else
    {
      ((void (*)(void, void))v30)(*(void *)(v0 + 352), *(void *)(v0 + 312));
      v111 = *(void (**)(uint64_t, uint64_t, __n128))(v33 + 8);
      ((void (*)(uint64_t, uint64_t))v111)(v31, v32);
    }

    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 472);
    uint64_t v58 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 480);
    uint64_t v60 = *(void *)(v0 + 416);
    uint64_t v61 = *(void *)(v0 + 384);
    uint64_t v62 = *(void *)(v0 + 288);
    (*(void (**)(void, void, void))(v0 + 448))( *(void *)(v0 + 344),  *(void *)(v0 + 376),  *(void *)(v0 + 312));
    v59(v62, v60, v61);
    v58(v62, 0LL, 1LL, v61);
    uint64_t v108 = (void (*)(uint64_t, void))CurrentValueSubject.value.modify(v112);
    uint64_t v64 = v63;
    if (v109(v62, 1LL, v61) == 1)
    {
      uint64_t v65 = *(void *)(v0 + 344);
      sub_100187100(*(void *)(v0 + 288), &qword_100647938);
      uint64_t v66 = *v64;
      swift_bridgeObjectRetain(*v64);
      unint64_t v67 = sub_1003AD580(v65);
      LOBYTE(v65) = v68;
      __n128 v69 = swift_bridgeObjectRelease(v66);
      if ((v65 & 1) != 0)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v64);
        *(void *)(v0 + 144) = *v64;
        *uint64_t v64 = 0x8000000000000000LL;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1003AEE80();
        }
        uint64_t v71 = *(void *)(v0 + 384);
        uint64_t v72 = *(void *)(v0 + 392);
        uint64_t v73 = *(void *)(v0 + 280);
        (*(void (**)(unint64_t, void))(v0 + 504))( *(void *)(*(void *)(v0 + 144) + 48LL) + *(void *)(*(void *)(v0 + 320) + 72LL) * v67,  *(void *)(v0 + 312));
        uint64_t v74 = *(void *)(v0 + 144);
        v25(v73, *(void *)(v74 + 56) + *(void *)(v72 + 72) * v67, v71);
        sub_1001CBD20(v67, v74);
        uint64_t v75 = *v64;
        *uint64_t v64 = v74;
        __n128 v69 = swift_bridgeObjectRelease(v75);
        uint64_t v76 = 0LL;
      }

      else
      {
        uint64_t v76 = 1LL;
      }

      uint64_t v77 = (void *)(v0 + 456);
      uint64_t v85 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
      uint64_t v86 = *(void *)(v0 + 344);
      uint64_t v87 = *(void *)(v0 + 312);
      uint64_t v88 = *(void *)(v0 + 280);
      (*(void (**)(uint64_t, uint64_t, uint64_t, void, __n128))(v0 + 480))( v88,  v76,  1LL,  *(void *)(v0 + 384),  v69);
      v85(v86, v87);
      sub_100187100(v88, &qword_100647938);
    }

    else
    {
      uint64_t v77 = (void *)(v0 + 504);
      uint64_t v78 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 504);
      uint64_t v79 = *(void *)(v0 + 400);
      uint64_t v80 = *(void *)(v0 + 344);
      uint64_t v81 = *(void *)(v0 + 312);
      v25(v79, *(void *)(v0 + 288), *(void *)(v0 + 384));
      char v82 = swift_isUniquelyReferenced_nonNull_native(*v64);
      uint64_t v113 = *v64;
      *uint64_t v64 = 0x8000000000000000LL;
      sub_1003B361C(v79, v80, v82);
      uint64_t v83 = *v64;
      *uint64_t v64 = v113;
      __n128 v84 = swift_bridgeObjectRelease(v83);
      v78(v80, v81, v84);
    }

    *(void *)(v0 + 512) = *v77;
    uint64_t v105 = *(void *)(v0 + 488);
    uint64_t v89 = *(void *)(v0 + 416);
    uint64_t v90 = *(void *)(v0 + 384);
    uint64_t v91 = *(void *)(v0 + 240);
    uint64_t v92 = *(void *)(v0 + 248);
    uint64_t v94 = *(void *)(v0 + 224);
    uint64_t v93 = *(void *)(v0 + 232);
    uint64_t v95 = *(void *)(v0 + 208);
    uint64_t v96 = *(void *)(v0 + 216);
    v108(v112, 0LL);
    sub_100392958(v89);
    uint64_t v98 = SFAirDropSend.Transfer.state.getter(v97);
    SFAirDropSend.Transfer.displayPriority.getter(v98);
    ((void (*)(uint64_t, uint64_t))v111)(v89, v90);
    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v94, v95);
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v92, v93);
    uint64_t v99 = static AirDropActor.shared;
    uint64_t v100 = (void *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(void *)(v0 + 520) = v100;
    *uint64_t v100 = v0;
    v100[1] = sub_100202F28;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF( *(void *)(v0 + 296),  v99,  v105,  *(void *)(v0 + 256),  v0 + 136);
  }

uint64_t sub_100202F28()
{
  uint64_t v2 = *(void **)v1;
  swift_task_dealloc(*(void *)(*(void *)v1 + 520LL));
  if (v0)
  {
    uint64_t v3 = v2[54];
    uint64_t v4 = sub_100203164;
  }

  else
  {
    v2[63] = v2[64];
    uint64_t v3 = v2[54];
    uint64_t v4 = sub_100202780;
  }

  return swift_task_switch(v4, v3, 0LL);
}

uint64_t sub_100202F94()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 432LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 192LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 200LL);
  uint64_t v4 = *(void *)(*(void *)v0 + 184LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 528LL));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_10020300C, v1, 0LL);
}

uint64_t sub_10020300C()
{
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v1 = *(void *)(v0 + 424);
  uint64_t v4 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v6 = *(void *)(v0 + 384);
  uint64_t v5 = *(void *)(v0 + 392);
  uint64_t v8 = *(void *)(v0 + 368);
  uint64_t v7 = *(void *)(v0 + 376);
  uint64_t v9 = *(void *)(v0 + 360);
  uint64_t v11 = *(void *)(v0 + 352);
  uint64_t v12 = *(void *)(v0 + 344);
  uint64_t v13 = *(void *)(v0 + 336);
  uint64_t v14 = *(void *)(v0 + 328);
  uint64_t v15 = *(void *)(v0 + 304);
  uint64_t v16 = *(void *)(v0 + 296);
  uint64_t v17 = *(void *)(v0 + 288);
  uint64_t v18 = *(void *)(v0 + 280);
  uint64_t v19 = *(void *)(v0 + 272);
  uint64_t v20 = *(void *)(v0 + 248);
  uint64_t v21 = *(void *)(v0 + 224);
  uint64_t v22 = *(void *)(v0 + 200);
  (*(void (**)(uint64_t, void))(v0 + 456))(v7, *(void *)(v0 + 312));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v6);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100203164()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[56];
  uint64_t v2 = v0[47];
  uint64_t v3 = v0[41];
  uint64_t v4 = v0[39];
  (*(void (**)(void, void))(v0[33] + 8LL))(v0[34], v0[32]);
  uint64_t v5 = v0[17];
  v1(v3, v2, v4);
  swift_errorRetain(v5);
  uint64_t v6 = swift_errorRetain(v5);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v44 = (void (*)(uint64_t, uint64_t))v0[57];
    uint64_t v9 = v0[41];
    uint64_t v10 = v0[39];
    uint64_t v11 = swift_slowAlloc(22LL, -1LL);
    uint64_t v45 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    uint64_t v46 = swift_slowAlloc(32LL, -1LL);
    uint64_t v47 = v46;
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v12 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    os_log_t log = v7;
    uint64_t v13 = v10;
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter(v10, v12);
    unint64_t v16 = v15;
    v0[15] = sub_10018CDB4(v14, v15, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 15, v0 + 16, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease(v16);
    v44(v9, v13);
    *(_WORD *)(v11 + 12) = 2112;
    swift_errorRetain(v5);
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError(v5);
    v0[16] = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 17, v11 + 14, v11 + 22);
    *uint64_t v45 = v17;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl( (void *)&_mh_execute_header,  log,  v8,  "SDAirDropSendService.transfers ERROR {id: %s, error: %@}",  (uint8_t *)v11,  0x16u);
    uint64_t v18 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v45, 1LL, v18);
    swift_slowDealloc(v45, -1LL, -1LL);
    swift_arrayDestroy(v46, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);

    swift_errorRelease(v5);
  }

  else
  {
    uint64_t v19 = (void (*)(uint64_t, uint64_t))v0[57];
    uint64_t v20 = v0[41];
    uint64_t v21 = v0[39];
    swift_errorRelease(v5);
    v19(v20, v21);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
  }

  uint64_t v22 = ((uint64_t (*)(void, void, void))v0[56])(v0[42], v0[47], v0[39]);
  uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v24 = static os_log_type_t.default.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v26 = (void (*)(uint64_t, uint64_t))v0[57];
  uint64_t v27 = v0[42];
  uint64_t v28 = v0[39];
  if (v25)
  {
    BOOL v29 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v30 = swift_slowAlloc(32LL, -1LL);
    uint64_t v47 = v30;
    *(_DWORD *)BOOL v29 = 136315138;
    uint64_t v31 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter(v28, v31);
    unint64_t v34 = v33;
    v0[14] = sub_10018CDB4(v32, v33, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 14, v0 + 15, v29 + 4, v29 + 12);
    swift_bridgeObjectRelease(v34);
    v26(v27, v28);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "SDAirDropSendService.transfers REMOVE {id: %s}", v29, 0xCu);
    swift_arrayDestroy(v30, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1LL, -1LL);
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  else
  {
    v26(v0[42], v0[39]);
  }

  uint64_t v35 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[60];
  uint64_t v36 = v0[48];
  uint64_t v37 = v0[45];
  uint64_t v38 = v0[38];
  ((void (*)(uint64_t, void, void))v0[56])(v37, v0[47], v0[39]);
  v35(v38, 1LL, 1LL, v36);
  uint64_t v39 = (uint64_t (*)(void *, void))CurrentValueSubject.value.modify(v0 + 10);
  sub_1002E56E8(v38, v37);
  uint64_t v40 = v39(v0 + 10, 0LL);
  SFAirDropSend.Request.endpointID.getter(v40);
  unint64_t v41 = (void *)swift_task_alloc(dword_10064DC0C);
  v0[66] = v41;
  *unint64_t v41 = v0;
  v41[1] = sub_100202F94;
  return sub_1002E6C64(v0[25]);
}

uint64_t sub_1002035F4(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for UUID(0LL);
  v2[6] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_100647938);
  v2[9] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  v2[10] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v2[13] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v10 = static AirDropActor.shared;
  v2[16] = static AirDropActor.shared;
  return swift_task_switch(sub_1002036FC, v10, 0LL);
}

uint64_t sub_1002036FC()
{
  if (qword_100643F20 != -1) {
    swift_once(&qword_100643F20, sub_100201468);
  }
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v5, (uint64_t)qword_100647800);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v1, v4);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v11 = *(void *)(v0 + 112);
  uint64_t v10 = *(void *)(v0 + 120);
  uint64_t v12 = *(void *)(v0 + 104);
  if (v9)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v34 = swift_slowAlloc(32LL, -1LL);
    uint64_t v35 = v34;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v14 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter(v12, v14);
    uint64_t v17 = (const char *)v16;
    *(void *)(v0 + 24) = sub_10018CDB4(v15, v16, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v13 + 4, v13 + 12);
    __n128 v18 = swift_bridgeObjectRelease(v17);
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v12, v18);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Canceling send transfer %s", v13, 0xCu);
    swift_arrayDestroy(v34, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1LL, -1LL);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(void, void))(v11 + 8))(*(void *)(v0 + 120), *(void *)(v0 + 104));
  }

  CurrentValueSubject.value.getter(v19);
  uint64_t v20 = *(void *)(v0 + 16);
  if (*(void *)(v20 + 16) && (unint64_t v21 = sub_1003AD580(*(void *)(v0 + 32)), (v22 & 1) != 0))
  {
    (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 88) + 16LL))( *(void *)(v0 + 72),  *(void *)(v20 + 56) + *(void *)(*(void *)(v0 + 88) + 72LL) * v21,  *(void *)(v0 + 80));
    uint64_t v23 = 0LL;
  }

  else
  {
    uint64_t v23 = 1LL;
  }

  uint64_t v24 = *(void *)(v0 + 80);
  uint64_t v25 = *(void *)(v0 + 88);
  uint64_t v26 = *(void *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v26, v23, 1LL, v24);
  __n128 v27 = swift_bridgeObjectRelease((const char *)v20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v25 + 48))(v26, 1LL, v24, v27) == 1)
  {
    sub_100187100(*(void *)(v0 + 72), &qword_100647938);
    sub_100370ED0(*(void *)(v0 + 32));
    uint64_t v28 = *(void *)(v0 + 96);
    uint64_t v30 = *(void *)(v0 + 64);
    uint64_t v29 = *(void *)(v0 + 72);
    swift_task_dealloc(*(void *)(v0 + 120));
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    uint64_t v31 = (*(uint64_t (**)(void, void, void))(*(void *)(v0 + 88) + 32LL))( *(void *)(v0 + 96),  *(void *)(v0 + 72),  *(void *)(v0 + 80));
    SFAirDropSend.Transfer.endpointID.getter(v31);
    uint64_t v32 = (void *)swift_task_alloc(dword_10064DC0C);
    *(void *)(v0 + 136) = v32;
    void *v32 = v0;
    v32[1] = sub_100203A64;
    return sub_1002E6C64(*(void *)(v0 + 64));
  }

uint64_t sub_100203A64()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 56LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 64LL);
  uint64_t v4 = *(void *)(*(void *)v0 + 48LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 136LL));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_100203AD8, v1, 0LL);
}

uint64_t sub_100203AD8()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  swift_task_dealloc(*(void *)(v0 + 120));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100203B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v5 = sub_100183098(&qword_100647910);
  void v4[6] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_100647918);
  v4[9] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[10] = v8;
  v4[11] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  v4[12] = static AirDropActor.shared;
  return swift_task_switch(sub_100203C2C, v9, 0LL);
}

uint64_t sub_100203C2C()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  v0[2] = *(void *)(v0[5] + 16LL);
  uint64_t v4 = sub_100183098(&qword_100647920);
  unint64_t v5 = sub_1002041BC();
  Publisher<>.values.getter(v4, v5);
  AsyncPublisher.makeAsyncIterator()(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v6 = static AirDropActor.shared;
  uint64_t v7 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100649DF0 + dword_100649DF0);
  uint64_t v8 = (void *)swift_task_alloc(unk_100649DF4);
  v0[13] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100203D38;
  return v10(v6, v7);
}

uint64_t sub_100203D38(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 96LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 104LL);
  *(void *)(*(void *)v1 + 112LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100203D94, v3, 0LL);
}

uint64_t sub_100203D94()
{
  int64_t v1 = *(void *)(v0 + 112);
  if (v1)
  {
    if (qword_100643F20 != -1) {
      swift_once(&qword_100643F20, sub_100201468);
    }
    uint64_t v2 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v2, (uint64_t)qword_100647800);
    uint64_t v3 = swift_bridgeObjectRetain_n(v1, 2LL);
    uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v7 = swift_slowAlloc(32LL, -1LL);
      uint64_t v22 = v7;
      *(_DWORD *)uint64_t v6 = 136315138;
      uint64_t v8 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      uint64_t v9 = type metadata accessor for SFAirDropSend.Transfer(0LL);
      uint64_t v10 = sub_100183F14( &qword_100646250,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      uint64_t v11 = swift_bridgeObjectRetain(v1);
      uint64_t v12 = Dictionary.description.getter(v11, v8, v9, v10);
      unint64_t v14 = v13;
      swift_bridgeObjectRelease(v1);
      *(void *)(v0 + 32) = sub_10018CDB4(v12, v14, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v6 + 4, v6 + 12);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease_n(v1, 2LL);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Send transfers updates in daemon: %s", v6, 0xCu);
      swift_arrayDestroy(v7, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1LL, -1LL);
      swift_slowDealloc(v6, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(v1, 2LL);
    }

    sub_100241A18(v1, (uint64_t)&_swiftEmptyDictionarySingleton);
    swift_bridgeObjectRelease(v1);
    uint64_t v18 = static AirDropActor.shared;
    uint64_t v19 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    unint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100649DF0 + dword_100649DF0);
    uint64_t v20 = (void *)swift_task_alloc(unk_100649DF4);
    *(void *)(v0 + 104) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_100203D38;
    return v21(v18, v19);
  }

  else
  {
    uint64_t v15 = *(void *)(v0 + 88);
    uint64_t v16 = *(void *)(v0 + 64);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 80) + 8LL))(v15, *(void *)(v0 + 72));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_100204080()
{
  sub_100195658(v0 + 40);
  swift_release(*(void *)(v0 + 56));
  swift_bridgeObjectRelease(*(void *)(v0 + 64));

  swift_release(*(void *)(v0 + 80));
  sub_10018709C((void *)(v0 + 88));

  return v0;
}

uint64_t sub_1002040E4()
{
  return swift_deallocClassInstance(v0, 136LL, 7LL);
}

uint64_t type metadata accessor for SDAirDropSendService()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary20SDAirDropSendService);
}

uint64_t sub_100204124()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_100204150(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_100647904);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1001943E8;
  return sub_100203B68(a1, v4, v5, v6);
}

unint64_t sub_1002041BC()
{
  unint64_t result = qword_100647928;
  if (!qword_100647928)
  {
    uint64_t v1 = sub_100183124(&qword_100647920);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v1);
    atomic_store(result, &qword_100647928);
  }

  return result;
}

uint64_t sub_100204208()
{
  uint64_t v1 = sub_100183098((uint64_t *)&unk_1006463F0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v5 = type metadata accessor for SFAirDropSend.Request(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = v7 + *(void *)(v6 + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release(*(void *)(v0 + v4));
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject(v0, v8);
}

uint64_t sub_1002042D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100183098((uint64_t *)&unk_1006463F0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SFAirDropSend.Request(0LL) - 8) + 80LL);
  uint64_t v8 = v6 + v7 + 8;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = v1 + (v8 & ~v7);
  uint64_t v12 = (void *)swift_task_alloc(dword_10064794C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1001943E8;
  return sub_1002021A4(a1, v9, v10, v11);
}

void sub_10020438C()
{
  uint64_t v1 = type metadata accessor for AuthenticationDevice(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = _s30IndividualPersonaVolumeManagerC5StateOMa(0LL);
  __chkstk_darwin(v3);
  unint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100205854(v0, (uint64_t)v5);
  unint64_t v6 = (char *)sub_100204460
     + 4 * byte_1004CEC80[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v5, 5LL, v1)];
  __asm { BR              X10 }

uint64_t sub_100204460()
{
  *(void *)(v3 - 64) = 0LL;
  *(void *)(v3 - 56) = 0xE000000000000000LL;
  v4._countAndFlagsBits = 0x64656B636F6C6E75LL;
  v4._object = (void *)0xEC00000020796220LL;
  String.append(_:)(v4);
  _print_unlocked<A, B>(_:_:)( v0,  v3 - 64,  v1,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  uint64_t v5 = *(void *)(v3 - 64);
  sub_1001A4BC8(v0, type metadata accessor for AuthenticationDevice);
  return v5;
}

uint64_t sub_100204550()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_logger;
  uint64_t v2 = type metadata accessor for Logger(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_iCloudAltDSID
                                      + 8));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_personaSession));
  sub_10018709C((void *)(v0
                         + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_volumeManager));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_localCache));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_deviceDiscoveryTask));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_messageReceivingTask));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_relockTimerTask));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_volumeExpirationTask));
  sub_1001A4BC8( v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_state,  _s30IndividualPersonaVolumeManagerC5StateOMa);
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_performRequest
                          + 8));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_createDeviceSequence
                          + 8));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_fetchLocalLTK
                          + 8));
  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t sub_100204674()
{
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_10020468C()
{
  return _s30IndividualPersonaVolumeManagerCMa(0LL);
}

uint64_t _s30IndividualPersonaVolumeManagerCMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_1006479E0, (uint64_t)&_s30IndividualPersonaVolumeManagerCMn);
}

uint64_t sub_1002046A8(uint64_t a1)
{
  uint64_t result = type metadata accessor for Logger(319LL);
  if (v3 <= 0x3F)
  {
    v5[1] = *(void *)(result - 8) + 64LL;
    v5[2] = &unk_1004CECC8;
    v5[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[4] = &unk_1004CECE0;
    v5[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[6] = &unk_1004CECF8;
    v5[7] = &unk_1004CECF8;
    v5[8] = &unk_1004CECF8;
    v5[9] = &unk_1004CECF8;
    uint64_t result = _s30IndividualPersonaVolumeManagerC5StateOMa(319LL);
    if (v4 <= 0x3F)
    {
      v5[10] = *(void *)(result - 8) + 64LL;
      v5[11] = (char *)&value witness table for () + 64;
      v5[12] = (char *)&value witness table for () + 64;
      v5[13] = (char *)&value witness table for () + 64;
      return swift_updateClassMetadata2(a1, 256LL, 14LL, v5, a1 + 80);
    }
  }

  return result;
}

uint64_t _s30IndividualPersonaVolumeManagerC5StateOMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, (uint64_t *)&unk_100647C58, (uint64_t)&_s30IndividualPersonaVolumeManagerC5StateOMn);
}

uint64_t *sub_100204790(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16LL) & ~(unint64_t)v6));
    swift_retain(v9);
  }

  else
  {
    uint64_t v7 = (int *)type metadata accessor for AuthenticationDevice(0LL);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 5LL, v7))
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }

    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      uint64_t v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      uint64_t v13 = v7[9];
      __dst = (char *)a1 + v13;
      uint64_t v32 = v8;
      unint64_t v14 = (char *)a2 + v13;
      uint64_t v15 = type metadata accessor for UUID(0LL);
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRetain(v12);
      if (v17(v14, 1LL, v15))
      {
        uint64_t v18 = sub_100183098(&qword_10064DA60);
        memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0LL, 1LL, v15);
      }

      uint64_t v19 = v7[10];
      uint64_t v20 = (uint64_t *)((char *)a1 + v19);
      unint64_t v21 = (uint64_t *)((char *)a2 + v19);
      uint64_t v22 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v22;
      uint64_t v23 = v7[11];
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      *((void *)v24 + 2) = *((void *)v25 + 2);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      uint64_t v26 = v7[12];
      __n128 v27 = *(void **)((char *)a2 + v26);
      *(uint64_t *)((char *)a1 + v26) = (uint64_t)v27;
      uint64_t v28 = *(void (**)(uint64_t *, void, uint64_t, int *))(v32 + 56);
      swift_bridgeObjectRetain(v22);
      id v29 = v27;
      v28(a1, 0LL, 5LL, v7);
    }
  }

  return a1;
}

void sub_100204968(void *a1)
{
  uint64_t v2 = (int *)type metadata accessor for AuthenticationDevice(0LL);
  if (!(*(unsigned int (**)(void *, uint64_t, int *))(*((void *)v2 - 1) + 48LL))(a1, 5LL, v2))
  {
    swift_bridgeObjectRelease(a1[1]);
    swift_bridgeObjectRelease(a1[3]);
    swift_bridgeObjectRelease(a1[5]);
    unint64_t v3 = (char *)a1 + v2[9];
    uint64_t v4 = type metadata accessor for UUID(0LL);
    uint64_t v5 = *(void *)(v4 - 8);
    swift_bridgeObjectRelease(*(void *)((char *)a1 + v2[10] + 8));
  }

void *sub_100204A40(void *a1, void *a2, uint64_t a3)
{
  int v6 = (int *)type metadata accessor for AuthenticationDevice(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 5LL, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    uint64_t v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
    uint64_t v11 = v6[9];
    uint64_t v29 = v7;
    __dst = (char *)a1 + v11;
    uint64_t v12 = (char *)a2 + v11;
    uint64_t v13 = type metadata accessor for UUID(0LL);
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    if (v15(v12, 1LL, v13))
    {
      uint64_t v16 = sub_100183098(&qword_10064DA60);
      memcpy(__dst, v12, *(void *)(*(void *)(v16 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0LL, 1LL, v13);
    }

    uint64_t v17 = v6[10];
    uint64_t v18 = (void *)((char *)a1 + v17);
    uint64_t v19 = (void *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = v6[11];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    *((void *)v22 + 2) = *((void *)v23 + 2);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    uint64_t v24 = v6[12];
    uint64_t v25 = *(void **)((char *)a2 + v24);
    *(void *)((char *)a1 + v24) = v25;
    uint64_t v26 = *(void (**)(void *, void, uint64_t, int *))(v29 + 56);
    swift_bridgeObjectRetain(v20);
    id v27 = v25;
    v26(a1, 0LL, 5LL, v6);
  }

  return a1;
}

uint64_t sub_100204BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = (int *)type metadata accessor for AuthenticationDevice(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 5LL, v6);
  int v10 = v8(a2, 5LL, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1001A4BC8(a1, type metadata accessor for AuthenticationDevice);
      goto LABEL_7;
    }

    *(void *)a1 = *(void *)a2;
    uint64_t v19 = *(void *)(a2 + 8);
    uint64_t v20 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v19;
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRelease(v20);
    *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);
    uint64_t v21 = *(void *)(a2 + 24);
    uint64_t v22 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = v21;
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRelease(v22);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    uint64_t v23 = *(void *)(a2 + 40);
    uint64_t v24 = *(void *)(a1 + 40);
    *(void *)(a1 + 40) = v23;
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRelease(v24);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
    uint64_t v25 = v6[9];
    uint64_t v26 = (void *)(a1 + v25);
    id v27 = (void *)(a2 + v25);
    uint64_t v28 = type metadata accessor for UUID(0LL);
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
    int v31 = v30(v26, 1LL, v28);
    int v32 = v30(v27, 1LL, v28);
    if (v31)
    {
      if (!v32)
      {
        (*(void (**)(void *, void *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0LL, 1LL, v28);
LABEL_16:
        uint64_t v46 = v6[10];
        uint64_t v47 = (void *)(a1 + v46);
        uint64_t v48 = (void *)(a2 + v46);
        *uint64_t v47 = *v48;
        uint64_t v49 = v48[1];
        uint64_t v50 = v47[1];
        v47[1] = v49;
        swift_bridgeObjectRetain(v49);
        swift_bridgeObjectRelease(v50);
        uint64_t v51 = v6[11];
        uint64_t v52 = (void *)(a1 + v51);
        uint64_t v53 = (void *)(a2 + v51);
        *uint64_t v52 = *v53;
        v52[1] = v53[1];
        v52[2] = v53[2];
        uint64_t v54 = v6[12];
        uint64_t v55 = *(void **)(a2 + v54);
        uint64_t v56 = *(void **)(a1 + v54);
        *(void *)(a1 + v54) = v55;
        id v57 = v55;

        return a1;
      }
    }

    else
    {
      if (!v32)
      {
        (*(void (**)(void *, void *, uint64_t))(v29 + 24))(v26, v27, v28);
        goto LABEL_16;
      }

      (*(void (**)(void *, uint64_t))(v29 + 8))(v26, v28);
    }

    uint64_t v45 = sub_100183098(&qword_10064DA60);
    memcpy(v26, v27, *(void *)(*(void *)(v45 - 8) + 64LL));
    goto LABEL_16;
  }

  if (v10)
  {
LABEL_7:
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    return a1;
  }

  *(void *)a1 = *(void *)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);
  uint64_t v12 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  *(void *)(a1 + 40) = v13;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  uint64_t v14 = v6[9];
  __dst = (void *)(a1 + v14);
  uint64_t v15 = (const void *)(a2 + v14);
  uint64_t v16 = type metadata accessor for UUID(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  if (v59(v15, 1LL, v16))
  {
    uint64_t v18 = sub_100183098(&qword_10064DA60);
    memcpy(__dst, v15, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(__dst, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0LL, 1LL, v16);
  }

  uint64_t v33 = v6[10];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  *uint64_t v34 = *v35;
  uint64_t v36 = v35[1];
  v34[1] = v36;
  uint64_t v37 = v6[11];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = (__int128 *)(a2 + v37);
  __int128 v40 = *v39;
  *(void *)(v38 + swift_weakDestroy(v0 + 16) = *((void *)v39 + 2);
  *(_OWORD *)uint64_t v38 = v40;
  uint64_t v41 = v6[12];
  __n128 v42 = *(void **)(a2 + v41);
  *(void *)(a1 + v41) = v42;
  uint64_t v43 = *(void (**)(uint64_t, void, uint64_t, int *))(v7 + 56);
  swift_bridgeObjectRetain(v36);
  id v44 = v42;
  v43(a1, 0LL, 5LL, v6);
  return a1;
}

_OWORD *sub_100204FA8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int v6 = (int *)type metadata accessor for AuthenticationDevice(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 5LL, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    __int128 v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
    uint64_t v9 = v6[9];
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID(0LL);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100183098(&qword_10064DA60);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
    }

    *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
    uint64_t v15 = v6[11];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    *((void *)v16 + 2) = *((void *)v17 + 2);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0LL, 5LL, v6);
  }

  return a1;
}

uint64_t sub_100205110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = (int *)type metadata accessor for AuthenticationDevice(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  __int128 v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 5LL, v6);
  int v10 = v8(a2, 5LL, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1001A4BC8(a1, type metadata accessor for AuthenticationDevice);
      goto LABEL_7;
    }

    uint64_t v18 = *(void *)(a2 + 8);
    uint64_t v19 = *(void *)(a1 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v18;
    swift_bridgeObjectRelease(v19);
    uint64_t v20 = *(void *)(a2 + 24);
    uint64_t v21 = *(void *)(a1 + 24);
    *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v20;
    swift_bridgeObjectRelease(v21);
    uint64_t v22 = *(void *)(a2 + 40);
    uint64_t v23 = *(void *)(a1 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v22;
    swift_bridgeObjectRelease(v23);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
    uint64_t v24 = v6[9];
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (void *)(a2 + v24);
    uint64_t v27 = type metadata accessor for UUID(0LL);
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
    int v30 = v29(v25, 1LL, v27);
    int v31 = v29(v26, 1LL, v27);
    if (v30)
    {
      if (!v31)
      {
        (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v25, v26, v27);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0LL, 1LL, v27);
LABEL_16:
        uint64_t v36 = v6[10];
        uint64_t v37 = (void *)(a1 + v36);
        uint64_t v38 = (uint64_t *)(a2 + v36);
        uint64_t v40 = *v38;
        uint64_t v39 = v38[1];
        uint64_t v41 = v37[1];
        *uint64_t v37 = v40;
        v37[1] = v39;
        swift_bridgeObjectRelease(v41);
        uint64_t v42 = v6[11];
        uint64_t v43 = a1 + v42;
        uint64_t v44 = a2 + v42;
        *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
        *(void *)(v43 + swift_weakDestroy(v0 + 16) = *(void *)(v44 + 16);
        uint64_t v45 = v6[12];
        uint64_t v46 = *(void **)(a1 + v45);
        *(void *)(a1 + v45) = *(void *)(a2 + v45);

        return a1;
      }
    }

    else
    {
      if (!v31)
      {
        (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v25, v26, v27);
        goto LABEL_16;
      }

      (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
    }

    uint64_t v35 = sub_100183098(&qword_10064DA60);
    memcpy(v25, v26, *(void *)(*(void *)(v35 - 8) + 64LL));
    goto LABEL_16;
  }

  if (v10)
  {
LABEL_7:
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    return a1;
  }

  __int128 v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v12 = v6[9];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for UUID(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1LL, v15))
  {
    uint64_t v17 = sub_100183098(&qword_10064DA60);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0LL, 1LL, v15);
  }

  *(_OWORD *)(a1 + v6[10]) = *(_OWORD *)(a2 + v6[10]);
  uint64_t v32 = v6[11];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  *(void *)(v33 + swift_weakDestroy(v0 + 16) = *(void *)(v34 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *(void *)(a1 + v6[12]) = *(void *)(a2 + v6[12]);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v7 + 56))(a1, 0LL, 5LL, v6);
  return a1;
}

uint64_t sub_100205404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100205410);
}

uint64_t sub_100205410(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationDevice(0LL);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48LL))(a1, a2, v4);
  if (v5 >= 6) {
    return v5 - 5;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_10020545C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100205468);
}

uint64_t sub_100205468(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 5);
  }
  else {
    uint64_t v5 = 0LL;
  }
  uint64_t v6 = type metadata accessor for AuthenticationDevice(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(a1, v5, a3, v6);
}

uint64_t sub_1002054BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AuthenticationDevice(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48LL))(a1, 5LL, v2);
}

uint64_t sub_1002054F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationDevice(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(a1, a2, 5LL, v4);
}

uint64_t sub_100205534(uint64_t a1)
{
  uint64_t result = type metadata accessor for AuthenticationDevice(319LL);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256LL, *(void *)(result - 8) + 64LL, 5LL);
    return 0LL;
  }

  return result;
}

void sub_100205588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationDevice(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = _s30IndividualPersonaVolumeManagerC5StateOMa(0LL);
  __chkstk_darwin(v6);
  uint64_t v7 = sub_100183098(&qword_100647C68);
  uint64_t v8 = __chkstk_darwin(v7);
  int v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_100205854(a1, (uint64_t)v10);
  sub_100205854(a2, v11);
  uint64_t v12 = (char *)sub_10020569C
      + 4 * byte_1004CEC86[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 5LL, v4)];
  __asm { BR              X10 }

uint64_t sub_10020569C()
{
  if (v4(v5, 5LL, v3))
  {
    sub_1001A4BC8((uint64_t)v1, type metadata accessor for AuthenticationDevice);
    sub_100205898(v0);
    return 0LL;
  }

  sub_1002058D8(v5, (uint64_t)v2);
  uint64_t v7 = v1[1];
  uint64_t v8 = v2[1];
  if (!v7)
  {
    if (!v8) {
      goto LABEL_15;
    }
LABEL_13:
    sub_1001A4BC8((uint64_t)v2, type metadata accessor for AuthenticationDevice);
    sub_1001A4BC8((uint64_t)v1, type metadata accessor for AuthenticationDevice);
    goto LABEL_14;
  }

  if (!v8) {
    goto LABEL_13;
  }
  if (*v1 != *v2 || v7 != v8)
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(*v1, v7, *v2, v8, 0LL);
    sub_1001A4BC8((uint64_t)v2, type metadata accessor for AuthenticationDevice);
    sub_1001A4BC8((uint64_t)v1, type metadata accessor for AuthenticationDevice);
    if ((v10 & 1) != 0) {
      goto LABEL_16;
    }
LABEL_14:
    sub_1001A4BC8(v0, _s30IndividualPersonaVolumeManagerC5StateOMa);
    return 0LL;
  }

uint64_t sub_100205854(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s30IndividualPersonaVolumeManagerC5StateOMa(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100205898(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100647C68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1002058D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationDevice(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SDAirDropContentHandleriCloudFamilyLinks()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary40SDAirDropContentHandleriCloudFamilyLinks);
}

uint64_t sub_10020593C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandleriCloudFamilyLinks();
  uint64_t result = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(result + swift_weakDestroy(v0 + 16) = 0LL;
  *a1 = result;
  return result;
}

uint64_t sub_100205974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100183098((uint64_t *)&unk_1006563F0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *v2;
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = *(void **)(v8 + 16);
  uint64_t v10 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v7, 1LL, 1LL, v10);
  id v11 = v9;
  sub_10026664C(a1, v9, 1, a2);

  return sub_100187334((uint64_t)v7);
}

void sub_100205A44(uint64_t a1, char a2)
{
  v3._countAndFlagsBits = 95LL;
  v3._object = (void *)0xE100000000000000LL;
  String.append(_:)(v3);
  String.append(_:)((Swift::String)xmmword_1005D0DF8);
  swift_bridgeObjectRelease(0xED0000594C494D41LL);
  if ((a2 & 1) != 0)
  {
    v4._countAndFlagsBits = 0x4C4154495041435FLL;
    v4._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v4);
  }

  v5._countAndFlagsBits = 0x545845545FLL;
  v5._object = (void *)0xE500000000000000LL;
  String.append(_:)(v5);
  uint64_t v6 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(&xmmword_1005D0DF8, 1LL, v6);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0xEF524546534E4152LL);
  id v9 = (id)SFLocalizedStringForKey(v7, v8);

  if (v9)
  {
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    uint64_t v12 = v11;

    static String.localizedStringWithFormat(_:_:)(v10, v12, _swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(v12);
  }

  else
  {
    __break(1u);
  }

uint64_t *AirDropActor.shared.unsafeMutableAddressor()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return &static AirDropActor.shared;
}

uint64_t sub_100205C24()
{
  uint64_t v0 = type metadata accessor for AirDropActor();
  uint64_t v1 = swift_allocObject(v0, 112LL, 15LL);
  uint64_t result = swift_defaultActor_initialize(v1);
  static AirDropActor.shared = v1;
  return result;
}

uint64_t static AirDropActor.shared.getter()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_retain(static AirDropActor.shared);
}

uint64_t AirDropActor.deinit()
{
  return v0;
}

uint64_t AirDropActor.__deallocating_deinit()
{
  return swift_defaultActor_deallocate(v0);
}

unint64_t sub_100205CD8()
{
  unint64_t result = qword_100656410;
  if (!qword_100656410)
  {
    uint64_t v1 = type metadata accessor for AirDropActor();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AirDropActor, v1);
    atomic_store(result, (unint64_t *)&qword_100656410);
  }

  return result;
}

uint64_t type metadata accessor for AirDropActor()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary12AirDropActor);
}

uint64_t sub_100205D3C()
{
  return static GlobalActor.sharedUnownedExecutor.getter(v0);
}

void sub_100205D44(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1;
    sub_10018D848(0, v1, 0);
    uint64_t v4 = sub_10020AF3C(v2);
    uint64_t v5 = 0LL;
    uint64_t v6 = v2 + 64;
    uint64_t v26 = v2 + 80;
    int64_t v27 = v1;
    int v28 = v3;
    uint64_t v29 = v2 + 64;
    while ((v4 & 0x8000000000000000LL) == 0 && v4 < 1LL << *(_BYTE *)(v2 + 32))
    {
      unint64_t v9 = (unint64_t)v4 >> 6;
      if (*(_DWORD *)(v2 + 36) != v3) {
        goto LABEL_24;
      }
      uint64_t v30 = v5;
      uint64_t v10 = *(void **)(*(void *)(v2 + 56) + 8 * v4);
      uint64_t v11 = (const char *)v10[3];
      uint64_t v12 = (const char *)v10[5];
      uint64_t v33 = v10[4];
      uint64_t v34 = v10[2];
      uint64_t v14 = v10[8];
      unint64_t v13 = v10[9];
      uint64_t v15 = (const char *)v10[15];
      uint64_t v32 = v10[14];
      *(void *)&double v16 = swift_bridgeObjectRetain(v11).n128_u64[0];
      int v31 = v12;
      swift_bridgeObjectRetain(v12, v16);
      unint64_t v35 = v13;
      sub_10019BA8C(v14, v13);
      uint64_t v17 = v2;
      unint64_t v18 = _swiftEmptyArrayStorage[2];
      unint64_t v19 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain(v15);
      if (v18 >= v19 >> 1) {
        sub_10018D848(v19 > 1, v18 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v18 + 1;
      uint64_t v20 = &_swiftEmptyArrayStorage[8 * v18];
      v20[4] = v34;
      v20[5] = v11;
      v20[6] = v33;
      v20[7] = v31;
      v20[8] = v14;
      v20[9] = v35;
      v20[10] = v32;
      v20[11] = v15;
      int64_t v7 = 1LL << *(_BYTE *)(v17 + 32);
      if (v4 >= v7) {
        goto LABEL_25;
      }
      uint64_t v6 = v29;
      uint64_t v21 = *(void *)(v29 + 8 * v9);
      if ((v21 & (1LL << v4)) == 0) {
        goto LABEL_26;
      }
      uint64_t v2 = v17;
      int v3 = v28;
      if (*(_DWORD *)(v17 + 36) != v28) {
        goto LABEL_27;
      }
      unint64_t v22 = v21 & (-2LL << (v4 & 0x3F));
      if (v22)
      {
        int64_t v7 = __clz(__rbit64(v22)) | v4 & 0xFFFFFFFFFFFFFFC0LL;
        int64_t v8 = v27;
      }

      else
      {
        unint64_t v23 = v9 + 1;
        unint64_t v24 = (unint64_t)(v7 + 63) >> 6;
        int64_t v8 = v27;
        if (v9 + 1 < v24)
        {
          unint64_t v25 = *(void *)(v29 + 8 * v23);
          if (v25)
          {
LABEL_20:
            int64_t v7 = __clz(__rbit64(v25)) + (v23 << 6);
          }

          else
          {
            while (v24 - 2 != v9)
            {
              unint64_t v25 = *(void *)(v26 + 8 * v9++);
              if (v25)
              {
                unint64_t v23 = v9 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }

      uint64_t v5 = v30 + 1;
      uint64_t v4 = v7;
      if (v30 + 1 == v8) {
        return;
      }
    }

    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }

uint64_t sub_100205FB8()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100647DF0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100647DF0);
  if (qword_100644028 != -1) {
    swift_once(&qword_100644028, sub_10023A59C);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_100206048()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  BOOL v2 = v1 == 2;
  unsigned int v3 = 0x1020100u >> (8 * v1);
  if (*(_BYTE *)(v0 + 33)) {
    return v2;
  }
  else {
    return v3;
  }
}

uint64_t sub_100206074()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  BOOL v2 = v1 == 2;
  unsigned int v3 = 0x1020100u >> (8 * v1);
  if (*(_BYTE *)(v0 + 33)) {
    return v3;
  }
  else {
    return v2;
  }
}

uint64_t sub_1002060A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (*(_BYTE *)(a1 + 120) == 1)
  {
    uint64_t v3 = *(void *)(a1 + 72);
    unint64_t v2 = *(void *)(a1 + 80);
    *a2 = v3;
    a2[1] = v2;
    return sub_10019BA8C(v3, v2);
  }

  else
  {
    unint64_t v5 = sub_100187014();
    uint64_t v6 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v5, 0LL, 0LL);
    *(_DWORD *)uint64_t v7 = 10;
    *(void *)(v7 + 8) = 0xD00000000000001ELL;
    *(void *)(v7 + swift_weakDestroy(v0 + 16) = 0x80000001005057E0LL;
    return swift_willThrow(v6);
  }

uint64_t sub_10020612C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 120);
  return result;
}

void sub_100206138(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v23 = 0LL;
  unint64_t v24 = 0xE000000000000000LL;
  swift_beginAccess(a1 + 104, v22, 0LL, 0LL);
  uint64_t v3 = *(void *)(a1 + 104);
  uint64_t v4 = v3 + 64;
  uint64_t v5 = 1LL << *(_BYTE *)(v3 + 32);
  uint64_t v6 = -1LL;
  if (v5 < 64) {
    uint64_t v6 = ~(-1LL << v5);
  }
  unint64_t v7 = v6 & *(void *)(v3 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain(*(void *)(a1 + 104));
  int64_t v9 = 0LL;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }

    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_25;
    }

    if (v17 >= v8) {
      goto LABEL_23;
    }
    unint64_t v18 = *(void *)(v4 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v18 = *(void *)(v4 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v18 = *(void *)(v4 + 8 * v9);
        if (!v18)
        {
          int64_t v9 = v17 + 3;
          if (v17 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v18 = *(void *)(v4 + 8 * v9);
          if (!v18) {
            break;
          }
        }
      }
    }

uint64_t sub_100206324@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 96);
  unint64_t v2 = *(void *)(a1 + 104);
  *a2 = v3;
  a2[1] = v2;
  return sub_1001A4C04(v3, v2);
}

void sub_100206354(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

uint64_t sub_10020637C(uint64_t a1)
{
  return sub_1002063B4( a1,  (uint64_t (*)(void))&type metadata accessor for PropertyListEncoder,  (uint64_t (*)(void))&PropertyListEncoder.init(),  &qword_100647E08);
}

uint64_t sub_100206398(uint64_t a1)
{
  return sub_1002063B4( a1,  (uint64_t (*)(void))&type metadata accessor for PropertyListDecoder,  (uint64_t (*)(void))&PropertyListDecoder.init(),  &qword_100647E10);
}

uint64_t sub_1002063B4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t v6 = a2(0LL);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  uint64_t result = a3();
  *a4 = result;
  return result;
}

uint64_t sub_1002063FC( uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11)
{
  char v18 = a4 & 1;
  *(void *)(v11 + 104) = &_swiftEmptyDictionarySingleton;
  uint64_t v19 = sub_100183098(&qword_10064EED0);
  uint64_t v20 = swift_allocObject(v19, 20LL, 7LL);
  *(_DWORD *)(v20 + swift_weakDestroy(v0 + 16) = 0;
  *(void *)(v11 + 112) = v20;
  *(_BYTE *)(v11 + 120) = 1;
  *(void *)(v11 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(_BYTE *)(v11 + 32) = a3;
  *(_BYTE *)(v11 + 33) = v18;
  *(void *)(v11 + 72) = a5;
  *(void *)(v11 + 80) = a6;
  *(void *)(v11 + 88) = a7;
  *(void *)(v11 + 96) = a8;
  *(_OWORD *)(v11 + 40) = a9;
  *(void *)(v11 + 56) = a10;
  *(void *)(v11 + 64) = a11;
  return v11;
}

void sub_1002064C4()
{
}

void sub_1002064EC(uint64_t a1)
{
  if (qword_100643F30 != -1) {
    swift_once(&qword_100643F30, sub_100205FB8);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_100647DF0);
  uint64_t v3 = swift_retain_n(a1, 2LL);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v7 = swift_slowAlloc(32LL, -1LL);
    uint64_t v18 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_retain(a1);
    sub_100342428();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    swift_release(a1);
    uint64_t v16 = sub_10018CDB4(v9, (unint64_t)v11, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v6 + 4, v6 + 12);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Storing %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1LL, -1LL);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  else
  {

    uint64_t v12 = swift_release_n(a1, 2LL);
  }

  __chkstk_darwin(v12);
  uint64_t v14 = v13 + 4;
  os_unfair_lock_lock(v13 + 4);
  sub_1002737FC(v15, sub_10020B768);
  os_unfair_lock_unlock(v14);
}

uint64_t sub_100206718(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 120) == 1)
  {
    uint64_t v4 = *(void *)(a2 + 32);
    os_log_type_t v5 = *(const char **)(a2 + 40);
    *(void *)&double v6 = swift_beginAccess(a1 + 104, v15, 33LL, 0LL).n128_u64[0];
    swift_bridgeObjectRetain(v5, v6);
    swift_retain(a2);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(a1 + 104));
    uint64_t v14 = *(void *)(a1 + 104);
    *(void *)(a1 + 104) = 0x8000000000000000LL;
    sub_1003B3630(a2, v4, (uint64_t)v5, isUniquelyReferenced_nonNull_native);
    uint64_t v8 = *(const char **)(a1 + 104);
    *(void *)(a1 + 104) = v14;
    *(void *)&double v9 = swift_bridgeObjectRelease(v5).n128_u64[0];
    swift_bridgeObjectRelease(v8, v9);
    swift_endAccess(v15);
    return sub_100208E30();
  }

  else
  {
    unint64_t v11 = sub_100187014();
    uint64_t v12 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v11, 0LL, 0LL);
    *(_DWORD *)uint64_t v13 = 10;
    *(void *)(v13 + 8) = 0xD00000000000001ELL;
    *(void *)(v13 + swift_weakDestroy(v0 + 16) = 0x80000001005057E0LL;
    return swift_willThrow(v12);
  }

uint64_t sub_100206840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
  swift_beginAccess(a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID, v5, 0LL, 0LL);
  return sub_1001915A4(v3, a2, &qword_10064DA60);
}

void sub_1002068AC()
{
  int v1 = (os_unfair_lock_s *)(*(void *)(v0 + 112) + 16LL);
  os_unfair_lock_lock(v1);
  sub_10020B730(&v2);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_100206938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v86 = a3;
  uint64_t v87 = a4;
  uint64_t v6 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v6);
  uint64_t v91 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_10064DA60);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v92 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v90 = (char *)&v84 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v84 - v13;
  uint64_t v15 = type metadata accessor for UUID(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v89 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v84 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  unint64_t v24 = (char *)&v84 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  int64_t v27 = (char *)&v84 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v84 - v28;
  uint64_t v95 = a1;
  uint64_t v30 = a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
  swift_beginAccess(v30, v99, 0LL, 0LL);
  sub_1001915A4(v30, (uint64_t)v14, &qword_10064DA60);
  uint64_t v93 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v31 = v93(v14, 1LL, v15);
  uint64_t v94 = a2;
  if (v31 == 1)
  {
    sub_100187100((uint64_t)v14, &qword_10064DA60);
LABEL_14:
    uint64_t v35 = v95;
    goto LABEL_15;
  }

  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v29, v14, v15);
  uint64_t v88 = v29;
  if ((static UUID.== infix(_:_:)(v29, a2) & 1) == 0)
  {
    if (qword_100643F30 != -1) {
      swift_once(&qword_100643F30, sub_100205FB8);
    }
    uint64_t v53 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v53, (uint64_t)qword_100647DF0);
    uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v55 = v88;
    v54(v24, v88, v15);
    uint64_t v56 = ((uint64_t (*)(char *, uint64_t, uint64_t))v54)(v21, v94, v15);
    id v57 = (os_log_s *)Logger.logObject.getter(v56);
    os_log_type_t v58 = static os_log_type_t.default.getter();
    int v59 = v58;
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v60 = swift_slowAlloc(22LL, -1LL);
      uint64_t v87 = swift_slowAlloc(64LL, -1LL);
      v98[0] = v87;
      *(_DWORD *)uint64_t v60 = 136315394;
      uint64_t v61 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      LODWORD(v86) = v59;
      uint64_t v62 = v61;
      uint64_t v63 = dispatch thunk of CustomStringConvertible.description.getter(v15, v61);
      uint64_t v65 = (const char *)v64;
      uint64_t v96 = sub_10018CDB4(v63, v64, v98);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97, v60 + 4, v60 + 12);
      __n128 v66 = swift_bridgeObjectRelease(v65);
      unint64_t v67 = *(void (**)(char *, uint64_t, __n128))(v16 + 8);
      v67(v24, v15, v66);
      *(_WORD *)(v60 + 12) = 2080;
      uint64_t v68 = dispatch thunk of CustomStringConvertible.description.getter(v15, v62);
      uint64_t v70 = (const char *)v69;
      uint64_t v96 = sub_10018CDB4(v68, v69, v98);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97, v60 + 14, v60 + 22);
      __n128 v71 = swift_bridgeObjectRelease(v70);
      v67(v21, v15, v71);
      _os_log_impl( (void *)&_mh_execute_header,  v57,  (os_log_type_t)v86,  "Active sessionID %s in remoteLTK is not cleared as it doesn't match the input: %s",  (uint8_t *)v60,  0x16u);
      uint64_t v72 = v87;
      swift_arrayDestroy(v87, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v72, -1LL, -1LL);
      swift_slowDealloc(v60, -1LL, -1LL);

      ((void (*)(char *, uint64_t))v67)(v88, v15);
    }

    else
    {

      uint64_t v74 = *(void (**)(char *, uint64_t))(v16 + 8);
      v74(v21, v15);
      v74(v24, v15);
      v74(v55, v15);
    }

    goto LABEL_14;
  }

  uint64_t v32 = (uint64_t)v90;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v90, 1LL, 1LL, v15);
  swift_beginAccess(v30, v98, 33LL, 0LL);
  sub_1001C9860(v32, v30, &qword_10064DA60);
  swift_endAccess(v98);
  uint64_t v33 = type metadata accessor for Date(0LL);
  uint64_t v34 = (uint64_t)v91;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56LL))(v91, 1LL, 1LL, v33);
  uint64_t v35 = v95;
  uint64_t v36 = v95 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionStartDate;
  swift_beginAccess( v95 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionStartDate,  v98,  33LL,  0LL);
  sub_1001C9860(v34, v36, &qword_1006457E8);
  swift_endAccess(v98);
  if (qword_100643F30 != -1) {
    swift_once(&qword_100643F30, sub_100205FB8);
  }
  uint64_t v37 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v37, (uint64_t)qword_100647DF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v27, v94, v15);
  uint64_t v38 = (const char *)v87;
  uint64_t v39 = swift_bridgeObjectRetain_n(v87, 2LL);
  uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
  os_log_type_t v41 = static os_log_type_t.default.getter();
  BOOL v42 = os_log_type_enabled(v40, v41);
  uint64_t v43 = v88;
  if (v42)
  {
    uint64_t v44 = swift_slowAlloc(22LL, -1LL);
    uint64_t v45 = swift_slowAlloc(64LL, -1LL);
    v98[0] = v45;
    *(_DWORD *)uint64_t v44 = 136315394;
    uint64_t v85 = v44 + 4;
    uint64_t v46 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter(v15, v46);
    uint64_t v49 = (const char *)v48;
    uint64_t v96 = sub_10018CDB4(v47, v48, v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97, v85, v44 + 12);
    __n128 v50 = swift_bridgeObjectRelease(v49);
    uint64_t v51 = *(void (**)(char *, uint64_t, __n128))(v16 + 8);
    v51(v27, v15, v50);
    *(_WORD *)(v44 + 12) = 2080;
    swift_bridgeObjectRetain(v38);
    uint64_t v96 = sub_10018CDB4(v86, (unint64_t)v38, v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97, v44 + 14, v44 + 22);
    swift_bridgeObjectRelease_n(v38, 3LL);
    _os_log_impl( (void *)&_mh_execute_header,  v40,  v41,  "Cleared active sessionID %s with remoteDevice %s",  (uint8_t *)v44,  0x16u);
    swift_arrayDestroy(v45, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1LL, -1LL);
    uint64_t v52 = v44;
    uint64_t v35 = v95;
    swift_slowDealloc(v52, -1LL, -1LL);

    ((void (*)(char *, uint64_t))v51)(v88, v15);
  }

  else
  {
    swift_bridgeObjectRelease_n(v38, 2LL);

    uint64_t v73 = *(void (**)(char *, uint64_t))(v16 + 8);
    v73(v27, v15);
    v73(v43, v15);
  }

uint64_t sub_1002071E0(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4)
{
  uint64_t v99 = a4;
  uint64_t v7 = sub_100183098(&qword_1006457E8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v95 = (uint64_t)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v94 = (char *)&v86 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v86 - v12;
  uint64_t v14 = type metadata accessor for Date(0LL);
  uint64_t v96 = *(void *)(v14 - 8);
  uint64_t v97 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v92 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v98 = (char *)&v86 - v17;
  uint64_t v18 = sub_100183098(&qword_10064DA60);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v93 = (uint64_t)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v86 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v86 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v86 - v27;
  uint64_t v29 = type metadata accessor for UUID(0LL);
  uint64_t v30 = __chkstk_darwin(v29);
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v86 - v33;
  if (*(_BYTE *)(a1 + 120) != 1)
  {
    unint64_t v49 = sub_100187014();
    uint64_t v50 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v49, 0LL, 0LL);
    *(_DWORD *)uint64_t v51 = 10;
    unint64_t v52 = 0xD00000000000001ELL;
    unint64_t v53 = 0x80000001005057E0LL;
LABEL_9:
    *(void *)(v51 + 8) = v52;
    *(void *)(v51 + swift_weakDestroy(v0 + 16) = v53;
    return swift_willThrow(v50);
  }

  uint64_t v90 = v32;
  uint64_t v91 = v31;
  *(void *)&double v35 = swift_beginAccess(a1 + 104, v104, 0LL, 0LL).n128_u64[0];
  uint64_t v36 = *(void *)(a1 + 104);
  if (!*(void *)(v36 + 16))
  {
LABEL_8:
    unint64_t v55 = sub_100187014();
    uint64_t v50 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v55, 0LL, 0LL);
    *(_DWORD *)uint64_t v51 = 33;
    unint64_t v52 = 0x746F6D6572206F4ELL;
    unint64_t v53 = 0xED00004B544C2065LL;
    goto LABEL_9;
  }

  *(void *)&double v37 = swift_bridgeObjectRetain(a3, v35).n128_u64[0];
  swift_bridgeObjectRetain((const char *)v36, v37);
  uint64_t v38 = sub_1003AD53C(a2, (uint64_t)a3);
  if ((v39 & 1) == 0)
  {
    *(void *)&double v54 = swift_bridgeObjectRelease(a3).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v36, v54);
    goto LABEL_8;
  }

  uint64_t v40 = *(void *)(*(void *)(v36 + 56) + 8 * v38);
  swift_retain(v40);
  *(void *)&double v41 = swift_bridgeObjectRelease(a3).n128_u64[0];
  BOOL v42 = (const char *)v36;
  uint64_t v43 = v40;
  swift_bridgeObjectRelease(v42, v41);
  uint64_t v44 = v40 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationSessionID;
  swift_beginAccess(v44, v103, 0LL, 0LL);
  uint64_t v89 = v44;
  sub_1001915A4(v44, (uint64_t)v28, &qword_10064DA60);
  uint64_t v45 = v91;
  uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48);
  unsigned int v47 = v46(v28, 1LL, v29);
  uint64_t v86 = v46;
  if (v47 == 1)
  {
    uint64_t v48 = sub_100187100((uint64_t)v28, &qword_10064DA60);
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v34, v28, v29);
    char v57 = static UUID.== infix(_:_:)(v34, v99);
    uint64_t v48 = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v34, v29);
    if ((v57 & 1) != 0) {
      return swift_release(v43);
    }
  }

  os_log_type_t v58 = v98;
  Date.init()(v48);
  uint64_t v88 = v43;
  uint64_t v59 = v43 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationStartDate;
  swift_beginAccess( v43 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationStartDate,  v102,  0LL,  0LL);
  uint64_t v87 = v59;
  sub_1001915A4(v59, (uint64_t)v13, &qword_1006457E8);
  uint64_t v60 = v96;
  uint64_t v61 = v97;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v13, 1LL, v97) == 1)
  {
    sub_100187100((uint64_t)v13, &qword_1006457E8);
    uint64_t v62 = v89;
  }

  else
  {
    uint64_t v63 = v92;
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v92, v13, v61);
    uint64_t v62 = v89;
    sub_1001915A4(v89, (uint64_t)v26, &qword_10064DA60);
    if (v86(v26, 1LL, v29) == 1)
    {
      (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v61);
      sub_100187100((uint64_t)v26, &qword_10064DA60);
    }

    else
    {
      uint64_t v64 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v91 + 32))(v90, v26, v29);
      double v65 = Date.timeIntervalSince1970.getter(v64);
      double v67 = v65 - Date.timeIntervalSince1970.getter(v66);
      uint64_t v68 = v63;
      if (v67 >= 0.0 && v67 < 60.0)
      {
        unint64_t v100 = 0LL;
        uint64_t v101 = (const char *)0xE000000000000000LL;
        _StringGuts.grow(_:)(43LL);
        swift_bridgeObjectRelease(v101);
        unint64_t v100 = 0xD000000000000029LL;
        uint64_t v101 = (const char *)0x8000000100505800LL;
        uint64_t v69 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
        uint64_t v70 = v90;
        v71._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v29, v69);
        object = (const char *)v71._object;
        String.append(_:)(v71);
        swift_bridgeObjectRelease(object);
        unint64_t v73 = v100;
        uint64_t v74 = v101;
        unint64_t v75 = sub_100187014();
        uint64_t v76 = v60;
        uint64_t v77 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v75, 0LL, 0LL);
        *(_DWORD *)uint64_t v78 = 38;
        *(void *)(v78 + 8) = v73;
        *(void *)(v78 + swift_weakDestroy(v0 + 16) = v74;
        swift_willThrow(v77);
        swift_release(v88);
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v70, v29);
        char v79 = *(void (**)(char *, uint64_t))(v76 + 8);
        v79(v68, v61);
        return ((uint64_t (*)(char *, uint64_t))v79)(v98, v61);
      }

      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v90, v29);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v61);
      os_log_type_t v58 = v98;
    }
  }

  uint64_t v80 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v23, v99, v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v23, 0LL, 1LL, v29);
  uint64_t v81 = (uint64_t)v23;
  uint64_t v82 = v93;
  sub_1001870BC(v81, v93, &qword_10064DA60);
  swift_beginAccess(v62, &v100, 33LL, 0LL);
  sub_1001C9860(v82, v62, &qword_10064DA60);
  swift_endAccess(&v100);
  uint64_t v83 = (uint64_t)v94;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v94, v58, v61);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v83, 0LL, 1LL, v61);
  uint64_t v84 = v95;
  sub_1001870BC(v83, v95, &qword_1006457E8);
  uint64_t v85 = v87;
  swift_beginAccess(v87, &v100, 33LL, 0LL);
  sub_1001C9860(v84, v85, &qword_1006457E8);
  swift_endAccess(&v100);
  uint64_t v43 = v88;
  return swift_release(v43);
}

void sub_10020797C(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = swift_bridgeObjectRetain(*(void *)(a1 + 104));
  sub_100189D18(v4);
  *a2 = v5;
}

void sub_1002079D8(uint64_t a1@<X0>, void *a2@<X8>)
{
  double v35 = a2;
  uint64_t v3 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&double v6 = swift_beginAccess(a1 + 104, v37, 0LL, 0LL).n128_u64[0];
  uint64_t v7 = *(void *)(a1 + 104);
  uint64_t v8 = v7 + 64;
  uint64_t v9 = 1LL << *(_BYTE *)(v7 + 32);
  uint64_t v10 = -1LL;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  unint64_t v11 = v10 & *(void *)(v7 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain((const char *)v7, v6);
  int64_t v13 = 0LL;
  uint64_t v38 = (char *)_swiftEmptyArrayStorage;
  while (v11)
  {
    unint64_t v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v15 = v14 | (v13 << 6);
LABEL_22:
    uint64_t v19 = *(void **)(*(void *)(v7 + 56) + 8 * v15);
    if (!v19[17])
    {
      uint64_t v20 = (uint64_t)v19 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
      swift_beginAccess( (char *)v19 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID,  v36,  0LL,  0LL);
      sub_1001915A4(v20, (uint64_t)v5, &qword_10064DA60);
      uint64_t v21 = type metadata accessor for UUID(0LL);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48LL))(v5, 1LL, v21) == 1)
      {
        swift_retain(v19);
        sub_100187100((uint64_t)v5, &qword_10064DA60);
        uint64_t v22 = (const char *)v19[5];
        uint64_t v33 = v19[4];
        swift_bridgeObjectRetain(v22);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v38);
        uint64_t v34 = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v38 = sub_10018BC54(0LL, *((void *)v38 + 2) + 1LL, 1, v38);
        }
        unint64_t v25 = *((void *)v38 + 2);
        unint64_t v24 = *((void *)v38 + 3);
        unint64_t v26 = v25 + 1;
        if (v25 >= v24 >> 1)
        {
          unint64_t v32 = v25 + 1;
          uint64_t v30 = sub_10018BC54((char *)(v24 > 1), v25 + 1, 1, v38);
          unint64_t v26 = v32;
          uint64_t v38 = v30;
        }

        uint64_t v27 = v38;
        *((void *)v38 + 2) = v26;
        uint64_t v28 = &v27[16 * v25];
        uint64_t v29 = v34;
        *((void *)v28 + 4) = v33;
        *((void *)v28 + 5) = v29;
        swift_release(v19);
      }

      else
      {
        sub_100187100((uint64_t)v5, &qword_10064DA60);
      }
    }
  }

  int64_t v16 = v13 + 1;
  if (__OFADD__(v13, 1LL))
  {
    __break(1u);
    goto LABEL_32;
  }

  if (v16 >= v12) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v16);
  ++v13;
  if (v17) {
    goto LABEL_21;
  }
  int64_t v13 = v16 + 1;
  if (v16 + 1 >= v12) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v13);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v13 = v16 + 2;
  if (v16 + 2 >= v12) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v13);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v13 = v16 + 3;
  if (v16 + 3 >= v12) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v13);
  if (v17)
  {
LABEL_21:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_22;
  }

  int64_t v18 = v16 + 4;
  if (v18 >= v12)
  {
LABEL_30:
    swift_release(v7);
    *double v35 = v38;
    return;
  }

  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    int64_t v13 = v18;
    goto LABEL_21;
  }

  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v13 >= v12) {
      goto LABEL_30;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_21;
    }
  }

void sub_100207CC8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if (qword_100643F30 != -1) {
    swift_once(&qword_100643F30, sub_100205FB8);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v6, (uint64_t)qword_100647DF0);
  uint64_t v7 = swift_bridgeObjectRetain_n(a4, 2LL);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v11 = swift_slowAlloc(32LL, -1LL);
    uint64_t v19 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_bridgeObjectRetain(a4);
    uint64_t v17 = sub_10018CDB4(a3, (unint64_t)a4, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease_n(a4, 3LL);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Store rangingKey for %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  else
  {

    uint64_t v12 = swift_bridgeObjectRelease_n(a4, 2LL);
  }

  uint64_t v13 = __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  unint64_t v15 = v14 + 4;
  os_unfair_lock_lock(v14 + 4);
  sub_1002737FC(v16, sub_10020B660);
  os_unfair_lock_unlock(v15);
}

void sub_100207F20(uint64_t a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, void *a4@<X8>)
{
  *(void *)&double v8 = swift_beginAccess(a1 + 104, v19, 0LL, 0LL).n128_u64[0];
  uint64_t v9 = *(void *)(a1 + 104);
  if (*(void *)(v9 + 16))
  {
    *(void *)&double v10 = swift_bridgeObjectRetain(a3, v8).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v9, v10);
    uint64_t v11 = sub_1003AD53C(a2, (uint64_t)a3);
    if ((v12 & 1) != 0)
    {
      uint64_t v13 = *(void *)(*(void *)(v9 + 56) + 8 * v11);
      swift_retain(v13);
      *(void *)&double v14 = swift_bridgeObjectRelease(a3).n128_u64[0];
      *(void *)&double v15 = swift_bridgeObjectRelease((const char *)v9, v14).n128_u64[0];
      uint64_t v17 = *(void *)(v13 + 112);
      uint64_t v16 = *(const char **)(v13 + 120);
      swift_bridgeObjectRetain(v16, v15);
      swift_release(v13);
      *a4 = v17;
      a4[1] = v16;
      return;
    }

    *(void *)&double v18 = swift_bridgeObjectRelease(a3).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v9, v18);
  }

  *a4 = 0LL;
  a4[1] = 0LL;
}

void sub_100207FF8(uint64_t a1, uint64_t a2, const char *a3)
{
  *(void *)&double v6 = swift_beginAccess(a1 + 104, v14, 0LL, 0LL).n128_u64[0];
  uint64_t v7 = *(void *)(a1 + 104);
  if (*(void *)(v7 + 16))
  {
    *(void *)&double v8 = swift_bridgeObjectRetain(a3, v6).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v7, v8);
    uint64_t v9 = sub_1003AD53C(a2, (uint64_t)a3);
    if ((v10 & 1) != 0)
    {
      uint64_t v11 = *(void **)(*(void *)(v7 + 56) + 8 * v9);
      swift_retain(v11);
      *(void *)&double v12 = swift_bridgeObjectRelease(a3).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v7, v12);
      sub_100209734(v11);
      swift_release(v11);
    }

    else
    {
      *(void *)&double v13 = swift_bridgeObjectRelease(a3).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v7, v13);
    }
  }

void sub_1002080CC(void *a1, uint64_t a2, const char *a3, uint64_t a4, const char *a5)
{
  double v6 = (const char *)a1[15];
  if (!v6)
  {
    unint64_t v18 = sub_100187014();
    uint64_t v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v18, 0LL, 0LL);
    *(_DWORD *)uint64_t v20 = 10;
    unint64_t v21 = 0xD00000000000001DLL;
    uint64_t v22 = "No pairingID for remoteDevice";
LABEL_15:
    *(void *)(v20 + 8) = v21;
    *(void *)(v20 + swift_weakDestroy(v0 + 16) = (unint64_t)(v22 - 32) | 0x8000000000000000LL;
    swift_willThrow(v19);
    return;
  }

  uint64_t v11 = a1[14];
  BOOL v12 = v11 == a2 && v6 == a3;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(v11, v6, a2, a3, 0LL) & 1) == 0)
  {
    unint64_t v21 = 0xD000000000000012LL;
    unint64_t v23 = sub_100187014();
    uint64_t v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v23, 0LL, 0LL);
    *(_DWORD *)uint64_t v20 = 1;
    uint64_t v22 = "pairingID mismatch";
    goto LABEL_15;
  }

  if (qword_100643F30 != -1) {
    swift_once(&qword_100643F30, sub_100205FB8);
  }
  uint64_t v13 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v13, (uint64_t)qword_100647DF0);
  swift_bridgeObjectRetain_n(a5, 2LL);
  uint64_t v14 = swift_bridgeObjectRetain_n(a3, 2LL);
  double v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc(22LL, -1LL);
    uint64_t v24 = swift_slowAlloc(64LL, -1LL);
    uint64_t v27 = v24;
    *(_DWORD *)uint64_t v17 = 136315394;
    swift_bridgeObjectRetain(a5);
    uint64_t v25 = sub_10018CDB4(a4, (unint64_t)a5, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v17 + 4, v17 + 12);
    swift_bridgeObjectRelease_n(a5, 3LL);
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain(a3);
    uint64_t v25 = sub_10018CDB4(a2, (unint64_t)a3, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v17 + 14, v17 + 22);
    swift_bridgeObjectRelease_n(a3, 3LL);
    _os_log_impl( (void *)&_mh_execute_header,  v15,  v16,  "Removing remoteLTK for %s, pairingID=%s",  (uint8_t *)v17,  0x16u);
    swift_arrayDestroy(v24, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1LL, -1LL);
    swift_slowDealloc(v17, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a3, 2LL);
    swift_bridgeObjectRelease_n(a5, 2LL);
  }

  sub_100209734(a1);
}

uint64_t sub_1002083C8(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v6 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v6);
  double v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = sub_100183098(&qword_1006457E8);
  uint64_t v10 = __chkstk_darwin(v9);
  BOOL v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v10);
  uint64_t v14 = &v24[-v13 - 8];
  double v15 = *(const char **)(a1 + 136);
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = a3;
  *(void *)&double v16 = swift_bridgeObjectRetain(a3).n128_u64[0];
  swift_bridgeObjectRelease(v15, v16);
  Date.init()(v17);
  uint64_t v18 = type metadata accessor for Date(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56LL))(v14, 0LL, 1LL, v18);
  sub_1001870BC((uint64_t)v14, (uint64_t)v12, &qword_1006457E8);
  uint64_t v19 = a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate,  v24,  33LL,  0LL);
  sub_1001C9860((uint64_t)v12, v19, &qword_1006457E8);
  swift_endAccess(v24);
  *(_BYTE *)(a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDateAsUnlocksub_1001C1100( 319LL,  (unint64_t *)&qword_10064CB50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date) = 0;
  uint64_t v20 = type metadata accessor for UUID(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56LL))(v8, 1LL, 1LL, v20);
  uint64_t v21 = a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
  swift_beginAccess(v21, v24, 33LL, 0LL);
  sub_1001C9860((uint64_t)v8, v21, &qword_10064DA60);
  return swift_endAccess(v24);
}

uint64_t sub_1002085B0(uint64_t *a1, char a2, uint64_t a3, const char *a4, uint64_t a5)
{
  uint64_t v31 = a5;
  uint64_t v10 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v10);
  BOOL v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = sub_100183098(&qword_1006457E8);
  uint64_t v14 = __chkstk_darwin(v13);
  double v16 = &v30[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v14);
  uint64_t v18 = &v30[-v17 - 8];
  if ((a2 & 1) == 0)
  {
    sub_100201338(a1[8], a1[9]);
    if (v5) {
      swift_errorRelease(v5);
    }
  }

  uint64_t v19 = (const char *)a1[17];
  a1[16] = a3;
  a1[17] = (uint64_t)a4;
  *(void *)&double v20 = swift_bridgeObjectRetain(a4).n128_u64[0];
  swift_bridgeObjectRelease(v19, v20);
  Date.init()(v21);
  uint64_t v22 = type metadata accessor for Date(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56LL))(v18, 0LL, 1LL, v22);
  sub_1001870BC((uint64_t)v18, (uint64_t)v16, &qword_1006457E8);
  uint64_t v23 = (uint64_t)a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate;
  swift_beginAccess( (char *)a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate,  v30,  33LL,  0LL);
  sub_1001C9860((uint64_t)v16, v23, &qword_1006457E8);
  swift_endAccess(v30);
  *((_BYTE *)a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDateAsUnlocksub_1001C1100( 319LL,  (unint64_t *)&qword_10064CB50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date) = 1;
  uint64_t v24 = type metadata accessor for UUID(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56LL))(v12, 1LL, 1LL, v24);
  uint64_t v25 = (uint64_t)a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
  swift_beginAccess( (char *)a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID,  v30,  33LL,  0LL);
  sub_1001C9860((uint64_t)v12, v25, &qword_10064DA60);
  swift_endAccess(v30);
  uint64_t v26 = (const char *)a1[15];
  a1[14] = a3;
  a1[15] = (uint64_t)a4;
  *(void *)&double v27 = swift_bridgeObjectRetain(a4).n128_u64[0];
  swift_bridgeObjectRelease(v26, v27);
  return sub_100208E30();
}

void sub_1002087EC(uint64_t a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, void *a4@<X8>)
{
  *(void *)&double v8 = swift_beginAccess(a1 + 104, v19, 0LL, 0LL).n128_u64[0];
  uint64_t v9 = *(void *)(a1 + 104);
  if (*(void *)(v9 + 16))
  {
    *(void *)&double v10 = swift_bridgeObjectRetain(a3, v8).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v9, v10);
    uint64_t v11 = sub_1003AD53C(a2, (uint64_t)a3);
    if ((v12 & 1) != 0)
    {
      uint64_t v13 = *(void *)(*(void *)(v9 + 56) + 8 * v11);
      swift_retain(v13);
      *(void *)&double v14 = swift_bridgeObjectRelease(a3).n128_u64[0];
      *(void *)&double v15 = swift_bridgeObjectRelease((const char *)v9, v14).n128_u64[0];
      uint64_t v17 = *(void *)(v13 + 128);
      double v16 = *(const char **)(v13 + 136);
      swift_bridgeObjectRetain(v16, v15);
      swift_release(v13);
      *a4 = v17;
      a4[1] = v16;
      return;
    }

    *(void *)&double v18 = swift_bridgeObjectRelease(a3).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v9, v18);
  }

  *a4 = 0LL;
  a4[1] = 0LL;
}

uint64_t sub_1002088C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)&double v8 = swift_beginAccess(a1 + 104, v20, 0LL, 0LL).n128_u64[0];
  uint64_t v9 = *(void *)(a1 + 104);
  if (*(void *)(v9 + 16))
  {
    *(void *)&double v10 = swift_bridgeObjectRetain(a3, v8).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v9, v10);
    uint64_t v11 = sub_1003AD53C(a2, (uint64_t)a3);
    if ((v12 & 1) != 0)
    {
      uint64_t v13 = *(void *)(*(void *)(v9 + 56) + 8 * v11);
      swift_retain(v13);
      *(void *)&double v14 = swift_bridgeObjectRelease(a3).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v9, v14);
      uint64_t v15 = v13 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate;
      swift_beginAccess( v13 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate,  &v19,  0LL,  0LL);
      sub_1001915A4(v15, a4, &qword_1006457E8);
      return swift_release(v13);
    }

    *(void *)&double v17 = swift_bridgeObjectRelease(a3).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v9, v17);
  }

  uint64_t v18 = type metadata accessor for Date(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56LL))( a4,  1LL,  1LL,  v18);
}

void sub_1002089E4(uint64_t a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, _BYTE *a4@<X8>)
{
  *(void *)&double v8 = swift_beginAccess(a1 + 104, v17, 0LL, 0LL).n128_u64[0];
  uint64_t v9 = *(void *)(a1 + 104);
  if (!*(void *)(v9 + 16)) {
    goto LABEL_5;
  }
  *(void *)&double v10 = swift_bridgeObjectRetain(a3, v8).n128_u64[0];
  swift_bridgeObjectRetain((const char *)v9, v10);
  uint64_t v11 = sub_1003AD53C(a2, (uint64_t)a3);
  if ((v12 & 1) == 0)
  {
    *(void *)&double v16 = swift_bridgeObjectRelease(a3).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v9, v16);
LABEL_5:
    char v15 = 0;
    goto LABEL_6;
  }

  uint64_t v13 = *(void *)(*(void *)(v9 + 56) + 8 * v11);
  swift_retain(v13);
  *(void *)&double v14 = swift_bridgeObjectRelease(a3).n128_u64[0];
  swift_bridgeObjectRelease((const char *)v9, v14);
  char v15 = *(_BYTE *)(v13 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDateAsUnlockDate);
  swift_release(v13);
LABEL_6:
  *a4 = v15;
}

void sub_100208AC0(uint64_t a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, _BYTE *a4@<X8>)
{
  *(void *)&double v8 = swift_beginAccess(a1 + 104, v14, 0LL, 0LL).n128_u64[0];
  uint64_t v9 = *(void *)(a1 + 104);
  if (*(void *)(v9 + 16))
  {
    *(void *)&double v10 = swift_bridgeObjectRetain(a3, v8).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v9, v10);
    sub_1003AD53C(a2, (uint64_t)a3);
    char v12 = v11;
    *(void *)&double v13 = swift_bridgeObjectRelease(a3).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v9, v13);
  }

  else
  {
    char v12 = 0;
  }

  *a4 = v12 & 1;
}

void sub_100208B6C()
{
  uint64_t v1 = *(char *)(v0 + 32);
  if (*(_BYTE *)(v0 + 33) == 1)
  {
    if ((_DWORD)v1 == 2) {
      char v2 = &kSecAttrAccessibleAfterFirstUnlock;
    }
    else {
      char v2 = &kSecAttrAccessibleWhenUnlocked;
    }
  }

  else
  {
    char v2 = (const CFStringRef *)*(&off_1005D4E80 + v1);
  }

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v2);
  uint64_t v5 = v4;
  id v6 = [objc_allocWithZone((Class)SDAutoUnlockLTKInfo) init];
  if (v6)
  {
    uint64_t v7 = v6;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v7 setLtk:isa];

    Class v9 = Data._bridgeToObjectiveC()().super.isa;
    [v7 setLtkID:v9];

    [v7 setVersion:2];
    uint64_t v10 = sub_100183098(&qword_100648080);
    uint64_t inited = swift_initStackObject(v10, v33);
    *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_1004CD550;
    *(void *)(inited + 32) = kSecValueData;
    char v12 = (id)kSecValueData;
    id v13 = [v7 data];
    if (v13)
    {
      double v14 = v13;
      uint64_t v15 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v13);
      unint64_t v17 = v16;
    }

    else
    {
      uint64_t v15 = 0LL;
      unint64_t v17 = 0xF000000000000000LL;
    }

    uint64_t v21 = sub_100183098(&qword_100645150);
    *(void *)(inited + 40) = v15;
    *(void *)(inited + 48) = v17;
    *(void *)(inited + 64) = v21;
    *(void *)(inited + 72) = kSecAttrAccessible;
    *(void *)(inited + 80) = v3;
    *(void *)(inited + 88) = v5;
    *(void *)(inited + 104) = &type metadata for String;
    *(void *)(inited + 112) = kSecAttrLabel;
    strcpy((char *)v32, "Auto Unlock: ");
    HIWORD(v32[1]) = -4864;
    uint64_t v22 = *(const __CFString **)(v0 + 16);
    uint64_t v23 = *(void **)(v0 + 24);
    uint64_t v24 = (id)kSecAttrAccessible;
    uint64_t v25 = (id)kSecAttrLabel;
    swift_bridgeObjectRetain(v23);
    v26._countAndFlagsBits = (uint64_t)v22;
    v26._object = v23;
    String.append(_:)(v26);
    swift_bridgeObjectRelease(v23);
    uint64_t v27 = v32[0];
    uint64_t v28 = v32[1];
    *(void *)(inited + 144) = &type metadata for String;
    *(void *)(inited + 120) = v27;
    *(void *)(inited + 128) = v28;
    unint64_t v29 = sub_100391DD8(inited);
    unint64_t v30 = sub_100186E3C(v22, (unint64_t)v23);
    uint64_t v31 = sub_100266DE4(v30);
    swift_bridgeObjectRelease(v30);
    sub_100185BF4(v31, v29);

    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v31);
  }

  else
  {
    swift_bridgeObjectRelease(v5);
    unint64_t v18 = sub_100187014();
    uint64_t v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v18, 0LL, 0LL);
    *(_DWORD *)uint64_t v20 = 10;
    *(void *)(v20 + 8) = 0xD000000000000026LL;
    *(void *)(v20 + swift_weakDestroy(v0 + 16) = 0x8000000100505880LL;
    swift_willThrow(v19);
  }

uint64_t sub_100208E30()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v3);
  uint64_t v68 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for URL(0LL);
  uint64_t v69 = *(void *)(v5 - 8);
  uint64_t v70 = v5;
  __chkstk_darwin(v5);
  double v67 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *(const char **)(v0 + 24);
  uint64_t v73 = *(void *)(v0 + 16);
  LODWORD(v72) = *(unsigned __int8 *)(v0 + 33);
  LODWORD(v71) = *(unsigned __int8 *)(v0 + 32);
  uint64_t v9 = *(void *)(v0 + 72);
  unint64_t v8 = *(void *)(v0 + 80);
  uint64_t v11 = *(void *)(v0 + 88);
  unint64_t v10 = *(void *)(v0 + 96);
  swift_beginAccess(v0 + 104, v82, 0LL, 0LL);
  char v12 = *(const char **)(v0 + 104);
  swift_retain(v2);
  swift_bridgeObjectRetain(v7);
  sub_10019BA8C(v9, v8);
  sub_10019BA8C(v11, v10);
  swift_bridgeObjectRetain(v12);
  sub_100205D44(v13);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease(v12);
  swift_release(v2);
  if (qword_100643F38 != -1) {
    swift_once(&qword_100643F38, sub_10020637C);
  }
  v74[0] = v73;
  v74[1] = v7;
  char v75 = v72;
  char v76 = v71;
  uint64_t v77 = v9;
  unint64_t v78 = v8;
  uint64_t v79 = v11;
  unint64_t v80 = v10;
  uint64_t v81 = v15;
  unint64_t v16 = sub_10020B680();
  uint64_t v17 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(v74, &_s8LocalLTKC18FileRepresentationVN, v16);
  if (v1)
  {
    swift_errorRelease(v1);
    swift_bridgeObjectRelease(v7);
    sub_100189B20(v9, v8);
    sub_100189B20(v11, v10);
    swift_bridgeObjectRelease(v15);
    if (qword_100643F30 != -1) {
      swift_once(&qword_100643F30, sub_100205FB8);
    }
    uint64_t v19 = type metadata accessor for Logger(0LL);
    uint64_t v20 = sub_100186DE4(v19, (uint64_t)qword_100647DF0);
    uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.error.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Failed to serialize LocalLTK to plist", v23, 2u);
      swift_slowDealloc(v23, -1LL, -1LL);
    }

    unint64_t v24 = sub_100187014();
    uint64_t v25 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v24, 0LL, 0LL);
    *(_DWORD *)uint64_t v26 = 10;
    *(void *)(v26 + 8) = 0xD00000000000001CLL;
    *(void *)(v26 + swift_weakDestroy(v0 + 16) = 0x8000000100505860LL;
    return swift_willThrow(v25);
  }

  uint64_t v71 = v17;
  unint64_t v72 = v18;
  swift_bridgeObjectRelease(v7);
  sub_100189B20(v9, v8);
  sub_100189B20(v11, v10);
  swift_bridgeObjectRelease(v15);
  uint64_t v28 = *(void (**)(uint64_t, const char *, uint64_t))(v2 + 40);
  uint64_t v29 = *(void *)(v2 + 48);
  int v30 = *(unsigned __int8 *)(v2 + 32);
  BOOL v31 = v30 == 2;
  unsigned int v32 = 0x1020100u >> (8 * v30);
  if (*(_BYTE *)(v2 + 33)) {
    uint64_t v33 = v31;
  }
  else {
    uint64_t v33 = v32;
  }
  swift_retain(*(void *)(v2 + 48));
  uint64_t v34 = (uint64_t)v68;
  v28(v73, v7, v33);
  swift_release(v29);
  uint64_t v36 = v69;
  uint64_t v35 = v70;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v34, 1LL, v70) == 1)
  {
    sub_100187100(v34, (uint64_t *)&unk_100645130);
    if (qword_100643F30 != -1) {
      swift_once(&qword_100643F30, sub_100205FB8);
    }
    uint64_t v37 = type metadata accessor for Logger(0LL);
    uint64_t v38 = sub_100186DE4(v37, (uint64_t)qword_100647DF0);
    char v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v40 = static os_log_type_t.error.getter(v39);
    if (os_log_type_enabled(v39, v40))
    {
      double v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)double v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Failed to get cache directory", v41, 2u);
      swift_slowDealloc(v41, -1LL, -1LL);
    }

    unint64_t v42 = sub_100187014();
    uint64_t v43 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v42, 0LL, 0LL);
    *(_DWORD *)uint64_t v44 = 10;
    *(void *)(v44 + 8) = 0xD00000000000001CLL;
    *(void *)(v44 + swift_weakDestroy(v0 + 16) = 0x8000000100505860LL;
    swift_willThrow(v43);
    uint64_t v45 = v71;
    unint64_t v46 = v72;
    return sub_100189B20(v45, v46);
  }

  unsigned int v47 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v67, v34, v35);
  uint64_t v48 = *(uint64_t (**)(uint64_t))(v2 + 56);
  uint64_t v49 = *(void *)(v2 + 64);
  int v50 = *(unsigned __int8 *)(v2 + 32);
  BOOL v51 = v50 == 2;
  unsigned int v52 = 0x1020100u >> (8 * v50);
  if (*(_BYTE *)(v2 + 33)) {
    uint64_t v53 = v51;
  }
  else {
    uint64_t v53 = v52;
  }
  swift_retain(*(void *)(v2 + 64));
  uint64_t v54 = v48(v53);
  char v56 = v55;
  swift_release(v49);
  if ((v56 & 1) == 0)
  {
    uint64_t v58 = v71;
    unint64_t v57 = v72;
    Data.write(to:options:)(v47, v54 | 1, v71, v72);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v47, v35);
    uint64_t v45 = v58;
    unint64_t v46 = v57;
    return sub_100189B20(v45, v46);
  }

  if (qword_100643F30 != -1) {
    swift_once(&qword_100643F30, sub_100205FB8);
  }
  uint64_t v59 = type metadata accessor for Logger(0LL);
  uint64_t v60 = sub_100186DE4(v59, (uint64_t)qword_100647DF0);
  uint64_t v61 = (os_log_s *)Logger.logObject.getter(v60);
  os_log_type_t v62 = static os_log_type_t.error.getter(v61);
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v63 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v63 = 0;
    _os_log_impl((void *)&_mh_execute_header, v61, v62, "Failed to get protection class", v63, 2u);
    swift_slowDealloc(v63, -1LL, -1LL);
  }

  unint64_t v64 = sub_100187014();
  uint64_t v65 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v64, 0LL, 0LL);
  *(_DWORD *)uint64_t v66 = 10;
  *(void *)(v66 + 8) = 0xD00000000000001CLL;
  *(void *)(v66 + swift_weakDestroy(v0 + 16) = 0x8000000100505860LL;
  swift_willThrow(v65);
  sub_100189B20(v71, v72);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v47, v35);
}

uint64_t sub_10020948C()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 112) + 16LL);
  os_unfair_lock_lock(v1);
  sub_1002737FC(v2, sub_10020B660);
  os_unfair_lock_unlock(v1);
  return v4;
}

uint64_t sub_10020951C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v5 = sub_100183098(&qword_1006457E8);
  uint64_t v6 = __chkstk_darwin(v5);
  unint64_t v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v6);
  unint64_t v10 = &v28[-v9 - 8];
  uint64_t v11 = sub_100183098(&qword_10064DA60);
  uint64_t v12 = __chkstk_darwin(v11);
  double v14 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v12);
  unint64_t v16 = &v28[-v15 - 8];
  uint64_t v17 = type metadata accessor for UUID(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v18 + 16))(v16, a2, v17);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0LL, 1LL, v17);
  sub_1001870BC((uint64_t)v16, (uint64_t)v14, &qword_10064DA60);
  uint64_t v19 = a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID,  v28,  33LL,  0LL);
  sub_1001C9860((uint64_t)v14, v19, &qword_10064DA60);
  uint64_t v20 = swift_endAccess(v28);
  Date.init()(v20);
  uint64_t v21 = type metadata accessor for Date(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v10, 0LL, 1LL, v21);
  sub_1001870BC((uint64_t)v10, (uint64_t)v8, &qword_1006457E8);
  uint64_t v22 = a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionStartDate;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionStartDate,  v28,  33LL,  0LL);
  sub_1001C9860((uint64_t)v8, v22, &qword_1006457E8);
  swift_endAccess(v28);
  uint64_t v23 = *(void *)(a1 + 64);
  unint64_t v24 = *(void *)(a1 + 72);
  uint64_t v25 = v27;
  *uint64_t v27 = v23;
  v25[1] = v24;
  return sub_10019BA8C(v23, v24);
}

void sub_100209734(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  if (qword_100643F30 != -1) {
    swift_once(&qword_100643F30, sub_100205FB8);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v6, (uint64_t)qword_100647DF0);
  uint64_t v7 = swift_retain_n(a1, 2LL);
  unint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v23 = v1;
    uint64_t v10 = swift_slowAlloc(22LL, -1LL);
    uint64_t v22 = swift_slowAlloc(64LL, -1LL);
    v24[0] = v22;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v11 = a1[4];
    uint64_t v12 = (const char *)a1[5];
    swift_bridgeObjectRetain(v12);
    uint64_t v25 = sub_10018CDB4(v11, (unint64_t)v12, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v10 + 12) = 2080;
    swift_retain(a1);
    sub_100342428();
    uint64_t v14 = v13;
    unint64_t v16 = v15;
    swift_release(a1);
    uint64_t v25 = sub_10018CDB4(v14, (unint64_t)v16, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v10 + 14, v10 + 22);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Removing remoteLTK for %s: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v22, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1LL, -1LL);
    uint64_t v17 = v10;
    uint64_t v4 = v23;
    swift_slowDealloc(v17, -1LL, -1LL);
  }

  else
  {

    swift_release_n(a1, 2LL);
  }

  sub_100200388(a1[8], a1[9]);
  if (v3) {
    swift_errorRelease(v3);
  }
  sub_100341758();
  uint64_t v18 = a1[4];
  uint64_t v19 = (const char *)a1[5];
  *(void *)&double v20 = swift_beginAccess(v4 + 104, v24, 33LL, 0LL).n128_u64[0];
  swift_bridgeObjectRetain(v19, v20);
  uint64_t v21 = sub_1001CA018(v18, (uint64_t)v19);
  swift_endAccess(v24);
  swift_bridgeObjectRelease(v19);
  swift_release(v21);
  if (*(void *)(*(void *)(v4 + 104) + 16LL)) {
    sub_100208E30();
  }
  else {
    sub_1002099EC();
  }
}

void sub_1002099EC()
{
  uint64_t v3 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v107 = type metadata accessor for URL(0LL);
  uint64_t v109 = *(void *)(v107 - 8);
  uint64_t v6 = __chkstk_darwin(v107);
  unint64_t v8 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v108 = (char *)&v107 - v9;
  *(_BYTE *)(v0 + 120) = 0;
  swift_beginAccess(v0 + 104, v135, 0LL, 0LL);
  uint64_t v110 = v0;
  uint64_t v10 = *(void *)(v0 + 104);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v112 = v10 + 64;
  uint64_t v12 = 1LL << *(_BYTE *)(v10 + 32);
  uint64_t v13 = -1LL;
  if (v12 < 64) {
    uint64_t v13 = ~(-1LL << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v113 = (unint64_t)(v12 + 63) >> 6;
  CFStringRef v123 = kSecClass;
  CFStringRef v122 = kSecClassGenericPassword;
  CFStringRef v121 = kSecAttrAccessGroup;
  CFStringRef v120 = kSecAttrAccount;
  CFStringRef v119 = kSecAttrService;
  CFStringRef v118 = kSecUseDataProtectionKeychain;
  uint64_t v126 = v10;
  swift_bridgeObjectRetain(v10);
  uint64_t v15 = 0LL;
  *((void *)&v16 + 1) = 10LL;
  __int128 v117 = xmmword_1004CD1E0;
  unint64_t v116 = 0x8000000100503630LL;
  uint64_t v114 = (char *)&type metadata for Any + 8;
  unint64_t v115 = 0x8000000100505830LL;
  *(void *)&__int128 v16 = 138412546LL;
  __int128 v111 = v16;
  uint64_t v124 = v8;
  uint64_t v125 = v5;
  while (1)
  {
    if (v14)
    {
      uint64_t v129 = (void *)((v14 - 1) & v14);
      uint64_t v130 = v15;
      unint64_t v17 = __clz(__rbit64(v14)) | ((void)v15 << 6);
      goto LABEL_22;
    }

    int64_t v18 = (int64_t)&v15->isa + 1;
    if (__OFADD__(v15, 1LL))
    {
      __break(1u);
      goto LABEL_52;
    }

    if (v18 >= v113) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v112 + 8 * v18);
    int64_t v20 = (int64_t)&v15->isa + 1;
    if (!v19)
    {
      int64_t v20 = (int64_t)&v15->isa + 2;
      unint64_t v19 = *(void *)(v112 + 8 * v20);
      if (!v19)
      {
        int64_t v20 = (int64_t)&v15->isa + 3;
        unint64_t v19 = *(void *)(v112 + 8 * v20);
        if (!v19) {
          break;
        }
      }
    }

void *sub_10020A5DC()
{
  return v0;
}

uint64_t sub_10020A628()
{
  return swift_deallocClassInstance(v0, 121LL, 7LL);
}

uint64_t _s8LocalLTKCMa()
{
  return objc_opt_self(&OBJC_CLASS____TtCV16DaemoniOSLibrary16SDAuthentication8LocalLTK);
}

void sub_10020A668()
{
  uint64_t v1 = *(void *)(v0 + 16);
  OSStatus v2 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain(v2);
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v2);
  v4._countAndFlagsBits = 0x626F6C4279656B20LL;
  v4._object = (void *)0xED00003D657A6953LL;
  String.append(_:)(v4);
  __asm { BR              X13 }

uint64_t sub_10020A730()
{
  v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  _StringGuts.grow(_:)(19LL);
  swift_bridgeObjectRelease(0xE000000000000000LL);
  return ((uint64_t (*)(uint64_t))((char *)&loc_10020A7E8 + dword_10020AB1C[*(unsigned __int8 *)(v0 + 32)]))(0x6E776F6E6B6E75LL);
}

uint64_t sub_10020A7F8()
{
  v2._uint64_t countAndFlagsBits = 0x636F6C6E5563616DLL;
  v2._object = (void *)0xEE00656E6F68506BLL;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(0xEE00656E6F68506BLL);
  v3._uint64_t countAndFlagsBits = 0x3D656C6F7220LL;
  v3._object = (void *)0xE600000000000000LL;
  String.append(_:)(v3);
  if (*(_BYTE *)(v0 + 33)) {
    uint64_t v4 = 7955787LL;
  }
  else {
    uint64_t v4 = 1801678668LL;
  }
  if (*(_BYTE *)(v0 + 33)) {
    unint64_t v5 = 0xE300000000000000LL;
  }
  else {
    unint64_t v5 = 0xE400000000000000LL;
  }
  unint64_t v6 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease(v5);
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v24._object);
  _StringGuts.grow(_:)(35LL);
  swift_bridgeObjectRelease(0xE000000000000000LL);
  v24._uint64_t countAndFlagsBits = 0x654B6C61636F6C20LL;
  v24._object = (void *)0xEF3D7373616C4379LL;
  uint64_t v7 = *(char *)(v0 + 32);
  if (*(_BYTE *)(v0 + 33) == 1)
  {
    if ((_DWORD)v7 == 2) {
      uint64_t v8 = 67LL;
    }
    else {
      uint64_t v8 = 65LL;
    }
  }

  else
  {
    uint64_t v8 = qword_1004CF090[v7];
  }

  unint64_t v9 = 0xE100000000000000LL;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease(0xE100000000000000LL);
  v10._object = (void *)0x80000001005057A0LL;
  v10._uint64_t countAndFlagsBits = 0xD000000000000010LL;
  String.append(_:)(v10);
  uint64_t v11 = *(char *)(v0 + 32);
  if ((*(_BYTE *)(v0 + 33) & 1) != 0)
  {
    uint64_t v12 = qword_1004CF090[v11];
  }

  else if ((_DWORD)v11 == 2)
  {
    uint64_t v12 = 67LL;
  }

  else
  {
    uint64_t v12 = 65LL;
  }

  unint64_t v13 = 0xE100000000000000LL;
  String.append(_:)(*(Swift::String *)&v12);
  swift_bridgeObjectRelease(0xE100000000000000LL);
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v24._object);
  _StringGuts.grow(_:)(44LL);
  swift_bridgeObjectRelease(0xE000000000000000LL);
  v24._uint64_t countAndFlagsBits = v1 + 15;
  v24._object = (void *)0x80000001005057C0LL;
  if (*(_BYTE *)(v0 + 120)) {
    uint64_t v14 = 1702195828LL;
  }
  else {
    uint64_t v14 = 0x65736C6166LL;
  }
  if (*(_BYTE *)(v0 + 120)) {
    unint64_t v15 = 0xE400000000000000LL;
  }
  else {
    unint64_t v15 = 0xE500000000000000LL;
  }
  unint64_t v16 = v15;
  String.append(_:)(*(Swift::String *)&v14);
  swift_bridgeObjectRelease(v15);
  v17._uint64_t countAndFlagsBits = 0x4C65746F6D655220LL;
  v17._object = (void *)0xED00000A3A534B54LL;
  String.append(_:)(v17);
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v24._object);
  int64_t v18 = (os_unfair_lock_s *)(*(void *)(v0 + 112) + 16LL);
  os_unfair_lock_lock(v18);
  sub_10020AF24(&v24);
  uint64_t countAndFlagsBits = v24._countAndFlagsBits;
  object = v24._object;
  os_unfair_lock_unlock(v18);
  v21._uint64_t countAndFlagsBits = countAndFlagsBits;
  v21._object = object;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(object);
  return v23;
}

void sub_10020AB2C()
{
}

uint64_t sub_10020AB4C()
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10020AB80 + 4 * byte_1004CEE70[*v0]))( 0x696669746E656469LL,  0xEA00000000007265LL);
}

uint64_t sub_10020AB80()
{
  return 1701605234LL;
}

uint64_t sub_10020AB90()
{
  return 0x65727574616566LL;
}

uint64_t sub_10020ABA8()
{
  return 0x6174614479656BLL;
}

uint64_t sub_10020ABC0()
{
  return 0x496174614479656BLL;
}

uint64_t sub_10020ABDC()
{
  return 0x544C65746F6D6572LL;
}

uint64_t sub_10020ABF4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_10020BA10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10020AC18()
{
  return 0LL;
}

void sub_10020AC24(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_10020AC30(uint64_t a1)
{
  unint64_t v2 = sub_10020C0CC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10020AC58(uint64_t a1)
{
  unint64_t v2 = sub_10020C0CC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10020AC80(void *a1)
{
  Swift::String v3 = v1;
  uint64_t v5 = sub_100183098(&qword_1006480D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_10020C0CC();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &_s8LocalLTKC18FileRepresentationV10CodingKeysON,  &_s8LocalLTKC18FileRepresentationV10CodingKeysON,  v11,  v9,  v10);
  uint64_t v12 = *v3;
  uint64_t v13 = v3[1];
  LOBYTE(v20) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, &v20, v5);
  if (!v2)
  {
    LOBYTE(v20) = *((_BYTE *)v3 + 16);
    char v21 = 1;
    unint64_t v14 = sub_10020C220();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v20, &v21, v5, &type metadata for SDAuthenticationRole, v14);
    LOBYTE(v20) = *((_BYTE *)v3 + 17);
    char v21 = 2;
    unint64_t v15 = sub_10020C264();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v20, &v21, v5, &_s7FeatureON, v15);
    __int128 v20 = *(_OWORD *)(v3 + 3);
    char v21 = 3;
    unint64_t v16 = sub_10020C2A8();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v20, &v21, v5, &type metadata for Data, v16);
    __int128 v20 = *(_OWORD *)(v3 + 5);
    char v21 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v20, &v21, v5, &type metadata for Data, v16);
    *(void *)&__int128 v20 = v3[7];
    char v21 = 5;
    uint64_t v17 = sub_100183098(&qword_1006480B8);
    uint64_t v18 = sub_10020C2EC( &qword_1006480F0,  (void (*)(void))sub_10020C354,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v20, &v21, v5, v17, v18);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_10020AED0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  if (!v2)
  {
    __int128 v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    __int128 v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }

  return result;
}

uint64_t sub_10020AF10(void *a1)
{
  return sub_10020AC80(a1);
}

void sub_10020AF24(void *a1@<X8>)
{
}

uint64_t sub_10020AF3C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0LL;
    return __clz(__rbit64(v1)) + v2;
  }

  char v5 = *(_BYTE *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1LL << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64LL;
    return __clz(__rbit64(v1)) + v2;
  }

  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2LL;
  }
  unint64_t v8 = v7 - 2;
  __int128 v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64LL;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64LL;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }

  return v3;
}

uint64_t sub_10020AFC4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7 = v6;
  if (qword_100643F40 != -1) {
LABEL_26:
  }
    swift_once(&qword_100643F40, sub_100206398);
  uint64_t v13 = qword_100647E10;
  unint64_t v14 = sub_10020B544();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)( &_s8LocalLTKC18FileRepresentationVN,  a1,  a2,  &_s8LocalLTKC18FileRepresentationVN,  v14);
  if (v7)
  {
    swift_release(a4);
    swift_release(a6);
    sub_100189B20(a1, a2);
    return v13;
  }

  uint64_t v67 = v72[0];
  uint64_t v69 = a5;
  uint64_t v61 = v72[1];
  char v64 = v73;
  char v62 = v74;
  uint64_t v16 = v75;
  unint64_t v15 = v76;
  uint64_t v17 = v77;
  uint64_t v57 = a3;
  unint64_t v59 = v78;
  a3 = v79;
  uint64_t v18 = _s8LocalLTKCMa();
  uint64_t v13 = swift_allocObject(v18, 121LL, 7LL);
  *(void *)(v13 + 104) = &_swiftEmptyDictionarySingleton;
  uint64_t v71 = (void *)(v13 + 104);
  uint64_t v19 = sub_100183098(&qword_10064EED0);
  uint64_t v20 = swift_allocObject(v19, 20LL, 7LL);
  uint64_t v21 = v16;
  *(_DWORD *)(v20 + swift_weakDestroy(v0 + 16) = 0;
  *(void *)(v13 + 112) = v20;
  *(_BYTE *)(v13 + 120) = 1;
  *(void *)(v13 + swift_weakDestroy(v0 + 16) = v67;
  *(void *)(v13 + 24) = v61;
  *(_BYTE *)(v13 + 32) = v62;
  *(_BYTE *)(v13 + 33) = v64;
  *(void *)(v13 + 72) = v16;
  *(void *)(v13 + 80) = v15;
  unint64_t v22 = v15;
  uint64_t v60 = v17;
  *(void *)(v13 + 88) = v17;
  unint64_t v23 = v59;
  *(void *)(v13 + 96) = v59;
  uint64_t v24 = a4;
  *(void *)(v13 + 40) = v57;
  *(void *)(v13 + 48) = a4;
  *(void *)(v13 + 56) = v69;
  *(void *)(v13 + 64) = a6;
  unint64_t v66 = v22;
  if (!*(void *)(a3 + 16))
  {
    swift_bridgeObjectRetain(v61);
    sub_10019BA8C(v21, v22);
    uint64_t v51 = v60;
    sub_10019BA8C(v60, v59);
    swift_retain(a4);
    swift_retain(a6);
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRelease(v61);
    uint64_t v52 = v21;
    unint64_t v53 = v66;
LABEL_22:
    sub_100189B20(v52, v53);
    sub_100189B20(v51, v23);
    swift_release(a6);
    swift_bridgeObjectRelease(a3);
    swift_release(v24);
    sub_100189B20(a1, a2);
    swift_bridgeObjectRelease(a3);
    return v13;
  }

  uint64_t v70 = *(void *)(a3 + 16);
  uint64_t v56 = a1;
  unint64_t v58 = a2;
  swift_bridgeObjectRetain(v61);
  sub_10019BA8C(v21, v22);
  sub_10019BA8C(v60, v59);
  swift_retain(a4);
  uint64_t v55 = a6;
  swift_retain(a6);
  swift_retain(v13);
  swift_bridgeObjectRetain(a3);
  a1 = 32LL;
  uint64_t v65 = v13;
  while (1)
  {
    __int128 v29 = *(_OWORD *)(a3 + a1);
    __int128 v30 = *(_OWORD *)(a3 + a1 + 16);
    __int128 v31 = *(_OWORD *)(a3 + a1 + 48);
    v80[2] = *(_OWORD *)(a3 + a1 + 32);
    v80[3] = v31;
    v80[0] = v29;
    v80[1] = v30;
    if ((*(_BYTE *)(v13 + 33) & 1) != 0 || (CFStringRef v32 = kSecAttrAccessibleAlways, *(_BYTE *)(v13 + 32) != 2)) {
      CFStringRef v32 = kSecAttrAccessibleAfterFirstUnlock;
    }
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    uint64_t v35 = v34;
    uint64_t v36 = _s9RemoteLTKCMa(0LL);
    swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
    sub_10020B588(v80);
    sub_10020B588(v80);
    uint64_t v37 = sub_1003438E0(v80, v33, v35);
    sub_10020B5E8(v80);
    uint64_t v68 = a1;
    a6 = a3;
    a3 = 0LL;
    a5 = *(void *)(v37 + 32);
    a2 = *(void *)(v37 + 40);
    swift_beginAccess(v71, v72, 33LL, 0LL);
    swift_bridgeObjectRetain(a2);
    swift_retain(v37);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v71);
    uint64_t v81 = (void *)*v71;
    char v39 = v81;
    *uint64_t v71 = 0x8000000000000000LL;
    unint64_t v7 = sub_1003AD53C(a5, a2);
    uint64_t v41 = v39[2];
    BOOL v42 = (v40 & 1) == 0;
    uint64_t v43 = v41 + v42;
    if (__OFADD__(v41, v42))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }

    a1 = v40;
    if (v39[3] < v43) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1003AF198();
    }
LABEL_17:
    os_log_type_t v46 = v81;
    a3 = a6;
    if ((a1 & 1) != 0)
    {
      uint64_t v25 = v81[7];
      uint64_t v26 = 8 * v7;
      swift_release(*(void *)(v25 + v26));
      *(void *)(v25 + v26) = v37;
    }

    else
    {
      v81[(v7 >> 6) + 8] |= 1LL << v7;
      uint64_t v47 = (uint64_t *)(v46[6] + 16 * v7);
      *uint64_t v47 = a5;
      v47[1] = a2;
      *(void *)(v46[7] + 8 * v7) = v37;
      uint64_t v48 = v46[2];
      BOOL v49 = __OFADD__(v48, 1LL);
      uint64_t v50 = v48 + 1;
      if (v49) {
        goto LABEL_25;
      }
      v46[2] = v50;
      swift_bridgeObjectRetain(a2);
    }

    uint64_t v27 = *v71;
    *uint64_t v71 = v46;
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(v27);
    swift_endAccess(v72);
    sub_10020B5E8(v80);
    swift_release(v37);
    a1 = v68 + 64;
    BOOL v28 = v70-- == 1;
    uint64_t v13 = v65;
    if (v28)
    {
      swift_bridgeObjectRelease(v61);
      swift_release(v65);
      unint64_t v53 = v66;
      a2 = v58;
      unint64_t v23 = v59;
      a6 = v55;
      a1 = v56;
      uint64_t v24 = a4;
      uint64_t v51 = v60;
      uint64_t v52 = v21;
      goto LABEL_22;
    }
  }

  sub_1003AA2F8(v43, isUniquelyReferenced_nonNull_native);
  uint64_t v44 = sub_1003AD53C(a5, a2);
  if ((a1 & 1) == (v45 & 1))
  {
    unint64_t v7 = v44;
    goto LABEL_17;
  }

  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

unint64_t sub_10020B544()
{
  unint64_t result = qword_100648078;
  if (!qword_100648078)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CEF4C, &_s8LocalLTKC18FileRepresentationVN);
    atomic_store(result, (unint64_t *)&qword_100648078);
  }

  return result;
}

void *sub_10020B588(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  unint64_t v4 = a1[5];
  uint64_t v5 = a1[7];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  sub_10019BA8C(v3, v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

void *sub_10020B5E8(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[4];
  unint64_t v4 = a1[5];
  uint64_t v5 = a1[7];
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(v2);
  sub_100189B20(v3, v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t sub_10020B648@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10020951C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_10020B660()
{
  return sub_100456B88( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(char **)(v0 + 32),  *(void (**)(uint64_t, __n128))(v0 + 40));
}

unint64_t sub_10020B680()
{
  unint64_t result = qword_100648088;
  if (!qword_100648088)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CEF24, &_s8LocalLTKC18FileRepresentationVN);
    atomic_store(result, (unint64_t *)&qword_100648088);
  }

  return result;
}

void sub_10020B6C4()
{
}

uint64_t sub_10020B6EC(uint64_t a1)
{
  return sub_100206938(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10020B6F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = 0;
  return result;
}

uint64_t sub_10020B730@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = sub_100456D4C( *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void **)(v1 + 32),  *(void (**)(uint64_t *__return_ptr, uint64_t, __n128))(v1 + 40));
  if (!v2) {
    *a1 = result & 1;
  }
  return result;
}

uint64_t sub_10020B768()
{
  return sub_100206718(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

double _s8LocalLTKC18FileRepresentationVwxx(void *a1)
{
  *(void *)&double result = swift_bridgeObjectRelease(a1[7]).n128_u64[0];
  return result;
}

uint64_t _s8LocalLTKC18FileRepresentationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  uint64_t v5 = *(void *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain(v4);
  sub_10019BA8C(v5, v6);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  unint64_t v8 = *(void *)(a2 + 48);
  sub_10019BA8C(v7, v8);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRetain(v9);
  return a1;
}

uint64_t _s8LocalLTKC18FileRepresentationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  uint64_t v6 = *(void *)(a2 + 24);
  unint64_t v7 = *(void *)(a2 + 32);
  sub_10019BA8C(v6, v7);
  uint64_t v8 = *(void *)(a1 + 24);
  unint64_t v9 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  sub_100189B20(v8, v9);
  uint64_t v10 = *(void *)(a2 + 40);
  unint64_t v11 = *(void *)(a2 + 48);
  sub_10019BA8C(v10, v11);
  uint64_t v12 = *(void *)(a1 + 40);
  unint64_t v13 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  sub_100189B20(v12, v13);
  uint64_t v14 = *(void *)(a2 + 56);
  uint64_t v15 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  return a1;
}

__n128 _s9RemoteLTKC18FileRepresentationVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v3;
  return result;
}

uint64_t _s8LocalLTKC18FileRepresentationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  uint64_t v6 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_100189B20(v6, v7);
  uint64_t v8 = *(void *)(a1 + 40);
  unint64_t v9 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_100189B20(v8, v9);
  uint64_t v10 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease(v10);
  return a1;
}

uint64_t _s9RemoteLTKC18FileRepresentationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9RemoteLTKC18FileRepresentationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0LL;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 64) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *_s8LocalLTKC18FileRepresentationVMa()
{
  return &_s8LocalLTKC18FileRepresentationVN;
}

uint64_t sub_10020BA10(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x696669746E656469LL && a2 == 0xEA00000000007265LL)
  {
    unint64_t v5 = 0xEA00000000007265LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469LL, 0xEA00000000007265LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 1701605234 && a2 == 0xE400000000000000LL)
  {
    unint64_t v7 = 0xE400000000000000LL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701605234LL, 0xE400000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v7 = a2;
    goto LABEL_14;
  }

  if (a1 == 0x65727574616566LL && a2 == 0xE700000000000000LL)
  {
    unint64_t v8 = 0xE700000000000000LL;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65727574616566LL, 0xE700000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
    goto LABEL_20;
  }

  if (a1 == 0x6174614479656BLL && a2 == 0xE700000000000000LL)
  {
    unint64_t v9 = 0xE700000000000000LL;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6174614479656BLL, 0xE700000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v9 = a2;
    goto LABEL_26;
  }

  if (a1 == 0x496174614479656BLL && a2 == 0xE900000000000044LL)
  {
    unint64_t v10 = 0xE900000000000044LL;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x496174614479656BLL, 0xE900000000000044LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v10 = a2;
    goto LABEL_32;
  }

  if (a1 == 0x544C65746F6D6572LL && a2 == 0xEA0000000000734BLL)
  {
    swift_bridgeObjectRelease(0xEA0000000000734BLL);
    return 5LL;
  }

  else
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)(0x544C65746F6D6572LL, 0xEA0000000000734BLL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v11 & 1) != 0) {
      return 5LL;
    }
    else {
      return 6LL;
    }
  }

void sub_10020BC9C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100183098(&qword_100648090);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_10020C0CC();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &_s8LocalLTKC18FileRepresentationV10CodingKeysON,  &_s8LocalLTKC18FileRepresentationV10CodingKeysON,  v11,  v9,  v10);
  if (v2)
  {
    sub_10018709C(a1);
  }

  else
  {
    LOBYTE(v40) = 0;
    uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)(&v40, v5);
    uint64_t v14 = v13;
    char v43 = 1;
    unint64_t v15 = sub_10020C110();
    swift_bridgeObjectRetain(v14);
    KeyedDecodingContainer.decode<A>(_:forKey:)( &v40,  &type metadata for SDAuthenticationRole,  &v43,  v5,  &type metadata for SDAuthenticationRole,  v15);
    int v42 = v40;
    char v43 = 2;
    unint64_t v16 = sub_10020C154();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v40, &_s7FeatureON, &v43, v5, &_s7FeatureON, v16);
    int v38 = v40;
    char v43 = 3;
    unint64_t v39 = sub_10020C198();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v40, &type metadata for Data, &v43, v5, &type metadata for Data, v39);
    char v43 = 4;
    unint64_t v36 = v41;
    uint64_t v37 = v40;
    sub_10019BA8C(v40, v41);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v40, &type metadata for Data, &v43, v5, &type metadata for Data, v39);
    unint64_t v39 = 0LL;
    uint64_t v18 = v40;
    unint64_t v17 = v41;
    uint64_t v33 = sub_100183098(&qword_1006480B8);
    unint64_t v34 = v17;
    char v43 = 5;
    uint64_t v35 = v18;
    sub_10019BA8C(v18, v17);
    uint64_t v19 = sub_10020C2EC( &qword_1006480C0,  (void (*)(void))sub_10020C1DC,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    unint64_t v20 = v39;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v40, v33, &v43, v5, v33, v19);
    if (v20)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      unint64_t v22 = v34;
      uint64_t v21 = v35;
      sub_100189B20(v35, v34);
      unint64_t v24 = v36;
      uint64_t v23 = v37;
      sub_100189B20(v37, v36);
      swift_bridgeObjectRelease(v14);
      unint64_t v25 = v39;
      sub_10018709C(a1);
      swift_bridgeObjectRelease(v14);
      sub_100189B20(v23, v24);
      if (!v25) {
        sub_100189B20(v21, v22);
      }
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v26 = v40;
      unint64_t v39 = v40;
      swift_bridgeObjectRetain(v14);
      unint64_t v27 = v36;
      sub_10019BA8C(v37, v36);
      unint64_t v28 = v34;
      uint64_t v29 = v35;
      sub_10019BA8C(v35, v34);
      swift_bridgeObjectRetain(v26);
      sub_100189B20(v29, v28);
      uint64_t v30 = v37;
      sub_100189B20(v37, v27);
      swift_bridgeObjectRelease(v14);
      sub_10018709C(a1);
      swift_bridgeObjectRelease(v14);
      sub_100189B20(v30, v27);
      sub_100189B20(v29, v28);
      unint64_t v31 = v39;
      swift_bridgeObjectRelease(v39);
      *(void *)a2 = v12;
      *(void *)(a2 + 8) = v14;
      *(_BYTE *)(a2 + swift_weakDestroy(v0 + 16) = v42;
      *(_BYTE *)(a2 + 17) = v38;
      *(void *)(a2 + 24) = v30;
      *(void *)(a2 + 32) = v27;
      *(void *)(a2 + 40) = v29;
      *(void *)(a2 + 48) = v28;
      *(void *)(a2 + 56) = v31;
    }
  }

unint64_t sub_10020C0CC()
{
  unint64_t result = qword_100648098;
  if (!qword_100648098)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CF038, &_s8LocalLTKC18FileRepresentationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100648098);
  }

  return result;
}

unint64_t sub_10020C110()
{
  unint64_t result = qword_1006480A0;
  if (!qword_1006480A0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D6F60, &type metadata for SDAuthenticationRole);
    atomic_store(result, (unint64_t *)&qword_1006480A0);
  }

  return result;
}

unint64_t sub_10020C154()
{
  unint64_t result = qword_1006480A8;
  if (!qword_1006480A8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DB158, &_s7FeatureON);
    atomic_store(result, (unint64_t *)&qword_1006480A8);
  }

  return result;
}

unint64_t sub_10020C198()
{
  unint64_t result = qword_1006480B0;
  if (!qword_1006480B0)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1006480B0);
  }

  return result;
}

unint64_t sub_10020C1DC()
{
  unint64_t result = qword_1006480C8;
  if (!qword_1006480C8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D684C, &_s9RemoteLTKC18FileRepresentationVN);
    atomic_store(result, (unint64_t *)&qword_1006480C8);
  }

  return result;
}

unint64_t sub_10020C220()
{
  unint64_t result = qword_1006480D8;
  if (!qword_1006480D8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D6F38, &type metadata for SDAuthenticationRole);
    atomic_store(result, (unint64_t *)&qword_1006480D8);
  }

  return result;
}

unint64_t sub_10020C264()
{
  unint64_t result = qword_1006480E0;
  if (!qword_1006480E0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DB130, &_s7FeatureON);
    atomic_store(result, (unint64_t *)&qword_1006480E0);
  }

  return result;
}

unint64_t sub_10020C2A8()
{
  unint64_t result = qword_1006480E8;
  if (!qword_1006480E8)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1006480E8);
  }

  return result;
}

uint64_t sub_10020C2EC(unint64_t *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v7 = sub_100183124(&qword_1006480B8);
    a2();
    uint64_t result = swift_getWitnessTable(a3, v7);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_10020C354()
{
  unint64_t result = qword_1006480F8;
  if (!qword_1006480F8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D6824, &_s9RemoteLTKC18FileRepresentationVN);
    atomic_store(result, (unint64_t *)&qword_1006480F8);
  }

  return result;
}

uint64_t _s8LocalLTKC18FileRepresentationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }

uint64_t _s8LocalLTKC18FileRepresentationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFA) {
    return ((uint64_t (*)(void))((char *)&loc_10020C474 + 4 * byte_1004CEE7B[v4]))();
  }
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10020C4A8 + 4 * byte_1004CEE76[v4]))();
}

uint64_t sub_10020C4A8(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10020C4B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10020C4B8LL);
  }
  return result;
}

uint64_t sub_10020C4C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10020C4CCLL);
  }
  *(_BYTE *)unint64_t result = a2 + 5;
  return result;
}

uint64_t sub_10020C4D0(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10020C4D8(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8LocalLTKC18FileRepresentationV10CodingKeysOMa()
{
  return &_s8LocalLTKC18FileRepresentationV10CodingKeysON;
}

unint64_t sub_10020C4F8()
{
  unint64_t result = qword_100648100;
  if (!qword_100648100)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CF010, &_s8LocalLTKC18FileRepresentationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100648100);
  }

  return result;
}

unint64_t sub_10020C540()
{
  unint64_t result = qword_100648108;
  if (!qword_100648108)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CEF80, &_s8LocalLTKC18FileRepresentationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100648108);
  }

  return result;
}

unint64_t sub_10020C588()
{
  unint64_t result = qword_100648110;
  if (!qword_100648110)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CEFA8, &_s8LocalLTKC18FileRepresentationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100648110);
  }

  return result;
}

void sub_10020C5CC()
{
  uint64_t v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for UUID(0LL);
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v5);
  BOOL v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v0, (uint64_t)v7, v8);
  uint64_t v9 = (char *)sub_10020C738 + 4 * byte_1004CF0B0[swift_getEnumCaseMultiPayload(v7, v5)];
  __asm { BR              X10 }

uint64_t sub_10020C738()
{
  uint64_t v5 = sub_10020CB28();
  uint64_t v6 = UUID.uuidString.getter(v5);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  sub_1001A4BC8(v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return v6;
}

void sub_10020C834()
{
  uint64_t v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v0, (uint64_t)v6, v7);
  int v8 = (char *)&loc_10020C958 + *((int *)qword_10020CB18 + swift_getEnumCaseMultiPayload(v6, v4));
  __asm { BR              X10 }

uint64_t sub_10020C968()
{
  uint64_t v2 = sub_1001A4B40(v1, v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v3 = NWEndpoint.nw.getter(v2);
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x10020CAC0LL);
  }

  uint64_t v4 = v3;
  sub_1001A4BC8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return v4;
}

void sub_10020CAC4()
{
}

uint64_t sub_10020CB28()
{
  uint64_t v3 = 0LL;
  uint64_t v4 = 0LL;
  uint64_t v0 = NWEndpoint.nw.getter();
  if (!v0) {
    __break(1u);
  }
  uint64_t v1 = v0;
  nw_endpoint_get_service_identifier(v0, &v3);
  swift_unknownObjectRelease(v1);
  return UUID.init(uuid:)( v3,  BYTE1(v3),  BYTE2(v3),  BYTE3(v3),  BYTE4(v3),  BYTE5(v3),  BYTE6(v3),  HIBYTE(v3),  v4);
}

void sub_10020CBCC()
{
  uint64_t v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v0, (uint64_t)v6, v7);
  int v8 = (char *)&loc_10020CCF8 + dword_10020CF84[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }

uint64_t sub_10020CD08()
{
  uint64_t v3 = sub_10020D1FC(0x6C46737574617453LL, 0xEB00000000736761LL);
  if ((v3 & 0x80000) != 0)
  {
    int v8 = (unsigned int *)&enum case for SFAirDrop.DeviceRelationship.sameAccount(_:);
  }

  else
  {
    uint64_t v4 = NWEndpoint.nw.getter(v3);
    if (!v4)
    {
      __break(1u);
      JUMPOUT(0x10020CF84LL);
    }

    uint64_t v5 = v4;
    uint64_t contact_id = nw_endpoint_get_contact_id();
    swift_unknownObjectRelease(v5);
    if (contact_id)
    {
      String.init(cString:)(contact_id);
      swift_bridgeObjectRelease(v7);
      int v8 = (unsigned int *)&enum case for SFAirDrop.DeviceRelationship.contact(_:);
    }

    else
    {
      int v8 = (unsigned int *)&enum case for SFAirDrop.DeviceRelationship.stranger(_:);
    }
  }

  uint64_t v9 = *v8;
  uint64_t v10 = type metadata accessor for SFAirDrop.DeviceRelationship(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104LL))(v0, v9, v10);
  return sub_1001A4BC8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
}

uint64_t sub_10020CF94()
{
  uint64_t v0 = type metadata accessor for SFString(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = NWEndpoint.nw.getter(v2);
  if (result)
  {
    uint64_t v6 = result;
    uint64_t device_name = nw_endpoint_get_device_name();
    swift_unknownObjectRelease(v6);
    if (!device_name) {
      return 0LL;
    }
    uint64_t v8 = String.init(cString:)(device_name);
    uint64_t v10 = v9;
    if ((sub_10020D1FC(0x6C46737574617453LL, 0xEB00000000736761LL) & 0x4000000000LL) != 0)
    {
      (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for SFString.maybeContact(_:), v0);
      uint64_t v11 = sub_100183098(&qword_1006483E0);
      uint64_t v12 = swift_allocObject(v11, 72LL, 7LL);
      *(_OWORD *)(v12 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
      *(void *)(v12 + 56) = &type metadata for String;
      *(void *)(v12 + 64) = sub_10021366C();
      *(void *)(v12 + 32) = v8;
      *(void *)(v12 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v10;
      uint64_t v8 = SFString.format(_:)(v12);
      swift_bridgeObjectRelease(v12);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    }

    return v8;
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_10020D0F0()
{
  return sub_10020D1FC(0x6C46737574617453LL, 0xEB00000000736761LL);
}

uint64_t sub_10020D110()
{
  if ((sub_10020D1FC(0x6C46737574617453LL, 0xEB00000000736761LL) & 0x4000000000LL) != 0
    || (sub_10020D1FC(0x6C46737574617453LL, 0xEB00000000736761LL) & 0x8000000000LL) != 0)
  {
    if ((sub_10020D1FC(0x6C46737574617453LL, 0xEB00000000736761LL) & 0x4000000000LL) != 0
      || (sub_10020D1FC(0x4665727574616546LL, 0xEC0000007367616CLL) & 8) != 0)
    {
      return 1LL;
    }

    sub_10020CF94();
    if (v0)
    {
      uint64_t v1 = v0;
      v2._uint64_t countAndFlagsBits = 4408910LL;
      v2._object = (void *)0xE300000000000000LL;
      Swift::Bool v3 = String.hasPrefix(_:)(v2);
      swift_bridgeObjectRelease(v1);
      return v3;
    }
  }

  return 0LL;
}

uint64_t sub_10020D1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_1006483D8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v38[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for NWTXTRecord(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v38[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  NWEndpoint.txtRecord.getter(v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1LL, v7) == 1)
  {
    sub_100187100((uint64_t)v6, &qword_1006483D8);
    return 0LL;
  }

  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
  uint64_t result = NWTXTRecord.subscript.getter(a1, a2);
  if (!v13)
  {
LABEL_62:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return 0LL;
  }

  uint64_t v14 = v13;
  uint64_t v15 = HIBYTE(v13) & 0xF;
  uint64_t v16 = result & 0xFFFFFFFFFFFFLL;
  if ((v14 & 0x2000000000000000LL) != 0) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v17)
  {
    swift_bridgeObjectRelease(v14);
    goto LABEL_62;
  }

  if ((v14 & 0x1000000000000000LL) != 0)
  {
    unint64_t v19 = sub_100212BBC(result, v14, 10LL, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100212F34);
    char v21 = v36;
    goto LABEL_40;
  }

  if ((v14 & 0x2000000000000000LL) == 0)
  {
    if ((result & 0x1000000000000000LL) != 0) {
      uint64_t v18 = (unsigned __int8 *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v18 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, v14);
    }
    unint64_t v19 = (unint64_t)sub_100212F34(v18, v16, 10LL);
    char v21 = v20 & 1;
LABEL_40:
    swift_bridgeObjectRelease(v14);
    if ((v21 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      return v19;
    }

    goto LABEL_62;
  }

  v38[0] = result;
  v38[1] = v14 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v15)
    {
      if (v15 != 1 && (BYTE1(result) - 48) <= 9u)
      {
        unint64_t v19 = (BYTE1(result) - 48);
        if (v15 == 2) {
          goto LABEL_39;
        }
        if ((BYTE2(result) - 48) <= 9u)
        {
          unint64_t v19 = 10LL * (BYTE1(result) - 48) + (BYTE2(result) - 48);
          uint64_t v25 = v15 - 3;
          if (v25)
          {
            uint64_t v26 = (unsigned __int8 *)v38 + 3;
            while (1)
            {
              unsigned int v27 = *v26 - 48;
              if (v27 > 9) {
                goto LABEL_36;
              }
              if (!is_mul_ok(v19, 0xAuLL)) {
                goto LABEL_36;
              }
              BOOL v23 = __CFADD__(10 * v19, v27);
              unint64_t v19 = 10 * v19 + v27;
              if (v23) {
                goto LABEL_36;
              }
              char v21 = 0;
              ++v26;
              if (!--v25) {
                goto LABEL_40;
              }
            }
          }

          goto LABEL_39;
        }
      }

      goto LABEL_36;
    }
  }

  else
  {
    if (result != 45)
    {
      if (v15 && (result - 48) <= 9u)
      {
        unint64_t v19 = (result - 48);
        if (v15 == 1) {
          goto LABEL_39;
        }
        if ((BYTE1(result) - 48) <= 9u)
        {
          unint64_t v19 = 10LL * (result - 48) + (BYTE1(result) - 48);
          uint64_t v28 = v15 - 2;
          if (v28)
          {
            uint64_t v29 = (unsigned __int8 *)v38 + 2;
            while (1)
            {
              unsigned int v30 = *v29 - 48;
              if (v30 > 9) {
                goto LABEL_36;
              }
              if (!is_mul_ok(v19, 0xAuLL)) {
                goto LABEL_36;
              }
              BOOL v23 = __CFADD__(10 * v19, v30);
              unint64_t v19 = 10 * v19 + v30;
              if (v23) {
                goto LABEL_36;
              }
              char v21 = 0;
              ++v29;
              if (!--v28) {
                goto LABEL_40;
              }
            }
          }

          goto LABEL_39;
        }
      }

void sub_10020D5EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10020CB28();
  uint64_t v6 = sub_100183F14( &qword_100646108,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v2, v6);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v8 = NWEndpoint.nw.getter(v7);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }

  uint64_t v9 = v8;
  uint64_t contact_id = nw_endpoint_get_contact_id();
  swift_unknownObjectRelease(v9);
  if (contact_id)
  {
    uint64_t v11 = String.init(cString:)(contact_id);
    uint64_t v13 = v12;
    Hasher._combine(_:)(1u);
    String.hash(into:)(a1, v11, v13);
    swift_bridgeObjectRelease(v13);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  uint64_t v14 = sub_10020CF94();
  if (v15)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    Hasher._combine(_:)(1u);
    String.hash(into:)(a1, v16, v17);
    uint64_t v18 = swift_bridgeObjectRelease(v17);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  uint64_t v19 = NWEndpoint.nw.getter(v18);
  if (!v19) {
    goto LABEL_14;
  }
  uint64_t v20 = v19;
  uint64_t device_id = nw_endpoint_get_device_id();
  swift_unknownObjectRelease(v20);
  if (device_id)
  {
    uint64_t v22 = String.init(cString:)(device_id);
    uint64_t v24 = v23;
    Hasher._combine(_:)(1u);
    String.hash(into:)(a1, v22, v24);
    swift_bridgeObjectRelease(v24);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  Swift::UInt64 v25 = sub_10020D1FC(0x6C46737574617453LL, 0xEB00000000736761LL);
  Hasher._combine(_:)(v25);
  Swift::UInt64 v26 = sub_10020D1FC(0x4665727574616546LL, 0xEC0000007367616CLL);
  Hasher._combine(_:)(v26);
}

Swift::Int sub_10020D828(uint64_t a1, uint64_t a2)
{
  return sub_10020E188(a1, a2, (void (*)(void *))sub_10020D5EC);
}

Swift::Int sub_10020D838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10020E1D8(a1, a2, a3, (void (*)(void *))sub_10020D5EC);
}

void sub_10020D84C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = v2[1];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  uint64_t v7 = (char *)v2 + v6[6];
  if (v7[8] == 1)
  {
    Hasher._combine(_:)(0);
  }

  else
  {
    Swift::UInt v8 = *(void *)v7;
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v8);
  }

  uint64_t v9 = (void *)((char *)v2 + v6[7]);
  uint64_t v10 = v9[1];
  if (v10)
  {
    uint64_t v11 = *v9;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v10);
    String.hash(into:)(a1, v11, v10);
    swift_bridgeObjectRelease(v10);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  uint64_t v12 = (void *)((char *)v2 + v6[8]);
  uint64_t v13 = v12[1];
  if (v13)
  {
    uint64_t v14 = *v12;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v13);
    String.hash(into:)(a1, v14, v13);
    swift_bridgeObjectRelease(v13);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  uint64_t v15 = (void *)((char *)v2 + v6[9]);
  uint64_t v16 = v15[1];
  if (v16)
  {
    uint64_t v17 = *v15;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v16);
    String.hash(into:)(a1, v17, v16);
    swift_bridgeObjectRelease(v16);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  uint64_t v18 = (void *)((char *)v2 + v6[10]);
  uint64_t v19 = v18[1];
  if (v19)
  {
    uint64_t v20 = *v18;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v19);
    String.hash(into:)(a1, v20, v19);
    swift_bridgeObjectRelease(v19);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  char v21 = (void *)((char *)v2 + v6[11]);
  uint64_t v22 = v21[1];
  if (v22)
  {
    uint64_t v23 = *v21;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v22);
    String.hash(into:)(a1, v23, v22);
    swift_bridgeObjectRelease(v22);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  uint64_t v24 = (void *)((char *)v2 + v6[12]);
  uint64_t v25 = v24[1];
  if (v25)
  {
    uint64_t v26 = *v24;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v25);
    String.hash(into:)(a1, v26, v25);
    swift_bridgeObjectRelease(v25);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  Hasher._combine(_:)(*((_BYTE *)v2 + v6[13]));
  uint64_t v27 = (void *)((char *)v2 + v6[14]);
  unint64_t v28 = v27[1];
  if (v28 >> 60 == 15)
  {
    Hasher._combine(_:)(0);
  }

  else
  {
    uint64_t v29 = *v27;
    Hasher._combine(_:)(1u);
    sub_10019BA8C(v29, v28);
    Data.hash(into:)(a1, v29, v28);
    sub_100189B0C(v29, v28);
  }

Swift::Int sub_10020DB00(uint64_t a1, uint64_t a2)
{
  return sub_10020E188(a1, a2, (void (*)(void *))sub_10020D84C);
}

Swift::Int sub_10020DB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10020E1D8(a1, a2, a3, (void (*)(void *))sub_10020D84C);
}

uint64_t sub_10020DB1C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

Swift::Int sub_10020DB2C()
{
  uint64_t v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
  uint64_t v2 = type metadata accessor for UUID(0LL);
  uint64_t v3 = sub_100183F14( &qword_100646108,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v8, v2, v3);
  uint64_t v4 = (void *)((char *)v0 + *(int *)(v1 + 28));
  uint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v5);
    String.hash(into:)(v8, v6, v5);
    swift_bridgeObjectRelease(v5);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  Hasher._combine(_:)(*((_BYTE *)v0 + *(int *)(v1 + 32)));
  return Hasher._finalize()();
}

void sub_10020DC2C()
{
  uint64_t v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v0, (uint64_t)v6, v7);
  Swift::UInt v8 = (char *)sub_10020DD60 + 4 * byte_1004CF0B4[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }

uint64_t sub_10020DD60()
{
  return sub_1001A4BC8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
}

void sub_10020DF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for UUID(0LL);
  uint64_t v6 = sub_100183F14( &qword_100646108,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v5, v6);
  uint64_t v7 = (void *)((char *)v2 + *(int *)(a2 + 28));
  uint64_t v8 = v7[1];
  if (v8)
  {
    uint64_t v9 = *v7;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v8);
    String.hash(into:)(a1, v9, v8);
    swift_bridgeObjectRelease(v8);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  Hasher._combine(_:)(*((_BYTE *)v2 + *(int *)(a2 + 32)));
}

Swift::Int sub_10020E058(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v5 = sub_100183F14( &qword_100646108,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v10, v4, v5);
  uint64_t v6 = (void *)((char *)v2 + *(int *)(a2 + 28));
  uint64_t v7 = v6[1];
  if (v7)
  {
    uint64_t v8 = *v6;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v7);
    String.hash(into:)(v10, v8, v7);
    swift_bridgeObjectRelease(v7);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  Hasher._combine(_:)(*((_BYTE *)v2 + *(int *)(a2 + 32)));
  return Hasher._finalize()();
}

uint64_t sub_10020E14C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = UUID.uuidString.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

Swift::Int sub_10020E17C(uint64_t a1, uint64_t a2)
{
  return sub_10020E188(a1, a2, (void (*)(void *))sub_10020DC2C);
}

Swift::Int sub_10020E188(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  return Hasher._finalize()();
}

Swift::Int sub_10020E1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10020E1D8(a1, a2, a3, (void (*)(void *))sub_10020DC2C);
}

Swift::Int sub_10020E1D8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  return Hasher._finalize()();
}

void sub_10020E214(void *a1@<X8>)
{
  *a1 = v2;
  a1[1] = v3;
}

void sub_10020E23C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for UUID(0LL);
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v1, (uint64_t)v8, v9);
  uint64_t v10 = (char *)&loc_10020E39C + *((int *)qword_10020EB08 + swift_getEnumCaseMultiPayload(v8, v6));
  __asm { BR              X10 }

uint64_t sub_10020E3AC()
{
  *(void *)(v5 - 96) = 0LL;
  *(void *)(v5 - 88) = 0xE000000000000000LL;
  _StringGuts.grow(_:)(73LL);
  uint64_t v6 = *(void *)(v5 - 88);
  *(void *)(v5 - 96) = *(void *)(v5 - 96);
  *(void *)(v5 - 88) = v6;
  v7._object = (void *)0x80000001005058F0LL;
  v7._uint64_t countAndFlagsBits = 0xD000000000000015LL;
  String.append(_:)(v7);
  sub_10020CB28();
  uint64_t v8 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
  v9._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v8);
  object = v9._object;
  String.append(_:)(v9);
  __n128 v11 = swift_bridgeObjectRelease(object);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v2, v11);
  v12._uint64_t countAndFlagsBits = 544034336LL;
  v12._object = (void *)0xE400000000000000LL;
  String.append(_:)(v12);
  sub_10020EB1C();
  uint64_t v14 = v13;
  *(void *)(v5 - 112) = v15;
  *(void *)(v5 - 104) = v13;
  DefaultStringInterpolation.appendInterpolation<A>(_:)( v5 - 112,  &type metadata for String,  &protocol witness table for String);
  swift_bridgeObjectRelease(v14);
  v16._uint64_t countAndFlagsBits = 543444256LL;
  v16._object = (void *)0xE400000000000000LL;
  String.append(_:)(v16);
  sub_10020ECDC();
  uint64_t v18 = v17;
  *(void *)(v5 - 112) = v19;
  *(void *)(v5 - 104) = v17;
  DefaultStringInterpolation.appendInterpolation<A>(_:)( v5 - 112,  &type metadata for String,  &protocol witness table for String);
  swift_bridgeObjectRelease(v18);
  v20._uint64_t countAndFlagsBits = 541346080LL;
  v20._object = (void *)0xE400000000000000LL;
  String.append(_:)(v20);
  sub_10020EEE0();
  uint64_t v22 = v21;
  *(void *)(v5 - 112) = v23;
  *(void *)(v5 - 104) = v21;
  DefaultStringInterpolation.appendInterpolation<A>(_:)( v5 - 112,  &type metadata for String,  &protocol witness table for String);
  swift_bridgeObjectRelease(v22);
  v24._uint64_t countAndFlagsBits = 0x2044494320LL;
  v24._object = (void *)0xE500000000000000LL;
  String.append(_:)(v24);
  sub_10020F0E4();
  uint64_t v26 = v25;
  *(void *)(v5 - 112) = v27;
  *(void *)(v5 - 104) = v25;
  DefaultStringInterpolation.appendInterpolation<A>(_:)( v5 - 112,  &type metadata for String,  &protocol witness table for String);
  swift_bridgeObjectRelease(v26);
  v28._uint64_t countAndFlagsBits = 542458144LL;
  v28._object = (void *)0xE400000000000000LL;
  String.append(_:)(v28);
  uint64_t v29 = sub_10020D1FC(0x6C46737574617453LL, 0xEB00000000736761LL);
  uint64_t v30 = 1702195828LL;
  unint64_t v31 = 0xE400000000000000LL;
  if ((v29 & 0x4000000000LL) == 0)
  {
    uint64_t v32 = sub_10020D1FC(0x6C46737574617453LL, 0xEB00000000736761LL);
    BOOL v33 = (v32 & 0x8000000000LL) == 0;
    if ((v32 & 0x8000000000LL) != 0) {
      uint64_t v30 = 1702195828LL;
    }
    else {
      uint64_t v30 = 0x65736C6166LL;
    }
    if (v33) {
      unint64_t v31 = 0xE500000000000000LL;
    }
    else {
      unint64_t v31 = 0xE400000000000000LL;
    }
  }

  unint64_t v34 = v31;
  String.append(_:)(*(Swift::String *)&v30);
  swift_bridgeObjectRelease(v31);
  v35._uint64_t countAndFlagsBits = 541999904LL;
  v35._object = (void *)0xE400000000000000LL;
  String.append(_:)(v35);
  char v36 = sub_10020D110();
  BOOL v37 = (v36 & 1) == 0;
  if ((v36 & 1) != 0) {
    uint64_t v38 = 1702195828LL;
  }
  else {
    uint64_t v38 = 0x65736C6166LL;
  }
  if (v37) {
    unint64_t v39 = 0xE500000000000000LL;
  }
  else {
    unint64_t v39 = 0xE400000000000000LL;
  }
  unint64_t v40 = v39;
  String.append(_:)(*(Swift::String *)&v38);
  swift_bridgeObjectRelease(v39);
  v41._uint64_t countAndFlagsBits = 541476384LL;
  v41._object = (void *)0xE400000000000000LL;
  String.append(_:)(v41);
  *(void *)(v5 - 112) = sub_10020D1FC(0x4665727574616546LL, 0xEC0000007367616CLL);
  type metadata accessor for RPFeatureFlags(0LL);
  _print_unlocked<A, B>(_:_:)( v5 - 112,  v5 - 96,  v42,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v43._uint64_t countAndFlagsBits = 541479712LL;
  v43._object = (void *)0xE400000000000000LL;
  String.append(_:)(v43);
  *(void *)(v5 - 112) = sub_10020D1FC(0x6C46737574617453LL, 0xEB00000000736761LL);
  type metadata accessor for RPStatusFlags(0LL);
  _print_unlocked<A, B>(_:_:)( v5 - 112,  v5 - 96,  v44,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v45._uint64_t countAndFlagsBits = 62LL;
  v45._object = (void *)0xE100000000000000LL;
  String.append(_:)(v45);
  uint64_t v46 = *(void *)(v5 - 96);
  sub_1001A4BC8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return v46;
}

void sub_10020EB1C()
{
  uint64_t v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v0, (uint64_t)v5, v6);
  Swift::String v7 = (char *)sub_10020EC14 + 4 * byte_1004CF0B8[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }

uint64_t sub_10020EC14()
{
  uint64_t v2 = sub_10020CF94();
  sub_1001A4BC8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return v2;
}

void sub_10020ECDC()
{
  uint64_t v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v0, (uint64_t)v5, v6);
  Swift::String v7 = (char *)&loc_10020EDC4 + *((int *)qword_10020EED0 + swift_getEnumCaseMultiPayload(v5, v3));
  __asm { BR              X10 }

uint64_t sub_10020EDD4()
{
  uint64_t v2 = sub_1001A4B40(v1, v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v3 = NWEndpoint.nw.getter(v2);
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x10020EED0LL);
  }

  uint64_t v4 = v3;
  uint64_t device_model = nw_endpoint_get_device_model();
  swift_unknownObjectRelease(v4);
  if (device_model) {
    uint64_t device_model = String.init(cString:)(device_model);
  }
  sub_1001A4BC8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return device_model;
}

void sub_10020EEE0()
{
  uint64_t v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v0, (uint64_t)v5, v6);
  Swift::String v7 = (char *)&loc_10020EFC8 + dword_10020F0D4[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }

uint64_t sub_10020EFD8()
{
  uint64_t v2 = sub_1001A4B40(v1, v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v3 = NWEndpoint.nw.getter(v2);
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x10020F0D4LL);
  }

  uint64_t v4 = v3;
  uint64_t device_id = nw_endpoint_get_device_id();
  swift_unknownObjectRelease(v4);
  if (device_id) {
    uint64_t device_id = String.init(cString:)(device_id);
  }
  sub_1001A4BC8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return device_id;
}

void sub_10020F0E4()
{
  uint64_t v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v0, (uint64_t)v6, v7);
  uint64_t v8 = (char *)&loc_10020F208 + *((int *)qword_10020F340 + swift_getEnumCaseMultiPayload(v6, v4));
  __asm { BR              X10 }

uint64_t sub_10020F218()
{
  uint64_t v2 = sub_1001A4B40(v1, v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v3 = NWEndpoint.nw.getter(v2);
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x10020F340LL);
  }

  uint64_t v4 = v3;
  uint64_t contact_id = nw_endpoint_get_contact_id();
  swift_unknownObjectRelease(v4);
  if (contact_id) {
    uint64_t contact_id = String.init(cString:)(contact_id);
  }
  sub_1001A4BC8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  return contact_id;
}

unint64_t sub_10020F350()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v5);
  Swift::String v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v1, (uint64_t)v10, v11);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v8);
  if (EnumCaseMultiPayload == 2)
  {
    sub_1001A4B40((uint64_t)v10, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    unint64_t v13 = v4[*(int *)(v2 + 36)];
    sub_1001A4BC8((uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  }

  else if (EnumCaseMultiPayload)
  {
    sub_1001A4BC8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return 0LL;
  }

  else
  {
    sub_1001A4B40( (uint64_t)v10,  (uint64_t)v7,  type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    unint64_t v13 = ((unint64_t)sub_10020D1FC(0x4665727574616546LL, 0xEC0000007367616CLL) >> 4) & 1;
    sub_1001A4BC8((uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  }

  return v13;
}

void sub_10020F4E8()
{
  uint64_t v1 = v0;
  uint64_t v21 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v21);
  v20[1] = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v3 = __chkstk_darwin(v23);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  Swift::String v7 = (char *)v20 - v6;
  uint64_t v8 = type metadata accessor for SFAirDrop.DeviceRelationship(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::String v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v20 - v13;
  sub_10020CBCC();
  uint64_t v22 = *(void (**)(char *, void, uint64_t))(v9 + 104);
  v22(v12, enum case for SFAirDrop.DeviceRelationship.contact(_:), v8);
  uint64_t v15 = sub_100183F14( (unint64_t *)&unk_1006483F0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.DeviceRelationship,  (uint64_t)&protocol conformance descriptor for SFAirDrop.DeviceRelationship);
  dispatch thunk of RawRepresentable.rawValue.getter(&v26, v8, v15);
  dispatch thunk of RawRepresentable.rawValue.getter(&v25, v8, v15);
  uint64_t v17 = v25;
  uint64_t v16 = v26;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, v8);
  v18(v14, v8);
  uint64_t v24 = v1;
  sub_1001A4B84(v1, (uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if (v16 != v17)
  {
    sub_10020CBCC();
    v22(v12, enum case for SFAirDrop.DeviceRelationship.sameAccount(_:), v8);
    dispatch thunk of RawRepresentable.rawValue.getter(&v26, v8, v15);
    dispatch thunk of RawRepresentable.rawValue.getter(&v25, v8, v15);
    v18(v12, v8);
    v18(v14, v8);
  }

  sub_1001A4BC8((uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4B84(v24, (uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v19 = (char *)sub_10020F76C + 4 * byte_1004CF0BC[swift_getEnumCaseMultiPayload(v5, v23)];
  __asm { BR              X10 }

uint64_t sub_10020F76C()
{
  return v0;
}

uint64_t SDAirDropFlags.hashValue.getter(uint64_t result)
{
  if (result < 0) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10020F840()
{
  return sub_100183F14( &qword_100644A40,  (uint64_t (*)(uint64_t))type metadata accessor for SDAirDropFlags,  (uint64_t)&unk_1004CC234);
}

uint64_t sub_10020F86C()
{
  uint64_t result = *v0;
  if (*v0 < 0) {
    __break(1u);
  }
  return result;
}

void sub_10020F87C()
{
}

  ;
}

void sub_10020F8A4()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)(v2);
  SDAirDropFlags.hash(into:)(v1);
}

Swift::Int sub_10020F8CC()
{
  return Hasher._finalize()();
}

uint64_t sub_10020F8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint(0LL);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_10020F920(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWEndpoint(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
}

uint64_t sub_10020F954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, a2, v4);
  return a1;
}

uint64_t sub_10020F998(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a1, a2, v4);
  return a1;
}

uint64_t sub_10020F9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a1, a2, v4);
  return a1;
}

uint64_t sub_10020FA20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a1, a2, v4);
  return a1;
}

uint64_t sub_10020FA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10020FA70);
}

uint64_t sub_10020FA70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48LL))(a1, a2, v4);
}

uint64_t sub_10020FAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10020FAB8);
}

uint64_t sub_10020FAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(uint64_t a1)
{
  return sub_1001A4AD0( a1,  qword_100648170,  (uint64_t)&nominal type descriptor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
}

uint64_t sub_10020FB0C(uint64_t a1)
{
  uint64_t result = type metadata accessor for NWEndpoint(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 1LL, &v4, a1 + 16);
    return 0LL;
  }

  return result;
}

void *sub_10020FB74(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v44 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v44);
  }

  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for NWEndpoint(0LL);
    Swift::String v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
    swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v4 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = (void *)((char *)v4 + v14);
    uint64_t v18 = (void *)((char *)a2 + v14);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (void *)((char *)v4 + v20);
    uint64_t v23 = (void *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = (void *)((char *)v4 + v21);
    uint64_t v26 = (void *)((char *)a2 + v21);
    uint64_t v48 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v48;
    uint64_t v27 = a3[10];
    uint64_t v28 = a3[11];
    uint64_t v29 = (void *)((char *)v4 + v27);
    uint64_t v30 = (void *)((char *)a2 + v27);
    uint64_t v31 = v30[1];
    void *v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = (void *)((char *)v4 + v28);
    BOOL v33 = (void *)((char *)a2 + v28);
    uint64_t v34 = v33[1];
    void *v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = a3[12];
    uint64_t v36 = a3[13];
    BOOL v37 = (void *)((char *)v4 + v35);
    uint64_t v38 = (void *)((char *)a2 + v35);
    uint64_t v39 = v38[1];
    *BOOL v37 = *v38;
    v37[1] = v39;
    *((_BYTE *)v4 + v36) = *((_BYTE *)a2 + v36);
    uint64_t v40 = a3[14];
    Swift::String v41 = (char *)v4 + v40;
    uint64_t v42 = (void *)((char *)a2 + v40);
    unint64_t v43 = *(void *)((char *)a2 + v40 + 8);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v48);
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v39);
    if (v43 >> 60 == 15)
    {
      *(_OWORD *)Swift::String v41 = *(_OWORD *)v42;
    }

    else
    {
      uint64_t v45 = *v42;
      sub_10019BA8C(*v42, v43);
      *(void *)Swift::String v41 = v45;
      *((void *)v41 + 1) = v43;
    }

    uint64_t v46 = a3[16];
    *((_BYTE *)v4 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    *((_BYTE *)v4 + v46) = *((_BYTE *)a2 + v46);
  }

  return v4;
}

void sub_10020FD40(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
  swift_bridgeObjectRelease(*(void *)(a1 + a2[7] + 8));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[8] + 8));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[9] + 8));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[10] + 8));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[11] + 8));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[12] + 8));
  uint64_t v6 = (uint64_t *)(a1 + a2[14]);
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15) {
    sub_100189B20(*v6, v7);
  }
}

void *sub_10020FE20(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for NWEndpoint(0LL);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = (void *)((char *)a1 + v13);
  uint64_t v17 = (void *)((char *)a2 + v13);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (void *)((char *)a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = (void *)((char *)a1 + v20);
  uint64_t v25 = (void *)((char *)a2 + v20);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = a3[10];
  uint64_t v28 = a3[11];
  uint64_t v29 = (void *)((char *)a1 + v27);
  uint64_t v30 = (void *)((char *)a2 + v27);
  uint64_t v31 = v30[1];
  void *v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = (void *)((char *)a1 + v28);
  BOOL v33 = (void *)((char *)a2 + v28);
  uint64_t v34 = v33[1];
  void *v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = a3[12];
  uint64_t v36 = a3[13];
  BOOL v37 = (void *)((char *)a1 + v35);
  uint64_t v38 = (void *)((char *)a2 + v35);
  uint64_t v39 = v38[1];
  *BOOL v37 = *v38;
  v37[1] = v39;
  *((_BYTE *)a1 + v36) = *((_BYTE *)a2 + v36);
  uint64_t v40 = a3[14];
  uint64_t v46 = (char *)a1 + v40;
  Swift::String v41 = (void *)((char *)a2 + v40);
  unint64_t v42 = *(void *)((char *)a2 + v40 + 8);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRetain(v39);
  if (v42 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v41;
  }

  else
  {
    uint64_t v43 = *v41;
    sub_10019BA8C(*v41, v42);
    *(void *)uint64_t v46 = v43;
    *((void *)v46 + 1) = v42;
  }

  uint64_t v44 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + v44) = *((_BYTE *)a2 + v44);
  return a1;
}

void *sub_10020FFC8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)v14;
  v13[8] = v14[8];
  *(void *)uint64_t v13 = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  uint64_t v19 = v18[1];
  uint64_t v20 = v17[1];
  v17[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  void *v22 = *v23;
  uint64_t v24 = v23[1];
  uint64_t v25 = v22[1];
  v22[1] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  *uint64_t v27 = *v28;
  uint64_t v29 = v28[1];
  uint64_t v30 = v27[1];
  v27[1] = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v30);
  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)((char *)a1 + v31);
  BOOL v33 = (void *)((char *)a2 + v31);
  void *v32 = *v33;
  uint64_t v34 = v33[1];
  uint64_t v35 = v32[1];
  v32[1] = v34;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v35);
  uint64_t v36 = a3[11];
  BOOL v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  *BOOL v37 = *v38;
  uint64_t v39 = v38[1];
  uint64_t v40 = v37[1];
  v37[1] = v39;
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRelease(v40);
  uint64_t v41 = a3[12];
  unint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (void *)((char *)a2 + v41);
  *unint64_t v42 = *v43;
  uint64_t v44 = v43[1];
  uint64_t v45 = v42[1];
  v42[1] = v44;
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRelease(v45);
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  uint64_t v46 = a3[14];
  uint64_t v47 = (void *)((char *)a1 + v46);
  uint64_t v48 = (void *)((char *)a2 + v46);
  unint64_t v49 = *(void *)((char *)a2 + v46 + 8);
  if (*(void *)((char *)a1 + v46 + 8) >> 60 != 15LL)
  {
    if (v49 >> 60 != 15)
    {
      uint64_t v51 = *v48;
      sub_10019BA8C(v51, v49);
      uint64_t v52 = *v47;
      unint64_t v53 = v47[1];
      *uint64_t v47 = v51;
      v47[1] = v49;
      sub_100189B20(v52, v53);
      goto LABEL_8;
    }

    sub_10019DC8C((uint64_t)v47);
    goto LABEL_6;
  }

  if (v49 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    goto LABEL_8;
  }

  uint64_t v50 = *v48;
  sub_10019BA8C(v50, v49);
  *uint64_t v47 = v50;
  v47[1] = v49;
LABEL_8:
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  return a1;
}

_OWORD *sub_100210214(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  uint64_t v14 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  uint64_t v15 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
  uint64_t v16 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *((_BYTE *)a1 + vswift_weakDestroy(v0 + 16) = *((_BYTE *)a2 + v16);
  uint64_t v17 = a3[15];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  return a1;
}

void *sub_100210300(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = (void *)((char *)a1 + v13);
  uint64_t v17 = (void *)((char *)a2 + v13);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  uint64_t v20 = v16[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease(v20);
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  uint64_t v26 = v22[1];
  void *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease(v26);
  uint64_t v27 = a3[9];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  uint64_t v32 = v28[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease(v32);
  uint64_t v33 = a3[10];
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (void *)((char *)a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  uint64_t v38 = v34[1];
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease(v38);
  uint64_t v39 = a3[11];
  uint64_t v40 = (void *)((char *)a1 + v39);
  uint64_t v41 = (void *)((char *)a2 + v39);
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  uint64_t v44 = v40[1];
  *uint64_t v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease(v44);
  uint64_t v45 = a3[12];
  uint64_t v46 = (void *)((char *)a1 + v45);
  uint64_t v47 = (void *)((char *)a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  uint64_t v50 = v46[1];
  *uint64_t v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease(v50);
  uint64_t v51 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  uint64_t v52 = (void *)((char *)a1 + v51);
  unint64_t v53 = (void *)((char *)a2 + v51);
  unint64_t v54 = *(void *)((char *)a1 + v51 + 8);
  if (v54 >> 60 != 15)
  {
    unint64_t v55 = v53[1];
    if (v55 >> 60 != 15)
    {
      uint64_t v56 = *v52;
      *uint64_t v52 = *v53;
      v52[1] = v55;
      sub_100189B20(v56, v54);
      goto LABEL_6;
    }

    sub_10019DC8C((uint64_t)v52);
  }

  *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
LABEL_6:
  uint64_t v57 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + v57) = *((_BYTE *)a2 + v57);
  return a1;
}

uint64_t sub_1002104A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002104AC);
}

uint64_t sub_1002104AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for NWEndpoint(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))( a1 + *(int *)(a3 + 20),  a2,  v8);
  }

uint64_t sub_100210528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100210534);
}

uint64_t sub_100210534(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }

  else
  {
    uint64_t v7 = type metadata accessor for NWEndpoint(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( v5 + *(int *)(a4 + 20),  a2,  a2,  v7);
  }

  return result;
}

uint64_t type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(uint64_t a1)
{
  return sub_1001A4AD0( a1,  qword_100648200,  (uint64_t)&nominal type descriptor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
}

uint64_t sub_1002105BC(uint64_t a1)
{
  v4[0] = &unk_1004CF160;
  uint64_t result = type metadata accessor for NWEndpoint(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    v4[2] = &unk_1004CF178;
    v4[3] = &unk_1004CF190;
    v4[4] = &unk_1004CF190;
    v4[5] = &unk_1004CF190;
    void v4[6] = &unk_1004CF190;
    v4[7] = &unk_1004CF190;
    v4[8] = &unk_1004CF190;
    v4[9] = &unk_1004CF1A8;
    v4[10] = &unk_1004CF1C0;
    v4[11] = &unk_1004CF1A8;
    v4[12] = &unk_1004CF1A8;
    swift_initStructMetadata(a1, 256LL, 13LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_100210664(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v4 & 0x20000) == 0)
  {
    uint64_t v5 = (char *)&loc_1002106C4 + 4 * byte_1004CF0C0[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }

  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = v6 + ((v4 + 16LL) & ~(unint64_t)v4);
  swift_retain(v6);
  return v7;
}

uint64_t type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(uint64_t a1)
{
  return sub_1001A4AD0( a1,  qword_100648368,  (uint64_t)&nominal type descriptor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
}

void sub_1002109DC(uint64_t *a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      uint64_t v3 = type metadata accessor for NWEndpoint(0LL);
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
      break;
    case 1u:
      swift_bridgeObjectRelease(a1[1]);
      uint64_t v9 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
      uint64_t v10 = (char *)a1 + v9[5];
      uint64_t v11 = type metadata accessor for NWEndpoint(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8LL))(v10, v11);
      swift_bridgeObjectRelease(*(uint64_t *)((char *)a1 + v9[7] + 8));
      swift_bridgeObjectRelease(*(uint64_t *)((char *)a1 + v9[8] + 8));
      swift_bridgeObjectRelease(*(uint64_t *)((char *)a1 + v9[9] + 8));
      swift_bridgeObjectRelease(*(uint64_t *)((char *)a1 + v9[10] + 8));
      swift_bridgeObjectRelease(*(uint64_t *)((char *)a1 + v9[11] + 8));
      swift_bridgeObjectRelease(*(uint64_t *)((char *)a1 + v9[12] + 8));
      uint64_t v12 = (uint64_t *)((char *)a1 + v9[14]);
      unint64_t v7 = v12[1];
      if (v7 >> 60 != 15)
      {
        uint64_t v8 = *v12;
        goto LABEL_9;
      }

      break;
    case 2u:
      sub_100189B20(*a1, a1[1]);
      int v4 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
      uint64_t v5 = (char *)a1 + v4[5];
      uint64_t v6 = type metadata accessor for UUID(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
      swift_unknownObjectRelease(*(uint64_t *)((char *)a1 + v4[6]));
      swift_bridgeObjectRelease(*(uint64_t *)((char *)a1 + v4[7] + 8));
      break;
    case 3u:
      swift_bridgeObjectRelease(a1[1]);
      swift_bridgeObjectRelease(a1[3]);
      unint64_t v7 = a1[5];
      if (v7 >> 60 != 15)
      {
        uint64_t v8 = a1[4];
LABEL_9:
        sub_100189B20(v8, v7);
      }

      break;
    default:
      return;
  }

void sub_100210B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (char *)sub_100210BF0 + 4 * byte_1004CF0C8[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }

uint64_t sub_100210BF0()
{
  uint64_t v3 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL))(v0, v1, v3);
  swift_storeEnumTagMultiPayload(v0, v2, 0LL);
  return v0;
}

uint64_t sub_100210ED4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    sub_1001A4BC8(result, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v5 = (char *)&loc_100210F40 + 4 * byte_1004CF0CC[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }

  return result;
}

uint64_t type metadata accessor for SDAirDropDiscoveredEndpoint(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_1006482D8, (uint64_t)&nominal type descriptor for SDAirDropDiscoveredEndpoint);
}

_OWORD *sub_100211280(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v8 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32LL))(v10, v11, v12);
    *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
    *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
    *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
    *((_BYTE *)a1 + v8[9]) = *((_BYTE *)a2 + v8[9]);
    swift_storeEnumTagMultiPayload(a1, a3, 2LL);
  }

  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v13 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
    uint64_t v14 = v13[5];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for NWEndpoint(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32LL))(v15, v16, v17);
    uint64_t v18 = v13[6];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    *(_OWORD *)((char *)a1 + v13[7]) = *(_OWORD *)((char *)a2 + v13[7]);
    *(_OWORD *)((char *)a1 + v13[8]) = *(_OWORD *)((char *)a2 + v13[8]);
    *(_OWORD *)((char *)a1 + v13[9]) = *(_OWORD *)((char *)a2 + v13[9]);
    *(_OWORD *)((char *)a1 + v13[10]) = *(_OWORD *)((char *)a2 + v13[10]);
    *(_OWORD *)((char *)a1 + v13[11]) = *(_OWORD *)((char *)a2 + v13[11]);
    *(_OWORD *)((char *)a1 + v13[12]) = *(_OWORD *)((char *)a2 + v13[12]);
    *((_BYTE *)a1 + v13[13]) = *((_BYTE *)a2 + v13[13]);
    *(_OWORD *)((char *)a1 + v13[14]) = *(_OWORD *)((char *)a2 + v13[14]);
    *((_BYTE *)a1 + v13[15]) = *((_BYTE *)a2 + v13[15]);
    *((_BYTE *)a1 + v13[16]) = *((_BYTE *)a2 + v13[16]);
    swift_storeEnumTagMultiPayload(a1, a3, 1LL);
  }

  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    uint64_t v7 = type metadata accessor for NWEndpoint(0LL);
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32LL))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0LL);
  }

  return a1;
}

_OWORD *sub_10021148C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001A4BC8((uint64_t)a1, type metadata accessor for SDAirDropDiscoveredEndpoint);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v8 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
      uint64_t v9 = v8[5];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for UUID(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32LL))(v10, v11, v12);
      *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
      *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
      *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
      *((_BYTE *)a1 + v8[9]) = *((_BYTE *)a2 + v8[9]);
      swift_storeEnumTagMultiPayload(a1, a3, 2LL);
    }

    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v13 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
      uint64_t v14 = v13[5];
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = type metadata accessor for NWEndpoint(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32LL))(v15, v16, v17);
      uint64_t v18 = v13[6];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v20[8];
      *(_OWORD *)((char *)a1 + v13[7]) = *(_OWORD *)((char *)a2 + v13[7]);
      *(_OWORD *)((char *)a1 + v13[8]) = *(_OWORD *)((char *)a2 + v13[8]);
      *(_OWORD *)((char *)a1 + v13[9]) = *(_OWORD *)((char *)a2 + v13[9]);
      *(_OWORD *)((char *)a1 + v13[10]) = *(_OWORD *)((char *)a2 + v13[10]);
      *(_OWORD *)((char *)a1 + v13[11]) = *(_OWORD *)((char *)a2 + v13[11]);
      *(_OWORD *)((char *)a1 + v13[12]) = *(_OWORD *)((char *)a2 + v13[12]);
      *((_BYTE *)a1 + v13[13]) = *((_BYTE *)a2 + v13[13]);
      *(_OWORD *)((char *)a1 + v13[14]) = *(_OWORD *)((char *)a2 + v13[14]);
      *((_BYTE *)a1 + v13[15]) = *((_BYTE *)a2 + v13[15]);
      *((_BYTE *)a1 + v13[16]) = *((_BYTE *)a2 + v13[16]);
      swift_storeEnumTagMultiPayload(a1, a3, 1LL);
    }

    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    }

    else
    {
      uint64_t v7 = type metadata accessor for NWEndpoint(0LL);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32LL))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0LL);
    }
  }

  return a1;
}

uint64_t sub_1002116B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48LL))();
}

uint64_t sub_1002116BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56LL))();
}

uint64_t sub_1002116CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_1002116DC(uint64_t a1)
{
  uint64_t result = type metadata accessor for NWEndpoint(319LL);
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(319LL);
    if (v4 <= 0x3F)
    {
      v6[1] = *(void *)(result - 8) + 64LL;
      uint64_t result = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(319LL);
      if (v5 <= 0x3F)
      {
        v6[2] = *(void *)(result - 8) + 64LL;
        v6[3] = "0";
        swift_initEnumMetadataMultiPayload(a1, 256LL, 4LL, v6);
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t *sub_100211780(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v20);
  }

  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_10019BA8C(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16LL))(v10, v11, v12);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = v15;
    uint64_t v16 = (uint64_t *)((char *)a1 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
    swift_unknownObjectRetain(v15);
    swift_bridgeObjectRetain(v18);
  }

  return a1;
}

double sub_100211860(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
  swift_unknownObjectRelease(*(void *)(a1 + a2[6]));
  *(void *)&double result = swift_bridgeObjectRelease(*(void *)(a1 + a2[7] + 8)).n128_u64[0];
  return result;
}

uint64_t *sub_1002118D0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_10019BA8C(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UUID(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = *(uint64_t *)((char *)a2 + v12);
  *(uint64_t *)((char *)a1 + v12) = v14;
  uint64_t v15 = (uint64_t *)((char *)a1 + v13);
  uint64_t v16 = (uint64_t *)((char *)a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
  swift_unknownObjectRetain(v14);
  swift_bridgeObjectRetain(v17);
  return a1;
}

uint64_t *sub_100211984(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_10019BA8C(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_100189B20(v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for UUID(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24LL))(v11, v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = *(uint64_t *)((char *)a2 + v14);
  uint64_t v16 = *(uint64_t *)((char *)a1 + v14);
  *(uint64_t *)((char *)a1 + v14) = v15;
  swift_unknownObjectRetain(v15);
  swift_unknownObjectRelease(v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = (uint64_t *)((char *)a1 + v17);
  uint64_t v19 = (uint64_t *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  uint64_t v20 = v19[1];
  uint64_t v21 = v18[1];
  v18[1] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

_OWORD *sub_100211A64(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v1_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  return a1;
}

uint64_t *sub_100211AF8(uint64_t *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_100189B20(v6, v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UUID(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = *(uint64_t *)((char *)a1 + v12);
  *(uint64_t *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  swift_unknownObjectRelease(v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (uint64_t *)((char *)a1 + v14);
  uint64_t v16 = (uint64_t *)((char *)a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  uint64_t v19 = v15[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease(v19);
  uint64_t v20 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v2_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *((_BYTE *)a2 + v20);
  return a1;
}

uint64_t sub_100211BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100211BC0);
}

uint64_t sub_100211BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  return (v9 + 1);
}

uint64_t sub_100211C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100211C4C);
}

uint64_t sub_100211C4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))( a1 + *(int *)(a4 + 20),  a2,  a2,  result);
  }
  *(void *)(a1 + *(int *)(a4 + sub_100341998(*(void *)(v0 + 16), *(void *)(v0 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_100211CC8(uint64_t a1)
{
  v4[0] = &unk_1004CF238;
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    v4[2] = &unk_1004CF250;
    v4[3] = &unk_1004CF190;
    v4[4] = &unk_1004CF1A8;
    v4[5] = &unk_1004CF1A8;
    swift_initStructMetadata(a1, 256LL, 6LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

void *sub_100211D5C()
{
  return &protocol witness table for String;
}

uint64_t sub_100211D68()
{
  return sub_100183F14( &qword_1006483B0,  type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint,  (uint64_t)&unk_1004CF270);
}

uint64_t sub_100211D94()
{
  return sub_100183F14( &qword_1006483B8,  type metadata accessor for SDAirDropDiscoveredEndpoint,  (uint64_t)&unk_1004CF310);
}

uint64_t sub_100211DC0()
{
  return sub_100183F14( (unint64_t *)&unk_1006483C0,  type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint,  (uint64_t)&unk_1004CF3D8);
}

uint64_t sub_100211DEC()
{
  return sub_100183F14( &qword_100646108,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
}

uint64_t sub_100211E18()
{
  return sub_100183F14( &qword_1006483D0,  type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint,  (uint64_t)&unk_1004CF478);
}

void sub_100211E44(uint64_t a1, uint64_t a2)
{
  v15[2] = a1;
  v15[3] = a2;
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  uint64_t v5 = __chkstk_darwin(v4);
  v15[1] = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  uint64_t v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v2, (uint64_t)v12, v13);
  uint64_t v14 = (char *)&loc_100211FC8 + dword_10021244C[swift_getEnumCaseMultiPayload(v12, v10)];
  __asm { BR              X10 }

uint64_t sub_100211FD8()
{
  uint64_t v4 = sub_1001A4B40(v0, v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v5 = NWEndpoint.nw.getter(v4);
  if (!v5)
  {
    __break(1u);
    goto LABEL_22;
  }

  uint64_t v6 = v5;
  uint64_t device_id = nw_endpoint_get_device_id();
  swift_unknownObjectRelease(v6);
  uint64_t v9 = *(void *)(v3 - 96);
  uint64_t v8 = *(void *)(v3 - 88);
  if (device_id)
  {
    uint64_t v10 = String.init(cString:)(device_id);
    if (v10 == v9 && v11 == v8)
    {
      swift_bridgeObjectRelease(v8);
      sub_1001A4B84(v1, v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
LABEL_16:
      sub_1001A4BC8(v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      sub_1001A4BC8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      char v22 = 1;
      return v22 & 1;
    }

    uint64_t v13 = v11;
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v9, v8, 0LL);
    swift_bridgeObjectRelease(v13);
    uint64_t v15 = sub_1001A4B84(v1, v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    if ((v14 & 1) != 0) {
      goto LABEL_16;
    }
  }

  else
  {
    uint64_t v15 = sub_1001A4B84(v1, v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  }

  uint64_t v16 = NWEndpoint.nw.getter(v15);
  if (!v16)
  {
LABEL_22:
    __break(1u);
    JUMPOUT(0x10021244CLL);
  }

  uint64_t v17 = v16;
  uint64_t contact_id = nw_endpoint_get_contact_id();
  swift_unknownObjectRelease(v17);
  if (contact_id)
  {
    uint64_t v19 = String.init(cString:)(contact_id);
    uint64_t v21 = v20;
    if (v19 == v9 && v20 == v8) {
      char v22 = 1;
    }
    else {
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, v9, v8, 0LL);
    }
    sub_1001A4BC8(v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1001A4BC8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease(v21);
  }

  else
  {
    swift_bridgeObjectRetain(v8);
    sub_1001A4BC8(v2, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1001A4BC8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease(v8);
    char v22 = 0;
  }

  return v22 & 1;
}

void sub_10021245C()
{
  uint64_t v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v0, (uint64_t)v4, v5);
  uint64_t v6 = (char *)&loc_10021251C + *((int *)qword_100212630 + swift_getEnumCaseMultiPayload(v4, v2));
  __asm { BR              X10 }

uint64_t sub_10021252C()
{
  id v2 = [v0 idSelfIdentity];
  if (!v2) {
    return sub_1002DF1E8();
  }
  uint64_t v3 = v2;
  id v4 = [v2 idsDeviceID];

  if (!v4) {
    return sub_1002DF1E8();
  }
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  return v5;
}

void sub_100212640()
{
  uint64_t v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v0, (uint64_t)v5, v6);
  uint64_t v7 = (char *)sub_100212738 + 4 * byte_1004CF0D0[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }

uint64_t sub_100212738()
{
  char v2 = sub_10020D1FC(0x4665727574616546LL, 0xEC0000007367616CLL);
  sub_1001A4BC8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  if ((v2 & 8) != 0) {
    return 3LL;
  }
  else {
    return 1LL;
  }
}

void sub_100212844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }

uint64_t sub_1002128A4( int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20, char a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37)
{
  uint64_t v42 = v39;
  __int16 v43 = v40;
  char v44 = BYTE2(v40);
  char v45 = BYTE3(v40);
  char v46 = BYTE4(v40);
  char v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x100212A88LL);
  }

  uint64_t result = memcmp(v38, &v42, BYTE6(v40));
  *uint64_t v37 = (_DWORD)result == 0;
  return result;
}

void *sub_100212AAC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v4 = sub_100183098(&qword_1006451F0);
  uint64_t v5 = (void *)swift_allocObject(v4, v2 + 32, 7LL);
  size_t v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_100212B10(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5 = a1;
  unint64_t v6 = a1 >> 16;
  uint64_t v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000LL) == 0 || (a2 & 0x800000000000000LL) != 0)
  {
    uint64_t v13 = String.UTF16View.index(_:offsetBy:)(15LL, v6, a2);
    uint64_t v14 = v13 + (v7 << 16);
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    unint64_t v16 = v14 & 0xFFFFFFFFFFFF0000LL;
    if (!v7) {
      unint64_t v16 = v15;
    }
    return v16 | 4;
  }

  else
  {
    uint64_t v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15LL, v6);
    uint64_t v9 = v8 + (v7 << 16);
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    unint64_t v11 = v9 & 0xFFFFFFFFFFFF0000LL;
    if (!v7) {
      unint64_t v11 = v10;
    }
    return v11 | 8;
  }

unsigned __int8 *sub_100212B88(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_100212CB8(a1, a2, a3);
}

unsigned __int8 *sub_100212B9C(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_100212F34(a1, a2, a3);
}

uint64_t sub_100212BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100212BBC(a1, a2, a3, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100212CB8);
}

uint64_t sub_100212BBC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t, uint64_t))
{
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  swift_bridgeObjectRetain(a2);
  uint64_t v6 = String.init<A>(_:)( &v16,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
  uint64_t v8 = v6;
  unint64_t v9 = v7;
  if ((v7 & 0x1000000000000000LL) == 0)
  {
    if ((v7 & 0x2000000000000000LL) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v11 = HIBYTE(v9) & 0xF;
    uint64_t v16 = v8;
    uint64_t v17 = v9 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v10 = &v16;
    goto LABEL_7;
  }

  uint64_t v8 = sub_1002131B0(v6, v7);
  unint64_t v13 = v12;
  swift_bridgeObjectRelease(v9);
  unint64_t v9 = v13;
  if ((v13 & 0x2000000000000000LL) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v8 & 0x1000000000000000LL) != 0)
  {
    unint64_t v10 = (uint64_t *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }

  else
  {
    unint64_t v10 = (uint64_t *)_StringObject.sharedUTF8.getter(v8, v9);
  }

uint64_t sub_100212CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100212BBC(a1, a2, a3, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100212F34);
}

unsigned __int8 *sub_100212CB8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }

          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }

          if (result)
          {
            uint64_t v9 = 0LL;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0LL;
                  }
                  char v12 = -87;
                }

                else
                {
                  char v12 = -55;
                }
              }

              else
              {
                char v12 = -48;
              }

              uint64_t v13 = v9 * a3;
              uint64_t v9 = v13 - (v11 + v12);
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }

          return 0LL;
        }

        return 0LL;
      }

      __break(1u);
      goto LABEL_65;
    }

    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }

      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }

      if (result)
      {
        uint64_t v25 = 0LL;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0LL;
              }
              char v27 = -87;
            }

            else
            {
              char v27 = -55;
            }
          }

          else
          {
            char v27 = -48;
          }

          uint64_t v28 = v25 * a3;
          uint64_t v25 = v28 + (v26 + v27);
          ++result;
          --v3;
        }

        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }

      return 0LL;
    }

    return 0LL;
  }

  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }

  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0LL;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }

  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }

  if (!result) {
    return 0LL;
  }
  uint64_t v9 = 0LL;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0LL;
        }
        char v20 = -87;
      }

      else
      {
        char v20 = -55;
      }
    }

    else
    {
      char v20 = -48;
    }

    uint64_t v21 = v9 * a3;
    uint64_t v9 = v21 + (v19 + v20);
    ++v18;
    --v14;
  }

  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_100212F34(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }

          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }

          if (result)
          {
            unint64_t v9 = 0LL;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0LL;
                  }
                  char v12 = -87;
                }

                else
                {
                  char v12 = -55;
                }
              }

              else
              {
                char v12 = -48;
              }

              if (!is_mul_ok(v9, a3)) {
                return 0LL;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0LL;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }

          return 0LL;
        }

        return 0LL;
      }

      __break(1u);
      goto LABEL_66;
    }

    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }

      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }

      if (result)
      {
        unint64_t v28 = 0LL;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0LL;
              }
              char v30 = -87;
            }

            else
            {
              char v30 = -55;
            }
          }

          else
          {
            char v30 = -48;
          }

          if (!is_mul_ok(v28, a3)) {
            return 0LL;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0LL;
          }
          ++result;
          --v3;
        }

        while (v3);
        return (unsigned __int8 *)v28;
      }

      return 0LL;
    }

    return 0LL;
  }

  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }

  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0LL;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }

  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }

  if (!result) {
    return 0LL;
  }
  unint64_t v9 = 0LL;
  char v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0LL;
        }
        char v22 = -87;
      }

      else
      {
        char v22 = -55;
      }
    }

    else
    {
      char v22 = -48;
    }

    if (!is_mul_ok(v9, a3)) {
      return 0LL;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0LL;
    }
    ++v20;
    --v16;
  }

  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1002131B0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v2 = a1;
  }
  uint64_t v3 = 7LL;
  if (((a2 >> 60) & ((a1 & 0x800000000000000LL) == 0)) != 0) {
    uint64_t v3 = 11LL;
  }
  unint64_t v4 = String.subscript.getter(15LL, v3 | (v2 << 16), a1, a2);
  unint64_t v6 = v5;
  uint64_t v9 = sub_10021322C(v4, v7, v8, v5);
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_10021322C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5 = a3;
  if ((a4 & 0x1000000000000000LL) != 0)
  {
    unint64_t v12 = sub_100213370(a1, a2, a3, a4);
    if (v12)
    {
      uint64_t v9 = v12;
      unint64_t v8 = (unint64_t)sub_100212AAC(v12, 0LL);
      unint64_t v5 = sub_10021345C((unint64_t)v15, v8 + 32, v9, a1, a2, v5, a4);
      uint64_t v13 = v15[3];
      swift_bridgeObjectRetain(a4);
      swift_bridgeObjectRelease(v13);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }

    else
    {
      unint64_t v8 = (unint64_t)&_swiftEmptyArrayStorage;
    }

    uint64_t v14 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(void *)(v8 + 16));
    swift_release(v8);
    return v14;
  }

  else
  {
    unint64_t v8 = a1 >> 16;
    uint64_t v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000LL) == 0)
    {
      if ((a3 & 0x1000000000000000LL) != 0)
      {
        uint64_t v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }

unint64_t sub_100213370( unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000LL) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4LL << v8;
  if ((result & 0xC) == 4LL << v8)
  {
    uint64_t result = sub_100212B10(result, a3, a4);
    unint64_t v7 = result;
  }

  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_100212B10(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000LL) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }

  else if ((a4 & 0x1000000000000000LL) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }

  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000LL) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }

  else if (v10 >= a2 >> 16)
  {
    return String.UTF8View._foreignDistance(from:to:)(v7, a2, a3, a4);
  }

  __break(1u);
  return result;
}

unint64_t sub_10021345C( unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0LL;
    goto LABEL_33;
  }

  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0LL;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }

  uint64_t v11 = 0LL;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000LL) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4LL << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000LL) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_100212B10(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000LL) != 0)
    {
      uint64_t result = String.UTF8View._foreignSubscript(position:)(result, a6);
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }

    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000LL) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }

      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000LL) == 0) {
          uint64_t result = _StringObject.sharedUTF8.getter(a6, a7);
        }
        char v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000LL) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }

    uint64_t result = sub_100212B10(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000LL) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000LL) + 65540;
      goto LABEL_29;
    }

unint64_t sub_10021366C()
{
  unint64_t result = qword_1006483E8;
  if (!qword_1006483E8)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1006483E8);
  }

  return result;
}

uint64_t sub_1002136B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_100212844((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_100213784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }

    v11 += a1 - result;
  }

  BOOL v12 = __OFSUB__(a2, a1);
  uint64_t v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }

  uint64_t v14 = __DataStorage._length.getter();
  if (v14 >= v13) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v14;
  }
  uint64_t v16 = v11 + v15;
  if (v11) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0LL;
  }
  sub_100212844(v11, v17, a4, a5);
  if (!v5) {
    char v18 = v19;
  }
  return v18 & 1;
}

void sub_100213838(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }

uint64_t sub_100213884()
{
  return ((uint64_t (*)(void))((char *)&loc_1002138B8 + *((int *)qword_100213A90 + (v0 >> 62))))();
}

uint64_t sub_1002138C8@<X0>(int a1@<W8>)
{
  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1) {
      __asm { BR              X10 }
    }

    char v3 = 1;
  }

  else
  {
    char v3 = 0;
  }

  return v3 & 1;
}

uint64_t sub_100213AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v108 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v106 = (char *)&v105 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  __int128 v111 = (char *)&v105 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v109 = (char *)&v105 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v110 = (char *)&v105 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v112 = (uint64_t)&v105 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v114 = (uint64_t)&v105 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v113 = (uint64_t)&v105 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v23 = (char *)&v105 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v107 = (uint64_t)&v105 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  unint64_t v28 = (char *)&v105 - v27;
  __chkstk_darwin(v26);
  char v30 = (char *)&v105 - v29;
  uint64_t v31 = type metadata accessor for UUID(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v105 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v105 - v36;
  sub_10020CB28();
  sub_10020CB28();
  char v38 = static UUID.== infix(_:_:)(v37, v35);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v40 = v35;
  uint64_t v41 = a2;
  v39(v40, v31);
  v39(v37, v31);
  uint64_t v42 = a1;
  sub_1001A4B84(a1, (uint64_t)v30, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v43 = sub_1001A4B84( a2,  (uint64_t)v28,  type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  if ((v38 & 1) == 0)
  {
    sub_1001A4BC8((uint64_t)v28, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1001A4BC8((uint64_t)v30, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    uint64_t v52 = (uint64_t)v108;
LABEL_16:
    uint64_t v60 = (uint64_t)v111;
    uint64_t v59 = v112;
    uint64_t v61 = (uint64_t)v110;
    uint64_t v58 = v107;
LABEL_17:
    sub_1001A4B84(v42, v58, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1001A4B84(v41, (uint64_t)v23, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    uint64_t v62 = v113;
    goto LABEL_18;
  }

  uint64_t result = NWEndpoint.nw.getter(v43);
  if (!result)
  {
    __break(1u);
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }

  uint64_t v45 = result;
  uint64_t v46 = a2;
  uint64_t contact_id = nw_endpoint_get_contact_id();
  uint64_t v48 = swift_unknownObjectRelease(v45);
  if (contact_id)
  {
    uint64_t v48 = String.init(cString:)(contact_id);
    uint64_t v49 = v48;
    uint64_t v51 = v50;
  }

  else
  {
    uint64_t v49 = 0LL;
    uint64_t v51 = 0LL;
  }

  uint64_t result = NWEndpoint.nw.getter(v48);
  if (!result) {
    goto LABEL_86;
  }
  uint64_t v53 = result;
  uint64_t v54 = nw_endpoint_get_contact_id();
  swift_unknownObjectRelease(v53);
  if (!v54)
  {
    if (v51) {
      goto LABEL_15;
    }
    uint64_t v57 = 0LL;
LABEL_28:
    uint64_t v52 = (uint64_t)v108;
    uint64_t v41 = v46;
    sub_1001A4BC8((uint64_t)v28, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1001A4BC8((uint64_t)v30, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    uint64_t v42 = a1;
    uint64_t v58 = v107;
    if (!v57) {
      goto LABEL_30;
    }
    swift_bridgeObjectRelease(v57);
    uint64_t v60 = (uint64_t)v111;
    uint64_t v59 = v112;
    uint64_t v61 = (uint64_t)v110;
    goto LABEL_17;
  }

  uint64_t v55 = String.init(cString:)(v54);
  uint64_t v57 = v56;
  if (!v51) {
    goto LABEL_28;
  }
  if (!v56)
  {
LABEL_15:
    swift_bridgeObjectRetain(v51);
    sub_1001A4BC8((uint64_t)v28, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1001A4BC8((uint64_t)v30, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease_n(v51, 2LL);
    uint64_t v52 = (uint64_t)v108;
    uint64_t v41 = v46;
    uint64_t v42 = a1;
    goto LABEL_16;
  }

  if (v49 == v55 && v51 == v56)
  {
    swift_bridgeObjectRelease(v56);
    sub_1001A4BC8((uint64_t)v28, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1001A4BC8((uint64_t)v30, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease(v51);
    uint64_t v58 = v107;
    uint64_t v52 = (uint64_t)v108;
    uint64_t v41 = v46;
    uint64_t v42 = a1;
LABEL_30:
    sub_1001A4B84(v42, v58, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1001A4B84(v41, (uint64_t)v23, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    uint64_t v59 = v112;
    goto LABEL_31;
  }

  char v73 = _stringCompareWithSmolCheck(_:_:expecting:)(v49, v51, v55, v56, 0LL);
  swift_bridgeObjectRelease(v57);
  sub_1001A4BC8((uint64_t)v28, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  sub_1001A4BC8((uint64_t)v30, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  swift_bridgeObjectRelease(v51);
  uint64_t v58 = v107;
  sub_1001A4B84(a1, v107, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v41 = v46;
  uint64_t v42 = a1;
  sub_1001A4B84(v41, (uint64_t)v23, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v52 = (uint64_t)v108;
  uint64_t v60 = (uint64_t)v111;
  uint64_t v59 = v112;
  uint64_t v61 = (uint64_t)v110;
  uint64_t v62 = v113;
  if ((v73 & 1) == 0)
  {
LABEL_18:
    sub_1001A4BC8((uint64_t)v23, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1001A4BC8(v58, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    uint64_t v63 = (uint64_t)v109;
LABEL_19:
    sub_1001A4B84(v42, v62, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    uint64_t v64 = v114;
    sub_1001A4B84(v41, v114, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    goto LABEL_20;
  }

uint64_t sub_10021473C(void *a1, void *a2)
{
  uint64_t v129 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  uint64_t v4 = __chkstk_darwin(v129);
  CFStringRef v120 = &v117[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v6 = __chkstk_darwin(v4);
  CFStringRef v123 = &v117[-v7];
  uint64_t v8 = __chkstk_darwin(v6);
  CFStringRef v122 = &v117[-v9];
  uint64_t v10 = __chkstk_darwin(v8);
  CFStringRef v121 = &v117[-v11];
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v128 = &v117[-v13];
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v124 = &v117[-v15];
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v125 = &v117[-v17];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v126 = &v117[-v19];
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v127 = &v117[-v21];
  uint64_t v22 = __chkstk_darwin(v20);
  CFStringRef v119 = &v117[-v23];
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = &v117[-v25];
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = &v117[-v28];
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = &v117[-v31];
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = &v117[-v34];
  uint64_t v36 = __chkstk_darwin(v33);
  char v38 = &v117[-v37];
  uint64_t v39 = __chkstk_darwin(v36);
  uint64_t v41 = &v117[-v40];
  __chkstk_darwin(v39);
  uint64_t v43 = &v117[-v42];
  uint64_t v44 = a1[1];
  uint64_t v45 = a2[1];
  if (*a1 == *a2 && v44 == v45)
  {
    sub_1001A4B84( (uint64_t)a1,  (uint64_t)&v117[-v42],  type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  }

  else
  {
    char v46 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v44, *a2, v45, 0LL);
    sub_1001A4B84((uint64_t)a1, (uint64_t)v43, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if ((v46 & 1) == 0)
    {
      sub_1001A4BC8((uint64_t)v43, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_1001A4B84((uint64_t)a1, (uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_1001A4B84((uint64_t)a2, (uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_1001A4BC8((uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_1001A4BC8((uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_16:
      uint64_t v53 = (uint64_t)v124;
      sub_1001A4B84((uint64_t)a1, (uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_1001A4B84((uint64_t)a2, (uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t v54 = v128;
      goto LABEL_17;
    }
  }

  sub_1001A4BC8((uint64_t)v43, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_1001A4B84((uint64_t)a1, (uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_1001A4B84((uint64_t)a2, (uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v47 = v129[7];
  uint64_t v48 = &v41[v47];
  uint64_t v49 = *(void *)&v41[v47 + 8];
  uint64_t v50 = &v38[v47];
  uint64_t v51 = v50[1];
  if (!v49)
  {
    swift_bridgeObjectRetain(v50[1]);
    sub_1001A4BC8((uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8((uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (!v51) {
      goto LABEL_12;
    }
    uint64_t v52 = v51;
    goto LABEL_15;
  }

  if (!v51)
  {
    swift_bridgeObjectRetain(v49);
    sub_1001A4BC8((uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8((uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    uint64_t v52 = v49;
LABEL_15:
    swift_bridgeObjectRelease(v52);
    goto LABEL_16;
  }

  if (*v48 == *v50 && v49 == v51)
  {
    swift_bridgeObjectRetain(v49);
    sub_1001A4BC8((uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8((uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    swift_bridgeObjectRelease(v49);
LABEL_12:
    sub_1001A4B84((uint64_t)a1, (uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4B84((uint64_t)a2, (uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    uint64_t v53 = (uint64_t)v124;
    uint64_t v54 = v128;
    goto LABEL_32;
  }

  int v118 = _stringCompareWithSmolCheck(_:_:expecting:)(*v48, v49, *v50, v50[1], 0LL);
  swift_bridgeObjectRetain(v49);
  sub_1001A4BC8((uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_1001A4BC8((uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  swift_bridgeObjectRelease(v49);
  sub_1001A4B84((uint64_t)a1, (uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_1001A4B84((uint64_t)a2, (uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v53 = (uint64_t)v124;
  uint64_t v54 = v128;
  if ((v118 & 1) == 0)
  {
LABEL_17:
    sub_1001A4BC8((uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8((uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_18:
    uint64_t v55 = (uint64_t)v119;
    uint64_t v56 = (uint64_t)v120;
    sub_1001A4B84((uint64_t)a1, (uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4B84((uint64_t)a2, (uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_19;
  }

LABEL_65:
  uint64_t v89 = v129[11];
  uint64_t v90 = &v60[v89];
  uint64_t v91 = *(void *)&v60[v89 + 8];
  uint64_t v92 = &v61[v89];
  uint64_t v93 = v92[1];
  if (!v91)
  {
    swift_bridgeObjectRetain(v92[1]);
    sub_1001A4BC8((uint64_t)v61, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8((uint64_t)v60, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (!v93) {
      goto LABEL_72;
    }
    uint64_t v95 = v93;
    goto LABEL_74;
  }

  if (!v93)
  {
    uint64_t v96 = (uint64_t)v60;
    uint64_t v97 = v91;
    swift_bridgeObjectRetain(v91);
    sub_1001A4BC8((uint64_t)v61, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8(v96, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    uint64_t v95 = v97;
LABEL_74:
    swift_bridgeObjectRelease(v95);
    goto LABEL_24;
  }

  if (*v90 == *v92 && v91 == v93)
  {
    uint64_t v94 = v91;
    swift_bridgeObjectRetain(v91);
    sub_1001A4BC8((uint64_t)v125, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8((uint64_t)v126, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    swift_bridgeObjectRelease(v94);
LABEL_72:
    sub_1001A4B84((uint64_t)a1, v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4B84((uint64_t)a2, (uint64_t)v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_76;
  }

  uint64_t v98 = v91;
  char v99 = _stringCompareWithSmolCheck(_:_:expecting:)(*v90, v91, *v92, v92[1], 0LL);
  swift_bridgeObjectRetain(v98);
  sub_1001A4BC8((uint64_t)v125, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_1001A4BC8((uint64_t)v126, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  swift_bridgeObjectRelease(v98);
  sub_1001A4B84((uint64_t)a1, v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v54 = v128;
  sub_1001A4B84((uint64_t)a2, (uint64_t)v128, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  if ((v99 & 1) == 0)
  {
LABEL_25:
    sub_1001A4BC8((uint64_t)v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8(v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_26:
    sub_1001A4B84((uint64_t)a1, v58, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4B84((uint64_t)a2, v57, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_27;
  }

                      __break(1u);
                      goto LABEL_66;
                    }

LABEL_76:
  uint64_t v100 = v129[12];
  uint64_t v101 = (void *)(v53 + v100);
  uint64_t v102 = *(void *)(v53 + v100 + 8);
  uint64_t v103 = &v54[v100];
  uint64_t v104 = v103[1];
  if (!v102)
  {
    swift_bridgeObjectRetain(v103[1]);
    sub_1001A4BC8((uint64_t)v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8(v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (!v104) {
      goto LABEL_83;
    }
    uint64_t v105 = v104;
    goto LABEL_85;
  }

  if (!v104)
  {
    swift_bridgeObjectRetain(v102);
    sub_1001A4BC8((uint64_t)v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8(v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    uint64_t v105 = v102;
LABEL_85:
    swift_bridgeObjectRelease(v105);
    goto LABEL_26;
  }

  if (*v101 == *v103 && v102 == v104)
  {
    swift_bridgeObjectRetain(v102);
    sub_1001A4BC8((uint64_t)v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8(v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    swift_bridgeObjectRelease(v102);
LABEL_83:
    sub_1001A4B84((uint64_t)a1, v58, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4B84((uint64_t)a2, v57, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_87;
  }

  char v106 = _stringCompareWithSmolCheck(_:_:expecting:)(*v101, v102, *v103, v103[1], 0LL);
  swift_bridgeObjectRetain(v102);
  sub_1001A4BC8((uint64_t)v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_1001A4BC8(v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  swift_bridgeObjectRelease(v102);
  sub_1001A4B84((uint64_t)a1, v58, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_1001A4B84((uint64_t)a2, v57, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  if ((v106 & 1) == 0)
  {
LABEL_27:
    sub_1001A4BC8(v57, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8(v58, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    uint64_t v62 = v123;
    sub_1001A4B84((uint64_t)a1, (uint64_t)v123, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4B84((uint64_t)a2, v56, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_28:
    sub_1001A4BC8(v56, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8((uint64_t)v62, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_29;
  }

LABEL_87:
  uint64_t v107 = v129;
  int v108 = *(unsigned __int8 *)(v58 + v129[13]);
  sub_1001A4BC8(v58, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  int v109 = *(unsigned __int8 *)(v57 + v107[13]);
  sub_1001A4BC8(v57, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v62 = v123;
  sub_1001A4B84((uint64_t)a1, (uint64_t)v123, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_1001A4B84((uint64_t)a2, v56, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  if (v108 != v109) {
    goto LABEL_28;
  }
  uint64_t v110 = v107[14];
  uint64_t v112 = *(void *)&v62[v110];
  unint64_t v111 = *(void *)&v62[v110 + 8];
  uint64_t v113 = (uint64_t *)(v56 + v110);
  uint64_t v114 = *v113;
  unint64_t v115 = v113[1];
  if (v111 >> 60 == 15)
  {
    sub_1001A4C04(v114, v115);
    sub_1001A4BC8(v56, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8((uint64_t)v62, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (v115 >> 60 == 15)
    {
      sub_100189B0C(v112, v111);
      char v63 = 1;
      return v63 & 1;
    }
  }

  else
  {
    if (v115 >> 60 != 15)
    {
      sub_1001A4C04(v112, v111);
      sub_1001A4C04(v114, v115);
      sub_1001A4C04(v112, v111);
      sub_100213838(v112, v111);
      char v63 = v116;
      sub_100189B0C(v114, v115);
      sub_100189B0C(v112, v111);
      sub_1001A4BC8(v56, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_1001A4BC8((uint64_t)v62, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_100189B0C(v112, v111);
      return v63 & 1;
    }

    sub_10019BA8C(v112, v111);
    sub_10019BA8C(v112, v111);
    sub_1001A4BC8(v56, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8((uint64_t)v62, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_100189B0C(v112, v111);
  }

  sub_100189B0C(v112, v111);
  sub_100189B0C(v114, v115);
LABEL_29:
  char v63 = 0;
  return v63 & 1;
}

      v246 = v314;
      v245 = v315;
      sub_10019A708(v313, v314);
      v248 = swift_unknownObjectWeakLoadStrong( &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate],  v247);
      if (!v248) {
        goto LABEL_90;
      }
      uint64_t v110 = (void *)v248;
      v250 = v314;
      v249 = v315;
      sub_10019A708(v313, v314);
      v251 = v291;
      (*(void (**)(uint64_t))(*(void *)(v249 + 8) + 32LL))(v250);
      v114.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
      v25[1](v251, v292);
      [v110 manager:a2 didEnableAuthenticationFor:v114.super.isa];
      goto LABEL_35;
    }
  }

  CFStringRef v119 = v314;
  int v118 = v315;
  sub_10019A708(v313, v314);
  (*(void (**)(__int128 *__return_ptr, uint64_t))(*(void *)(v118 + 8) + 64LL))(&v297, v119);
  if (!v298)
  {
    sub_100187100((uint64_t)&v297, &qword_100654080);
    unint64_t v149 = sub_10019A6C4((uint64_t)v316, (uint64_t)&v305);
    unint64_t v150 = (os_log_s *)Logger.logObject.getter(v149);
    v151 = static os_log_type_t.error.getter(v150);
    if (os_log_type_enabled(v150, v151))
    {
      uint64_t v152 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v153 = swift_slowAlloc(32LL, -1LL);
      *(void *)&v297 = v153;
      *(_DWORD *)uint64_t v152 = 136315138;
      sub_10019A708(&v305, *((uint64_t *)&v306 + 1));
      uint64_t v154 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      os_log_type_t v155 = dispatch thunk of CustomStringConvertible.description.getter(v292, v154);
      v157 = (const char *)v156;
      v293 = sub_10018CDB4(v155, v156, (uint64_t *)&v297);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v293, v294, v152 + 4, v152 + 12);
      swift_bridgeObjectRelease(v157);
      sub_10018709C(&v305);
      _os_log_impl((void *)&_mh_execute_header, v150, v151, "No peer device for session: %s", v152, 0xCu);
      swift_arrayDestroy(v153, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v153, -1LL, -1LL);
      swift_slowDealloc(v152, -1LL, -1LL);
    }

    else
    {
      sub_10018709C(&v305);
    }

LABEL_57:
    uint64_t v170 = v314;
    v169 = v315;
    sub_10019A708(v313, v314);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v169 + 8) + 40LL))(v170) == 5)
    {
      uint64_t v171 = v280;
      Date.init()(5LL);
      uint64_t v172 = type metadata accessor for Date(0LL);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v172 - 8) + 56LL))(v171, 0LL, 1LL, v172);
      unint64_t v173 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager];
      swift_beginAccess( &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager],  &v305,  33LL,  0LL);
      unint64_t v174 = *(void *)(v173 + 24);
      uint64_t v175 = *(void *)(v173 + 32);
      sub_1002499B4(v173, v174);
      (*(void (**)(char *, uint64_t, uint64_t))(v175 + 16))(v171, v174, v175);
      swift_endAccess(&v305);
    }

    goto LABEL_59;
  }

  sub_1001CE0D0(&v297, (uint64_t)&v305);
  uint64_t v62 = (char *)*((void *)&v306 + 1);
  CFStringRef v120 = v307;
  sub_10019A708(&v305, *((uint64_t *)&v306 + 1));
  CFStringRef v121 = (*(uint64_t (**)(char *, uint64_t))(v120 + 8))(v62, v120);
  if (!v122)
  {
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }

  CFStringRef v123 = v122;
  sub_10047672C(v121, v122);
  swift_bridgeObjectRelease(v123);
  uint64_t v62 = (char *)*((void *)&v306 + 1);
  uint64_t v124 = v307;
  sub_10019A708(&v305, *((uint64_t *)&v306 + 1));
  uint64_t v125 = (*(uint64_t (**)(char *, uint64_t))(v124 + 8))(v62, v124);
  if (!v126)
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }

  uint64_t v127 = v125;
  uint64_t v128 = v126;
  swift_beginAccess( &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID],  &v293,  33LL,  0LL);
  uint64_t v129 = sub_1003A448C(&v297, v127, (uint64_t)v128);
  uint64_t v131 = v130;
  uint64_t v132 = type metadata accessor for RegistrationState(0LL);
  ((void (*)(__int128 *, void))v129)(&v297, 0LL);
  swift_endAccess(&v293);
  Class v133 = swift_bridgeObjectRelease(v128);
  BOOL v134 = v281;
  uint64_t v135 = v289;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v96 + 16))(v281, v285, v289, v133);
  sub_10019A6C4((uint64_t)&v305, (uint64_t)&v297);
  sub_10019A6C4((uint64_t)&v305, (uint64_t)&v293);
  uint64_t v62 = a2;
  v136 = (void *)Logger.logObject.getter(v62);
  LODWORD(v29_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = static os_log_type_t.default.getter();
  if (!os_log_type_enabled((os_log_t)v136, (os_log_type_t)v290))
  {

    sub_10018709C(&v297);
    sub_10018709C(&v293);

    (*(void (**)(char *, uint64_t))(v96 + 8))(v134, v135);
LABEL_56:
    sub_10018709C(&v305);
    goto LABEL_57;
  }

  uint64_t v137 = swift_slowAlloc(22LL, -1LL);
  v283 = (uint64_t (*)(uint64_t))swift_slowAlloc(64LL, -1LL);
  v300[0] = (uint64_t)v283;
  *(_DWORD *)uint64_t v137 = 136315394;
  uint64_t v138 = v298;
  uint64_t v139 = v299;
  sub_10019A708(&v297, v298);
  unint64_t v140 = (*(uint64_t (**)(uint64_t, uint64_t))(v139 + 8))(v138, v139);
  if (v141)
  {
    v142 = (const char *)v141;
    v143 = v279;
    sub_10045D5D0(v140, v141, v279);
    swift_bridgeObjectRelease(v142);
    uint64_t v144 = type metadata accessor for Date(0LL);
    uint64_t v145 = *(void *)(v144 - 8);
    uint64_t v146 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v145 + 48))(v143, 1LL, v144);
    if ((_DWORD)v146 == 1)
    {
      sub_100187100(v143, &qword_1006457E8);
      BOOL v147 = (const char *)0xE90000000000003ELL;
      uint64_t v148 = 0x676E697373696D3CLL;
    }

    else
    {
      uint64_t v158 = Date.description.getter(v146);
      uint64_t v159 = v143;
      uint64_t v148 = v158;
      BOOL v147 = v160;
      (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v159, v144);
    }

    unint64_t v161 = v284;
    v301 = sub_10018CDB4(v148, (unint64_t)v147, v300);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, v302, v137 + 4, v137 + 12);

    swift_bridgeObjectRelease(v147);
    sub_10018709C(&v297);
    *(_WORD *)(v137 + 12) = 2080;
    uint64_t v162 = v295;
    uint64_t v163 = v296;
    sub_10019A708(&v293, v295);
    uint64_t v164 = (*(uint64_t (**)(uint64_t, uint64_t))(v163 + 8))(v162, v163);
    if (v165)
    {
      os_log_type_t v166 = v165;
    }

    else
    {
      v301 = 0LL;
      v302[0] = (const char *)0xE000000000000000LL;
      _StringGuts.grow(_:)(17LL);
      swift_bridgeObjectRelease(v302[0]);
      os_log_type_t v166 = (const char *)0x80000001005046B0LL;
      uint64_t v164 = 0xD000000000000015LL;
    }

    BOOL v167 = v289;
    v301 = sub_10018CDB4(v164, (unint64_t)v166, v300);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, v302, v137 + 14, v137 + 22);
    swift_bridgeObjectRelease(v166);
    sub_10018709C(&v293);
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v136,  (os_log_type_t)v290,  "Recording last registration date as %s for device: %s",  (uint8_t *)v137,  0x16u);
    uint64_t v168 = v283;
    swift_arrayDestroy(v283, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v168, -1LL, -1LL);
    swift_slowDealloc(v137, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v161 + 8))(v281, v167);
    goto LABEL_56;
  }

uint64_t sub_10021571C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v37 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v36 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v36 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v36 - v19;
  sub_100213838(*a1, a1[1]);
  char v22 = v21;
  sub_1001A4B84((uint64_t)a1, (uint64_t)v20, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_1001A4B84(a2, (uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  if ((v22 & 1) == 0)
  {
    sub_1001A4BC8((uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_1001A4BC8((uint64_t)v20, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_1001A4B84((uint64_t)a1, (uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_1001A4B84(a2, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    goto LABEL_12;
  }

  char v23 = static UUID.== infix(_:_:)(&v20[v4[5]], &v18[v4[5]]);
  sub_1001A4BC8((uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_1001A4BC8((uint64_t)v20, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_1001A4B84((uint64_t)a1, (uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_1001A4B84(a2, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  if ((v23 & 1) == 0)
  {
LABEL_12:
    sub_1001A4BC8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_1001A4BC8((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    goto LABEL_13;
  }

  uint64_t v24 = v4[7];
  uint64_t v25 = &v15[v24];
  uint64_t v26 = *(void *)&v15[v24 + 8];
  uint64_t v27 = &v12[v24];
  uint64_t v28 = *((void *)v27 + 1);
  if (!v26)
  {
    swift_bridgeObjectRetain(*((void *)v27 + 1));
    sub_1001A4BC8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_1001A4BC8((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    if (!v28)
    {
LABEL_20:
      sub_1001A4B84((uint64_t)a1, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      uint64_t v31 = v37;
      sub_1001A4B84(a2, v37, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
LABEL_21:
      char v34 = v9[v4[8]];
      sub_1001A4BC8((uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      char v35 = *(_BYTE *)(v31 + v4[8]);
      sub_1001A4BC8(v31, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      char v32 = v34 ^ v35 ^ 1;
      return v32 & 1;
    }

    swift_bridgeObjectRelease(v28);
LABEL_13:
    uint64_t v31 = v37;
    sub_1001A4B84((uint64_t)a1, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_1001A4B84(a2, v31, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    goto LABEL_14;
  }

  if (!v28)
  {
    swift_bridgeObjectRetain(v26);
    sub_1001A4BC8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_1001A4BC8((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    swift_bridgeObjectRelease(v26);
    goto LABEL_13;
  }

  if (*(void *)v25 == *(void *)v27 && v26 == v28)
  {
    swift_bridgeObjectRetain(v26);
    sub_1001A4BC8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_1001A4BC8((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    swift_bridgeObjectRelease(v26);
    goto LABEL_20;
  }

  char v30 = _stringCompareWithSmolCheck(_:_:expecting:)(*(void *)v25, v26, *(void *)v27, *((void *)v27 + 1), 0LL);
  swift_bridgeObjectRetain(v26);
  sub_1001A4BC8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_1001A4BC8((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  swift_bridgeObjectRelease(v26);
  sub_1001A4B84((uint64_t)a1, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  uint64_t v31 = v37;
  sub_1001A4B84(a2, v37, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  if ((v30 & 1) != 0) {
    goto LABEL_21;
  }
LABEL_14:
  sub_1001A4BC8(v31, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_1001A4BC8((uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  char v32 = 0;
  return v32 & 1;
}

void sub_100215B08(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
  __chkstk_darwin(v2);
  v16[1] = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  uint64_t v10 = sub_100183098(&qword_100646C60);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1001A4B84(v17, (uint64_t)v13, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4B84(v18, v14, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v15 = (char *)sub_100215CE8 + 4 * byte_1004CF0D4[swift_getEnumCaseMultiPayload(v13, v6)];
  __asm { BR              X10 }

uint64_t sub_100215CE8()
{
  if (swift_getEnumCaseMultiPayload(v4, v2))
  {
    sub_1001A4BC8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_100187100(v0, &qword_100646C60);
    char v5 = 0;
  }

  else
  {
    sub_1001A4B40(v4, v3, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    char v5 = sub_100213AB0(v1, v3);
    sub_1001A4BC8(v3, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1001A4BC8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1001A4BC8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  return v5 & 1;
}

void *sub_100215F18(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[4];
  unint64_t v4 = a1[5];
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(v2);
  sub_100189B0C(v3, v4);
  return a1;
}

uint64_t type metadata accessor for SDAirDropContentHandlerMixedTypes()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary33SDAirDropContentHandlerMixedTypes);
}

uint64_t sub_100215F84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerMixedTypes();
  uint64_t result = swift_allocObject(v2, 16LL, 7LL);
  *a1 = result;
  return result;
}

uint64_t sub_100215FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100183098((uint64_t *)&unk_1006563F0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a2, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0LL, 1LL, v9);
  sub_10026664C(a1, 0LL, 1, a3);
  return sub_100187334((uint64_t)v8);
}

void sub_10021609C(uint64_t a1, char a2)
{
  uint64_t v3 = SFAirDropReceive.AskRequest.files.getter();
  uint64_t v4 = *(void *)(v3 + 16);
  __n128 v5 = swift_bridgeObjectRelease(v3);
  uint64_t v6 = SFAirDropReceive.AskRequest.urlItems.getter(v5);
  uint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRelease(v6);
  uint64_t v8 = v4 + v7;
  if (__OFADD__(v4, v7))
  {
    __break(1u);
  }

  else
  {
    uint64_t v9 = sub_100183098((uint64_t *)&unk_100650440);
    uint64_t inited = swift_initStackObject(v9, v27);
    *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(inited + 32) = 0x5F434952454E4547LL;
    uint64_t v11 = inited + 32;
    *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0xEC0000004D455449LL;
    *(void *)(inited + 48) = v8;
    swift_bridgeObjectRetain(0xEC0000004D455449LL);
    swift_bridgeObjectRetain(inited);
    v12._uint64_t countAndFlagsBits = 95LL;
    v12._object = (void *)0xE100000000000000LL;
    String.append(_:)(v12);
    v13._uint64_t countAndFlagsBits = 0x5F434952454E4547LL;
    v13._object = (void *)0xEC0000004D455449LL;
    String.append(_:)(v13);
    swift_bridgeObjectRelease(0xEC0000004D455449LL);
    if (v8 > 1)
    {
      v14._uint64_t countAndFlagsBits = 0x4C4152554C505FLL;
      v14._object = (void *)0xE700000000000000LL;
      String.append(_:)(v14);
    }

    swift_bridgeObjectRelease(inited);
    if ((a2 & 1) != 0)
    {
      v15._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
      v15._object = (void *)0xEC00000044455A49LL;
      String.append(_:)(v15);
    }

    v16._uint64_t countAndFlagsBits = 0x545845545FLL;
    v16._object = (void *)0xE500000000000000LL;
    String.append(_:)(v16);
    swift_setDeallocating(inited);
    uint64_t v17 = *(void *)(inited + 16);
    uint64_t v18 = sub_100183098(&qword_100646EA0);
    swift_arrayDestroy(v11, v17, v18);
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(0xEF524546534E4152LL);
    id v21 = (id)SFLocalizedStringForKey(v19, v20);

    if (v21)
    {
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      uint64_t v24 = v23;

      uint64_t v25 = sub_100183098(&qword_1006483E0);
      uint64_t v26 = swift_allocObject(v25, 72LL, 7LL);
      *(_OWORD *)(v26 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
      *(void *)(v26 + 56) = &type metadata for Int;
      *(void *)(v26 + 64) = &protocol witness table for Int;
      *(void *)(v26 + 32) = v8;
      static String.localizedStringWithFormat(_:_:)(v22, v24, v26);
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v26);
      return;
    }
  }

  __break(1u);
}

uint64_t sub_100216318()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_1006484C8);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_1006484C8);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1002163A8(uint64_t a1, const char *a2)
{
  uint64_t v96 = a1;
  uint64_t v98 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v4 = (char *)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v5 = (const char *)0x80000001005059D0LL;
  NSString v6 = String._bridgeToObjectiveC()();
  id v8 = (id)SFLocalizedStringForKey(v6, v7);

  if (v8)
  {
    uint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    __n128 v5 = v9;
  }

  else
  {
    uint64_t v94 = 0xD000000000000012LL;
  }

  uint64_t v10 = 0xD000000000000016LL;
  uint64_t v11 = (const char *)0x80000001005059F0LL;
  NSString v12 = String._bridgeToObjectiveC()();
  id v14 = (id)SFLocalizedStringForKey(v12, v13);

  if (v14)
  {
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    uint64_t v11 = v15;
  }

  uint64_t v16 = 0xD00000000000001ALL;
  uint64_t v17 = (const char *)0x8000000100505A10LL;
  NSString v18 = String._bridgeToObjectiveC()();
  id v20 = (id)SFLocalizedStringForKey(v18, v19);

  uint64_t v95 = a2;
  uint64_t v93 = v10;
  if (v20)
  {
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    uint64_t v17 = v21;
  }

  uint64_t v22 = 0xD000000000000018LL;
  uint64_t v23 = (const char *)0x8000000100505A30LL;
  NSString v24 = String._bridgeToObjectiveC()();
  id v26 = (id)SFLocalizedStringForKey(v24, v25);

  char v99 = v17;
  uint64_t v100 = v11;
  if (v26)
  {
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    uint64_t v23 = v27;
  }

  uint64_t v28 = 0xD000000000000013LL;
  uint64_t v29 = (const char *)0x8000000100505A50LL;
  NSString v30 = String._bridgeToObjectiveC()();
  id v32 = (id)SFLocalizedStringForKey(v30, v31);

  uint64_t v101 = v5;
  if (v32)
  {
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    uint64_t v29 = v33;
  }

  char v34 = (const char *)0x8000000100505A70LL;
  NSString v35 = String._bridgeToObjectiveC()();
  id v37 = (id)SFLocalizedStringForKey(v35, v36);

  uint64_t v92 = v16;
  if (v37)
  {
    uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    char v34 = v38;
  }

  else
  {
    uint64_t v91 = 0xD000000000000012LL;
  }

  uint64_t v39 = 0xD000000000000013LL;
  uint64_t v40 = (const char *)0x8000000100505A90LL;
  NSString v41 = String._bridgeToObjectiveC()();
  id v43 = (id)SFLocalizedStringForKey(v41, v42);

  if (v43)
  {
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    uint64_t v40 = v45;
  }

  type metadata accessor for SFAirDropUserDefaults(0LL, v44);
  char v46 = (void *)static SFAirDropUserDefaults.shared.getter();
  char v47 = SFAirDropUserDefaults.verboseWalkAway.getter();

  sub_10041A534((uint64_t)v4);
  uint64_t v48 = v98;
  int v49 = (*(uint64_t (**)(char *, uint64_t))(v97 + 88))(v4, v98);
  if (v49 == enum case for SFNWInterfaceType.awdl(_:))
  {
    *(void *)&double v50 = swift_bridgeObjectRelease(v40).n128_u64[0];
    *(void *)&double v51 = swift_bridgeObjectRelease(v34, v50).n128_u64[0];
    *(void *)&double v52 = swift_bridgeObjectRelease(v29, v51).n128_u64[0];
    *(void *)&double v53 = swift_bridgeObjectRelease(v23, v52).n128_u64[0];
    *(void *)&double v54 = swift_bridgeObjectRelease(v99, v53).n128_u64[0];
    *(void *)&double v55 = swift_bridgeObjectRelease(v100, v54).n128_u64[0];
    if ((v47 & 1) != 0) {
      return v94;
    }
    unint64_t v62 = swift_bridgeObjectRelease(v101, v55, v91).n128_u64[0];
    goto LABEL_23;
  }

  if (v49 == enum case for SFNWInterfaceType.cellular(_:))
  {
    *(void *)&double v57 = swift_bridgeObjectRelease(v40).n128_u64[0];
    *(void *)&double v58 = swift_bridgeObjectRelease(v34, v57).n128_u64[0];
    *(void *)&double v59 = swift_bridgeObjectRelease(v29, v58).n128_u64[0];
    *(void *)&double v60 = swift_bridgeObjectRelease(v23, v59).n128_u64[0];
    *(void *)&double v61 = swift_bridgeObjectRelease(v99, v60).n128_u64[0];
    swift_bridgeObjectRelease(v101, v61);
    return v93;
  }

  if (v49 == enum case for SFNWInterfaceType.directWired(_:))
  {
    *(void *)&double v63 = swift_bridgeObjectRelease(v40).n128_u64[0];
    *(void *)&double v64 = swift_bridgeObjectRelease(v34, v63).n128_u64[0];
    *(void *)&double v65 = swift_bridgeObjectRelease(v29, v64).n128_u64[0];
    *(void *)&double v66 = swift_bridgeObjectRelease(v23, v65).n128_u64[0];
    *(void *)&double v67 = swift_bridgeObjectRelease(v100, v66).n128_u64[0];
    swift_bridgeObjectRelease(v101, v67, v91);
    return v92;
  }

  if (v49 == enum case for SFNWInterfaceType.localWiFi(_:))
  {
    *(void *)&double v68 = swift_bridgeObjectRelease(v40).n128_u64[0];
    *(void *)&double v69 = swift_bridgeObjectRelease(v34, v68).n128_u64[0];
    *(void *)&double v70 = swift_bridgeObjectRelease(v29, v69).n128_u64[0];
    *(void *)&double v71 = swift_bridgeObjectRelease(v99, v70).n128_u64[0];
    *(void *)&double v72 = swift_bridgeObjectRelease(v100, v71).n128_u64[0];
    *(void *)&double v73 = swift_bridgeObjectRelease(v101, v72).n128_u64[0];
    if ((v47 & 1) != 0) {
      return v22;
    }
    unint64_t v62 = swift_bridgeObjectRelease(v23, v73, v91).n128_u64[0];
    goto LABEL_23;
  }

  if (v49 == enum case for SFNWInterfaceType.other(_:))
  {
    *(void *)&double v74 = swift_bridgeObjectRelease(v40).n128_u64[0];
    *(void *)&double v75 = swift_bridgeObjectRelease(v34, v74).n128_u64[0];
    *(void *)&double v76 = swift_bridgeObjectRelease(v23, v75).n128_u64[0];
    *(void *)&double v77 = swift_bridgeObjectRelease(v99, v76).n128_u64[0];
    *(void *)&double v78 = swift_bridgeObjectRelease(v100, v77).n128_u64[0];
    *(void *)&double v79 = swift_bridgeObjectRelease(v101, v78).n128_u64[0];
    if ((v47 & 1) != 0) {
      return v28;
    }
    unint64_t v62 = swift_bridgeObjectRelease(v29, v79, v91).n128_u64[0];
    goto LABEL_23;
  }

  if (v49 == enum case for SFNWInterfaceType.wifi(_:))
  {
    *(void *)&double v80 = swift_bridgeObjectRelease(v40).n128_u64[0];
    *(void *)&double v81 = swift_bridgeObjectRelease(v29, v80).n128_u64[0];
    *(void *)&double v82 = swift_bridgeObjectRelease(v23, v81).n128_u64[0];
    *(void *)&double v83 = swift_bridgeObjectRelease(v99, v82).n128_u64[0];
    *(void *)&double v84 = swift_bridgeObjectRelease(v100, v83).n128_u64[0];
    *(void *)&double v85 = swift_bridgeObjectRelease(v101, v84).n128_u64[0];
    if ((v47 & 1) != 0) {
      return v91;
    }
    unint64_t v62 = swift_bridgeObjectRelease(v34, v85, v91).n128_u64[0];
LABEL_23:
    swift_bridgeObjectRetain(v95, *(double *)&v62);
    return v96;
  }

  if (v49 != enum case for SFNWInterfaceType.wired(_:))
  {
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v48, v48);
    __break(1u);
    return result;
  }

  *(void *)&double v86 = swift_bridgeObjectRelease(v34).n128_u64[0];
  *(void *)&double v87 = swift_bridgeObjectRelease(v29, v86).n128_u64[0];
  *(void *)&double v88 = swift_bridgeObjectRelease(v23, v87).n128_u64[0];
  *(void *)&double v89 = swift_bridgeObjectRelease(v100, v88).n128_u64[0];
  *(void *)&double v90 = swift_bridgeObjectRelease(v101, v89).n128_u64[0];
  if ((v47 & 1) != 0)
  {
    swift_bridgeObjectRelease(v99, v90);
    return v39;
  }

  swift_bridgeObjectRelease(v40, v90, v91);
  return v92;
}

uint64_t sub_10021696C()
{
  uint64_t v0 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v108 = *(void *)(v0 - 8);
  uint64_t v109 = v0;
  __chkstk_darwin(v0);
  uint64_t v107 = (uint64_t)&v100 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v2 = (const char *)0x80000001005059D0LL;
  NSString v3 = String._bridgeToObjectiveC()();
  id v5 = (id)SFLocalizedStringForKey(v3, v4);

  if (v5)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    uint64_t v2 = v7;
  }

  else
  {
    uint64_t v6 = 0xD000000000000012LL;
  }

  id v8 = (const char *)0x80000001005059F0LL;
  NSString v9 = String._bridgeToObjectiveC()();
  id v11 = (id)SFLocalizedStringForKey(v9, v10);

  uint64_t v104 = v6;
  if (v11)
  {
    uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    id v8 = v12;
  }

  else
  {
    uint64_t v103 = 0xD000000000000016LL;
  }

  NSString v13 = String._bridgeToObjectiveC()();
  id v15 = (id)SFLocalizedStringForKey(v13, v14);

  unint64_t v111 = v8;
  if (v15)
  {
    uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    uint64_t v110 = v16;
  }

  else
  {
    uint64_t v102 = 0xD00000000000001ALL;
    uint64_t v110 = (const char *)0x8000000100505A10LL;
  }

  uint64_t v17 = 0xD000000000000018LL;
  NSString v18 = (const char *)0x8000000100505A30LL;
  NSString v19 = String._bridgeToObjectiveC()();
  id v21 = (id)SFLocalizedStringForKey(v19, v20);

  if (v21)
  {
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    NSString v18 = v22;
  }

  uint64_t v23 = 0xD000000000000013LL;
  NSString v24 = (const char *)0x8000000100505A50LL;
  NSString v25 = String._bridgeToObjectiveC()();
  id v27 = (id)SFLocalizedStringForKey(v25, v26);

  if (v27)
  {
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    NSString v24 = v28;
  }

  uint64_t v29 = (const char *)0x8000000100505A70LL;
  NSString v30 = String._bridgeToObjectiveC()();
  id v32 = (id)SFLocalizedStringForKey(v30, v31);

  if (v32)
  {
    uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    uint64_t v29 = v33;
  }

  else
  {
    uint64_t v101 = 0xD000000000000012LL;
  }

  uint64_t v34 = 0xD000000000000013LL;
  NSString v35 = (const char *)0x8000000100505A90LL;
  NSString v36 = String._bridgeToObjectiveC()();
  id v38 = (id)SFLocalizedStringForKey(v36, v37);

  if (v38)
  {
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    NSString v35 = v40;
  }

  type metadata accessor for SFAirDropUserDefaults(0LL, v39);
  NSString v41 = (void *)static SFAirDropUserDefaults.shared.getter();
  char v42 = SFAirDropUserDefaults.verboseWalkAway.getter();

  uint64_t v43 = *(void *)(v106 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection);
  uint64_t v105 = v23;
  if (!v43)
  {
    if (qword_100643F08 != -1) {
      swift_once(&qword_100643F08, sub_1001EE100);
    }
    uint64_t v56 = type metadata accessor for Logger(0LL);
    uint64_t v57 = sub_100186DE4(v56, (uint64_t)qword_1006473E0);
    double v58 = (os_log_s *)Logger.logObject.getter(v57);
    os_log_type_t v59 = static os_log_type_t.error.getter(v58);
    if (os_log_type_enabled(v58, v59))
    {
      double v60 = v2;
      double v61 = v18;
      char v62 = v42;
      double v63 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)double v63 = 0;
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "UPLOAD connection is not active", v63, 2u);
      double v64 = v63;
      char v42 = v62;
      NSString v18 = v61;
      uint64_t v2 = v60;
      swift_slowDealloc(v64, -1LL, -1LL);
    }

    (*(void (**)(uint64_t, void, uint64_t))(v108 + 104))( v107,  enum case for SFNWInterfaceType.other(_:),  v109);
    goto LABEL_28;
  }

  uint64_t v44 = v2;
  uint64_t v45 = v18;
  char v46 = v42;
  swift_retain(v43);
  uint64_t v47 = v107;
  sub_100410970(v107);
  swift_release(v43);
  uint64_t v48 = v109;
  int v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v108 + 88))(v47, v109);
  if (v49 == enum case for SFNWInterfaceType.awdl(_:))
  {
    *(void *)&double v50 = swift_bridgeObjectRelease(v35).n128_u64[0];
    *(void *)&double v51 = swift_bridgeObjectRelease(v29, v50).n128_u64[0];
    *(void *)&double v52 = swift_bridgeObjectRelease(v24, v51).n128_u64[0];
    *(void *)&double v53 = swift_bridgeObjectRelease(v45, v52).n128_u64[0];
    *(void *)&double v54 = swift_bridgeObjectRelease(v110, v53).n128_u64[0];
    *(void *)&double v55 = swift_bridgeObjectRelease(v111, v54).n128_u64[0];
    if ((v46 & 1) != 0) {
      return v104;
    }
    swift_bridgeObjectRelease(v44, v55);
    return 0LL;
  }

  if (v49 == enum case for SFNWInterfaceType.cellular(_:))
  {
    *(void *)&double v71 = swift_bridgeObjectRelease(v35).n128_u64[0];
    *(void *)&double v72 = swift_bridgeObjectRelease(v29, v71).n128_u64[0];
    *(void *)&double v73 = swift_bridgeObjectRelease(v24, v72).n128_u64[0];
    *(void *)&double v74 = swift_bridgeObjectRelease(v45, v73).n128_u64[0];
    *(void *)&double v75 = swift_bridgeObjectRelease(v110, v74).n128_u64[0];
    swift_bridgeObjectRelease(v44, v75);
    return v103;
  }

  char v42 = v46;
  NSString v18 = v45;
  if (v49 == enum case for SFNWInterfaceType.directWired(_:))
  {
    *(void *)&double v77 = swift_bridgeObjectRelease(v35).n128_u64[0];
    *(void *)&double v78 = swift_bridgeObjectRelease(v29, v77).n128_u64[0];
    *(void *)&double v79 = swift_bridgeObjectRelease(v24, v78).n128_u64[0];
    *(void *)&double v80 = swift_bridgeObjectRelease(v45, v79).n128_u64[0];
    *(void *)&double v81 = swift_bridgeObjectRelease(v111, v80).n128_u64[0];
    swift_bridgeObjectRelease(v44, v81);
    return v102;
  }

  uint64_t v2 = v44;
  if (v49 == enum case for SFNWInterfaceType.localWiFi(_:))
  {
    *(void *)&double v82 = swift_bridgeObjectRelease(v35).n128_u64[0];
    *(void *)&double v83 = swift_bridgeObjectRelease(v29, v82).n128_u64[0];
    *(void *)&double v84 = swift_bridgeObjectRelease(v24, v83).n128_u64[0];
    *(void *)&double v85 = swift_bridgeObjectRelease(v110, v84).n128_u64[0];
    *(void *)&double v86 = swift_bridgeObjectRelease(v111, v85).n128_u64[0];
    *(void *)&double v87 = swift_bridgeObjectRelease(v44, v86).n128_u64[0];
    if ((v42 & 1) != 0) {
      return v17;
    }
    swift_bridgeObjectRelease(v18, v87);
    return 0LL;
  }

  if (v49 == enum case for SFNWInterfaceType.other(_:))
  {
LABEL_28:
    *(void *)&double v65 = swift_bridgeObjectRelease(v111).n128_u64[0];
    *(void *)&double v66 = swift_bridgeObjectRelease(v2, v65).n128_u64[0];
    *(void *)&double v67 = swift_bridgeObjectRelease(v35, v66).n128_u64[0];
    *(void *)&double v68 = swift_bridgeObjectRelease(v29, v67).n128_u64[0];
    *(void *)&double v69 = swift_bridgeObjectRelease(v18, v68).n128_u64[0];
    *(void *)&double v70 = swift_bridgeObjectRelease(v110, v69).n128_u64[0];
    if ((v42 & 1) != 0) {
      return v105;
    }
    swift_bridgeObjectRelease(v24, v70);
    return 0LL;
  }

  if (v49 == enum case for SFNWInterfaceType.wifi(_:))
  {
    *(void *)&double v88 = swift_bridgeObjectRelease(v35).n128_u64[0];
    *(void *)&double v89 = swift_bridgeObjectRelease(v24, v88).n128_u64[0];
    *(void *)&double v90 = swift_bridgeObjectRelease(v18, v89).n128_u64[0];
    *(void *)&double v91 = swift_bridgeObjectRelease(v110, v90).n128_u64[0];
    *(void *)&double v92 = swift_bridgeObjectRelease(v111, v91).n128_u64[0];
    *(void *)&double v93 = swift_bridgeObjectRelease(v44, v92).n128_u64[0];
    if ((v42 & 1) != 0) {
      return v101;
    }
    swift_bridgeObjectRelease(v29, v93);
    return 0LL;
  }

  if (v49 == enum case for SFNWInterfaceType.wired(_:))
  {
    *(void *)&double v94 = swift_bridgeObjectRelease(v29).n128_u64[0];
    *(void *)&double v95 = swift_bridgeObjectRelease(v24, v94).n128_u64[0];
    *(void *)&double v96 = swift_bridgeObjectRelease(v18, v95).n128_u64[0];
    *(void *)&double v97 = swift_bridgeObjectRelease(v111, v96).n128_u64[0];
    *(void *)&double v98 = swift_bridgeObjectRelease(v44, v97).n128_u64[0];
    if ((v42 & 1) != 0) {
      char v99 = v110;
    }
    else {
      char v99 = v35;
    }
    if ((v42 & 1) != 0) {
      uint64_t v17 = v34;
    }
    else {
      uint64_t v17 = v102;
    }
    swift_bridgeObjectRelease(v99, v98);
    return v17;
  }

  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v48, v48);
  __break(1u);
  return result;
}

uint64_t sub_100217040()
{
  v1[7] = v0;
  uint64_t v2 = sub_100183098(&qword_100646560);
  v1[8] = swift_task_alloc((*(void *)(*(void *)(v2 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for SFAirDropSend.Failure(0LL);
  v1[9] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[10] = v4;
  v1[11] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SFAirDropSend.Transfer.State(0LL);
  v1[12] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v1[13] = v6;
  unint64_t v7 = (*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v1[14] = swift_task_alloc(v7);
  v1[15] = swift_task_alloc(v7);
  uint64_t v8 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  v1[16] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v1[17] = v9;
  unint64_t v10 = (*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v1[18] = swift_task_alloc(v10);
  v1[19] = swift_task_alloc(v10);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v11 = static AirDropActor.shared;
  v1[20] = static AirDropActor.shared;
  return swift_task_switch(sub_100217168, v11, 0LL);
}

uint64_t sub_100217168()
{
  uint64_t v1 = (id *)(v0 + 56);
  uint64_t v2 = v0 + 48;
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 56) + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  __n128 v10 = swift_beginAccess(v9, v0 + 16, 0LL, 0LL);
  double v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16);
  uint64_t v11 = v79(v3, v9, v4, v10);
  SFAirDropSend.Transfer.state.getter(v11);
  double v78 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v78(v3, v4);
  int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v6, v7);
  if (v12 == enum case for SFAirDropSend.Transfer.State.transferFailed(_:))
  {
    uint64_t v13 = *(void *)(v0 + 120);
    uint64_t v15 = *(void *)(v0 + 80);
    uint64_t v14 = *(void *)(v0 + 88);
    uint64_t v16 = *(void *)(v0 + 72);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 104) + 96LL))(v13, *(void *)(v0 + 96));
    uint64_t v17 = sub_100183098(&qword_100648568);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v13 + *(int *)(v17 + 48), v16);
    int v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v14, v16);
    uint64_t v19 = *(void *)(v0 + 120);
    if (v18 != enum case for SFAirDropSend.Failure.resolveFailure(_:)
      && v18 != enum case for SFAirDropSend.Failure.receiverDeclined(_:)
      && v18 != enum case for SFAirDropSend.Failure.cancelled(_:)
      && v18 != enum case for SFAirDropSend.Failure.insufficientStorage(_:))
    {
      uint64_t v20 = *(void *)(v0 + 64);
      id v21 = *(void **)(v0 + 56);
      (*(void (**)(void, void))(*(void *)(v0 + 80) + 8LL))(*(void *)(v0 + 88), *(void *)(v0 + 72));
      uint64_t v22 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8LL))(v19, v22);
      uint64_t v23 = type metadata accessor for TaskPriority(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))(v20, 1LL, 1LL, v23);
      uint64_t v24 = static AirDropActor.shared;
      uint64_t v25 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
      uint64_t v26 = (void *)swift_allocObject(&unk_1005D50C8, 40LL, 7LL);
      v26[2] = v24;
      v26[3] = v25;
      v26[4] = v21;
      id v27 = v21;
      swift_retain(v24);
      *(void *)(v0 + 168) = sub_1001B37E8(v20, (uint64_t)&unk_100648578, (uint64_t)v26);
      uint64_t v28 = (void *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
      *(void *)(v0 + 176) = v28;
      *uint64_t v28 = v0;
      v28[1] = sub_100217864;
      return Task<>.value.getter();
    }

    uint64_t v33 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8LL))(v19, v33);
  }

  else if (v12 == enum case for SFAirDropSend.Transfer.State.completedSuccessfully(_:))
  {
    uint64_t v30 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 104) + 96LL))(v30, *(void *)(v0 + 96));
    uint64_t v31 = sub_100183098(&qword_100648580);
    swift_bridgeObjectRelease(*(const char **)(v30 + *(int *)(v31 + 48) + 8));
    uint64_t v32 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8LL))(v30, v32);
  }

  else
  {
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(*v1);
    os_log_type_t v35 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = *(void *)(v0 + 144);
      uint64_t v75 = v9;
      uint64_t v37 = *(void *)(v0 + 128);
      uint64_t v38 = *(void *)(v0 + 104);
      uint64_t v39 = *(void *)(v0 + 112);
      uint64_t v40 = *(void *)(v0 + 96);
      double v72 = *(void **)(v0 + 56);
      NSString v41 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v73 = swift_slowAlloc(32LL, -1LL);
      uint64_t v80 = v73;
      *(_DWORD *)NSString v41 = 136315138;
      uint64_t v42 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v79)(v36, v75, v37);
      SFAirDropSend.Transfer.state.getter(v42);
      v78(v36, v37);
      uint64_t v43 = sub_100183F14( &qword_100647960,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer.State,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer.State);
      uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter(v40, v43);
      unint64_t v46 = v45;
      uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      uint64_t v48 = v39;
      uint64_t v2 = v0 + 48;
      v47(v48, v40);
      *(void *)(v0 + 48) = sub_10018CDB4(v44, v46, &v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v41 + 4, v41 + 12);

      int v49 = (const char *)v46;
      uint64_t v9 = v75;
      swift_bridgeObjectRelease(v49);
      _os_log_impl( (void *)&_mh_execute_header,  v34,  v35,  "runPostTransferEndedSteps invalid transfer state. Skipping. {transfer.state: %s}",  v41,  0xCu);
      swift_arrayDestroy(v73, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v73, -1LL, -1LL);
      swift_slowDealloc(v41, -1LL, -1LL);

      v47(*(void *)(v0 + 120), *(void *)(v0 + 96));
    }

    else
    {
      uint64_t v50 = *(void *)(v0 + 104);
      double v51 = *(void **)(v0 + 56);

      (*(void (**)(void, void))(v50 + 8))(*(void *)(v0 + 120), *(void *)(v0 + 96));
    }
  }

  double v52 = (os_log_s *)Logger.logObject.getter(*v1);
  os_log_type_t v53 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = *(void *)(v0 + 144);
    uint64_t v55 = v9;
    uint64_t v56 = *(void *)(v0 + 128);
    uint64_t v57 = *(void *)(v0 + 112);
    buf = *(uint8_t **)(v0 + 104);
    uint64_t v77 = v2;
    uint64_t v58 = *(void *)(v0 + 96);
    double v74 = *(void **)(v0 + 56);
    os_log_type_t v59 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v76 = swift_slowAlloc(32LL, -1LL);
    uint64_t v80 = v76;
    *(_DWORD *)os_log_type_t v59 = 136315138;
    uint64_t v60 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v79)(v54, v55, v56);
    SFAirDropSend.Transfer.state.getter(v60);
    v78(v54, v56);
    uint64_t v61 = sub_100183F14( &qword_100647960,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer.State,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer.State);
    uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter(v58, v61);
    double v64 = v63;
    (*((void (**)(uint64_t, uint64_t))buf + 1))(v57, v58);
    *(void *)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10018CDB4(v62, (unint64_t)v64, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v77, v59 + 4, v59 + 12);

    swift_bridgeObjectRelease(v64);
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "Transer Linger SKIPPED. {transfer.state: %s}", v59, 0xCu);
    swift_arrayDestroy(v76, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v76, -1LL, -1LL);
    swift_slowDealloc(v59, -1LL, -1LL);
  }

  else
  {
    id v65 = *v1;
  }

  uint64_t v66 = *(void *)(v0 + 144);
  uint64_t v68 = *(void *)(v0 + 112);
  uint64_t v67 = *(void *)(v0 + 120);
  uint64_t v69 = *(void *)(v0 + 88);
  uint64_t v70 = *(void *)(v0 + 64);
  swift_task_dealloc(*(void *)(v0 + 152));
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100217864()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 160LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 176LL));
  return swift_task_switch(sub_1002178BC, v1, 0LL);
}

uint64_t sub_1002178BC()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 64);
  swift_task_dealloc(*(void *)(v0 + 152));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100217938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a4;
  uint64_t v5 = type metadata accessor for ContinuousClock(0LL);
  v4[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[9] = v6;
  v4[10] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v7 = static AirDropActor.shared;
  v4[11] = static AirDropActor.shared;
  return swift_task_switch(sub_1002179CC, v7, 0LL);
}

uint64_t sub_1002179CC(uint64_t a1)
{
  *(void *)(v1 + 96) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Transfer Linger START", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  ContinuousClock.init()(v5);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006461D8 + dword_1006461D8);
  uint64_t v6 = (void *)swift_task_alloc(unk_1006461DC);
  *(void *)(v1 + 104) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_100217AD8;
  return v8(5000000000000000000LL, 0LL, 0LL, 0LL, 1);
}

uint64_t sub_100217AD8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 104);
  uint64_t v5 = *(void *)(*v1 + 72);
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v6 = *(void *)(*v1 + 64);
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0) {
    uint64_t v7 = sub_100217C14;
  }
  else {
    uint64_t v7 = sub_100217B64;
  }
  return swift_task_switch(v7, *(void *)(v2 + 88), 0LL);
}

uint64_t sub_100217B64()
{
  uint64_t v1 = (os_log_s *)Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Send StateMachine Linger END", v3, 2u);
    swift_slowDealloc(v3, -1LL, -1LL);
  }

  swift_task_dealloc(*(void *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100217C14()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_errorRetain(v1);
  uint64_t v2 = swift_errorRetain(v1);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void *)(v0 + 112);
    uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v7 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v13 = v7;
    swift_getErrorValue(v5, v0 + 40, v0 + 16);
    uint64_t v8 = Error.localizedDescription.getter(*(void *)(v0 + 24), *(void *)(v0 + 32));
    unint64_t v10 = v9;
    *(void *)(v0 + 48) = sub_10018CDB4(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Transfer Linger FAILED {error: %s}", v6, 0xCu);
    swift_arrayDestroy(v7, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1LL, -1LL);
    swift_slowDealloc(v6, -1LL, -1LL);
    swift_errorRelease(v5);
  }

  else
  {
    uint64_t v11 = *(void *)(v0 + 112);
    swift_errorRelease(v11);

    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }

  swift_task_dealloc(*(void *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100217DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100217E20( a1,  (uint64_t (*)(void))&type metadata accessor for SFAirDropSend.Transfer.State,  (os_log_s *)&SFAirDropSend.Transfer.state.getter,  "Transfer changed status %s -> %s",  (void (*)(uint64_t))&SFAirDropSend.Transfer.update(state:),  a2);
}

uint64_t sub_100217DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100217E20( a1,  (uint64_t (*)(void))&type metadata accessor for SFAirDrop.DisplayPriority,  (os_log_s *)&SFAirDropSend.Transfer.displayPriority.getter,  "Transfer changed display priority %s -> %s",  (void (*)(uint64_t))&SFAirDropSend.Transfer.update(displayPriority:),  a2);
}

uint64_t sub_100217E20@<X0>( uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, os_log_s *a3@<X2>, const char *a4@<X3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X8>)
{
  double v64 = a5;
  uint64_t v60 = a4;
  uint64_t v58 = a3;
  uint64_t v66 = a6;
  uint64_t v9 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v62 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t v15 = a2(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v53 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = *(void (**)(void))(v16 + 16);
  uint64_t v61 = (char *)&v53 - v24;
  uint64_t v63 = a1;
  uint64_t v57 = v23;
  v23();
  uint64_t v25 = v6;
  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  int v59 = v27;
  uint64_t v28 = &unk_100669000;
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v29 = swift_slowAlloc(22LL, -1LL);
    uint64_t v65 = v10;
    uint64_t v30 = v29;
    uint64_t v56 = swift_slowAlloc(64LL, -1LL);
    v70[0] = v56;
    *(_DWORD *)uint64_t v30 = 136315394;
    uint64_t v54 = v30 + 4;
    uint64_t v31 = &v25[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer];
    swift_beginAccess( &v25[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer],  v67,  0LL,  0LL);
    uint64_t v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v65 + 16))(v14, v31, v9);
    ((void (*)(uint64_t))v58)(v32);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v9);
    uint64_t v58 = v26;
    uint64_t v33 = v57;
    ((void (*)(char *, char *, uint64_t))v57)(v19, v22, v15);
    uint64_t v34 = String.init<A>(describing:)(v19, v15);
    unint64_t v36 = v35;
    uint64_t v55 = *(void (**)(char *, uint64_t))(v16 + 8);
    v55(v22, v15);
    uint64_t v68 = sub_10018CDB4(v34, v36, v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, v69, v54, v30 + 12);

    __n128 v37 = swift_bridgeObjectRelease(v36);
    *(_WORD *)(v30 + 12) = 2080;
    uint64_t v38 = v61;
    ((void (*)(char *, char *, uint64_t, __n128))v33)(v22, v61, v15, v37);
    uint64_t v39 = String.init<A>(describing:)(v22, v15);
    unint64_t v41 = v40;
    uint64_t v68 = sub_10018CDB4(v39, v40, v70);
    uint64_t v28 = (void *)&unk_100669000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, v69, v30 + 14, v30 + 22);
    __n128 v42 = swift_bridgeObjectRelease(v41);
    ((void (*)(char *, uint64_t, __n128))v55)(v38, v15, v42);
    os_log_t v43 = v58;
    _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v59, v60, (uint8_t *)v30, 0x16u);
    uint64_t v44 = v56;
    swift_arrayDestroy(v56, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v44, -1LL, -1LL);
    uint64_t v45 = v30;
    uint64_t v10 = v65;
    swift_slowDealloc(v45, -1LL, -1LL);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v16 + 8))(v61, v15);
  }

  unint64_t v46 = &v25[v28[158]];
  swift_beginAccess(v46, v70, 0LL, 0LL);
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v48 = v62;
  v47(v62, v46, v9);
  v64(v63);
  uint64_t v49 = v10;
  uint64_t v50 = *(void (**)(char *, uint64_t))(v10 + 8);
  v50(v48, v9);
  swift_beginAccess(v46, &v68, 33LL, 0LL);
  (*(void (**)(char *, char *, uint64_t))(v49 + 40))(v46, v14, v9);
  swift_endAccess(&v68);
  v47(v14, v46, v9);
  CurrentValueSubject.send(_:)(v14);
  v50(v14, v9);
  double v51 = *(void (**)(char *))&v25[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_yield];
  v47(v14, v46, v9);
  v51(v14);
  v50(v14, v9);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v47)(v66, v46, v9);
}

uint64_t sub_1002182A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v4 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v67 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v6);
  double v64 = (char *)&v56 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v56 - v10;
  uint64_t v12 = sub_100183098(&qword_100656490);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v56 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v56 - v19;
  uint64_t v65 = a1;
  sub_100219774(a1, (uint64_t)&v56 - v19);
  uint64_t v21 = v2;
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
  int v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, (os_log_type_t)v23))
  {
    int v59 = v15;
    os_log_t v62 = v22;
    uint64_t v24 = (_DWORD *)swift_slowAlloc(22LL, -1LL);
    uint64_t v60 = swift_slowAlloc(64LL, -1LL);
    v69[0] = v60;
    uint64_t v61 = v24;
    *uint64_t v24 = 136315394;
    uint64_t v25 = &v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer];
    __n128 v26 = swift_beginAccess( &v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer],  v68,  0LL,  0LL);
    uint64_t v27 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v5 + 16))(v11, v25, v4, v26);
    SFAirDropSend.Transfer.activeInterfaceType.getter(v27);
    uint64_t v63 = v5;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    uint64_t v28 = type metadata accessor for SFNWInterfaceType(0LL);
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
    uint64_t v30 = v57(v18, 1LL, v28);
    int v58 = v23;
    uint64_t v31 = v64;
    uint64_t v56 = v29;
    if ((_DWORD)v30 == 1)
    {
      sub_100187100((uint64_t)v18, &qword_100656490);
      uint64_t v70 = 0LL;
      v71[0] = (const char *)0xE000000000000000LL;
      _StringGuts.grow(_:)(17LL);
      swift_bridgeObjectRelease(v71[0]);
      uint64_t v32 = (const char *)0x80000001005046B0LL;
      uint64_t v33 = 0xD000000000000015LL;
    }

    else
    {
      uint64_t v33 = SFNWInterfaceType.description.getter(v30);
      uint64_t v32 = v37;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v28);
    }

    uint64_t v38 = v61;
    uint64_t v70 = sub_10018CDB4(v33, (unint64_t)v32, v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71, v38 + 1, v38 + 3);

    swift_bridgeObjectRelease(v32);
    *((_WORD *)v38 + 6) = 2080;
    uint64_t v39 = (uint64_t)v20;
    uint64_t v40 = (uint64_t)v59;
    sub_100219774((uint64_t)v20, (uint64_t)v59);
    uint64_t v41 = v57((char *)v40, 1LL, v28);
    if ((_DWORD)v41 == 1)
    {
      sub_100187100(v40, &qword_100656490);
      uint64_t v70 = 0LL;
      v71[0] = (const char *)0xE000000000000000LL;
      _StringGuts.grow(_:)(17LL);
      swift_bridgeObjectRelease(v71[0]);
      __n128 v42 = (const char *)0x80000001005046B0LL;
      uint64_t v43 = 0xD000000000000015LL;
    }

    else
    {
      uint64_t v44 = v40;
      uint64_t v43 = SFNWInterfaceType.description.getter(v41);
      __n128 v42 = v45;
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v44, v28);
    }

    uint64_t v70 = sub_10018CDB4(v43, (unint64_t)v42, v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71, (char *)v38 + 14, (char *)v38 + 22);
    swift_bridgeObjectRelease(v42);
    sub_100187100(v39, &qword_100656490);
    os_log_t v46 = v62;
    _os_log_impl( (void *)&_mh_execute_header,  v62,  (os_log_type_t)v58,  "Transfer changed active interface type %s -> %s",  (uint8_t *)v38,  0x16u);
    uint64_t v47 = v60;
    swift_arrayDestroy(v60, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1LL, -1LL);
    swift_slowDealloc(v38, -1LL, -1LL);

    uint64_t v35 = v65;
    uint64_t v36 = v66;
    uint64_t v34 = v63;
  }

  else
  {

    sub_100187100((uint64_t)v20, &qword_100656490);
    uint64_t v34 = v5;
    uint64_t v31 = v64;
    uint64_t v35 = v65;
    uint64_t v36 = v66;
  }

  uint64_t v48 = &v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer];
  __n128 v49 = swift_beginAccess( &v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer],  &v70,  0LL,  0LL);
  uint64_t v50 = *(void (**)(char *, char *, uint64_t, __n128))(v34 + 16);
  double v51 = v67;
  v50(v67, v48, v4, v49);
  SFAirDropSend.Transfer.update(activeInterfaceType:)(v35);
  double v52 = *(void (**)(char *, uint64_t))(v34 + 8);
  v52(v51, v4);
  __n128 v53 = swift_beginAccess(v48, v69, 33LL, 0LL);
  (*(void (**)(char *, char *, uint64_t, __n128))(v34 + 40))(v48, v31, v4, v53);
  swift_endAccess(v69);
  ((void (*)(char *, char *, uint64_t))v50)(v31, v48, v4);
  CurrentValueSubject.send(_:)(v31);
  v52(v31, v4);
  uint64_t v54 = *(void (**)(char *))&v21[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_yield];
  ((void (*)(char *, char *, uint64_t))v50)(v31, v48, v4);
  v54(v31);
  v52(v31, v4);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v50)(v36, v48, v4);
}

uint64_t sub_100218824(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v38 = a1;
    uint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v15 = swift_slowAlloc(32LL, -1LL);
    uint64_t v37 = v15;
    v43[0] = v15;
    uint64_t v39 = v1;
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v36 = v14 + 4;
    uint64_t v16 = SFAirDropSend.Transfer.id.getter(v15);
    uint64_t v17 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v16);
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
    uint64_t v42 = sub_10018CDB4(v17, (unint64_t)v19, v43);
    uint64_t v2 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43, v36, v14 + 12);
    __n128 v20 = swift_bridgeObjectRelease(v19);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v20);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Begin Send OSTransaction and Power Assertion %s", v14, 0xCu);
    uint64_t v21 = v37;
    swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1LL, -1LL);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  v43[0] = 0LL;
  v43[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(16LL);
  swift_bridgeObjectRelease((const char *)v43[1]);
  strcpy((char *)v43, "airdrop.send[");
  HIWORD(v43[1]) = -4864;
  uint64_t v23 = SFAirDropSend.Transfer.id.getter(v22);
  uint64_t v24 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v23);
  __n128 v26 = v25;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
  v27._uint64_t countAndFlagsBits = v24;
  v27._object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease((const char *)v26);
  v28._uint64_t countAndFlagsBits = 93LL;
  v28._object = (void *)0xE100000000000000LL;
  String.append(_:)(v28);
  uint64_t v29 = (const char *)v43[1];
  uint64_t v30 = String.utf8CString.getter(v43[0], v43[1]);
  swift_bridgeObjectRelease(v29);
  uint64_t v31 = os_transaction_create(v30 + 32);
  swift_release(v30);
  uint64_t v32 = *(void *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_osTransaction);
  *(void *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_osTransaction) = v31;
  swift_unknownObjectRelease(v32);
  uint64_t result = sub_10003617C();
  uint64_t v34 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_powerAssertion;
  *(_DWORD *)uint64_t v34 = result;
  *(_BYTE *)(v34 + 4) = 0;
  return result;
}

uint64_t sub_100218B40(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_osTransaction;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_osTransaction);
  if (v4)
  {
    uint64_t v5 = swift_unknownObjectRetain(v4);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Clearing Send OSTransaction", v8, 2u);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    uint64_t v9 = *(void *)(v2 + v3);
    *(void *)(v2 + v3) = 0LL;
    swift_unknownObjectRelease(v4);
    uint64_t result = swift_unknownObjectRelease(v9);
  }

  uint64_t v10 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_powerAssertion;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_powerAssertion + 4) & 1) == 0)
  {
    IOPMAssertionID v11 = *(_DWORD *)v10;
    if (*(_DWORD *)v10)
    {
      uint64_t v12 = (os_log_s *)Logger.logObject.getter(result);
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Clearing Send Power Assertion", v14, 2u);
        swift_slowDealloc(v14, -1LL, -1LL);
      }

      uint64_t result = IOPMAssertionRelease(v11);
      *(_DWORD *)uint64_t v10 = 0;
      *(_BYTE *)(v10 + 4) = 1;
    }
  }

  return result;
}

uint64_t sub_100218CC0(double a1)
{
  uint64_t v3 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDrop.DisplayPriority(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  os_log_type_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_displayPriorityReturnToNormalTask;
  uint64_t v15 = *(void *)(v1
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_displayPriorityReturnToNormalTask);
  if (v15)
  {
    swift_retain(*(void *)(v1
                           + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_displayPriorityReturnToNormalTask));
    Task.cancel()();
    swift_release(v15);
  }

  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for SFAirDrop.DisplayPriority.high(_:), v6);
  sub_100217DFC((uint64_t)v9, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v16 = type metadata accessor for TaskPriority(0LL);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL);
  v17(v5, 1LL, 1LL, v16);
  uint64_t v18 = swift_allocObject(&unk_1005D5078, 24LL, 7LL);
  swift_unknownObjectWeakInit(v18 + 16, v1);
  uint64_t v19 = swift_allocObject(&unk_1005D50A0, 32LL, 7LL);
  *(double *)(v19 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = static Task<>.noThrow(priority:operation:)(v5, &unk_100648550, v19, (char *)&type metadata for () + 8);
  swift_release(v19);
  sub_100187100((uint64_t)v5, &qword_100646560);
  uint64_t v21 = *(void *)(v1 + v14);
  *(void *)(v1 + v14) = v20;
  swift_retain(v20);
  swift_release(v21);
  v17(v5, 1LL, 1LL, v16);
  swift_retain(v20);
  uint64_t v22 = static Task<>.noThrow(priority:operation:)(v5, &unk_100648560, v20, (char *)&type metadata for () + 8);
  swift_release_n(v20, 2LL);
  swift_release(v22);
  return sub_100187100((uint64_t)v5, &qword_100646560);
}

uint64_t sub_100218F58(double a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 48) = a3;
  *(double *)(v3 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a1;
  uint64_t v4 = type metadata accessor for SFAirDrop.DisplayPriority(0LL);
  *(void *)(v3 + 56) = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 72) = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_100647938);
  *(void *)(v3 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for ContinuousClock(0LL);
  *(void *)(v3 + 88) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v3 + 96) = v8;
  *(void *)(v3 + 104) = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  *(void *)(v3 + 112) = static AirDropActor.shared;
  return swift_task_switch(sub_10021903C, v9, 0LL);
}

uint64_t sub_10021903C()
{
  uint64_t v1 = static Duration.seconds(_:)(*(double *)(v0 + 40));
  uint64_t v3 = v2;
  ContinuousClock.init()(v1);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006461D8 + dword_1006461D8);
  uint64_t v4 = (void *)swift_task_alloc(unk_1006461DC);
  *(void *)(v0 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002190D0;
  return v6(v1, v3, 0LL, 0LL, 1);
}

uint64_t sub_1002190D0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 120);
  uint64_t v5 = *(void *)(*v1 + 96);
  uint64_t v4 = *(void *)(*v1 + 104);
  uint64_t v6 = *(void *)(*v1 + 88);
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0) {
    uint64_t v7 = sub_100219264;
  }
  else {
    uint64_t v7 = sub_10021915C;
  }
  return swift_task_switch(v7, *(void *)(v2 + 112), 0LL);
}

uint64_t sub_10021915C()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 80);
    uint64_t v7 = *(void *)(v0 + 56);
    uint64_t v8 = *(void *)(v0 + 64);
    (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))( v6,  enum case for SFAirDrop.DisplayPriority.normal(_:),  v7);
    sub_100217DFC(v6, v5);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    uint64_t v9 = 0LL;
  }

  else
  {
    uint64_t v9 = 1LL;
  }

  uint64_t v10 = *(void *)(v0 + 80);
  uint64_t v11 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v10, v9, 1LL, v11);
  sub_100187100(v10, &qword_100647938);
  uint64_t v12 = *(void *)(v0 + 72);
  uint64_t v13 = *(void *)(v0 + 80);
  swift_task_dealloc(*(void *)(v0 + 104));
  swift_task_dealloc(v13);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100219264()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  swift_task_dealloc(*(void *)(v0 + 104));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002192B0(uint64_t a1, uint64_t a2)
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = static AirDropActor.shared;
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to Task.result.getter[1]);
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100219360;
  return Task.result.getter( v2 + 32,  a2,  (char *)&type metadata for () + 8,  &type metadata for Never,  &protocol witness table for Never);
}

uint64_t sub_100219360()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 24LL));
  return swift_task_switch(sub_1002193B4, v1, 0LL);
}

uint64_t sub_1002193B4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1002193E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10BaseRunnerCMa_0(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100219540()
{
  return _s10BaseRunnerCMa_0(0LL);
}

uint64_t _s10BaseRunnerCMa_0(uint64_t a1)
{
  uint64_t result = qword_100648530;
  if (!qword_100648530) {
    return swift_getSingletonMetadata(a1, &_s10BaseRunnerCMn_0);
  }
  return result;
}

uint64_t sub_100219584(uint64_t a1)
{
  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t result = type metadata accessor for Logger(319LL);
  if (v3 <= 0x3F)
  {
    v6[2] = *(void *)(result - 8) + 64LL;
    v6[3] = &unk_1004CF5C8;
    uint64_t result = type metadata accessor for SFAirDropSend.Request(319LL);
    if (v4 <= 0x3F)
    {
      void v6[4] = *(void *)(result - 8) + 64LL;
      v6[5] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[6] = (char *)&value witness table for () + 64;
      v6[7] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[8] = (char *)&value witness table for Builtin.NativeObject + 64;
      uint64_t result = type metadata accessor for SFAirDropSend.Transfer(319LL);
      if (v5 <= 0x3F)
      {
        void v6[9] = *(void *)(result - 8) + 64LL;
        v6[10] = &unk_1004CF5E0;
        v6[11] = &unk_1004CF5F8;
        v6[12] = &unk_1004CF5E0;
        return swift_updateClassMetadata2(a1, 256LL, 13LL, v6, a1 + 80);
      }
    }
  }

  return result;
}

uint64_t sub_100219670()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100219694()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1002196B8(uint64_t a1)
{
  double v4 = *(double *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc(dword_10064854C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100195708;
  return sub_100218F58(v4, a1, v5);
}

uint64_t sub_100219720(uint64_t a1)
{
  double v4 = (void *)swift_task_alloc(dword_10064855C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *double v4 = v2;
  v4[1] = sub_1001943E8;
  return sub_1002192B0(a1, v1);
}

uint64_t sub_100219774(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100656490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002197BC()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_1002197E8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_100648574);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_100217938(a1, v4, v5, v6);
}

id sub_100219854( void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  uint64_t v49 = a5;
  uint64_t v50 = a6;
  uint64_t v44 = a3;
  uint64_t v47 = a7;
  uint64_t v48 = a10;
  os_log_t v46 = a9;
  uint64_t v16 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  uint64_t v43 = *(void *)(v16 - 8);
  uint64_t v17 = v43;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&v10[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_osTransaction] = 0LL;
  uint64_t v20 = &v10[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_powerAssertion];
  *(_DWORD *)uint64_t v20 = 0;
  v20[4] = 1;
  *(void *)&v10[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_displayPriorityReturnToNormalTask] = 0LL;
  double v52 = a1;
  uint64_t v21 = sub_100183098(&qword_100648588);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  uint64_t v22 = v10;
  *(void *)&v22[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints] = CurrentValueSubject.init(_:)(&v52);
  double v52 = &_swiftEmptySetSingleton;
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  *(void *)&v22[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints] = CurrentValueSubject.init(_:)(&v52);
  *(void *)&v22[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_deviceStatus] = a2;
  uint64_t v23 = &v22[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest];
  uint64_t v24 = type metadata accessor for SFAirDropSend.Request(0LL);
  uint64_t v45 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v23, a3, v24);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v25(&v22[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer], a4, v16);
  v25(v19, a4, v16);
  uint64_t v26 = sub_100183098(&qword_100648590);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  id v27 = a2;
  *(void *)&v22[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_subject] = CurrentValueSubject.init(_:)(v19);
  Swift::String v28 = &v22[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_yield];
  *(void *)Swift::String v28 = v47;
  *((void *)v28 + 1) = a8;
  uint64_t v29 = a8;
  uint64_t v30 = v46;
  *(void *)&v22[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_queue] = v46;
  uint64_t v31 = &v22[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log];
  uint64_t v32 = type metadata accessor for Logger(0LL);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v31, v48, v32);
  uint64_t v35 = &v22[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager];
  uint64_t v37 = v49;
  uint64_t v36 = v50;
  *(void *)uint64_t v35 = v49;
  *((void *)v35 + 1) = v36;
  swift_retain(v29);
  id v38 = v30;
  swift_unknownObjectRetain(v37);

  uint64_t v39 = (objc_class *)_s10BaseRunnerCMa_0(0LL);
  v51.receiver = v22;
  v51.super_class = v39;
  id v40 = objc_msgSendSuper2(&v51, "init");
  sub_100218824(a4);

  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v32);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(a4, v16);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v24);
  return v40;
}

uint64_t sub_100219B38()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100648598);
  sub_100186DE4(v0, (uint64_t)qword_100648598);
  return Logger.init(subsystem:category:)( 0xD000000000000011LL,  0x8000000100505BA0LL,  0x4E706F7244726941LL,  0xE900000000000057LL);
}

uint64_t sub_100219BB0(uint64_t a1)
{
  return sub_100219BD4(a1, (uint64_t (*)(void))&_nw_endpoint_get_device_id);
}

uint64_t sub_100219BBC(uint64_t a1)
{
  return sub_100219BD4(a1, (uint64_t (*)(void))&_nw_endpoint_get_contact_id);
}

uint64_t sub_100219BC8(uint64_t a1)
{
  return sub_100219BD4(a1, (uint64_t (*)(void))&_nw_endpoint_get_device_name);
}

uint64_t sub_100219BD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = type metadata accessor for NWEndpoint(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = NWEndpoint.nw.getter(v6);
  if (!v9)
  {
    if (qword_100643F50 != -1) {
      swift_once(&qword_100643F50, sub_100219B38);
    }
    uint64_t v16 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v16, (uint64_t)qword_100648598);
    uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v21 = swift_slowAlloc(32LL, -1LL);
      uint64_t v27 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v22 = NWEndpoint.debugDescription.getter();
      unint64_t v24 = v23;
      uint64_t v26 = sub_10018CDB4(v22, v23, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v20 + 4, v20 + 12);
      swift_bridgeObjectRelease(v24);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Could not convert endpoint to nw_endpoint %s", v20, 0xCu);
      swift_arrayDestroy(v21, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1LL, -1LL);
      swift_slowDealloc(v20, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }

    return 0LL;
  }

  uint64_t v10 = v9;
  uint64_t v11 = a2();
  if (!v11)
  {
    swift_unknownObjectRelease(v10);
    return 0LL;
  }

  uint64_t v12 = String.init(cString:)(v11);
  unint64_t v14 = v13;
  swift_unknownObjectRelease(v10);
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000LL) == 0) {
    uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  }
  if (!v15)
  {
    swift_bridgeObjectRelease(v14);
    return 0LL;
  }

  return v12;
}

uint64_t type metadata accessor for SDAirDropContentHandlerFindMyFriendsLinks()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary41SDAirDropContentHandlerFindMyFriendsLinks);
}

uint64_t sub_100219E48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t MyFriendsLinks = type metadata accessor for SDAirDropContentHandlerFindMyFriendsLinks();
  uint64_t result = swift_allocObject(MyFriendsLinks, 24LL, 7LL);
  *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *a1 = result;
  return result;
}

uint64_t sub_100219E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100183098((uint64_t *)&unk_1006563F0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void **)(*(void *)v2 + 16LL);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v7, 1LL, 1LL, v9);
  id v10 = v8;
  sub_10026664C(a1, v8, 1, a2);

  return sub_100187334((uint64_t)v7);
}

void sub_100219F54(uint64_t a1, char a2)
{
  v3._uint64_t countAndFlagsBits = 95LL;
  v3._object = (void *)0xE100000000000000LL;
  String.append(_:)(v3);
  v4._uint64_t countAndFlagsBits = 4607302LL;
  v4._object = (void *)0xE300000000000000LL;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(0xE300000000000000LL);
  if ((a2 & 1) != 0)
  {
    v5._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
    v5._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v5);
  }

  v6._uint64_t countAndFlagsBits = 0x545845545FLL;
  v6._object = (void *)0xE500000000000000LL;
  String.append(_:)(v6);
  uint64_t v7 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(&qword_1005D0E30, 1LL, v7);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0xEF524546534E4152LL);
  id v10 = (id)SFLocalizedStringForKey(v8, v9);

  if (v10)
  {
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    uint64_t v13 = v12;

    static String.localizedStringWithFormat(_:_:)(v11, v13, _swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(v13);
  }

  else
  {
    __break(1u);
  }

__n128 _s14descr1005D5299C20IdentityShareRequestVwxx(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >> 60 != 15) {
    sub_100189B20(*(void *)(a1 + 16), v2);
  }
  sub_100189B20(*(void *)(a1 + 32), *(void *)(a1 + 40));
  sub_100189B20(*(void *)(a1 + 48), *(void *)(a1 + 56));
  return swift_bridgeObjectRelease((const char *)*(void *)(a1 + 72));
}

uint64_t _s14descr1005D5299C20IdentityShareRequestVwcp(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  Swift::String v5 = a2 + 2;
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain(v4);
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *v5;
  }

  else
  {
    uint64_t v7 = *(void *)v5;
    sub_10019BA8C(v7, v6);
    *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
    *(void *)(a1 + 24) = v6;
  }

  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  sub_10019BA8C(v8, v9);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v9;
  uint64_t v10 = a2[6];
  unint64_t v11 = a2[7];
  sub_10019BA8C(v10, v11);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  uint64_t v12 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a2[10];
  swift_bridgeObjectRetain(v12);
  return a1;
}

void *_s14descr1005D5299C20IdentityShareRequestVwca(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  unint64_t v6 = a2 + 2;
  unint64_t v7 = a2[3];
  if (a1[3] >> 60 != 15LL)
  {
    if (v7 >> 60 != 15)
    {
      uint64_t v9 = *v6;
      sub_10019BA8C(*v6, a2[3]);
      uint64_t v10 = a1[2];
      unint64_t v11 = a1[3];
      a1[2] = v9;
      a1[3] = v7;
      sub_100189B20(v10, v11);
      goto LABEL_8;
    }

    sub_10019DC8C((uint64_t)(a1 + 2));
    goto LABEL_6;
  }

  if (v7 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v6;
    goto LABEL_8;
  }

  uint64_t v8 = *v6;
  sub_10019BA8C(*v6, a2[3]);
  a1[2] = v8;
  a1[3] = v7;
LABEL_8:
  uint64_t v12 = a2[4];
  unint64_t v13 = a2[5];
  sub_10019BA8C(v12, v13);
  uint64_t v14 = a1[4];
  unint64_t v15 = a1[5];
  a1[4] = v12;
  a1[5] = v13;
  sub_100189B20(v14, v15);
  uint64_t v16 = a2[6];
  unint64_t v17 = a2[7];
  sub_10019BA8C(v16, v17);
  uint64_t v18 = a1[6];
  unint64_t v19 = a1[7];
  a1[6] = v16;
  a1[7] = v17;
  sub_100189B20(v18, v19);
  a1[8] = a2[8];
  uint64_t v20 = a2[9];
  uint64_t v21 = a1[9];
  a1[9] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  a1[10] = a2[10];
  return a1;
}

__n128 _s14descr1005D5299C20IdentityShareRequestVwtk(uint64_t a1, uint64_t a2)
{
  __int128 v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

void *_s14descr1005D5299C20IdentityShareRequestVwta(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = a1[1];
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  unint64_t v6 = (void *)(a2 + 16);
  unint64_t v7 = a1[3];
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 24);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = a1[2];
      a1[2] = *v6;
      a1[3] = v8;
      sub_100189B20(v9, v7);
      goto LABEL_6;
    }

    sub_10019DC8C((uint64_t)(a1 + 2));
  }

  *((_OWORD *)a1 + 1) = *(_OWORD *)v6;
LABEL_6:
  uint64_t v10 = a1[4];
  unint64_t v11 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_100189B20(v10, v11);
  uint64_t v12 = a1[6];
  unint64_t v13 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  sub_100189B20(v12, v13);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v15 = a1[9];
  a1[8] = *(void *)(a2 + 64);
  a1[9] = v14;
  swift_bridgeObjectRelease(v15);
  a1[10] = *(void *)(a2 + 80);
  return a1;
}

uint64_t _s14descr1005D5299C20IdentityShareRequestVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr1005D5299C20IdentityShareRequestVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 88) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *_s14descr1005D5299C20IdentityShareRequestVMa()
{
  return &_s14descr1005D5299C20IdentityShareRequestVN;
}

uint64_t sub_10021A4B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10021A4F0 + 4 * byte_1004CF680[a1]))( 0x7265766965636552LL,  0xEF4449656C707041LL);
}

unint64_t sub_10021A4F0()
{
  return 0xD000000000000010LL;
}

unint64_t sub_10021A534()
{
  return 0xD000000000000013LL;
}

void sub_10021A54C()
{
}

uint64_t sub_10021A56C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10021A5AC + 4 * byte_1004CF686[a1]))( 0x7265766965636552LL,  0xEF4449656C707041LL);
}

unint64_t sub_10021A5AC()
{
  return 0xD000000000000010LL;
}

unint64_t sub_10021A5F0()
{
  return 0xD000000000000013LL;
}

void sub_10021A608()
{
}

void sub_10021A628(char *a1)
{
}

void sub_10021A634()
{
}

void sub_10021A63C(uint64_t a1)
{
}

void sub_10021A644(uint64_t a1)
{
}

unint64_t sub_10021A64C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_10021AB30(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10021A678@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10021A4B0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10021A6A0()
{
  return sub_10021A56C(*v0);
}

unint64_t sub_10021A6A8@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_10021AB30(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10021A6CC(uint64_t a1)
{
  unint64_t v2 = sub_10021B048();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10021A6F4(uint64_t a1)
{
  unint64_t v2 = sub_10021B048();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10021A71C()
{
  v7[0] = 0LL;
  v7[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(44LL);
  uint64_t v5 = 0LL;
  unint64_t v6 = 0xE000000000000000LL;
  v1._object = (void *)0x8000000100505C10LL;
  v1._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  String.append(_:)(v1);
  sub_10021AAA4(v0 + 16, (uint64_t)v7);
  sub_10021AAA4((uint64_t)v7, (uint64_t)v4);
  unint64_t v2 = sub_10021AAEC();
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v4, &type metadata for Data, v2);
  return v5;
}

uint64_t sub_10021A7B4(void *a1)
{
  Swift::String v3 = v1;
  uint64_t v5 = sub_100183098(&qword_1006486A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_10021B048();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &_s14descr1005D5299C20IdentityShareRequestV10CodingKeysON,  &_s14descr1005D5299C20IdentityShareRequestV10CodingKeysON,  v11,  v9,  v10);
  uint64_t v12 = *v3;
  uint64_t v13 = v3[1];
  LOBYTE(v21) = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v12, v13, &v21, v5);
  if (!v2)
  {
    sub_10021AAA4((uint64_t)(v3 + 2), (uint64_t)v22);
    sub_10021AAA4((uint64_t)v22, (uint64_t)&v21);
    char v20 = 1;
    unint64_t v14 = sub_10020C2A8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v21, &v20, v5, &type metadata for Data, v14);
    __int128 v21 = *((_OWORD *)v3 + 2);
    char v20 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, &type metadata for Data, v14);
    __int128 v21 = *((_OWORD *)v3 + 3);
    char v20 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, &type metadata for Data, v14);
    uint64_t v15 = v3[8];
    uint64_t v16 = v3[9];
    LOBYTE(v21) = 4;
    KeyedEncodingContainer.encode(_:forKey:)(v15, v16, &v21, v5);
    uint64_t v17 = v3[10];
    LOBYTE(v21) = 5;
    KeyedEncodingContainer.encode(_:forKey:)(v17, &v21, v5);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_10021A9BC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (!v2)
  {
    __int128 v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v8;
    double result = *(double *)v7;
    __int128 v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  }

  return result;
}

uint64_t sub_10021AA14(void *a1)
{
  return sub_10021A7B4(a1);
}

uint64_t sub_10021AA5C()
{
  return sub_10021A71C();
}

uint64_t sub_10021AAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100645150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_10021AAEC()
{
  unint64_t result = qword_100648690;
  if (!qword_100648690)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_100648690);
  }

  return result;
}

unint64_t sub_10021AB30(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005D0FF0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6) {
    return 6LL;
  }
  else {
    return v3;
  }
}

void sub_10021AB78(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100183098(&qword_100648698);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_10021B048();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &_s14descr1005D5299C20IdentityShareRequestV10CodingKeysON,  &_s14descr1005D5299C20IdentityShareRequestV10CodingKeysON,  v11,  v9,  v10);
  if (v2)
  {
    sub_10018709C(a1);
    swift_bridgeObjectRelease(0LL);
    sub_100189B0C(0LL, 0xF000000000000000LL);
  }

  else
  {
    LOBYTE(v38) = 0;
    uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v38, v5);
    uint64_t v14 = v13;
    char v40 = 1;
    unint64_t v15 = sub_10020C198();
    swift_bridgeObjectRetain(v14);
    unint64_t v37 = v15;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)( &v38,  &type metadata for Data,  &v40,  v5,  &type metadata for Data,  v15);
    uint64_t v32 = v12;
    uint64_t v33 = a2;
    uint64_t v16 = v38;
    unint64_t v17 = v39;
    char v40 = 2;
    sub_1001A4C04(v38, v39);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v38, &type metadata for Data, &v40, v5, &type metadata for Data, v37);
    char v40 = 3;
    uint64_t v35 = v38;
    unint64_t v31 = v39;
    sub_10019BA8C(v38, v39);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v38, &type metadata for Data, &v40, v5, &type metadata for Data, v37);
    uint64_t v18 = v38;
    LOBYTE(v38) = 4;
    uint64_t v36 = v18;
    unint64_t v37 = v39;
    sub_10019BA8C(v18, v39);
    uint64_t v30 = KeyedDecodingContainer.decode(_:forKey:)(&v38, v5);
    LOBYTE(v38) = 5;
    uint64_t v34 = v19;
    swift_bridgeObjectRetain(v19);
    uint64_t v20 = KeyedDecodingContainer.decode(_:forKey:)(&v38, v5);
    __int128 v21 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v29 = v20;
    v21(v8, v5);
    swift_bridgeObjectRetain(v14);
    sub_1001A4C04(v16, v17);
    uint64_t v22 = v35;
    unint64_t v23 = v31;
    sub_10019BA8C(v35, v31);
    uint64_t v24 = v36;
    unint64_t v25 = v37;
    sub_10019BA8C(v36, v37);
    sub_100189B20(v24, v25);
    sub_100189B20(v22, v23);
    sub_100189B0C(v16, v17);
    swift_bridgeObjectRelease(v14);
    sub_10018709C(a1);
    swift_bridgeObjectRelease(v14);
    sub_100189B0C(v16, v17);
    sub_100189B20(v22, v23);
    sub_100189B20(v24, v25);
    uint64_t v26 = v34;
    swift_bridgeObjectRelease(v34);
    uint64_t v27 = v33;
    *uint64_t v33 = v32;
    v27[1] = v14;
    v27[2] = v16;
    v27[3] = v17;
    v27[4] = v22;
    v27[5] = v23;
    v27[6] = v24;
    v27[7] = v25;
    v27[8] = v30;
    v27[9] = v26;
    v27[10] = v29;
  }

unint64_t sub_10021B048()
{
  unint64_t result = qword_1006486A0;
  if (!qword_1006486A0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CF82C, &_s14descr1005D5299C20IdentityShareRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1006486A0);
  }

  return result;
}

uint64_t _s14descr1005D5299C20IdentityShareRequestV10CodingKeysOwst( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFA) {
    return ((uint64_t (*)(void))((char *)&loc_10021B0D8 + 4 * byte_1004CF691[v4]))();
  }
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10021B10C + 4 * byte_1004CF68C[v4]))();
}

uint64_t sub_10021B10C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021B114(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10021B11CLL);
  }
  return result;
}

uint64_t sub_10021B128(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10021B130LL);
  }
  *(_BYTE *)unint64_t result = a2 + 5;
  return result;
}

uint64_t sub_10021B134(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021B13C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1005D5299C20IdentityShareRequestV10CodingKeysOMa()
{
  return &_s14descr1005D5299C20IdentityShareRequestV10CodingKeysON;
}

unint64_t sub_10021B15C()
{
  unint64_t result = qword_1006486B0;
  if (!qword_1006486B0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CF804, &_s14descr1005D5299C20IdentityShareRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1006486B0);
  }

  return result;
}

unint64_t sub_10021B1A4()
{
  unint64_t result = qword_1006486B8;
  if (!qword_1006486B8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CF73C, &_s14descr1005D5299C20IdentityShareRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1006486B8);
  }

  return result;
}

unint64_t sub_10021B1EC()
{
  unint64_t result = qword_1006486C0;
  if (!qword_1006486C0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CF764, &_s14descr1005D5299C20IdentityShareRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1006486C0);
  }

  return result;
}

uint64_t type metadata accessor for SDAirDropContentHandlerMapsLinks()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary32SDAirDropContentHandlerMapsLinks);
}

uint64_t sub_10021B250@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerMapsLinks();
  uint64_t result = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *a1 = result;
  return result;
}

uint64_t sub_10021B288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100183098((uint64_t *)&unk_1006563F0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void **)(*(void *)v2 + 16LL);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v7, 1LL, 1LL, v9);
  id v10 = v8;
  sub_10026664C(a1, v8, 1, a2);

  return sub_100187100((uint64_t)v7, (uint64_t *)&unk_1006563F0);
}

uint64_t sub_10021B36C(uint64_t a1, char a2)
{
  uint64_t v3 = sub_100183098(&qword_100645128);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v75 - v11;
  uint64_t v14 = SFAirDropReceive.AskRequest.urlItems.getter(v13);
  unint64_t v15 = *(void *)(v14 + 16);
  __n128 v16 = swift_bridgeObjectRelease(v14);
  SFAirDropReceive.AskRequest.itemsDescriptionAdvanced.getter(v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_100187100((uint64_t)v5, &qword_100645128);
    goto LABEL_10;
  }

  unint64_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v17(v12, v5, v6);
  v17(v10, v12, v6);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v10, v6) != enum case for SFAirDropReceive.AskRequest.AdvancedItemsDescription.maps(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_10;
  }

  (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
  uint64_t v5 = (char *)*((void *)v10 + 2);
  __n128 v18 = swift_bridgeObjectRelease(*((void *)v10 + 1));
  uint64_t v19 = SFAirDropReceive.AskRequest.itemsDescription.getter(v18);
  if (!v20)
  {
LABEL_10:
    uint64_t v29 = sub_100183098((uint64_t *)&unk_100650440);
    uint64_t inited = swift_initStackObject(v29, v83);
    __int128 v75 = xmmword_1004CDCA0;
    *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(inited + 32) = 0x4E494C5F5350414DLL;
    uint64_t v31 = inited + 32;
    *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0xE90000000000004BLL;
    *(void *)(inited + 48) = v15;
    uint64_t v81 = 0x545F4E5245444F4DLL;
    unint64_t v82 = 0xEF524546534E4152LL;
    swift_bridgeObjectRetain(0xE90000000000004BLL);
    swift_bridgeObjectRetain(inited);
    v32._uint64_t countAndFlagsBits = 95LL;
    v32._object = (void *)0xE100000000000000LL;
    String.append(_:)(v32);
    v33._uint64_t countAndFlagsBits = 0x4E494C5F5350414DLL;
    v33._object = (void *)0xE90000000000004BLL;
    String.append(_:)(v33);
    swift_bridgeObjectRelease(0xE90000000000004BLL);
    if (v15 > 1)
    {
      v34._uint64_t countAndFlagsBits = 0x4C4152554C505FLL;
      v34._object = (void *)0xE700000000000000LL;
      String.append(_:)(v34);
    }

    swift_bridgeObjectRelease(inited);
    if ((a2 & 1) != 0)
    {
      v35._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
      v35._object = (void *)0xEC00000044455A49LL;
      String.append(_:)(v35);
    }

    v36._uint64_t countAndFlagsBits = 0x545845545FLL;
    v36._object = (void *)0xE500000000000000LL;
    String.append(_:)(v36);
    unint64_t v37 = v82;
    swift_setDeallocating(inited);
    uint64_t v38 = *(void *)(inited + 16);
    uint64_t v39 = sub_100183098(&qword_100646EA0);
    swift_arrayDestroy(v31, v38, v39);
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v37);
    id v42 = (id)SFLocalizedStringForKey(v40, v41);

    if (!v42)
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      uint64_t v81 = 0LL;
      unint64_t v82 = 0xE000000000000000LL;
      _StringGuts.grow(_:)(32LL);
      v72._uint64_t countAndFlagsBits = 0x6E696C207370614DLL;
      v72._object = (void *)0xEF2065707974206BLL;
      String.append(_:)(v72);
      uint64_t v80 = v5;
      type metadata accessor for SFAirDropMapsLinkType(0LL);
      _print_unlocked<A, B>(_:_:)( &v80,  &v81,  v73,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
      v74._uint64_t countAndFlagsBits = 0x20746F6E20736920LL;
      v74._object = (void *)0xEF64656C646E6168LL;
      String.append(_:)(v74);
      _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v81,  v82,  "DaemoniOSLibrary/SDAirDropContentHandlerMapsLinks.swift",  55LL,  2LL,  66LL,  0);
      __break(1u);
      JUMPOUT(0x10021BB7CLL);
    }

    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    uint64_t v45 = v44;

    uint64_t v46 = sub_100183098(&qword_1006483E0);
    uint64_t v47 = swift_allocObject(v46, 72LL, 7LL);
    *(_OWORD *)(v47 + swift_unknownObjectWeakDestroy(v0 + 16) = v75;
    *(void *)(v47 + 56) = &type metadata for Int;
    *(void *)(v47 + 64) = &protocol witness table for Int;
    *(void *)(v47 + 32) = v15;
    uint64_t v48 = v43;
    goto LABEL_16;
  }

  uint64_t v21 = v20;
  if (v15 != 1)
  {
    swift_bridgeObjectRelease(v20);
    goto LABEL_10;
  }

  uint64_t v22 = v19;
  switch((unint64_t)v5)
  {
    case 0uLL:
      uint64_t v23 = sub_100183098((uint64_t *)&unk_100650440);
      uint64_t v24 = swift_initStackObject(v23, &v76);
      uint64_t v25 = v24;
      uint64_t v26 = 0xD00000000000001ALL;
      *(void *)(v24 + 32) = 0xD00000000000001ALL;
      uint64_t v27 = v24 + 32;
      *(_OWORD *)(v24 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
      uint64_t v28 = "MAPS_LINK_CURRENT_LOCATION";
      goto LABEL_18;
    case 1uLL:
      uint64_t v59 = sub_100183098((uint64_t *)&unk_100650440);
      uint64_t v25 = swift_initStackObject(v59, &v77);
      *(void *)(v25 + 32) = 0xD000000000000014LL;
      uint64_t v27 = v25 + 32;
      *(_OWORD *)(v25 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
      *(void *)(v25 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0x8000000100505CF0LL;
      *(void *)(v25 + 48) = 1LL;
      uint64_t v81 = 0x545F4E5245444F4DLL;
      unint64_t v82 = 0xEF524546534E4152LL;
      swift_bridgeObjectRetain(0x8000000100505CF0LL);
      swift_bridgeObjectRetain(v25);
      v60._uint64_t countAndFlagsBits = 95LL;
      v60._object = (void *)0xE100000000000000LL;
      String.append(_:)(v60);
      v61._uint64_t countAndFlagsBits = 0xD000000000000014LL;
      v61._object = (void *)0x8000000100505CF0LL;
      String.append(_:)(v61);
      swift_bridgeObjectRelease(v25);
      unint64_t v55 = 0x8000000100505CF0LL;
      goto LABEL_21;
    case 2uLL:
      uint64_t v51 = sub_100183098((uint64_t *)&unk_100650440);
      uint64_t v24 = swift_initStackObject(v51, &v78);
      uint64_t v25 = v24;
      uint64_t v26 = 0xD000000000000015LL;
      *(void *)(v24 + 32) = 0xD000000000000015LL;
      uint64_t v27 = v24 + 32;
      *(_OWORD *)(v24 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
      uint64_t v28 = "MAPS_LINK_DROPPED_PIN";
LABEL_18:
      double v52 = (void *)((unint64_t)(v28 - 32) | 0x8000000000000000LL);
      *(void *)(v24 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v52;
      *(void *)(v24 + 48) = 1LL;
      uint64_t v81 = 0x545F4E5245444F4DLL;
      unint64_t v82 = 0xEF524546534E4152LL;
      swift_bridgeObjectRetain(v52);
      swift_bridgeObjectRetain(v25);
      v53._uint64_t countAndFlagsBits = 95LL;
      v53._object = (void *)0xE100000000000000LL;
      String.append(_:)(v53);
      v54._uint64_t countAndFlagsBits = v26;
      v54._object = v52;
      String.append(_:)(v54);
      swift_bridgeObjectRelease(v25);
      unint64_t v55 = (unint64_t)v52;
      goto LABEL_21;
    case 3uLL:
      uint64_t v56 = sub_100183098((uint64_t *)&unk_100650440);
      uint64_t v25 = swift_initStackObject(v56, &v79);
      *(_OWORD *)(v25 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
      *(void *)(v25 + 32) = 0x4E494C5F5350414DLL;
      uint64_t v27 = v25 + 32;
      *(void *)(v25 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0xED0000494F505F4BLL;
      *(void *)(v25 + 48) = 1LL;
      uint64_t v81 = 0x545F4E5245444F4DLL;
      unint64_t v82 = 0xEF524546534E4152LL;
      swift_bridgeObjectRetain(0xED0000494F505F4BLL);
      swift_bridgeObjectRetain(v25);
      v57._uint64_t countAndFlagsBits = 95LL;
      v57._object = (void *)0xE100000000000000LL;
      String.append(_:)(v57);
      v58._uint64_t countAndFlagsBits = 0x4E494C5F5350414DLL;
      v58._object = (void *)0xED0000494F505F4BLL;
      String.append(_:)(v58);
      swift_bridgeObjectRelease(v25);
      unint64_t v55 = 0xED0000494F505F4BLL;
LABEL_21:
      swift_bridgeObjectRelease(v55);
      if ((a2 & 1) != 0)
      {
        v62._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
        v62._object = (void *)0xEC00000044455A49LL;
        String.append(_:)(v62);
      }

      v63._uint64_t countAndFlagsBits = 0x545845545FLL;
      v63._object = (void *)0xE500000000000000LL;
      String.append(_:)(v63);
      unint64_t v64 = v82;
      swift_setDeallocating(v25);
      uint64_t v5 = *(char **)(v25 + 16);
      uint64_t v65 = sub_100183098(&qword_100646EA0);
      swift_arrayDestroy(v27, v5, v65);
      NSString v66 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v64);
      id v68 = (id)SFLocalizedStringForKey(v66, v67);

      if (!v68) {
        goto LABEL_26;
      }
      uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
      uint64_t v45 = v70;

      uint64_t v71 = sub_100183098(&qword_1006483E0);
      uint64_t v47 = swift_allocObject(v71, 72LL, 7LL);
      *(_OWORD *)(v47 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
      *(void *)(v47 + 56) = &type metadata for String;
      *(void *)(v47 + 64) = sub_10021366C();
      *(void *)(v47 + 32) = v22;
      *(void *)(v47 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v21;
      uint64_t v48 = v69;
      break;
    default:
      goto LABEL_27;
  }

uint64_t sub_10021BB8C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_1006487A8);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_1006487A8);
  if (qword_100644020 != -1) {
    swift_once(&qword_100644020, sub_10023A520);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_10021BC1C()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48LL, 7LL);
}

uint64_t type metadata accessor for SDAuthenticationNearbyActionAdvertiser()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary38SDAuthenticationNearbyActionAdvertiser);
}

uint64_t sub_10021BC70()
{
  *(void *)(v1 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v0;
  return swift_task_switch(sub_10021BC88, 0LL, 0LL);
}

uint64_t sub_10021BC88()
{
  if (qword_100643F58 != -1) {
    swift_once(&qword_100643F58, sub_10021BB8C);
  }
  uint64_t v1 = v0[15];
  uint64_t v2 = type metadata accessor for Logger(0LL);
  v0[16] = sub_100186DE4(v2, (uint64_t)qword_1006487A8);
  uint64_t v3 = swift_retain_n(v1, 2LL);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.info.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[15];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = swift_slowAlloc(32LL, -1LL);
    uint64_t v17 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    v0[10] = v7;
    uint64_t v10 = type metadata accessor for SDAuthenticationNearbyInfoAdvertiser();
    swift_retain();
    uint64_t v11 = String.init<A>(describing:)(v0 + 10, v10);
    __n128 v13 = (const char *)v12;
    v0[10] = sub_10018CDB4(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 10, v0 + 11, v8 + 4, v8 + 12);
    swift_release_n(v7, 2LL);
    swift_bridgeObjectRelease(v13, v17);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s Starting NearbyInfo advertise", v8, 0xCu);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v7, 2LL);
  }

  uint64_t v14 = *(void **)(v0[15] + 16LL);
  NSString v15 = String._bridgeToObjectiveC()();
  [v14 setLabel:v15];

  [v14 setAdvertiseRate:40];
  v0[2] = v0;
  v0[3] = sub_10021BF14;
  v0[14] = swift_continuation_init(v0 + 2, 1LL);
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000LL;
  v0[12] = sub_10023FD5C;
  v0[13] = &unk_1005D5658;
  [v14 activateWithCompletion:v0 + 10];
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_10021BF14()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48LL);
  *(void *)(*(void *)v0 + 136LL) = v1;
  if (v1) {
    uint64_t v2 = sub_10021C100;
  }
  else {
    uint64_t v2 = sub_10021BF74;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_10021BF74()
{
  uint64_t v1 = swift_retain_n(*(void *)(v0 + 120), 2LL);
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 120);
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v6 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)os_log_type_t v5 = 136315138;
    uint64_t v13 = v6;
    *(void *)(v0 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v4;
    uint64_t v7 = type metadata accessor for SDAuthenticationNearbyInfoAdvertiser();
    swift_retain();
    uint64_t v8 = String.init<A>(describing:)(v0 + 80, v7);
    uint64_t v10 = (const char *)v9;
    *(void *)(v0 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10018CDB4(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v5 + 4, v5 + 12);
    swift_release_n(v4, 2LL);
    swift_bridgeObjectRelease(v10, v13);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s: Started NearbyInfo advertiser", v5, 0xCu);
    swift_arrayDestroy(v6, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1LL, -1LL);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  else
  {
    uint64_t v11 = *(void *)(v0 + 120);

    swift_release_n(v11, 2LL);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10021C100()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10021C13C()
{
  uint64_t v1 = v0;
  if (qword_100643F58 != -1) {
    swift_once(&qword_100643F58, sub_10021BB8C);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_1006487A8);
  uint64_t v3 = swift_retain_n(v0, 2LL);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v7 = swift_slowAlloc(32LL, -1LL);
    uint64_t v13 = v1;
    uint64_t v14 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = type metadata accessor for SDAuthenticationNearbyInfoAdvertiser();
    swift_retain();
    uint64_t v9 = String.init<A>(describing:)(&v13, v8);
    uint64_t v11 = (const char *)v10;
    uint64_t v13 = sub_10018CDB4(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v11);
    swift_release_n(v1, 2LL);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Stopping advertiser", v6, 0xCu);
    swift_arrayDestroy(v7, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1LL, -1LL);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  else
  {
    swift_release_n(v1, 2LL);
  }

  return [*(id *)(v1 + 16) invalidate];
}

uint64_t type metadata accessor for SDAuthenticationNearbyInfoAdvertiser()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary36SDAuthenticationNearbyInfoAdvertiser);
}

uint64_t sub_10021C320()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for SDAuthenticationBioArmScanner()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary29SDAuthenticationBioArmScanner);
}

uint64_t sub_10021C36C()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 40));
}

uint64_t sub_10021C388()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 24));
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48LL, 7LL);
}

uint64_t type metadata accessor for SDAuthenticationBioArmNearbyInfoScanner()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary39SDAuthenticationBioArmNearbyInfoScanner);
}

uint64_t type metadata accessor for SDAuthenticationBioArmNearbyActionScanner()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary41SDAuthenticationBioArmNearbyActionScanner);
}

uint64_t sub_10021C404(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = [objc_allocWithZone(RPCompanionLinkClient) init];
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  [v9 setControlFlags:a2];
  id v10 = v9;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a3);
  [v10 setDeviceFilter:isa];

  if ((a4 & 0x100000000LL) == 0)
  {
    unint64_t v12 = *(void **)(v4 + 16);
    if (([v12 controlFlags] & 0x10000) != 0)
    {
      id v13 = v12;
      [v13 setBleScreenOffScanRate:a4];
    }
  }

  return v4;
}

uint64_t sub_10021C4EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100183098(&qword_100649170);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F58 != -1) {
    swift_once(&qword_100643F58, sub_10021BB8C);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = sub_100186DE4(v8, (uint64_t)qword_1006487A8);
  id v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)unint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Scanning for found devices", v12, 2u);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  unint64_t v13 = sub_10021FFEC();
  uint64_t v14 = (*(uint64_t (**)(char *, void, uint64_t))(v5 + 104))( v7,  enum case for AsyncThrowingStream.Continuation.BufferingPolicy.unbounded<A, B>(_:),  v4);
  __chkstk_darwin(v14);
  *(&v16 - 4) = a1;
  *(&v16 - 3) = v2;
  *((_BYTE *)&v16 - swift_unknownObjectWeakDestroy(v0 + 16) = 1;
  return AsyncThrowingStream.init<>(_:bufferingPolicy:_:)(v13, v7, sub_100220028, &v16 - 6, v13);
}

void sub_10021C690(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v54 = a4;
  uint64_t v7 = sub_100183098(&qword_100649180);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  id v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v55 = a1;
  uint64_t v56 = v9;
  if (a2 < 1)
  {
    if (qword_100643F58 != -1) {
      swift_once(&qword_100643F58, sub_10021BB8C);
    }
    Swift::String v53 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    uint64_t v19 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v19, (uint64_t)qword_1006487A8);
    uint64_t v20 = swift_retain_n(a3, 2LL);
    uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.default.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v24 = (void **)swift_slowAlloc(32LL, -1LL);
      uint64_t v57 = a3;
      aBlock = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      double v52 = (void (*)(char *, uint64_t, uint64_t))(v23 + 4);
      uint64_t v25 = a3;
      uint64_t v26 = type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner();
      swift_retain();
      uint64_t v27 = String.init<A>(describing:)(&v57, v26);
      uint64_t v29 = (const char *)v28;
      uint64_t v57 = sub_10018CDB4(v27, v28, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &aBlock, v52, v23 + 12);
      uint64_t v30 = v29;
      a3 = v25;
      swift_bridgeObjectRelease(v30);
      swift_release_n(v25, 2LL);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s: Scanning indefinitely", v23, 0xCu);
      swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1LL, -1LL);
      uint64_t v31 = v23;
      a1 = v55;
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    else
    {
      swift_release_n(a3, 2LL);
    }

    uint64_t v9 = v56;
    id v10 = v53;
  }

  else
  {
    uint64_t v14 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v13, 1LL, 1LL, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))( (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v7);
    uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v16 = (v15 + 48) & ~v15;
    uint64_t v17 = (char *)swift_allocObject(&unk_1005D5640, v16 + v9, v15 | 7);
    *((void *)v17 + 2) = 0LL;
    *((void *)v17 + 3) = 0LL;
    *((void *)v17 + 4) = a3;
    *((void *)v17 + 5) = a2;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))( &v17[v16],  (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v7);
    swift_retain();
    uint64_t v18 = sub_1001B37E8((uint64_t)v13, (uint64_t)&unk_100649190, (uint64_t)v17);
    swift_release(v18);
  }

  Swift::String v32 = *(char **)(a3 + 16);
  double v52 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  Swift::String v53 = v32;
  v52(v10, a1, v7);
  uint64_t v33 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v51 = ~v33;
  uint64_t v34 = (v33 + 24) & ~v33;
  uint64_t v35 = v34 + v9;
  uint64_t v36 = v33 | 7;
  if ((v54 & 1) != 0)
  {
    uint64_t v37 = swift_allocObject(&unk_1005D55F0, v35, v33 | 7);
    *(void *)(v37 + swift_unknownObjectWeakDestroy(v0 + 16) = a3;
    uint64_t v38 = v37 + v34;
    uint64_t v39 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    v39(v38, v10, v7);
    Swift::String v62 = sub_100220164;
    uint64_t v63 = v37;
    aBlock = _NSConcreteStackBlock;
    uint64_t v59 = 1107296256LL;
    Swift::String v60 = sub_10021D100;
    Swift::String v61 = &unk_1005D5608;
    NSString v40 = _Block_copy(&aBlock);
    uint64_t v41 = v63;
    swift_retain();
    swift_release(v41);
    id v42 = &selRef_setDeviceFoundHandler_;
  }

  else
  {
    uint64_t v43 = swift_allocObject(&unk_1005D5550, v35, v33 | 7);
    *(void *)(v43 + swift_unknownObjectWeakDestroy(v0 + 16) = a3;
    uint64_t v44 = v43 + v34;
    uint64_t v39 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    v39(v44, v10, v7);
    Swift::String v62 = sub_100220038;
    uint64_t v63 = v43;
    aBlock = _NSConcreteStackBlock;
    uint64_t v59 = 1107296256LL;
    Swift::String v60 = sub_10021D100;
    Swift::String v61 = &unk_1005D5568;
    NSString v40 = _Block_copy(&aBlock);
    uint64_t v45 = v63;
    swift_retain();
    swift_release(v45);
    id v42 = &selRef_setDeviceLostHandler_;
  }

  id v46 = v53;
  objc_msgSend(v53, *v42, v40);
  _Block_release(v40);
  v52(v10, v55, v7);
  uint64_t v47 = (v33 + 16) & v51;
  uint64_t v48 = swift_allocObject(&unk_1005D55A0, v47 + v56, v36);
  v39(v48 + v47, v10, v7);
  Swift::String v62 = sub_1002200A8;
  uint64_t v63 = v48;
  aBlock = _NSConcreteStackBlock;
  uint64_t v59 = 1107296256LL;
  Swift::String v60 = sub_1002270C0;
  Swift::String v61 = &unk_1005D55B8;
  uint64_t v49 = _Block_copy(&aBlock);
  swift_release(v63);
  [v46 activateWithCompletion:v49];
  _Block_release(v49);
}

uint64_t sub_10021CBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  uint64_t v7 = type metadata accessor for ContinuousClock(0LL);
  v6[11] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[12] = v8;
  void v6[13] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10021CC0C, 0LL, 0LL);
}

uint64_t sub_10021CC0C()
{
  if (qword_100643F58 != -1) {
    swift_once(&qword_100643F58, sub_10021BB8C);
  }
  uint64_t v1 = v0[8];
  uint64_t v2 = type metadata accessor for Logger(0LL);
  v0[14] = sub_100186DE4(v2, (uint64_t)qword_1006487A8);
  uint64_t v3 = swift_retain_n(v1, 2LL);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[8];
    uint64_t v20 = v0[9];
    uint64_t v7 = swift_slowAlloc(22LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v22 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    v0[5] = v6;
    uint64_t v9 = type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner();
    swift_retain(v6);
    uint64_t v10 = String.init<A>(describing:)(v0 + 5, v9);
    unint64_t v12 = v11;
    v0[6] = sub_10018CDB4(v10, v11, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 6, v0 + 7, v7 + 4, v7 + 12);
    swift_release_n(v6, 2LL);
    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v7 + 12) = 2048;
    v0[7] = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 7, v0 + 8, v7 + 14, v7 + 22);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Scanning for %ld seconds", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  else
  {
    uint64_t v14 = v0[8];

    uint64_t v13 = swift_release_n(v14, 2LL);
  }

  uint64_t v15 = v0[9];
  uint64_t v16 = 1000000000000000000LL * v15;
  uint64_t v17 = ((v15 >> 63) & 0xF21F494C589C0000LL) + (((unint64_t)v15 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64);
  ContinuousClock.init()(v13);
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006461D8 + dword_1006461D8);
  uint64_t v18 = (void *)swift_task_alloc(unk_1006461DC);
  v0[15] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_10021CE8C;
  return v21(v16, v17, 0LL, 0LL, 1);
}

uint64_t sub_10021CE8C()
{
  uint64_t v2 = *(void **)v1;
  swift_task_dealloc(*(void *)(*(void *)v1 + 120LL));
  uint64_t v4 = v2[12];
  uint64_t v3 = v2[13];
  uint64_t v5 = v2[11];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_100220310;
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_10021CF24;
  }

  return swift_task_switch(v6, 0LL, 0LL);
}

uint64_t sub_10021CF24()
{
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = sub_100183098(&qword_100649180);
  AsyncThrowingStream.Continuation.finish(throwing:)(v0 + 16, v2);
  uint64_t v3 = swift_retain_n(v1, 2LL);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void *)(v0 + 64);
    uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v16 = v8;
    *(void *)(v0 + 24) = v6;
    uint64_t v9 = type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner();
    swift_retain(v6);
    uint64_t v10 = String.init<A>(describing:)(v0 + 24, v9);
    unint64_t v12 = v11;
    *(void *)(v0 + 32) = sub_10018CDB4(v10, v11, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v7 + 4, v7 + 12);
    swift_release_n(v6, 2LL);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Finished scanning", v7, 0xCu);
    swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  else
  {
    uint64_t v13 = *(void *)(v0 + 64);

    swift_release_n(v13, 2LL);
  }

  uint64_t v14 = *(void *)(v0 + 104);
  objc_msgSend(*(id *)(*(void *)(v0 + 64) + 16), "invalidate", v16);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10021D100(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void (**)(void))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  id v5 = a2;
  v4();
  swift_release(v3);
}

uint64_t sub_10021D150(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v8 = sub_100183098(&qword_100649198);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F58 != -1) {
    swift_once(&qword_100643F58, sub_10021BB8C);
  }
  uint64_t v12 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v12, (uint64_t)qword_1006487A8);
  swift_retain_n(a2, 2LL);
  id v13 = a1;
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc(22LL, -1LL);
    uint64_t v34 = v11;
    uint64_t v17 = v16;
    uint64_t v18 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v19 = swift_slowAlloc(32LL, -1LL);
    uint64_t v33 = a4;
    uint64_t v20 = v19;
    uint64_t v38 = a2;
    uint64_t v39 = v19;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v35 = v9;
    uint64_t v21 = type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner();
    uint64_t v37 = a3;
    uint64_t v22 = v21;
    swift_retain();
    uint64_t v36 = v8;
    uint64_t v23 = String.init<A>(describing:)(&v38, v22);
    uint64_t v25 = (const char *)v24;
    uint64_t v38 = sub_10018CDB4(v23, v24, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v17 + 4, v17 + 12);
    swift_bridgeObjectRelease(v25);
    swift_release_n(a2, 2LL);
    *(_WORD *)(v17 + 12) = 2112;
    uint64_t v38 = (uint64_t)v13;
    id v26 = v13;
    uint64_t v8 = v36;
    uint64_t v9 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v17 + 14, v17 + 22);
    *uint64_t v18 = v13;

    _os_log_impl((void *)&_mh_execute_header, v14, v15, v33, (uint8_t *)v17, 0x16u);
    uint64_t v27 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v18, 1LL, v27);
    swift_slowDealloc(v18, -1LL, -1LL);
    swift_arrayDestroy(v20, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1LL, -1LL);
    uint64_t v28 = v17;
    unint64_t v11 = v34;
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  else
  {
    swift_release_n(a2, 2LL);
  }

  uint64_t v39 = (uint64_t)v13;
  id v29 = v13;
  uint64_t v30 = sub_100183098(&qword_100649180);
  AsyncThrowingStream.Continuation.yield(_:)(&v39, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10021D428(uint64_t result)
{
  if (result)
  {
    uint64_t v2 = result;
    swift_errorRetain(result);
    uint64_t v1 = sub_100183098(&qword_100649180);
    return AsyncThrowingStream.Continuation.finish(throwing:)(&v2, v1);
  }

  return result;
}

uint64_t type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary42SDAuthenticationNearbyInfoTemporaryScanner);
}

uint64_t type metadata accessor for SDAuthenticationWiFiTemporaryScanner()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary36SDAuthenticationWiFiTemporaryScanner);
}

uint64_t sub_10021D4B0()
{
  v1[7] = v0;
  uint64_t v2 = sub_100183098(&qword_10064D7B0);
  v1[8] = swift_task_alloc((*(void *)(*(void *)(v2 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0LL);
  v1[9] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[10] = v4;
  v1[11] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10021D534, 0LL, 0LL);
}

id sub_10021D534()
{
  id result = [(id)objc_opt_self(SDStatusMonitor) sharedMonitor];
  if (!result)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }

  uint64_t v2 = result;
  unsigned __int8 v3 = [result deviceKeyBagUnlocked];

  if ((v3 & 1) != 0)
  {
LABEL_6:
    uint64_t v9 = *(void *)(v0 + 64);
    swift_task_dealloc(*(void *)(v0 + 88));
    swift_task_dealloc(v9);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }

  id result = [(id)objc_opt_self(SDAutoUnlockAKSManager) sharedManager];
  if (!result) {
    goto LABEL_15;
  }
  uint64_t v4 = result;
  id v5 = [result localAttestedLTK];

  if (v5)
  {
    uint64_t v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v5);
    unint64_t v8 = v7;

    sub_100189B20(v6, v8);
    goto LABEL_6;
  }

  if (qword_100643F58 != -1) {
    swift_once(&qword_100643F58, sub_10021BB8C);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = sub_100186DE4(v10, (uint64_t)qword_1006487A8);
  *(void *)(v0 + 96) = v11;
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = *(void *)(v0 + 56);
    os_log_type_t v15 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v16 = swift_slowAlloc(32LL, -1LL);
    uint64_t v26 = v16;
    *(_DWORD *)os_log_type_t v15 = 136315138;
    *(void *)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v14;
    uint64_t v17 = sub_100183098(&qword_100649140);
    uint64_t v18 = String.init<A>(describing:)(v0 + 40, v17);
    unint64_t v20 = v19;
    *(void *)(v0 + 48) = sub_10018CDB4(v18, v19, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s: Waiting for keys to be loaded", v15, 0xCu);
    swift_arrayDestroy(v16, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1LL, -1LL);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  id v21 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  if (qword_100643F88 != -1) {
    swift_once(&qword_100643F88, sub_100224DF4);
  }
  uint64_t v22 = NSNotificationCenter.notifications(named:object:)(qword_100669520, 0LL);
  *(void *)(v0 + 104) = v22;

  uint64_t v23 = swift_retain(v22);
  NSNotificationCenter.Notifications.makeAsyncIterator()(v23);
  uint64_t v24 = sub_100183F14( &qword_100649138,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
  uint64_t v25 = (void *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  *(void *)(v0 + 112) = v25;
  *uint64_t v25 = v0;
  v25[1] = sub_10021D890;
  return (id)dispatch thunk of AsyncIteratorProtocol.next()(*(void *)(v0 + 64), *(void *)(v0 + 72), v24);
}

uint64_t sub_10021D890()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 112LL);
  *(void *)(*(void *)v1 + 120LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    unsigned __int8 v3 = sub_10021DACC;
  }
  else {
    unsigned __int8 v3 = sub_10021D8F4;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_10021D8F4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  (*(void (**)(void, void))(*(void *)(v0 + 80) + 8LL))(*(void *)(v0 + 88), *(void *)(v0 + 72));
  uint64_t v2 = type metadata accessor for Notification(0LL);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48LL))(v1, 1LL, v2);
  if ((_DWORD)v3 != 1) {
    uint64_t v3 = sub_100187100(*(void *)(v0 + 64), &qword_10064D7B0);
  }
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 104);
  if (v6)
  {
    uint64_t v8 = *(void *)(v0 + 56);
    uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = swift_slowAlloc(32LL, -1LL);
    uint64_t v17 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    *(void *)(v0 + 24) = v8;
    uint64_t v11 = sub_100183098(&qword_100649140);
    uint64_t v12 = String.init<A>(describing:)(v0 + 24, v11);
    unint64_t v14 = v13;
    *(void *)(v0 + 32) = sub_10018CDB4(v12, v13, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Finished waiting for keys to load", v9, 0xCu);
    swift_arrayDestroy(v10, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);

    swift_release(v7);
  }

  else
  {
    swift_release(*(void *)(v0 + 104));
  }

  uint64_t v15 = *(void *)(v0 + 64);
  swift_task_dealloc(*(void *)(v0 + 88));
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10021DACC()
{
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v0 + 120);
  uint64_t v1 = sub_100183098(&qword_100645710);
  uint64_t v2 = swift_dynamicCast(v1, v0 + 16, v1, &type metadata for Never, 7LL);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t type metadata accessor for SDAuthenticationStatusMonitor()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary29SDAuthenticationStatusMonitor);
}

uint64_t sub_10021DB4C()
{
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner));
  return swift_release(*(void *)(v0
                                 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyActionScanner));
}

uint64_t sub_10021DB90()
{
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyActionScanner));
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_10021DBE8()
{
  return type metadata accessor for SDAuthenticationBioArmUnarmedDevices(0LL);
}

uint64_t type metadata accessor for SDAuthenticationBioArmUnarmedDevices(uint64_t a1)
{
  uint64_t result = qword_100648E80;
  if (!qword_100648E80) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationBioArmUnarmedDevices);
  }
  return result;
}

void sub_10021DC2C(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "\b";
    v4[2] = "\b";
    swift_updateClassMetadata2(a1, 256LL, 3LL, v4, a1 + 88);
  }

void sub_10021DCA4(uint64_t a1)
{
  if (!qword_100648E90)
  {
    uint64_t v2 = sub_100183124((uint64_t *)&unk_100648E98);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_100648E90);
    }
  }

uint64_t sub_10021DD04(void *a1, char a2)
{
  char v4 = a2 & 1;
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = &_swiftEmptyDictionarySingleton;
  *(void *)(v2 + 24) = 0LL;
  *(_BYTE *)(v2 + 32) = 1;
  uint64_t v5 = swift_retain(v2);
  *(_DWORD *)(v2 + 36) = IOPMConnectionGetSystemCapabilities(v5);
  *(void *)(v2 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a1;
  *(_BYTE *)(v2 + 48) = v4;
  BOOL v6 = (void *)objc_opt_self(&OBJC_CLASS___NSUserDefaults);
  id v7 = a1;
  id v8 = [v6 standardUserDefaults];
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 dictionaryForKey:v9];

  if (v10
    && (v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v10,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String),  v10,  unint64_t v12 = sub_10021DE88(v11),  swift_bridgeObjectRelease(v11),  v12))
  {
    swift_beginAccess(v2 + 16, v15, 1LL, 0LL);
    uint64_t v13 = *(void *)(v2 + 16);
    *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v12;
    swift_release(v2);
    swift_bridgeObjectRelease(v13);
  }

  else
  {
    swift_release(v2);
  }

  swift_retain(v2);
  sub_10021F39C();
  swift_release(v2);

  return v2;
}

unint64_t sub_10021DE88(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v2);
  char v4 = (char *)v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v64 = sub_100183098(&qword_1006453B0);
  __chkstk_darwin(v64);
  uint64_t v63 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v62 = sub_100183098(&qword_100649118);
  __chkstk_darwin(v62);
  id v7 = (void *)((char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v68 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v9);
  Swift::String v60 = (char *)v55 - v13;
  __chkstk_darwin(v12);
  uint64_t v59 = (char *)v55 - v14;
  uint64_t v67 = a1;
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    sub_100183098(&qword_100649120);
    uint64_t v16 = (void *)static _DictionaryStorage.allocate(capacity:)(v15);
  }

  else
  {
    uint64_t v16 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v17 = *(void *)(v67 + 64);
  uint64_t v58 = v67 + 64;
  uint64_t v18 = -1LL;
  uint64_t v19 = -1LL << *(_BYTE *)(v67 + 32);
  v55[1] = ~v19;
  if (-v19 < 64) {
    uint64_t v18 = ~(-1LL << -(char)v19);
  }
  unint64_t v20 = v18 & v17;
  int64_t v57 = (unint64_t)(63 - v19) >> 6;
  NSString v66 = &v73;
  uint64_t v56 = v16 + 8;
  unint64_t result = swift_bridgeObjectRetain(v67);
  int64_t v22 = 0LL;
  uint64_t v65 = (char *)&type metadata for Any + 8;
  Swift::String v61 = v11;
  while (1)
  {
    if (v20)
    {
      uint64_t v69 = (v20 - 1) & v20;
      int64_t v70 = v22;
      unint64_t v25 = __clz(__rbit64(v20)) | (v22 << 6);
      uint64_t v26 = v68;
    }

    else
    {
      int64_t v27 = v22 + 1;
      uint64_t v26 = v68;
      if (__OFADD__(v22, 1LL)) {
        goto LABEL_37;
      }
      if (v27 >= v57)
      {
LABEL_33:
        sub_100187094(v67);
        return (unint64_t)v16;
      }

      unint64_t v28 = *(void *)(v58 + 8 * v27);
      int64_t v29 = v22 + 1;
      if (!v28)
      {
        int64_t v29 = v22 + 2;
        if (v22 + 2 >= v57) {
          goto LABEL_33;
        }
        unint64_t v28 = *(void *)(v58 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v22 + 3;
          if (v22 + 3 >= v57) {
            goto LABEL_33;
          }
          unint64_t v28 = *(void *)(v58 + 8 * v29);
          if (!v28)
          {
            int64_t v29 = v22 + 4;
            if (v22 + 4 >= v57) {
              goto LABEL_33;
            }
            unint64_t v28 = *(void *)(v58 + 8 * v29);
            if (!v28)
            {
              uint64_t v30 = v22 + 5;
              if (v22 + 5 >= v57) {
                goto LABEL_33;
              }
              unint64_t v28 = *(void *)(v58 + 8 * v30);
              if (!v28)
              {
                while (1)
                {
                  int64_t v29 = v30 + 1;
                  if (__OFADD__(v30, 1LL)) {
                    goto LABEL_38;
                  }
                  if (v29 >= v57) {
                    goto LABEL_33;
                  }
                  unint64_t v28 = *(void *)(v58 + 8 * v29);
                  ++v30;
                  if (v28) {
                    goto LABEL_26;
                  }
                }
              }

              int64_t v29 = v22 + 5;
            }
          }
        }
      }

void sub_10021E43C(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_100183098(&qword_100649148);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v39 = v1 + 64;
  uint64_t v4 = -1LL;
  uint64_t v5 = -1LL << *(_BYTE *)(v1 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1LL << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v1 + 64);
  id v7 = &v46;
  int64_t v38 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain((const char *)v1, ~v5);
  int64_t v8 = 0LL;
  uint64_t v9 = &qword_100649128;
  uint64_t v10 = (uint64_t *)&unk_100649150;
  uint64_t v11 = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v6)
    {
      uint64_t v41 = (v6 - 1) & v6;
      int64_t v42 = v8;
      unint64_t v20 = __clz(__rbit64(v6)) | (v8 << 6);
    }

    else
    {
      int64_t v21 = v8 + 1;
      if (__OFADD__(v8, 1LL)) {
        goto LABEL_36;
      }
      if (v21 >= v38)
      {
LABEL_33:
        sub_100187094(v1);
        return;
      }

      unint64_t v22 = *(void *)(v39 + 8 * v21);
      int64_t v23 = v8 + 1;
      if (!v22)
      {
        int64_t v23 = v8 + 2;
        if (v8 + 2 >= v38) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v39 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v8 + 3;
          if (v8 + 3 >= v38) {
            goto LABEL_33;
          }
          unint64_t v22 = *(void *)(v39 + 8 * v23);
          if (!v22)
          {
            int64_t v23 = v8 + 4;
            if (v8 + 4 >= v38) {
              goto LABEL_33;
            }
            unint64_t v22 = *(void *)(v39 + 8 * v23);
            if (!v22)
            {
              uint64_t v24 = v8 + 5;
              if (v8 + 5 >= v38) {
                goto LABEL_33;
              }
              unint64_t v22 = *(void *)(v39 + 8 * v24);
              if (!v22)
              {
                while (1)
                {
                  int64_t v23 = v24 + 1;
                  if (__OFADD__(v24, 1LL)) {
                    goto LABEL_37;
                  }
                  if (v23 >= v38) {
                    goto LABEL_33;
                  }
                  unint64_t v22 = *(void *)(v39 + 8 * v23);
                  ++v24;
                  if (v22) {
                    goto LABEL_26;
                  }
                }
              }

              int64_t v23 = v8 + 5;
            }
          }
        }
      }

unint64_t sub_10021E7BC(uint64_t a1)
{
  uint64_t v2 = static Array._allocateBufferUninitialized(minimumCapacity:)(128LL, &type metadata for Int8);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = 128LL;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  if (IOPMGetCapabilitiesDescription(v2 + 32, 128LL, a1))
  {
    uint64_t v3 = sub_10021FE4C(v2);
    swift_bridgeObjectRelease(v2);
  }

  else
  {
    swift_bridgeObjectRelease(v2);
    _StringGuts.grow(_:)(32LL);
    swift_bridgeObjectRelease(0xE000000000000000LL);
    v4._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for UInt32,  &protocol witness table for UInt32);
    object = v4._object;
    String.append(_:)(v4);
    swift_bridgeObjectRelease(object);
    v6._uint64_t countAndFlagsBits = 41LL;
    v6._object = (void *)0xE100000000000000LL;
    String.append(_:)(v6);
    return 0xD00000000000001DLL;
  }

  return v3;
}

unint64_t sub_10021E8D4()
{
  return sub_10021E7BC(*v0);
}

uint64_t sub_10021E8DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  Swift::String v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for TaskPriority(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1LL, 1LL, v5);
  id v7 = (void *)swift_allocObject(&unk_1005D54D8, 40LL, 7LL);
  void v7[2] = 0LL;
  int64_t v8 = v7 + 2;
  v7[3] = 0LL;
  v7[4] = v1;
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1LL, v5);
  uint64_t v10 = swift_retain(v1);
  if (v9 == 1)
  {
    sub_100187100((uint64_t)v4, &qword_100646560);
    uint64_t v11 = 0LL;
    uint64_t v12 = 0LL;
    uint64_t v13 = 7168LL;
  }

  else
  {
    unsigned __int8 v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v13 = v14 | 0x1C00LL;
    uint64_t v15 = *v8;
    if (*v8)
    {
      uint64_t v16 = v7[3];
      uint64_t ObjectType = swift_getObjectType(*v8);
      swift_unknownObjectRetain(v15);
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      uint64_t v12 = v18;
      swift_unknownObjectRelease(v15);
    }

    else
    {
      uint64_t v11 = 0LL;
      uint64_t v12 = 0LL;
    }
  }

  uint64_t v19 = swift_allocObject(&unk_1005D5500, 32LL, 7LL);
  *(void *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = &unk_100649160;
  *(void *)(v19 + 24) = v7;
  if (v12 | v11)
  {
    v23[0] = 0LL;
    v23[1] = 0LL;
    unint64_t v20 = v23;
    v23[2] = v11;
    v23[3] = v12;
  }

  else
  {
    unint64_t v20 = 0LL;
  }

  uint64_t v21 = swift_task_create(v13, v20, (char *)&type metadata for () + 8, &unk_100649820, v19);
  return swift_release(v21);
}

uint64_t sub_10021EAB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  v4[12] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  void v4[13] = v6;
  v4[14] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  v4[15] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  _BYTE v4[16] = v8;
  v4[17] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10021EB38, 0LL, 0LL);
}

id sub_10021EB38()
{
  id result = [(id)objc_opt_self(SDStatusMonitor) sharedMonitor];
  *(void *)(v0 + 144) = result;
  if (result)
  {
    uint64_t v2 = (void *)swift_task_alloc(dword_10064D7AC);
    *(void *)(v0 + 152) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10021EBAC;
    return (id)sub_1002DFC24();
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_10021EBAC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 144);
  uint64_t v5 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 152));

  type metadata accessor for SDAuthenticationStatusMonitor();
  uint64_t v3 = (void *)swift_task_alloc(dword_100649134);
  *(void *)(v1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v3;
  *uint64_t v3 = v5;
  v3[1] = sub_10021EC18;
  return sub_10021D4B0();
}

uint64_t sub_10021EC18()
{
  return swift_task_switch(sub_10021EC6C, 0LL, 0LL);
}

uint64_t sub_10021EC6C()
{
  if (qword_100643F58 != -1) {
    swift_once(&qword_100643F58, sub_10021BB8C);
  }
  uint64_t v1 = v0[11];
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_1006487A8);
  uint64_t v3 = swift_retain_n(v1, 2LL);
  Swift::String v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[11];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = swift_slowAlloc(32LL, -1LL);
    uint64_t v27 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    v0[9] = v7;
    uint64_t v10 = type metadata accessor for SDAuthenticationRegistrationManager();
    swift_retain(v7);
    uint64_t v11 = String.init<A>(describing:)(v0 + 9, v10);
    unint64_t v13 = v12;
    v0[10] = sub_10018CDB4(v11, v12, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 10, v0 + 11, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v13);
    swift_release_n(v7, 2LL);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Performing Registration when booted", v8, 0xCu);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
    swift_release_n(v0[11], 2LL);
  }

  uint64_t v14 = v0[17];
  uint64_t v15 = v0[14];
  uint64_t v25 = v0[16];
  uint64_t v26 = v0[15];
  uint64_t v17 = v0[12];
  uint64_t v16 = v0[13];
  uint64_t v18 = v0[11];
  v0[6] = sub_10021FFE8;
  v0[7] = v18;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256LL;
  v0[4] = sub_1001B9FE4;
  v0[5] = &unk_1005D5518;
  uint64_t v19 = _Block_copy(v0 + 2);
  uint64_t v20 = swift_retain(v18);
  static DispatchQoS.unspecified.getter(v20);
  v0[8] = _swiftEmptyArrayStorage;
  uint64_t v21 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v22 = sub_100183098((uint64_t *)&unk_1006460D0);
  unint64_t v23 = sub_1001D228C();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 8, v22, v23, v17, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v14, v15, v19);
  _Block_release(v19);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v14, v26);
  swift_release(v0[7]);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_10021EF6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  os_log_type_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (uint64_t *)((char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  unint64_t v13 = (void *)v1[5];
  *unint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = v13;
  char v15 = _dispatchPreconditionTest(_:)(v12);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((v15 & 1) != 0)
  {
    if (qword_100644410 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  uint64_t result = swift_once(&qword_100644410, sub_10045862C);
LABEL_3:
  if (qword_100669A30)
  {
    uint64_t v43 = v5;
    uint64_t v17 = qword_100643F58;
    id v18 = (id)qword_100669A30;
    if (v17 != -1) {
      swift_once(&qword_100643F58, sub_10021BB8C);
    }
    uint64_t v19 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v19, (uint64_t)qword_1006487A8);
    uint64_t v20 = swift_retain_n(v1, 2LL);
    uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc(12LL, -1LL);
      uint64_t v42 = v2;
      uint64_t v24 = (uint8_t *)v23;
      uint64_t v25 = swift_slowAlloc(32LL, -1LL);
      uint64_t v41 = v3;
      uint64_t v26 = v25;
      uint64_t v46 = v1;
      aBlock[0] = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v27 = type metadata accessor for SDAuthenticationRegistrationManager();
      swift_retain(v1);
      uint64_t v28 = String.init<A>(describing:)(&v46, v27);
      unint64_t v30 = v29;
      uint64_t v46 = (void *)sub_10018CDB4(v28, v29, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, aBlock, v24 + 4, v24 + 12);
      swift_release_n(v1, 2LL);
      swift_bridgeObjectRelease(v30);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s: Starting registration", v24, 0xCu);
      swift_arrayDestroy(v26, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v31 = v26;
      uint64_t v3 = v41;
      swift_slowDealloc(v31, -1LL, -1LL);
      char v32 = v24;
      uint64_t v2 = v42;
      swift_slowDealloc(v32, -1LL, -1LL);
    }

    else
    {

      swift_release_n(v1, 2LL);
    }

    uint64_t v33 = swift_allocObject(&unk_1005D5488, 32LL, 7LL);
    *(void *)(v33 + swift_unknownObjectWeakDestroy(v0 + 16) = v18;
    *(void *)(v33 + 24) = v1;
    aBlock[4] = (uint64_t)sub_10021FF04;
    uint64_t v48 = v33;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = (uint64_t)sub_1001B9FE4;
    aBlock[3] = (uint64_t)&unk_1005D54A0;
    uint64_t v34 = _Block_copy(aBlock);
    id v35 = v18;
    uint64_t v36 = swift_retain(v1);
    static DispatchQoS.unspecified.getter(v36);
    uint64_t v46 = _swiftEmptyArrayStorage;
    uint64_t v37 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v38 = sub_100183098((uint64_t *)&unk_1006460D0);
    unint64_t v39 = sub_1001D228C();
    NSString v40 = v43;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v46, v38, v39, v2, v37);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v8, v40, v34);
    _Block_release(v34);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v40, v2);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v45);

    return swift_release(v48);
  }

  return result;
}

void sub_10021F39C()
{
  uint64_t v1 = v0;
  if (qword_100643F58 != -1) {
    swift_once(&qword_100643F58, sub_10021BB8C);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_1006487A8);
  uint64_t v3 = swift_retain_n(v0, 2LL);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v7 = swift_slowAlloc(32LL, -1LL);
    uint64_t v13 = v1;
    uint64_t v14 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = type metadata accessor for SDAuthenticationRegistrationManager();
    swift_retain(v1);
    uint64_t v9 = String.init<A>(describing:)(&v13, v8);
    unint64_t v11 = v10;
    uint64_t v13 = sub_10018CDB4(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v6 + 4, v6 + 12);
    swift_release_n(v1, 2LL);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Adding Observer for keyBagChanged", v6, 0xCu);
    swift_arrayDestroy(v7, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1LL, -1LL);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v1, 2LL);
  }

  id v12 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  if (qword_100643F90 != -1) {
    swift_once(&qword_100643F90, sub_100224E0C);
  }
  [v12 addObserver:v1 selector:"handleKeyBagStateChanged" name:qword_100669528 object:0];
}

uint64_t sub_10021F5D0()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = *(void *)(v0 + 40);
  uint64_t v9 = swift_allocObject(&unk_1005D5438, 24LL, 7LL);
  swift_weakInit(v9 + 16);
  aBlock[4] = sub_10021FEB8;
  uint64_t v20 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1001B9FE4;
  aBlock[3] = &unk_1005D5450;
  unint64_t v10 = _Block_copy(aBlock);
  uint64_t v11 = swift_retain(v9);
  static DispatchQoS.unspecified.getter(v11);
  id v18 = _swiftEmptyArrayStorage;
  uint64_t v12 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v13 = sub_100183098((uint64_t *)&unk_1006460D0);
  unint64_t v14 = sub_1001D228C();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v13, v14, v1, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v20;
  swift_release(v9);
  return swift_release(v15);
}

unsigned __int8 *sub_10021F7BC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0LL, 0LL);
  uint64_t result = (unsigned __int8 *)swift_weakLoadStrong(v1);
  if (result)
  {
    uint64_t v3 = result;
    if (qword_100644410 != -1) {
      swift_once(&qword_100644410, sub_10045862C);
    }
    if (qword_100669A30)
    {
      uint64_t result = (unsigned __int8 *)[(id)objc_opt_self(SDStatusMonitor) sharedMonitor];
      if (!result)
      {
        __break(1u);
        return result;
      }

      uint64_t v4 = result;
      unsigned int v5 = [result deviceKeyBagLocked];

      if (v5 != v3[48]) {
        sub_10021EF6C();
      }
    }

    return (unsigned __int8 *)swift_release(v3);
  }

  return result;
}

uint64_t sub_10021F8C0(uint64_t a1, const char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v6);
  uint64_t v43 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v38 - v14;
  static Date.now.getter(v13);
  if (qword_100643F58 != -1) {
    swift_once(&qword_100643F58, sub_10021BB8C);
  }
  uint64_t v16 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v16, (uint64_t)qword_1006487A8);
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v42(v12, v15, v8);
  swift_bridgeObjectRetain_n(a2, 2LL);
  id v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v41 = a1;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc(22LL, -1LL);
    NSString v40 = v15;
    uint64_t v22 = v21;
    uint64_t v38 = swift_slowAlloc(64LL, -1LL);
    v45[0] = v38;
    *(_DWORD *)uint64_t v22 = 136315394;
    swift_bridgeObjectRetain(a2);
    uint64_t v44 = sub_10018CDB4(a1, (unint64_t)a2, v45);
    uint64_t v39 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v22 + 4, v22 + 12);
    swift_bridgeObjectRelease_n(a2, 3LL);
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v23 = sub_100183F14( (unint64_t *)&qword_100651A50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
    uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter(v8, v23);
    uint64_t v26 = (const char *)v25;
    uint64_t v44 = sub_10018CDB4(v24, v25, v45);
    uint64_t v3 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v22 + 14, v22 + 22);
    __n128 v27 = swift_bridgeObjectRelease(v26);
    uint64_t v28 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
    v28(v12, v8, v27);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Updating last used for device %s to %s", (uint8_t *)v22, 0x16u);
    uint64_t v29 = v38;
    swift_arrayDestroy(v38, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1LL, -1LL);
    uint64_t v30 = v22;
    uint64_t v15 = v40;
    swift_slowDealloc(v30, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(a2, 2LL);
    uint64_t v28 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
    ((void (*)(char *, uint64_t))v28)(v12, v8);
  }

  uint64_t v31 = (uint64_t)v43;
  v42(v43, v15, v8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v31, 0LL, 1LL, v8);
  *(void *)&double v32 = swift_beginAccess(v3 + 16, v45, 33LL, 0LL).n128_u64[0];
  swift_bridgeObjectRetain(a2, v32);
  sub_1002E58A4(v31, v41, (uint64_t)a2);
  swift_endAccess(v45);
  id v33 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  uint64_t v34 = *(const char **)(v3 + 16);
  swift_bridgeObjectRetain(v34);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v34);
  NSString v36 = String._bridgeToObjectiveC()();
  [v33 setObject:isa forKey:v36];

  return ((uint64_t (*)(char *, uint64_t))v28)(v15, v8);
}

void sub_10021FCB4()
{
}

uint64_t sub_10021FCD0()
{
  return swift_deallocClassInstance(v0, 49LL, 7LL);
}

uint64_t type metadata accessor for SDAuthenticationRegistrationManager()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary35SDAuthenticationRegistrationManager);
}

ValueMetadata *type metadata accessor for SDAuthenticationRegistrationManager.Capabilities()
{
  return &type metadata for SDAuthenticationRegistrationManager.Capabilities;
}

unint64_t sub_10021FD30()
{
  unint64_t result = qword_1006490F8;
  if (!qword_1006490F8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CFB64, &type metadata for SDAuthenticationRegistrationManager.Capabilities);
    atomic_store(result, (unint64_t *)&qword_1006490F8);
  }

  return result;
}

unint64_t sub_10021FD78()
{
  unint64_t result = qword_100649100;
  if (!qword_100649100)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CFB34, &type metadata for SDAuthenticationRegistrationManager.Capabilities);
    atomic_store(result, (unint64_t *)&qword_100649100);
  }

  return result;
}

unint64_t sub_10021FDC0()
{
  unint64_t result = qword_100649108;
  if (!qword_100649108)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CFB8C, &type metadata for SDAuthenticationRegistrationManager.Capabilities);
    atomic_store(result, (unint64_t *)&qword_100649108);
  }

  return result;
}

unint64_t sub_10021FE08()
{
  unint64_t result = qword_100649110;
  if (!qword_100649110)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CFBC4, &type metadata for SDAuthenticationRegistrationManager.Capabilities);
    atomic_store(result, (unint64_t *)&qword_100649110);
  }

  return result;
}

uint64_t sub_10021FE4C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1)
  {
LABEL_9:
    __break(1u);
    return result;
  }

  uint64_t v2 = result;
  int v3 = *(unsigned __int8 *)(result + 32);
  result += 32LL;
  if (v3)
  {
    uint64_t v4 = 0LL;
    uint64_t v5 = v1 - 1;
    uint64_t v6 = v2 + 33;
    while (v5 != v4)
    {
    }

    __break(1u);
    goto LABEL_9;
  }

  uint64_t v4 = 0LL;
  return static String._fromUTF8Repairing(_:)(result, v4);
}

uint64_t sub_10021FE94()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

unsigned __int8 *sub_10021FEB8()
{
  return sub_10021F7BC(v0);
}

uint64_t sub_10021FEC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10021FED0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10021FED8()
{
  swift_release(*(void *)(v0 + 24));
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_10021FF04()
{
}

uint64_t sub_10021FF2C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_10021FF58(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_10064915C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1001943E8;
  return sub_10021EAB0(a1, v4, v5, v6);
}

uint64_t sub_10021FFC4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

unint64_t sub_10021FFEC()
{
  unint64_t result = qword_100649178;
  if (!qword_100649178)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___RPCompanionLinkDevice);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100649178);
  }

  return result;
}

void sub_100220028(uint64_t a1)
{
}

uint64_t sub_100220038(void *a1)
{
  return sub_100220170(a1, "%s: yielding lost device: %@");
}

uint64_t sub_100220044()
{
  uint64_t v1 = sub_100183098(&qword_100649180);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_1002200A8(uint64_t a1)
{
  return sub_10021D428(a1);
}

uint64_t sub_1002200EC()
{
  uint64_t v1 = sub_100183098(&qword_100649180);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_100220164(void *a1)
{
  return sub_100220170(a1, "%s: yielding found device: %@");
}

uint64_t sub_100220170(void *a1, const char *a2)
{
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(sub_100183098(&qword_100649180) - 8) + 80LL);
  return sub_10021D150(a1, *(void *)(v2 + 16), v2 + ((v5 + 24) & ~v5), a2);
}

uint64_t sub_1002201C8()
{
  uint64_t v1 = sub_100183098(&qword_100649180);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 32));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_100220248(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(sub_100183098(&qword_100649180) - 8) + 80LL);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  uint64_t v10 = (void *)swift_task_alloc(dword_10064918C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_100195708;
  return sub_10021CBA8(a1, v5, v6, v7, v8, v9);
}

uint64_t SDAirDropHashError.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10022034C + 4 * byte_1004CFCF0[a1]))( 0xD000000000000010LL,  0x80000001005061F0LL);
}

  ;
}

uint64_t sub_1002203A4()
{
  return 0x6D694C2065746152LL;
}

BOOL static SDAirDropHashError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void SDAirDropHashError.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int SDAirDropHashError.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

unint64_t sub_100220440()
{
  unint64_t result = qword_1006491A0;
  if (!qword_1006491A0)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SDAirDropHashError,  &type metadata for SDAirDropHashError);
    atomic_store(result, (unint64_t *)&qword_1006491A0);
  }

  return result;
}

uint64_t sub_100220484()
{
  return SDAirDropHashError.description.getter(*v0);
}

uint64_t storeEnumTagSinglePayload for SDAirDropHashError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFA) {
    return ((uint64_t (*)(void))((char *)&loc_1002204D8 + 4 * byte_1004CFCFB[v4]))();
  }
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10022050C + 4 * byte_1004CFCF6[v4]))();
}

uint64_t sub_10022050C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100220514(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10022051CLL);
  }
  return result;
}

uint64_t sub_100220528(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100220530LL);
  }
  *(_BYTE *)unint64_t result = a2 + 5;
  return result;
}

uint64_t sub_100220534(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10022053C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropHashError()
{
  return &type metadata for SDAirDropHashError;
}

uint64_t type metadata accessor for SDAirDropContentHandlerAppStoreLinks()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary36SDAirDropContentHandlerAppStoreLinks);
}

uint64_t sub_100220578@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerAppStoreLinks();
  uint64_t result = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(result + swift_weakDestroy(v0 + 16) = 0LL;
  *a1 = result;
  return result;
}

void sub_1002205B0(__n128 a1, uint64_t a2, char a3)
{
  uint64_t v4 = SFAirDropReceive.AskRequest.itemsDescription.getter(a1);
  if (v5)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v5;
    swift_bridgeObjectRetain("ITUNES_STORE_LINK_ITUNES_U");
    v8._uint64_t countAndFlagsBits = 95LL;
    v8._object = (void *)0xE100000000000000LL;
    String.append(_:)(v8);
    v9._uint64_t countAndFlagsBits = 0xD000000000000013LL;
    v9._object = "ITUNES_STORE_LINK_ITUNES_U";
    String.append(_:)(v9);
    swift_bridgeObjectRelease("ITUNES_STORE_LINK_ITUNES_U");
    if ((a3 & 1) != 0)
    {
      v10._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
      v10._object = (void *)0xEC00000044455A49LL;
      String.append(_:)(v10);
    }

    v11._uint64_t countAndFlagsBits = 0x545845545FLL;
    v11._object = (void *)0xE500000000000000LL;
    String.append(_:)(v11);
    uint64_t v12 = sub_100183098(&qword_100646EA0);
    swift_arrayDestroy(&qword_1005D0C00, 1LL, v12);
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(0xEF524546534E4152LL);
    id v15 = (id)SFLocalizedStringForKey(v13, v14);

    if (v15)
    {
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      uint64_t v18 = v17;

      uint64_t v19 = sub_100183098(&qword_1006483E0);
      uint64_t v20 = swift_allocObject(v19, 72LL, 7LL);
      *(_OWORD *)(v20 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
      *(void *)(v20 + 56) = &type metadata for String;
      *(void *)(v20 + 64) = sub_10021366C();
      *(void *)(v20 + 32) = v6;
      *(void *)(v20 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v7;
      static String.localizedStringWithFormat(_:_:)(v16, v18, v20);
      swift_bridgeObjectRelease(v18);
LABEL_10:
      swift_bridgeObjectRelease(v20);
      return;
    }

    __break(1u);
  }

  else
  {
    swift_bridgeObjectRetain(0xE800000000000000LL);
    v21._uint64_t countAndFlagsBits = 95LL;
    v21._object = (void *)0xE100000000000000LL;
    String.append(_:)(v21);
    String.append(_:)((Swift::String)xmmword_1005D0C38);
    swift_bridgeObjectRelease(0xE800000000000000LL);
    if ((a3 & 1) != 0)
    {
      v22._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
      v22._object = (void *)0xEC00000044455A49LL;
      String.append(_:)(v22);
    }

    v23._uint64_t countAndFlagsBits = 0x545845545FLL;
    v23._object = (void *)0xE500000000000000LL;
    String.append(_:)(v23);
    uint64_t v24 = sub_100183098(&qword_100646EA0);
    swift_arrayDestroy(&xmmword_1005D0C38, 1LL, v24);
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(0xEF524546534E4152LL);
    id v27 = (id)SFLocalizedStringForKey(v25, v26);

    if (v27)
    {
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      uint64_t v20 = v29;

      static String.localizedStringWithFormat(_:_:)(v28, v20, _swiftEmptyArrayStorage);
      goto LABEL_10;
    }
  }

  __break(1u);
}

uint64_t sub_100220910()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100649288);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100649288);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t type metadata accessor for SDAirDropContentHandlerExchange()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary31SDAirDropContentHandlerExchange);
}

uint64_t sub_1002209C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerExchange();
  uint64_t result = swift_allocObject(v2, 16LL, 7LL);
  *a1 = result;
  return result;
}

uint64_t sub_1002209F0(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v1[3] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(void *)(v3 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100220A80, static AirDropActor.shared, 0LL);
}

uint64_t sub_100220A80()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = SFAirDropReceive.AskRequest.type.getter();
  char v5 = SFAirDrop.TransferType.isOnlyExchange.getter(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))(v5 & 1);
}

void sub_100220AEC(uint64_t a1, char a2)
{
  v3._uint64_t countAndFlagsBits = 95LL;
  v3._object = (void *)0xE100000000000000LL;
  String.append(_:)(v3);
  v4._uint64_t countAndFlagsBits = 0xD000000000000013LL;
  v4._object = "@ must override %@";
  String.append(_:)(v4);
  swift_bridgeObjectRelease("@ must override %@");
  if ((a2 & 1) != 0)
  {
    v5._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
    v5._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v5);
  }

  v6._uint64_t countAndFlagsBits = 0x545845545FLL;
  v6._object = (void *)0xE500000000000000LL;
  String.append(_:)(v6);
  uint64_t v7 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(&qword_1005D0A78, 1LL, v7);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL, 0x545F4E5245444F4DLL);
  id v10 = (id)SFLocalizedStringForKey(v8, v9);

  if (v10)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  }

  else
  {
    __break(1u);
  }

void sub_100220C68()
{
  qword_100669510 = 0xFFFFLL;
}

uint64_t sub_100220D50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100184678(a1);
  uint64_t result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_100220D8C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100649358);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100649358);
  if (qword_100644020 != -1) {
    swift_once(&qword_100644020, sub_10023A520);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

void sub_100220E1C()
{
  uint64_t v1 = type metadata accessor for Date(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F70 != -1) {
    swift_once(&qword_100643F70, sub_100220D8C);
  }
  uint64_t v5 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v5, (uint64_t)qword_100649358);
  id v15 = v0;
  Swift::String v6 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    NSString v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = swift_slowAlloc(32LL, -1LL);
    uint64_t v18 = v9;
    *(_DWORD *)NSString v8 = 136315138;
    id v10 = &v15[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate];
    swift_beginAccess( &v15[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate],  v17,  0LL,  0LL);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1LL, v1))
    {
      unint64_t v11 = 0x8000000100506500LL;
      uint64_t v12 = 0xD000000000000018LL;
    }

    else
    {
      uint64_t v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v2 + 16))(v4, v10, v1);
      uint64_t v12 = Date.description.getter(v13);
      unint64_t v11 = v14;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }

    uint64_t v16 = sub_10018CDB4(v12, v11, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, v17, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Storing last device unlock as %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
  }

void sub_100221098()
{
  uint64_t v1 = type metadata accessor for Date(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F70 != -1) {
    swift_once(&qword_100643F70, sub_100220D8C);
  }
  uint64_t v5 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v5, (uint64_t)qword_100649358);
  id v15 = v0;
  Swift::String v6 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    NSString v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = swift_slowAlloc(32LL, -1LL);
    uint64_t v18 = v9;
    *(_DWORD *)NSString v8 = 136315138;
    id v10 = &v15[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate];
    swift_beginAccess( &v15[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate],  v17,  0LL,  0LL);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1LL, v1))
    {
      unint64_t v11 = 0x8000000100506560LL;
      uint64_t v12 = 0xD000000000000016LL;
    }

    else
    {
      uint64_t v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v2 + 16))(v4, v10, v1);
      uint64_t v12 = Date.description.getter(v13);
      unint64_t v11 = v14;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }

    uint64_t v16 = sub_10018CDB4(v12, v11, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, v17, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Storing last device locked as %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
  }

double sub_100221314()
{
  double result = 3600.0;
  qword_100649370 = 0x40AC200000000000LL;
  return result;
}

void sub_10022132C()
{
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_allowsLenientMotionConditions) == 1)
  {
    if (qword_100643F70 != -1) {
      swift_once(&qword_100643F70, sub_100220D8C);
    }
    uint64_t v1 = type metadata accessor for Logger(0LL);
    uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100649358);
    osos_log_t log = (os_log_s *)Logger.logObject.getter(v2);
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v4 = 0;
      uint64_t v5 = "Allowing lenient motion conditions";
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, v5, v4, 2u);
      swift_slowDealloc(v4, -1LL, -1LL);
    }
  }

  else
  {
    if (qword_100643F70 != -1) {
      swift_once(&qword_100643F70, sub_100220D8C);
    }
    uint64_t v6 = type metadata accessor for Logger(0LL);
    uint64_t v7 = sub_100186DE4(v6, (uint64_t)qword_100649358);
    osos_log_t log = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v4 = 0;
      uint64_t v5 = "Denying lenient motion conditions";
      goto LABEL_10;
    }
  }
}

void sub_10022148C()
{
  uint64_t v1 = type metadata accessor for Date(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F70 != -1) {
    swift_once(&qword_100643F70, sub_100220D8C);
  }
  uint64_t v5 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v5, (uint64_t)qword_100649358);
  id v15 = v0;
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    NSString v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = swift_slowAlloc(32LL, -1LL);
    uint64_t v18 = v9;
    *(_DWORD *)NSString v8 = 136315138;
    id v10 = &v15[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate];
    swift_beginAccess( &v15[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate],  v17,  0LL,  0LL);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1LL, v1))
    {
      unint64_t v11 = 0x8000000100506580LL;
      uint64_t v12 = 0xD000000000000029LL;
    }

    else
    {
      uint64_t v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v2 + 16))(v4, v10, v1);
      uint64_t v12 = Date.description.getter(v13);
      unint64_t v11 = v14;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }

    uint64_t v16 = sub_10018CDB4(v12, v11, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, v17, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Storing last device unlocked and on wrist as %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
  }

BOOL sub_100221708()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v1);
  uint64_t v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v4 = type metadata accessor for Date(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v8 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
  swift_beginAccess(v8, v20, 0LL, 0LL);
  sub_1001D95A8(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1LL, v4) == 1)
  {
    sub_100224DB4((uint64_t)v3);
    return 0LL;
  }

  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  id v9 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v10 = String._bridgeToObjectiveC()();
  unsigned int v11 = [v9 BOOLForKey:v10];

  if (v11)
  {
    if (qword_100643F70 != -1) {
      swift_once(&qword_100643F70, sub_100220D8C);
    }
    uint64_t v12 = type metadata accessor for Logger(0LL);
    uint64_t v13 = sub_100186DE4(v12, (uint64_t)qword_100649358);
    unint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  v15,  "### TESTING ONLY: pretendNotUnlockedRecently is set, returning false for unlockedWithinLast6_5Hrs",  v16,  2u);
      swift_slowDealloc(v16, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0LL;
  }

  double v18 = Date.timeIntervalSinceNow.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v18 >= -23400.0;
}

BOOL sub_100221974()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v1);
  uint64_t v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v4 = type metadata accessor for Date(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v8 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate;
  swift_beginAccess(v8, v21, 0LL, 0LL);
  sub_1001D95A8(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1LL, v4) == 1)
  {
    sub_100224DB4((uint64_t)v3);
    return 0LL;
  }

  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  id v9 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v10 = String._bridgeToObjectiveC()();
  unsigned int v11 = [v9 BOOLForKey:v10];

  if (v11)
  {
    if (qword_100643F70 != -1) {
      swift_once(&qword_100643F70, sub_100220D8C);
    }
    uint64_t v12 = type metadata accessor for Logger(0LL);
    uint64_t v13 = sub_100186DE4(v12, (uint64_t)qword_100649358);
    unint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  v15,  "### TESTING ONLY: expireEscrowTokens is set, returning phone was locked for more than 1 hr",  v16,  2u);
      swift_slowDealloc(v16, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0LL;
  }

  double v18 = Date.timeIntervalSinceNow.getter();
  if (qword_100643F78 != -1) {
    swift_once(&qword_100643F78, sub_100221314);
  }
  double v19 = *(double *)&qword_100649370;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v18 >= -v19;
}

char *sub_100221C08(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v1);
  uint64_t v4 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v4);
  __int128 v75 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate];
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL);
  v8(v6, 1LL, 1LL, v7);
  v8(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate], 1LL, 1LL, v7);
  id v9 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator];
  *id v9 = 0LL;
  v9[1] = 0LL;
  NSString v10 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator];
  void *v10 = 0LL;
  v10[1] = 0LL;
  unsigned int v11 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator];
  void *v11 = 0LL;
  v11[1] = 0LL;
  uint64_t v12 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator];
  *uint64_t v12 = 0LL;
  v12[1] = 0LL;
  uint64_t v13 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator];
  *uint64_t v13 = 0LL;
  v13[1] = 0LL;
  unint64_t v14 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator];
  *unint64_t v14 = 0LL;
  v14[1] = 0LL;
  os_log_type_t v15 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_motionGenerator];
  *os_log_type_t v15 = 0LL;
  v15[1] = 0LL;
  uint64_t v16 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator];
  *uint64_t v16 = 0LL;
  v16[1] = 0LL;
  uint64_t v17 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeHandler];
  *uint64_t v17 = 0LL;
  v17[1] = 0LL;
  double v18 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedByPairedUnlockGenerator];
  *double v18 = 0LL;
  v18[1] = 0LL;
  double v19 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator];
  *double v19 = 0LL;
  v19[1] = 0LL;
  uint64_t v20 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator];
  *uint64_t v20 = 0LL;
  v20[1] = 0LL;
  Swift::String v21 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator];
  *Swift::String v21 = 0LL;
  v21[1] = 0LL;
  *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_allowsLenientMotionConditions] = 0;
  v8(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate], 1LL, 1LL, v7);
  *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_queue] = a1;
  v78.receiver = v1;
  v78.super_class = ObjectType;
  id v76 = a1;
  Swift::String v22 = (char *)objc_msgSendSuper2(&v78, "init");
  Swift::String v23 = (uint64_t (**)())&v22[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator];
  uint64_t v24 = *(void *)&v22[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator];
  uint64_t v25 = *(void *)&v22[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator + 8];
  *Swift::String v23 = variable initialization expression of SDAirDropHashStoreCDB.writer;
  v23[1] = 0LL;
  uint64_t v26 = v22;
  sub_100224FF8(v24, v25);
  id v27 = (id (**)())&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator];
  uint64_t v28 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator];
  uint64_t v29 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator + 8];
  *id v27 = sub_100222154;
  v27[1] = 0LL;
  sub_100224FF8(v28, v29);
  uint64_t v30 = (id (**)())&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator];
  uint64_t v31 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator];
  uint64_t v32 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator + 8];
  *uint64_t v30 = sub_100222160;
  v30[1] = 0LL;
  sub_100224FF8(v31, v32);
  id v33 = (id (**)())&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator];
  uint64_t v34 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator];
  uint64_t v35 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator
                      + 8];
  *id v33 = sub_10022216C;
  v33[1] = 0LL;
  sub_100224FF8(v34, v35);
  NSString v36 = (id (**)())&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator];
  uint64_t v37 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator];
  uint64_t v38 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator + 8];
  *NSString v36 = sub_1002221C8;
  v36[1] = 0LL;
  sub_100224FF8(v37, v38);
  uint64_t v39 = (id (**)())&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator];
  uint64_t v40 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator];
  uint64_t v41 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator + 8];
  *uint64_t v39 = sub_1002221D4;
  v39[1] = 0LL;
  sub_100224FF8(v40, v41);
  uint64_t v42 = swift_unknownObjectWeakInit(v77, v26);
  swift_unknownObjectWeakDestroy(v42);
  uint64_t v43 = (uint64_t (**)())&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator];
  uint64_t v44 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator];
  uint64_t v45 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator + 8];
  *uint64_t v43 = variable initialization expression of SDAirDropHashStoreCDB.destroyed;
  v43[1] = 0LL;
  sub_100224FF8(v44, v45);
  uint64_t v46 = swift_allocObject(&unk_1005D59E0, 24LL, 7LL);
  swift_unknownObjectWeakInit(v46 + 16, v26);
  uint64_t v47 = (void (**)(uint64_t))&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeHandler];
  uint64_t v48 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeHandler];
  uint64_t v49 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeHandler + 8];
  *uint64_t v47 = sub_100224FF0;
  v47[1] = (void (*)(uint64_t))v46;
  sub_100224FF8(v48, v49);
  char v50 = (uint64_t (**)())&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator];
  uint64_t v51 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator];
  uint64_t v52 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator
                      + 8];
  *char v50 = sub_1002226CC;
  v50[1] = 0LL;
  sub_100224FF8(v51, v52);
  BOOL v53 = (id (**)())&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator];
  uint64_t v54 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator];
  uint64_t v55 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator
                      + 8];
  char *v53 = sub_100222764;
  v53[1] = 0LL;
  sub_100224FF8(v54, v55);
  uint64_t v56 = (id (**)())&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator];
  uint64_t v57 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator];
  uint64_t v58 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator
                      + 8];
  *uint64_t v56 = sub_1002227CC;
  v56[1] = 0LL;
  sub_100224FF8(v57, v58);
  uint64_t v59 = *v27;
  if (*v27)
  {
    uint64_t v60 = (uint64_t)v27[1];
    uint64_t v61 = swift_retain(v60);
    char v62 = ((uint64_t (*)(uint64_t))v59)(v61);
    uint64_t v63 = sub_100224FF8((uint64_t)v59, v60);
    if ((v62 & 1) != 0)
    {
      uint64_t v64 = (uint64_t)v75;
      Date.init()(v63);
      v8((char *)v64, 0LL, 1LL, v7);
      uint64_t v65 = (uint64_t)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate];
      swift_beginAccess( &v26[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate],  v77,  33LL,  0LL);
      sub_100225008(v64, v65);
      swift_endAccess(v77);
    }
  }

  NSString v66 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v67 = [v66 defaultCenter];
  uint64_t v68 = qword_100643F90;
  uint64_t v69 = v26;
  if (v68 != -1) {
    swift_once(&qword_100643F90, sub_100224E0C);
  }
  [v67 addObserver:v69 selector:"handleKeyBagStateChanged" name:qword_100669528 object:0];

  id v70 = [v66 defaultCenter];
  uint64_t v71 = qword_100643FA8;
  Swift::String v72 = v69;
  if (v71 != -1) {
    swift_once(&qword_100643FA8, sub_100224E54);
  }
  [v70 addObserver:v72 selector:"handleOnWristStateChanged" name:qword_100669540 object:0];

  sub_100223FF8((uint64_t)sub_100225050, (uint64_t)&unk_1005D5A20);
  return v72;
}

id sub_100222154()
{
  return sub_100222770((SEL *)&selRef_deviceKeyBagUnlocked);
}

id sub_100222160()
{
  return sub_100222770((SEL *)&selRef_deviceInBiolockout);
}

id sub_10022216C()
{
  id result = [(id)objc_opt_self(SDStatusMonitor) sharedMonitor];
  if (result)
  {
    uint64_t v1 = result;
    unsigned int v2 = [result deviceKeyBagDisabled];

    return (id)(v2 ^ 1);
  }

  else
  {
    __break(1u);
  }

  return result;
}

id sub_1002221C8()
{
  return sub_100222770((SEL *)&selRef_sleepModeOn);
}

id sub_1002221D4()
{
  return sub_100222770((SEL *)&selRef_lostModeEnabled);
}

void sub_1002221E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 4];
  __chkstk_darwin(v6);
  NSString v10 = &v44[-v9 - 4];
  a2 += 16LL;
  swift_beginAccess(a2, v45, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a2, v11);
  if (Strong)
  {
    uint64_t v13 = (char *)Strong;
    uint64_t v14 = Strong + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator;
    os_log_type_t v15 = *(uint64_t (**)(uint64_t))(Strong
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator);
    if (!v15) {
      goto LABEL_12;
    }
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v17 = swift_retain(v16);
    char v18 = v15(v17);
    sub_100224FF8((uint64_t)v15, v16);
    if ((v18 & 1) == 0) {
      goto LABEL_12;
    }
    double v19 = *(uint64_t (**)(uint64_t))&v13[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator];
    if (v19
      && (uint64_t v20 = *(void *)&v13[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator
                              + 8],
          uint64_t v21 = swift_retain(v20),
          uint64_t v22 = v19(v21),
          sub_100224FF8((uint64_t)v19, v20),
          v22 == 3))
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v10, a1, v4);
      Swift::String v23 = (unint64_t *)&v13[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes];
      swift_beginAccess( &v13[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes],  &v43,  33LL,  0LL);
      unint64_t v24 = *v23;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v23);
      *Swift::String v23 = v24;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v24 = sub_10018C744(0, *(void *)(v24 + 16) + 1LL, 1, v24);
        *Swift::String v23 = v24;
      }

      unint64_t v27 = *(void *)(v24 + 16);
      unint64_t v26 = *(void *)(v24 + 24);
      if (v27 >= v26 >> 1)
      {
        unint64_t v24 = sub_10018C744(v26 > 1, v27 + 1, 1, v24);
        *Swift::String v23 = v24;
      }

      *(void *)(v24 + swift_weakDestroy(v0 + 16) = v27 + 1;
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))( v24 + ((*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
      + *(void *)(v5 + 72) * v27,
        v10,
        v4);
      unint64_t v28 = *v23;
      swift_endAccess(&v43);
      if (*(void *)(v28 + 16) >= 3uLL)
      {
        swift_beginAccess(v23, &v43, 33LL, 0LL);
        sub_1002225C0((uint64_t)v8);
        swift_endAccess(&v43);

        (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
        return;
      }
    }

    else
    {
LABEL_12:
      if (qword_100643F70 != -1) {
        swift_once(&qword_100643F70, sub_100220D8C);
      }
      uint64_t v29 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v29, (uint64_t)qword_100649358);
      uint64_t v30 = v13;
      uint64_t v13 = (char *)Logger.logObject.getter(v30);
      os_log_type_t v31 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled((os_log_t)v13, v31))
      {

        return;
      }

      uint64_t v32 = swift_slowAlloc(14LL, -1LL);
      *(_DWORD *)uint64_t v32 = 67109376;
      id v33 = *(uint64_t (**)(uint64_t))v14;
      BOOL v34 = 1;
      if (*(void *)v14)
      {
        uint64_t v35 = *(void *)(v14 + 8);
        uint64_t v36 = swift_retain(v35);
        char v37 = v33(v36);
        sub_100224FF8((uint64_t)v33, v35);
        BOOL v34 = (v37 & 1) == 0;
      }

      BOOL v43 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44, v32 + 4, v32 + 8);
      *(_WORD *)(v32 + 8) = 1024;
      uint64_t v38 = *(uint64_t (**)(uint64_t))&v30[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator];
      if (v38)
      {
        uint64_t v39 = *(void *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator
                            + 8];
        uint64_t v40 = swift_retain(v39);
        uint64_t v41 = v38(v40);
        sub_100224FF8((uint64_t)v38, v39);
        BOOL v42 = v41 != 3;
      }

      else
      {
        BOOL v42 = 1;
      }

      BOOL v43 = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44, v32 + 10, v32 + 14);

      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v13,  v31,  "Ignoring wake gesture because device is either locked (%{BOOL}d) or off wrist (%{BOOL}d)",  (uint8_t *)v32,  0xEu);
      swift_slowDealloc(v32, -1LL, -1LL);
    }
  }

uint64_t sub_1002225C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100183098(&qword_1006457E8);
  uint64_t result = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *v1;
  if (!*(void *)(*v1 + 16))
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }

  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))( v6,  v7 + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)),  v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0LL, 1LL, v8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1LL, v8);
  if ((_DWORD)result != 1)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v6, v8);
    if (*(void *)(v7 + 16)) {
      return sub_1003C0BB4(0LL, 1LL);
    }
    goto LABEL_6;
  }

uint64_t sub_1002226CC()
{
  id v0 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 BOOLForKey:v1];

  return (uint64_t)v2;
}

id sub_100222764()
{
  return sub_100222770((SEL *)&selRef_deviceIsInClassD);
}

id sub_100222770(SEL *a1)
{
  id result = [(id)objc_opt_self(SDStatusMonitor) sharedMonitor];
  if (result)
  {
    uint64_t v3 = result;
    id v4 = [result *a1];

    return v4;
  }

  else
  {
    __break(1u);
  }

  return result;
}

id sub_1002227CC()
{
  id result = [(id)objc_opt_self(SDStatusMonitor) sharedMonitor];
  if (result)
  {
    NSString v1 = result;
    id v2 = [result deviceKeyBagState];

    return (id)(v2 == (id)6);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_10022282C(uint64_t a1, char *a2, uint64_t *a3)
{
  uint64_t v237 = a1;
  v238 = a3;
  uint64_t v236 = sub_100183098(&qword_1006493C8);
  uint64_t v219 = *(void *)(v236 - 8);
  __chkstk_darwin(v236);
  uint64_t v217 = v4;
  v218 = (char *)&v215 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_1006457E8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v221 = (uint64_t)&v215 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v222 = (uint64_t)&v215 - v8;
  uint64_t v227 = type metadata accessor for AuthenticationSecurityRequest(0LL);
  uint64_t v9 = __chkstk_darwin(v227);
  uint64_t v225 = (uint64_t)&v215 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v226 = (uint64_t)&v215 - v11;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v231 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  v216 = (char *)&v215 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  v220 = (char *)&v215 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v224 = (char *)&v215 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v215 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v223 = (uint64_t)&v215 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v232 = (char *)&v215 - v25;
  __chkstk_darwin(v24);
  unint64_t v27 = (char *)&v215 - v26;
  unint64_t v28 = *(uint64_t (**)(void))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator];
  if (v28)
  {
    uint64_t v29 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator + 8];
    uint64_t v30 = swift_retain(v29);
    uint64_t v31 = v28(v30);
    sub_100224FF8((uint64_t)v28, v29);
  }

  else
  {
    uint64_t v31 = 0LL;
  }

  uint64_t v32 = *(uint64_t (**)(void))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator];
  if (v32)
  {
    uint64_t v33 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator + 8];
    uint64_t v34 = swift_retain(v33);
    int v235 = v32(v34);
    sub_100224FF8((uint64_t)v32, v33);
  }

  else
  {
    int v235 = 0;
  }

  uint64_t v35 = *(uint64_t (**)(void))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator];
  if (v35)
  {
    uint64_t v36 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator
                       + 8];
    uint64_t v37 = swift_retain(v36);
    int v233 = v35(v37);
    sub_100224FF8((uint64_t)v35, v36);
  }

  else
  {
    int v233 = 1;
  }

  uint64_t v38 = *(uint64_t (**)(void))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator];
  if (v38)
  {
    uint64_t v39 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator + 8];
    uint64_t v40 = swift_retain(v39);
    v234[0] = v38(v40);
    sub_100224FF8((uint64_t)v38, v39);
  }

  else
  {
    v234[0] = 0;
  }

  uint64_t v41 = *(uint64_t (**)(void))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator];
  if (v41)
  {
    uint64_t v42 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator + 8];
    uint64_t v43 = swift_retain(v42);
    int v229 = v41(v43);
    sub_100224FF8((uint64_t)v41, v42);
  }

  else
  {
    int v229 = 0;
  }

  v228 = v27;
  uint64_t v44 = *(uint64_t (**)(void))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator];
  if (v44)
  {
    uint64_t v45 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator + 8];
    uint64_t v46 = swift_retain(v45);
    char v47 = v44(v46);
    sub_100224FF8((uint64_t)v44, v45);
  }

  else
  {
    char v47 = 0;
  }

  uint64_t v48 = *(uint64_t (**)(void))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator];
  if (v48)
  {
    uint64_t v49 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator
                       + 8];
    uint64_t v50 = swift_retain(v49);
    char v51 = v48(v50);
    sub_100224FF8((uint64_t)v48, v49);
  }

  else
  {
    char v51 = 0;
  }

  uint64_t v230 = v12;
  uint64_t v52 = *(uint64_t (**)(void))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator];
  if (v52)
  {
    uint64_t v53 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator
                       + 8];
    uint64_t v54 = swift_retain(v53);
    char v55 = v52(v54);
    sub_100224FF8((uint64_t)v52, v53);
  }

  else
  {
    char v55 = 0;
  }

  uint64_t v56 = *(uint64_t (**)(void))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator];
  if (v56)
  {
    uint64_t v57 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator
                       + 8];
    uint64_t v58 = swift_retain(v57);
    char v59 = v56(v58);
    sub_100224FF8((uint64_t)v56, v57);
  }

  else
  {
    char v59 = 0;
  }

  uint64_t v60 = *(uint64_t (**)(void))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator];
  if (v60)
  {
    uint64_t v61 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator
                       + 8];
    uint64_t v62 = swift_retain(v61);
    unsigned __int8 v63 = v60(v62);
    sub_100224FF8((uint64_t)v60, v61);
  }

  else
  {
    unsigned __int8 v63 = 0;
  }

  uint64_t v64 = *v238;
  if (!(((*v238 & 0x40) == 0) | v47 & 1))
  {
    type metadata accessor for SFAuthenticationError(0LL);
    uint64_t v72 = v71;
    uint64_t v73 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    uint64_t v68 = swift_allocError(v72, v73, 0LL, 0LL);
    int v70 = 13;
LABEL_49:
    *uint64_t v69 = v70;
    uint64_t v245 = v68;
    return CheckedContinuation.resume(throwing:)(&v245, v236);
  }

  if ((v64 & 1) != 0 && v31 != 3)
  {
    type metadata accessor for SFAuthenticationError(0LL);
    uint64_t v66 = v65;
    uint64_t v67 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    uint64_t v68 = swift_allocError(v66, v67, 0LL, 0LL);
    if (v31 == 1) {
      int v70 = 2;
    }
    else {
      int v70 = 3;
    }
    goto LABEL_49;
  }

  char v74 = v235;
  if (!(((*v238 & 2) == 0) | v235 & 1))
  {
    type metadata accessor for SFAuthenticationError(0LL);
    uint64_t v79 = v78;
    uint64_t v80 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    uint64_t v68 = swift_allocError(v79, v80, 0LL, 0LL);
LABEL_42:
    int v70 = 4;
    goto LABEL_49;
  }

  if (!(((*v238 & 2) == 0) | v51 & 1) || !(((*v238 & 0x800) == 0) | v51 & 1))
  {
    type metadata accessor for SFAuthenticationError(0LL);
    uint64_t v85 = v84;
    uint64_t v86 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    uint64_t v68 = swift_allocError(v85, v86, 0LL, 0LL);
    int v70 = 5;
    goto LABEL_49;
  }

  if ((((*v238 & 0x80) != 0) & v63) == 1)
  {
    type metadata accessor for SFAuthenticationError(0LL);
    uint64_t v82 = v81;
    uint64_t v83 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    uint64_t v68 = swift_allocError(v82, v83, 0LL, 0LL);
    int v70 = 26;
    goto LABEL_49;
  }

  if (!(((*v238 & 0x100) == 0) | v55 & 1))
  {
LABEL_39:
    type metadata accessor for SFAuthenticationError(0LL);
    uint64_t v76 = v75;
    uint64_t v77 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    uint64_t v68 = swift_allocError(v76, v77, 0LL, 0LL);
LABEL_40:
    int v70 = 21;
    goto LABEL_49;
  }

  if ((((*v238 & 0x8000) != 0) & v234[0]) == 1)
  {
    type metadata accessor for SFAuthenticationError(0LL);
    uint64_t v89 = v88;
    uint64_t v90 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    uint64_t v68 = swift_allocError(v89, v90, 0LL, 0LL);
    int v70 = 28;
    goto LABEL_49;
  }

  if ((((*v238 & 0x200) != 0) & v233) == 1)
  {
    type metadata accessor for SFAuthenticationError(0LL);
    uint64_t v92 = v91;
    uint64_t v93 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    uint64_t v68 = swift_allocError(v92, v93, 0LL, 0LL);
    int v70 = 27;
    goto LABEL_49;
  }

  if (!(((*v238 & 0x4000) == 0) | v59 & 1))
  {
    type metadata accessor for SFAuthenticationError(0LL);
    uint64_t v98 = v97;
    uint64_t v99 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    uint64_t v68 = swift_allocError(v98, v99, 0LL, 0LL);
    if ((v74 & 1) == 0) {
      goto LABEL_42;
    }
    goto LABEL_40;
  }

  if ((((*v238 & 8) != 0) & v229) == 1)
  {
    type metadata accessor for SFAuthenticationError(0LL);
    uint64_t v95 = v94;
    uint64_t v96 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    uint64_t v68 = swift_allocError(v95, v96, 0LL, 0LL);
    int v70 = 6;
    goto LABEL_49;
  }

  uint64_t v100 = (uint64_t)v228;
  sub_100223D8C((uint64_t)v228);
  uint64_t v101 = *(void (**)(void, void, void))(v231 + 16);
  uint64_t v102 = v232;
  uint64_t v103 = v230;
  v101(v232, (char *)v238 + *(int *)(v227 + 20), v230);
  char v104 = static Date.< infix(_:_:)(v100, v102);
  if ((v64 & 4) == 0 || (v104 & 1) != 0)
  {
    CFStringRef v122 = v232;
    char v123 = static Date.> infix(_:_:)(v100, v232);
    v101(v21, v100, v103);
    uint64_t v124 = v224;
    v101(v224, v122, v103);
    BOOL v125 = (v123 & 1) != 0 || fabs(Date.timeIntervalSince(_:)(v124)) < 1.0;
    uint64_t v132 = *(void (**)(void, void))(v231 + 8);
    v132(v124, v103);
    *(void *)v234 = v132;
    uint64_t v133 = ((uint64_t (*)(char *, uint64_t))v132)(v21, v103);
    uint64_t v134 = *v238;
    if ((*v238 & 0x1000) != 0 && !v125)
    {
      if (qword_100643F70 != -1) {
        swift_once(&qword_100643F70, sub_100220D8C);
      }
      uint64_t v135 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v135, (uint64_t)qword_100649358);
      sub_100224F70((uint64_t)v238, v225);
      v136 = a2;
      uint64_t v137 = (os_log_s *)Logger.logObject.getter(v136);
      os_log_type_t v138 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v137, v138))
      {
        uint64_t v139 = swift_slowAlloc(22LL, -1LL);
        uint64_t v140 = swift_slowAlloc(64LL, -1LL);
        uint64_t v245 = v140;
        *(_DWORD *)uint64_t v139 = 136315394;
        uint64_t v141 = v223;
        uint64_t v142 = sub_100223D8C(v223);
        uint64_t v143 = Date.description.getter(v142);
        uint64_t v145 = v144;
        uint64_t v146 = v230;
        (*(void (**)(uint64_t, uint64_t))v234)(v141, v230);
        uint64_t v243 = sub_10018CDB4(v143, (unint64_t)v145, &v245);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v243, &v244, v139 + 4, v139 + 12);

        swift_bridgeObjectRelease(v145);
        *(_WORD *)(v139 + 12) = 2080;
        uint64_t v147 = v225;
        uint64_t v148 = sub_100183F14( (unint64_t *)&qword_100651A50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
        uint64_t v149 = dispatch thunk of CustomStringConvertible.description.getter(v146, v148);
        v151 = (const char *)v150;
        uint64_t v243 = sub_10018CDB4(v149, v150, &v245);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v243, &v244, v139 + 14, v139 + 22);
        swift_bridgeObjectRelease(v151);
        sub_100224FB4(v147);
        _os_log_impl( (void *)&_mh_execute_header,  v137,  v138,  "Local device unlocked (%s) is before remote device unlocked (%s)",  (uint8_t *)v139,  0x16u);
        swift_arrayDestroy(v140, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v140, -1LL, -1LL);
        swift_slowDealloc(v139, -1LL, -1LL);
      }

      else
      {

        sub_100224FB4(v225);
      }

      type metadata accessor for SFAuthenticationError(0LL);
      uint64_t v156 = v155;
      uint64_t v157 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
      uint64_t v158 = swift_allocError(v156, v157, 0LL, 0LL);
      int v160 = 11;
      goto LABEL_89;
    }

    if ((v134 & 0x20) != 0 && (uint64_t v133 = sub_100221708(), (v133 & 1) == 0))
    {
      type metadata accessor for SFAuthenticationError(0LL);
      uint64_t v165 = v164;
      uint64_t v166 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
      uint64_t v158 = swift_allocError(v165, v166, 0LL, 0LL);
      int v160 = 8;
    }

    else
    {
      if (((v134 & 0x400) == 0) | v235 & 1 || (uint64_t v133 = sub_100221974(), (v133 & 1) != 0))
      {
        double v153 = Date.timeIntervalSinceNow.getter(v133);
        if (v153 < -480.0)
        {
          unint64_t v161 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate];
          swift_beginAccess( &a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate],  &v245,  0LL,  0LL);
          uint64_t v162 = (uint64_t)v161;
          uint64_t v163 = v222;
          sub_1001D95A8(v162, v222);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v231 + 48))(v163, 1LL, v230) == 1)
          {
            sub_100224DB4(v222);
            goto LABEL_95;
          }

          uint64_t v170 = v220;
          uint64_t v171 = v230;
          uint64_t v172 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v231 + 32))(v220, v222, v230);
          double v173 = Date.timeIntervalSinceNow.getter(v172);
          uint64_t v152 = (*(uint64_t (**)(char *, uint64_t))v234)(v170, v171);
          BOOL v154 = v173 < -480.0;
        }

        else
        {
          BOOL v154 = 0;
        }

        if (a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_allowsLenientMotionConditions] == 1
          && !v154)
        {
          if ((*(_BYTE *)v238 & 0x10) == 0) {
            goto LABEL_114;
          }
LABEL_98:
          if (qword_100643F70 != -1) {
            swift_once(&qword_100643F70, sub_100220D8C);
          }
          uint64_t v181 = type metadata accessor for Logger(0LL);
          sub_100186DE4(v181, (uint64_t)qword_100649358);
          uint64_t v182 = a2;
          uint64_t v183 = (os_log_s *)Logger.logObject.getter(v182);
          os_log_type_t v184 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v183, v184))
          {
            uint64_t v185 = swift_slowAlloc(20LL, -1LL);
            *(_DWORD *)uint64_t v185 = 67109632;
            v186 = &v182[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes];
            __n128 v187 = swift_beginAccess( &v182[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes],  v242,  0LL,  0LL);
            BOOL v193 = 0;
            if (*(void *)(*(void *)v186 + 16LL) == 2LL)
            {
              unint64_t v188 = *(void *)v186
                   + ((*(unsigned __int8 *)(v231 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v231 + 80));
              uint64_t v189 = v223;
              uint64_t v190 = v230;
              uint64_t v191 = ((uint64_t (*)(uint64_t, unint64_t, uint64_t, __n128))v101)(v223, v188, v230, v187);
              double v192 = Date.timeIntervalSinceNow.getter(v191);
              (*(void (**)(uint64_t, uint64_t))v234)(v189, v190);
              if (v192 >= -480.0) {
                BOOL v193 = 1;
              }
            }

            BOOL v240 = v193;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v240, v241, v185 + 4, v185 + 8);
            *(_WORD *)(v185 + 8) = 1024;
            BOOL v240 = v153 >= -480.0;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v240, v241, v185 + 10, v185 + 14);
            *(_WORD *)(v185 + 14) = 1024;
            v205 = &v182[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate];
            swift_beginAccess( &v182[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate],  &v240,  0LL,  0LL);
            uint64_t v206 = (uint64_t)v205;
            uint64_t v207 = v221;
            sub_1001D95A8(v206, v221);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v231 + 48))(v207, 1LL, v230) == 1)
            {
              sub_100224DB4(v221);
              BOOL v208 = 0;
            }

            else
            {
              v209 = v216;
              uint64_t v210 = v230;
              uint64_t v211 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v231 + 32))(v216, v221, v230);
              double v212 = Date.timeIntervalSinceNow.getter(v211);
              (*(void (**)(char *, uint64_t))v234)(v209, v210);
              BOOL v208 = v212 >= -480.0;
            }

            BOOL v239 = v208;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v239, &v240, v185 + 16, v185 + 20);

            _os_log_impl( (void *)&_mh_execute_header,  v183,  v184,  "Skipping motion check because one of the following is true: hasEnoughWakeRaises = %{BOOL}d requestingDevic eUnlockedRecently = %{BOOL}d unlockedRecently = %{BOOL}d",  (uint8_t *)v185,  0x14u);
            swift_slowDealloc(v185, -1LL, -1LL);
          }

          else
          {

            uint64_t v183 = (os_log_s *)v182;
          }

          goto LABEL_114;
        }

LABEL_95:
        unint64_t v174 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes];
        __n128 v175 = swift_beginAccess( &a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes],  &v243,  0LL,  0LL);
        if (*(void *)(*(void *)v174 + 16LL) == 2LL)
        {
          unint64_t v176 = *(void *)v174
               + ((*(unsigned __int8 *)(v231 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v231 + 80));
          uint64_t v177 = v223;
          uint64_t v178 = v230;
          uint64_t v179 = ((uint64_t (*)(uint64_t, unint64_t, uint64_t, __n128))v101)(v223, v176, v230, v175);
          double v180 = Date.timeIntervalSinceNow.getter(v179);
          uint64_t v152 = (*(uint64_t (**)(uint64_t, uint64_t))v234)(v177, v178);
          if ((*(_BYTE *)v238 & 0x10) != 0)
          {
            if (v180 >= -480.0) {
              goto LABEL_98;
            }
LABEL_105:
            v194 = *(void (**)(void, void))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_motionGenerator];
            if (v194)
            {
              uint64_t v195 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_motionGenerator
                                  + 8];
              uint64_t v196 = swift_allocObject(&unk_1005D59E0, 24LL, 7LL);
              swift_unknownObjectWeakInit(v196 + 16, a2);
              uint64_t v197 = v219;
              v198 = v218;
              uint64_t v199 = v236;
              (*(void (**)(char *, uint64_t, uint64_t))(v219 + 16))(v218, v237, v236);
              uint64_t v200 = *(unsigned __int8 *)(v197 + 80);
              uint64_t v201 = (v200 + 24) & ~v200;
              uint64_t v202 = swift_allocObject(&unk_1005D5A08, v201 + v217, v200 | 7);
              *(void *)(v202 + swift_weakDestroy(v0 + 16) = v196;
              (*(void (**)(uint64_t, char *, uint64_t))(v197 + 32))(v202 + v201, v198, v199);
              sub_100224F60((uint64_t)v194, v195);
              swift_retain(v196);
              v194(sub_100224F1C, v202);
              sub_100224FF8((uint64_t)v194, v195);
              swift_release(v202);
              uint64_t v203 = v230;
              v204 = *(void (**)(void, void))v234;
              (*(void (**)(char *, uint64_t))v234)(v232, v230);
              v204(v228, v203);
              return swift_release(v196);
            }
          }
        }

        else if ((*(_BYTE *)v238 & 0x10) != 0)
        {
          goto LABEL_105;
        }

LABEL_114:
        CheckedContinuation.resume(returning:)(v152, v236);
        goto LABEL_115;
      }

      type metadata accessor for SFAuthenticationError(0LL);
      uint64_t v168 = v167;
      uint64_t v169 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
      uint64_t v158 = swift_allocError(v168, v169, 0LL, 0LL);
      int v160 = 22;
    }

    if ((v107 & 1) != 0) {
      goto LABEL_159;
    }
    unint64_t v115 = &v82[16 * v84];
    uint64_t v117 = *(void *)v115;
    char v116 = *((void *)v115 + 1);
    uint64_t v95 = __OFSUB__(v116, v117);
    uint64_t v118 = v116 - v117;
    if (v95) {
      goto LABEL_162;
    }
    if (v118 < v106) {
      goto LABEL_15;
    }
LABEL_122:
    char v123 = v84 - 1;
    if (v84 - 1 >= v4)
    {
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
      goto LABEL_166;
    }

    if (!v12) {
      goto LABEL_177;
    }
    uint64_t v124 = &v82[16 * v123];
    BOOL v125 = v82;
    uint64_t v126 = *(void *)v124;
    uint64_t v127 = v84;
    uint64_t v128 = &v125[16 * v84];
    uint64_t v129 = *((void *)v128 + 1);
    uint64_t v130 = &v12[2 * *(void *)v124];
    int v160 = &v12[2 * *(void *)v128];
    uint64_t v131 = v154;
    sub_10032CB40(v130, v160, (unint64_t)&v12[2 * v129], v153, v131);
    uint64_t v4 = v161;
    if (v161) {
      break;
    }

    if (v129 < v126) {
      goto LABEL_152;
    }
    if (v127 > *((void *)v157 + 2)) {
      goto LABEL_153;
    }
    *(void *)uint64_t v124 = v126;
    uint64_t v82 = v152;
    *(void *)&v152[16 * v123 + 8] = v129;
    uint64_t v132 = *((void *)v157 + 2);
    if (v127 >= v132) {
      goto LABEL_154;
    }
    uint64_t v4 = v132 - 1;
    memmove(v128, v128 + 16, 16 * (v132 - 1 - v127));
    uint64_t v13 = v157;
    *((void *)v157 + 2) = v132 - 1;
    uint64_t v12 = v165;
    if (v132 <= 2) {
      goto LABEL_15;
    }
  }

  swift_bridgeObjectRelease(v157);
LABEL_132:
  uint64_t v4 = (unint64_t)v154;

  uint64_t v10 = v147;
  v147[2] = 0LL;
LABEL_149:

  swift_bridgeObjectRelease((const char *)v10);
LABEL_150:
}

LABEL_89:
    *uint64_t v159 = v160;
    uint64_t v245 = v158;
    CheckedContinuation.resume(throwing:)(&v245, v236);
LABEL_115:
    uint64_t v213 = v230;
    v214 = *(uint64_t (**)(void, void))v234;
    (*(void (**)(char *, uint64_t))v234)(v232, v230);
    return v214(v228, v213);
  }

  if (qword_100643F70 != -1) {
    swift_once(&qword_100643F70, sub_100220D8C);
  }
  uint64_t v105 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v105, (uint64_t)qword_100649358);
  uint64_t v106 = v226;
  sub_100224F70((uint64_t)v238, v226);
  uint64_t v107 = a2;
  uint64_t v108 = (os_log_s *)Logger.logObject.getter(v107);
  os_log_type_t v109 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v108, v109))
  {
    uint64_t v110 = swift_slowAlloc(22LL, -1LL);
    uint64_t v111 = swift_slowAlloc(64LL, -1LL);
    uint64_t v245 = v111;
    *(_DWORD *)uint64_t v110 = 136315394;
    uint64_t v112 = v223;
    uint64_t v113 = sub_100223D8C(v223);
    uint64_t v114 = Date.description.getter(v113);
    char v116 = v115;
    (*(void (**)(uint64_t, uint64_t))(v231 + 8))(v112, v230);
    uint64_t v243 = sub_10018CDB4(v114, (unint64_t)v116, &v245);
    uint64_t v103 = v230;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v243, &v244, v110 + 4, v110 + 12);

    swift_bridgeObjectRelease(v116);
    *(_WORD *)(v110 + 12) = 2080;
    uint64_t v117 = v226;
    uint64_t v118 = sub_100183F14( (unint64_t *)&qword_100651A50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
    uint64_t v119 = dispatch thunk of CustomStringConvertible.description.getter(v103, v118);
    CFStringRef v121 = (const char *)v120;
    uint64_t v243 = sub_10018CDB4(v119, v120, &v245);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v243, &v244, v110 + 14, v110 + 22);
    swift_bridgeObjectRelease(v121);
    sub_100224FB4(v117);
    _os_log_impl( (void *)&_mh_execute_header,  v108,  v109,  "Local device unlocked (%s) is after remote device unlocked (%s)",  (uint8_t *)v110,  0x16u);
    swift_arrayDestroy(v111, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v111, -1LL, -1LL);
    swift_slowDealloc(v110, -1LL, -1LL);
  }

  else
  {

    sub_100224FB4(v106);
  }

  type metadata accessor for SFAuthenticationError(0LL);
  uint64_t v127 = v126;
  uint64_t v128 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
  uint64_t v129 = swift_allocError(v127, v128, 0LL, 0LL);
  *uint64_t v130 = 11;
  uint64_t v245 = v129;
  CheckedContinuation.resume(throwing:)(&v245, v236);
  uint64_t v131 = *(void (**)(void, void))(v231 + 8);
  v131(v232, v103);
  return ((uint64_t (*)(uint64_t, uint64_t))v131)(v100, v103);
}

uint64_t sub_100223D8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100183098(&qword_1006457E8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = &v20[-v8 - 8];
  if (SFDeviceClassCodeGet(v7, v10) == 7)
  {
    uint64_t v11 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate;
    swift_beginAccess(v11, v20, 0LL, 0LL);
    sub_1001D95A8(v11, (uint64_t)v9);
    uint64_t v12 = type metadata accessor for Date(0LL);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v9, 1LL, v12) == 1)
    {
      static Date.distantFuture.getter();
      uint64_t v14 = (uint64_t)v9;
      return sub_100224DB4(v14);
    }

    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v13 + 32))(a1, v9, v12);
  }

  else
  {
    uint64_t v15 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
    swift_beginAccess(v15, v20, 0LL, 0LL);
    sub_1001D95A8(v15, (uint64_t)v6);
    uint64_t v16 = type metadata accessor for Date(0LL);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v6, 1LL, v16) == 1)
    {
      static Date.distantFuture.getter();
      uint64_t v14 = (uint64_t)v6;
      return sub_100224DB4(v14);
    }

    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v17 + 32))(a1, v6, v16);
  }

uint64_t sub_100223F10(char a1, uint64_t a2)
{
  if ((a1 & 1) != 0)
  {
    uint64_t v2 = a2 + 16;
    swift_beginAccess(a2 + 16, v14, 0LL, 0LL);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
    if (Strong)
    {
      uint64_t v5 = (void *)Strong;
      *(_BYTE *)(Strong
               + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_allowsLenientMotionConditions) = 1;
      sub_10022132C();
    }

    uint64_t v6 = sub_100183098(&qword_1006493C8);
    return CheckedContinuation.resume(returning:)(v6, v6);
  }

  else
  {
    type metadata accessor for SFAuthenticationError(0LL);
    uint64_t v9 = v8;
    uint64_t v10 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    uint64_t v11 = swift_allocError(v9, v10, 0LL, 0LL);
    *uint64_t v12 = 7;
    v14[0] = v11;
    uint64_t v13 = sub_100183098(&qword_1006493C8);
    return CheckedContinuation.resume(throwing:)(v14, v13);
  }

uint64_t sub_100223FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v21 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v20[1] = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_queue);
  uint64_t v12 = swift_allocObject(&unk_1005D59E0, 24LL, 7LL);
  swift_unknownObjectWeakInit(v12 + 16, v2);
  aBlock[4] = a1;
  uint64_t v24 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1001B9FE4;
  aBlock[3] = a2;
  uint64_t v13 = _Block_copy(aBlock);
  uint64_t v14 = swift_retain(v12);
  static DispatchQoS.unspecified.getter(v14);
  uint64_t v22 = _swiftEmptyArrayStorage;
  uint64_t v15 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v16 = sub_100183098((uint64_t *)&unk_1006460D0);
  unint64_t v17 = sub_1001D228C();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v16, v17, v5, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v18 = v24;
  swift_release(v12);
  return swift_release(v18);
}

void sub_1002241EC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v26, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    uint64_t v4 = (_BYTE *)Strong;
    uint64_t v5 = *(uint64_t (**)(uint64_t))(Strong
                                           + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator);
    if (v5)
    {
      uint64_t v6 = *(void *)(Strong
                     + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator
                     + 8);
      uint64_t v7 = swift_retain(v6);
      char v8 = v5(v7);
      sub_100224FF8((uint64_t)v5, v6);
    }

    else
    {
      char v8 = 0;
    }

    if (qword_100643F70 != -1) {
      swift_once(&qword_100643F70, sub_100220D8C);
    }
    uint64_t v9 = type metadata accessor for Logger(0LL);
    uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_100649358);
    uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v14 = swift_slowAlloc(32LL, -1LL);
      *(_DWORD *)uint64_t v13 = 136315138;
      v25[0] = v14;
      if ((v8 & 1) != 0) {
        uint64_t v15 = 0x64656B636F6C6E75LL;
      }
      else {
        uint64_t v15 = 0x64656B636F6CLL;
      }
      if ((v8 & 1) != 0) {
        uint64_t v16 = (const char *)0xE800000000000000LL;
      }
      else {
        uint64_t v16 = (const char *)0xE600000000000000LL;
      }
      uint64_t v24 = sub_10018CDB4(v15, (unint64_t)v16, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v13 + 4, v13 + 12);
      swift_bridgeObjectRelease(v16);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Key bag state changed to %s", v13, 0xCu);
      swift_arrayDestroy(v14, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1LL, -1LL);
      swift_slowDealloc(v13, -1LL, -1LL);
    }

    sub_10022449C();
    sub_100224688();
    unint64_t v17 = (const char **)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes];
    swift_beginAccess( &v4[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes],  v25,  1LL,  0LL);
    uint64_t v18 = *v17;
    *unint64_t v17 = (const char *)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v18);
    uint64_t v19 = *(uint64_t (**)(uint64_t))&v4[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedByPairedUnlockGenerator];
    if (v19)
    {
      uint64_t v20 = *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedByPairedUnlockGenerator
                         + 8];
      uint64_t v21 = swift_retain(v20);
      char v22 = v19(v21);
      sub_100224FF8((uint64_t)v19, v20);
      char v23 = 0;
      if ((v8 & 1) == 0 || (v22 & 1) != 0) {
        goto LABEL_22;
      }
    }

    else if ((v8 & 1) == 0)
    {
      char v23 = 0;
      goto LABEL_22;
    }

    char v23 = 1;
LABEL_22:
    v4[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_allowsLenientMotionConditions] = v23;
    sub_10022132C();
  }

uint64_t sub_10022449C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_queue);
  *char v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)(v8);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    os_log_type_t v12 = *(uint64_t (**)(uint64_t))(v1
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator);
    if (v12)
    {
      uint64_t v13 = *(void *)(v1
                      + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator
                      + 8);
      uint64_t v14 = swift_retain(v13);
      unsigned __int8 v15 = v12(v14);
      uint64_t result = sub_100224FF8((uint64_t)v12, v13);
    }

    else
    {
      unsigned __int8 v15 = 0;
    }

    uint64_t v16 = *(uint64_t (**)(uint64_t))(v1
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator);
    if (v16)
    {
      uint64_t v17 = *(void *)(v1
                      + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator
                      + 8);
      uint64_t v18 = swift_retain(v17);
      uint64_t v19 = v16(v18);
      uint64_t result = sub_100224FF8((uint64_t)v16, v17);
      if ((v15 & (v19 == 3)) == 1)
      {
        Date.init()(result);
        uint64_t v20 = type metadata accessor for Date(0LL);
        (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56LL))(v4, 0LL, 1LL, v20);
        uint64_t v21 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate;
        swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate,  v23,  33LL,  0LL);
        sub_100224D6C((uint64_t)v4, v21);
        swift_endAccess(v23);
        sub_10022148C();
        return sub_100224DB4((uint64_t)v4);
      }
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_100224688()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_queue);
  *char v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)(v8);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    os_log_type_t v12 = *(uint64_t (**)(uint64_t))(v1
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator);
    if (v12
      && (uint64_t v13 = *(void *)(v1
                          + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator
                          + 8),
          uint64_t v14 = swift_retain(v13),
          char v15 = v12(v14),
          uint64_t result = sub_100224FF8((uint64_t)v12, v13),
          (v15 & 1) != 0))
    {
      Date.init()(result);
      uint64_t v16 = type metadata accessor for Date(0LL);
      (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v4, 0LL, 1LL, v16);
      uint64_t v17 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
      swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate,  v21,  33LL,  0LL);
      sub_100224D6C((uint64_t)v4, v17);
      swift_endAccess(v21);
      sub_100220E1C();
    }

    else
    {
      Date.init()(result);
      uint64_t v18 = type metadata accessor for Date(0LL);
      (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56LL))(v4, 0LL, 1LL, v18);
      uint64_t v19 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate;
      swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate,  v21,  33LL,  0LL);
      sub_100224D6C((uint64_t)v4, v19);
      swift_endAccess(v21);
      sub_100221098();
    }

    return sub_100224DB4((uint64_t)v4);
  }

  else
  {
    __break(1u);
  }

  return result;
}

void sub_1002248DC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  if (qword_100643F70 != -1) {
    swift_once(&qword_100643F70, sub_100220D8C);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = sub_100186DE4(v2, (uint64_t)qword_100649358);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "On wrist state changed", v6, 2u);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  swift_beginAccess(v1, v10, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v7);
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    sub_10022449C();
  }

void sub_100224A28(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_10022449C();
    sub_100224688();
  }

uint64_t sub_100224C14()
{
  return type metadata accessor for SDAuthenticationSecurityManager(0LL);
}

uint64_t type metadata accessor for SDAuthenticationSecurityManager(uint64_t a1)
{
  return sub_1001A4AD0( a1,  (uint64_t *)&unk_1006493B8,  (uint64_t)&nominal type descriptor for SDAuthenticationSecurityManager);
}

void sub_100224C30(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = v4[0];
    v4[2] = &unk_1004CFF00;
    void v4[3] = &unk_1004CFF00;
    v4[4] = &unk_1004CFF00;
    v4[5] = &unk_1004CFF00;
    void v4[6] = &unk_1004CFF00;
    v4[7] = &unk_1004CFF00;
    v4[8] = &unk_1004CFF00;
    v4[9] = &unk_1004CFF00;
    v4[10] = &unk_1004CFF00;
    v4[11] = &unk_1004CFF00;
    v4[12] = &unk_1004CFF00;
    void v4[13] = &unk_1004CFF00;
    v4[14] = &unk_1004CFF00;
    v4[15] = (char *)&value witness table for Builtin.UnknownObject + 64;
    _BYTE v4[16] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[17] = &unk_1004CFF18;
    v4[18] = v4[0];
    swift_updateClassMetadata2(a1, 256LL, 19LL, v4, a1 + 80);
  }

uint64_t sub_100224CE4(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_100224D6C(a1, v3);
  swift_endAccess(v5);
  sub_100220E1C();
  return sub_100224DB4(a1);
}

__CFString *sub_100224D54()
{
  qword_100669518 = (uint64_t)@"com.apple.sharingd.KeyBagFirstUnlock";
  return @"com.apple.sharingd.KeyBagFirstUnlock";
}

uint64_t sub_100224D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_1006457E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100224DB4(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_1006457E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

__CFString *sub_100224DF4()
{
  qword_100669520 = (uint64_t)@"SDAutoUnlockAKSManagerDynamicStoreUpdatedAfterFirstUnlockNotification";
  return @"SDAutoUnlockAKSManagerDynamicStoreUpdatedAfterFirstUnlockNotification";
}

__CFString *sub_100224E0C()
{
  qword_100669528 = (uint64_t)@"com.apple.sharingd.KeyBagLockStatusChanged";
  return @"com.apple.sharingd.KeyBagLockStatusChanged";
}

__CFString *sub_100224E24()
{
  qword_100669530 = (uint64_t)@"com.apple.sharingd.ScreenStateChanged";
  return @"com.apple.sharingd.ScreenStateChanged";
}

__CFString *sub_100224E3C()
{
  qword_100669538 = (uint64_t)@"com.apple.sharingd.WiFiDeviceAttached";
  return @"com.apple.sharingd.WiFiDeviceAttached";
}

__CFString *sub_100224E54()
{
  qword_100669540 = (uint64_t)@"com.apple.sharingd.WristStateChanged";
  return @"com.apple.sharingd.WristStateChanged";
}

uint64_t type metadata accessor for AuthenticationSecurityRequest(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_100649428, (uint64_t)&nominal type descriptor for AuthenticationSecurityRequest);
}

uint64_t sub_100224E80()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100224EA4()
{
  uint64_t v1 = sub_100183098(&qword_1006493C8);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_100224F1C(char a1)
{
  return sub_100223F10(a1, *(void *)(v1 + 16));
}

uint64_t sub_100224F60(uint64_t result, uint64_t a2)
{
  if (result) {
    return swift_retain(a2);
  }
  return result;
}

uint64_t sub_100224F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationSecurityRequest(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100224FB4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AuthenticationSecurityRequest(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void sub_100224FF0(uint64_t a1)
{
}

uint64_t sub_100224FF8(uint64_t result, uint64_t a2)
{
  if (result) {
    return swift_release(a2);
  }
  return result;
}

uint64_t sub_100225008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_1006457E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

void sub_100225050()
{
}

uint64_t sub_100225058(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_100225068(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_100225070()
{
}

void sub_100225078()
{
}

uint64_t *sub_100225080(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v9 + ((v4 + 16LL) & ~(unint64_t)v4));
    swift_retain(v9);
  }

  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for Date(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16LL))(v6, v7, v8);
  }

  return v3;
}

uint64_t sub_100225108(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for Date(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(v2, v3);
}

void *sub_100225140(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v5, v6, v7);
  return a1;
}

void *sub_10022519C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24LL))(v5, v6, v7);
  return a1;
}

void *sub_1002251F8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32LL))(v5, v6, v7);
  return a1;
}

void *sub_100225254(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40LL))(v5, v6, v7);
  return a1;
}

uint64_t sub_1002252B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002252BC);
}

uint64_t sub_1002252BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for Date(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48LL))(v4, a2, v5);
}

uint64_t sub_1002252FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100225308);
}

uint64_t sub_100225308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for Date(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(v5, a2, a2, v6);
}

uint64_t sub_10022534C(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  uint64_t result = type metadata accessor for Date(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

ValueMetadata *type metadata accessor for AuthenticationPolicies()
{
  return &type metadata for AuthenticationPolicies;
}

unint64_t sub_1002253D8()
{
  unint64_t result = qword_100649460;
  if (!qword_100649460)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CFFA8, &type metadata for AuthenticationPolicies);
    atomic_store(result, (unint64_t *)&qword_100649460);
  }

  return result;
}

unint64_t sub_100225420()
{
  unint64_t result = qword_100649468;
  if (!qword_100649468)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CFF78, &type metadata for AuthenticationPolicies);
    atomic_store(result, (unint64_t *)&qword_100649468);
  }

  return result;
}

unint64_t sub_100225468()
{
  unint64_t result = qword_100649470;
  if (!qword_100649470)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004CFFD0, &type metadata for AuthenticationPolicies);
    atomic_store(result, (unint64_t *)&qword_100649470);
  }

  return result;
}

unint64_t sub_1002254B0()
{
  unint64_t result = qword_100649478;
  if (!qword_100649478)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D0008, &type metadata for AuthenticationPolicies);
    atomic_store(result, (unint64_t *)&qword_100649478);
  }

  return result;
}

id sub_100225504()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100649480);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100649480);
  id result = (id)airdrop_log(v1);
  if (result) {
    return (id)Logger.init(_:)();
  }
  __break(1u);
  return result;
}

void sub_100225594()
{
  uint64_t v1 = v0;
  if ([(id)objc_opt_self(UIApplication) isRunningInStoreDemoMode])
  {
    if (qword_100643FB0 != -1) {
      swift_once(&qword_100643FB0, sub_100225504);
    }
    uint64_t v2 = type metadata accessor for Logger(0LL);
    uint64_t v3 = sub_100186DE4(v2, (uint64_t)qword_100649480);
    uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v4, v5)) {
      goto LABEL_35;
    }
    uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v6 = 0;
    uint64_t v7 = "IPA Handler: Device running in store demo mode";
LABEL_48:
    _os_log_impl((void *)&_mh_execute_header, v4, v5, v7, v6, 2u);
    swift_slowDealloc(v6, -1LL, -1LL);
LABEL_35:

    return;
  }

  id v8 = [(id)objc_opt_self(MCProfileConnection) sharedConnection];
  if (v8)
  {
    uint64_t v9 = v8;
    unsigned int v10 = [v8 isAirDropAppInstallationAllowed];

    if (!v10)
    {
      if (qword_100643FB0 != -1) {
        swift_once(&qword_100643FB0, sub_100225504);
      }
      uint64_t v35 = type metadata accessor for Logger(0LL);
      uint64_t v36 = sub_100186DE4(v35, (uint64_t)qword_100649480);
      uint64_t v4 = (os_log_s *)Logger.logObject.getter(v36);
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v4, v5)) {
        goto LABEL_35;
      }
      uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v6 = 0;
      uint64_t v7 = "IPA Handler: AirDrop app installation not allowed";
      goto LABEL_48;
    }

    if (![v1 isJustFiles])
    {
      if (qword_100643FB0 != -1) {
        swift_once(&qword_100643FB0, sub_100225504);
      }
      uint64_t v37 = type metadata accessor for Logger(0LL);
      uint64_t v38 = sub_100186DE4(v37, (uint64_t)qword_100649480);
      uint64_t v4 = (os_log_s *)Logger.logObject.getter(v38);
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v4, v5)) {
        goto LABEL_35;
      }
      uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v6 = 0;
      uint64_t v7 = "IPA Handler: isJustFiles is false";
      goto LABEL_48;
    }

    uint64_t v11 = &selRef_setWatchIDsMissingSessionKey_;
    id v12 = [v1 transfer];
    uint64_t v13 = &selRef_initWithIdentifier_queue_operation_;
    id v14 = [v12 metaData];

    id v15 = [v14 rawFiles];
    uint64_t v16 = sub_100183098((uint64_t *)&unk_100645190);
    uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = (void *)kSFOperationFileNameKey;
      swift_bridgeObjectRetain((const char *)v17);
      uint64_t v20 = 0LL;
      while (1)
      {
        if (!v19)
        {
          __break(1u);
          goto LABEL_51;
        }

        uint64_t v21 = *(void *)(v17 + 8 * v20 + 32);
        id v55 = v19;
        uint64_t v22 = sub_100183168(0LL, &qword_100645168, &OBJC_CLASS___NSString_ptr);
        unint64_t v23 = sub_1001D9550();
        swift_bridgeObjectRetain((const char *)v21);
        id v24 = v19;
        AnyHashable.init<A>(_:)(v56, &v55, v22, v23);
        if (*(void *)(v21 + 16) && (unint64_t v25 = sub_1003AD50C((uint64_t)v56), (v26 & 1) != 0))
        {
          sub_100187058(*(void *)(v21 + 56) + 32 * v25, (uint64_t)&v57);
        }

        else
        {
          __int128 v57 = 0u;
          __int128 v58 = 0u;
        }

        sub_10019154C((uint64_t)v56);
        if (!*((void *)&v58 + 1))
        {
          sub_100187100((uint64_t)&v57, (uint64_t *)&unk_100646550);
LABEL_42:
          swift_bridgeObjectRelease_n(v17, 2LL);
          swift_bridgeObjectRelease((const char *)v21);
          goto LABEL_44;
        }

        id v27 = v55;
        id v28 = [v55 pathExtension];
        static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
        uint64_t v30 = v29;

        NSString v31 = String._bridgeToObjectiveC()();
        __n128 v32 = swift_bridgeObjectRelease(v30);
        char v33 = SFIsIPA(v31, v32);
        swift_bridgeObjectRelease((const char *)v21);

        if ((v33 & 1) == 0) {
          break;
        }
        if (v18 == ++v20)
        {
          swift_bridgeObjectRelease_n(v17, 2LL);
          uint64_t v11 = &selRef_setWatchIDsMissingSessionKey_;
          uint64_t v13 = &selRef_initWithIdentifier_queue_operation_;
          goto LABEL_30;
        }
      }

      swift_bridgeObjectRelease_n(v17, 2LL);
LABEL_44:
      if (qword_100643FB0 != -1) {
        swift_once(&qword_100643FB0, sub_100225504);
      }
      uint64_t v53 = type metadata accessor for Logger(0LL);
      uint64_t v54 = sub_100186DE4(v53, (uint64_t)qword_100649480);
      uint64_t v4 = (os_log_s *)Logger.logObject.getter(v54);
      os_log_type_t v5 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v6 = 0;
        uint64_t v7 = "IPA Handler: File is not IPA, ignoring...";
        goto LABEL_48;
      }

      goto LABEL_35;
    }

    *(void *)&double v34 = swift_bridgeObjectRelease((const char *)v17).n128_u64[0];
LABEL_30:
    id v39 = objc_msgSend(v1, v11[377], v34);
    id v40 = [v39 v13[432]];

    LODWORD(v39) = [v40 senderIsMe];
    if ((_DWORD)v39)
    {
      if (qword_100643FB0 != -1) {
        swift_once(&qword_100643FB0, sub_100225504);
      }
      uint64_t v41 = type metadata accessor for Logger(0LL);
      uint64_t v42 = sub_100186DE4(v41, (uint64_t)qword_100649480);
      uint64_t v4 = (os_log_s *)Logger.logObject.getter(v42);
      os_log_type_t v43 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v43))
      {
        uint64_t v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v44 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v43, "IPA Handler: Transfer is me, can handle.", v44, 2u);
        swift_slowDealloc(v44, -1LL, -1LL);
      }

      goto LABEL_35;
    }

    id v45 = [(id)objc_opt_self(NSFileManager) defaultManager];
    NSString v46 = String._bridgeToObjectiveC()();
    unsigned int v47 = [v45 fileExistsAtPath:v46];

    if (qword_100643FB0 != -1) {
      swift_once(&qword_100643FB0, sub_100225504);
    }
    uint64_t v48 = type metadata accessor for Logger(0LL);
    uint64_t v49 = sub_100186DE4(v48, (uint64_t)qword_100649480);
    uint64_t v50 = (os_log_s *)Logger.logObject.getter(v49);
    os_log_type_t v51 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v52 = 67109120;
      LODWORD(v56[0]) = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v56, (char *)v56 + 4, v52 + 4, v52 + 8);
      _os_log_impl( (void *)&_mh_execute_header,  v50,  v51,  "IPA Handler: Developer settings bundle exists? %{BOOL}d",  v52,  8u);
      swift_slowDealloc(v52, -1LL, -1LL);
    }
  }

  else
  {
LABEL_51:
    __break(1u);
  }

void sub_100225D8C()
{
  uint64_t v2 = v0;
  id v3 = [v0 transfer];
  id v4 = [v3 metaData];

  if ([v2 totalSharedItemsCount] != (id)1)
  {
    v42[3] = &type metadata for UInt;
    v42[4] = &protocol witness table for UInt;
    v42[0] = [v2 totalSharedItemsCount];
    unint64_t v14 = 0xE300000000000000LL;
    uint64_t v15 = 4280393LL;
LABEL_12:
    uint64_t v16 = sub_100183098(&qword_1006494D8);
    uint64_t v17 = swift_allocObject(v16, 40LL, 7LL);
    __int128 v33 = xmmword_1004CDCA0;
    *(_OWORD *)(v17 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
    uint64_t v18 = sub_100183098(&qword_1006494E0);
    uint64_t inited = swift_initStackObject(v18, v41);
    *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(inited + 32) = v15;
    *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v14;
    *(void *)(inited + 48) = objc_msgSend( objc_allocWithZone(NSNumber),  "initWithUnsignedInteger:",  objc_msgSend(v2, "totalSharedItemsCount"));
    *(void *)(v17 + 32) = sub_100391F04(inited);
    sub_100183098(&qword_1006494E8);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v20 =  objc_msgSend( v2,  "alertMessageLocalizedKeyForTypeDicts:",  isa,  swift_bridgeObjectRelease((const char *)v17).n128_f64[0]);

    id v22 = (id)SFLocalizedStringForKey(v20, v21);
    if (v22)
    {
      Class isa = (Class)static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      id v24 = v23;

      uint64_t v25 = sub_100183098(&qword_1006483E0);
      uint64_t v26 = swift_allocObject(v25, 112LL, 7LL);
      *(_OWORD *)(v26 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CD530;
      id v27 = [v2 senderName];
      if (v27)
      {
        id v28 = v27;
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
        uint64_t v31 = v30;

        *(void *)(v26 + 56) = &type metadata for String;
        *(void *)(v26 + 64) = sub_10021366C();
        *(void *)(v26 + 32) = v29;
        *(void *)(v26 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v31;
        sub_10019A6C4((uint64_t)v42, v26 + 72);
        static String.localizedStringWithFormat(_:_:)(isa, v24, v26);

        *(void *)&double v32 = swift_bridgeObjectRelease(v24).n128_u64[0];
        swift_bridgeObjectRelease((const char *)v26, v32);
        sub_10018709C(v42);
        return;
      }
    }

    else
    {
      __break(1u);
    }

    __break(1u);
    goto LABEL_17;
  }

  if (!v4)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  id v5 = [v4 rawFiles];
  uint64_t v6 = sub_100183098((uint64_t *)&unk_100645190);
  Class isa = (Class)static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!isa[2].isa)
  {
LABEL_18:
    swift_bridgeObjectRelease((const char *)isa, v33, v34, (void)v35);
    __break(1u);
    goto LABEL_19;
  }

  Class v7 = isa[4].isa;
  swift_bridgeObjectRetain((const char *)v7);
  swift_bridgeObjectRelease((const char *)isa);
  id v8 = (void *)kSFOperationFileNameKey;
  if (kSFOperationFileNameKey)
  {
    v42[0] = kSFOperationFileNameKey;
    uint64_t v9 = sub_100183168(0LL, &qword_100645168, &OBJC_CLASS___NSString_ptr);
    unint64_t v10 = sub_1001D9550();
    id v11 = v8;
    AnyHashable.init<A>(_:)(v36, v42, v9, v10);
    if (v7[2].isa && (unint64_t v12 = sub_1003AD50C((uint64_t)v36), (v13 & 1) != 0))
    {
      sub_100187058((uint64_t)&v7[7].isa[4 * v12], (uint64_t)&v34);
    }

    else
    {
      __int128 v34 = 0u;
      __int128 v35 = 0u;
    }

    swift_bridgeObjectRelease((const char *)v7);
    if (!*((void *)&v35 + 1)) {
      goto LABEL_20;
    }
    sub_10019154C((uint64_t)v36);

    sub_100186D8C(&v34, v37);
    id v39 = &type metadata for String;
    unint64_t v40 = sub_10021366C();
    swift_dynamicCast(&v38, v37, (char *)&type metadata for Any + 8, &type metadata for String, 7LL);
    sub_1001CE0D0(&v38, (uint64_t)v42);
    unint64_t v14 = 0xEE00454C5449545FLL;
    uint64_t v15 = 0x485449575F415049LL;
    goto LABEL_12;
  }

void sub_10022623C()
{
  v35.receiver = v0;
  v35.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v35, "updatePossibleActions");
  id v1 = [v0 transfer];
  id v2 = [v1 identifier];

  static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  id v4 = v3;

  uint64_t ObjectType = swift_getObjectType(v0);
  _typeName(_:qualified:)(ObjectType, 0LL);
  Class v7 = v6;
  NSString v8 = String._bridgeToObjectiveC()();
  id v10 = (id)SFLocalizedStringForKey(v8, v9);

  if (v10)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    unint64_t v12 = v11;
  }

  else
  {
    unint64_t v12 = 0LL;
  }

  NSString v13 = String._bridgeToObjectiveC()();
  id v15 = (id)SFLocalizedStringForKey(v13, v14);

  if (v15)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    uint64_t v17 = v16;
  }

  else
  {
    uint64_t v17 = 0LL;
  }

  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  if (v12)
  {
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    if (v17)
    {
LABEL_9:
      NSString v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
      goto LABEL_12;
    }
  }

  else
  {
    NSString v20 = 0LL;
    if (v17) {
      goto LABEL_9;
    }
  }

  NSString v21 = 0LL;
LABEL_12:
  id v22 = [objc_allocWithZone(SFAirDropAction) initWithTransferIdentifier:v18 actionIdentifier:v19 title:v20 singleItemTitle:v21 type:1];

  if (v22)
  {
    uint64_t v23 = swift_allocObject(&unk_1005D5BF0, 24LL, 7LL);
    *(void *)(v23 + swift_unknownObjectWeakDestroy(v0 + 16) = v0;
    v33[4] = sub_100227910;
    uint64_t v34 = v23;
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 1107296256LL;
    v33[2] = sub_1002270C0;
    v33[3] = &unk_1005D5C08;
    id v24 = _Block_copy(v33);
    uint64_t v25 = v34;
    id v26 = v0;
    swift_release(v25);
    [v22 setActionHandler:v24];
    _Block_release(v24);
    id v27 = [v26 transfer];
    uint64_t v28 = sub_100183098(&qword_100650450);
    uint64_t v29 = swift_allocObject(v28, 40LL, 7LL);
    *(_OWORD *)(v29 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004D0130;
    *(void *)(v29 + 32) = v22;
    v33[0] = v29;
    specialized Array._endMutation()(v29);
    uint64_t v30 = (const char *)v33[0];
    sub_100183168(0LL, &qword_1006494C0, &OBJC_CLASS___SFAirDropAction_ptr);
    id v31 = v22;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v27, "setPossibleActions:", isa, swift_bridgeObjectRelease(v30).n128_f64[0]);
  }

uint64_t sub_10022659C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_1006494C8);
  uint64_t v125 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v112 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v109 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v107 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v106 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  char v104 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v8);
  id v10 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for URL(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v119 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v118 = (unsigned __int8 *)&v101 - v16;
  uint64_t v128 = v17;
  __chkstk_darwin(v15);
  uint64_t v111 = (char *)&v101 - v18;
  uint64_t v19 = sub_100183098(&qword_1006494D0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v126 = (size_t *)((char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v20);
  uint64_t v124 = (uint64_t *)((char *)&v101 - v22);
  if (a1)
  {
    uint64_t v23 = (uint64_t (*)(char, char, char))a1;
    uint64_t v24 = a2;
    uint64_t v25 = &unk_1005D5DF8;
  }

  else
  {
    id v26 = [v129 completionHandler];
    uint64_t v24 = swift_allocObject(&unk_1005D5C40, 24LL, 7LL);
    *(void *)(v24 + swift_unknownObjectWeakDestroy(v0 + 16) = v26;
    uint64_t v23 = sub_100227974;
    uint64_t v25 = &unk_1005D5C68;
  }

  uint64_t v27 = swift_allocObject(v25, 32LL, 7LL);
  *(void *)(v27 + swift_unknownObjectWeakDestroy(v0 + 16) = v23;
  *(void *)(v27 + 24) = v24;
  uint64_t v28 = swift_allocObject(&unk_1005D5C90, 32LL, 7LL);
  *(void *)(v28 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_100227998;
  *(void *)(v28 + 24) = v27;
  uint64_t v110 = v28;
  swift_retain(v27);
  sub_100224F60(a1, a2);
  uint64_t v29 = &selRef_setWatchIDsMissingSessionKey_;
  id v30 = [v129 transfer];
  id v31 = [v30 completedURLs];

  double v32 = (const char *)_swiftEmptyArrayStorage;
  if (v31)
  {
    uint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v11);

    double v32 = (const char *)v33;
  }

  uint64_t v34 = (void *)*((void *)v32 + 2);
  if (!v34)
  {
    uint64_t v128 = sub_100227998;
    swift_bridgeObjectRelease(v32);
    if (qword_100643FB0 != -1) {
      goto LABEL_25;
    }
    goto LABEL_18;
  }

  uint64_t v123 = v4;
  objc_super v35 = v32;
  swift_release(v27);
  sub_100183168(0LL, (unint64_t *)&qword_100650E50, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v103 = static OS_dispatch_queue.main.getter();
  uint64_t v36 = swift_allocObject(&unk_1005D5CB8, 32LL, 7LL);
  *(void *)(v36 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10022799C;
  uint64_t v37 = v110;
  uint64_t v102 = v36;
  *(void *)(v36 + 24) = v110;
  size_t v38 = *((void *)v35 + 2);
  swift_retain(v37);
  dispatch_group_t v121 = dispatch_group_create();
  uint64_t v39 = sub_100183098(&qword_10064EED0);
  uint64_t v120 = swift_allocObject(v39, 20LL, 7LL);
  *(_DWORD *)(v120 + swift_unknownObjectWeakDestroy(v0 + 16) = 0;
  uint64_t v27 = swift_allocObject(&unk_1005D5CE0, 24LL, 7LL);
  size_t v101 = v38;
  unint64_t v40 = sub_1002720B4(2, v38);
  uint64_t v122 = v27;
  *(void *)(v27 + swift_unknownObjectWeakDestroy(v0 + 16) = v40;
  unint64_t v115 = (char *)v128 + 7;
  uint64_t v114 = v35;
  swift_bridgeObjectRetain(v35);
  uint64_t v113 = 0LL;
  unint64_t v41 = 0LL;
  char v116 = v34;
  uint64_t v117 = v10;
  while (1)
  {
    uint64_t v42 = v123;
    if (v41 >= *((void *)v114 + 2)) {
      break;
    }
    (*(void (**)(char *, const char *, uint64_t))(v12 + 16))( v10,  &v114[((*(unsigned __int8 *)(v12 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
          + *(void *)(v12 + 72) * v41],
      v11);
    os_log_type_t v43 = (void *)(v41 + 1);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0LL, 1LL, v11);
    id v45 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    uint64_t v27 = (uint64_t)v111;
    v45(v111, v10, v11);
    NSString v46 = &v112[*(int *)(v42 + 48)];
    v45(v46, (char *)v27, v11);
    uint64_t v47 = v113 + 1;
    if (__OFADD__(v113, 1LL)) {
      goto LABEL_24;
    }
    uint64_t v48 = (char *)v126 + *(int *)(v42 + 48);
    *uint64_t v126 = v113;
    v45(v48, v46, v11);
    uint64_t v44 = 0LL;
    uint64_t v113 = v47;
    while (2)
    {
      uint64_t v50 = v125;
      uint64_t v49 = v126;
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v125 + 56))(v126, v44, 1LL, v42);
      uint64_t v51 = (uint64_t)v49;
      uint64_t v52 = v124;
      sub_100227A2C(v51, (uint64_t)v124);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v50 + 48))(v52, 1LL, v42) == 1)
      {
        uint64_t v75 = v114;
        swift_bridgeObjectRelease(v114);
        uint64_t v76 = (void *)swift_allocObject(&unk_1005D5D08, 48LL, 7LL);
        uint64_t v77 = v122;
        size_t v78 = v101;
        v76[2] = v122;
        v76[3] = v78;
        uint64_t v79 = v102;
        v76[4] = sub_100227A00;
        v76[5] = v79;
        v136 = sub_100227AA0;
        uint64_t v137 = v76;
        aBlock = _NSConcreteStackBlock;
        uint64_t v133 = 1107296256LL;
        uint64_t v134 = sub_1001B9FE4;
        uint64_t v135 = &unk_1005D5D20;
        uint64_t v80 = _Block_copy(&aBlock);
        swift_retain(v77);
        uint64_t v81 = swift_retain(v79);
        uint64_t v82 = v104;
        static DispatchQoS.unspecified.getter(v81);
        uint64_t v131 = _swiftEmptyArrayStorage;
        uint64_t v83 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        uint64_t v84 = sub_100183098((uint64_t *)&unk_1006460D0);
        unint64_t v85 = sub_1001D228C();
        uint64_t v86 = v107;
        uint64_t v87 = v109;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v131, v84, v85, v109, v83);
        uint64_t v88 = (void *)v103;
        dispatch_group_t v89 = v121;
        OS_dispatch_group.notify(qos:flags:queue:execute:)(v82, v86, v103, v80);
        _Block_release(v80);
        swift_release(v120);

        (*(void (**)(char *, uint64_t))(v108 + 8))(v86, v87);
        (*(void (**)(char *, uint64_t))(v105 + 8))(v82, v106);
        uint64_t v90 = v137;
        swift_bridgeObjectRelease(v75);

        swift_release(v79);
        swift_release(v110);
        swift_release(v77);
        uint64_t v91 = (uint64_t)v90;
        return swift_release(v91);
      }

      uint64_t v53 = *v52;
      uint64_t v54 = (unsigned __int8 *)v52 + *(int *)(v42 + 48);
      uint64_t v128 = *(uint64_t (**)(unsigned __int8 *, unsigned __int8 *, unsigned __int8 *))(v12 + 32);
      uint64_t v27 = (uint64_t)v118;
      v128(v118, v54, (unsigned __int8 *)v11);
      dispatch_group_t v55 = v121;
      dispatch_group_enter(v121);
      uint64_t v56 = (char *)swift_allocObject(&unk_1005D5D58, 48LL, 7LL);
      id v129 = v43;
      uint64_t v57 = v120;
      uint64_t v58 = v122;
      *((void *)v56 + 2) = v120;
      *((void *)v56 + 3) = v58;
      *((void *)v56 + 4) = v53;
      *((void *)v56 + 5) = v55;
      uint64_t v29 = (char **)swift_allocObject(&unk_1005D5D80, 32LL, 7LL);
      v29[2] = (char *)sub_100227AE0;
      v29[3] = v56;
      id v127 = (id)objc_opt_self(&OBJC_CLASS___IXAppInstallCoordinator);
      swift_retain(v57);
      swift_retain(v58);
      char v59 = v55;
      swift_retain(v56);
      URL._bridgeToObjectiveC()(v60);
      uint64_t v62 = v61;
      unsigned __int8 v63 = (unsigned __int8 *)v119;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v119, v27, v11);
      uint64_t v64 = *(unsigned __int8 *)(v12 + 80);
      uint64_t v65 = (v64 + 16) & ~v64;
      uint64_t v66 = v12;
      uint64_t v67 = (unsigned __int8 *)v11;
      unint64_t v68 = (unint64_t)&v115[v65] & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v69 = swift_allocObject(&unk_1005D5DA8, v68 + 16, v64 | 7);
      int v70 = (unsigned __int8 *)(v69 + v65);
      unint64_t v41 = (unint64_t)v129;
      v128(v70, v63, v67);
      uint64_t v71 = (uint64_t (**)(char))(v69 + v68);
      uint64_t v11 = (uint64_t)v67;
      uint64_t v12 = v66;
      *uint64_t v71 = sub_100227AEC;
      v71[1] = (uint64_t (*)(char))v29;
      v136 = sub_100227B6C;
      uint64_t v137 = (void *)v69;
      aBlock = _NSConcreteStackBlock;
      uint64_t v133 = 1107296256LL;
      uint64_t v134 = sub_1002721A4;
      uint64_t v135 = &unk_1005D5DC0;
      uint64_t v72 = _Block_copy(&aBlock);
      swift_release(v137);
      [v127 installApplication:v62 options:0 completion:v72];
      uint64_t v73 = v72;
      id v10 = v117;
      _Block_release(v73);
      swift_release(v56);

      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v27, v11);
      char v74 = v116;
      if ((void *)v41 == v116)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v10, 1LL, 1LL, v11);
        os_log_type_t v43 = v74;
        uint64_t v42 = v123;
LABEL_10:
        sub_100187100((uint64_t)v10, (uint64_t *)&unk_100645130);
        uint64_t v44 = 1LL;
        continue;
      }

      break;
    }
  }

  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  swift_once(&qword_100643FB0, sub_100225504);
LABEL_18:
  uint64_t v92 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v92, (uint64_t)qword_100649480);
  id v93 = v129;
  uint64_t v94 = (os_log_s *)Logger.logObject.getter(v93);
  os_log_type_t v95 = static os_log_type_t.error.getter(v94);
  if (os_log_type_enabled(v94, v95))
  {
    uint64_t v96 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v97 = (void ***)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v96 = 138412290;
    uint64_t v98 = (void **)[v93 v29[377]];
    aBlock = v98;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v133, v96 + 4, v96 + 12);
    os_log_s *v97 = v98;

    _os_log_impl((void *)&_mh_execute_header, v94, v95, "No completedURLs to install for %@", v96, 0xCu);
    uint64_t v99 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v97, 1LL, v99);
    swift_slowDealloc(v97, -1LL, -1LL);
    swift_slowDealloc(v96, -1LL, -1LL);
  }

  else
  {
  }

  LOBYTE(aBlock) = 0;
  LOBYTE(v131) = 0;
  unsigned __int8 v130 = 1;
  v128((unsigned __int8 *)&aBlock, (unsigned __int8 *)&v131, &v130);
  swift_release(v27);
  uint64_t v91 = v110;
  return swift_release(v91);
}

void sub_1002270C0(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void (**)(void *))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  id v5 = a2;
  v4(a2);
  swift_release(v3);
}

uint64_t sub_100227148( uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v63 = a6;
  uint64_t v64 = a5;
  uint64_t v10 = type metadata accessor for URL(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v61 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v61 - v18;
  if (a3)
  {
    swift_errorRetain(a3);
    if (qword_100643FB0 != -1) {
      swift_once(&qword_100643FB0, sub_100225504);
    }
    uint64_t v20 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v20, (uint64_t)qword_100649480);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v19, a4, v10);
    swift_errorRetain(a3);
    uint64_t v21 = swift_errorRetain(a3);
    uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc(22LL, -1LL);
      uint64_t v62 = v10;
      uint64_t v25 = v24;
      uint64_t v26 = swift_slowAlloc(64LL, -1LL);
      uint64_t v65 = a3;
      uint64_t v66 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_errorRetain(a3);
      uint64_t v27 = sub_100183098(&qword_100645710);
      uint64_t v28 = String.init<A>(describing:)(&v65, v27);
      id v30 = (const char *)v29;
      uint64_t v65 = sub_10018CDB4(v28, v29, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v25 + 4, v25 + 12);
      swift_bridgeObjectRelease(v30);
      swift_errorRelease(a3);
      uint64_t v31 = swift_errorRelease(a3);
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v32 = URL.description.getter(v31);
      uint64_t v34 = (const char *)v33;
      uint64_t v65 = sub_10018CDB4(v32, v33, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v25 + 14, v25 + 22);
      __n128 v35 = swift_bridgeObjectRelease(v34);
      (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v19, v62, v35);
      _os_log_impl( (void *)&_mh_execute_header,  v22,  v23,  "IPA Handler: Failed to install app with error (%s for URL %s",  (uint8_t *)v25,  0x16u);
      swift_arrayDestroy(v26, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1LL, -1LL);
      swift_slowDealloc(v25, -1LL, -1LL);

      swift_errorRelease(a3);
    }

    else
    {
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
    }

uint64_t sub_1002277AC(uint64_t result, uint64_t (*a2)(uint64_t, void, uint64_t))
{
  uint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    goto LABEL_4;
  }
  if ((*(_BYTE *)(result + 32) & 1) == 0)
  {
    uint64_t v3 = 0LL;
    return a2(v3, 0LL, 1LL);
  }

  if (v2 == 1)
  {
LABEL_4:
    uint64_t v3 = 1LL;
    return a2(v3, 0LL, 1LL);
  }

  uint64_t v4 = 33LL;
  while (1)
  {
    uint64_t v5 = v4 - 31;
    if (__OFADD__(v4 - 32, 1LL)) {
      break;
    }
    uint64_t v3 = *(unsigned __int8 *)(result + v4++);
    if ((_DWORD)v3 != 1 || v5 == v2) {
      return a2(v3, 0LL, 1LL);
    }
  }

  __break(1u);
  return result;
}

uint64_t type metadata accessor for SDAirDropHandlerIPA()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary19SDAirDropHandlerIPA);
}

uint64_t sub_1002278EC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100227910()
{
  return sub_10022659C(0LL, 0LL);
}

uint64_t sub_100227938(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_100227948(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100227950()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100227974(char a1, char a2, char a3)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(v3 + 16) + 16LL))( *(void *)(v3 + 16),  a1 & 1,  a2 & 1,  a3 & 1);
}

uint64_t sub_10022799C(char a1, char a2, char a3)
{
  uint64_t v4 = *(uint64_t (**)(char *, char *, char *))(v3 + 16);
  char v8 = a1;
  char v7 = a2;
  char v6 = a3;
  return v4(&v8, &v7, &v6);
}

uint64_t sub_1002279DC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100227A00(uint64_t a1)
{
  return sub_1002277AC(a1, *(uint64_t (**)(uint64_t, void, uint64_t))(v1 + 16));
}

uint64_t sub_100227A08()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100227A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_1006494D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100227A74()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

double sub_100227AA0()
{
  *(void *)&double result = sub_1002722CC(v0[2], v0[3], (void (*)(void *, __n128))v0[4]).n128_u64[0];
  return result;
}

uint64_t sub_100227AAC()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

void sub_100227AE0(uint64_t a1)
{
}

uint64_t sub_100227AEC(char a1)
{
  return sub_100272174(a1, *(uint64_t (**)(char *))(v1 + 16));
}

uint64_t sub_100227AF4()
{
  uint64_t v1 = type metadata accessor for URL(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_100227B6C(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for URL(0LL) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_100227148(a1, a2, a3, v3 + v8, *(uint64_t (**)(uint64_t))v9, *(void *)(v9 + 8));
}

uint64_t sub_100227BD8(unsigned __int8 *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  return (*(uint64_t (**)(void, void, void))(v3 + 16))(*a1, *a2, *a3);
}

uint64_t sub_100227C24(uint64_t (*a1)(__int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return 0LL;
  }
  uint64_t v6 = 0LL;
  uint64_t v7 = a3 + 32;
  while (1)
  {
    __int128 v11 = *(_OWORD *)(v7 + 16 * v6);
    __int128 v12 = v11;
    swift_unknownObjectRetain(v11);
    id v8 = *((id *)&v11 + 1);
    char v9 = a1(&v12);

    swift_unknownObjectRelease(v11);
    if (v3 || (v9 & 1) != 0) {
      break;
    }
    if (v4 == ++v6) {
      return 0LL;
    }
  }

  return v6;
}

uint64_t sub_100227D00()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_1006494F0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_1006494F0);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_100227D90()
{
  uint64_t v1 = type metadata accessor for SFPlatform(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = *(void **)(v0 + 48);
  if ([v5 screenStateSupportsAirDrop]
    && [v5 discoverableLevel]
    && [v5 wirelessEnabled]
    && [v5 bluetoothEnabledIncludingRestricted])
  {
    static SFPlatform.watchOS.getter();
    char v6 = static SFPlatform.isPlatform(_:)(v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    char v7 = v6 ^ 1;
  }

  else
  {
    char v7 = 0;
  }

  return v7 & 1;
}

uint64_t sub_100227E7C()
{
  uint64_t v1 = type metadata accessor for SFPlatform(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(void **)(v0 + 48);
  if (![v5 screenStateSupportsAirDrop]
    || ![v5 discoverableLevel]
    || ![v5 wirelessEnabled]
    || ![v5 bluetoothEnabledIncludingRestricted])
  {
    goto LABEL_8;
  }

  uint64_t v6 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes;
  swift_beginAccess(v6, v16, 0LL, 0LL);
  uint64_t v7 = *(void *)(*(void *)v6 + 16LL);
  if (v7)
  {
    id v8 = [v5 bluetoothAddress];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v8);
      unint64_t v12 = v11;

      uint64_t v13 = sub_100189B20(v10, v12);
      static SFPlatform.watchOS.getter(v13);
      LOBYTE(v9) = static SFPlatform.isPlatform(_:)(v4);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      LOBYTE(v7) = v9 ^ 1;
      return v7 & 1;
    }

uint64_t sub_100227FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 24) = 0LL;
  swift_unknownObjectWeakInit(v7 + 16, 0LL);
  *(void *)(v7 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0LL;
  uint64_t v15 = swift_unknownObjectWeakInit(v7 + 32, 0LL);
  *(_DWORD *)(v7 + 104) = 0;
  UUID.init()(v15);
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes) = &_swiftEmptySetSingleton;
  uint64_t v16 = (void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer);
  *uint64_t v16 = 0LL;
  v16[1] = 0LL;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors) = &_swiftEmptySetSingleton;
  uint64_t v17 = (void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer);
  *uint64_t v17 = 0LL;
  v17[1] = 0LL;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors) = &_swiftEmptySetSingleton;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions) = &_swiftEmptySetSingleton;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID) = &_swiftEmptyDictionarySingleton;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServerErrors) = &_swiftEmptySetSingleton;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers) = &_swiftEmptyDictionarySingleton;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourDiscoveryHandlers) = &_swiftEmptyArrayStorage;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers) = &_swiftEmptyArrayStorage;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastDiscoverableLevel) = 0LL;
  uint64_t v18 = (void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_appleIDState);
  *uint64_t v18 = 0LL;
  v18[1] = 0LL;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastWirelessBluetoothStateEnabled) = 0;
  *(void *)(v7 + 48) = a1;
  *(void *)(v7 + 56) = a2;
  *(void *)(v7 + 112) = a3;
  *(void *)(v7 + 64) = a4;
  *(void *)(v7 + 72) = a6;
  *(void *)(v7 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a5;
  *(void *)(v7 + 88) = a7;
  *(void *)(v7 + 96) = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  return v7;
}

void sub_100228158()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SFPlatform(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643FB8 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = sub_100186DE4(v6, (uint64_t)qword_1006494F0);
  id v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Starting AirDrop Receive Connection Manager", v10, 2u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  static SFPlatform.tvOS.getter();
  char v11 = static SFPlatform.isPlatform(_:)(v5);
  unint64_t v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v5, v2);
  if ((v11 & 1) == 0)
  {
    sub_10022831C();
    id v13 = [*(id *)(v1 + 48) screenStateSupportsAirDrop];
    if ((_DWORD)v13)
    {
      static SFPlatform.watchOS.getter(v13);
      char v14 = static SFPlatform.isPlatform(_:)(v5);
      v12(v5, v2);
      if ((v14 & 1) == 0)
      {
        uint64_t v15 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleScannerID;
        swift_retain(v1);
        sub_1003E9E44(v15, (uint64_t)sub_100237948, v1);
        swift_release(v1);
      }

      sub_1002286E4(0LL);
    }
  }

void sub_10022831C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SFPlatform(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void **)(v0 + 96);
  [v6 addObserver:v1 selector:"screenStateChangedWithNotification:" name:@"com.apple.sharingd.ScreenStateChanged" object:0];
  [v6 addObserver:v1 selector:"screenStateChangedWithNotification:" name:@"com.apple.sharingd.MirroringStateChanged" object:0];
  [v6 addObserver:v1 selector:"appleIDChangedWithNotification:" name:@"com.apple.sharingd.AppleIDAccountInfoChanged" object:0];
  [v6 addObserver:v1 selector:"discoverableModeChangedWithNotification:" name:@"com.apple.sharingd.DiscoverableModeChanged" object:0];
  [v6 addObserver:v1 selector:"deviceNameChangedWithNotification:" name:@"com.apple.sharingd.LocalHostNameChanged" object:0];
  [v6 addObserver:v1 selector:"wirelessBluetoothStateChangedWithNotification:" name:@"com.apple.sharingd.WirelessModeChanged" object:0];
  [v6 addObserver:v1 selector:"wirelessBluetoothStateChangedWithNotification:" name:@"com.apple.sharingd.WirelessPowerChanged" object:0];
  static SFPlatform.macOS.getter( [v6 addObserver:v1 selector:"wirelessBluetoothStateChangedWithNotification:" name:@"com.apple.sharingd.BluetoothPowerChanged" object:0]);
  char v7 = static SFPlatform.isPlatform(_:)(v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) != 0) {
    [v6 addObserver:v1 selector:"consoleUserChangedWithNotification:" name:@"com.apple.sharingd.ConsoleUserChanged" object:0];
  }
  id v8 = (const char *)[SFNotificationAirDropCellularUsageChanged UTF8String];
  unint64_t v9 = sub_100237A04();
  uint64_t v10 = (dispatch_queue_s *)static OS_dispatch_queue.main.getter(v9);
  uint64_t v11 = swift_allocObject(&unk_1005D5E80, 24LL, 7LL);
  swift_weakInit(v11 + 16);
  aBlock[4] = sub_100237A40;
  uint64_t v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1002C5880;
  aBlock[3] = &unk_1005D5FB0;
  unint64_t v12 = _Block_copy(aBlock);
  swift_release(v21);
  id v13 = (int *)(v1 + 104);
  swift_beginAccess(v13, aBlock, 33LL, 0LL);
  uint32_t v14 = notify_register_dispatch(v8, v13, v10, v12);
  swift_endAccess(aBlock);
  _Block_release(v12);

  if (v14)
  {
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v15 = type metadata accessor for Logger(0LL);
    uint64_t v16 = sub_100186DE4(v15, (uint64_t)qword_1006494F0);
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.error.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v19 = 67109120;
      LODWORD(aBlock[0]) = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4, v19 + 4, v19 + 8);
      _os_log_impl( (void *)&_mh_execute_header,  v17,  v18,  "Failed to register for cellular usage changed notifications with status %u",  v19,  8u);
      swift_slowDealloc(v19, -1LL, -1LL);
    }
  }

void sub_1002286E4(uint64_t a1)
{
  uint64_t v2 = v1;
  char v3 = a1;
  sub_10022DE08(a1);
  if (v3)
  {
    if (v3 != 1) {
      return;
    }
    uint64_t v4 = (void *)((char *)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer);
    if (!*(void *)((char *)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer))
    {
      if ((sub_100227E7C() & 1) != 0)
      {
        uint64_t v5 = (void *)v1[6];
        uint64_t v6 = (void *)v1[7];
        uint64_t v7 = v1[10];
        id v8 = (void *)v1[11];
        id v9 = objc_allocWithZone((Class)type metadata accessor for SDAirDropBonjourServer());
        swift_retain(v1);
        id v10 = v5;
        id v11 = v6;
        swift_retain(v7);
        id v12 = v8;
        id v13 = sub_100239F28(v10, v11, v7, v12, (uint64_t)v1, (uint64_t)&off_1005D5E28);
        swift_release(v2);

        swift_release(v7);
        uint64_t v14 = *v4;
        *uint64_t v4 = (uint64_t)v13;
        v4[1] = (uint64_t)&off_1005D6220;
        osos_log_t log = (os_log_t)v13;
        swift_unknownObjectRelease(v14);
        sub_100237E0C();
LABEL_29:

        return;
      }

      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v29 = type metadata accessor for Logger(0LL);
      uint64_t v30 = sub_100186DE4(v29, (uint64_t)qword_1006494F0);
      osos_log_t log = (os_log_t)Logger.logObject.getter(v30);
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(oslog, v31)) {
        goto LABEL_29;
      }
      uint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v32 = 0;
      unint64_t v33 = "Ignoring Bonjour Server Start";
      goto LABEL_28;
    }
  }

  else
  {
    uint64_t v15 = (void *)((char *)v1
                   + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer);
    if (!*(void *)((char *)v1
                    + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer))
    {
      if ((sub_100227D90() & 1) != 0)
      {
        os_log_type_t v23 = (void *)v1[6];
        uint64_t v24 = v1[10];
        id v25 = objc_allocWithZone((Class)type metadata accessor for SDAirDropApplicationServiceServer());
        id v26 = v23;
        swift_retain(v24);
        swift_retain(v1);
        id v27 = sub_100291710(v26, v24, (uint64_t)v1, (uint64_t)&off_1005D5E28);
        swift_release(v2);
        swift_release(v24);

        uint64_t v28 = *v15;
        *uint64_t v15 = (uint64_t)v27;
        v15[1] = (uint64_t)&off_1005D7C48;
        osos_log_t log = (os_log_t)v27;
        swift_unknownObjectRelease(v28);
        sub_10028FB24();
        goto LABEL_29;
      }

      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v34 = type metadata accessor for Logger(0LL);
      uint64_t v35 = sub_100186DE4(v34, (uint64_t)qword_1006494F0);
      osos_log_t log = (os_log_t)Logger.logObject.getter(v35);
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(oslog, v31)) {
        goto LABEL_29;
      }
      uint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v32 = 0;
      unint64_t v33 = "Ignoring Application Service Server Start";
LABEL_28:
      _os_log_impl((void *)&_mh_execute_header, oslog, v31, v33, v32, 2u);
      swift_slowDealloc(v32, -1LL, -1LL);
      goto LABEL_29;
    }
  }

  if (qword_100643FB8 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = sub_100186DE4(v16, (uint64_t)qword_1006494F0);
  osos_log_t log = (os_log_t)Logger.logObject.getter(v17);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(oslog, v18)) {
    goto LABEL_29;
  }
  uint64_t v19 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
  uint64_t v20 = swift_slowAlloc(32LL, -1LL);
  *(_DWORD *)uint64_t v19 = 136315138;
  uint64_t v38 = v20;
  if (v3) {
    uint64_t v21 = 0x2072756F6A6E6F42LL;
  }
  else {
    uint64_t v21 = 0xD00000000000001ALL;
  }
  if (v3) {
    uint64_t v22 = (const char *)0xEE00726576726553LL;
  }
  else {
    uint64_t v22 = (const char *)0x80000001005069C0LL;
  }
  uint64_t v37 = sub_10018CDB4(v21, (unint64_t)v22, &v38);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v19 + 4, v19 + 12);
  swift_bridgeObjectRelease(v22);
  _os_log_impl((void *)&_mh_execute_header, oslog, v18, "Server already exists for type %s", v19, 0xCu);
  swift_arrayDestroy(v20, 1LL, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v20, -1LL, -1LL);
  swift_slowDealloc(v19, -1LL, -1LL);
}

uint64_t sub_100228B74(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = sub_100183098(&qword_100649700);
  v2[7] = v3;
  unint64_t v4 = (*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[8] = swift_task_alloc(v4);
  void v2[9] = swift_task_alloc(v4);
  v2[10] = swift_task_alloc(v4);
  v2[11] = swift_task_alloc(v4);
  v2[12] = swift_task_alloc(v4);
  v2[13] = swift_task_alloc(v4);
  uint64_t v5 = sub_100183098(&qword_100649708);
  v2[14] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SDAirDropServerConnection(0LL);
  v2[15] = v6;
  v2[16] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v7 = static AirDropActor.shared;
  v2[17] = static AirDropActor.shared;
  return swift_task_switch(sub_100228C90, v7, 0LL);
}

uint64_t sub_100228C90()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  sub_1001A4B84(v0[5], v2, type metadata accessor for SDAirDropServerConnection);
  if (swift_getEnumCaseMultiPayload(v2, v1) > 1)
  {
    unint64_t v4 = (uint64_t *)v0[16];
    uint64_t v3 = *v4;
    uint64_t v5 = (char *)v4 + *(int *)(sub_100183098(&qword_100649710) + 48);
    uint64_t v6 = type metadata accessor for UUID(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
  }

  else
  {
    uint64_t v3 = *(void *)v0[16];
  }

  uint64_t v7 = v0[14];
  NWConnection.start(queue:)(*(void *)(v0[6] + 88));
  swift_release(v3);
  uint64_t v8 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  v0[18] = v8;
  id v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56LL);
  v0[19] = (uint64_t)v9;
  v9(v7, 1LL, 1LL, v8);
  id v10 = (uint64_t **)swift_task_alloc(dword_10064971C);
  v0[20] = (uint64_t)v10;
  dispatch_queue_s *v10 = v0;
  v10[1] = (uint64_t *)sub_100228D98;
  return sub_1002296B8(v0[14], v0[5]);
}

uint64_t sub_100228D98()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 104);
  uint64_t v3 = *(void *)(*v0 + 112);
  uint64_t v4 = *(void *)(*v0 + 56);
  uint64_t v5 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 160));
  sub_100187100(v3, &qword_100649708);
  uint64_t v6 = *(int *)(v4 + 48);
  *(_DWORD *)(v1 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v6;
  uint64_t v7 = v2 + v6;
  uint64_t v8 = (void *)swift_task_alloc(dword_1006533AC);
  *(void *)(v1 + 168) = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_100228E38;
  return sub_1003E6DF0(*(void *)(v1 + 104), v7);
}

uint64_t sub_100228E38()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 168);
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_10022949C;
  }
  else {
    uint64_t v4 = sub_100228E9C;
  }
  return swift_task_switch(v4, *(void *)(v2 + 136), 0LL);
}

uint64_t sub_100228E9C()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = v3 + *(int *)(v0 + 200);
  uint64_t v7 = v5 + *(int *)(*(void *)(v0 + 56) + 48LL);
  sub_1001A4B84(v3, v5, type metadata accessor for SDAirDropMessage);
  sub_1001A4B84(v6, v7, type metadata accessor for SDAirDropServerConnectionIdentity);
  sub_1001A4B40(v7, v4, type metadata accessor for SDAirDropServerConnectionIdentity);
  v2(v4, 0LL, 1LL, v1);
  uint64_t v8 = (void *)swift_task_alloc(dword_10064971C);
  *(void *)(v0 + 184) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100228F64;
  return sub_1002296B8(*(void *)(v0 + 112), *(void *)(v0 + 40));
}

uint64_t sub_100228F64()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 112LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 96LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 184LL));
  sub_100187100(v2, &qword_100649708);
  sub_1001A4BC8(v3, type metadata accessor for SDAirDropMessage);
  return swift_task_switch(sub_100228FEC, v1, 0LL);
}

uint64_t sub_100228FEC()
{
  if (qword_100643FB8 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v38 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = v1 + *(int *)(v0 + 200);
  uint64_t v7 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v7, (uint64_t)qword_1006494F0);
  uint64_t v8 = v2 + *(int *)(v5 + 48);
  sub_1001A4B84(v1, v2, type metadata accessor for SDAirDropMessage);
  sub_1001A4B84(v6, v8, type metadata accessor for SDAirDropServerConnectionIdentity);
  sub_1001870BC(v2, v3, &qword_100649700);
  uint64_t v9 = v4 + *(int *)(v5 + 48);
  sub_1001A4B84(v1, v4, type metadata accessor for SDAirDropMessage);
  sub_1001A4B84(v6, v9, type metadata accessor for SDAirDropServerConnectionIdentity);
  uint64_t v10 = sub_1001870BC(v4, v38, &qword_100649700);
  id v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = *(void *)(v0 + 96);
    uint64_t v14 = *(void *)(v0 + 80);
    uint64_t v15 = *(void *)(v0 + 56);
    uint64_t v36 = *(void *)(v0 + 64);
    uint64_t v35 = v15;
    uint64_t v16 = swift_slowAlloc(22LL, -1LL);
    uint64_t v39 = swift_slowAlloc(64LL, -1LL);
    uint64_t v40 = v39;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = *(int *)(v15 + 48);
    os_log_type_t type = v12;
    uint64_t v18 = v13 + v17;
    uint64_t v19 = v14 + v17;
    sub_1001A4B84(v14, v13, type metadata accessor for SDAirDropMessage);
    sub_1001A4B84(v19, v18, type metadata accessor for SDAirDropServerConnectionIdentity);
    unint64_t v20 = sub_1003E8364();
    uint64_t v22 = v21;
    sub_1001A4BC8(v18, type metadata accessor for SDAirDropServerConnectionIdentity);
    sub_1001A4BC8(v13, type metadata accessor for SDAirDropMessage);
    *(void *)(v0 + 24) = sub_10018CDB4(v20, (unint64_t)v22, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v16 + 4, v16 + 12);
    swift_bridgeObjectRelease(v22);
    sub_100187100(v14, &qword_100649700);
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v23 = *(int *)(v35 + 48);
    uint64_t v24 = v13 + v23;
    uint64_t v25 = v36 + v23;
    sub_1001A4B84(v36, v13, type metadata accessor for SDAirDropMessage);
    sub_1001A4B84(v25, v24, type metadata accessor for SDAirDropServerConnectionIdentity);
    sub_10039AA90();
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    sub_1001A4BC8(v13, type metadata accessor for SDAirDropMessage);
    sub_1001A4BC8(v24, type metadata accessor for SDAirDropServerConnectionIdentity);
    *(void *)(v0 + 32) = sub_10018CDB4(v27, (unint64_t)v29, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v16 + 14, v16 + 22);
    swift_bridgeObjectRelease(v29);
    sub_100187100(v36, &qword_100649700);
    _os_log_impl((void *)&_mh_execute_header, v11, type, "Message id: %s, message: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v39, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1LL, -1LL);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  else
  {
    uint64_t v30 = *(void *)(v0 + 64);
    sub_100187100(*(void *)(v0 + 80), &qword_100649700);
    sub_100187100(v30, &qword_100649700);
  }

  uint64_t v31 = *(int *)(v0 + 200);
  uint64_t v32 = *(void *)(v0 + 104);
  unint64_t v33 = (void *)swift_task_alloc(dword_10064972C);
  *(void *)(v0 + 192) = v33;
  *unint64_t v33 = v0;
  v33[1] = sub_1002293A4;
  return sub_1002299E0(*(void *)(v0 + 104), *(void *)(v0 + 40), v32 + v31);
}

uint64_t sub_1002293A4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 192LL));
  return swift_task_switch(sub_1002293FC, v1, 0LL);
}

uint64_t sub_1002293FC()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 64);
  swift_task_dealloc(*(void *)(v0 + 128));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10022949C()
{
  if (qword_100643FB8 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_1006494F0);
  swift_errorRetain(v1);
  uint64_t v3 = swift_errorRetain(v1);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.error.getter(v4);
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 176);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain(v7);
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v8 + 4, v8 + 12);
    *uint64_t v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error receiving message %@", v8, 0xCu);
    uint64_t v11 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v9, 1LL, v11);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);

    swift_errorRelease(v7);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 176));
    swift_errorRelease(v7);
    swift_errorRelease(v7);
  }

  uint64_t v12 = *(void *)(v0 + 104);
  uint64_t v13 = *(void *)(v0 + 112);
  uint64_t v15 = *(void *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 96);
  uint64_t v17 = *(void *)(v0 + 72);
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v18 = *(void *)(v0 + 64);
  swift_task_dealloc(*(void *)(v0 + 128));
  swift_task_dealloc(v13);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002296B8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = *(void *)(sub_100183098(&qword_100649708) - 8);
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 + 64);
  v3[6] = v5;
  v3[7] = swift_task_alloc((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for NWConnection.State(0LL);
  v3[8] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  void v3[9] = v7;
  unint64_t v8 = (*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[10] = swift_task_alloc(v8);
  v3[11] = swift_task_alloc(v8);
  uint64_t v9 = type metadata accessor for SDAirDropServerConnection(0LL);
  v3[12] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v3[13] = v10;
  uint64_t v11 = *(void *)(v10 + 64);
  v3[14] = v11;
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  v3[15] = swift_task_alloc(v12);
  v3[16] = swift_task_alloc(v12);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002297C4, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002297C4()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 96);
  sub_1001A4B84(*(void *)(v0 + 24), v1, type metadata accessor for SDAirDropServerConnection);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v2);
  if (EnumCaseMultiPayload > 1)
  {
    uint64_t v5 = *(uint64_t **)(v0 + 128);
    uint64_t v4 = *v5;
    uint64_t v6 = (char *)v5 + *(int *)(sub_100183098(&qword_100649710) + 48);
    uint64_t v7 = type metadata accessor for UUID(0LL);
    uint64_t EnumCaseMultiPayload = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8LL))(v6, v7);
  }

  else
  {
    uint64_t v4 = **(void **)(v0 + 128);
  }

  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v10 = *(void *)(v0 + 64);
  uint64_t v11 = *(void *)(v0 + 72);
  uint64_t v31 = v4;
  NWConnection.state.getter(EnumCaseMultiPayload);
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v9, enum case for NWConnection.State.ready(_:), v10);
  char v12 = static NWConnection.State.== infix(_:_:)(v8, v9);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v13(v9, v10);
  v13(v8, v10);
  if ((v12 & 1) != 0) {
    sub_1002324FC(*(void *)(v0 + 16), *(void *)(v0 + 24));
  }
  uint64_t v14 = *(void *)(v0 + 120);
  uint64_t v16 = *(void *)(v0 + 104);
  uint64_t v15 = *(void *)(v0 + 112);
  uint64_t v28 = *(void *)(v0 + 128);
  uint64_t v29 = *(void *)(v0 + 88);
  uint64_t v30 = *(void *)(v0 + 80);
  uint64_t v18 = *(void *)(v0 + 48);
  uint64_t v17 = *(void *)(v0 + 56);
  uint64_t v20 = *(void *)(v0 + 32);
  uint64_t v19 = *(void *)(v0 + 40);
  uint64_t v21 = *(void *)(v0 + 24);
  sub_100236F5C(*(void *)(v0 + 16), v17);
  sub_1001A4B84(v21, v14, type metadata accessor for SDAirDropServerConnection);
  uint64_t v22 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v23 = (v22 + 24) & ~v22;
  uint64_t v24 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v25 = (v18 + v24 + v23) & ~v24;
  uint64_t v26 = swift_allocObject(&unk_1005D5E58, v25 + v15, v22 | v24 | 7);
  *(void *)(v26 + swift_unknownObjectWeakDestroy(v0 + 16) = v20;
  sub_1001870BC(v17, v26 + v23, &qword_100649708);
  sub_1001A4B40(v14, v26 + v25, type metadata accessor for SDAirDropServerConnection);
  swift_retain(v20);
  NWConnection.stateUpdateHandler.setter(sub_100237100, v26);
  swift_release(v31);
  swift_task_dealloc(v28);
  swift_task_dealloc(v14);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002299E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[22] = a3;
  v4[23] = v3;
  v4[20] = a1;
  v4[21] = a2;
  unint64_t v5 = (*(void *)(*(void *)(_s14descr1005DD3D1C12ErrorRequestVMa(0LL) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[24] = swift_task_alloc(v5);
  v4[25] = swift_task_alloc(v5);
  unint64_t v6 = (*(void *)(*(void *)(_s14descr1005DEB71C15ExchangeRequestVMa(0LL) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[26] = swift_task_alloc(v6);
  v4[27] = swift_task_alloc(v6);
  uint64_t v7 = _s14descr1005D9BD1C13UploadRequestVMa(0LL);
  v4[28] = v7;
  unint64_t v8 = (*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[29] = swift_task_alloc(v8);
  v4[30] = swift_task_alloc(v8);
  uint64_t v9 = _s14descr1005DF7D1C10AskRequestVMa(0LL);
  v4[31] = swift_task_alloc((*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = _s12HelloRequestVMa(0LL);
  v4[32] = v10;
  unint64_t v11 = (*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[33] = swift_task_alloc(v11);
  v4[34] = swift_task_alloc(v11);
  v4[35] = swift_task_alloc(v11);
  uint64_t v12 = type metadata accessor for SDAirDropMessage(0LL);
  v4[36] = v12;
  v4[37] = swift_task_alloc((*(void *)(*(void *)(v12 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v13 = static AirDropActor.shared;
  v4[38] = static AirDropActor.shared;
  return swift_task_switch(sub_100229B68, v13, 0LL);
}

uint64_t sub_100229B68()
{
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v1 = *(void *)(v0 + 296);
  sub_1001A4B84(*(void *)(v0 + 160), v1, type metadata accessor for SDAirDropMessage);
  uint64_t v3 = v0 + 120;
  uint64_t v4 = (uint64_t *)(v0 + 128);
  uint64_t v5 = v0 + 136;
  switch(swift_getEnumCaseMultiPayload(v1, v2))
  {
    case 0u:
      uint64_t v6 = *(void *)(v0 + 176);
      sub_1001A4B40(*(void *)(v0 + 296), *(void *)(v0 + 280), _s12HelloRequestVMa);
      uint64_t v7 = sub_100231514(v6);
      *(void *)(v0 + 352) = v7;
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v9 = *(void *)(v0 + 272);
      uint64_t v8 = *(void *)(v0 + 280);
      uint64_t v10 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v10, (uint64_t)qword_1006494F0);
      uint64_t v11 = sub_1001A4B84(v8, v9, _s12HelloRequestVMa);
      uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
      os_log_type_t v13 = static os_log_type_t.default.getter();
      BOOL v14 = os_log_type_enabled(v12, v13);
      uint64_t v15 = *(void *)(v0 + 272);
      if (v14)
      {
        uint64_t v146 = v7;
        uint64_t v17 = *(void *)(v0 + 256);
        uint64_t v16 = *(void *)(v0 + 264);
        uint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v143 = swift_slowAlloc(32LL, -1LL);
        uint64_t v153 = v143;
        *(_DWORD *)uint64_t v18 = 136315138;
        sub_1001A4B84(v15, v16, _s12HelloRequestVMa);
        _StringGuts.grow(_:)(16LL);
        swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
        strcpy((char *)v154, "HELLO request ");
        HIBYTE(v154[1]) = -18;
        *(_DWORD *)(v0 + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(_DWORD *)(v16 + *(int *)(v17 + 20));
        v19._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for UInt32,  &protocol witness table for UInt32);
        object = (const char *)v19._object;
        String.append(_:)(v19);
        swift_bridgeObjectRelease(object);
        uint64_t v21 = v154[1];
        sub_1001A4BC8(v16, _s12HelloRequestVMa);
        *(void *)(v0 + 144) = sub_10018CDB4(v154[0], v154[1], &v153);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v18 + 4, v18 + 12);
        uint64_t v22 = (const char *)v21;
        uint64_t v7 = v146;
        swift_bridgeObjectRelease(v22);
        sub_1001A4BC8(v15, _s12HelloRequestVMa);
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Received HELLO request %s", v18, 0xCu);
        swift_arrayDestroy(v143, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v143, -1LL, -1LL);
        swift_slowDealloc(v18, -1LL, -1LL);
      }

      else
      {
        sub_1001A4BC8(*(void *)(v0 + 272), _s12HelloRequestVMa);
      }

      uint64_t v130 = dword_100654E34;
      v7;
      uint64_t v131 = (void *)swift_task_alloc(v130);
      *(void *)(v0 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v131;
      *uint64_t v131 = v0;
      v131[1] = sub_10022AD64;
      uint64_t result = sub_10041BA30(*(void *)(v0 + 280), *(void *)(v0 + 168));
      break;
    case 2u:
      unint64_t v44 = *(uint64_t **)(v0 + 296);
      uint64_t v45 = *(void *)(v0 + 176);
      uint64_t v46 = *v44;
      *(void *)(v0 + 312) = *v44;
      unint64_t v47 = v44[1];
      *(void *)(v0 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v47;
      uint64_t v48 = sub_100231514(v45);
      *(void *)(v0 + 328) = v48;
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v49 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v49, (uint64_t)qword_1006494F0);
      sub_1001A4C04(v46, v47);
      uint64_t v50 = sub_1001A4C04(v46, v47);
      os_log_type_t v51 = (os_log_s *)Logger.logObject.getter(v50);
      os_log_type_t v52 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v148 = v48;
        uint64_t v53 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t type = swift_slowAlloc(32LL, -1LL);
        v154[0] = type;
        *(_DWORD *)uint64_t v53 = 136315138;
        if (v47 >> 60 == 15)
        {
          uint64_t v54 = (const char *)0x8000000100506990LL;
          uint64_t v55 = 0xD00000000000002ALL;
        }

        else
        {
          uint64_t v55 = Data.description.getter(v46, v47);
          uint64_t v54 = v140;
        }

        *(void *)(v0 + 152) = sub_10018CDB4(v55, (unint64_t)v54, v154);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160, v53 + 4, v53 + 12);
        swift_bridgeObjectRelease(v54);
        sub_100189B0C(v46, v47);
        sub_100189B0C(v46, v47);
        _os_log_impl( (void *)&_mh_execute_header,  v51,  v52,  "Received DISCOVER request {senderRecordData: %s}",  v53,  0xCu);
        swift_arrayDestroy(type, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(type, -1LL, -1LL);
        swift_slowDealloc(v53, -1LL, -1LL);

        uint64_t v48 = v148;
      }

      else
      {
        sub_100189B0C(v46, v47);
        sub_100189B0C(v46, v47);
      }

      uint64_t v141 = dword_100654E1C;
      v48;
      uint64_t v142 = (void *)swift_task_alloc(v141);
      *(void *)(v0 + 336) = v142;
      void *v142 = v0;
      v142[1] = sub_10022AC24;
      uint64_t result = sub_10041A7D8(v46, v47, *(void *)(v0 + 168));
      break;
    case 4u:
      uint64_t v56 = *(void *)(v0 + 176);
      sub_1001A4B40(*(void *)(v0 + 296), *(void *)(v0 + 248), _s14descr1005DF7D1C10AskRequestVMa);
      uint64_t v57 = sub_100231514(v56);
      *(void *)(v0 + 376) = v57;
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v58 = type metadata accessor for Logger(0LL);
      uint64_t v59 = sub_100186DE4(v58, (uint64_t)qword_1006494F0);
      uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
      os_log_type_t v61 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v60, v61))
      {
        uint64_t v62 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v62 = 0;
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "Received ASK request", v62, 2u);
        swift_slowDealloc(v62, -1LL, -1LL);
      }

      uint64_t v63 = dword_100654E44;
      v57;
      uint64_t v64 = (void *)swift_task_alloc(v63);
      *(void *)(v0 + 384) = v64;
      *uint64_t v64 = v0;
      v64[1] = sub_10022AEA8;
      uint64_t result = sub_10041BE50(*(void *)(v0 + 248), *(void *)(v0 + 168));
      break;
    case 6u:
      uint64_t v65 = *(void *)(v0 + 176);
      sub_1001A4B40(*(void *)(v0 + 296), *(void *)(v0 + 240), _s14descr1005D9BD1C13UploadRequestVMa);
      uint64_t v66 = sub_100231514(v65);
      *(void *)(v0 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v66;
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v68 = *(void *)(v0 + 232);
      uint64_t v67 = *(void *)(v0 + 240);
      uint64_t v69 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v69, (uint64_t)qword_1006494F0);
      uint64_t v70 = sub_1001A4B84(v67, v68, _s14descr1005D9BD1C13UploadRequestVMa);
      uint64_t v71 = (os_log_s *)Logger.logObject.getter(v70);
      os_log_type_t v72 = static os_log_type_t.default.getter();
      BOOL v73 = os_log_type_enabled(v71, v72);
      uint64_t v74 = *(void *)(v0 + 232);
      if (v73)
      {
        uint64_t v149 = v66;
        uint64_t v75 = *(void *)(v0 + 224);
        uint64_t v76 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        *(_DWORD *)uint64_t v76 = 134217984;
        uint64_t v77 = *(void *)(v74 + *(int *)(v75 + 20));
        sub_1001A4BC8(v74, _s14descr1005D9BD1C13UploadRequestVMa);
        *(void *)(v0 + 136) = v77;
        uint64_t v66 = v149;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v5, v0 + 144, v76 + 4, v76 + 12);
        _os_log_impl((void *)&_mh_execute_header, v71, v72, "Received UPLOAD request %ld", v76, 0xCu);
        swift_slowDealloc(v76, -1LL, -1LL);
      }

      else
      {
        sub_1001A4BC8(*(void *)(v0 + 232), _s14descr1005D9BD1C13UploadRequestVMa);
      }

      uint64_t v132 = dword_100654E8C;
      v66;
      uint64_t v133 = (void *)swift_task_alloc(v132);
      *(void *)(v0 + 408) = v133;
      *uint64_t v133 = v0;
      v133[1] = sub_10022AFEC;
      uint64_t result = sub_10041CBE4(*(void *)(v0 + 240), *(void *)(v0 + 168));
      break;
    case 8u:
      uint64_t v78 = *(void *)(v0 + 176);
      sub_1001A4B40(*(void *)(v0 + 296), *(void *)(v0 + 216), _s14descr1005DEB71C15ExchangeRequestVMa);
      uint64_t v79 = sub_100231514(v78);
      *(void *)(v0 + 424) = v79;
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v81 = *(void *)(v0 + 208);
      uint64_t v80 = *(void *)(v0 + 216);
      uint64_t v82 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v82, (uint64_t)qword_1006494F0);
      uint64_t v83 = sub_1001A4B84(v80, v81, _s14descr1005DEB71C15ExchangeRequestVMa);
      uint64_t v84 = (os_log_s *)Logger.logObject.getter(v83);
      os_log_type_t v85 = static os_log_type_t.default.getter();
      BOOL v86 = os_log_type_enabled(v84, v85);
      uint64_t v87 = *(void *)(v0 + 208);
      if (v86)
      {
        unint64_t v150 = v79;
        uint64_t v88 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v89 = swift_slowAlloc(32LL, -1LL);
        v154[0] = v89;
        *(_DWORD *)uint64_t v88 = 136315138;
        uint64_t v90 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
        uint64_t v91 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
        uint64_t v92 = dispatch thunk of CustomStringConvertible.description.getter(v90, v91);
        uint64_t v94 = (const char *)v93;
        *uint64_t v4 = sub_10018CDB4(v92, v93, v154);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v4, v5, v88 + 4, v88 + 12);
        os_log_type_t v95 = v94;
        uint64_t v79 = v150;
        swift_bridgeObjectRelease(v95);
        sub_1001A4BC8(v87, _s14descr1005DEB71C15ExchangeRequestVMa);
        _os_log_impl((void *)&_mh_execute_header, v84, v85, "Received EXCHANGE request %s", v88, 0xCu);
        swift_arrayDestroy(v89, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v89, -1LL, -1LL);
        swift_slowDealloc(v88, -1LL, -1LL);
      }

      else
      {
        sub_1001A4BC8(*(void *)(v0 + 208), _s14descr1005DEB71C15ExchangeRequestVMa);
      }

      uint64_t v134 = dword_100654EC4;
      v79;
      uint64_t v135 = (void *)swift_task_alloc(v134);
      *(void *)(v0 + 432) = v135;
      *uint64_t v135 = v0;
      v135[1] = sub_10022B130;
      uint64_t result = sub_10041EDA8(*(void *)(v0 + 216), *(void *)(v0 + 168));
      break;
    case 0xAu:
      uint64_t v96 = *(void *)(v0 + 296);
      uint64_t v97 = *(void *)(v0 + 176);
      __int128 v98 = *(_OWORD *)(v96 + 16);
      *(_OWORD *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)v96;
      *(_OWORD *)(v0 + 32) = v98;
      uint64_t v99 = v0 + 16;
      __int128 v101 = *(_OWORD *)(v96 + 48);
      __int128 v100 = *(_OWORD *)(v96 + 64);
      __int128 v102 = *(_OWORD *)(v96 + 32);
      *(void *)(v0 + 96) = *(void *)(v96 + 80);
      *(_OWORD *)(v0 + 64) = v101;
      *(_OWORD *)(v0 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v100;
      *(_OWORD *)(v0 + 48) = v102;
      uint64_t v103 = sub_100231514(v97);
      *(void *)(v0 + 448) = v103;
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v104 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v104, (uint64_t)qword_1006494F0);
      uint64_t v105 = sub_100236E24(v99);
      uint64_t v106 = (os_log_s *)Logger.logObject.getter(v105);
      os_log_type_t v107 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v106, v107))
      {
        v151 = v103;
        uint64_t v108 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t typea = swift_slowAlloc(32LL, -1LL);
        v154[0] = typea;
        *(_DWORD *)uint64_t v108 = 136315138;
        uint64_t v109 = *(void *)(v0 + 80);
        uint64_t v110 = *(const char **)(v0 + 88);
        swift_bridgeObjectRetain(v110);
        uint64_t v111 = v109;
        uint64_t v103 = v151;
        *(void *)(v0 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10018CDB4(v111, (unint64_t)v110, v154);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v3, v4, v108 + 4, v108 + 12);
        swift_bridgeObjectRelease(v110);
        sub_100236EA0(v99);
        _os_log_impl((void *)&_mh_execute_header, v106, v107, "Received IDENTITY-SHARE request %s", v108, 0xCu);
        swift_arrayDestroy(typea, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(typea, -1LL, -1LL);
        swift_slowDealloc(v108, -1LL, -1LL);
      }

      else
      {
        sub_100236EA0(v99);
      }

      uint64_t v136 = dword_100654ECC;
      v103;
      uint64_t v137 = (void *)swift_task_alloc(v136);
      *(void *)(v0 + 456) = v137;
      *uint64_t v137 = v0;
      v137[1] = sub_10022B274;
      uint64_t result = sub_10041F11C(v99, *(void *)(v0 + 168));
      break;
    case 0xCu:
      uint64_t v112 = *(void *)(v0 + 176);
      sub_1001A4B40(*(void *)(v0 + 296), *(void *)(v0 + 200), _s14descr1005DD3D1C12ErrorRequestVMa);
      uint64_t v113 = sub_100231514(v112);
      *(void *)(v0 + 472) = v113;
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v115 = *(void *)(v0 + 192);
      uint64_t v114 = *(void *)(v0 + 200);
      uint64_t v116 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v116, (uint64_t)qword_1006494F0);
      uint64_t v117 = sub_1001A4B84(v114, v115, _s14descr1005DD3D1C12ErrorRequestVMa);
      uint64_t v118 = (os_log_s *)Logger.logObject.getter(v117);
      os_log_type_t v119 = static os_log_type_t.default.getter();
      BOOL v120 = os_log_type_enabled(v118, v119);
      uint64_t v121 = *(void *)(v0 + 192);
      if (v120)
      {
        uint64_t v152 = v113;
        uint64_t v122 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v123 = swift_slowAlloc(32LL, -1LL);
        v154[0] = v123;
        *(_DWORD *)uint64_t v122 = 136315138;
        uint64_t v124 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
        uint64_t v125 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
        uint64_t v126 = dispatch thunk of CustomStringConvertible.description.getter(v124, v125);
        uint64_t v128 = (const char *)v127;
        *(void *)(v0 + 112) = sub_10018CDB4(v126, v127, v154);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v3, v122 + 4, v122 + 12);
        id v129 = v128;
        uint64_t v113 = v152;
        swift_bridgeObjectRelease(v129);
        sub_1001A4BC8(v121, _s14descr1005DD3D1C12ErrorRequestVMa);
        _os_log_impl((void *)&_mh_execute_header, v118, v119, "Received ERROR request %s", v122, 0xCu);
        swift_arrayDestroy(v123, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v123, -1LL, -1LL);
        swift_slowDealloc(v122, -1LL, -1LL);
      }

      else
      {
        sub_1001A4BC8(*(void *)(v0 + 192), _s14descr1005DD3D1C12ErrorRequestVMa);
      }

      uint64_t v138 = dword_100654EDC;
      v113;
      uint64_t v139 = (void *)swift_task_alloc(v138);
      *(void *)(v0 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v139;
      *uint64_t v139 = v0;
      v139[1] = sub_10022B3B4;
      uint64_t result = sub_10041F8AC(*(void *)(v0 + 200), *(void *)(v0 + 168));
      break;
    default:
      uint64_t v23 = *(void *)(v0 + 296);
      uint64_t v24 = type metadata accessor for SFAirDropReceive.Failure(0LL);
      uint64_t v25 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
      uint64_t v26 = swift_allocError(v24, v25, 0LL, 0LL);
      uint64_t v28 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104LL))( v27,  enum case for SFAirDropReceive.Failure.badRequest(_:),  v24);
      swift_willThrow(v28);
      sub_1001A4BC8(v23, type metadata accessor for SDAirDropMessage);
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v29 = type metadata accessor for Logger(0LL);
      uint64_t v30 = sub_100186DE4(v29, (uint64_t)qword_1006494F0);
      uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
      os_log_type_t v32 = static os_log_type_t.error.getter(v31);
      if (os_log_type_enabled(v31, v32))
      {
        unint64_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)unint64_t v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Missing handler after failure", v33, 2u);
        swift_slowDealloc(v33, -1LL, -1LL);
      }

      sub_1003E8564(0);
      swift_errorRelease(v26);
      uint64_t v34 = *(void *)(v0 + 272);
      uint64_t v35 = *(void *)(v0 + 280);
      uint64_t v36 = *(void *)(v0 + 264);
      uint64_t v38 = *(void *)(v0 + 240);
      uint64_t v37 = *(void *)(v0 + 248);
      uint64_t v39 = *(void *)(v0 + 232);
      uint64_t v41 = *(void *)(v0 + 208);
      uint64_t v40 = *(void *)(v0 + 216);
      uint64_t v42 = *(void *)(v0 + 200);
      uint64_t v147 = *(void *)(v0 + 192);
      swift_task_dealloc(*(void *)(v0 + 296));
      swift_task_dealloc(v35);
      swift_task_dealloc(v34);
      swift_task_dealloc(v36);
      swift_task_dealloc(v37);
      swift_task_dealloc(v38);
      swift_task_dealloc(v39);
      swift_task_dealloc(v40);
      swift_task_dealloc(v41);
      swift_task_dealloc(v42);
      swift_task_dealloc(v147);
      uint64_t result = (*(uint64_t (**)(void))(v0 + 8))();
      break;
  }

  return result;
}

uint64_t sub_10022AC24()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 336);
  *(void *)(*v1 + 344) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = *(void *)(v2 + 304);
    uint64_t v5 = sub_10022B634;
  }

  else
  {
    uint64_t v6 = *(void *)(v2 + 304);

    uint64_t v5 = sub_10022AC98;
    uint64_t v4 = v6;
  }

  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_10022AC98()
{
  uint64_t v1 = *(void **)(v0 + 328);
  sub_100189B0C(*(void *)(v0 + 312), *(void *)(v0 + 320));

  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 248);
  uint64_t v7 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 208);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 200);
  uint64_t v12 = *(void *)(v0 + 192);
  swift_task_dealloc(*(void *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10022AD64()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 360);
  *(void *)(*v1 + 368) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = *(void **)(v2 + 352);
  uint64_t v5 = *(void *)(v2 + 304);

  if (v0) {
    uint64_t v6 = sub_10022B850;
  }
  else {
    uint64_t v6 = sub_10022ADD4;
  }
  return swift_task_switch(v6, v5, 0LL);
}

uint64_t sub_10022ADD4()
{
  uint64_t v1 = *(void **)(v0 + 352);
  sub_1001A4BC8(*(void *)(v0 + 280), _s12HelloRequestVMa);

  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 248);
  uint64_t v7 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 208);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 200);
  uint64_t v12 = *(void *)(v0 + 192);
  swift_task_dealloc(*(void *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10022AEA8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 384);
  *(void *)(*v1 + 392) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = *(void **)(v2 + 376);
  uint64_t v5 = *(void *)(v2 + 304);

  if (v0) {
    uint64_t v6 = sub_10022BA64;
  }
  else {
    uint64_t v6 = sub_10022AF18;
  }
  return swift_task_switch(v6, v5, 0LL);
}

uint64_t sub_10022AF18()
{
  uint64_t v1 = *(void **)(v0 + 376);
  sub_1001A4BC8(*(void *)(v0 + 248), _s14descr1005DF7D1C10AskRequestVMa);

  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 248);
  uint64_t v7 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 208);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 200);
  uint64_t v12 = *(void *)(v0 + 192);
  swift_task_dealloc(*(void *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10022AFEC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 408);
  *(void *)(*v1 + 4swift_unknownObjectWeakDestroy(v0 + 16) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = *(void **)(v2 + 400);
  uint64_t v5 = *(void *)(v2 + 304);

  if (v0) {
    uint64_t v6 = sub_10022BC78;
  }
  else {
    uint64_t v6 = sub_10022B05C;
  }
  return swift_task_switch(v6, v5, 0LL);
}

uint64_t sub_10022B05C()
{
  uint64_t v1 = *(void **)(v0 + 400);
  sub_1001A4BC8(*(void *)(v0 + 240), _s14descr1005D9BD1C13UploadRequestVMa);

  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 248);
  uint64_t v7 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 208);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 200);
  uint64_t v12 = *(void *)(v0 + 192);
  swift_task_dealloc(*(void *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10022B130()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 432);
  *(void *)(*v1 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = *(void **)(v2 + 424);
  uint64_t v5 = *(void *)(v2 + 304);

  if (v0) {
    uint64_t v6 = sub_10022BE8C;
  }
  else {
    uint64_t v6 = sub_10022B1A0;
  }
  return swift_task_switch(v6, v5, 0LL);
}

uint64_t sub_10022B1A0()
{
  uint64_t v1 = *(void **)(v0 + 424);
  sub_1001A4BC8(*(void *)(v0 + 216), _s14descr1005DEB71C15ExchangeRequestVMa);

  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 248);
  uint64_t v7 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 208);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 200);
  uint64_t v12 = *(void *)(v0 + 192);
  swift_task_dealloc(*(void *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10022B274()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 456);
  *(void *)(*v1 + 464) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = *(void *)(v2 + 304);
    uint64_t v5 = sub_10022C0A0;
  }

  else
  {
    uint64_t v6 = *(void *)(v2 + 304);

    uint64_t v5 = sub_10022B2E8;
    uint64_t v4 = v6;
  }

  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_10022B2E8()
{
  uint64_t v1 = *(void **)(v0 + 448);
  sub_100236EA0(v0 + 16);

  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 248);
  uint64_t v7 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 208);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 200);
  uint64_t v12 = *(void *)(v0 + 192);
  swift_task_dealloc(*(void *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10022B3B4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 480);
  *(void *)(*v1 + 488) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = *(void **)(v2 + 472);
  uint64_t v5 = *(void *)(v2 + 304);

  if (v0) {
    uint64_t v6 = sub_10022C2B8;
  }
  else {
    uint64_t v6 = sub_10022B424;
  }
  return swift_task_switch(v6, v5, 0LL);
}

uint64_t sub_10022B424()
{
  uint64_t v1 = *(void **)(v0 + 472);
  sub_1001A4BC8(*(void *)(v0 + 200), _s14descr1005DD3D1C12ErrorRequestVMa);

  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 248);
  uint64_t v7 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 208);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 200);
  uint64_t v12 = *(void *)(v0 + 192);
  swift_task_dealloc(*(void *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10022B4F8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 504LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 304LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 512LL));
  swift_errorRelease(v1);
  return swift_task_switch(sub_10022B558, v2, 0LL);
}

uint64_t sub_10022B558()
{
  uint64_t v2 = *(void **)(v0 + 496);
  uint64_t v1 = *(void *)(v0 + 504);

  sub_1003E8564(0);
  swift_errorRelease(v1);

  uint64_t v3 = *(void *)(v0 + 272);
  uint64_t v4 = *(void *)(v0 + 280);
  uint64_t v5 = *(void *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 248);
  uint64_t v8 = *(void *)(v0 + 232);
  uint64_t v10 = *(void *)(v0 + 208);
  uint64_t v9 = *(void *)(v0 + 216);
  uint64_t v11 = *(void *)(v0 + 200);
  uint64_t v13 = *(void *)(v0 + 192);
  swift_task_dealloc(*(void *)(v0 + 296));
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10022B634()
{
  unint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 312);

  sub_100189B0C(v2, v1);
  uint64_t v3 = *(void *)(v0 + 344);
  uint64_t v4 = *(void **)(v0 + 328);
  *(void *)(v0 + 496) = v4;
  *(void *)(v0 + 504) = v3;
  uint64_t v5 = qword_100643FB8;
  v4;
  if (v5 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v6, (uint64_t)qword_1006494F0);
  swift_errorRetain(v3);
  uint64_t v7 = swift_errorRetain(v3);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v11 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v10 = 138412290;
    swift_errorRetain(v3);
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError(v3);
    *(void *)(v0 + 104) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v10 + 4, v10 + 12);
    uint64_t *v11 = v12;
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Error handling message %@", v10, 0xCu);
    uint64_t v13 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v11, 1LL, v13);
    swift_slowDealloc(v11, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(v3);
    swift_errorRelease(v3);
  }

  sub_10041FE34(v3);
  swift_errorRetain(v3);
  BOOL v14 = (void *)swift_task_alloc(dword_10064973C);
  *(void *)(v0 + 512) = v14;
  *BOOL v14 = v0;
  v14[1] = sub_10022B4F8;
  return sub_10022EC74(*(void *)(v0 + 176), v3);
}

uint64_t sub_10022B850()
{
  uint64_t v1 = v0[46];
  uint64_t v2 = (void *)v0[44];
  v0[62] = v2;
  v0[63] = v1;
  uint64_t v3 = qword_100643FB8;
  v2;
  if (v3 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v4, (uint64_t)qword_1006494F0);
  swift_errorRetain(v1);
  uint64_t v5 = swift_errorRetain(v1);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    os_log_type_t v9 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain(v1);
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[13] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 13, v0 + 14, v8 + 4, v8 + 12);
    *os_log_type_t v9 = v10;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error handling message %@", v8, 0xCu);
    uint64_t v11 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v9, 1LL, v11);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  sub_10041FE34(v1);
  swift_errorRetain(v1);
  uint64_t v12 = (void *)swift_task_alloc(dword_10064973C);
  v0[64] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10022B4F8;
  return sub_10022EC74(v0[22], v1);
}

uint64_t sub_10022BA64()
{
  uint64_t v1 = v0[49];
  uint64_t v2 = (void *)v0[47];
  v0[62] = v2;
  v0[63] = v1;
  uint64_t v3 = qword_100643FB8;
  v2;
  if (v3 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v4, (uint64_t)qword_1006494F0);
  swift_errorRetain(v1);
  uint64_t v5 = swift_errorRetain(v1);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    os_log_type_t v9 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain(v1);
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[13] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 13, v0 + 14, v8 + 4, v8 + 12);
    *os_log_type_t v9 = v10;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error handling message %@", v8, 0xCu);
    uint64_t v11 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v9, 1LL, v11);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  sub_10041FE34(v1);
  swift_errorRetain(v1);
  uint64_t v12 = (void *)swift_task_alloc(dword_10064973C);
  v0[64] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10022B4F8;
  return sub_10022EC74(v0[22], v1);
}

uint64_t sub_10022BC78()
{
  uint64_t v1 = v0[52];
  uint64_t v2 = (void *)v0[50];
  v0[62] = v2;
  v0[63] = v1;
  uint64_t v3 = qword_100643FB8;
  v2;
  if (v3 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v4, (uint64_t)qword_1006494F0);
  swift_errorRetain(v1);
  uint64_t v5 = swift_errorRetain(v1);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    os_log_type_t v9 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain(v1);
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[13] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 13, v0 + 14, v8 + 4, v8 + 12);
    *os_log_type_t v9 = v10;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error handling message %@", v8, 0xCu);
    uint64_t v11 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v9, 1LL, v11);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  sub_10041FE34(v1);
  swift_errorRetain(v1);
  uint64_t v12 = (void *)swift_task_alloc(dword_10064973C);
  v0[64] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10022B4F8;
  return sub_10022EC74(v0[22], v1);
}

uint64_t sub_10022BE8C()
{
  uint64_t v1 = v0[55];
  uint64_t v2 = (void *)v0[53];
  v0[62] = v2;
  v0[63] = v1;
  uint64_t v3 = qword_100643FB8;
  v2;
  if (v3 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v4, (uint64_t)qword_1006494F0);
  swift_errorRetain(v1);
  uint64_t v5 = swift_errorRetain(v1);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    os_log_type_t v9 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain(v1);
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[13] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 13, v0 + 14, v8 + 4, v8 + 12);
    *os_log_type_t v9 = v10;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error handling message %@", v8, 0xCu);
    uint64_t v11 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v9, 1LL, v11);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  sub_10041FE34(v1);
  swift_errorRetain(v1);
  uint64_t v12 = (void *)swift_task_alloc(dword_10064973C);
  v0[64] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10022B4F8;
  return sub_10022EC74(v0[22], v1);
}

uint64_t sub_10022C0A0()
{
  sub_100236EA0(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 464);
  uint64_t v2 = *(void **)(v0 + 448);
  *(void *)(v0 + 496) = v2;
  *(void *)(v0 + 504) = v1;
  uint64_t v3 = qword_100643FB8;
  v2;
  if (v3 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v4, (uint64_t)qword_1006494F0);
  swift_errorRetain(v1);
  uint64_t v5 = swift_errorRetain(v1);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    os_log_type_t v9 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain(v1);
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(void *)(v0 + 104) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v8 + 4, v8 + 12);
    *os_log_type_t v9 = v10;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error handling message %@", v8, 0xCu);
    uint64_t v11 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v9, 1LL, v11);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  sub_10041FE34(v1);
  swift_errorRetain(v1);
  uint64_t v12 = (void *)swift_task_alloc(dword_10064973C);
  *(void *)(v0 + 512) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10022B4F8;
  return sub_10022EC74(*(void *)(v0 + 176), v1);
}

uint64_t sub_10022C2B8()
{
  uint64_t v1 = v0[61];
  uint64_t v2 = (void *)v0[59];
  v0[62] = v2;
  v0[63] = v1;
  uint64_t v3 = qword_100643FB8;
  v2;
  if (v3 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v4, (uint64_t)qword_1006494F0);
  swift_errorRetain(v1);
  uint64_t v5 = swift_errorRetain(v1);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    os_log_type_t v9 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain(v1);
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[13] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 13, v0 + 14, v8 + 4, v8 + 12);
    *os_log_type_t v9 = v10;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error handling message %@", v8, 0xCu);
    uint64_t v11 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v9, 1LL, v11);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  sub_10041FE34(v1);
  swift_errorRetain(v1);
  uint64_t v12 = (void *)swift_task_alloc(dword_10064973C);
  v0[64] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10022B4F8;
  return sub_10022EC74(v0[22], v1);
}

uint64_t sub_10022C4CC(char a1, uint64_t a2)
{
  *(void *)(v3 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a2;
  *(void *)(v3 + 168) = v2;
  *(_BYTE *)(v3 + 208) = a1;
  uint64_t v4 = type metadata accessor for CodableError(0LL);
  *(void *)(v3 + 176) = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)(v3 + 184) = v5;
  unint64_t v6 = (*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v3 + 192) = swift_task_alloc(v6);
  *(void *)(v3 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = swift_task_alloc(v6);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10022C570, static AirDropActor.shared, 0LL);
}

uint64_t sub_10022C570()
{
  if (*(_BYTE *)(v0 + 208))
  {
    if (*(_BYTE *)(v0 + 208) == 1)
    {
      uint64_t v1 = *(void *)(v0 + 200);
      uint64_t v2 = *(void *)(v0 + 184);
      uint64_t v57 = *(void *)(v0 + 176);
      uint64_t v3 = *(void *)(v0 + 160);
      swift_beginAccess(v4, v0 + 64, 0LL, 0LL);
      uint64_t v5 = *v4;
      uint64_t v6 = type metadata accessor for NWError(0LL);
      uint64_t v7 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v8 = swift_allocError(v6, v7, 0LL, 0LL);
      os_log_type_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
      v9(v10, v3, v6);
      swift_bridgeObjectRetain(v5);
      CodableError.init(_:)(v8);
      LOBYTE(v3) = sub_1003A04F0(v1, (uint64_t)v5);
      __n128 v11 = swift_bridgeObjectRelease(v5);
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, __n128))(v2 + 8);
      v12(v1, v57, v11);
      if ((v3 & 1) == 0)
      {
        uint64_t v13 = *(void *)(v0 + 192);
        uint64_t v14 = *(void *)(v0 + 200);
        uint64_t v15 = *(void *)(v0 + 160);
        uint64_t v55 = *(void *)(v0 + 176);
        uint64_t v16 = swift_allocError(v6, v7, 0LL, 0LL);
        v9(v17, v15, v6);
        CodableError.init(_:)(v16);
        swift_beginAccess(v4, v0 + 88, 33LL, 0LL);
        sub_1003B58D8(v14, v13);
        swift_endAccess(v0 + 88);
        ((void (*)(uint64_t, uint64_t))v12)(v14, v55);
        uint64_t v18 = 1LL;
LABEL_7:
        sub_1002286E4(v18);
      }
    }

    else
    {
      uint64_t v36 = *(void *)(v0 + 200);
      uint64_t v37 = *(void *)(v0 + 184);
      uint64_t v59 = *(void *)(v0 + 176);
      uint64_t v38 = *(void *)(v0 + 160);
      swift_beginAccess(v39, v0 + 16, 0LL, 0LL);
      uint64_t v40 = *v39;
      uint64_t v41 = type metadata accessor for NWError(0LL);
      uint64_t v42 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v43 = swift_allocError(v41, v42, 0LL, 0LL);
      unint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16LL);
      v44(v45, v38, v41);
      swift_bridgeObjectRetain(v40);
      CodableError.init(_:)(v43);
      LOBYTE(v38) = sub_1003A04F0(v36, (uint64_t)v40);
      __n128 v46 = swift_bridgeObjectRelease(v40);
      unint64_t v47 = *(void (**)(uint64_t, uint64_t, __n128))(v37 + 8);
      v47(v36, v59, v46);
      if ((v38 & 1) == 0)
      {
        uint64_t v48 = *(void *)(v0 + 192);
        uint64_t v49 = *(void *)(v0 + 200);
        uint64_t v60 = *(void *)(v0 + 176);
        uint64_t v50 = *(void *)(v0 + 160);
        uint64_t v51 = swift_allocError(v41, v42, 0LL, 0LL);
        v44(v52, v50, v41);
        CodableError.init(_:)(v51);
        swift_beginAccess(v39, v0 + 40, 33LL, 0LL);
        sub_1003B58D8(v49, v48);
        swift_endAccess(v0 + 40);
        ((void (*)(uint64_t, uint64_t))v47)(v49, v60);
      }
    }
  }

  else
  {
    uint64_t v19 = *(void *)(v0 + 200);
    uint64_t v20 = *(void *)(v0 + 184);
    uint64_t v58 = *(void *)(v0 + 176);
    uint64_t v21 = *(void *)(v0 + 160);
    swift_beginAccess(v22, v0 + 112, 0LL, 0LL);
    uint64_t v23 = *v22;
    uint64_t v24 = type metadata accessor for NWError(0LL);
    uint64_t v25 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
    uint64_t v26 = swift_allocError(v24, v25, 0LL, 0LL);
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16LL);
    v27(v28, v21, v24);
    swift_bridgeObjectRetain(v23);
    CodableError.init(_:)(v26);
    LOBYTE(v21) = sub_1003A04F0(v19, (uint64_t)v23);
    __n128 v29 = swift_bridgeObjectRelease(v23);
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, __n128))(v20 + 8);
    v30(v19, v58, v29);
    if ((v21 & 1) == 0)
    {
      uint64_t v31 = *(void *)(v0 + 192);
      uint64_t v32 = *(void *)(v0 + 200);
      uint64_t v33 = *(void *)(v0 + 160);
      uint64_t v56 = *(void *)(v0 + 176);
      uint64_t v34 = swift_allocError(v24, v25, 0LL, 0LL);
      v27(v35, v33, v24);
      CodableError.init(_:)(v34);
      swift_beginAccess(v22, v0 + 136, 33LL, 0LL);
      sub_1003B58D8(v32, v31);
      swift_endAccess(v0 + 136);
      ((void (*)(uint64_t, uint64_t))v30)(v32, v56);
      uint64_t v18 = 0LL;
      goto LABEL_7;
    }
  }

  uint64_t v53 = *(void *)(v0 + 192);
  swift_task_dealloc(*(void *)(v0 + 200));
  swift_task_dealloc(v53);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10022C9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v51 = a4;
  unint64_t v52 = a5;
  uint64_t v53 = a3;
  uint64_t v9 = type metadata accessor for UUID(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v50 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v50 - v17;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v19(v16, a1, v9);
  uint64_t v20 = v5 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions;
  swift_beginAccess(v20, v56, 33LL, 0LL);
  sub_1003B54D0((uint64_t)v18, v16);
  swift_endAccess(v56);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v10 + 8);
  v54(v18, v9);
  uint64_t v21 = *(void **)(v6 + 48);
  if ([v21 screenStateSupportsAirDrop]
    && [v21 wirelessEnabled]
    && *(void *)(*(void *)v20 + 16LL))
  {
    uint64_t v22 = (uint64_t *)(v6
                    + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID);
    swift_beginAccess( v6 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID,  v56,  32LL,  0LL);
    if (*(void *)(*v22 + 16) && (sub_1003AD618(a1), (v23 & 1) != 0))
    {
      swift_endAccess(v56);
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v24 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v24, (uint64_t)qword_1006494F0);
      uint64_t v25 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v13, a1, v9);
      uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
      os_log_type_t v27 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v29 = swift_slowAlloc(32LL, -1LL);
        v56[0] = v29;
        *(_DWORD *)uint64_t v28 = 136315138;
        uint64_t v30 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
        uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter(v9, v30);
        unint64_t v33 = v32;
        uint64_t v55 = sub_10018CDB4(v31, v32, v56);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56, v28 + 4, v28 + 12);
        swift_bridgeObjectRelease(v33);
        v54(v13, v9);
        _os_log_impl( (void *)&_mh_execute_header,  v26,  v27,  "Near Field server already running for transaction %s",  v28,  0xCu);
        swift_arrayDestroy(v29, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v29, -1LL, -1LL);
        swift_slowDealloc(v28, -1LL, -1LL);
      }

      else
      {
        v54(v13, v9);
      }
    }

    else
    {
      swift_endAccess(v56);
      v19(v18, a1, v9);
      v19(v16, a2, v9);
      v50[1] = objc_allocWithZone((Class)type metadata accessor for SDAirDropNearFieldServer(0LL));
      uint64_t v39 = v53;
      swift_unknownObjectRetain(v53);
      uint64_t v40 = v22;
      uint64_t v42 = v51;
      unint64_t v41 = v52;
      sub_10019BA8C(v51, v52);
      uint64_t v43 = swift_retain(v6);
      uint64_t v44 = (uint64_t)v16;
      uint64_t v45 = v39;
      id v46 = sub_100353654(v43, (uint64_t)&off_1005D5E28, (uint64_t)v18, v44, v39, v42, v41);
      sub_100189B20(v42, v41);
      swift_release(v6);
      swift_unknownObjectRelease(v45);
      v19(v18, a1, v9);
      swift_beginAccess(v40, v56, 33LL, 0LL);
      id v47 = v46;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v40);
      uint64_t v55 = *v40;
      *uint64_t v40 = 0x8000000000000000LL;
      sub_100236C1C((uint64_t)v47, (uint64_t)v18, isUniquelyReferenced_nonNull_native, &v55);
      uint64_t v49 = *v40;
      *uint64_t v40 = v55;
      swift_bridgeObjectRelease(v49);
      v54(v18, v9);
      swift_endAccess(v56);
      sub_10035124C();
    }
  }

  else
  {
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v34 = type metadata accessor for Logger(0LL);
    uint64_t v35 = sub_100186DE4(v34, (uint64_t)qword_1006494F0);
    uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Ignoring Near Field Server Start", v38, 2u);
      swift_slowDealloc(v38, -1LL, -1LL);
    }
  }

void sub_10022CEE0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = (uint64_t *)(v1
                  + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID);
  swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID,  v38,  32LL,  0LL);
  uint64_t v12 = *v11;
  if (*(void *)(*v11 + 16) && (unint64_t v13 = sub_1003AD618(a1), (v14 & 1) != 0))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v12 + 56) + 16 * v13);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    swift_endAccess(v38);
    swift_beginAccess( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions,  v38,  33LL,  0LL);
    swift_unknownObjectRetain(v16);
    sub_1003BD9C8(a1, (uint64_t)v10);
    swift_endAccess(v38);
    sub_100187100((uint64_t)v10, &qword_10064DA60);
    uint64_t v18 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
    swift_beginAccess( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers,  v38,  0LL,  0LL);
    if (*(void *)(*(void *)v18 + 16LL))
    {
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v19 = type metadata accessor for Logger(0LL);
      uint64_t v20 = sub_100186DE4(v19, (uint64_t)qword_1006494F0);
      uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        char v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)char v23 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  v22,  "Near Field server has active connections, not stopping",  v23,  2u);
        swift_slowDealloc(v23, -1LL, -1LL);
        swift_unknownObjectRelease(v16);
      }

      else
      {

        swift_unknownObjectRelease(v16);
      }
    }

    else
    {
      uint64_t ObjectType = swift_getObjectType(v16);
      (*(void (**)(uint64_t, uint64_t))(v17 + 64))(ObjectType, v17);
      swift_beginAccess(v11, &v36, 33LL, 0LL);
      uint64_t v35 = sub_1001C9534(a1);
      swift_endAccess(&v36);
      swift_unknownObjectRelease(v16);
      swift_unknownObjectRelease(v35);
    }
  }

  else
  {
    swift_endAccess(v38);
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v24 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v24, (uint64_t)qword_1006494F0);
    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v29 = swift_slowAlloc(32LL, -1LL);
      v38[0] = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v30 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter(v4, v30);
      unint64_t v33 = v32;
      uint64_t v36 = sub_10018CDB4(v31, v32, v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v28 + 4, v28 + 12);
      swift_bridgeObjectRelease(v33);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl( (void *)&_mh_execute_header,  v26,  v27,  "Near Field server does not exist for transaction %s",  v28,  0xCu);
      swift_arrayDestroy(v29, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1LL, -1LL);
      swift_slowDealloc(v28, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }

void sub_10022D314(char a1, char a2)
{
  int64_t v3 = v2;
  LOBYTE(v4) = a2;
  LOBYTE(v5) = a1;
  uint64_t v6 = sub_100183098(&qword_100649760);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v76 - v10;
  if (!(_BYTE)v5)
  {
    uint64_t v12 = &OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer;
LABEL_5:
    unint64_t v13 = (char **)(v2 + *v12);
    uint64_t v9 = *v13;
    if (*v13)
    {
      uint64_t v11 = v13[1];
      uint64_t v14 = qword_100643FB8;
      swift_unknownObjectRetain(v9);
      if (v14 != -1) {
        goto LABEL_79;
      }
      goto LABEL_7;
    }

    return;
  }

  if (v5 == 1)
  {
    uint64_t v12 = &OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer;
    goto LABEL_5;
  }

  if (qword_100643FB8 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v25 = type metadata accessor for Logger(0LL);
  uint64_t v26 = sub_100186DE4(v25, (uint64_t)qword_1006494F0);
  os_log_type_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc(18LL, -1LL);
    uint64_t v30 = swift_slowAlloc(32LL, -1LL);
    v87[0] = v30;
    *(_DWORD *)uint64_t v29 = 136315394;
    uint64_t v85 = sub_10018CDB4(0x656946207261654ELL, 0xEA0000000000646CLL, v87);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, v86, v29 + 4, v29 + 12);
    swift_bridgeObjectRelease(0xEA0000000000646CLL);
    *(_WORD *)(v29 + 12) = 1024;
    LODWORD(v85) = v4 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, (char *)&v85 + 4, v29 + 14, v29 + 18);
    _os_log_impl( (void *)&_mh_execute_header,  v27,  v28,  "Attempting Stop AirDrop %s - forced: %{BOOL}d",  (uint8_t *)v29,  0x12u);
    swift_arrayDestroy(v30, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1LL, -1LL);
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  if ((v4 & 1) == 0)
  {
    int64_t v56 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
    uint64_t v57 = swift_beginAccess( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers,  v87,  0LL,  0LL);
    if (*(void *)(*(void *)v56 + 16LL))
    {
      uint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
      os_log_type_t v59 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v58, v59)) {
        goto LABEL_76;
      }
      uint64_t v60 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v61 = swift_slowAlloc(32LL, -1LL);
      uint64_t v85 = v61;
      *(_DWORD *)uint64_t v60 = 136315138;
      uint64_t v83 = sub_10018CDB4(0x656946207261654ELL, 0xEA0000000000646CLL, &v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, v84, v60 + 4, v60 + 12);
      swift_bridgeObjectRelease(0xEA0000000000646CLL);
      uint64_t v62 = "%s Connections Present - Stop Ignored";
    }

    else
    {
      int64_t v74 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions;
      uint64_t v75 = swift_beginAccess( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions,  &v85,  0LL,  0LL);
      if (!*(void *)(*(void *)v74 + 16LL)) {
        goto LABEL_23;
      }
      uint64_t v58 = (os_log_s *)Logger.logObject.getter(v75);
      os_log_type_t v59 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v58, v59)) {
        goto LABEL_76;
      }
      uint64_t v60 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v61 = swift_slowAlloc(32LL, -1LL);
      uint64_t v83 = v61;
      *(_DWORD *)uint64_t v60 = 136315138;
      uint64_t v81 = sub_10018CDB4(0x656946207261654ELL, 0xEA0000000000646CLL, &v83);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v60 + 4, v60 + 12);
      swift_bridgeObjectRelease(0xEA0000000000646CLL);
      uint64_t v62 = "%s Transactions Present - Stop Ignored";
    }

    _os_log_impl((void *)&_mh_execute_header, v58, v59, v62, v60, 0xCu);
    swift_arrayDestroy(v61, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v61, -1LL, -1LL);
    swift_slowDealloc(v60, -1LL, -1LL);
    goto LABEL_76;
  }

uint64_t sub_10022DE08(uint64_t result)
{
  char v2 = result;
  if ((_BYTE)result)
  {
    int64_t v3 = &OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer;
  }

  else
  {
    int64_t v3 = &OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer;
  }

  int64_t v4 = (void *)(v1 + *v3);
  uint64_t v5 = *v4;
  if (*v4)
  {
    uint64_t v6 = v4[1];
    uint64_t ObjectType = swift_getObjectType(*v4);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 48);
    swift_unknownObjectRetain(v5);
    if ((v8(ObjectType, v6) & 1) != 0)
    {
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v9 = type metadata accessor for Logger(0LL);
      uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_1006494F0);
      uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
      os_log_type_t v12 = static os_log_type_t.error.getter(v11);
      if (os_log_type_enabled(v11, v12))
      {
        unint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v17 = swift_slowAlloc(32LL, -1LL);
        *(_DWORD *)unint64_t v13 = 136315138;
        uint64_t v19 = v17;
        if (v2) {
          uint64_t v14 = 0x2072756F6A6E6F42LL;
        }
        else {
          uint64_t v14 = 0xD00000000000001ALL;
        }
        if (v2) {
          uint64_t v15 = (const char *)0xEE00726576726553LL;
        }
        else {
          uint64_t v15 = (const char *)0x80000001005069C0LL;
        }
        uint64_t v18 = sub_10018CDB4(v14, (unint64_t)v15, &v19);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v13 + 4, v13 + 12);
        swift_bridgeObjectRelease(v15);
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "AirDrop %s is down, force stopping", v13, 0xCu);
        swift_arrayDestroy(v17, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v17, -1LL, -1LL);
        swift_slowDealloc(v13, -1LL, -1LL);
      }

      char v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(ObjectType, v6);
      sub_10022D314(v16, 1);
      return swift_unknownObjectRelease(v5);
    }

    else
    {
      return swift_unknownObjectRelease(v5);
    }
  }

  return result;
}

__n128 sub_10022E074()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SFPlatform(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v6 = *(void **)(v0 + 48);
  if ([v6 screenStateSupportsAirDrop]
    && [v6 discoverableLevel]
    && [v6 wirelessEnabled]
    && ([v6 bluetoothEnabledIncludingRestricted] & 1) != 0)
  {
    uint64_t v7 = (char *)_swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v7 = sub_10018C864(0LL, 1LL, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v9 = *((void *)v7 + 2);
    unint64_t v8 = *((void *)v7 + 3);
    if (v9 >= v8 >> 1) {
      uint64_t v7 = sub_10018C864((char *)(v8 > 1), v9 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v9 + 1;
    v7[v9 + 32] = 0;
  }

  if (![v6 screenStateSupportsAirDrop]
    || ![v6 discoverableLevel]
    || ![v6 wirelessEnabled]
    || ([v6 bluetoothEnabledIncludingRestricted] & 1) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0) {
      uint64_t v7 = sub_10018C864(0LL, *((void *)v7 + 2) + 1LL, 1, v7);
    }
    unint64_t v11 = *((void *)v7 + 2);
    unint64_t v10 = *((void *)v7 + 3);
    if (v11 >= v10 >> 1) {
      uint64_t v7 = sub_10018C864((char *)(v10 > 1), v11 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v11 + 1;
    v7[v11 + 32] = 1;
  }

  if ([v6 screenStateSupportsAirDrop]
    && ([v6 wirelessEnabled] & 1) != 0)
  {
    if (!*((void *)v7 + 2))
    {
      swift_bridgeObjectRelease(v7);
      static SFPlatform.watchOS.getter(v12);
      char v13 = static SFPlatform.isPlatform(_:)(v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if ((v13 & 1) == 0)
      {
        uint64_t v14 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleScannerID;
        swift_retain(v1);
        sub_1003E9E44(v14, (uint64_t)sub_100237948, v1);
        swift_release(v1);
      }

      sub_1002286E4(0LL);
      return result;
    }
  }

  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0) {
      uint64_t v7 = sub_10018C864(0LL, *((void *)v7 + 2) + 1LL, 1, v7);
    }
    unint64_t v17 = *((void *)v7 + 2);
    unint64_t v16 = *((void *)v7 + 3);
    if (v17 >= v16 >> 1) {
      uint64_t v7 = sub_10018C864((char *)(v16 > 1), v17 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v17 + 1;
    v7[v17 + 32] = 2;
  }

  swift_bridgeObjectRelease(v7);
  static SFPlatform.watchOS.getter(v18);
  char v19 = static SFPlatform.isPlatform(_:)(v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v19 & 1) == 0)
  {
    sub_1003E9E60(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleScannerID);
    uint64_t v20 = (const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes);
    swift_beginAccess(v20, v23, 1LL, 0LL);
    uint64_t v21 = *v20;
    *uint64_t v20 = (const char *)&_swiftEmptySetSingleton;
    return swift_bridgeObjectRelease(v21);
  }

  return result;
}

uint64_t sub_10022E440(void *a1, char a2)
{
  uint64_t v4 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(v6, 1LL, 1LL, v7);
  uint64_t v8 = swift_allocObject(&unk_1005D5E80, 24LL, 7LL);
  swift_weakInit(v8 + 16);
  uint64_t v9 = qword_100643F28;
  swift_retain(v8);
  id v10 = a1;
  if (v9 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v11 = static AirDropActor.shared;
  uint64_t v12 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v13 = swift_allocObject(&unk_1005D5F98, 49LL, 7LL);
  *(void *)(v13 + swift_unknownObjectWeakDestroy(v0 + 16) = v11;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v8;
  *(void *)(v13 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v10;
  *(_BYTE *)(v13 + 48) = a2 & 1;
  swift_retain(v11);
  swift_release(v8);
  uint64_t v14 = sub_1001B3808((uint64_t)v6, (uint64_t)&unk_1006497F0, v13);
  return swift_release(v14);
}

uint64_t sub_10022E5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(_BYTE *)(v6 + 64) = a6;
  *(void *)(v6 + 48) = a4;
  *(void *)(v6 + 56) = a5;
  *(void *)(v6 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10022E624, static AirDropActor.shared, 0LL);
}

uint64_t sub_10022E624()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    sub_10022E69C();
    swift_release(Strong);
  }

  **(_BYTE **)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = Strong == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10022E69C()
{
  __asm { BR              X10 }

void sub_10022E6F4( int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_t oslog, char a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35)
{
  if ((v35 & 0xFF000000000000LL) != 0)
  {
    if ((v36 & 1) != 0)
    {
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v39 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v39, (uint64_t)qword_1006494F0);
      sub_10019BA8C(v37, v35);
      uint64_t v40 = sub_10019BA8C(v37, v35);
      unint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
      os_log_type_t v42 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v68 = swift_slowAlloc(32LL, -1LL);
        v70[0] = v68;
        *(_DWORD *)uint64_t v43 = 136380675;
        sub_1002DDC60(v37, v35);
        uint64_t v45 = v44;
        *(void *)&v71[0] = v44;
        uint64_t v46 = sub_100183098((uint64_t *)&unk_10064D7D0);
        unint64_t v47 = sub_1001FF494();
        uint64_t v48 = BidirectionalCollection<>.joined(separator:)(0LL, 0xE000000000000000LL, v46, v47);
        int64_t v50 = v49;
        swift_bridgeObjectRelease(v45);
        *(void *)&v71[0] = sub_10018CDB4(v48, (unint64_t)v50, v70);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v71, (char *)v71 + 8, v43 + 4, v43 + 12);
        swift_bridgeObjectRelease(v50);
        sub_100189B20(v37, v35);
        sub_100189B20(v37, v35);
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "Found BLE device - %{private}s", v43, 0xCu);
        swift_arrayDestroy(v68, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v68, -1LL, -1LL);
        swift_slowDealloc(v43, -1LL, -1LL);
      }

      else
      {
        sub_100189B20(v37, v35);
        sub_100189B20(v37, v35);
      }

      if ((sub_100234260() & 1) != 0) {
        sub_1002286E4(1LL);
      }
    }

    else
    {
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v55 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v55, (uint64_t)qword_1006494F0);
      sub_10019BA8C(v37, v35);
      uint64_t v56 = sub_10019BA8C(v37, v35);
      uint64_t v57 = (os_log_s *)Logger.logObject.getter(v56);
      os_log_type_t v58 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v57, v58))
      {
        os_log_type_t v59 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v60 = swift_slowAlloc(32LL, -1LL);
        v70[0] = v60;
        *(_DWORD *)os_log_type_t v59 = 136380675;
        sub_1002DDC60(v37, v35);
        uint64_t v62 = v61;
        *(void *)&v71[0] = v61;
        uint64_t v63 = sub_100183098((uint64_t *)&unk_10064D7D0);
        unint64_t v64 = sub_1001FF494();
        uint64_t v65 = BidirectionalCollection<>.joined(separator:)(0LL, 0xE000000000000000LL, v63, v64);
        uint64_t v67 = v66;
        swift_bridgeObjectRelease(v62);
        *(void *)&v71[0] = sub_10018CDB4(v65, (unint64_t)v67, v70);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v71, (char *)v71 + 8, v59 + 4, v59 + 12);
        swift_bridgeObjectRelease(v67);
        sub_100189B20(v37, v35);
        sub_100189B20(v37, v35);
        _os_log_impl((void *)&_mh_execute_header, v57, v58, "Lost BLE device - %{private}s", v59, 0xCu);
        swift_arrayDestroy(v60, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v60, -1LL, -1LL);
        swift_slowDealloc(v59, -1LL, -1LL);
      }

      else
      {
        sub_100189B20(v37, v35);
        sub_100189B20(v37, v35);
      }

      swift_beginAccess( v38 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes,  v70,  33LL,  0LL);
      sub_1003BDDA0(v37, v35, v71);
      swift_endAccess(v70);
      sub_100189B0C(*(uint64_t *)&v71[0], *((unint64_t *)&v71[0] + 1));
      sub_1002322D4(1);
    }

    sub_100189B20(v37, v35);
  }

  else
  {
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v51 = type metadata accessor for Logger(0LL);
    uint64_t v52 = sub_100186DE4(v51, (uint64_t)qword_1006494F0);
    unint64_t v69 = (os_log_s *)Logger.logObject.getter(v52);
    os_log_type_t v53 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v69, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl((void *)&_mh_execute_header, v69, v53, "Empty AirDrop hashses in advertisement, ignoring", v54, 2u);
      swift_slowDealloc(v54, -1LL, -1LL);

      sub_100189B20(v37, v35);
    }

    else
    {
      sub_100189B20(v37, v35);
    }
  }

uint64_t sub_10022EC74(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  v3[6] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v5 = static AirDropActor.shared;
  v3[7] = static AirDropActor.shared;
  return swift_task_switch(sub_10022ED04, v5, 0LL);
}

uint64_t sub_10022ED04()
{
  if (qword_100643FB8 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[6];
  uint64_t v3 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v3, (uint64_t)qword_1006494F0);
  uint64_t v4 = sub_1001A4B84(v1, v2, type metadata accessor for SDAirDropServerConnectionIdentity);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = v0[6];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = swift_slowAlloc(32LL, -1LL);
    uint64_t v16 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    unint64_t v11 = sub_1003E8364();
    unint64_t v13 = v12;
    v0[2] = sub_10018CDB4(v11, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v13);
    sub_1001A4BC8(v8, type metadata accessor for SDAirDropServerConnectionIdentity);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Tearing down handler for server %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  else
  {
    sub_1001A4BC8(v0[6], type metadata accessor for SDAirDropServerConnectionIdentity);
  }

  uint64_t v14 = (void *)swift_task_alloc(dword_100649774);
  v0[8] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_10022EEF8;
  return sub_10022EF88(v0[3], v0[4]);
}

uint64_t sub_10022EEF8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 64LL));
  return swift_task_switch(sub_10022EF4C, v1, 0LL);
}

uint64_t sub_10022EF4C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_100230334(*(void *)(v0 + 24));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10022EF88(uint64_t a1, uint64_t a2)
{
  v3[32] = a2;
  v3[33] = v2;
  v3[31] = a1;
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v3[34] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[35] = v5;
  v3[36] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  v3[37] = v6;
  unint64_t v7 = (*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[38] = swift_task_alloc(v7);
  v3[39] = swift_task_alloc(v7);
  v3[40] = swift_task_alloc(v7);
  v3[41] = swift_task_alloc(v7);
  v3[42] = swift_task_alloc(v7);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v8 = static AirDropActor.shared;
  v3[43] = static AirDropActor.shared;
  return swift_task_switch(sub_10022F078, v8, 0LL);
}

uint64_t sub_10022F078()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 296);
  sub_1001A4B84(*(void *)(v0 + 248), v1, type metadata accessor for SDAirDropServerConnectionIdentity);
  if (swift_getEnumCaseMultiPayload(v1, v2) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 264);
    (*(void (**)(void, void, void))(*(void *)(v0 + 280) + 32LL))( *(void *)(v0 + 288),  *(void *)(v0 + 336),  *(void *)(v0 + 272));
    uint64_t v4 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
    *(void *)(v0 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
    uint64_t v5 = (uint64_t *)(v3 + v4);
    swift_beginAccess(v5, v0 + 16, 32LL, 0LL);
    uint64_t v6 = *v5;
    if (*(void *)(v6 + 16))
    {
      unint64_t v7 = sub_1003AD580(*(void *)(v0 + 288));
      if ((v8 & 1) != 0)
      {
        uint64_t v9 = *(void **)(*(void *)(v6 + 56) + 8 * v7);
        *(void *)(v0 + 408) = v9;
        swift_endAccess(v0 + 16);
        uint64_t v10 = dword_100654E5C;
        v9;
        unint64_t v11 = (void *)swift_task_alloc(v10);
        *(void *)(v0 + 4swift_unknownObjectWeakDestroy(v0 + 16) = v11;
        unint64_t v12 = sub_10022FFE0;
LABEL_23:
        void *v11 = v0;
        v11[1] = v12;
        return sub_100420620(*(void *)(v0 + 256));
      }
    }

    swift_endAccess(v0 + 16);
    uint64_t v23 = *(void *)(v0 + 288);
    swift_beginAccess(*(void *)(v0 + 264) + *(void *)(v0 + 400), v0 + 40, 33LL, 0LL);
    uint64_t v24 = (void *)sub_1001C9364(v23);
    swift_endAccess(v0 + 40);

    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v25 = *(void *)(v0 + 304);
    uint64_t v26 = *(void *)(v0 + 264);
    uint64_t v27 = *(void *)(v0 + 248);
    uint64_t v28 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v28, (uint64_t)qword_1006494F0);
    sub_1001A4B84(v27, v25, type metadata accessor for SDAirDropServerConnectionIdentity);
    uint64_t v29 = swift_retain_n(v26, 2LL);
    uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = *(void *)(v0 + 304);
      uint64_t v101 = *(void *)(v0 + 400);
      uint64_t v102 = *(void *)(v0 + 280);
      uint64_t v33 = *(void *)(v0 + 264);
      os_log_t log = *(os_log_t *)(v0 + 272);
      uint64_t v105 = *(void *)(v0 + 288);
      uint64_t v34 = swift_slowAlloc(22LL, -1LL);
      uint64_t v35 = swift_slowAlloc(32LL, -1LL);
      uint64_t v109 = v35;
      *(_DWORD *)uint64_t v34 = 136315394;
      unint64_t v36 = sub_1003E8364();
      unint64_t v38 = v37;
      *(void *)(v0 + 224) = sub_10018CDB4(v36, v37, &v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v34 + 4, v34 + 12);
      swift_bridgeObjectRelease(v38);
      sub_1001A4BC8(v32, type metadata accessor for SDAirDropServerConnectionIdentity);
      *(_WORD *)(v34 + 12) = 2048;
      uint64_t v39 = *(void *)(*(void *)(v33 + v101) + 16LL);
      swift_release(v33);
      *(void *)(v0 + 184) = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192, v34 + 14, v34 + 22);
      swift_release(v33);
      _os_log_impl( (void *)&_mh_execute_header,  v30,  v31,  "Removed handler for quic connection %s count: %ld",  (uint8_t *)v34,  0x16u);
      swift_arrayDestroy(v35, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1LL, -1LL);
      swift_slowDealloc(v34, -1LL, -1LL);

      (*(void (**)(uint64_t, os_log_t))(v102 + 8))(v105, log);
    }

    else
    {
      uint64_t v53 = *(void *)(v0 + 304);
      uint64_t v55 = *(void *)(v0 + 280);
      uint64_t v54 = *(void *)(v0 + 288);
      uint64_t v56 = *(void *)(v0 + 272);
      swift_release_n(*(void *)(v0 + 264), 2LL);

      sub_1001A4BC8(v53, type metadata accessor for SDAirDropServerConnectionIdentity);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
    }

    goto LABEL_25;
  }

  uint64_t v13 = *(void *)(v0 + 264);
  uint64_t v14 = **(void **)(v0 + 336);
  uint64_t v15 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers;
  *(void *)(v0 + 352) = v14;
  *(void *)(v0 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v15;
  uint64_t v16 = (uint64_t *)(v13 + v15);
  swift_beginAccess(v13 + v15, v0 + 112, 0LL, 0LL);
  uint64_t v17 = *v16;
  uint64_t v18 = swift_task_alloc(32LL);
  *(void *)(v18 + swift_unknownObjectWeakDestroy(v0 + 16) = v14;
  uint64_t v19 = *(void *)(v17 + 16);
  swift_bridgeObjectRetain(v17);
  unint64_t v20 = 0LL;
  if (v19)
  {
    uint64_t v21 = (void *)(v17 + 32);
    while (1)
    {
      uint64_t v22 = v14 != *v21;
      if (v14 == *v21) {
        break;
      }
      ++v20;
      v21 += 2;
      if (v19 == v20)
      {
        unint64_t v20 = 0LL;
        break;
      }
    }
  }

  else
  {
    uint64_t v22 = 1LL;
  }

  *(void *)(v0 + 368) = v20;
  swift_bridgeObjectRelease(v17);
  swift_task_dealloc(v18);
  if ((v22 & 1) != 0)
  {
    uint64_t v40 = *(void *)(v0 + 264)
        + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourDiscoveryHandlers;
    swift_beginAccess(v40, v0 + 136, 0LL, 0LL);
    uint64_t v41 = *(void *)v40;
    uint64_t v42 = swift_task_alloc(32LL);
    *(void *)(v42 + swift_unknownObjectWeakDestroy(v0 + 16) = v14;
    uint64_t v43 = *(void *)(v41 + 16);
    swift_bridgeObjectRetain(v41);
    unint64_t v44 = 0LL;
    if (v43)
    {
      uint64_t v45 = (void *)(v41 + 32);
      uint64_t v46 = *(void *)(v42 + 16);
      while (1)
      {
        BOOL v47 = v46 == *v45;
        if (v46 == *v45) {
          break;
        }
        ++v44;
        v45 += 2;
        if (v43 == v44)
        {
          unint64_t v44 = 0LL;
          break;
        }
      }
    }

    else
    {
      BOOL v47 = 0;
    }

    uint64_t v22 = v0 + 168;
    swift_bridgeObjectRelease(v41);
    swift_task_dealloc(v42);
    if (v47)
    {
      if (v44 >= *(void *)(*(void *)v40 + 16LL))
      {
        if (qword_100643FB8 != -1) {
          swift_once(&qword_100643FB8, sub_100227D00);
        }
        uint64_t v93 = *(void *)(v0 + 264);
        uint64_t v94 = type metadata accessor for Logger(0LL);
        sub_100186DE4(v94, (uint64_t)qword_1006494F0);
        uint64_t v95 = swift_retain(v93);
        uint64_t v96 = (os_log_s *)Logger.logObject.getter(v95);
        os_log_type_t v97 = static os_log_type_t.fault.getter();
        BOOL v98 = os_log_type_enabled(v96, v97);
        uint64_t v99 = *(void *)(v0 + 264);
        if (v98)
        {
          uint64_t v108 = *(void *)(v0 + 264);
          uint64_t v100 = swift_slowAlloc(22LL, -1LL);
          *(_DWORD *)uint64_t v100 = 134218240;
          *(void *)uint64_t v22 = v44;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v100 + 4, v100 + 12);
          *(_WORD *)(v100 + 12) = 2048;
          *(void *)(v0 + 176) = *(void *)(*(void *)v40 + 16LL);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 184, v100 + 14, v100 + 22);
          swift_release(v108);
          _os_log_impl( (void *)&_mh_execute_header,  v96,  v97,  "Attempting to remove at index %ld but only have %ld handlers",  (uint8_t *)v100,  0x16u);
          swift_slowDealloc(v100, -1LL, -1LL);
          swift_unknownObjectRelease(v14);
        }

        else
        {
          swift_unknownObjectRelease(v14);
          swift_release(v99);
        }
      }

      else
      {
        swift_beginAccess(v40, v0 + 88, 33LL, 0LL);
        uint64_t v62 = sub_1001C8084(v44);
        unint64_t v64 = v63;
        swift_endAccess(v0 + 88);
        swift_unknownObjectRelease(v62);

        if (qword_100643FB8 != -1) {
          swift_once(&qword_100643FB8, sub_100227D00);
        }
        uint64_t v65 = *(void *)(v0 + 320);
        uint64_t v66 = *(void *)(v0 + 264);
        uint64_t v67 = *(void *)(v0 + 248);
        uint64_t v68 = type metadata accessor for Logger(0LL);
        sub_100186DE4(v68, (uint64_t)qword_1006494F0);
        sub_1001A4B84(v67, v65, type metadata accessor for SDAirDropServerConnectionIdentity);
        uint64_t v69 = swift_retain_n(v66, 2LL);
        uint64_t v70 = (os_log_s *)Logger.logObject.getter(v69);
        os_log_type_t v71 = static os_log_type_t.default.getter();
        BOOL v72 = os_log_type_enabled(v70, v71);
        uint64_t v73 = *(void *)(v0 + 320);
        uint64_t v74 = *(void *)(v0 + 264);
        if (v72)
        {
          uint64_t v75 = swift_slowAlloc(22LL, -1LL);
          uint64_t v106 = swift_slowAlloc(32LL, -1LL);
          uint64_t v109 = v106;
          *(_DWORD *)uint64_t v75 = 136315394;
          loga = v70;
          unint64_t v76 = sub_1003E8364();
          unint64_t v78 = v77;
          *(void *)(v0 + 192) = sub_10018CDB4(v76, v77, &v109);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 192, v0 + 200, v75 + 4, v75 + 12);
          swift_bridgeObjectRelease(v78);
          sub_1001A4BC8(v73, type metadata accessor for SDAirDropServerConnectionIdentity);
          *(_WORD *)(v75 + 12) = 2048;
          uint64_t v79 = *(void *)(*(void *)v40 + 16LL);
          swift_release(v74);
          *(void *)(v0 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v79;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208, v75 + 14, v75 + 22);
          swift_release(v74);
          _os_log_impl( (void *)&_mh_execute_header,  loga,  v71,  "Removed handler for bonjour connection %s count: %ld",  (uint8_t *)v75,  0x16u);
          swift_arrayDestroy(v106, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v106, -1LL, -1LL);
          swift_slowDealloc(v75, -1LL, -1LL);
          swift_unknownObjectRelease(v14);
        }

        else
        {
          swift_release(*(void *)(v0 + 264));
          swift_unknownObjectRelease(v14);
          sub_1001A4BC8(v73, type metadata accessor for SDAirDropServerConnectionIdentity);
          swift_release(v74);
        }
      }

      goto LABEL_26;
    }

    if (qword_100643FB8 == -1) {
      goto LABEL_35;
    }
  }

  else
  {
    if (v20 < *(void *)(*v16 + 16))
    {
      uint64_t v48 = *v16 + 16 * v20;
      uint64_t v49 = *(void *)(v48 + 32);
      *(void *)(v0 + 376) = v49;
      int64_t v50 = *(void **)(v48 + 40);
      *(void *)(v0 + 384) = v50;
      uint64_t v51 = dword_100654E5C;
      swift_unknownObjectRetain(v49);
      v50;
      unint64_t v11 = (void *)swift_task_alloc(v51);
      *(void *)(v0 + 392) = v11;
      unint64_t v12 = sub_10022FB0C;
      goto LABEL_23;
    }

    __break(1u);
  }

  swift_once(&qword_100643FB8, sub_100227D00);
LABEL_35:
  uint64_t v80 = *(void *)(v0 + 312);
  uint64_t v81 = *(void *)(v0 + 248);
  uint64_t v82 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v82, (uint64_t)qword_1006494F0);
  uint64_t v83 = sub_1001A4B84(v81, v80, type metadata accessor for SDAirDropServerConnectionIdentity);
  uint64_t v84 = (os_log_s *)Logger.logObject.getter(v83);
  os_log_type_t v85 = static os_log_type_t.default.getter();
  BOOL v86 = os_log_type_enabled(v84, v85);
  uint64_t v87 = *(void *)(v0 + 312);
  if (v86)
  {
    uint64_t v107 = v22;
    uint64_t v88 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v89 = swift_slowAlloc(32LL, -1LL);
    uint64_t v109 = v89;
    *(_DWORD *)uint64_t v88 = 136315138;
    unint64_t v90 = sub_1003E8364();
    unint64_t v92 = v91;
    *(void *)(v0 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10018CDB4(v90, v91, &v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v107, v88 + 4, v88 + 12);
    swift_bridgeObjectRelease(v92);
    sub_1001A4BC8(v87, type metadata accessor for SDAirDropServerConnectionIdentity);
    _os_log_impl( (void *)&_mh_execute_header,  v84,  v85,  "Unable to remove matching handler for connection %s, likely already removed",  v88,  0xCu);
    swift_arrayDestroy(v89, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v89, -1LL, -1LL);
    swift_slowDealloc(v88, -1LL, -1LL);
    swift_unknownObjectRelease(v14);
  }

  else
  {
    swift_unknownObjectRelease(v14);
    sub_1001A4BC8(v87, type metadata accessor for SDAirDropServerConnectionIdentity);
  }

uint64_t sub_10022FB0C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 344LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 392LL));
  return swift_task_switch(sub_10022FB64, v1, 0LL);
}

uint64_t sub_10022FB64()
{
  unint64_t v1 = *(void *)(v0 + 368);
  uint64_t v2 = *(void *)(v0 + 264);
  if (v1 >= *(void *)(*(void *)(v2 + *(void *)(v0 + 360)) + 16LL))
  {
    if (qword_100643FB8 != -1)
    {
      swift_once(&qword_100643FB8, sub_100227D00);
      uint64_t v2 = *(void *)(v0 + 264);
    }

    uint64_t v25 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v25, (uint64_t)qword_1006494F0);
    uint64_t v26 = swift_retain(v2);
    uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.fault.getter();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = *(void *)(v0 + 376);
    os_log_type_t v31 = *(void **)(v0 + 384);
    if (!v29)
    {
      uint64_t v39 = *(void *)(v0 + 352);
      swift_release(*(void *)(v0 + 264));
      swift_unknownObjectRelease(v39);
      swift_unknownObjectRelease(v30);

      goto LABEL_13;
    }

    int64_t v50 = *(void **)(v0 + 384);
    uint64_t v33 = *(void *)(v0 + 360);
    uint64_t v32 = *(void *)(v0 + 368);
    uint64_t v49 = *(void *)(v0 + 352);
    uint64_t v34 = *(void *)(v0 + 264);
    uint64_t v35 = swift_slowAlloc(22LL, -1LL);
    *(_DWORD *)uint64_t v35 = 134218240;
    *(void *)(v0 + 208) = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v35 + 4, v35 + 12);
    *(_WORD *)(v35 + 12) = 2048;
    *(void *)(v0 + 2swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(*(void *)(v34 + v33) + 16LL);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v0 + 224, v35 + 14, v35 + 22);
    swift_release(v34);
    _os_log_impl( (void *)&_mh_execute_header,  v27,  v28,  "Attempting to remove at index %ld but only have %ld handlers",  (uint8_t *)v35,  0x16u);
    swift_slowDealloc(v35, -1LL, -1LL);
    swift_unknownObjectRelease(v49);

    uint64_t v24 = v30;
  }

  else
  {
    swift_beginAccess(v2 + *(void *)(v0 + 360), v0 + 64, 33LL, 0LL);
    uint64_t v3 = sub_1001C8084(v1);
    uint64_t v5 = v4;
    swift_endAccess(v0 + 64);
    swift_unknownObjectRelease(v3);

    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v6 = *(void *)(v0 + 248);
    uint64_t v7 = *(void *)(v0 + 328);
    uint64_t v8 = *(void *)(v0 + 264);
    uint64_t v9 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v9, (uint64_t)qword_1006494F0);
    sub_1001A4B84(v6, v7, type metadata accessor for SDAirDropServerConnectionIdentity);
    uint64_t v10 = swift_retain_n(v8, 2LL);
    unint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v12 = static os_log_type_t.default.getter();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v15 = *(void *)(v0 + 376);
    uint64_t v14 = *(void **)(v0 + 384);
    if (!v13)
    {
      uint64_t v36 = *(void *)(v0 + 352);
      uint64_t v37 = *(void *)(v0 + 328);
      uint64_t v38 = *(void *)(v0 + 264);
      swift_release(v38);
      swift_unknownObjectRelease(v36);
      swift_unknownObjectRelease(v15);

      sub_1001A4BC8(v37, type metadata accessor for SDAirDropServerConnectionIdentity);
      swift_release(v38);

      goto LABEL_13;
    }

    uint64_t v46 = *(void *)(v0 + 360);
    uint64_t v48 = *(void *)(v0 + 352);
    int64_t v50 = *(void **)(v0 + 384);
    uint64_t v16 = *(void *)(v0 + 328);
    uint64_t v17 = *(void *)(v0 + 264);
    uint64_t v47 = *(void *)(v0 + 376);
    uint64_t v18 = swift_slowAlloc(22LL, -1LL);
    uint64_t v19 = swift_slowAlloc(32LL, -1LL);
    uint64_t v51 = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    unint64_t v20 = sub_1003E8364();
    unint64_t v22 = v21;
    *(void *)(v0 + 232) = sub_10018CDB4(v20, v21, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 232, v0 + 240, v18 + 4, v18 + 12);
    swift_bridgeObjectRelease(v22);
    sub_1001A4BC8(v16, type metadata accessor for SDAirDropServerConnectionIdentity);
    *(_WORD *)(v18 + 12) = 2048;
    uint64_t v23 = *(void *)(*(void *)(v17 + v46) + 16LL);
    swift_release(v17);
    *(void *)(v0 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 248, v18 + 14, v18 + 22);
    swift_release(v17);
    _os_log_impl( (void *)&_mh_execute_header,  v11,  v12,  "Removed handler for bonjour connection %s count: %ld",  (uint8_t *)v18,  0x16u);
    swift_arrayDestroy(v19, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1LL, -1LL);
    swift_slowDealloc(v18, -1LL, -1LL);
    swift_unknownObjectRelease(v48);

    uint64_t v24 = v47;
  }

  swift_unknownObjectRelease(v24);

LABEL_13:
  uint64_t v40 = *(void *)(v0 + 328);
  uint64_t v42 = *(void *)(v0 + 312);
  uint64_t v41 = *(void *)(v0 + 320);
  uint64_t v43 = *(void *)(v0 + 304);
  uint64_t v44 = *(void *)(v0 + 288);
  swift_task_dealloc(*(void *)(v0 + 336));
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10022FFE0()
{
  unint64_t v1 = *(void **)(*(void *)v0 + 408LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 344LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 416LL));

  return swift_task_switch(sub_10023003C, v2, 0LL);
}

uint64_t sub_10023003C()
{
  unint64_t v1 = *(void **)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 288);
  swift_beginAccess(*(void *)(v0 + 264) + *(void *)(v0 + 400), v0 + 40, 33LL, 0LL);
  uint64_t v3 = (void *)sub_1001C9364(v2);
  swift_endAccess(v0 + 40);

  if (qword_100643FB8 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 248);
  uint64_t v7 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v7, (uint64_t)qword_1006494F0);
  sub_1001A4B84(v6, v4, type metadata accessor for SDAirDropServerConnectionIdentity);
  uint64_t v8 = swift_retain_n(v5, 2LL);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v29 = *(void *)(v0 + 400);
    uint64_t v11 = *(void *)(v0 + 304);
    uint64_t v31 = *(void *)(v0 + 280);
    uint64_t v12 = *(void *)(v0 + 264);
    uint64_t v32 = *(void *)(v0 + 272);
    uint64_t v33 = *(void *)(v0 + 288);
    uint64_t v30 = v1;
    uint64_t v13 = swift_slowAlloc(22LL, -1LL);
    uint64_t v14 = swift_slowAlloc(32LL, -1LL);
    uint64_t v34 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    unint64_t v15 = sub_1003E8364();
    unint64_t v17 = v16;
    *(void *)(v0 + 224) = sub_10018CDB4(v15, v16, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease(v17);
    sub_1001A4BC8(v11, type metadata accessor for SDAirDropServerConnectionIdentity);
    *(_WORD *)(v13 + 12) = 2048;
    uint64_t v18 = *(void *)(*(void *)(v12 + v29) + 16LL);
    swift_release(v12);
    *(void *)(v0 + 184) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192, v13 + 14, v13 + 22);
    swift_release(v12);
    _os_log_impl( (void *)&_mh_execute_header,  v9,  v10,  "Removed handler for quic connection %s count: %ld",  (uint8_t *)v13,  0x16u);
    swift_arrayDestroy(v14, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1LL, -1LL);
    swift_slowDealloc(v13, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v32);
  }

  else
  {
    uint64_t v19 = *(void *)(v0 + 304);
    uint64_t v21 = *(void *)(v0 + 280);
    uint64_t v20 = *(void *)(v0 + 288);
    uint64_t v22 = *(void *)(v0 + 272);
    swift_release_n(*(void *)(v0 + 264), 2LL);

    sub_1001A4BC8(v19, type metadata accessor for SDAirDropServerConnectionIdentity);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }

  sub_100230334(*(void *)(v0 + 248));
  uint64_t v23 = *(void *)(v0 + 328);
  uint64_t v25 = *(void *)(v0 + 312);
  uint64_t v24 = *(void *)(v0 + 320);
  uint64_t v26 = *(void *)(v0 + 304);
  uint64_t v27 = *(void *)(v0 + 288);
  swift_task_dealloc(*(void *)(v0 + 336));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100230334(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SFPlatform(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v7 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  sub_1001A4B84(a1, (uint64_t)v9, v10);
  if (swift_getEnumCaseMultiPayload(v9, v7) == 1)
  {
    uint64_t v11 = *(void **)(v1 + 48);
    if (![v11 screenStateSupportsAirDrop]
      || ![v11 discoverableLevel]
      || ([v11 wirelessEnabled] & 1) == 0
      || (id v12 = [v11 bluetoothEnabledIncludingRestricted], !(_DWORD)v12)
      || (static SFPlatform.watchOS.getter(v12),
          char v13 = static SFPlatform.isPlatform(_:)(v6),
          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3),
          (v13 & 1) != 0))
    {
      sub_10022D314(0, 0);
    }

    if (([v11 screenStateSupportsAirDrop] & 1) == 0
      || ![v11 wirelessEnabled]
      || (uint64_t v14 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions,
          swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions,  v17,  0LL,  0LL),  !*(void *)(*(void *)v14 + 16LL)))
    {
      sub_10022D314(2, 0);
    }

    uint64_t v15 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    (*(void (**)(void *, uint64_t))(*(void *)(v15 - 8) + 8LL))(v9, v15);
  }

  else
  {
    swift_unknownObjectRelease(*v9);
    sub_1002322D4(1);
  }

uint64_t sub_10023051C(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v2[5] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v2[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  void v2[9] = v6;
  v2[10] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v2[11] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[12] = v8;
  v2[13] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SFAirDropReceive.Failure(0LL);
  v2[14] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v2[15] = v10;
  v2[16] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v11 = static AirDropActor.shared;
  v2[17] = static AirDropActor.shared;
  return swift_task_switch(sub_100230628, v11, 0LL);
}

uint64_t sub_100230628(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 88);
  SFAirDropReceive.Transfer.state.getter(a1);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 88))(v2, v4) == enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
  {
    uint64_t v6 = *(void *)(v1 + 120);
    uint64_t v5 = *(void *)(v1 + 128);
    uint64_t v8 = *(void *)(v1 + 104);
    uint64_t v7 = *(void *)(v1 + 112);
    (*(void (**)(uint64_t, void))(*(void *)(v1 + 96) + 96LL))(v8, *(void *)(v1 + 88));
    uint64_t v9 = sub_100183098(&qword_100649750);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v8 + *(int *)(v9 + 48), v7);
    uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8LL))(v8, v10);
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v12 = *(void *)(v1 + 72);
    uint64_t v11 = *(void *)(v1 + 80);
    uint64_t v13 = *(void *)(v1 + 64);
    uint64_t v14 = *(void *)(v1 + 24);
    uint64_t v15 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v15, (uint64_t)qword_1006494F0);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v14, v13);
    unint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.default.getter();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = *(void *)(v1 + 80);
    if (v19)
    {
      uint64_t v43 = *(void *)(v1 + 64);
      uint64_t v21 = *(void *)(v1 + 56);
      uint64_t v41 = *(void *)(v1 + 48);
      uint64_t v42 = *(void *)(v1 + 72);
      uint64_t v22 = *(void *)(v1 + 40);
      os_log_type_t type = v18;
      uint64_t v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v44 = swift_slowAlloc(32LL, -1LL);
      uint64_t v46 = v44;
      *(_DWORD *)uint64_t v23 = 136315138;
      SFAirDropReceive.Transfer.id.getter(v44);
      uint64_t v24 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter(v22, v24);
      uint64_t v27 = v26;
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v21, v22);
      *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10018CDB4(v25, (unint64_t)v27, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v23 + 4, v23 + 12);
      __n128 v28 = swift_bridgeObjectRelease(v27);
      (*(void (**)(uint64_t, uint64_t, __n128))(v42 + 8))(v20, v43, v28);
      _os_log_impl( (void *)&_mh_execute_header,  v17,  type,  "Transfer failed, removing handler for transferID: %s",  v23,  0xCu);
      swift_arrayDestroy(v44, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1LL, -1LL);
      swift_slowDealloc(v23, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(void, void))(*(void *)(v1 + 72) + 8LL))(*(void *)(v1 + 80), *(void *)(v1 + 64));
    }

    uint64_t v34 = *(void *)(v1 + 120);
    uint64_t v33 = *(void *)(v1 + 128);
    uint64_t v35 = *(void *)(v1 + 112);
    SFAirDropReceive.Transfer.id.getter(v36);
    uint64_t v37 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    uint64_t v38 = swift_allocError(v35, v37, 0LL, 0LL);
    *(void *)(v1 + 144) = v38;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v39, v33, v35);
    uint64_t v40 = (void *)swift_task_alloc(dword_10064975C);
    *(void *)(v1 + 152) = v40;
    *uint64_t v40 = v1;
    v40[1] = sub_1002309E0;
    return sub_100230AD4(*(void *)(v1 + 56), v38);
  }

  else
  {
    (*(void (**)(void, void))(*(void *)(v1 + 96) + 8LL))(*(void *)(v1 + 104), *(void *)(v1 + 88));
    uint64_t v29 = *(void *)(v1 + 104);
    uint64_t v30 = *(void *)(v1 + 80);
    uint64_t v31 = *(void *)(v1 + 56);
    swift_task_dealloc(*(void *)(v1 + 128));
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

uint64_t sub_1002309E0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 136LL);
  uint64_t v4 = *(void *)(*(void *)v0 + 48LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 56LL);
  uint64_t v5 = *(void *)(*(void *)v0 + 40LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 152LL));
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return swift_task_switch(sub_100230A68, v2, 0LL);
}

uint64_t sub_100230A68()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 56);
  swift_task_dealloc(*(void *)(v0 + 128));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100230AD4(uint64_t a1, uint64_t a2)
{
  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  uint64_t v4 = type metadata accessor for SFPlatform(0LL);
  v3[24] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[25] = v5;
  v3[26] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v3[27] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[28] = v7;
  unint64_t v8 = (*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[29] = swift_task_alloc(v8);
  v3[30] = swift_task_alloc(v8);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  v3[31] = static AirDropActor.shared;
  return swift_task_switch(sub_100230BA4, v9, 0LL);
}

uint64_t sub_100230BA4()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
  *(void *)(v0 + 256) = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
  uint64_t v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess(v1 + v2, v0 + 16, 32LL, 0LL);
  uint64_t v4 = *v3;
  if (*(void *)(v4 + 16))
  {
    unint64_t v5 = sub_1003AD580(*(void *)(v0 + 168));
    if ((v6 & 1) != 0)
    {
      uint64_t v7 = *(void **)(*(void *)(v4 + 56) + 8 * v5);
      *(void *)(v0 + 264) = v7;
      swift_endAccess(v0 + 16);
      uint64_t v8 = dword_100654E5C;
      v7;
      uint64_t v9 = (void *)swift_task_alloc(v8);
      *(void *)(v0 + 272) = v9;
      uint64_t v10 = sub_100230D94;
LABEL_8:
      *uint64_t v9 = v0;
      v9[1] = v10;
      return sub_100420620(*(void *)(v0 + 176));
    }
  }

  uint64_t v11 = *(void *)(v0 + 184);
  uint64_t v12 = *(void *)(v0 + 168);
  swift_endAccess(v0 + 16);
  uint64_t v13 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers;
  *(void *)(v0 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers;
  uint64_t v14 = (const char **)(v11 + v13);
  swift_beginAccess(v14, v0 + 40, 0LL, 0LL);
  uint64_t v15 = *v14;
  uint64_t v16 = swift_task_alloc(32LL);
  *(void *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = v12;
  swift_bridgeObjectRetain(v15);
  unint64_t v17 = sub_100227C24((uint64_t (*)(__int128 *))sub_100236F1C, v16, (uint64_t)v15);
  char v19 = v18;
  swift_bridgeObjectRelease(v15);
  *(void *)(v0 + 288) = v17;
  uint64_t result = swift_task_dealloc(v16);
  if ((v19 & 1) != 0)
  {
    uint64_t v25 = *(void *)(v0 + 232);
    uint64_t v26 = *(void *)(v0 + 208);
    swift_task_dealloc(*(void *)(v0 + 240));
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    if ((v17 & 0x8000000000000000LL) != 0)
    {
      __break(1u);
    }

    else if (v17 < *((void *)*v14 + 2))
    {
      uint64_t v21 = (uint64_t)&(*v14)[16 * v17];
      uint64_t v22 = *(void *)(v21 + 32);
      *(void *)(v0 + 296) = v22;
      uint64_t v23 = *(void **)(v21 + 40);
      *(void *)(v0 + 304) = v23;
      uint64_t v24 = dword_100654E5C;
      swift_unknownObjectRetain(v22);
      v23;
      uint64_t v9 = (void *)swift_task_alloc(v24);
      *(void *)(v0 + 312) = v9;
      uint64_t v10 = sub_1002311CC;
      goto LABEL_8;
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_100230D94()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 248LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 272LL));
  return swift_task_switch(sub_100230DEC, v1, 0LL);
}

uint64_t sub_100230DEC()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_beginAccess(*(void *)(v0 + 184) + *(void *)(v0 + 256), v0 + 112, 33LL, 0LL);
  uint64_t v2 = (void *)sub_1001C9364(v1);
  swift_endAccess(v0 + 112);

  if (qword_100643FB8 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v7 = *(void *)(v0 + 168);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v8, (uint64_t)qword_1006494F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v7, v4);
  uint64_t v9 = swift_retain_n(v6, 2LL);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v39 = *(void *)(v0 + 256);
    uint64_t v12 = *(void *)(v0 + 240);
    uint64_t v13 = *(void *)(v0 + 216);
    uint64_t v37 = *(void *)(v0 + 224);
    uint64_t v14 = *(void *)(v0 + 184);
    uint64_t v15 = swift_slowAlloc(22LL, -1LL);
    uint64_t v38 = swift_slowAlloc(32LL, -1LL);
    uint64_t v40 = v38;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter(v13, v16);
    char v19 = (const char *)v18;
    *(void *)(v0 + 152) = sub_10018CDB4(v17, v18, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160, v15 + 4, v15 + 12);
    __n128 v20 = swift_bridgeObjectRelease(v19);
    (*(void (**)(uint64_t, uint64_t, __n128))(v37 + 8))(v12, v13, v20);
    *(_WORD *)(v15 + 12) = 2048;
    uint64_t v21 = *(void *)(*(void *)(v14 + v39) + 16LL);
    swift_release(v14);
    *(void *)(v0 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168, v15 + 14, v15 + 22);
    swift_release(v14);
    _os_log_impl( (void *)&_mh_execute_header,  v10,  v11,  "Removed quic handler for transferID: %s count: %ld",  (uint8_t *)v15,  0x16u);
    swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1LL, -1LL);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  else
  {
    uint64_t v22 = *(void *)(v0 + 240);
    uint64_t v23 = *(void *)(v0 + 216);
    uint64_t v24 = *(void *)(v0 + 224);
    uint64_t v25 = *(void *)(v0 + 184);
    swift_release(v25);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    swift_release(v25);
  }

  uint64_t v26 = *(void **)(*(void *)(v0 + 184) + 48LL);
  if (![v26 screenStateSupportsAirDrop]
    || ![v26 discoverableLevel]
    || ([v26 wirelessEnabled] & 1) == 0
    || (id v27 = [v26 bluetoothEnabledIncludingRestricted], !(_DWORD)v27)
    || (uint64_t v29 = *(void *)(v0 + 200),
        uint64_t v28 = *(void *)(v0 + 208),
        uint64_t v30 = *(void *)(v0 + 192),
        static SFPlatform.watchOS.getter(v27),
        char v31 = static SFPlatform.isPlatform(_:)(v28),
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30),
        (v31 & 1) != 0))
  {
    sub_10022D314(0, 0);
  }

  if ([v26 screenStateSupportsAirDrop]
    && [v26 wirelessEnabled]
    && (uint64_t v32 = *(void *)(v0 + 184)
            + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions,
        swift_beginAccess(v32, v0 + 88, 0LL, 0LL),
        *(void *)(*(void *)v32 + 16LL)))
  {
    uint64_t v33 = *(void **)(v0 + 264);
  }

  else
  {
    uint64_t v33 = *(void **)(v0 + 264);
    sub_10022D314(2, 0);
  }

  uint64_t v34 = *(void *)(v0 + 232);
  uint64_t v35 = *(void *)(v0 + 208);
  swift_task_dealloc(*(void *)(v0 + 240));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002311CC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 248LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 312LL));
  return swift_task_switch(sub_100231224, v1, 0LL);
}

uint64_t sub_100231224()
{
  unint64_t v1 = *(void *)(v0 + 288);
  swift_beginAccess(*(void *)(v0 + 184) + *(void *)(v0 + 280), v0 + 64, 33LL, 0LL);
  uint64_t v2 = sub_1001C8084(v1);
  uint64_t v4 = v3;
  swift_endAccess(v0 + 64);
  swift_unknownObjectRelease(v2);

  if (qword_100643FB8 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v6 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v7 = *(void *)(v0 + 216);
  uint64_t v8 = *(void *)(v0 + 184);
  uint64_t v9 = *(void *)(v0 + 168);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v10, (uint64_t)qword_1006494F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v9, v7);
  uint64_t v11 = swift_retain_n(v8, 2LL);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v35 = *(void *)(v0 + 280);
    uint64_t v14 = *(void *)(v0 + 232);
    uint64_t v33 = *(void *)(v0 + 224);
    uint64_t v15 = *(void *)(v0 + 216);
    uint64_t v16 = *(void *)(v0 + 184);
    uint64_t v17 = swift_slowAlloc(22LL, -1LL);
    uint64_t v34 = swift_slowAlloc(32LL, -1LL);
    uint64_t v36 = v34;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v18 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter(v15, v18);
    uint64_t v21 = (const char *)v20;
    *(void *)(v0 + 144) = sub_10018CDB4(v19, v20, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v17 + 4, v17 + 12);
    __n128 v22 = swift_bridgeObjectRelease(v21);
    (*(void (**)(uint64_t, uint64_t, __n128))(v33 + 8))(v14, v15, v22);
    *(_WORD *)(v17 + 12) = 2048;
    uint64_t v23 = *(void *)(*(void *)(v16 + v35) + 16LL);
    swift_release(v16);
    *(void *)(v0 + 136) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v17 + 14, v17 + 22);
    swift_release(v16);
    _os_log_impl( (void *)&_mh_execute_header,  v12,  v13,  "Removed bonjour handler for transferID: %s count: %ld",  (uint8_t *)v17,  0x16u);
    swift_arrayDestroy(v34, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1LL, -1LL);
    swift_slowDealloc(v17, -1LL, -1LL);
  }

  else
  {
    uint64_t v25 = *(void *)(v0 + 224);
    uint64_t v24 = *(void *)(v0 + 232);
    uint64_t v26 = *(void *)(v0 + 216);
    uint64_t v27 = *(void *)(v0 + 184);
    swift_release(v27);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    swift_release(v27);
  }

  uint64_t v28 = *(void *)(v0 + 296);
  uint64_t v29 = *(void **)(v0 + 304);
  sub_1002322D4(1);
  swift_unknownObjectRelease(v28);

  uint64_t v30 = *(void *)(v0 + 232);
  uint64_t v31 = *(void *)(v0 + 208);
  swift_task_dealloc(*(void *)(v0 + 240));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

char *sub_100231514(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID(0LL);
  __chkstk_darwin(v4);
  uint64_t v157 = (char *)v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v8);
  os_log_type_t v13 = (char *)v151 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v151 - v14;
  uint64_t v16 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v158 = (char **)((char *)v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v155 = (uint64_t)v151 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v156 = (uint64_t)v151 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v159 = (char *)v151 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char **)((char *)v151 - v25);
  uint64_t v160 = a1;
  sub_1001A4B84(a1, (uint64_t)v151 - v25, v27);
  if (swift_getEnumCaseMultiPayload(v26, v16) == 1)
  {
    (*(void (**)(char *, char **, uint64_t))(v7 + 32))(v13, v26, v6);
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v28(v10, v13, v6);
    uint64_t v29 = (const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers);
    __n128 v30 = swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers,  v164,  32LL,  0LL);
    uint64_t v31 = *v29;
    uint64_t v32 = *((void *)*v29 + 2);
    uint64_t v157 = v13;
    uint64_t v33 = (uint64_t)v10;
    if (v32 && (unint64_t v34 = sub_1003AD580((uint64_t)v10), (v35 & 1) != 0))
    {
      id v36 = *(id *)(*((void *)v31 + 7) + 8 * v34);
      uint64_t v37 = v28;
    }

    else
    {
      ((void (*)(char *, char *, uint64_t, __n128))v28)(v15, v13, v6, v30);
      uint64_t v42 = (uint64_t)v159;
      sub_1001A4B84(v160, (uint64_t)v159, type metadata accessor for SDAirDropServerConnectionIdentity);
      uint64_t v43 = *(void **)(v2 + 48);
      uint64_t v44 = *(void **)(v2 + 56);
      uint64_t v155 = v33;
      uint64_t v153 = v28;
      uint64_t v46 = *(void **)(v2 + 64);
      uint64_t v45 = *(void *)(v2 + 72);
      v151[0] = *(id *)(v2 + 88);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2 + 32, v47);
      BOOL v154 = (char *)v7;
      uint64_t v49 = Strong;
      uint64_t v152 = *(void *)(v2 + 40);
      v151[1] = objc_allocWithZone((Class)type metadata accessor for SDAirDropReceiveHandler(0LL));
      swift_retain(v2);
      id v50 = v43;
      uint64_t v156 = v6;
      uint64_t v51 = (uint64_t)v15;
      id v52 = v50;
      id v53 = v44;
      id v54 = v46;
      swift_retain(v45);
      id v55 = v151[0];
      id v36 = sub_100429114(v51, v42, v52, v53, v54, v45, v55, v2, (uint64_t)&off_1005D5E10, v49, v152);

      uint64_t v15 = (char *)v51;
      uint64_t v6 = v156;

      uint64_t v37 = v153;
      uint64_t v33 = v155;
      swift_release(v45);

      os_log_type_t v13 = v157;
      swift_release(v2);
      uint64_t v56 = v49;
      uint64_t v7 = (uint64_t)v154;
      swift_unknownObjectRelease(v56);
    }

    uint64_t v57 = (uint64_t)v158;
    swift_endAccess(v164);
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v58(v33, v6);
    v37(v15, v13, v6);
    swift_beginAccess(v29, v164, 33LL, 0LL);
    uint64_t v59 = (char *)v36;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v29);
    uint64_t v162 = *v29;
    void *v29 = (const char *)0x8000000000000000LL;
    uint64_t v159 = v59;
    sub_1003B26D4((uint64_t)v59, (uint64_t)v15, isUniquelyReferenced_nonNull_native);
    uint64_t v61 = *v29;
    void *v29 = v162;
    __n128 v62 = swift_bridgeObjectRelease(v61);
    ((void (*)(char *, uint64_t, __n128))v58)(v15, v6, v62);
    swift_endAccess(v164);
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v63 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v63, (uint64_t)qword_1006494F0);
    uint64_t v64 = sub_1001A4B84(v160, v57, type metadata accessor for SDAirDropServerConnectionIdentity);
    uint64_t v65 = (os_log_s *)Logger.logObject.getter(v64);
    os_log_type_t v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = v6;
      uint64_t v68 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v69 = swift_slowAlloc(32LL, -1LL);
      v164[0] = v69;
      *(_DWORD *)uint64_t v68 = 136315138;
      unint64_t v70 = sub_1003E8364();
      BOOL v72 = (const char *)v71;
      uint64_t v162 = (const char *)sub_10018CDB4(v70, v71, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v162, &v163, v68 + 4, v68 + 12);
      swift_bridgeObjectRelease(v72);
      sub_1001A4BC8(v57, type metadata accessor for SDAirDropServerConnectionIdentity);
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "Added quic connection %s", v68, 0xCu);
      swift_arrayDestroy(v69, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1LL, -1LL);
      uint64_t v73 = v68;
      uint64_t v6 = v67;
      swift_slowDealloc(v73, -1LL, -1LL);
    }

    else
    {
      sub_1001A4BC8(v57, type metadata accessor for SDAirDropServerConnectionIdentity);
    }

    v58((uint64_t)v157, v6);
    return v159;
  }

  uint64_t v38 = *v26;
  sub_1004441B0();
  uint64_t v41 = v40;
  if (v39 == 0x65766F637369442FLL && v40 == (const char *)0xE900000000000072LL)
  {
    swift_bridgeObjectRelease((const char *)0xE900000000000072LL);
  }

  else
  {
    char v74 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, 0x65766F637369442FLL, 0xE900000000000072LL, 0LL);
    swift_bridgeObjectRelease(v41);
    if ((v74 & 1) == 0)
    {
      uint64_t v115 = (char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers);
      swift_beginAccess( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers,  v164,  0LL,  0LL);
      uint64_t v158 = v115;
      uint64_t v117 = *((void *)*v115 + 2);
      if (v117)
      {
        unint64_t v78 = (id *)(*v115 + 40);
        while (v38 != *(v78 - 1))
        {
          v78 += 2;
          if (!--v117) {
            goto LABEL_32;
          }
        }

        goto LABEL_43;
      }

LABEL_41:
      swift_unknownObjectRelease(v93);
      swift_release(v2);
      sub_1001A4BC8(v104, type metadata accessor for SDAirDropServerConnectionIdentity);

      swift_release(v2);
      return v159;
    }
  }

  uint64_t v75 = (char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourDiscoveryHandlers);
  swift_beginAccess( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourDiscoveryHandlers,  v164,  0LL,  0LL);
  uint64_t v158 = v75;
  uint64_t v77 = *((void *)*v75 + 2);
  if (!v77)
  {
LABEL_18:
    uint64_t v79 = v157;
    UUID.init()(v76);
    SFAirDrop.TransferIdentifier.init(_:)(v79);
    uint64_t v157 = v38;
    uint64_t v80 = (uint64_t)v159;
    sub_1001A4B84(v160, (uint64_t)v159, type metadata accessor for SDAirDropServerConnectionIdentity);
    uint64_t v81 = *(void **)(v2 + 48);
    uint64_t v82 = *(void **)(v2 + 56);
    BOOL v154 = v15;
    uint64_t v84 = *(void **)(v2 + 64);
    uint64_t v83 = *(void *)(v2 + 72);
    os_log_type_t v85 = *(void **)(v2 + 88);
    uint64_t v87 = swift_unknownObjectWeakLoadStrong(v2 + 32, v86);
    uint64_t v155 = *(void *)(v2 + 40);
    uint64_t v153 = (void (*)(char *, char *, uint64_t))objc_allocWithZone((Class)type metadata accessor for SDAirDropReceiveHandler(0LL));
    id v88 = v81;
    id v89 = v82;
    id v90 = v84;
    swift_retain(v83);
    id v91 = v85;
    swift_retain(v2);
    uint64_t v92 = v80;
    uint64_t v93 = v157;
    id v94 = sub_100429114((uint64_t)v154, v92, v88, v89, v90, v83, v91, v2, (uint64_t)&off_1005D5E10, v87, v155);

    swift_release(v83);
    swift_release(v2);
    swift_unknownObjectRelease(v87);
    uint64_t v95 = v158;
    swift_beginAccess(v158, &v162, 33LL, 0LL);
    uint64_t v96 = *v95;
    swift_unknownObjectRetain(v93);
    uint64_t v159 = (char *)v94;
    char v97 = swift_isUniquelyReferenced_nonNull_native(v96);
    *uint64_t v95 = v96;
    if ((v97 & 1) == 0)
    {
      uint64_t v96 = sub_10018BD88(0LL, *((void *)v96 + 2) + 1LL, 1, v96);
      *uint64_t v158 = v96;
    }

    unint64_t v99 = *((void *)v96 + 2);
    unint64_t v98 = *((void *)v96 + 3);
    uint64_t v100 = v160;
    if (v99 >= v98 >> 1)
    {
      uint64_t v96 = sub_10018BD88((char *)(v98 > 1), v99 + 1, 1, v96);
      *uint64_t v158 = v96;
    }

    *((void *)v96 + 2) = v99 + 1;
    uint64_t v101 = &v96[16 * v99];
    id v102 = v159;
    *((void *)v101 + 4) = v93;
    *((void *)v101 + 5) = v102;
    swift_endAccess(&v162);
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v103 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v103, (uint64_t)qword_1006494F0);
    uint64_t v104 = v156;
    sub_1001A4B84(v100, v156, type metadata accessor for SDAirDropServerConnectionIdentity);
    uint64_t v105 = swift_retain_n(v2, 2LL);
    uint64_t v106 = (os_log_s *)Logger.logObject.getter(v105);
    os_log_type_t v107 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v106, v107))
    {
      uint64_t v108 = swift_slowAlloc(22LL, -1LL);
      uint64_t v109 = swift_slowAlloc(32LL, -1LL);
      uint64_t v162 = (const char *)v109;
      *(_DWORD *)uint64_t v108 = 136315394;
      unint64_t v110 = sub_1003E8364();
      uint64_t v112 = (const char *)v111;
      uint64_t v161 = sub_10018CDB4(v110, v111, (uint64_t *)&v162);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, &v162, v108 + 4, v108 + 12);
      swift_bridgeObjectRelease(v112);
      sub_1001A4BC8(v104, type metadata accessor for SDAirDropServerConnectionIdentity);
      *(_WORD *)(v108 + 12) = 2048;
      uint64_t v113 = *((void *)*v158 + 2);
      swift_release(v2);
      uint64_t v161 = v113;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, &v162, v108 + 14, v108 + 22);
      swift_release(v2);
      _os_log_impl( (void *)&_mh_execute_header,  v106,  v107,  "Added bonjour connection %s count: %ld",  (uint8_t *)v108,  0x16u);
      swift_arrayDestroy(v109, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v114 = v109;
LABEL_40:
      swift_slowDealloc(v114, -1LL, -1LL);
      swift_slowDealloc(v108, -1LL, -1LL);
      swift_unknownObjectRelease(v93);

      return v159;
    }

    goto LABEL_41;
  }

  unint64_t v78 = (id *)(*v75 + 40);
  while (v38 != *(v78 - 1))
  {
    v78 += 2;
    if (!--v77) {
      goto LABEL_18;
    }
  }

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

      swift_once(&qword_100644138, sub_1002E9860);
      goto LABEL_36;
    }

    uint64_t v25 = *(void *)(v56 + 8 * v26);
    if (!v25) {
      break;
    }
    uint64_t v20 = v26;
LABEL_28:
    uint64_t v18 = (v25 - 1) & v25;
    uint64_t v23 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_29:
    uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    v27(v10, *((void *)v14 + 6) + *(void *)(v2 + 72) * v23, v1);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v10, 0LL, 1LL, v1);
    uint64_t v58 = v20;
    (*(void (**)(const char **, char *, uint64_t))(v2 + 32))(v7, v10, v1);
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v28 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v28, (uint64_t)qword_10064D970);
    uint64_t v29 = ((uint64_t (*)(char *, const char **, uint64_t))v27)(v5, v7, v1);
    __n128 v30 = (os_log_s *)Logger.logObject.getter(v29);
    uint64_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = v5;
      uint64_t v33 = swift_slowAlloc(12LL, -1LL);
      unint64_t v34 = v14;
      char v35 = swift_slowAlloc(32LL, -1LL);
      uint64_t v59 = v35;
      *(_DWORD *)uint64_t v33 = v53.n128_u32[0];
      id v36 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter(v1, v36);
      uint64_t v39 = (const char *)v38;
      *(void *)(v33 + 4) = sub_10018CDB4(v37, v38, &v59);
      uint64_t v40 = swift_bridgeObjectRelease(v39);
      uint64_t v21 = *(void (**)(char *, uint64_t, __n128))(v2 + 8);
      v21(v32, v1, v40);
      _os_log_impl( (void *)&_mh_execute_header,  v30,  v31,  "Browse client %s still present after screen off",  (uint8_t *)v33,  0xCu);
      swift_arrayDestroy(v35, 1LL, v52);
      uint64_t v41 = v35;
      uint64_t v14 = v34;
      swift_slowDealloc(v41, -1LL, -1LL);
      uint64_t v42 = v33;
      uint64_t v5 = v32;
      uint64_t v7 = v54;
      uint64_t v10 = v55;
      swift_slowDealloc(v42, -1LL, -1LL);
    }

    else
    {
      uint64_t v21 = *(void (**)(char *, uint64_t, __n128))(v2 + 8);
      ((void (*)(char *, uint64_t))v21)(v5, v1);
    }

    ((void (*)(const char **, uint64_t))v21)(v7, v1);
    uint64_t v20 = v58;
  }

  while (1)
  {
    uint64_t v20 = v26 + 1;
    if (__OFADD__(v26, 1LL)) {
      break;
    }
    if (v20 >= v57) {
      goto LABEL_34;
    }
    uint64_t v25 = *(void *)(v56 + 8 * v20);
    ++v26;
    if (v25) {
      goto LABEL_28;
    }
  }

  __break(1u);
}

  uint64_t result = swift_release(v8);
  *uint64_t v3 = v10;
  return result;
}

  uint64_t result = swift_release(v11);
  *uint64_t v6 = v13;
  return result;
}

void sub_1002322D4(char a1)
{
  uint64_t v3 = type metadata accessor for SFPlatform(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (!a1)
  {
    uint64_t v15 = *(void **)(v1 + 48);
    if (![v15 discoverableLevel]) {
      goto LABEL_19;
    }
    id v14 = [v15 bluetoothEnabledIncludingRestricted];
    if (!(_DWORD)v14) {
      goto LABEL_19;
    }
    goto LABEL_14;
  }

  if (a1 == 1)
  {
    uint64_t v7 = *(void **)(v1 + 48);
    if (![v7 discoverableLevel]) {
      goto LABEL_19;
    }
    uint64_t v8 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes;
    swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes,  v20,  0LL,  0LL);
    if (!*(void *)(*(void *)v8 + 16LL)) {
      goto LABEL_19;
    }
    id v9 = [v7 bluetoothAddress];
    if (!v9) {
      goto LABEL_19;
    }
    uint64_t v10 = v9;
    uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v9);
    unint64_t v13 = v12;

    id v14 = (id)sub_100189B20(v11, v13);
LABEL_14:
    static SFPlatform.watchOS.getter(v14);
    char v16 = static SFPlatform.isPlatform(_:)(v6);
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    if ((v16 & 1) == 0) {
      return;
    }
LABEL_19:
    sub_10022D314(a1, 0);
    return;
  }

  uint64_t v17 = *(void **)(v1 + 48);
  uint64_t v18 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions;
  swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions,  v20,  0LL,  0LL);
  if (!*(void *)(*(void *)v18 + 16LL)) {
    goto LABEL_19;
  }
}

uint64_t sub_1002324FC(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a2;
  uint64_t v3 = type metadata accessor for SDAirDropServerConnection(0LL);
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v42 + 64);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v43 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v39 - v6);
  uint64_t v8 = sub_100183098(&qword_100649708);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v40 = (uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v39 - v16);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v39 - v18;
  sub_100236F5C(a1, (uint64_t)v10);
  sub_1001A4B40((uint64_t)v10, (uint64_t)v19, type metadata accessor for SDAirDropServerConnectionIdentity);
  sub_1001A4B84((uint64_t)v19, (uint64_t)v17, type metadata accessor for SDAirDropServerConnectionIdentity);
  if (swift_getEnumCaseMultiPayload(v17, v11) == 1)
  {
    sub_1001A4BC8((uint64_t)v19, type metadata accessor for SDAirDropServerConnectionIdentity);
    uint64_t v21 = (uint64_t)v17;
  }

  else
  {
    swift_unknownObjectRelease(*v17);
    uint64_t v22 = v41;
    sub_1001A4B84(v41, (uint64_t)v7, type metadata accessor for SDAirDropServerConnection);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v3);
    uint64_t v24 = *v7;
    if (EnumCaseMultiPayload > 1)
    {
      uint64_t v25 = (char *)v7 + *(int *)(sub_100183098(&qword_100649710) + 48);
      uint64_t v26 = type metadata accessor for UUID(0LL);
      uint64_t EnumCaseMultiPayload = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8LL))(v25, v26);
    }

    uint64_t v39 = NWConnection.nw.getter(EnumCaseMultiPayload);
    swift_release(v24);
    uint64_t v27 = swift_allocObject(&unk_1005D5E80, 24LL, 7LL);
    swift_weakInit(v27 + 16);
    uint64_t v28 = v22;
    uint64_t v29 = v43;
    sub_1001A4B84(v28, v43, type metadata accessor for SDAirDropServerConnection);
    uint64_t v30 = v40;
    sub_1001A4B84((uint64_t)v19, v40, type metadata accessor for SDAirDropServerConnectionIdentity);
    uint64_t v31 = *(unsigned __int8 *)(v42 + 80);
    uint64_t v32 = (v31 + 16) & ~v31;
    unint64_t v33 = (v4 + v32 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v34 = *(unsigned __int8 *)(v12 + 80);
    uint64_t v35 = (v34 + v33 + 8) & ~v34;
    uint64_t v36 = swift_allocObject(&unk_1005D5EA8, v35 + v13, v31 | v34 | 7);
    sub_1001A4B40(v29, v36 + v32, type metadata accessor for SDAirDropServerConnection);
    *(void *)(v36 + v33) = v27;
    sub_1001A4B40(v30, v36 + v35, type metadata accessor for SDAirDropServerConnectionIdentity);
    aBlock[4] = sub_1002372DC;
    uint64_t v45 = v36;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_1001B9FE4;
    aBlock[3] = &unk_1005D5EC0;
    uint64_t v37 = _Block_copy(aBlock);
    swift_release(v45);
    uint64_t v38 = v39;
    nw_connection_set_read_close_handler(v39, v37);
    _Block_release(v37);
    swift_unknownObjectRelease(v38);
    uint64_t v21 = (uint64_t)v19;
  }

  return sub_1001A4BC8(v21, type metadata accessor for SDAirDropServerConnectionIdentity);
}

uint64_t sub_1002328B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a2;
  uint64_t v7 = type metadata accessor for NWConnection.State(0LL);
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  uint64_t v43 = *(void *)(v41 + 64);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = v9;
  uint64_t v10 = type metadata accessor for SDAirDropServerConnection(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v38 = (uint64_t)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_100183098(&qword_100649708);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = v19;
  uint64_t v20 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56LL))(v19, 1LL, 1LL, v20);
  uint64_t v21 = swift_allocObject(&unk_1005D5E80, 24LL, 7LL);
  swift_weakInit(v21 + 16);
  sub_100236F5C(a3, (uint64_t)v16);
  uint64_t v22 = v38;
  sub_1001A4B84(a4, v38, type metadata accessor for SDAirDropServerConnection);
  uint64_t v23 = v41;
  uint64_t v24 = v9;
  uint64_t v25 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v24, a1, v42);
  uint64_t v26 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v27 = (v26 + 40) & ~v26;
  uint64_t v28 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v29 = (v15 + v28 + v27) & ~v28;
  uint64_t v30 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v31 = v23;
  uint64_t v32 = (v12 + v30 + v29) & ~v30;
  unint64_t v33 = (char *)swift_allocObject(&unk_1005D5F20, v32 + v43, v26 | v28 | v30 | 7);
  *((void *)v33 + 2) = 0LL;
  *((void *)v33 + 3) = 0LL;
  *((void *)v33 + 4) = v21;
  sub_1001870BC((uint64_t)v16, (uint64_t)&v33[v27], &qword_100649708);
  sub_1001A4B40(v22, (uint64_t)&v33[v29], type metadata accessor for SDAirDropServerConnection);
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v33[v32], v37, v25);
  uint64_t v34 = sub_1001B3438((uint64_t)v39, (uint64_t)&unk_1006497A8, (uint64_t)v33);
  return swift_release(v34);
}

uint64_t sub_100232B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  _OWORD v7[5] = a1;
  return swift_task_switch(sub_100232B44, 0LL, 0LL);
}

uint64_t sub_100232B44()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v1);
  *(void *)(v0 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = Strong;
  if (Strong)
  {
    uint64_t v3 = (void *)swift_task_alloc(dword_1006497B4);
    *(void *)(v0 + 88) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100232BE4;
    return sub_100232CA4(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
  }

  else
  {
    **(_BYTE **)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_100232BE4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 88);
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_100232C70;
  }

  else
  {
    swift_release(*(void *)(v2 + 80));
    uint64_t v4 = sub_100232C50;
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_100232C50()
{
  **(_BYTE **)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(void *)(v0 + 80) == 0LL;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100232C70()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100232CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  unint64_t v5 = (*(void *)(*(void *)(sub_100183098(&qword_100649708) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[8] = swift_task_alloc(v5);
  v4[9] = swift_task_alloc(v5);
  uint64_t v6 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  v4[10] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[11] = v7;
  v4[12] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for NWError(0LL);
  void v4[13] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[14] = v9;
  unint64_t v10 = (*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[15] = swift_task_alloc(v10);
  _BYTE v4[16] = swift_task_alloc(v10);
  v4[17] = swift_task_alloc(v10);
  v4[18] = swift_task_alloc(v10);
  uint64_t v11 = type metadata accessor for NWConnection.State(0LL);
  void v4[19] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v4[20] = v12;
  v4[21] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100232DE4, static AirDropActor.shared, 0LL);
}

uint64_t sub_100232DE4()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 152);
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 16))(v2, *(void *)(v0 + 48), v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v3);
  if (v4 == enum case for NWConnection.State.waiting(_:))
  {
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v6 = *(void *)(v0 + 144);
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 112);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 160) + 96LL))(v5, *(void *)(v0 + 152));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v10 = *(void *)(v0 + 136);
    uint64_t v9 = *(void *)(v0 + 144);
    uint64_t v12 = *(void *)(v0 + 104);
    uint64_t v11 = *(void *)(v0 + 112);
    uint64_t v13 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v13, (uint64_t)qword_1006494F0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    uint64_t v15 = v14(v10, v9, v12);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.default.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void *)(v0 + 136);
    uint64_t v20 = *(void *)(v0 + 104);
    uint64_t v21 = *(void *)(v0 + 112);
    if (v18)
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v104 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v22 = 138412290;
      uint64_t v23 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v24 = swift_allocError(v20, v23, 0LL, 0LL);
      v14(v25, v19, v20);
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError(v24);
      *(void *)(v0 + 24) = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v22 + 4, v22 + 12);
      *uint64_t v104 = v26;
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v27(v19, v20);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "AirDrop connection waiting with error %@", v22, 0xCu);
      uint64_t v28 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v104, 1LL, v28);
      swift_slowDealloc(v104, -1LL, -1LL);
      swift_slowDealloc(v22, -1LL, -1LL);
    }

    else
    {

      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v27(v19, v20);
    }

    v27(*(void *)(v0 + 144), *(void *)(v0 + 104));
    goto LABEL_27;
  }

  if (v4 == enum case for NWConnection.State.failed(_:))
  {
    uint64_t v29 = *(void *)(v0 + 168);
    uint64_t v30 = *(void *)(v0 + 128);
    uint64_t v31 = *(void *)(v0 + 104);
    uint64_t v32 = *(void *)(v0 + 112);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 160) + 96LL))(v29, *(void *)(v0 + 152));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v30, v29, v31);
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v33 = *(void *)(v0 + 120);
    uint64_t v34 = *(void *)(v0 + 128);
    uint64_t v35 = *(void *)(v0 + 104);
    uint64_t v36 = *(void *)(v0 + 112);
    uint64_t v37 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v37, (uint64_t)qword_1006494F0);
    uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    uint64_t v39 = v38(v33, v34, v35);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.error.getter(v40);
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v43 = *(void *)(v0 + 112);
    uint64_t v44 = *(void *)(v0 + 120);
    uint64_t v45 = *(void *)(v0 + 104);
    if (v42)
    {
      uint64_t v105 = (void (*)(uint64_t, uint64_t, uint64_t))v38;
      uint64_t v46 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v47 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v46 = 138412290;
      uint64_t v48 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v49 = swift_allocError(v45, v48, 0LL, 0LL);
      v105(v50, v44, v45);
      uint64_t v51 = _swift_stdlib_bridgeErrorToNSError(v49);
      *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v51;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v46 + 4, v46 + 12);
      *uint64_t v47 = v51;
      uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v105;
      id v52 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v52(v44, v45);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "AirDrop connection failed with error %@", v46, 0xCu);
      uint64_t v53 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v47, 1LL, v53);
      swift_slowDealloc(v47, -1LL, -1LL);
      swift_slowDealloc(v46, -1LL, -1LL);
    }

    else
    {
      id v52 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v52(*(void *)(v0 + 120), *(void *)(v0 + 104));
    }

    uint64_t v60 = *(void *)(v0 + 128);
    uint64_t v61 = *(void *)(v0 + 104);
    uint64_t v62 = *(void *)(v0 + 32);
    sub_1003E8564(0);
    uint64_t v63 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
    uint64_t v64 = swift_allocError(v61, v63, 0LL, 0LL);
    v38(v65, v60, v61);
    sub_1002337C4(v62, v64);
    v52(v60, v61);
    swift_errorRelease(v64);
    goto LABEL_27;
  }

  if (v4 == enum case for NWConnection.State.setup(_:))
  {
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v54 = type metadata accessor for Logger(0LL);
    uint64_t v55 = sub_100186DE4(v54, (uint64_t)qword_1006494F0);
    uint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
    os_log_type_t v57 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v56, v57)) {
      goto LABEL_26;
    }
    uint64_t v58 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v58 = 0;
    uint64_t v59 = "AirDrop connection setting up";
LABEL_25:
    _os_log_impl((void *)&_mh_execute_header, v56, v57, v59, v58, 2u);
    swift_slowDealloc(v58, -1LL, -1LL);
LABEL_26:

    goto LABEL_27;
  }

  if (v4 == enum case for NWConnection.State.preparing(_:))
  {
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v66 = type metadata accessor for Logger(0LL);
    uint64_t v67 = sub_100186DE4(v66, (uint64_t)qword_1006494F0);
    uint64_t v56 = (os_log_s *)Logger.logObject.getter(v67);
    os_log_type_t v57 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v56, v57)) {
      goto LABEL_26;
    }
    uint64_t v58 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v58 = 0;
    uint64_t v59 = "AirDrop connection preparing";
    goto LABEL_25;
  }

  if (v4 == enum case for NWConnection.State.ready(_:))
  {
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v76 = type metadata accessor for Logger(0LL);
    uint64_t v77 = sub_100186DE4(v76, (uint64_t)qword_1006494F0);
    unint64_t v78 = (os_log_s *)Logger.logObject.getter(v77);
    os_log_type_t v79 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v80 = 0;
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "AirDrop connection ready", v80, 2u);
      swift_slowDealloc(v80, -1LL, -1LL);
    }

    uint64_t v81 = *(void *)(v0 + 80);
    uint64_t v82 = *(void *)(v0 + 88);
    uint64_t v83 = *(void *)(v0 + 72);
    uint64_t v84 = *(void *)(v0 + 32);

    sub_100236F5C(v84, v83);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v83, 1LL, v81) == 1)
    {
      sub_100187100(*(void *)(v0 + 72), &qword_100649708);
    }

    else
    {
      uint64_t v92 = *(void *)(v0 + 88);
      uint64_t v91 = *(void *)(v0 + 96);
      uint64_t v93 = *(void *)(v0 + 80);
      uint64_t v94 = *(void *)(v0 + 64);
      uint64_t v95 = *(void *)(v0 + 40);
      sub_1001A4B40(*(void *)(v0 + 72), v91, type metadata accessor for SDAirDropServerConnectionIdentity);
      sub_1001A4B84(v91, v94, type metadata accessor for SDAirDropServerConnectionIdentity);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v92 + 56))(v94, 0LL, 1LL, v93);
      sub_1002324FC(v94, v95);
      sub_100187100(v94, &qword_100649708);
      sub_1001A4BC8(v91, type metadata accessor for SDAirDropServerConnectionIdentity);
    }
  }

  else if (v4 == enum case for NWConnection.State.cancelled(_:))
  {
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v85 = type metadata accessor for Logger(0LL);
    uint64_t v86 = sub_100186DE4(v85, (uint64_t)qword_1006494F0);
    uint64_t v87 = (os_log_s *)Logger.logObject.getter(v86);
    os_log_type_t v88 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v87, v88))
    {
      id v89 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v89 = 0;
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "AirDrop connection invalidated", v89, 2u);
      swift_slowDealloc(v89, -1LL, -1LL);
    }

    uint64_t v90 = *(void *)(v0 + 32);

    sub_100233A38(v90);
  }

  else
  {
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v96 = type metadata accessor for Logger(0LL);
    uint64_t v97 = sub_100186DE4(v96, (uint64_t)qword_1006494F0);
    unint64_t v98 = (os_log_s *)Logger.logObject.getter(v97);
    os_log_type_t v99 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v98, v99))
    {
      uint64_t v100 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v100 = 0;
      _os_log_impl((void *)&_mh_execute_header, v98, v99, "Unknown AirDrop connection state", v100, 2u);
      swift_slowDealloc(v100, -1LL, -1LL);
    }

    uint64_t v102 = *(void *)(v0 + 160);
    uint64_t v101 = *(void *)(v0 + 168);
    uint64_t v103 = *(void *)(v0 + 152);

    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v101, v103);
  }

uint64_t sub_1002337C4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_100649708);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  os_log_type_t v17 = (char *)&v27 - v16;
  sub_100236F5C(a1, (uint64_t)v10);
  sub_1001A4B40((uint64_t)v10, (uint64_t)v17, type metadata accessor for SDAirDropServerConnectionIdentity);
  uint64_t v19 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v7, 1LL, 1LL, v19);
  sub_1001A4B84((uint64_t)v17, (uint64_t)v15, type metadata accessor for SDAirDropServerConnectionIdentity);
  swift_retain(v2);
  swift_errorRetain(a2);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v20 = static AirDropActor.shared;
  uint64_t v21 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v22 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v23 = (v22 + 40) & ~v22;
  unint64_t v24 = (v13 + v23 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v25 = (void *)swift_allocObject(&unk_1005D5F48, v24 + 8, v22 | 7);
  v25[2] = v20;
  uint64_t v25[3] = v21;
  v25[4] = v2;
  sub_1001A4B40((uint64_t)v15, (uint64_t)v25 + v23, type metadata accessor for SDAirDropServerConnectionIdentity);
  *(void *)((char *)v25 + v24) = a2;
  swift_retain(v20);
  uint64_t v26 = sub_1001B37E8((uint64_t)v7, (uint64_t)&unk_1006497C8, (uint64_t)v25);
  swift_release(v26);
  return sub_1001A4BC8((uint64_t)v17, type metadata accessor for SDAirDropServerConnectionIdentity);
}

uint64_t sub_100233A38(uint64_t a1)
{
  uint64_t v3 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_100649708);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - v15;
  __chkstk_darwin(v14);
  BOOL v18 = (char *)&v30 - v17;
  sub_100236F5C(a1, (uint64_t)v8);
  sub_1001A4B40((uint64_t)v8, (uint64_t)v18, type metadata accessor for SDAirDropServerConnectionIdentity);
  sub_1001A4B84((uint64_t)v18, (uint64_t)v16, type metadata accessor for SDAirDropServerConnectionIdentity);
  if (swift_getEnumCaseMultiPayload(v16, v9) == 1)
  {
    uint64_t v20 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8LL))(v16, v20);
    uint64_t v21 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v5, 1LL, 1LL, v21);
    sub_1001A4B84((uint64_t)v18, (uint64_t)v13, type metadata accessor for SDAirDropServerConnectionIdentity);
    uint64_t v22 = qword_100643F28;
    swift_retain(v1);
    if (v22 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    uint64_t v23 = static AirDropActor.shared;
    uint64_t v24 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    uint64_t v25 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v26 = (v25 + 40) & ~v25;
    uint64_t v27 = (void *)swift_allocObject(&unk_1005D5F70, v26 + v11, v25 | 7);
    v27[2] = v23;
    v27[3] = v24;
    v27[4] = v1;
    sub_1001A4B40((uint64_t)v13, (uint64_t)v27 + v26, type metadata accessor for SDAirDropServerConnectionIdentity);
    swift_retain(v23);
    uint64_t v28 = sub_1001B37E8((uint64_t)v5, (uint64_t)&unk_1006497D8, (uint64_t)v27);
    swift_release(v28);
    uint64_t v29 = (uint64_t)v18;
  }

  else
  {
    sub_1001A4BC8((uint64_t)v18, type metadata accessor for SDAirDropServerConnectionIdentity);
    uint64_t v29 = (uint64_t)v16;
  }

  return sub_1001A4BC8(v29, type metadata accessor for SDAirDropServerConnectionIdentity);
}

uint64_t sub_100233D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643FB8 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = sub_100186DE4(v12, (uint64_t)qword_1006494F0);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "AirDrop connection read close event", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  sub_1003E8564(0);
  uint64_t v17 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v11, 1LL, 1LL, v17);
  sub_1001A4B84( a3,  (uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL),  type metadata accessor for SDAirDropServerConnectionIdentity);
  uint64_t v18 = qword_100643F28;
  swift_retain(a2);
  if (v18 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v19 = static AirDropActor.shared;
  uint64_t v20 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v21 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = (v21 + 40) & ~v21;
  uint64_t v23 = (void *)swift_allocObject(&unk_1005D5EF8, v22 + v7, v21 | 7);
  v23[2] = v19;
  v23[3] = v20;
  void v23[4] = a2;
  sub_1001A4B40((uint64_t)v8, (uint64_t)v23 + v22, type metadata accessor for SDAirDropServerConnectionIdentity);
  swift_retain(v19);
  uint64_t v24 = sub_1001B3808((uint64_t)v11, (uint64_t)&unk_100649790, (uint64_t)v23);
  return swift_release(v24);
}

uint64_t sub_100233F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v6 = static AirDropActor.shared;
  v5[8] = static AirDropActor.shared;
  return swift_task_switch(sub_100233FE0, v6, 0LL);
}

uint64_t sub_100233FE0()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v1);
  *(void *)(v0 + 72) = Strong;
  if (Strong)
  {
    uint64_t v3 = type metadata accessor for CancellationError(0LL);
    uint64_t v4 = sub_100183F14( &qword_100646848,  (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError,  (uint64_t)&protocol conformance descriptor for CancellationError);
    uint64_t v5 = swift_allocError(v3, v4, 0LL, 0LL);
    *(void *)(v0 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v5;
    CancellationError.init()();
    uint64_t v6 = (void *)swift_task_alloc(dword_100649774);
    *(void *)(v0 + 88) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1002340CC;
    return sub_10022EF88(*(void *)(v0 + 56), v5);
  }

  else
  {
    **(_BYTE **)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1002340CC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 64LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 72LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 88LL));
  swift_errorRelease(v1);
  swift_release(v2);
  return swift_task_switch(sub_10023413C, v3, 0LL);
}

uint64_t sub_10023413C()
{
  **(_BYTE **)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(void *)(v0 + 72) == 0LL;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100234158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = (void *)swift_task_alloc(dword_100649774);
  *(void *)(v6 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_100195708;
  return sub_10022EF88(a5, a6);
}

uint64_t sub_1002341E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v7 = (void *)swift_task_alloc(dword_100649774);
  *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_100195708;
  return sub_10022EF88(a5, 0LL);
}

uint64_t sub_100234260()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 48);
  if ([v2 discoverableLevel])
  {
    if ([v2 discoverableLevel] == (id)2)
    {
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v3 = type metadata accessor for Logger(0LL);
      uint64_t v4 = sub_100186DE4(v3, (uint64_t)qword_1006494F0);
      uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
      os_log_type_t v6 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "Device in everyone mode", v7, 2u);
        swift_slowDealloc(v7, -1LL, -1LL);
      }

LABEL_19:
      uint64_t v18 = sub_1003810E8();
      unint64_t v20 = v19;
      swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes,  v22,  33LL,  0LL);
      sub_1003B5B34(v23, v18, v20);
      swift_endAccess(v22);
      sub_100189B20(v23[0], v23[1]);
      return 1LL;
    }

    if ((sub_1002E0214() & 1) != 0)
    {
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v13 = type metadata accessor for Logger(0LL);
      uint64_t v14 = sub_100186DE4(v13, (uint64_t)qword_1006494F0);
      os_log_type_t v15 = (os_log_s *)Logger.logObject.getter(v14);
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Device in contacts only mode", v17, 2u);
        swift_slowDealloc(v17, -1LL, -1LL);
      }
    }
  }

  else
  {
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v8 = type metadata accessor for Logger(0LL);
    uint64_t v9 = sub_100186DE4(v8, (uint64_t)qword_1006494F0);
    uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Device has AirDrop discovery OFF", v12, 2u);
      swift_slowDealloc(v12, -1LL, -1LL);
    }
  }

  return 0LL;
}

uint64_t sub_100234550(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v2);
  if (result)
  {
    uint64_t v4 = result;
    sub_1002345A4();
    return swift_release(v4);
  }

  return result;
}

uint64_t sub_1002345A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for TaskPriority(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1LL, 1LL, v5);
  uint64_t v7 = (void *)swift_allocObject(&unk_1005D5FE8, 40LL, 7LL);
  void v7[2] = 0LL;
  uint64_t v8 = v7 + 2;
  v7[3] = 0LL;
  v7[4] = v1;
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1LL, v5);
  uint64_t v10 = swift_retain(v1);
  if (v9 == 1)
  {
    sub_100187100((uint64_t)v4, &qword_100646560);
    uint64_t v11 = 0LL;
    uint64_t v12 = 0LL;
    uint64_t v13 = 7168LL;
  }

  else
  {
    unsigned __int8 v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v13 = v14 | 0x1C00LL;
    uint64_t v15 = *v8;
    if (*v8)
    {
      uint64_t v16 = v7[3];
      uint64_t ObjectType = swift_getObjectType(*v8);
      swift_unknownObjectRetain(v15);
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      uint64_t v12 = v18;
      swift_unknownObjectRelease(v15);
    }

    else
    {
      uint64_t v11 = 0LL;
      uint64_t v12 = 0LL;
    }
  }

  uint64_t v19 = swift_allocObject(&unk_1005D6010, 32LL, 7LL);
  *(void *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = &unk_100649818;
  *(void *)(v19 + 24) = v7;
  if (v12 | v11)
  {
    v23[0] = 0LL;
    v23[1] = 0LL;
    unint64_t v20 = v23;
    uint64_t v23[2] = v11;
    v23[3] = v12;
  }

  else
  {
    unint64_t v20 = 0LL;
  }

  uint64_t v21 = swift_task_create(v13, v20, (char *)&type metadata for () + 8, &unk_100649820, v19);
  return swift_release(v21);
}

void sub_100234778(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_appleIDState);
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_appleIDState);
  uint64_t v6 = v5[1];
  if (!v6)
  {
    *uint64_t v5 = a1;
    v5[1] = a2;
    sub_100237CC0(a1, a2);
    sub_100237CAC(v7, 0LL);
    return;
  }

  if (v6 == 1)
  {
    if (a2 == 1) {
      return;
    }
  }

  else if (a2 >= 2)
  {
    BOOL v8 = v7 == a1 && v6 == a2;
    if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v6, a1, a2, 0LL) & 1) != 0) {
      return;
    }
  }

  if (qword_100643FB8 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_1006494F0);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "AppleID change detected, stopping servers", v13, 2u);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  uint64_t v14 = *v5;
  unint64_t v15 = v5[1];
  *uint64_t v5 = a1;
  v5[1] = a2;
  sub_100237CC0(a1, a2);
  sub_100237CAC(v14, v15);
  sub_10022D314(1, 1);
  sub_10022D314(0, 1);
  sub_10022D314(2, 1);
}

uint64_t sub_100234940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = a4;
  return swift_task_switch(sub_100234958, 0LL, 0LL);
}

uint64_t sub_100234958()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + 48LL);
  unsigned int v2 = [v1 wirelessEnabled];
  *(_BYTE *)(v0 + 28) = v2;
  unsigned int v3 = [v1 bluetoothEnabledIncludingRestricted];
  *(_BYTE *)(v0 + 29) = v3;
  if (qword_100643FB8 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = sub_100186DE4(v4, (uint64_t)qword_1006494F0);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc(14LL, -1LL);
    *(_DWORD *)uint64_t v8 = 67109376;
    *(_DWORD *)(v0 + 24) = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 28, v8 + 4, v8 + 8);
    *(_WORD *)(v8 + 8) = 1024;
    *(_DWORD *)(v0 + 24) = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 28, v8 + 10, v8 + 14);
    _os_log_impl( (void *)&_mh_execute_header,  v6,  v7,  "Wireless/Bluetooth state changed - Wireless: %{BOOL}d Bluetooth: %{BOOL}d",  (uint8_t *)v8,  0xEu);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100234B00, static AirDropActor.shared, 0LL);
}

uint64_t sub_100234B00(__n128 a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  int v3 = *(_BYTE *)(v1 + 28) & *(_BYTE *)(v1 + 29) & 1;
  if (v3 != *(unsigned __int8 *)(v2
                                + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastWirelessBluetoothStateEnabled))
  {
    *(_BYTE *)(v2
             + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastWirelessBluetoothStateEnabled) = v3;
    a1 = sub_10022E074();
  }

  return (*(uint64_t (**)(__n128))(v1 + 8))(a1);
}

uint64_t sub_100234B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = v5;
  uint64_t v11 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for TaskPriority(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1LL, 1LL, v14);
  uint64_t v16 = (void *)swift_allocObject(a2, 40LL, 7LL);
  void v16[2] = 0LL;
  uint64_t v17 = v16 + 2;
  v16[3] = 0LL;
  v16[4] = v10;
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1LL, v14);
  uint64_t v19 = swift_retain(v10);
  if (v18 == 1)
  {
    sub_100187100((uint64_t)v13, &qword_100646560);
    uint64_t v20 = 0LL;
    uint64_t v21 = 0LL;
    uint64_t v22 = 7168LL;
  }

  else
  {
    unsigned __int8 v23 = TaskPriority.rawValue.getter(v19);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    uint64_t v22 = v23 | 0x1C00LL;
    uint64_t v24 = *v17;
    if (*v17)
    {
      uint64_t v25 = v16[3];
      uint64_t ObjectType = swift_getObjectType(*v17);
      swift_unknownObjectRetain(v24);
      uint64_t v20 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v25);
      uint64_t v21 = v27;
      swift_unknownObjectRelease(v24);
    }

    else
    {
      uint64_t v20 = 0LL;
      uint64_t v21 = 0LL;
    }
  }

  uint64_t v28 = swift_allocObject(a3, 32LL, 7LL);
  *(void *)(v28 + swift_unknownObjectWeakDestroy(v0 + 16) = a4;
  *(void *)(v28 + 24) = v16;
  if (v21 | v20)
  {
    v32[0] = 0LL;
    v32[1] = 0LL;
    uint64_t v29 = v32;
    void v32[2] = v20;
    v32[3] = v21;
  }

  else
  {
    uint64_t v29 = 0LL;
  }

  uint64_t v30 = swift_task_create(v22, v29, (char *)&type metadata for () + 8, a5, v28);
  return swift_release(v30);
}

uint64_t sub_100234D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = a4;
  return swift_task_switch(sub_100234D6C, 0LL, 0LL);
}

uint64_t sub_100234D6C()
{
  if (qword_100643FB8 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_1006494F0);
  uint64_t v3 = swift_retain(v1);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 16);
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc(14LL, -1LL);
    *(_DWORD *)uint64_t v8 = 67109376;
    uint64_t v9 = *(void **)(v7 + 48);
    *(_DWORD *)(v0 + 24) = [v9 screenOn];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 28, v8 + 4, v8 + 8);
    *(_WORD *)(v8 + 8) = 1024;
    *(_DWORD *)(v0 + 24) = [v9 isMirroringActive];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 28, v8 + 10, v8 + 14);
    swift_release(v7);
    _os_log_impl( (void *)&_mh_execute_header,  v4,  v5,  "Screen state changed %{BOOL}d - mirroring state %{BOOL}d",  (uint8_t *)v8,  0xEu);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
    swift_release(*(void *)(v0 + 16));
  }

  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100234F28, static AirDropActor.shared, 0LL);
}

uint64_t sub_100234F28()
{
  return swift_task_switch(sub_100234F64, 0LL, 0LL);
}

uint64_t sub_100234F64()
{
  return swift_task_switch(sub_100234F80, static AirDropActor.shared, 0LL);
}

uint64_t sub_100234F80()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100234FB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v114 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v108 = (char *)&v100 - v6;
  uint64_t v7 = sub_100183098(&qword_100649760);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v100 - v11;
  uint64_t v13 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer;
  uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer);
  unint64_t v110 = v10;
  uint64_t v112 = (char *)&v100 - v11;
  if (v14)
  {
    uint64_t v15 = *(void *)(v13 + 8);
    uint64_t ObjectType = swift_getObjectType(v14);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 32);
    swift_unknownObjectRetain(v14);
    uint64_t v18 = ObjectType;
    uint64_t v12 = v112;
    uint64_t v19 = v17(v18, v15);
    uint64_t v10 = v110;
    uint64_t v20 = v19;
    swift_unknownObjectRelease(v14);
    if (v20)
    {
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v21 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v21, (uint64_t)qword_1006494F0);
      swift_retain_n(v20, 2LL);
      uint64_t v22 = swift_retain_n(v1, 2LL);
      unsigned __int8 v23 = (os_log_s *)Logger.logObject.getter(v22);
      os_log_type_t v24 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = swift_slowAlloc(22LL, -1LL);
        uint64_t v116 = swift_slowAlloc(32LL, -1LL);
        uint64_t v123 = v116;
        *(_DWORD *)uint64_t v25 = 136315394;
        uint64_t v26 = NWListener.debugDescription.getter();
        uint64_t v28 = (const char *)v27;
        uint64_t v121 = sub_10018CDB4(v26, v27, &v123);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, v122, v25 + 4, v25 + 12);
        swift_release_n(v20, 2LL);
        swift_bridgeObjectRelease(v28);
        *(_WORD *)(v25 + 12) = 2048;
        uint64_t v29 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors;
        swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors,  v117,  0LL,  0LL);
        uint64_t v30 = *(void *)(*(void *)v29 + 16LL);
        swift_release(v1);
        uint64_t v121 = v30;
        uint64_t v10 = v110;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, v122, v25 + 14, v25 + 22);
        swift_release(v1);
        _os_log_impl( (void *)&_mh_execute_header,  v23,  v24,  "Application Service Server %s - errors: %ld",  (uint8_t *)v25,  0x16u);
        uint64_t v31 = v116;
        swift_arrayDestroy(v116, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v31, -1LL, -1LL);
        swift_slowDealloc(v25, -1LL, -1LL);
        swift_release(v20);
      }

      else
      {

        swift_release_n(v20, 3LL);
        swift_release_n(v1, 2LL);
      }

      uint64_t v12 = v112;
    }
  }

  uint64_t v32 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer);
  if (v32)
  {
    uint64_t v33 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer + 8);
    uint64_t v34 = swift_getObjectType(*(void *)(v1
                                        + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer));
    uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 32);
    swift_unknownObjectRetain(v32);
    uint64_t v36 = v34;
    uint64_t v12 = v112;
    uint64_t v37 = v35(v36, v33);
    uint64_t v10 = v110;
    uint64_t v38 = v37;
    swift_unknownObjectRelease(v32);
    if (v38)
    {
      if (qword_100643FB8 != -1) {
        swift_once(&qword_100643FB8, sub_100227D00);
      }
      uint64_t v39 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v39, (uint64_t)qword_1006494F0);
      swift_retain_n(v1, 2LL);
      uint64_t v40 = swift_retain_n(v38, 2LL);
      os_log_type_t v41 = (os_log_s *)Logger.logObject.getter(v40);
      os_log_type_t v42 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = swift_slowAlloc(22LL, -1LL);
        uint64_t v116 = swift_slowAlloc(32LL, -1LL);
        uint64_t v123 = v116;
        *(_DWORD *)uint64_t v43 = 136315394;
        uint64_t v44 = NWListener.debugDescription.getter();
        uint64_t v46 = (const char *)v45;
        uint64_t v121 = sub_10018CDB4(v44, v45, &v123);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, v122, v43 + 4, v43 + 12);
        swift_release_n(v38, 2LL);
        swift_bridgeObjectRelease(v46);
        *(_WORD *)(v43 + 12) = 2048;
        uint64_t v47 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors;
        swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors,  v118,  0LL,  0LL);
        uint64_t v48 = *(void *)(*(void *)v47 + 16LL);
        swift_release(v1);
        uint64_t v121 = v48;
        uint64_t v10 = v110;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, v122, v43 + 14, v43 + 22);
        swift_release(v1);
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "Bonjour Server %s - errors: %ld", (uint8_t *)v43, 0x16u);
        uint64_t v49 = v116;
        swift_arrayDestroy(v116, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v49, -1LL, -1LL);
        swift_slowDealloc(v43, -1LL, -1LL);
        swift_release(v38);
      }

      else
      {

        swift_release_n(v38, 3LL);
        swift_release_n(v1, 2LL);
      }

      uint64_t v12 = v112;
    }
  }

  uint64_t v50 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions;
  swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions,  &v123,  0LL,  0LL);
  if (*(void *)(*(void *)v50 + 16LL))
  {
    if (qword_100643FB8 != -1) {
      goto LABEL_61;
    }
    goto LABEL_19;
  }

uint64_t sub_100235C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = a4;
  return swift_task_switch(sub_100235C94, 0LL, 0LL);
}

uint64_t sub_100235C94()
{
  id v1 = [*(id *)(v0[2] + 48) myAppleID];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    uint64_t v5 = v4;
  }

  else
  {
    uint64_t v3 = 0LL;
    uint64_t v5 = 1LL;
  }

  v0[3] = v3;
  v0[4] = v5;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100235D44, static AirDropActor.shared, 0LL);
}

uint64_t sub_100235D44()
{
  uint64_t v2 = *(void *)(v0 + 24);
  unint64_t v1 = *(void *)(v0 + 32);
  sub_100234778(v2, v1);
  sub_100237CAC(v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100235DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  return swift_task_switch(sub_100235DD0, 0LL, 0LL);
}

uint64_t sub_100235DD0()
{
  if (qword_100643FB8 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_1006494F0);
  uint64_t v3 = swift_retain_n(v1, 2LL);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 24);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = swift_slowAlloc(32LL, -1LL);
    v18[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    id v10 = [*(id *)(v7 + 48) localHostName];
    uint64_t v17 = (uint64_t *)(v0 + 16);
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      uint64_t v14 = v13;
    }

    else
    {
      v18[1] = 0LL;
      v18[2] = 0xE000000000000000LL;
      _StringGuts.grow(_:)(17LL);
      swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
      uint64_t v14 = (const char *)0x80000001005046B0LL;
      uint64_t v12 = 0xD000000000000015LL;
    }

    uint64_t v15 = *(void *)(v0 + 24);
    *uint64_t v17 = sub_10018CDB4(v12, (unint64_t)v14, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v17, v0 + 24, v8 + 4, v8 + 12);
    swift_release_n(v15, 2LL);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Device name changed %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v7, 2LL);
  }

  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10023602C, static AirDropActor.shared, 0LL);
}

uint64_t sub_10023602C()
{
  if ((sub_100227D90() & 1) != 0)
  {
    sub_1002286E4(0LL);
    if ((sub_100227E7C() & 1) != 0) {
      sub_1002286E4(1LL);
    }
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002360C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = a4;
  return swift_task_switch(sub_1002360E0, 0LL, 0LL);
}

uint64_t sub_1002360E0()
{
  *(void *)(v0 + 24) = [*(id *)(*(void *)(v0 + 16) + 48) discoverableLevel];
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10023615C, static AirDropActor.shared, 0LL);
}

uint64_t sub_10023615C()
{
  double v1 = sub_10023618C(*(void *)(v0 + 24));
  return (*(uint64_t (**)(double))(v0 + 8))(v1);
}

double sub_10023618C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SFPlatform(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (*(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastDiscoverableLevel) != a1)
  {
    *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastDiscoverableLevel) = a1;
    static SFPlatform.watchOS.getter(v6);
    char v10 = static SFPlatform.isPlatform(_:)(v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    if ((v10 & 1) == 0)
    {
      sub_1003E9E60(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleScannerID);
      uint64_t v11 = (const char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes);
      *(void *)&double v12 = swift_beginAccess( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes,  v25,  1LL,  0LL).n128_u64[0];
      uint64_t v13 = *v11;
      void *v11 = (const char *)&_swiftEmptySetSingleton;
      swift_bridgeObjectRelease(v13, v12);
    }

    uint64_t v14 = (const char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes);
    *(void *)&double v15 = swift_beginAccess( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes,  v24,  1LL,  0LL).n128_u64[0];
    uint64_t v16 = *v14;
    *uint64_t v14 = (const char *)&_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v16, v15);
    sub_10022D314(1, 1);
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v17 = type metadata accessor for Logger(0LL);
    uint64_t v18 = sub_100186DE4(v17, (uint64_t)qword_1006494F0);
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      *(_DWORD *)uint64_t v21 = 134217984;
      uint64_t v23 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, v24, v21 + 4, v21 + 12);
      _os_log_impl( (void *)&_mh_execute_header,  v19,  v20,  "Discoverability mode changed stopping server - new mode: %ld",  v21,  0xCu);
      swift_slowDealloc(v21, -1LL, -1LL);
    }

    *(void *)&double result = sub_10022E074().n128_u64[0];
  }

  return result;
}

uint64_t sub_1002363BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = a4;
  return swift_task_switch(sub_1002363D4, 0LL, 0LL);
}

uint64_t sub_1002363D4()
{
  if ([*(id *)(*(void *)(v0 + 16) + 48) currentConsoleUser])
  {
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v1 = type metadata accessor for Logger(0LL);
    uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_1006494F0);
    uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  v4,  "User is logged in, starting app service server if needed",  v5,  2u);
      swift_slowDealloc(v5, -1LL, -1LL);
    }

    if (qword_100643F28 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    uint64_t v6 = static AirDropActor.shared;
    uint64_t v7 = sub_100236634;
  }

  else
  {
    if (qword_100643FB8 != -1) {
      swift_once(&qword_100643FB8, sub_100227D00);
    }
    uint64_t v8 = type metadata accessor for Logger(0LL);
    uint64_t v9 = sub_100186DE4(v8, (uint64_t)qword_1006494F0);
    char v10 = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      double v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)double v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "User logged out, stopping servers", v12, 2u);
      swift_slowDealloc(v12, -1LL, -1LL);
    }

    if (qword_100643F28 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    uint64_t v6 = static AirDropActor.shared;
    uint64_t v7 = sub_1002365E4;
  }

  return swift_task_switch(v7, v6, 0LL);
}

uint64_t sub_1002365E4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100236634()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023668C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for Notification(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  uint64_t v17 = swift_retain(a1);
  sub_100234B7C(v17, a4, a5, a6, a7);
  swift_release(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_10023675C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = a4;
  return swift_task_switch(sub_100236774, 0LL, 0LL);
}

uint64_t sub_100236774()
{
  if (qword_100643FB8 != -1) {
    swift_once(&qword_100643FB8, sub_100227D00);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_1006494F0);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v5 = 67109120;
    type metadata accessor for SFAirDropUserDefaults(0LL, v6);
    uint64_t v7 = (void *)static SFAirDropUserDefaults.shared.getter();
    char v8 = SFAirDropUserDefaults.cellularUsageEnabled.getter();

    *(_DWORD *)(v0 + 24) = v8 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 28, v5 + 4, v5 + 8);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Cellular usage changed to %{BOOL}d", v5, 8u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002368EC, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002368EC()
{
  if ((sub_100227D90() & 1) != 0)
  {
    sub_1002286E4(0LL);
    if ((sub_100227E7C() & 1) != 0) {
      sub_1002286E4(1LL);
    }
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100236964()
{
  swift_release(*(void *)(v0 + 72));
  swift_release(*(void *)(v0 + 80));

  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleScannerID;
  uint64_t v2 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  swift_bridgeObjectRelease(*(const char **)(v0
                                           + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes));
  swift_unknownObjectRelease(*(void *)(v0
                                       + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer));
  swift_bridgeObjectRelease(*(const char **)(v0
                                           + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors));
  swift_unknownObjectRelease(*(void *)(v0
                                       + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer));
  *(void *)&double v3 = swift_bridgeObjectRelease((const char *)*(void *)(v0
                                                                     + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors)).n128_u64[0];
  *(void *)&double v4 = swift_bridgeObjectRelease( (const char *)*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions),  v3).n128_u64[0];
  *(void *)&double v5 = swift_bridgeObjectRelease( (const char *)*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID),  v4).n128_u64[0];
  *(void *)&double v6 = swift_bridgeObjectRelease( (const char *)*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServerErrors),  v5).n128_u64[0];
  *(void *)&double v7 = swift_bridgeObjectRelease( (const char *)*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers),  v6).n128_u64[0];
  *(void *)&double v8 = swift_bridgeObjectRelease( (const char *)*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourDiscoveryHandlers),  v7).n128_u64[0];
  swift_bridgeObjectRelease( *(const char **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers),  v8);
  sub_100237CAC( *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_appleIDState),  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_appleIDState + 8));
  return v0;
}

uint64_t sub_100236ABC()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_100236AE0()
{
  return type metadata accessor for SDAirDropReceiveConnectionManager(0LL);
}

uint64_t type metadata accessor for SDAirDropReceiveConnectionManager(uint64_t a1)
{
  uint64_t result = qword_1006495A8;
  if (!qword_1006495A8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropReceiveConnectionManager);
  }
  return result;
}

uint64_t sub_100236B24(uint64_t a1)
{
  v4[0] = &unk_1004D0238;
  v4[1] = &unk_1004D0238;
  void v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  void v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[9] = (char *)&value witness table for Builtin.Int32 + 64;
  v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    v4[11] = *(void *)(result - 8) + 64LL;
    v4[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[13] = &unk_1004D0250;
    v4[14] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[15] = &unk_1004D0250;
    _BYTE v4[16] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[17] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[18] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[19] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[20] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[21] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[22] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[23] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[24] = &unk_1004D0268;
    v4[25] = &unk_1004D0280;
    return swift_updateClassMetadata2(a1, 256LL, 26LL, v4, a1 + 80);
  }

  return result;
}

uint64_t sub_100236C1C(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v8 = type metadata accessor for UUID(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  os_log_type_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v12 = (void *)*a4;
  unint64_t v14 = sub_1003AD618(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }

  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    os_log_type_t v20 = (void *)*a4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      uint64_t v21 = (uint64_t *)(v20[7] + 16 * v14);
      uint64_t result = swift_unknownObjectRelease(*v21);
      *uint64_t v21 = a1;
      v21[1] = (uint64_t)&off_1005DCBF8;
      return result;
    }

    goto LABEL_11;
  }

  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1003AE0B4();
    goto LABEL_7;
  }

  sub_1003A81DC(v17, a3 & 1);
  unint64_t v23 = sub_1003AD618(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return result;
  }

  unint64_t v14 = v23;
  os_log_type_t v20 = (void *)*a4;
  if ((v18 & 1) != 0) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_100236D80(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_100236D80(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1LL << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for UUID(0LL);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL))( v8 + *(void *)(*(void *)(v9 - 8) + 72LL) * a1,  a2,  v9);
  os_log_type_t v11 = (void *)(a4[7] + 16 * a1);
  void *v11 = a3;
  v11[1] = &off_1005DCBF8;
  uint64_t v12 = a4[2];
  BOOL v13 = __OFADD__(v12, 1LL);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a4[2] = v14;
  }
  return result;
}

uint64_t sub_100236E24(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  unint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  unint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(const char **)(a1 + 72);
  swift_bridgeObjectRetain(*(const char **)(a1 + 8));
  sub_1001A4C04(v2, v3);
  sub_10019BA8C(v4, v5);
  sub_10019BA8C(v6, v7);
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_100236EA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  unint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  unint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(const char **)(a1 + 72);
  swift_bridgeObjectRelease(*(const char **)(a1 + 8));
  sub_100189B0C(v2, v3);
  sub_100189B20(v4, v5);
  sub_100189B20(v6, v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t sub_100236F1C(uint64_t a1)
{
  return static SFAirDrop.TransferIdentifier.== infix(_:_:)( *(void *)(a1 + 8) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_id,  *(void *)(v1 + 16)) & 1;
}

uint64_t sub_100236F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100649708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100236FA4()
{
  uint64_t v1 = *(void *)(sub_100183098(&qword_100649708) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for SDAirDropServerConnection(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  swift_release(*(void *)(v0 + 16));
  uint64_t v8 = (void *)(v0 + v2);
  uint64_t v9 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48LL))(v8, 1LL, v9))
  {
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      uint64_t v10 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(void *, uint64_t))(*(void *)(v10 - 8) + 8LL))(v8, v10);
    }

    else
    {
      swift_unknownObjectRelease(*v8);
    }
  }

  os_log_type_t v11 = (void *)(v0 + v6);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v6, v4);
  if (EnumCaseMultiPayload == 2)
  {
    swift_release(*v11);
    BOOL v13 = (char *)v11 + *(int *)(sub_100183098(&qword_100649710) + 48);
    uint64_t v14 = type metadata accessor for UUID(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8LL))(v13, v14);
  }

  else if (EnumCaseMultiPayload <= 1)
  {
    swift_release(*v11);
  }

  return swift_deallocObject(v0, v6 + v7);
}

uint64_t sub_100237100(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100183098(&qword_100649708) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SDAirDropServerConnection(0LL) - 8) + 80LL);
  return sub_1002328B0(a1, *(void *)(v1 + 16), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_100237170()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100237194()
{
  uint64_t v1 = type metadata accessor for SDAirDropServerConnection(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v5 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = (void *)(v0 + v3);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v1);
  if (EnumCaseMultiPayload == 2)
  {
    swift_release(*v9);
    os_log_type_t v11 = (char *)v9 + *(int *)(sub_100183098(&qword_100649710) + 48);
    uint64_t v12 = type metadata accessor for UUID(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8LL))(v11, v12);
  }

  else if (EnumCaseMultiPayload <= 1)
  {
    swift_release(*v9);
  }

  swift_release(*(void *)(v0 + v4));
  if (swift_getEnumCaseMultiPayload(v0 + v7, v5) == 1)
  {
    uint64_t v13 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v13 - 8) + 8LL))(v0 + v7, v13);
  }

  else
  {
    swift_unknownObjectRelease(*(void *)(v0 + v7));
  }

  return swift_deallocObject(v0, v7 + v8);
}

uint64_t sub_1002372DC()
{
  uint64_t v1 = *(void *)(type metadata accessor for SDAirDropServerConnection(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SDAirDropServerConnectionIdentity(0LL) - 8) + 80LL);
  return sub_100233D10(v0 + v2, *(void *)(v0 + v3), v0 + ((v3 + v4 + 8) & ~v4));
}

uint64_t sub_10023734C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + sub_100195658(v0 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10023735C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100237368(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SDAirDropServerConnectionIdentity(0LL) - 8) + 80LL);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  uint64_t v9 = (void *)swift_task_alloc(dword_100649784);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100195708;
  return sub_100233F70(a1, v5, v6, v7, v8);
}

uint64_t sub_1002373FC()
{
  uint64_t v1 = *(void *)(sub_100183098(&qword_100649708) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for SDAirDropServerConnection(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v21 = *(void *)(v5 + 64);
  uint64_t v7 = type metadata accessor for NWConnection.State(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v20 = *(void *)(v8 + 64);
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 32));
  uint64_t v10 = (void *)(v0 + v2);
  uint64_t v11 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48LL))(v10, 1LL, v11))
  {
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      uint64_t v12 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(void *, uint64_t))(*(void *)(v12 - 8) + 8LL))(v10, v12);
    }

    else
    {
      swift_unknownObjectRelease(*v10);
    }
  }

  uint64_t v13 = (void *)(v0 + v6);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v6, v4);
  if (EnumCaseMultiPayload == 2)
  {
    swift_release(*v13);
    uint64_t v15 = (char *)v13 + *(int *)(sub_100183098(&qword_100649710) + 48);
    uint64_t v16 = type metadata accessor for UUID(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8LL))(v15, v16);
  }

  else if (EnumCaseMultiPayload <= 1)
  {
    swift_release(*v13);
  }

  unint64_t v17 = (v6 + v21 + v9) & ~v9;
  uint64_t v18 = v17 + v20;
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v17, v7);
  return swift_deallocObject(v0, v18);
}

uint64_t sub_1002375BC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100183098(&qword_100649708) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for SDAirDropServerConnection(0LL) - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for NWConnection.State(0LL) - 8) + 80LL);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 32);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc(dword_1006497A4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_1001943E8;
  v16[8] = v14;
  v16[9] = v15;
  v16[6] = v12;
  v16[7] = v13;
  v16[5] = a1;
  return swift_task_switch(sub_100232B44, 0LL, 0LL);
}

uint64_t sub_1002376A0()
{
  uint64_t v1 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 32));
  if (swift_getEnumCaseMultiPayload(v0 + v3, v1) == 1)
  {
    uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v0 + v3, v5);
  }

  else
  {
    swift_unknownObjectRelease(*(void *)(v0 + v3));
  }

  unint64_t v6 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = v6 + 8;
  swift_errorRelease(*(void *)(v0 + v6));
  return swift_deallocObject(v0, v7);
}

uint64_t sub_100237760(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SDAirDropServerConnectionIdentity(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8LL));
  unint64_t v11 = (void *)swift_task_alloc(dword_1006497C4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1001943E8;
  return sub_100234158(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_100237810()
{
  uint64_t v1 = type metadata accessor for SDAirDropServerConnectionIdentity(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 32));
  if (swift_getEnumCaseMultiPayload(v0 + v3, v1) == 1)
  {
    uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v0 + v3, v5);
  }

  else
  {
    swift_unknownObjectRelease(*(void *)(v0 + v3));
  }

  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_1002378B4(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SDAirDropServerConnectionIdentity(0LL) - 8) + 80LL);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  uint64_t v9 = (void *)swift_task_alloc(dword_1006497D4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100195708;
  return sub_1002341E4(a1, v5, v6, v7, v8);
}

uint64_t sub_100237948(void *a1, char a2)
{
  return sub_10022E440(a1, a2);
}

uint64_t sub_100237950()
{
  return swift_deallocObject(v0, 49LL, 7LL);
}

uint64_t sub_100237984(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(_BYTE *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc(dword_1006497EC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100195708;
  return sub_10022E5B4(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_100237A04()
{
  unint64_t result = qword_100650E50;
  if (!qword_100650E50)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___OS_dispatch_queue);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100650E50);
  }

  return result;
}

uint64_t sub_100237A40(uint64_t a1)
{
  return sub_100234550(a1, v1);
}

uint64_t sub_100237A4C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc(dword_100649814);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_100195708;
  v3[2] = v2;
  return swift_task_switch(sub_100236774, 0LL, 0LL);
}

uint64_t sub_100237AAC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc(dword_1006462C4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1006462C0 + dword_1006462C0))(a1, v4);
}

uint64_t sub_100237B20()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc(dword_10064982C);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_100195708;
  v3[2] = v2;
  return swift_task_switch(sub_1002363D4, 0LL, 0LL);
}

uint64_t sub_100237B84()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc(dword_100649844);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_100195708;
  v3[2] = v2;
  return swift_task_switch(sub_1002360E0, 0LL, 0LL);
}

uint64_t sub_100237BE8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc(dword_10064985C);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_100195708;
  v3[3] = v2;
  return swift_task_switch(sub_100235DD0, 0LL, 0LL);
}

uint64_t sub_100237C4C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc(dword_100649874);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_100195708;
  v3[2] = v2;
  return swift_task_switch(sub_100235C94, 0LL, 0LL);
}

uint64_t sub_100237CAC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease(a2);
  }
  return result;
}

uint64_t sub_100237CC0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain(a2);
  }
  return result;
}

uint64_t sub_100237CD8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc(dword_10064988C);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_100195708;
  v3[2] = v2;
  return swift_task_switch(sub_100234D6C, 0LL, 0LL);
}

uint64_t sub_100237D38()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100237D60()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_100237D8C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc(dword_1006498A4);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_100195708;
  v3[2] = v2;
  return swift_task_switch(sub_100234958, 0LL, 0LL);
}

uint64_t sub_100237E0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098((uint64_t *)&unk_100652B00);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for NWEndpoint.Port(0LL);
  uint64_t result = __chkstk_darwin(v5);
  char v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener;
  if (!*(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener])
  {
    uint64_t v10 = *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_deviceStatus];
    uint64_t v35 = sub_1002DF1E8();
    uint64_t v12 = v11;
    if (qword_100643FC0 != -1) {
      swift_once(&qword_100643FC0, sub_100238234);
    }
    uint64_t v13 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v13, (uint64_t)qword_1006498C0);
    uint64_t v14 = swift_bridgeObjectRetain_n(v12, 2LL);
    uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v33 = v10;
      uint64_t v17 = swift_slowAlloc(12LL, -1LL);
      uint64_t v34 = v4;
      uint64_t v18 = (uint8_t *)v17;
      uint64_t v19 = swift_slowAlloc(32LL, -1LL);
      v37[0] = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      swift_bridgeObjectRetain(v12);
      uint64_t v36 = sub_10018CDB4(v35, (unint64_t)v12, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37, v18 + 4, v18 + 12);
      swift_bridgeObjectRelease_n(v12, 3LL);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Starting AirDrop Bonjour Server %s", v18, 0xCu);
      swift_arrayDestroy(v19, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1LL, -1LL);
      uint64_t v20 = v18;
      uint64_t v4 = v34;
      swift_slowDealloc(v20, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v12, 2LL);
    }

    uint64_t v21 = sub_1002E02F4();
    uint64_t v22 = sub_1004197F4(v21);

    static NWEndpoint.Port.any.getter();
    uint64_t v23 = type metadata accessor for NWListener(0LL);
    swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
    uint64_t v24 = NWListener.init(using:on:)(v22, v8);
    uint64_t v25 = *(void *)&v1[v9];
    *(void *)&v1[v9] = v24;
    swift_retain(v24);
    swift_release(v25);
    uint64_t v26 = swift_allocObject(&unk_1005D6288, 32LL, 7LL);
    *(void *)(v26 + swift_weakDestroy(v0 + 16) = v1;
    *(void *)(v26 + 24) = v24;
    swift_retain(v24);
    unint64_t v27 = v1;
    NWListener.stateUpdateHandler.setter(sub_10023A0C0, v26);
    uint64_t v28 = swift_allocObject(&unk_1005D62B0, 24LL, 7LL);
    *(void *)(v28 + swift_weakDestroy(v0 + 16) = v27;
    uint64_t v29 = v27;
    NWListener.newConnectionHandler.setter(sub_10023A0EC, v28);
    NWListener.start(queue:)(*(void *)&v29[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_queue]);
    uint64_t v30 = sub_1001FC2FC();
    NWListener.Service.init(name:type:domain:txtRecord:)( v35,  v12,  0x706F72647269615FLL,  0xEE002E7063745F2ELL,  0x6C61636F6CLL,  0xE500000000000000LL,  v30,  v31);
    uint64_t v32 = type metadata accessor for NWListener.Service(0LL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56LL))(v4, 0LL, 1LL, v32);
    NWListener.service.setter(v4);
    return swift_release(v24);
  }

  return result;
}

uint64_t sub_100238234()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_1006498C0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_1006498C0);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1002382C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWListener.State(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v10, 1LL, 1LL, v11);
  uint64_t v12 = swift_allocObject(&unk_1005D62D8, 24LL, 7LL);
  swift_unknownObjectWeakInit(v12 + 16, a2);
  uint64_t v13 = swift_allocObject(&unk_1005D6350, 24LL, 7LL);
  swift_weakInit(v13 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v14 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = (v14 + 40) & ~v14;
  unint64_t v16 = (v6 + v15 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v17 = (char *)swift_allocObject(&unk_1005D6378, v16 + 8, v14 | 7);
  *((void *)v17 + 2) = 0LL;
  *((void *)v17 + 3) = 0LL;
  *((void *)v17 + 4) = v12;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v17[v15], v7, v4);
  *(void *)&v17[v16] = v13;
  uint64_t v18 = sub_1001B3808((uint64_t)v10, (uint64_t)&unk_100649968, (uint64_t)v17);
  return swift_release(v18);
}

uint64_t sub_100238464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a1;
  void v6[9] = a4;
  return swift_task_switch(sub_100238480, 0LL, 0LL);
}

uint64_t sub_100238480()
{
  uint64_t v1 = *(void *)(v0 + 72) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(void *)(v0 + 96) = Strong;
  if (Strong)
  {
    uint64_t v4 = *(void *)(v0 + 88) + 16LL;
    swift_beginAccess(v4, v0 + 40, 0LL, 0LL);
    uint64_t v5 = swift_weakLoadStrong(v4);
    *(void *)(v0 + 104) = v5;
    uint64_t v6 = (void *)swift_task_alloc(dword_100649974);
    *(void *)(v0 + 112) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_10023854C;
    return sub_1002385CC(*(void *)(v0 + 80), v5);
  }

  else
  {
    **(_BYTE **)(v0 + 64) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_10023854C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104LL);
  uint64_t v2 = *(void **)(*(void *)v0 + 96LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 112LL));
  swift_release(v1);

  return swift_task_switch(sub_1002385B0, 0LL, 0LL);
}

uint64_t sub_1002385B0()
{
  **(_BYTE **)(v0 + 64) = *(void *)(v0 + 96) == 0LL;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002385CC(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  uint64_t v4 = sub_100183098(&qword_1006457E8);
  v3[13] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for NWError(0LL);
  v3[14] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[15] = v6;
  unint64_t v7 = (*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[16] = swift_task_alloc(v7);
  v3[17] = swift_task_alloc(v7);
  v3[18] = swift_task_alloc(v7);
  v3[19] = swift_task_alloc(v7);
  uint64_t v8 = type metadata accessor for NWListener.State(0LL);
  v3[20] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v3[21] = v9;
  v3[22] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v10 = static AirDropActor.shared;
  v3[23] = static AirDropActor.shared;
  return swift_task_switch(sub_1002386D8, v10, 0LL);
}

uint64_t sub_1002386D8()
{
  uint64_t v97 = (uint64_t *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 160);
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 16))(v2, *(void *)(v0 + 80), v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v3);
  if (v4 == enum case for NWListener.State.waiting(_:))
  {
    uint64_t v5 = *(void *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 152);
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 168) + 96LL))(v5, *(void *)(v0 + 160));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    if (qword_100643FC0 != -1) {
      swift_once(&qword_100643FC0, sub_100238234);
    }
    uint64_t v10 = *(void *)(v0 + 144);
    uint64_t v9 = *(void *)(v0 + 152);
    uint64_t v12 = *(void *)(v0 + 112);
    uint64_t v11 = *(void *)(v0 + 120);
    uint64_t v13 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v13, (uint64_t)qword_1006498C0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    uint64_t v15 = v14(v10, v9, v12);
    unint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.default.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void *)(v0 + 144);
    uint64_t v21 = *(void *)(v0 + 112);
    uint64_t v20 = *(void *)(v0 + 120);
    if (v18)
    {
      uint64_t v96 = *(void *)(v0 + 120);
      uint64_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v94 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v22 = 138412290;
      uint64_t v23 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v24 = swift_allocError(v21, v23, 0LL, 0LL);
      v14(v25, v19, v21);
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError(v24);
      uint64_t *v97 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v97, v0 + 80, v22 + 4, v22 + 12);
      *uint64_t v94 = v26;
      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
      v27(v19, v21);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "AirDrop Bonjour server waiting with error %@", v22, 0xCu);
      uint64_t v28 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v94, 1LL, v28);
      swift_slowDealloc(v94, -1LL, -1LL);
      swift_slowDealloc(v22, -1LL, -1LL);
    }

    else
    {

      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v27(v19, v21);
    }

    v27(*(void *)(v0 + 152), *(void *)(v0 + 112));
    goto LABEL_43;
  }

  if (v4 == enum case for NWListener.State.failed(_:))
  {
    uint64_t v29 = *(void *)(v0 + 176);
    uint64_t v30 = *(void *)(v0 + 136);
    uint64_t v31 = *(void *)(v0 + 112);
    uint64_t v32 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 168) + 96LL))(v29, *(void *)(v0 + 160));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v30, v29, v31);
    if (qword_100643FC0 != -1) {
      swift_once(&qword_100643FC0, sub_100238234);
    }
    uint64_t v33 = *(void *)(v0 + 128);
    uint64_t v34 = *(void *)(v0 + 136);
    uint64_t v35 = *(void *)(v0 + 112);
    uint64_t v36 = *(void *)(v0 + 120);
    uint64_t v37 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v37, (uint64_t)qword_1006498C0);
    uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    uint64_t v39 = v38(v33, v34, v35);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.error.getter(v40);
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v44 = *(void *)(v0 + 120);
    uint64_t v43 = *(void *)(v0 + 128);
    uint64_t v45 = *(void *)(v0 + 112);
    if (v42)
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      buf = (uint8_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v46 = 138412290;
      uint64_t v47 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v48 = swift_allocError(v45, v47, 0LL, 0LL);
      v38(v49, v43, v45);
      uint64_t v50 = _swift_stdlib_bridgeErrorToNSError(v48);
      *(void *)(v0 + 64) = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v97, v46 + 4, v46 + 12);
      *(void *)buf = v50;
      uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v51(v43, v45);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "AirDrop Bonjour server failed with error %@", v46, 0xCu);
      uint64_t v52 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(buf, 1LL, v52);
      swift_slowDealloc(buf, -1LL, -1LL);
      swift_slowDealloc(v46, -1LL, -1LL);
    }

    else
    {
      uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v51(*(void *)(v0 + 128), *(void *)(v0 + 112));
    }

    *(void *)(v0 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v51;
    if (*(void *)(v0 + 88)) {
      NWListener.cancel()();
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_delegate,  v59);
    *(void *)(v0 + 208) = Strong;
    if (Strong)
    {
      uint64_t v61 = (void *)swift_task_alloc(dword_1006497E4);
      *(void *)(v0 + 2swift_weakDestroy(v0 + 16) = v61;
      *uint64_t v61 = v0;
      v61[1] = sub_10023912C;
      return sub_10022C4CC(1, *(void *)(v0 + 136));
    }

    (*(void (**)(void, void))(v0 + 200))(*(void *)(v0 + 136), *(void *)(v0 + 112));
    goto LABEL_43;
  }

  if (v4 == enum case for NWListener.State.setup(_:))
  {
    if (qword_100643FC0 != -1) {
      swift_once(&qword_100643FC0, sub_100238234);
    }
    uint64_t v53 = type metadata accessor for Logger(0LL);
    uint64_t v54 = sub_100186DE4(v53, (uint64_t)qword_1006498C0);
    uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
    os_log_type_t v56 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v55, v56)) {
      goto LABEL_37;
    }
    os_log_type_t v57 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v57 = 0;
    uint64_t v58 = "AirDrop Bonjour server setting up";
LABEL_36:
    _os_log_impl((void *)&_mh_execute_header, v55, v56, v58, v57, 2u);
    swift_slowDealloc(v57, -1LL, -1LL);
LABEL_37:

    goto LABEL_43;
  }

  if (v4 != enum case for NWListener.State.ready(_:))
  {
    if (v4 != enum case for NWListener.State.cancelled(_:))
    {
      if (qword_100643FC0 != -1) {
        swift_once(&qword_100643FC0, sub_100238234);
      }
      uint64_t v81 = type metadata accessor for Logger(0LL);
      uint64_t v82 = sub_100186DE4(v81, (uint64_t)qword_1006498C0);
      uint64_t v83 = (os_log_s *)Logger.logObject.getter(v82);
      os_log_type_t v84 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v83, v84))
      {
        os_log_type_t v85 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)os_log_type_t v85 = 0;
        _os_log_impl((void *)&_mh_execute_header, v83, v84, "Unknown AirDrop server state", v85, 2u);
        swift_slowDealloc(v85, -1LL, -1LL);
      }

      uint64_t v87 = *(void *)(v0 + 168);
      uint64_t v86 = *(void *)(v0 + 176);
      uint64_t v88 = *(void *)(v0 + 160);

      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v86, v88);
      goto LABEL_43;
    }

    if (qword_100643FC0 != -1) {
      swift_once(&qword_100643FC0, sub_100238234);
    }
    uint64_t v79 = type metadata accessor for Logger(0LL);
    uint64_t v80 = sub_100186DE4(v79, (uint64_t)qword_1006498C0);
    uint64_t v55 = (os_log_s *)Logger.logObject.getter(v80);
    os_log_type_t v56 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v55, v56)) {
      goto LABEL_37;
    }
    os_log_type_t v57 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v57 = 0;
    uint64_t v58 = "AirDrop Bonjour server stopped";
    goto LABEL_36;
  }

  uint64_t v63 = v0 + 16;
  if (qword_100643FC0 != -1) {
    swift_once(&qword_100643FC0, sub_100238234);
  }
  uint64_t v64 = type metadata accessor for Logger(0LL);
  uint64_t v65 = sub_100186DE4(v64, (uint64_t)qword_1006498C0);
  uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
  os_log_type_t v67 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v66, v67))
  {
    unint64_t v68 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)unint64_t v68 = 0;
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "AirDrop Bonjour server ready", v68, 2u);
    swift_slowDealloc(v68, -1LL, -1LL);
  }

  uint64_t v70 = *(void *)(v0 + 96);
  uint64_t v69 = *(void *)(v0 + 104);

  uint64_t v71 = *(void *)(v70 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_sessionLogger);
  Date.init()(v72);
  uint64_t v73 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56LL))(v69, 0LL, 1LL, v73);
  uint64_t v74 = v71 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_bonjourServerStartDate;
  swift_beginAccess(v74, v63, 33LL, 0LL);
  sub_100225008(v69, v74);
  swift_endAccess(v63);
  NSString v75 = String._bridgeToObjectiveC()();
  uint64_t v76 = getpid();
  sub_10002FA6C((uint64_t)@"BonjourAdvertise", (uint64_t)@"Start", (uint64_t)v75, v76);

  uint64_t v78 = swift_unknownObjectWeakLoadStrong( v70 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_delegate,  v77);
  *(void *)(v0 + 192) = v78;
  if (v78) {
    return swift_task_switch(sub_10023903C, static AirDropActor.shared, 0LL);
  }
LABEL_43:
  uint64_t v89 = *(void *)(v0 + 144);
  uint64_t v90 = *(void *)(v0 + 152);
  uint64_t v92 = *(void *)(v0 + 128);
  uint64_t v91 = *(void *)(v0 + 136);
  uint64_t v93 = *(void *)(v0 + 104);
  swift_task_dealloc(*(void *)(v0 + 176));
  swift_task_dealloc(v90);
  swift_task_dealloc(v89);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023903C()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = (const char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors);
  *(void *)&double v4 = swift_beginAccess( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors,  v0 + 40,  1LL,  0LL).n128_u64[0];
  uint64_t v5 = *v3;
  *uint64_t v3 = (const char *)&_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v5, v4);
  swift_unknownObjectRelease(v2);
  return swift_task_switch(sub_1002390B8, v1, 0LL);
}

uint64_t sub_1002390B8()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 104);
  swift_task_dealloc(*(void *)(v0 + 176));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023912C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 208LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 184LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 216LL));
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_10023918C, v2, 0LL);
}

uint64_t sub_10023918C()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 104);
  swift_task_dealloc(*(void *)(v0 + 176));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100239210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(v6, 1LL, 1LL, v7);
  uint64_t v8 = swift_allocObject(&unk_1005D62D8, 24LL, 7LL);
  swift_unknownObjectWeakInit(v8 + 16, a2);
  uint64_t v9 = (void *)swift_allocObject(&unk_1005D6300, 48LL, 7LL);
  v9[2] = 0LL;
  v9[3] = 0LL;
  v9[4] = v8;
  v9[5] = a1;
  swift_retain(a1);
  uint64_t v10 = sub_1001B3808((uint64_t)v6, (uint64_t)&unk_100649948, (uint64_t)v9);
  return swift_release(v10);
}

uint64_t sub_1002392FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_100239318, 0LL, 0LL);
}

uint64_t sub_100239318()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    if (qword_100643F28 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    return swift_task_switch(sub_1002393C8, static AirDropActor.shared, 0LL);
  }

  else
  {
    **(_BYTE **)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1002393C8()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_100239424(*(void *)(v0 + 56));

  return swift_task_switch(sub_100239408, 0LL, 0LL);
}

uint64_t sub_100239408()
{
  **(_BYTE **)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(void *)(v0 + 64) == 0LL;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100239424(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v4);
  uint64_t v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  sub_10035159C();
  uint64_t v7 = (void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_connections);
  swift_beginAccess(v7, v21, 33LL, 0LL);
  uint64_t v8 = swift_retain(a1);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
  unint64_t v10 = *(void *)((*v7 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v9 = *(void *)((*v7 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v10 >= v9 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1LL);
  }
  uint64_t v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, a1);
  specialized Array._endMutation()(v11);
  swift_endAccess(v21);
  uint64_t v12 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v6, 1LL, 1LL, v12);
  uint64_t v13 = swift_allocObject(&unk_1005D62D8, 24LL, 7LL);
  swift_unknownObjectWeakInit(v13 + 16, v2);
  uint64_t v14 = qword_100643F28;
  swift_retain(a1);
  swift_retain(v13);
  if (v14 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v15 = static AirDropActor.shared;
  uint64_t v16 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  os_log_type_t v17 = (void *)swift_allocObject(&unk_1005D6328, 48LL, 7LL);
  v17[2] = v15;
  v17[3] = v16;
  v17[4] = a1;
  v17[5] = v13;
  swift_retain(v15);
  swift_release(v13);
  uint64_t v18 = sub_1001B37E8((uint64_t)v6, (uint64_t)&unk_100649958, (uint64_t)v17);
  return swift_release(v18);
}

void sub_1002395FC()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener);
  if (v2)
  {
    uint64_t v3 = v0;
    uint64_t v4 = qword_100643FC0;
    swift_retain(v2);
    if (v4 != -1) {
      swift_once(&qword_100643FC0, sub_100238234);
    }
    uint64_t v5 = type metadata accessor for Logger(0LL);
    uint64_t v6 = sub_100186DE4(v5, (uint64_t)qword_1006498C0);
    uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      unint64_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Stopping AirDrop Bonjour Server", v9, 2u);
      swift_slowDealloc(v9, -1LL, -1LL);
    }

    NWListener.cancel()();
    sub_100393F00(1);
    sub_1002397E4( &OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_serverType,  &OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_connections);
    uint64_t v10 = *(void *)(v3 + v1);
    *(void *)(v3 + vsub_10022D314(2, 1) = 0LL;
    swift_release(v10);
    [*(id *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_deviceStatus) setNextAirDropID:0];
    if (@"AirDropID")
    {
      CFPreferencesSetValue( @"AirDropID",  0LL,  kCFPreferencesCurrentApplication,  kCFPreferencesCurrentUser,  kCFPreferencesCurrentHost);
      CFPreferencesSynchronize(kCFPreferencesCurrentApplication, kCFPreferencesCurrentUser, kCFPreferencesCurrentHost);
      swift_release(v2);
    }

    else
    {
      __break(1u);
    }
  }

void sub_1002397BC()
{
}

void sub_1002397D0()
{
}

void sub_1002397E4(void *a1, void *a2)
{
  if (qword_100644050 != -1) {
    swift_once(&qword_100644050, sub_100249C84);
  }
  uint64_t v5 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v5, (uint64_t)qword_100649E20);
  uint64_t v6 = v2;
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = swift_slowAlloc(32LL, -1LL);
    v23[0] = v10;
    *(_DWORD *)unint64_t v9 = 136315138;
    unint64_t v11 = 0xEE00726576726553LL;
    uint64_t v12 = 0x2072756F6A6E6F42LL;
    if (v6[*a1] != 1)
    {
      uint64_t v12 = 0x656946207261654ELL;
      unint64_t v11 = 0xEA0000000000646CLL;
    }

    if (v6[*a1]) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0xD00000000000001ALL;
    }
    if (v6[*a1]) {
      uint64_t v14 = (const char *)v11;
    }
    else {
      uint64_t v14 = (const char *)0x80000001005069C0LL;
    }
    uint64_t v22 = sub_10018CDB4(v13, (unint64_t)v14, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, v23, v9 + 4, v9 + 12);

    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Cancelling all connections associated with %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  else
  {
  }

  uint64_t v15 = (uint64_t *)&v6[*a2];
  swift_beginAccess(v15, v23, 1LL, 0LL);
  uint64_t v16 = *v15;
  if (!((unint64_t)*v15 >> 62))
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain_n(*v15, 2LL);
    if (v17) {
      goto LABEL_16;
    }
LABEL_26:
    swift_bridgeObjectRelease_n(v16, 2LL);
    uint64_t v21 = (const char *)*v15;
    *uint64_t v15 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v21);
    return;
  }

  if (v16 < 0) {
    uint64_t v20 = *v15;
  }
  else {
    uint64_t v20 = v16 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain_n(*v15, 2LL);
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v20);
  if (!v17) {
    goto LABEL_26;
  }
LABEL_16:
  if (v17 >= 1)
  {
    for (uint64_t i = 0LL; i != v17; ++i)
    {
      if ((v16 & 0xC000000000000001LL) != 0)
      {
        uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v16);
      }

      else
      {
        uint64_t v19 = *(void *)(v16 + 8 * i + 32);
        swift_retain(v19);
      }

      NWConnection.cancel()();
      swift_release(v19);
    }

    goto LABEL_26;
  }

  __break(1u);
}

uint64_t sub_100239AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t v6 = type metadata accessor for SDAirDropServerConnection(0LL);
  v5[8] = v6;
  void v5[9] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100239B4C, static AirDropActor.shared, 0LL);
}

uint64_t sub_100239B4C()
{
  uint64_t v1 = v0 + 16;
  if (qword_100643FC0 != -1) {
    swift_once(&qword_100643FC0, sub_100238234);
  }
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v3, (uint64_t)qword_1006498C0);
  uint64_t v4 = swift_retain_n(v2, 2LL);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 48);
  if (v7)
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = swift_slowAlloc(32LL, -1LL);
    uint64_t v26 = v10;
    *(_DWORD *)unint64_t v9 = 136315138;
    uint64_t v11 = NWConnection.debugDescription.getter(v10);
    uint64_t v13 = (const char *)v12;
    *(void *)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10018CDB4(v11, v12, &v26);
    uint64_t v1 = v0 + 16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v13);
    swift_release_n(v8, 2LL);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received AirDrop Bonjour connection %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  else
  {
    swift_release_n(*(void *)(v0 + 48), 2LL);
  }

  uint64_t v14 = *(void *)(v0 + 56) + 16LL;
  swift_beginAccess(v14, v1, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v14, v15);
  if (Strong
    && (uint64_t v18 = (void *)Strong,
        uint64_t v19 = swift_unknownObjectWeakLoadStrong( Strong + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_delegate,  v17),  *(void *)(v0 + 80) = v19,  v18,  v19))
  {
    uint64_t v21 = *(void *)(v0 + 64);
    uint64_t v20 = *(void **)(v0 + 72);
    uint64_t v22 = *(void *)(v0 + 48);
    *uint64_t v20 = v22;
    swift_storeEnumTagMultiPayload(v20, v21, 0LL);
    uint64_t v23 = dword_1006496FC;
    swift_retain(v22);
    uint64_t v24 = (void *)swift_task_alloc(v23);
    *(void *)(v0 + 88) = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_100239DC8;
    return sub_100228B74(*(void *)(v0 + 72));
  }

  else
  {
    swift_task_dealloc(*(void *)(v0 + 72));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_100239DC8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 80);
  uint64_t v3 = *(void *)(*v0 + 72);
  uint64_t v5 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 88));
  swift_unknownObjectRelease(v2);
  sub_10023A234(v3);
  swift_task_dealloc(*(void *)(v1 + 72));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t type metadata accessor for SDAirDropBonjourServer()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary22SDAirDropBonjourServer);
}

uint64_t sub_100239F04()
{
  return swift_retain(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener));
}

uint64_t sub_100239F14()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_serverType);
}

id sub_100239F28(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v6);
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener] = 0LL;
  v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_serverType] = 1;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_connections] = _swiftEmptyArrayStorage;
  uint64_t v13 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_delegate];
  *((void *)v13 + sub_10022D314(2, 1) = 0LL;
  swift_unknownObjectWeakInit(v13, 0LL);
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_deviceStatus] = a1;
  uint64_t v14 = (objc_class *)type metadata accessor for SDAirDropDeviceSupportManager();
  uint64_t v15 = (char *)objc_allocWithZone(v14);
  *(void *)&v15[OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropDeviceSupportManager_deviceStatus] = a1;
  *(void *)&v15[OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropDeviceSupportManager_nearbyAgent] = a2;
  v23.receiver = v15;
  v23.super_class = v14;
  id v16 = a1;
  uint64_t v17 = v6;
  id v18 = a2;
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_deviceSupportManager] = objc_msgSendSuper2(&v23, "init");
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_sessionLogger] = a3;
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_queue] = a4;
  *((void *)v13 + sub_10022D314(2, 1) = a6;
  swift_unknownObjectWeakAssign(v13, a5);
  swift_retain(a3);
  id v19 = a4;

  v22.receiver = v17;
  v22.super_class = ObjectType;
  return objc_msgSendSuper2(&v22, "init");
}

uint64_t sub_10023A094()
{
  swift_release(*(void *)(v0 + 24));
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10023A0C0(uint64_t a1)
{
  return sub_1002382C4(a1, *(void *)(v1 + 16));
}

uint64_t sub_10023A0C8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10023A0EC(uint64_t a1)
{
  return sub_100239210(a1, *(void *)(v1 + 16));
}

uint64_t sub_10023A0F4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10023A11C(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc(dword_100649944);
  __int128 v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100195708;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a1;
  return swift_task_switch(sub_100239318, 0LL, 0LL);
}

uint64_t sub_10023A188()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_10023A1BC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc(dword_100649954);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1001943E8;
  return sub_100239AC0(a1, v4, v5, v7, v6);
}

uint64_t sub_10023A234(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropServerConnection(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_10023A270()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10023A294()
{
  uint64_t v1 = type metadata accessor for NWListener.State(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10023A32C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for NWListener.State(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8LL));
  unint64_t v9 = (void *)swift_task_alloc(dword_100649964);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  *unint64_t v9 = v2;
  v9[1] = sub_100195708;
  v9[10] = v7;
  v9[11] = v8;
  v9[8] = a1;
  v9[9] = v6;
  return swift_task_switch(sub_100238480, 0LL, 0LL);
}

uint64_t sub_10023A3CC(uint64_t a1)
{
  return sub_10023A5D4(a1, qword_1006695C8, 0x7269416F546B7341LL, 0xEC000000706F7244LL);
}

id sub_10023A3F4(uint64_t a1)
{
  return sub_10023A534(a1, qword_1006695E0, (uint64_t (*)(void))&_airdrop_log);
}

id sub_10023A408(uint64_t a1)
{
  return sub_10023A534(a1, qword_1006695F8, (uint64_t (*)(void))&_airdrop_nw_log);
}

uint64_t sub_10023A41C(uint64_t a1)
{
  return sub_10023A5D4(a1, qword_100669610, 0x4E706F7244726941LL, 0xED0000454C422E57LL);
}

uint64_t sub_10023A448(uint64_t a1)
{
  return sub_10023A5D4(a1, qword_100669628, 0xD000000000000013LL, 0x8000000100506AF0LL);
}

uint64_t sub_10023A46C(uint64_t a1)
{
  return sub_10023A5D4(a1, qword_100669640, 0xD00000000000001BLL, 0x8000000100506B50LL);
}

uint64_t sub_10023A490(uint64_t a1)
{
  return sub_10023A5D4(a1, qword_100669658, 0xD00000000000001ELL, 0x8000000100506B70LL);
}

uint64_t sub_10023A4B4(uint64_t a1)
{
  return sub_10023A5D4(a1, qword_100669670, 0xD00000000000001DLL, 0x8000000100506B10LL);
}

uint64_t sub_10023A4D8(uint64_t a1)
{
  return sub_10023A5D4(a1, qword_100669688, 0xD000000000000010LL, 0x8000000100506B30LL);
}

uint64_t sub_10023A4FC(uint64_t a1)
{
  return sub_10023A5D4(a1, qword_1006696A0, 0xD000000000000015LL, 0x8000000100506B90LL);
}

id sub_10023A520(uint64_t a1)
{
  return sub_10023A534(a1, qword_1006696B8, (uint64_t (*)(void))&_authentications_log);
}

id sub_10023A534(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v5, a2);
  sub_100186DE4(v5, (uint64_t)a2);
  id result = (id)a3();
  if (result) {
    return (id)Logger.init(_:)();
  }
  __break(1u);
  return result;
}

uint64_t sub_10023A59C(uint64_t a1)
{
  return sub_10023A5D4(a1, qword_1006696D0, 0x4B544C6C6DLL, 0xE500000000000000LL);
}

uint64_t sub_10023A5B8(uint64_t a1)
{
  return sub_10023A5D4(a1, qword_1006696E8, 0x6E6F6D656144LL, 0xE600000000000000LL);
}

uint64_t sub_10023A5D4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v7, a2);
  sub_100186DE4(v7, (uint64_t)a2);
  return Logger.init(subsystem:category:)(0xD000000000000011LL, 0x8000000100505BA0LL, a3, a4);
}

uint64_t sub_10023A648()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100649978);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100649978);
  if (qword_100644020 != -1) {
    swift_once(&qword_100644020, sub_10023A520);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

char *sub_10023A6D8( void (*a1)(char *, uint64_t), char *a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v54 = a6;
  uint64_t v55 = a1;
  uint64_t v11 = type metadata accessor for UUID(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v54 - v16;
  v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI] = 0;
  v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_armingUITransportType] = 3;
  id v18 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_passcode];
  *id v18 = a4;
  v18[1] = a5;
  os_log_type_t v56 = a3;
  sub_10019A6C4((uint64_t)a3, (uint64_t)&v61);
  id v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v19(v17, (uint64_t)a2, v11);
  uint64_t v20 = type metadata accessor for SDAuthenticationAKSPairingSession(0LL);
  uint64_t v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  *(void *)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession) = 0LL;
  objc_super v22 = (void *)objc_opt_self(&OBJC_CLASS___SDAutoUnlockAKSManager);
  objc_super v23 = v6;
  id result = (char *)[v22 sharedManager];
  if (result)
  {
    *(void *)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager) = result;
    *(_BYTE *)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_role) = 0;
    sub_1001CE0D0(&v61, v21 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))( v21 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_sessionID,  v17,  v11);
    id v25 = v54;
    *(void *)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_type) = v54;
    *(void *)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession] = v21;

    v19(v15, (uint64_t)a2, v11);
    uint64_t v26 = &v23[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    *(_OWORD *)uint64_t v26 = 0u;
    *((_OWORD *)v26 + sub_10022D314(2, 1) = 0u;
    *((void *)v26 + 4) = 0LL;
    unint64_t v27 = &v23[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
    *(_OWORD *)unint64_t v27 = 0u;
    *((_OWORD *)v27 + sub_10022D314(2, 1) = 0u;
    *((void *)v27 + 4) = 0LL;
    *(void *)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer] = 0LL;
    uint64_t v28 = v55;
    *(void *)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue] = v55;
    v19(&v23[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_sessionID], (uint64_t)v15, v11);
    *(void *)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] = v25;
    uint64_t v29 = (objc_class *)type metadata accessor for SDAuthenticationSession(0LL);
    v60.receiver = v23;
    v60.super_class = v29;
    uint64_t v30 = v28;
    uint64_t v31 = (char *)objc_msgSendSuper2(&v60, "init");
    uint64_t v32 = *(void (**)(char *, uint64_t))(v12 + 8);
    v32(v15, v11);
    uint64_t v33 = v56;
    sub_10019A6C4((uint64_t)v56, (uint64_t)&v61);
    uint64_t v34 = (uint64_t)&v31[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
    swift_beginAccess(&v31[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], &v58, 33LL, 0LL);
    uint64_t v35 = v31;
    sub_10023FA98((uint64_t)&v61, v34);
    swift_endAccess(&v58);
    uint64_t v36 = a2;
    if (qword_100644038 != -1) {
      swift_once(&qword_100644038, sub_10023A648);
    }
    uint64_t v37 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v37, (uint64_t)qword_100649978);
    sub_10019A6C4((uint64_t)v33, (uint64_t)&v61);
    uint64_t v38 = v35;
    uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v54 = v30;
      uint64_t v55 = v32;
      uint64_t v41 = swift_slowAlloc(32LL, -1LL);
      uint64_t v42 = swift_slowAlloc(96LL, -1LL);
      uint64_t v57 = v42;
      *(_DWORD *)uint64_t v41 = 136315650;
      uint64_t v43 = UUID.uuidString.getter(v42);
      unint64_t v45 = v44;
      uint64_t v58 = sub_10018CDB4(v43, v44, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, v59, v41 + 4, v41 + 12);

      swift_bridgeObjectRelease(v45);
      *(_WORD *)(v41 + 12) = 2080;
      uint64_t v46 = v62;
      uint64_t v47 = v63;
      sub_10019A708(&v61, v62);
      uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47);
      if (v49)
      {
        unint64_t v50 = v49;
      }

      else
      {
        uint64_t v58 = 0LL;
        v59[0] = 0xE000000000000000LL;
        _StringGuts.grow(_:)(17LL);
        swift_bridgeObjectRelease(v59[0]);
        unint64_t v50 = 0x80000001005046B0LL;
        uint64_t v48 = 0xD000000000000015LL;
      }

      uint64_t v58 = sub_10018CDB4(v48, v50, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, v59, v41 + 14, v41 + 22);
      swift_bridgeObjectRelease(v50);
      sub_10018709C(&v61);
      *(_WORD *)(v41 + 22) = 2080;
      unint64_t v51 = sub_10034F010(*(void *)&v38[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
      unint64_t v53 = v52;
      uint64_t v58 = sub_10018CDB4(v51, v52, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, v59, v41 + 24, v41 + 32);

      swift_bridgeObjectRelease(v53);
      _os_log_impl( (void *)&_mh_execute_header,  v39,  v40,  "Begin SDAuthenticationPairingLockSession %s for device: %s with %s",  (uint8_t *)v41,  0x20u);
      swift_arrayDestroy(v42, 3LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1LL, -1LL);
      swift_slowDealloc(v41, -1LL, -1LL);

      sub_10018709C(v56);
      v55(v36, v11);
    }

    else
    {

      sub_10018709C(&v61);
      sub_10018709C(v33);
      v32(v36, v11);
    }

    return v38;
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_10023AC90()
{
  uint64_t v1 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for TaskPriority(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1LL, 1LL, v4);
  uint64_t v6 = (void *)swift_allocObject(&unk_1005D63F8, 40LL, 7LL);
  v6[2] = 0LL;
  uint64_t v7 = v6 + 2;
  v6[3] = 0LL;
  void v6[4] = v0;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1LL, v4);
  id v9 = v0;
  if (v8 == 1)
  {
    sub_100187100((uint64_t)v3, &qword_100646560);
    uint64_t v10 = 0LL;
    uint64_t v11 = 0LL;
    uint64_t v12 = 7168LL;
  }

  else
  {
    unsigned __int8 v13 = TaskPriority.rawValue.getter(v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    uint64_t v12 = v13 | 0x1C00LL;
    uint64_t v14 = *v7;
    if (*v7)
    {
      uint64_t v15 = v6[3];
      uint64_t ObjectType = swift_getObjectType(*v7);
      swift_unknownObjectRetain(v14);
      uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v15);
      uint64_t v11 = v17;
      swift_unknownObjectRelease(v14);
    }

    else
    {
      uint64_t v10 = 0LL;
      uint64_t v11 = 0LL;
    }
  }

  uint64_t v18 = swift_allocObject(&unk_1005D6420, 32LL, 7LL);
  *(void *)(v18 + swift_weakDestroy(v0 + 16) = &unk_1006499E0;
  *(void *)(v18 + 24) = v6;
  if (v11 | v10)
  {
    v22[0] = 0LL;
    v22[1] = 0LL;
    id v19 = v22;
    v22[2] = v10;
    v22[3] = v11;
  }

  else
  {
    id v19 = 0LL;
  }

  uint64_t v20 = swift_task_create(v12, v19, (char *)&type metadata for () + 8, &unk_100649820, v18);
  return swift_release(v20);
}

uint64_t sub_10023AE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[33] = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  v4[34] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[35] = v6;
  v4[36] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  v4[37] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[38] = v8;
  v4[39] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10023AEE8, 0LL, 0LL);
}

uint64_t sub_10023AEE8()
{
  uint64_t v1 = *(void *)(v0 + 264);
  if (*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type) == 8LL)
  {
    uint64_t v2 = (uint64_t *)(v0 + 248);
    uint64_t v11 = sub_10023BBC0(0LL, 0xF000000000000000LL);
    unint64_t v13 = v12;
    uint64_t v14 = *(void *)(v0 + 264) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
    swift_beginAccess(v14, v0 + 208, 0LL, 0LL);
    sub_1001915A4(v14, v0 + 64, &qword_100654080);
    if (*(void *)(v0 + 88))
    {
      uint64_t v15 = *(void *)(v0 + 312);
      uint64_t v16 = *(void *)(v0 + 288);
      uint64_t v38 = *(void *)(v0 + 304);
      uint64_t v39 = *(void *)(v0 + 296);
      uint64_t v17 = *(void *)(v0 + 272);
      uint64_t v37 = *(void *)(v0 + 280);
      unint64_t v18 = v13;
      id v19 = *(void **)(v0 + 264);
      sub_1001CE0D0((__int128 *)(v0 + 64), v0 + 144);
      sub_10019A6C4(v0 + 144, v0 + 104);
      uint64_t v20 = (void *)swift_allocObject(&unk_1005D6448, 80LL, 7LL);
      void v20[2] = v19;
      v20[3] = v11;
      v20[4] = v18;
      sub_1001CE0D0((__int128 *)(v0 + 104), (uint64_t)(v20 + 5));
      *(void *)(v0 + 48) = sub_10023F510;
      *(void *)(v0 + 56) = v20;
      *(void *)(v0 + swift_weakDestroy(v0 + 16) = _NSConcreteStackBlock;
      *(void *)(v0 + 24) = 1107296256LL;
      *(void *)(v0 + sub_100195658(v0 + 32) = sub_1001B9FE4;
      *(void *)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = &unk_1005D6460;
      uint64_t v21 = _Block_copy((const void *)(v0 + 16));
      id v22 = v19;
      uint64_t v23 = sub_10019BA8C(v11, v18);
      static DispatchQoS.unspecified.getter(v23);
      *(void *)(v0 + 256) = _swiftEmptyArrayStorage;
      uint64_t v24 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      uint64_t v25 = sub_100183098((uint64_t *)&unk_1006460D0);
      unint64_t v26 = sub_1001D228C();
      dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 256, v25, v26, v17, v24);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v15, v16, v21);
      _Block_release(v21);
      sub_100189B0C(0LL, 0xF000000000000000LL);
      sub_100189B20(v11, v18);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v16, v17);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v15, v39);
      sub_10018709C((void *)(v0 + 144));
      swift_release(*(void *)(v0 + 56));
    }

    else
    {
      sub_100187100(v0 + 64, &qword_100654080);
      if (qword_100644038 != -1) {
        swift_once(&qword_100644038, sub_10023A648);
      }
      uint64_t v28 = type metadata accessor for Logger(0LL);
      uint64_t v29 = sub_100186DE4(v28, (uint64_t)qword_100649978);
      uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
      os_log_type_t v31 = static os_log_type_t.error.getter(v30);
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v33 = swift_slowAlloc(32LL, -1LL);
        uint64_t v40 = v33;
        *(_DWORD *)uint64_t v32 = 136315138;
        *(void *)(v0 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10018CDB4(0xD000000000000021LL, 0x8000000100506C40LL, &v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 248, v32 + 4, v32 + 12);
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "%s", v32, 0xCu);
        swift_arrayDestroy(v33, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v33, -1LL, -1LL);
        swift_slowDealloc(v32, -1LL, -1LL);
      }

      unint64_t v34 = sub_100187014();
      uint64_t v35 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v34, 0LL, 0LL);
      *(_DWORD *)uint64_t v36 = 10;
      *(void *)(v36 + 8) = 0xD000000000000021LL;
      *(void *)(v36 + swift_weakDestroy(v0 + 16) = 0x8000000100506C40LL;
      swift_willThrow(v35);
      sub_100189B20(v11, v13);
      sub_100189B0C(0LL, 0xF000000000000000LL);
      *(void *)(v0 + 2sub_100195658(v0 + 32) = v35;
      swift_errorRetain(v35);
      uint64_t v3 = sub_100183098(&qword_100645710);
      if (swift_dynamicCast(v0 + 184, v0 + 232, v3, &type metadata for SFAuthenticationErrorMessage, 0LL))
      {
        swift_errorRelease(v35);
        uint64_t v4 = *(const char **)(v0 + 200);
        sub_10023C300(*(_DWORD *)(v0 + 184), *(void *)(v0 + 192), v4);
        swift_bridgeObjectRelease(v4);
        uint64_t v5 = *(void *)(v0 + 232);
      }

      else
      {
        swift_errorRelease(*(void *)(v0 + 232));
        *(void *)(v0 + 248) = v35;
        swift_errorRetain(v35);
        type metadata accessor for SFAuthenticationError(0LL);
        if (swift_dynamicCast(v0 + 360, v0 + 248, v3, v10, 0LL))
        {
          swift_errorRelease(v35);
          sub_10023C300(*(_DWORD *)(v0 + 360), 0LL, (const char *)0xE000000000000000LL);
          uint64_t v5 = *v2;
        }

        else
        {
          swift_errorRelease(*v2);
          sub_10023C300(10, 0LL, (const char *)0xE000000000000000LL);
          uint64_t v5 = v35;
        }
      }

      swift_errorRelease(v5);
    }

    uint64_t v27 = *(void *)(v0 + 288);
    swift_task_dealloc(*(void *)(v0 + 312));
    swift_task_dealloc(v27);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession);
    *(void *)(v0 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v6;
    uint64_t v7 = dword_100655ECC;
    swift_retain(v6);
    uint64_t v8 = (void *)swift_task_alloc(v7);
    *(void *)(v0 + 328) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10023B4A4;
    return sub_100448120();
  }

uint64_t sub_10023B4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  uint64_t v7 = *(void *)(*(void *)v3 + 328LL);
  *(void *)(*(void *)v3 + 336LL) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    uint64_t v8 = sub_10023BA7C;
  }

  else
  {
    swift_release(v6[40]);
    v6[43] = a2;
    v6[44] = a1;
    uint64_t v8 = sub_10023B524;
  }

  return swift_task_switch(v8, 0LL, 0LL);
}

uint64_t sub_10023B524()
{
  uint64_t v1 = (uint64_t *)(v0 + 248);
  unint64_t v3 = *(void *)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 336);
  uint64_t v5 = sub_10023BBC0(v2, v3);
  uint64_t v7 = v4;
  if (!v4)
  {
    uint64_t v12 = v5;
    unint64_t v13 = v6;
    uint64_t v14 = *(void *)(v0 + 264) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
    swift_beginAccess(v14, v0 + 208, 0LL, 0LL);
    sub_1001915A4(v14, v0 + 64, &qword_100654080);
    if (*(void *)(v0 + 88))
    {
      uint64_t v36 = *(void *)(v0 + 312);
      uint64_t v15 = *(void *)(v0 + 288);
      uint64_t v38 = *(void *)(v0 + 304);
      uint64_t v39 = *(void *)(v0 + 296);
      uint64_t v16 = *(void *)(v0 + 272);
      uint64_t v37 = *(void *)(v0 + 280);
      uint64_t v17 = *(void **)(v0 + 264);
      sub_1001CE0D0((__int128 *)(v0 + 64), v0 + 144);
      sub_10019A6C4(v0 + 144, v0 + 104);
      unint64_t v18 = (void *)swift_allocObject(&unk_1005D6448, 80LL, 7LL);
      v18[2] = v17;
      uint64_t v18[3] = v12;
      v18[4] = v13;
      sub_1001CE0D0((__int128 *)(v0 + 104), (uint64_t)(v18 + 5));
      *(void *)(v0 + 48) = sub_10023F510;
      *(void *)(v0 + 56) = v18;
      *(void *)(v0 + swift_weakDestroy(v0 + 16) = _NSConcreteStackBlock;
      *(void *)(v0 + 24) = 1107296256LL;
      *(void *)(v0 + sub_100195658(v0 + 32) = sub_1001B9FE4;
      *(void *)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = &unk_1005D6460;
      id v19 = _Block_copy((const void *)(v0 + 16));
      id v20 = v17;
      uint64_t v21 = sub_10019BA8C(v12, v13);
      static DispatchQoS.unspecified.getter(v21);
      *(void *)(v0 + 256) = _swiftEmptyArrayStorage;
      uint64_t v22 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      uint64_t v23 = sub_100183098((uint64_t *)&unk_1006460D0);
      unint64_t v24 = sub_1001D228C();
      dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 256, v23, v24, v16, v22);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v36, v15, v19);
      _Block_release(v19);
      sub_100189B0C(v2, v3);
      sub_100189B20(v12, v13);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v15, v16);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v39);
      sub_10018709C((void *)(v0 + 144));
      swift_release(*(void *)(v0 + 56));
      goto LABEL_10;
    }

    sub_100187100(v0 + 64, &qword_100654080);
    if (qword_100644038 != -1) {
      swift_once(&qword_100644038, sub_10023A648);
    }
    uint64_t v27 = type metadata accessor for Logger(0LL);
    uint64_t v28 = sub_100186DE4(v27, (uint64_t)qword_100649978);
    uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v30 = static os_log_type_t.error.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      os_log_type_t v31 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      unint64_t v40 = v13;
      uint64_t v41 = swift_slowAlloc(32LL, -1LL);
      uint64_t v32 = v41;
      *(_DWORD *)os_log_type_t v31 = 136315138;
      *(void *)(v0 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10018CDB4(0xD000000000000021LL, 0x8000000100506C40LL, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 248, v31 + 4, v31 + 12);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s", v31, 0xCu);
      swift_arrayDestroy(v32, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v33 = v32;
      unint64_t v13 = v40;
      swift_slowDealloc(v33, -1LL, -1LL);
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    unint64_t v34 = sub_100187014();
    uint64_t v7 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v34, 0LL, 0LL);
    *(_DWORD *)uint64_t v35 = 10;
    *(void *)(v35 + 8) = 0xD000000000000021LL;
    *(void *)(v35 + swift_weakDestroy(v0 + 16) = 0x8000000100506C40LL;
    swift_willThrow(v7);
    sub_100189B20(v12, v13);
  }

  sub_100189B0C(v2, v3);
  *(void *)(v0 + 2sub_100195658(v0 + 32) = v7;
  swift_errorRetain(v7);
  uint64_t v8 = sub_100183098(&qword_100645710);
  if (swift_dynamicCast(v0 + 184, v0 + 232, v8, &type metadata for SFAuthenticationErrorMessage, 0LL))
  {
    swift_errorRelease(v7);
    id v9 = *(const char **)(v0 + 200);
    sub_10023C300(*(_DWORD *)(v0 + 184), *(void *)(v0 + 192), v9);
    swift_bridgeObjectRelease(v9);
    uint64_t v10 = *(void *)(v0 + 232);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 232));
    *(void *)(v0 + 248) = v7;
    swift_errorRetain(v7);
    type metadata accessor for SFAuthenticationError(0LL);
    if (swift_dynamicCast(v0 + 360, v0 + 248, v8, v11, 0LL))
    {
      swift_errorRelease(v7);
      sub_10023C300(*(_DWORD *)(v0 + 360), 0LL, (const char *)0xE000000000000000LL);
      uint64_t v10 = *v1;
    }

    else
    {
      swift_errorRelease(*v1);
      sub_10023C300(10, 0LL, (const char *)0xE000000000000000LL);
      uint64_t v10 = v7;
    }
  }

  swift_errorRelease(v10);
LABEL_10:
  uint64_t v25 = *(void *)(v0 + 288);
  swift_task_dealloc(*(void *)(v0 + 312));
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023BA7C()
{
  uint64_t v1 = *(void *)(v0 + 336);
  *(void *)(v0 + 2sub_100195658(v0 + 32) = v1;
  swift_errorRetain(v1);
  uint64_t v2 = sub_100183098(&qword_100645710);
  if ((swift_dynamicCast(v0 + 184, v0 + 232, v2, &type metadata for SFAuthenticationErrorMessage, 0LL) & 1) != 0)
  {
    swift_errorRelease(v1);
    unint64_t v3 = *(const char **)(v0 + 200);
    sub_10023C300(*(_DWORD *)(v0 + 184), *(void *)(v0 + 192), v3);
    swift_bridgeObjectRelease(v3);
    uint64_t v4 = *(void *)(v0 + 232);
  }

  else
  {
    uint64_t v5 = (void *)(v0 + 248);
    swift_errorRelease(*(void *)(v0 + 232));
    *(void *)(v0 + 248) = v1;
    swift_errorRetain(v1);
    type metadata accessor for SFAuthenticationError(0LL);
    if (swift_dynamicCast(v0 + 360, v0 + 248, v2, v6, 0LL))
    {
      swift_errorRelease(v1);
      sub_10023C300(*(_DWORD *)(v0 + 360), 0LL, (const char *)0xE000000000000000LL);
      uint64_t v4 = *v5;
    }

    else
    {
      swift_errorRelease(*v5);
      sub_10023C300(10, 0LL, (const char *)0xE000000000000000LL);
      uint64_t v4 = v1;
    }
  }

  swift_errorRelease(v4);
  uint64_t v7 = *(void *)(v0 + 288);
  swift_task_dealloc(*(void *)(v0 + 312));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023BBC0(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  id v5 = [objc_allocWithZone((Class)SDAuthenticationPairingRequest) init];
  uint64_t v6 = v5;
  if (!v5)
  {
LABEL_7:
    if (qword_100644038 != -1) {
      swift_once(&qword_100644038, sub_10023A648);
    }
    uint64_t v13 = type metadata accessor for Logger(0LL);
    uint64_t v14 = (uint8_t *)sub_100186DE4(v13, (uint64_t)qword_100649978);
    id v15 = v6;
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v34 = v14;
      unint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      id v19 = (void *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)unint64_t v18 = 138412290;
      if (v6)
      {
        uint64_t v36 = (uint64_t)v15;
        id v20 = v15;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v18 + 4, v18 + 12);
        uint64_t v21 = v6;
      }

      else
      {
        uint64_t v36 = 0LL;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v18 + 4, v18 + 12);
        uint64_t v21 = 0LL;
      }

      *id v19 = v21;

      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Generated pairing request %@", v18, 0xCu);
      uint64_t v23 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v19, 1LL, v23);
      swift_slowDealloc(v19, -1LL, -1LL);
      swift_slowDealloc(v18, -1LL, -1LL);

      uint64_t v14 = v34;
      if (!v6) {
        goto LABEL_18;
      }
    }

    else
    {

      if (!v6) {
        goto LABEL_18;
      }
    }

    id v22 = [v15 data];
    if (v22)
    {
      unint64_t v24 = v22;
      uint64_t v14 = (uint8_t *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v22);

      return (uint64_t)v14;
    }

uint64_t sub_10023C084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate, v21, 0LL, 0LL);
  sub_1001915A4(v8, (uint64_t)&v22, &qword_100650630);
  if (v23)
  {
    sub_1001CE0D0(&v22, (uint64_t)v24);
    if (qword_100644038 != -1) {
      swift_once(&qword_100644038, sub_10023A648);
    }
    uint64_t v9 = type metadata accessor for Logger(0LL);
    uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_100649978);
    id v11 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Sending authentication pairing request", v13, 2u);
      swift_slowDealloc(v13, -1LL, -1LL);
    }

    sub_10019A708(v24, v24[3]);
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI) == 1) {
      char v14 = *(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_armingUITransportType);
    }
    else {
      char v14 = sub_10034E9D8(*(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));
    }
    sub_1004777F4(a2, a3, a4, 3LL, v14);
    sub_10018709C(v24);
  }

  else
  {
    sub_100187100((uint64_t)&v22, &qword_100650630);
    if (qword_100644038 != -1) {
      swift_once(&qword_100644038, sub_10023A648);
    }
    uint64_t v15 = type metadata accessor for Logger(0LL);
    uint64_t v16 = sub_100186DE4(v15, (uint64_t)qword_100649978);
    os_log_type_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.error.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Warning: No delegate to send response to", v19, 2u);
      swift_slowDealloc(v19, -1LL, -1LL);
    }
  }

  return sub_10034E05C(0LL, 1);
}

uint64_t sub_10023C300(int a1, uint64_t a2, const char *a3)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  uint64_t v15 = swift_allocObject(&unk_1005D6498, 48LL, 7LL);
  *(void *)(v15 + swift_weakDestroy(v0 + 16) = v3;
  *(_DWORD *)(v15 + 24) = a1;
  *(void *)(v15 + sub_100195658(v0 + 32) = a2;
  *(void *)(v15 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a3;
  aBlock[4] = sub_10023F564;
  uint64_t v26 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1001B9FE4;
  aBlock[3] = &unk_1005D64B0;
  uint64_t v16 = _Block_copy(aBlock);
  os_log_type_t v17 = v3;
  uint64_t v18 = swift_bridgeObjectRetain(a3);
  static DispatchQoS.unspecified.getter(v18);
  unint64_t v24 = _swiftEmptyArrayStorage;
  uint64_t v19 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v20 = sub_100183098((uint64_t *)&unk_1006460D0);
  unint64_t v21 = sub_1001D228C();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v20, v21, v7, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release(v26);
}

void sub_10023C4F0(void *a1)
{
  uint64_t v2 = v1;
  if (qword_100644038 != -1) {
    swift_once(&qword_100644038, sub_10023A648);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = sub_100186DE4(v4, (uint64_t)qword_100649978);
  id v6 = a1;
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    unint64_t v136 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v9 = 138412290;
    *(void *)&__int128 v144 = v6;
    id v10 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, (char *)&v144 + 8, v9 + 4, v9 + 12);
    uint64_t v11 = v136;
    void *v136 = v6;

    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Handling authentication pairing response: %@", v9, 0xCu);
    uint64_t v12 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v11, 1LL, v12);
    swift_slowDealloc(v11, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  else
  {
  }

  sub_10034E730();
  if ([v6 hasErrorCode])
  {
    id v13 = [v6 errorCode];
    *(void *)&__int128 v144 = 0LL;
    *((void *)&v144 + sub_10022D314(2, 1) = 0xE000000000000000LL;
    _StringGuts.grow(_:)(32LL);
    swift_bridgeObjectRelease(*((const char **)&v144 + 1));
    *(void *)&__int128 v144 = 0xD00000000000001ELL;
    *((void *)&v144 + sub_10022D314(2, 1) = 0x8000000100506D60LL;
    id v14 = (id)SFAuthenticationErrorToString(v13);
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    os_log_type_t v17 = v16;

    v18._uint64_t countAndFlagsBits = v15;
    v18._object = v17;
    String.append(_:)(v18);
    swift_bridgeObjectRelease((const char *)v17);
    uint64_t v20 = *((void *)&v144 + 1);
    uint64_t v19 = v144;
    unint64_t v21 = sub_100187014();
    uint64_t v22 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v21, 0LL, 0LL);
    uint64_t v24 = v22;
    *(_DWORD *)uint64_t v23 = (_DWORD)v13;
LABEL_8:
    *(void *)(v23 + 8) = v19;
    *(void *)(v23 + swift_weakDestroy(v0 + 16) = v20;
LABEL_9:
    swift_willThrow(v22);
    goto LABEL_10;
  }

  uint64_t v27 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  if (*(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] != 8LL)
  {
LABEL_16:
    id v38 = [v6 token];
    if (!v38)
    {
      unint64_t v64 = sub_100187014();
      uint64_t v22 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v64, 0LL, 0LL);
      uint64_t v24 = v22;
      *(_DWORD *)uint64_t v65 = 10;
      strcpy((char *)(v65 + 8), "Missing token");
      *(_WORD *)(v65 + 22) = -4864;
      goto LABEL_9;
    }

    uint64_t v39 = v38;
    unint64_t v40 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v38);
    unint64_t v42 = v41;

    if (([v6 hasLongTermKey] & 1) == 0
      || *(void *)&v2[v27] == 8LL
      || (id v43 = [v6 longTermKey]) == 0)
    {
      uint64_t v63 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession];
      sub_10019BA8C((uint64_t)v40, v42);
      swift_retain();
      sub_10044A04C();
      uint64_t v81 = (void *)sub_100449978((uint64_t)v40, v42);
      sub_100189B20((uint64_t)v40, v42);
      swift_release(v63);
      goto LABEL_36;
    }

    unint64_t v44 = v43;
    uint64_t v45 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v43);
    unint64_t v47 = v46;

    uint64_t v48 = (char *)[(id)objc_opt_self(SDAutoUnlockAKSManager) sharedManager];
    unint64_t v134 = v47;
    unint64_t v135 = v45;
    unint64_t v136 = v40;
    v130[0] = v5;
    if (!v48)
    {
LABEL_50:
      uint64_t v133 = v2;
      uint64_t v111 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession];
      id v132 = *(void **)(v111 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
      swift_retain();
      sub_10019BA8C(v45, v47);
      sub_10019BA8C((uint64_t)v40, v42);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      uint64_t v112 = *(void *)(v111 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
      uint64_t v113 = *(void *)(v111 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
      uint64_t v114 = sub_10019A708( (void *)(v111 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice),  v112);
      v130[1] = v130;
      uint64_t v115 = *(void *)(v112 - 8);
      __chkstk_darwin(v114);
      uint64_t v117 = (char *)v130 - v116;
      (*(void (**)(char *))(v115 + 16))((char *)v130 - v116);
      (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v112, v113);
      uint64_t v119 = v118;
      (*(void (**)(char *, uint64_t))(v115 + 8))(v117, v112);
      if (v119)
      {
        NSString v121 = String._bridgeToObjectiveC()();
        *(void *)&double v120 = swift_bridgeObjectRelease(v119).n128_u64[0];
      }

      else
      {
        NSString v121 = 0LL;
      }

      Class v122 = isa;
      objc_msgSend(v132, "signAndStoreRemoteLTK:forDeviceID:", isa, v121, v120, v130[0]);

      sub_1004494C8();
      uint64_t v2 = v133;
      unint64_t v40 = v136;
      uint64_t v81 = (void *)sub_100449978((uint64_t)v136, v42);
      uint64_t v125 = v135;
      unint64_t v126 = v134;
      sub_100189B20(v135, v134);
      sub_100189B20((uint64_t)v40, v42);
      sub_100189B20(v125, v126);
      swift_release(v111);
LABEL_36:
      id v82 = [v6 hasRequestArmingUI];
      if ((_DWORD)v82)
      {
        uint64_t v83 = (os_log_s *)Logger.logObject.getter(v82);
        os_log_type_t v84 = static os_log_type_t.default.getter(v83);
        if (os_log_type_enabled(v83, v84))
        {
          os_log_type_t v85 = v81;
          uint64_t v86 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v86 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v83,  v84,  "Got request to show arming UI on successful registration",  v86,  2u);
          uint64_t v87 = v86;
          uint64_t v81 = v85;
          swift_slowDealloc(v87, -1LL, -1LL);
        }

        unsigned __int8 v88 = [v6 requestArmingUI];
        v2[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI] = v88;
      }

      id v89 = [objc_allocWithZone((Class)SDAuthenticationPairingCreateSecret) init];
      if (v89)
      {
        uint64_t v90 = v89;
        UUID.uuidString.getter(v89);
        uint64_t v91 = v81;
        uint64_t v93 = v92;
        NSString v94 = String._bridgeToObjectiveC()();
        objc_msgSend(v90, "setSessionID:", v94, swift_bridgeObjectRelease(v93).n128_f64[0]);

        [v90 setToken:v91];
        id v95 = [v90 data];
        if (v95)
        {
          uint64_t v96 = v95;
          unint64_t v136 = v40;
          unint64_t v135 = v42;
          uint64_t v97 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v95);
          unint64_t v99 = v98;

          uint64_t v100 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
          swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v141, 0LL, 0LL);
          sub_1001915A4(v100, (uint64_t)v142, &qword_100654080);
          *(void *)&__int128 v139 = 0LL;
          *((void *)&v139 + sub_10022D314(2, 1) = 0xE000000000000000LL;
          _StringGuts.grow(_:)(30LL);
          swift_bridgeObjectRelease(*((const char **)&v139 + 1));
          *(void *)&__int128 v139 = 0xD00000000000001CLL;
          *((void *)&v139 + sub_10022D314(2, 1) = 0x8000000100506D20LL;
          uint64_t v101 = type metadata accessor for UUID(0LL);
          uint64_t v102 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
          v103._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v101, v102);
          object = (const char *)v103._object;
          String.append(_:)(v103);
          swift_bridgeObjectRelease(object);
          __int128 v105 = v139;
          sub_1001915A4((uint64_t)v142, (uint64_t)&v139, &qword_100654080);
          if (v140)
          {
            sub_1001CE0D0(&v139, (uint64_t)&v144);
            sub_100187100((uint64_t)v142, &qword_100654080);
            swift_bridgeObjectRelease(*((const char **)&v105 + 1));
            uint64_t v106 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
            swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v138, 0LL, 0LL);
            sub_1001915A4(v106, (uint64_t)v142, &qword_100650630);
            if (v143)
            {
              sub_10019A6C4((uint64_t)v142, (uint64_t)&v139);
              sub_100187100((uint64_t)v142, &qword_100650630);
              sub_10019A708(&v139, v140);
              if (v2[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI] == 1) {
                char v107 = v2[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_armingUITransportType];
              }
              else {
                char v107 = sub_10034E9D8(*(void *)&v2[v27]);
              }
              sub_1004777F4(v97, v99, (uint64_t)&v144, 6LL, v107);
              sub_10018709C(&v139);
            }

            else
            {
              sub_100187100((uint64_t)v142, &qword_100650630);
            }

            sub_10034E05C(0LL, 1);
            sub_100189B20(v97, v99);

            sub_100189B20((uint64_t)v136, v135);
            sub_10018709C(&v144);
            return;
          }

          sub_100187100((uint64_t)&v139, &qword_100654080);
          unint64_t v127 = sub_100187014();
          uint64_t v24 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v127, 0LL, 0LL);
          *(_DWORD *)uint64_t v128 = 10;
          *(_OWORD *)(v128 + 8) = v105;
          swift_bridgeObjectRetain(*((const char **)&v105 + 1));
          swift_willThrow(v129);
          sub_100187100((uint64_t)v142, &qword_100654080);

          sub_100189B20((uint64_t)v136, v135);
          swift_bridgeObjectRelease(*((const char **)&v105 + 1));

          sub_100189B20(v97, v99);
        }

        else
        {
          unint64_t v123 = sub_100187014();
          uint64_t v24 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v123, 0LL, 0LL);
          *(_DWORD *)uint64_t v124 = 10;
          *(void *)(v124 + 8) = 0xD000000000000020LL;
          *(void *)(v124 + swift_weakDestroy(v0 + 16) = 0x8000000100506C70LL;
          swift_willThrow(v24);
          sub_100189B20((uint64_t)v40, v42);
        }
      }

      else
      {
        unint64_t v108 = sub_100187014();
        uint64_t v24 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v108, 0LL, 0LL);
        *(_DWORD *)uint64_t v109 = 10;
        *(void *)(v109 + 8) = 0xD00000000000002FLL;
        *(void *)(v109 + swift_weakDestroy(v0 + 16) = 0x8000000100506CF0LL;
        swift_willThrow(v24);
        sub_100189B20((uint64_t)v40, v42);
      }

uint64_t sub_10023D538(void *a1)
{
  if (qword_100644038 != -1) {
    swift_once(&qword_100644038, sub_10023A648);
  }
  uint64_t v3 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v3, (uint64_t)qword_100649978);
  id v4 = a1;
  id v5 = v1;
  id v6 = v4;
  uint64_t v7 = (char *)v5;
  os_log_type_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc(22LL, -1LL);
    uint64_t v11 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v35 = swift_slowAlloc(32LL, -1LL);
    uint64_t v36 = (uint64_t)v6;
    v39[0] = v35;
    *(_DWORD *)uint64_t v10 = 138412546;
    id v12 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37, v10 + 4, v10 + 12);
    void *v11 = v6;

    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v14 = UUID.uuidString.getter(v13);
    uint64_t v16 = (const char *)v15;
    uint64_t v36 = sub_10018CDB4(v14, v15, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37, v10 + 14, v10 + 22);

    swift_bridgeObjectRelease(v16);
    _os_log_impl( (void *)&_mh_execute_header,  v8,  v9,  "Received authentication pairing create record: %@ for sessionID %s",  (uint8_t *)v10,  0x16u);
    uint64_t v17 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v11, 1LL, v17);
    swift_slowDealloc(v11, -1LL, -1LL);
    swift_arrayDestroy(v35, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  else
  {
  }

  sub_10034E730();
  id v18 = [v6 token];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v18);
    uint64_t v22 = v21;

    unsigned __int8 v23 = [v6 requestArmingUI];
    v7[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI] = v23;
    uint64_t v24 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
    if (*(void *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] == 8LL) {
      sub_10023E20C(v20, v22);
    }
    else {
      sub_10023DA30(v20, (unint64_t)v22);
    }
    if (*(void *)&v7[v24] == 5LL)
    {
      LOBYTE(v39[0]) = 1;
      sub_10023E500(0x100000000uLL);
    }

    uint64_t v32 = (uint64_t)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess(&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v38, 0LL, 0LL);
    sub_1001915A4(v32, (uint64_t)v39, &qword_100650630);
    if (v41)
    {
      sub_10019A6C4((uint64_t)v39, (uint64_t)&v36);
      sub_100187100((uint64_t)v39, &qword_100650630);
      unint64_t v33 = (char *)*sub_10019A708(&v36, v37[2]);
      unint64_t v34 = v7;
      sub_10033ABA0(v34, v33);
      sub_100189B20(v20, (unint64_t)v22);

      return sub_10018709C(&v36);
    }

    else
    {
      sub_100189B20(v20, (unint64_t)v22);
      return sub_100187100((uint64_t)v39, &qword_100650630);
    }
  }

  else
  {
    unint64_t v25 = sub_100187014();
    uint64_t v26 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v25, 0LL, 0LL);
    *(_DWORD *)uint64_t v27 = 10;
    *(void *)(v27 + 8) = 0xD00000000000002BLL;
    *(void *)(v27 + swift_weakDestroy(v0 + 16) = 0x8000000100506D80LL;
    swift_willThrow(v26);
    uint64_t v36 = v26;
    swift_errorRetain(v26);
    uint64_t v28 = sub_100183098(&qword_100645710);
    if (swift_dynamicCast(v39, &v36, v28, &type metadata for SFAuthenticationErrorMessage, 0LL))
    {
      swift_errorRelease(v26);
      uint64_t v29 = v40;
      sub_10023C300(v39[0], v39[1], v40);
      swift_bridgeObjectRelease(v29);
      return swift_errorRelease(v36);
    }

    else
    {
      swift_errorRelease(v36);
      v39[0] = v26;
      swift_errorRetain(v26);
      type metadata accessor for SFAuthenticationError(0LL);
      if (swift_dynamicCast(&v36, v39, v28, v31, 0LL))
      {
        swift_errorRelease(v26);
        sub_10023C300(v36, 0LL, (const char *)0xE000000000000000LL);
        return swift_errorRelease(v39[0]);
      }

      else
      {
        swift_errorRelease(v39[0]);
        sub_10023C300(10, 0LL, (const char *)0xE000000000000000LL);
        return swift_errorRelease(v26);
      }
    }
  }

void sub_10023DA30(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v75 = type metadata accessor for UUID(0LL);
  uint64_t v8 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v10 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = *(void *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession);
  unint64_t v15 = *(void **)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_passcode);
  uint64_t v16 = *(void **)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_passcode + 8);
  swift_retain();
  sub_100448320(a1, a2, v15, v16);
  swift_release(v14);
  if (v4) {
    return;
  }
  uint64_t v67 = v10;
  id v17 = [(id)objc_opt_self(SDAutoUnlockTransport) sharedTransport];
  if (!v17)
  {
    __break(1u);
    return;
  }

  id v18 = v17;
  uint64_t v19 = v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
  swift_beginAccess(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice, v70, 0LL, 0LL);
  sub_1001915A4(v19, (uint64_t)&v71, &qword_100654080);
  if (v73)
  {
    uint64_t v20 = sub_100183098((uint64_t *)&unk_1006540D0);
    uint64_t v21 = sub_100183168(0LL, (unint64_t *)&qword_10064D810, &OBJC_CLASS___IDSDevice_ptr);
    else {
      uint64_t v22 = 0LL;
    }
  }

  else
  {
    sub_100187100((uint64_t)&v71, &qword_100654080);
    uint64_t v22 = 0LL;
  }

  v65[1] = 0LL;
  id v23 = [v18 autoUnlockDeviceForIDSDevice:v22 cloudPaired:0 cached:0];

  id v71 = 0LL;
  v72[0] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(26LL);
  unint64_t v68 = v71;
  Swift::String v69 = (const char *)v72[0];
  v24._uint64_t countAndFlagsBits = 0x6369766544534449LL;
  v24._object = (void *)0xED00002044492065LL;
  String.append(_:)(v24);
  sub_1001915A4(v19, (uint64_t)&v71, &qword_100654080);
  uint64_t v25 = v73;
  if (v73)
  {
    uint64_t v26 = v74;
    uint64_t v27 = sub_10019A708(&v71, v73);
    uint64_t v66 = v8;
    uint64_t v28 = *(void *)(v25 - 8);
    __chkstk_darwin(v27);
    id v30 = (char *)v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v28 + 16))(v30);
    sub_100187100((uint64_t)&v71, &qword_100654080);
    uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
    unint64_t v33 = v32;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v25);
    uint64_t v8 = v66;
  }

  else
  {
    sub_100187100((uint64_t)&v71, &qword_100654080);
    uint64_t v31 = 0LL;
    unint64_t v33 = 0LL;
  }

  unint64_t v34 = v67;
  id v71 = (id)v31;
  v72[0] = v33;
  DefaultStringInterpolation.appendInterpolation<A>(_:)( &v71,  &type metadata for String,  &protocol witness table for String);
  swift_bridgeObjectRelease(v33);
  v35._uint64_t countAndFlagsBits = 0x756F6620746F6E20LL;
  v35._object = (void *)0xEB000000002E646ELL;
  String.append(_:)(v35);
  uint64_t v36 = v69;
  if (!v23)
  {
    unint64_t v50 = v68;
    unint64_t v51 = sub_100187014();
    uint64_t v52 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v51, 0LL, 0LL);
    *(_DWORD *)uint64_t v53 = 10;
    *(void *)(v53 + 8) = v50;
    *(void *)(v53 + swift_weakDestroy(v0 + 16) = v36;
    swift_willThrow(v52);
    return;
  }

  if (objc_msgSend(v23, "unlockEnabled", swift_bridgeObjectRelease(v69).n128_f64[0]))
  {
    id v37 = [v23 bluetoothID];
    if (v37)
    {
      id v38 = v37;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v37);

      uint64_t v39 = v34;
      uint64_t v40 = v75;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v39, v75);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0LL, 1LL, v40);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1LL, v40) != 1)
      {
        sub_100187100((uint64_t)v13, &qword_10064DA60);
        if (qword_100644038 != -1) {
          swift_once(&qword_100644038, sub_10023A648);
        }
        uint64_t v41 = type metadata accessor for Logger(0LL);
        sub_100186DE4(v41, (uint64_t)qword_100649978);
        id v42 = v23;
        id v43 = (os_log_s *)Logger.logObject.getter(v42);
        os_log_type_t v44 = static os_log_type_t.default.getter(v43);
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v75 = (uint64_t)v23;
          uint64_t v45 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          unint64_t v46 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
          *(_DWORD *)uint64_t v45 = 138412290;
          id v71 = v42;
          id v47 = v42;
          id v48 = v42;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v45 + 4, v45 + 12);
          *unint64_t v46 = v75;

          id v42 = v47;
          _os_log_impl((void *)&_mh_execute_header, v43, v44, "Enabled for device: %@", v45, 0xCu);
          uint64_t v49 = sub_100183098(&qword_1006454E0);
          swift_arrayDestroy(v46, 1LL, v49);
          swift_slowDealloc(v46, -1LL, -1LL);
          swift_slowDealloc(v45, -1LL, -1LL);
        }

        else
        {

          id v43 = (os_log_s *)v42;
        }

        if (qword_100644410 != -1) {
          swift_once(&qword_100644410, sub_10045862C);
        }
        if (qword_100669A30) {
          sub_100458200();
        }

        return;
      }
    }

    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1LL, 1LL, v75);
    }

    sub_100187100((uint64_t)v13, &qword_10064DA60);
  }

  if (qword_100644038 != -1) {
    swift_once(&qword_100644038, sub_10023A648);
  }
  uint64_t v54 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v54, (uint64_t)qword_100649978);
  id v55 = v23;
  uint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
  os_log_type_t v57 = static os_log_type_t.error.getter(v56);
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v75 = (uint64_t)v23;
    uint64_t v58 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v59 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v58 = 138412290;
    id v71 = v55;
    id v60 = v55;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v58 + 4, v58 + 12);
    *uint64_t v59 = v75;

    _os_log_impl((void *)&_mh_execute_header, v56, v57, "Device not enabled: %@", v58, 0xCu);
    uint64_t v61 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v59, 1LL, v61);
    swift_slowDealloc(v59, -1LL, -1LL);
    swift_slowDealloc(v58, -1LL, -1LL);
  }

  else
  {

    uint64_t v56 = (os_log_s *)v55;
  }

  unint64_t v62 = sub_100187014();
  uint64_t v63 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v62, 0LL, 0LL);
  *(_DWORD *)uint64_t v64 = 10;
  *(void *)(v64 + 8) = 0xD000000000000032LL;
  *(void *)(v64 + swift_weakDestroy(v0 + 16) = 0x8000000100506DB0LL;
  swift_willThrow(v63);
}

void sub_10023E20C(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession];
  swift_retain();
  id v8 = sub_1004488A0(a1, a2);
  swift_release(v7);
  if (!v3)
  {

    if (qword_100644038 != -1) {
      swift_once(&qword_100644038, sub_10023A648);
    }
    uint64_t v9 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v9, (uint64_t)qword_100649978);
    uint64_t v10 = v4;
    uint64_t v11 = (void *)Logger.logObject.getter(v10);
    LODWORD(v12) = static os_log_type_t.default.getter(v11);
    if (!os_log_type_enabled((os_log_t)v11, (os_log_type_t)v12))
    {

      return;
    }

    uint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v27 = swift_slowAlloc(32LL, -1LL);
    uint64_t v33 = v27;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v14 = (uint64_t)&v10[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
    swift_beginAccess(&v10[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v28, 0LL, 0LL);
    sub_1001915A4(v14, (uint64_t)&v29, &qword_100654080);
    uint64_t v15 = v31;
    if (v31)
    {
      uint64_t v16 = v32;
      id v17 = sub_10019A708(&v29, v31);
      v25[1] = v25;
      int v26 = v12;
      uint64_t v12 = *(void *)(v15 - 8);
      __chkstk_darwin(v17);
      uint64_t v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v12 + 16))(v19);
      sub_100187100((uint64_t)&v29, &qword_100654080);
      uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
      uint64_t v22 = v21;
      id v23 = *(void (**)(char *, uint64_t))(v12 + 8);
      LOBYTE(v12) = v26;
      v23(v19, v15);
      if (v22)
      {
LABEL_11:
        uint64_t v24 = v27;
        uint64_t v29 = sub_10018CDB4(v20, (unint64_t)v22, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v13 + 4, v13 + 12);

        swift_bridgeObjectRelease(v22);
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v11,  (os_log_type_t)v12,  "Finalized Registration for device %s",  v13,  0xCu);
        swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v24, -1LL, -1LL);
        swift_slowDealloc(v13, -1LL, -1LL);

        return;
      }
    }

    else
    {
      sub_100187100((uint64_t)&v29, &qword_100654080);
    }

    swift_bridgeObjectRelease(0LL);
    uint64_t v22 = (const char *)0xE90000000000003ELL;
    uint64_t v20 = 0x676E697373696D3CLL;
    goto LABEL_11;
  }

void sub_10023E500(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  id v8 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  uint64_t v10 = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_25:
    swift_once(&qword_100644038, sub_10023A648);
LABEL_12:
    uint64_t v30 = type metadata accessor for Logger(0LL);
    uint64_t v31 = sub_100186DE4(v30, (uint64_t)qword_100649978);
    uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
    os_log_type_t v33 = static os_log_type_t.error.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      unint64_t v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Error converting confirmation to data", v34, 2u);
      swift_slowDealloc(v34, -1LL, -1LL);
    }

    else
    {
    }

    return;
  }

  id v11 = [objc_allocWithZone((Class)SDAuthenticationConfirmation) init];
  uint64_t v10 = (uint64_t)v11;
  if (!v11)
  {
    [0 setSuccess:HIDWORD(a1) & 1];
    goto LABEL_11;
  }

  [v11 setVersion:1];
  id v12 = (id)v10;
  UUID.uuidString.getter(v12);
  uint64_t v14 = v13;
  NSString v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setSessionID:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  [v12 setSuccess:HIDWORD(a1) & 1];
  if ((a1 & 0x100000000LL) == 0) {
    [v12 setErrorCode:a1];
  }
  id v16 = [v12 data];
  if (!v16)
  {
LABEL_11:
    if (qword_100644038 == -1) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }

  id v17 = v16;
  uint64_t v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v16);
  unint64_t v20 = v19;

  if (qword_100644038 != -1) {
    swift_once(&qword_100644038, sub_10023A648);
  }
  uint64_t v21 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v21, (uint64_t)qword_100649978);
  id v22 = v12;
  id v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    unint64_t v42 = v20;
    uint64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v40 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v25 = 138412290;
    id v48 = v22;
    id v26 = v22;
    id v41 = v22;
    id v27 = v26;
    unint64_t v20 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49, v25 + 4, v25 + 12);
    uint64_t v28 = v40;
    *uint64_t v40 = v10;

    id v22 = v41;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Sending confirmation: %@", v25, 0xCu);
    uint64_t v29 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v28, 1LL, v29);
    swift_slowDealloc(v28, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  else
  {

    id v23 = (os_log_s *)v22;
  }

  uint64_t v35 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
  swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice, v45, 0LL, 0LL);
  sub_1001915A4(v35, (uint64_t)&v46, &qword_100654080);
  if (v47)
  {
    sub_1001CE0D0(&v46, (uint64_t)&v48);
    uint64_t v36 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
    swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate, v44, 0LL, 0LL);
    sub_1001915A4(v36, (uint64_t)&v46, &qword_100650630);
    if (v47)
    {
      sub_10019A6C4((uint64_t)&v46, (uint64_t)v43);
      sub_100187100((uint64_t)&v46, &qword_100650630);
      sub_10019A708(v43, v43[3]);
      sub_1004641AC( v18,  v20,  (uint64_t)&v48,  2LL,  *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));
      sub_100189B20(v18, v20);

      sub_10018709C(&v48);
      sub_10018709C(v43);
      return;
    }

    sub_10018709C(&v48);

    sub_100189B20(v18, v20);
    id v38 = &v46;
  }

  else
  {
    sub_100187100((uint64_t)&v46, &qword_100654080);
    uint64_t v37 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
    swift_beginAccess(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate, v43, 0LL, 0LL);
    sub_1001915A4(v37, (uint64_t)&v48, &qword_100650630);
    if (v49[2])
    {
      sub_10019A6C4((uint64_t)&v48, (uint64_t)&v46);
      sub_100187100((uint64_t)&v48, &qword_100650630);
      sub_10019A708(&v46, v47);
      sub_1004775FC(v18, v20, 2LL, *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));

      sub_100189B20(v18, v20);
      sub_10018709C(&v46);
      return;
    }

    sub_100189B20(v18, v20);
    id v38 = (__int128 *)&v48;
  }

  sub_100187100((uint64_t)v38, &qword_100650630);
}

uint64_t sub_10023EB10()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (qword_100644038 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644038, sub_10023A648);
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v7, (uint64_t)qword_100649978);
  id v8 = v0;
  id v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v12 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)id v11 = 136315138;
    uint64_t v20 = v12;
    uint64_t v13 = type metadata accessor for UUID(0LL);
    uint64_t v14 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter(v13, v14);
    id v17 = (const char *)v16;
    uint64_t v19 = sub_10018CDB4(v15, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v11 + 4, v11 + 12);

    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Response timer fired for %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  else
  {
  }

  sub_10023C300(12, 0xD000000000000026LL, (const char *)0x8000000100506DF0LL);
  return sub_10034E730();
}

uint64_t sub_10023EDA0(char *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6 = a2;
  uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  unint64_t v9 = *(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  Swift::UInt8 v10 = SFDeviceClassCodeGet(a1, a2);
  id v11 = (const char *)sub_10034F1E0(v9);
  BOOL v12 = sub_1003A0760(8u, (uint64_t)v11);
  __n128 v13 = swift_bridgeObjectRelease(v11);
  if (v12)
  {
  }

  else
  {
    uint64_t v14 = (const char *)sub_10034F1E0(v9);
    BOOL v15 = sub_1003A0760(v10, (uint64_t)v14);
    swift_bridgeObjectRelease(v14);
    if (!v15) {
      goto LABEL_6;
    }
  }

  if (*(void *)&a1[v8] != 8LL) {
    goto LABEL_23;
  }
LABEL_6:
  id v16 = [objc_allocWithZone((Class)SDAuthenticationPairingResponse) init];
  id v17 = v16;
  if (v16)
  {
    [v16 setVersion:1];
    id v18 = v17;
    UUID.uuidString.getter(v18);
    uint64_t v20 = v19;
    NSString v21 = String._bridgeToObjectiveC()();
    objc_msgSend(v18, "setSessionID:", v21, swift_bridgeObjectRelease(v20).n128_f64[0]);

    [v18 setErrorCode:v6];
    id v22 = [v18 data];
    if (v22)
    {
      id v23 = v22;
      unsigned int v43 = v6;
      os_log_type_t v24 = a3;
      uint64_t v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v22);
      unint64_t v27 = v26;

      uint64_t v28 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
      swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v46, 0LL, 0LL);
      sub_1001915A4(v28, (uint64_t)&v47, &qword_100654080);
      if (v48)
      {
        sub_1001CE0D0(&v47, (uint64_t)&v49);
        uint64_t v29 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
        swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v45, 0LL, 0LL);
        sub_1001915A4(v29, (uint64_t)&v47, &qword_100650630);
        if (v48)
        {
          sub_10019A6C4((uint64_t)&v47, (uint64_t)v44);
          sub_100187100((uint64_t)&v47, &qword_100650630);
          sub_10019A708(v44, v44[3]);
          sub_1004641AC(v25, v27, (uint64_t)&v49, 4LL, *(void *)&a1[v8]);
          sub_100189B20(v25, v27);

          sub_10018709C(&v49);
          sub_10018709C(v44);
        }

        else
        {
          sub_10018709C(&v49);

          sub_100189B20(v25, v27);
          sub_100187100((uint64_t)&v47, &qword_100650630);
        }

        a3 = v24;
        goto LABEL_22;
      }

      sub_100189B20(v25, v27);
      sub_100187100((uint64_t)&v47, &qword_100654080);
      a3 = v24;
      uint64_t v6 = v43;
    }
  }

  uint64_t v42 = a4;
  if (qword_100644038 != -1) {
    swift_once(&qword_100644038, sub_10023A648);
  }
  uint64_t v30 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v30, (uint64_t)qword_100649978);
  id v31 = v17;
  uint64_t v32 = (void *)Logger.logObject.getter(v31);
  os_log_type_t v33 = static os_log_type_t.error.getter(v32);
  if (!os_log_type_enabled((os_log_t)v32, v33))
  {

    a4 = v42;
    goto LABEL_23;
  }

  unsigned int v43 = v6;
  unint64_t v34 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
  uint64_t v35 = (void *)swift_slowAlloc(8LL, -1LL);
  *(_DWORD *)unint64_t v34 = 138412290;
  if (v17)
  {
    id v49 = v31;
    id v36 = v31;
  }

  else
  {
    id v49 = 0LL;
  }

  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50, v34 + 4, v34 + 12);
  *uint64_t v35 = v17;

  _os_log_impl((void *)&_mh_execute_header, (os_log_t)v32, v33, "Could not convert response to data: %@", v34, 0xCu);
  uint64_t v37 = sub_100183098(&qword_1006454E0);
  swift_arrayDestroy(v35, 1LL, v37);
  swift_slowDealloc(v35, -1LL, -1LL);
  swift_slowDealloc(v34, -1LL, -1LL);

  a4 = v42;
LABEL_22:
  uint64_t v6 = v43;
LABEL_23:
  uint64_t v38 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v44, 0LL, 0LL);
  sub_1001915A4(v38, (uint64_t)&v49, &qword_100650630);
  if (!v50[2]) {
    return sub_100187100((uint64_t)&v49, &qword_100650630);
  }
  sub_10019A6C4((uint64_t)&v49, (uint64_t)&v47);
  sub_100187100((uint64_t)&v49, &qword_100650630);
  uint64_t v39 = *sub_10019A708(&v47, v48);
  uint64_t v40 = a1;
  sub_1002D8C90(v40, v6, a3, a4, v39);

  return sub_10018709C(&v47);
}

uint64_t sub_10023F2E8()
{
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_passcode
                                      + 8));
  return swift_release(*(void *)(v0
                                 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession));
}

uint64_t sub_10023F354()
{
  return type metadata accessor for SDAuthenticationPairingLockSession(0LL);
}

uint64_t type metadata accessor for SDAuthenticationPairingLockSession(uint64_t a1)
{
  uint64_t result = qword_1006499C8;
  if (!qword_1006499C8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationPairingLockSession);
  }
  return result;
}

uint64_t sub_10023F398(uint64_t a1)
{
  v2[0] = &unk_1004D0348;
  v2[1] = &unk_1004D0360;
  v2[2] = &unk_1004D0378;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_updateClassMetadata2(a1, 256LL, 4LL, v2, a1 + 264);
}

uint64_t sub_10023F3F8()
{
  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI);
}

uint64_t sub_10023F40C(uint64_t result)
{
  *(_BYTE *)(*v1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI) = result;
  return result;
}

uint64_t sub_10023F420()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_10023F44C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_1006499DC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1001943E8;
  return sub_10023AE60(a1, v4, v5, v6);
}

uint64_t sub_10023F4B8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10023F4DC()
{
  sub_100189B20(*(void *)(v0 + 24), *(void *)(v0 + 32));
  sub_10018709C((void *)(v0 + 40));
  return swift_deallocObject(v0, 80LL);
}

uint64_t sub_10023F510()
{
  return sub_10023C084(v0[2], v0[3], v0[4], (uint64_t)(v0 + 5));
}

uint64_t sub_10023F520(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + sub_100195658(v0 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10023F530(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10023F538()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_10023F564()
{
  return sub_10023EDA0(*(char **)(v0 + 16), *(unsigned int *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

unint64_t sub_10023F574()
{
  unint64_t result = qword_100645300;
  if (!qword_100645300)
  {
    uint64_t v1 = sub_100183168(255LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100645300);
  }

  return result;
}

void sub_10023F5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a2;
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 < 0) {
      uint64_t v3 = a1;
    }
    else {
      uint64_t v3 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain((const char *)a1);
    uint64_t v4 = __CocoaSet.makeIterator()(v3);
    uint64_t v5 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
    unint64_t v6 = sub_10023F574();
    uint64_t v7 = Set.Iterator.init(_cocoa:)(v60, v4, v5, v6);
    uint64_t v2 = v60[0];
    uint64_t v49 = v60[1];
    uint64_t v9 = v60[2];
    uint64_t v8 = v60[3];
    unint64_t v10 = v60[4];
  }

  else
  {
    uint64_t v11 = -1LL << *(_BYTE *)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 56);
    uint64_t v49 = a1 + 56;
    uint64_t v9 = ~v11;
    uint64_t v13 = -v11;
    if (v13 < 64) {
      uint64_t v14 = ~(-1LL << v13);
    }
    else {
      uint64_t v14 = -1LL;
    }
    unint64_t v10 = v14 & v12;
    swift_bridgeObjectRetain((const char *)a1);
    uint64_t v8 = 0LL;
  }

  uint64_t v47 = v2 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v45 = v9;
  int64_t v48 = (unint64_t)(v9 + 64) >> 6;
  __int128 v46 = (char *)&type metadata for Swift.AnyObject + 8;
  while (1)
  {
    unint64_t v15 = v10;
    uint64_t v16 = v8;
    if ((v2 & 0x8000000000000000LL) == 0) {
      break;
    }
    uint64_t v19 = __CocoaSet.Iterator.next()(v7);
    if (!v19) {
      goto LABEL_52;
    }
    uint64_t v20 = v19;
    uint64_t v61 = v19;
    uint64_t v21 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
    swift_unknownObjectRetain(v20);
    swift_dynamicCast(v57, &v61, v46, v21, 7LL);
    id v22 = (id)v57[0];
    swift_unknownObjectRelease(v20);
    uint64_t v8 = v16;
    if (!v22) {
      goto LABEL_52;
    }
LABEL_36:
    id v26 = objc_msgSend(v22, "uniqueID", v45);
    unint64_t v51 = v15;
    if (v26)
    {
      unint64_t v27 = v26;
      uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      uint64_t v29 = v28;
    }

    else
    {
      uint64_t v53 = 0LL;
      uint64_t v29 = 0LL;
    }

    uint64_t v30 = v52 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
    swift_beginAccess(v52 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice, v56, 0LL, 0LL);
    sub_1001915A4(v30, (uint64_t)v57, &qword_100654080);
    uint64_t v31 = v58;
    if (!v58)
    {
      sub_100187100((uint64_t)v57, &qword_100654080);
      if (!v29) {
        goto LABEL_49;
      }
      goto LABEL_12;
    }

    unint64_t v54 = v10;
    uint64_t v55 = v8;
    uint64_t v50 = v16;
    uint64_t v32 = v2;
    uint64_t v33 = v59;
    unint64_t v34 = sub_10019A708(v57, v58);
    uint64_t v35 = *(void *)(v31 - 8);
    __chkstk_darwin(v34);
    uint64_t v37 = (char *)&v45 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v35 + 16))(v37);
    sub_100187100((uint64_t)v57, &qword_100654080);
    uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v31, v33);
    uint64_t v40 = v39;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v31);
    if (v29)
    {
      uint64_t v2 = v32;
      unint64_t v10 = v54;
      uint64_t v8 = v55;
      if (!v40) {
        goto LABEL_12;
      }
      if (v53 == v38 && v29 == v40)
      {

        *(void *)&double v44 = swift_bridgeObjectRelease(v29).n128_u64[0];
        swift_bridgeObjectRelease(v40, v44);
        goto LABEL_52;
      }

      char v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v29, v38, v40, 0LL);

      *(void *)&double v43 = swift_bridgeObjectRelease(v29).n128_u64[0];
      swift_bridgeObjectRelease(v40, v43);
      if ((v42 & 1) != 0) {
        goto LABEL_52;
      }
    }

    else
    {
      uint64_t v29 = v40;
      uint64_t v2 = v32;
      unint64_t v10 = v54;
      uint64_t v8 = v55;
      if (!v40)
      {
LABEL_49:

LABEL_52:
        sub_100187094(v2);
        return;
      }

uint64_t sub_10023FA98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100654080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10023FAE8()
{
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_10023FB2C()
{
  return _s19VolumeUnlockManagerCMa(0LL);
}

uint64_t _s19VolumeUnlockManagerCMa(uint64_t a1)
{
  uint64_t result = qword_100649A18;
  if (!qword_100649A18) {
    return swift_getSingletonMetadata(a1, &_s19VolumeUnlockManagerCMn);
  }
  return result;
}

void sub_10023FB70(uint64_t a1)
{
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_10019F1DC(319LL);
  if (v3 <= 0x3F)
  {
    v4[4] = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 5LL, v4, a1 + 80);
  }

void *sub_10023FC04()
{
  uint64_t v1 = v0;
  swift_defaultActor_initialize(v0);
  uint64_t v2 = type metadata accessor for UserProfilesMonitor(0LL);
  unint64_t v3 = (void *)swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  swift_defaultActor_initialize(v3);
  uint64_t v4 = (char *)v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19UserProfilesMonitor_continuation;
  uint64_t v5 = sub_100183098(&qword_100649B10);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v4, 1LL, 1LL, v5);
  id v6 = [objc_allocWithZone(UPProfileStore) init];
  v3[17] = sub_10023FD20();
  v3[18] = &off_1005DB888;
  v3[14] = v6;
  v1[14] = v3;
  uint64_t v7 = _s22VolumeUnlockLocalCacheCMa();
  swift_allocObject(v7, 136LL, 15LL);
  v1[15] = sub_100305944((uint64_t)j___s10Foundation4DateVACycfC, 0LL);
  v1[16] = &_swiftEmptyDictionarySingleton;
  uint64_t v8 = (char *)v1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication19VolumeUnlockManager_lastCarPlaySessionEndDate;
  uint64_t v9 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v8, 1LL, 1LL, v9);
  return v1;
}

unint64_t sub_10023FD20()
{
  unint64_t result = qword_100649B18;
  if (!qword_100649B18)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___UPProfileStore);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100649B18);
  }

  return result;
}

uint64_t sub_10023FD5C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!a2) {
    return swift_continuation_throwingResume(*(void *)(a1 + 32));
  }
  uint64_t v4 = sub_100183098(&qword_100645710);
  uint64_t v5 = swift_allocError(v4, &protocol self-conformance witness table for Error, 0LL, 0LL);
  *id v6 = a2;
  id v7 = a2;
  return swift_continuation_throwingResumeWithError(v2, v5);
}

uint64_t sub_10023FDD0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0LL;
  }
  uint64_t v7 = a3[4];
  uint64_t v8 = a3[5];
  if (v7 == a1 && v8 == a2) {
    return 1LL;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0LL);
  if ((result & 1) != 0) {
    return 1LL;
  }
  if (v3 == 1) {
    return 0LL;
  }
  uint64_t v11 = a3 + 7;
  for (uint64_t i = 1LL; ; ++i)
  {
    uint64_t v13 = i + 1;
    if (__OFADD__(i, 1LL)) {
      break;
    }
    uint64_t v14 = *(v11 - 1);
    uint64_t v15 = *v11;
    BOOL v16 = v14 == a1 && v15 == a2;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0LL) & 1) != 0) {
      return 1LL;
    }
    uint64_t result = 0LL;
    v11 += 2;
    if (v13 == v3) {
      return result;
    }
  }

  __break(1u);
  return result;
}

BOOL sub_10023FE94(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0LL;
  }
  int v3 = result;
  if (*(_BYTE *)(a2 + 32) == result) {
    return 1LL;
  }
  if (v2 == 1) {
    return 0LL;
  }
  for (uint64_t i = 33LL; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1LL)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_10023FEF4()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100649B20);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100649B20);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_10023FF84(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    uint64_t v5 = sub_100183098(&qword_100645710);
    uint64_t v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0LL, 0LL);
    *uint64_t v7 = a3;
    id v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }

  else
  {
    unint64_t v11 = sub_100240DFC();
    **(void **)(*(void *)(v3 + 64) + 40LL) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v11);
    return swift_continuation_throwingResume(v3);
  }

uint64_t sub_10024001C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a3;
  void v4[19] = a4;
  _BYTE v4[16] = a1;
  v4[17] = a2;
  return swift_task_switch(sub_100240038, 0LL, 0LL);
}

uint64_t sub_100240038()
{
  uint64_t v1 = v0 + 2;
  uint64_t v2 = (void *)objc_opt_self(&OBJC_CLASS___CNContactVCardSerialization);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  v0[20] = isa;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_100240104;
  uint64_t v4 = swift_continuation_init(v0 + 2, 1LL);
  v0[10] = _NSConcreteStackBlock;
  uint64_t v5 = v0 + 10;
  v5[1] = 0x40000000LL;
  v5[2] = sub_10023FF84;
  v5[3] = &unk_1005D6528;
  v5[4] = v4;
  [v2 contactsWithData:isa completionHandler:v5];
  return swift_continuation_await(v1);
}

uint64_t sub_100240104()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48LL);
  *(void *)(*(void *)v0 + 168LL) = v1;
  if (v1) {
    uint64_t v2 = sub_100240808;
  }
  else {
    uint64_t v2 = sub_100240164;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

void sub_100240164()
{
  uint64_t v4 = *(void *)(v1 + 120);
  if (!((unint64_t)v4 >> 62))
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
      goto LABEL_3;
    }
LABEL_25:
    id v22 = *(void **)(v1 + 160);
    swift_bridgeObjectRelease((const char *)v4);

    if (qword_100644040 == -1)
    {
LABEL_26:
      uint64_t v23 = type metadata accessor for Logger(0LL);
      uint64_t v24 = sub_100186DE4(v23, (uint64_t)qword_100649B20);
      uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
      os_log_type_t v26 = static os_log_type_t.error.getter(v25);
      if (os_log_type_enabled(v25, v26))
      {
        unint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)unint64_t v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Failed to extract contact from vCardData", v27, 2u);
        swift_slowDealloc(v27, -1LL, -1LL);
      }

      goto LABEL_29;
    }

LABEL_75:
    swift_once(&qword_100644040, sub_10023FEF4);
    goto LABEL_26;
  }

  if (v4 < 0) {
    uint64_t v20 = *(void *)(v1 + 120);
  }
  else {
    uint64_t v20 = v4 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(const char **)(v1 + 120));
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease((const char *)v4);
  if (!v21) {
    goto LABEL_25;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001LL) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v4);
  }

  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      __break(1u);
LABEL_32:
      if (v2 < 0) {
        uint64_t v31 = v2;
      }
      else {
        uint64_t v31 = v2 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain((const char *)v2);
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v31);
      unint64_t v73 = v1;
      id v74 = v3;
      if (v7) {
        goto LABEL_8;
      }
LABEL_36:
      uint64_t v9 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_37;
    }

    id v5 = *(id *)(v4 + 32);
  }

  uint64_t v3 = v5;

  id v6 = objc_msgSend(v3, "emailAddresses", swift_bridgeObjectRelease((const char *)v4).n128_f64[0]);
  uint64_t v0 = sub_100183098(&qword_100649B48);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v0);

  uint64_t v7 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain((const char *)v2);
  unint64_t v73 = v1;
  id v74 = v3;
  if (!v7) {
    goto LABEL_36;
  }
LABEL_8:
  if (v7 < 1)
  {
    __break(1u);
    goto LABEL_74;
  }

  uint64_t v8 = 0LL;
  unint64_t v1 = v2 & 0xC000000000000001LL;
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if (v1) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v2);
    }
    else {
      id v10 = *(id *)(v2 + 8 * v8 + 32);
    }
    unint64_t v11 = v10;
    id v12 = [v10 value];
    id v13 = (id)((uint64_t (*)(void))CUNormalizeEmailAddress)();

    if (v13)
    {
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      uint64_t v16 = v15;

      if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0) {
        uint64_t v9 = sub_10018BC54(0LL, *((void *)v9 + 2) + 1LL, 1, v9);
      }
      unint64_t v18 = *((void *)v9 + 2);
      unint64_t v17 = *((void *)v9 + 3);
      if (v18 >= v17 >> 1) {
        uint64_t v9 = sub_10018BC54((char *)(v17 > 1), v18 + 1, 1, v9);
      }
      *((void *)v9 + 2) = v18 + 1;
      uint64_t v19 = &v9[16 * v18];
      *((void *)v19 + 4) = v14;
      *((void *)v19 + 5) = v16;
    }

    else
    {
    }

    ++v8;
  }

  while (v7 != v8);
LABEL_37:
  swift_bridgeObjectRelease_n(v2, 2LL);
  id v32 = [v74 phoneNumbers];
  uint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v0);

  if (!((unint64_t)v33 >> 62))
  {
    uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain((const char *)v33);
    if (v34) {
      goto LABEL_39;
    }
LABEL_56:
    uint64_t v36 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_57;
  }

  if (v33 < 0) {
    uint64_t v52 = v33;
  }
  else {
    uint64_t v52 = v33 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain((const char *)v33);
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter(v52);
  if (!v34) {
    goto LABEL_56;
  }
LABEL_39:
  if (v34 < 1)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }

  uint64_t v35 = 0LL;
  uint64_t v36 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if ((v33 & 0xC000000000000001LL) != 0) {
      id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v33);
    }
    else {
      id v37 = *(id *)(v33 + 8 * v35 + 32);
    }
    uint64_t v38 = v37;
    id v39 = [v37 value];
    id v40 = [v39 stringValue];

    static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    char v42 = v41;

    NSString v43 = String._bridgeToObjectiveC()();
    __n128 v44 = swift_bridgeObjectRelease(v42);
    id v45 = (id)CUNormalizePhoneNumber(v43, v44);

    if (v45)
    {
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      uint64_t v48 = v47;

      if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0) {
        uint64_t v36 = sub_10018BC54(0LL, *((void *)v36 + 2) + 1LL, 1, v36);
      }
      unint64_t v50 = *((void *)v36 + 2);
      unint64_t v49 = *((void *)v36 + 3);
      if (v50 >= v49 >> 1) {
        uint64_t v36 = sub_10018BC54((char *)(v49 > 1), v50 + 1, 1, v36);
      }
      *((void *)v36 + 2) = v50 + 1;
      unint64_t v51 = &v36[16 * v50];
      *((void *)v51 + 4) = v46;
      *((void *)v51 + 5) = v48;
    }

    else
    {
    }

    ++v35;
  }

  while (v34 != v35);
LABEL_57:
  unint64_t v1 = v73;
  uint64_t v53 = *(void *)(v73 + 152);
  swift_bridgeObjectRelease_n(v33, 2LL);
  if (!v53)
  {
LABEL_64:
    if (*((void *)v36 + 2) == 1LL)
    {
      *(void *)&double v71 = swift_bridgeObjectRelease(v9, v54).n128_u64[0];
      uint64_t v72 = v74;
      if (*((void *)v36 + 2)) {
        goto LABEL_66;
      }
    }

    else
    {
      uint64_t v72 = v74;
      if (*((void *)v9 + 2))
      {
        uint64_t v29 = *((void *)v9 + 4);
        uint64_t v30 = (const char *)*((void *)v9 + 5);
        swift_bridgeObjectRetain(v30, v54);
        swift_bridgeObjectRelease(v9);
        goto LABEL_69;
      }

      *(void *)&double v71 = swift_bridgeObjectRelease(v9, v54).n128_u64[0];
      if (*((void *)v36 + 2))
      {
LABEL_66:
        uint64_t v29 = *((void *)v36 + 4);
        uint64_t v30 = (const char *)*((void *)v36 + 5);
        swift_bridgeObjectRetain(v30, v71);
LABEL_69:

        __n128 v28 = swift_bridgeObjectRelease(v36);
        goto LABEL_70;
      }
    }

    __n128 v28 = swift_bridgeObjectRelease(v36);
LABEL_29:
    uint64_t v29 = 0LL;
    uint64_t v30 = 0LL;
LABEL_70:
    (*(void (**)(uint64_t, const char *, __n128))(v1 + 8))(v29, v30, v28);
    return;
  }

  uint64_t v55 = *(const char **)(v73 + 152);
  swift_bridgeObjectRetain(v55);
  NSString v56 = String._bridgeToObjectiveC()();
  id v57 = (id)CUNormalizeEmailAddress(v56, 1LL);

  if (v57)
  {
    uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
    id v60 = v59;

    char v61 = sub_10023FDD0(v58, (uint64_t)v60, v9);
    swift_bridgeObjectRelease(v60);
    if ((v61 & 1) != 0)
    {
LABEL_62:

      *(void *)&double v70 = swift_bridgeObjectRelease(v36).n128_u64[0];
      __n128 v28 = swift_bridgeObjectRelease(v9, v70);
      uint64_t v29 = *(void *)(v73 + 144);
      uint64_t v30 = *(const char **)(v73 + 152);
      goto LABEL_70;
    }

    NSString v62 = String._bridgeToObjectiveC()();
    id v64 = (id)CUNormalizePhoneNumber(v62, v63);

    if (v64)
    {
      uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
      uint64_t v67 = v66;

      char v68 = sub_10023FDD0(v65, (uint64_t)v67, v36);
      *(void *)&double v69 = swift_bridgeObjectRelease(v67).n128_u64[0];
      if ((v68 & 1) != 0) {
        goto LABEL_62;
      }
      *(void *)&double v54 = swift_bridgeObjectRelease(v55, v69).n128_u64[0];
      goto LABEL_64;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
}

  uint64_t v215 = sub_1003913F0((uint64_t)_swiftEmptyArrayStorage);
  v216 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v215);
  sub_10002EAC4(v147, v148, 1LL, (uint64_t)v150, v214, v216, v146, v142);

  uint64_t v217 = *(void *)(v241 + v259[6]);
  if (v217 > 0x7FFFFFFF)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }

  sub_10002F1DC(1LL, v217);
  v218 = (uint64_t)v253;
  v220 = SFAirDropSend.Transfer.id.getter(v219);
  uint64_t v221 = v246;
  SFAirDrop.TransferIdentifier.id.getter(v220);
  ((void (*)(uint64_t, uint64_t))v260)(v218, v261);
  uint64_t v222 = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v247 + 8))(v221, v248);
  uint64_t v223 = v241;
  sub_10002FB54((uint64_t)@"Send", (uint64_t)@"Stop", v222, 0LL, (double)*(uint64_t *)(v241 + v141));

  SFAirDropSend.Transfer.id.getter(v224);
  uint64_t v225 = v254;
  sub_100396EBC(v223, v254);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v258 + 56))(v225, 0LL, 1LL, v259);
  swift_beginAccess(v256, v264, 33LL, 0LL);
  sub_1002E5568(v225, v218);
  swift_endAccess(v264);
  (*(void (**)(char *, void *))(v251 + 8))(v235, v252);
  (*(void (**)(char *, uint64_t))(v255 + 8))(v257, v231);
  uint64_t v226 = *(uint64_t *)((char *)v262 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_transfersCompleted);
  uint64_t v199 = __OFADD__(v226, 1LL);
  uint64_t v227 = (void *)(v226 + 1);
  if (!v199)
  {
    *(id *)((char *)v262 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_transfersCompleted) = v227;
    uint64_t v179 = v223;
    goto LABEL_79;
  }

LABEL_76:
    return;
  }

  uint64_t v148 = sub_10034F3D4(v36, v147);
  uint64_t v149 = v224[3];
  id v150 = v224[4];
  sub_10019A708(v224, v149);
  v151 = (*(uint64_t (**)(uint64_t, uint64_t))(v150 + 8))(v149, v150);
  if (v152)
  {
    uint64_t v153 = v152;
    sub_10044A3AC(v148 & 1, v151, v152);
    swift_bridgeObjectRelease(v153);
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    BOOL v154 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v154, (uint64_t)qword_100656748);
    uint64_t v155 = sub_10019A6C4((uint64_t)v224, (uint64_t)v245);
    uint64_t v156 = (os_log_s *)Logger.logObject.getter(v155);
    uint64_t v157 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v156, v157))
    {
      uint64_t v158 = swift_slowAlloc(22LL, -1LL);
      uint64_t v159 = swift_slowAlloc(64LL, -1LL);
      *(void *)&v238 = v159;
      *(_DWORD *)uint64_t v158 = 136315394;
      uint64_t v160 = v246;
      uint64_t v161 = v247;
      sub_10019A708(v245, v246);
      uint64_t v162 = (*(uint64_t (**)(uint64_t, uint64_t))(v161 + 8))(v160, v161);
      if (v163)
      {
        uint64_t v164 = v162;
        uint64_t v165 = v163;
      }

      else
      {
        uint64_t v164 = 0xD000000000000015LL;
        *(void *)&v242 = 0LL;
        *((void *)&v242 + sub_10022D314(2, 1) = 0xE000000000000000LL;
        _StringGuts.grow(_:)(17LL);
        swift_bridgeObjectRelease(*((const char **)&v242 + 1));
        uint64_t v165 = (const char *)0x80000001005046B0LL;
      }

      *(void *)&v242 = sub_10018CDB4(v164, (unint64_t)v165, (uint64_t *)&v238);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v242, (char *)&v242 + 8, v158 + 4, v158 + 12);
      swift_bridgeObjectRelease(v165);
      sub_10018709C(v245);
      *(_WORD *)(v158 + 12) = 2080;
      uint64_t v170 = sub_10034F3D4(v36, v169);
      uint64_t v171 = (v170 & 1) == 0;
      if ((v170 & 1) != 0) {
        uint64_t v172 = 7955787LL;
      }
      else {
        uint64_t v172 = 1801678668LL;
      }
      if (v171) {
        double v173 = (const char *)0xE400000000000000LL;
      }
      else {
        double v173 = (const char *)0xE300000000000000LL;
      }
      *(void *)&v242 = sub_10018CDB4(v172, (unint64_t)v173, (uint64_t *)&v238);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v242, (char *)&v242 + 8, v158 + 14, v158 + 22);
      swift_bridgeObjectRelease(v173);
      _os_log_impl( (void *)&_mh_execute_header,  v156,  v157,  "Disabled pairing with: %s for role: %s",  (uint8_t *)v158,  0x16u);
      swift_arrayDestroy(v159, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v159, -1LL, -1LL);
      swift_slowDealloc(v158, -1LL, -1LL);
    }

    else
    {
      sub_10018709C(v245);
    }

    __n128 v175 = v219;
    unint64_t v174 = v220;
    static SFPlatform.iOS.getter(v168);
    unint64_t v176 = static SFPlatform.isPlatform(_:)(v174);
    uint64_t v177 = *(uint64_t (**)(char *, uint64_t))(v213 + 8);
    uint64_t v178 = v177(v174, v175);
    if ((v176 & 1) != 0)
    {
      uint64_t v179 = sub_10046A170();
      double v180 = (const char *)sub_100481F28(1, (uint64_t)v179);
      *(void *)&uint64_t v181 = swift_bridgeObjectRelease(v179).n128_u64[0];
      uint64_t v182 = *((void *)v180 + 2);
      swift_bridgeObjectRelease(v180, v181);
      if (!v182)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(SFAuthenticationsDynamicStoreEnabledBioArmPath);
        os_log_type_t v184 = v183;
        uint64_t v185 = String._bridgeToObjectiveC()();
        v186 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v184);
        sub_10008A698(0LL, v185, v186);

        __n128 v175 = v219;
      }

      __n128 v187 = (const char *)sub_100464758(4LL, "eligible mac devices: %s");
      unint64_t v188 = (const char *)sub_100481F28(0, (uint64_t)v187);
      *(void *)&uint64_t v189 = swift_bridgeObjectRelease(v187).n128_u64[0];
      uint64_t v190 = *((void *)v188 + 2);
      swift_bridgeObjectRelease(v188, v189);
      if (!v190) {
        uint64_t v178 = sub_100458200();
      }
    }

    uint64_t v191 = v220;
    static SFPlatform.macOS.getter(v178);
    double v192 = static SFPlatform.isPlatform(_:)(v191);
    v177(v191, v175);
    if ((v192 & 1) != 0)
    {
      BOOL v193 = (const char *)sub_100464758(2LL, "eligible iPhone devices: %s");
      v194 = (const char *)sub_100481F28(1, (uint64_t)v193);
      *(void *)&uint64_t v195 = swift_bridgeObjectRelease(v193).n128_u64[0];
      uint64_t v196 = *((void *)v194 + 2);
      swift_bridgeObjectRelease(v194, v195);
      if (!v196) {
        sub_100458200();
      }
    }

    v198 = v217;
    uint64_t v197 = v218;
    uint64_t v199 = v214;
    *uint64_t v217 = v214;
    uint64_t v200 = v216;
    uint64_t v201 = v209;
    v209(v198, v216, v197);
    uint64_t v202 = v199;
    uint64_t v203 = _dispatchPreconditionTest(_:)(v198);
    v204 = v215;
    v205 = ((uint64_t (*)(void *, uint64_t))v215)(v198, v197);
    if ((v203 & 1) != 0)
    {
      uint64_t v206 = v212;
      Date.init()(v205);
      char *v198 = v202;
      v201(v198, v200, v197);
      uint64_t v207 = v202;
      BOOL v208 = _dispatchPreconditionTest(_:)(v198);
      v204(v198, v197);

      if ((v208 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v210 + 8))(v206, v211);
        return;
      }
    }

    else
    {
      __break(1u);
    }

    __break(1u);
    goto LABEL_101;
  }

uint64_t sub_100240808()
{
  unint64_t v1 = *(void **)(v0 + 160);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100240848( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  NSString v13 = a13;
  id v14 = [objc_allocWithZone(RPIdentity) init];
  [v14 setType:6];
  NSString v15 = String._bridgeToObjectiveC()();
  [v14 setAccountID:v15];

  NSString v16 = String._bridgeToObjectiveC()();
  [v14 setContactID:v16];

  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v14 setDeviceIRKData:isa];

  Class v18 = Data._bridgeToObjectiveC()().super.isa;
  [v14 setEdPKData:v18];

  NSString v19 = String._bridgeToObjectiveC()();
  [v14 setIdsDeviceID:v19];

  if (a13) {
    NSString v13 = String._bridgeToObjectiveC()();
  }
  [v14 setSendersKnownAlias:v13];

  if (a11) {
    objc_msgSend(v14, "setFeatureFlags:");
  }
  return v14;
}

uint64_t sub_1002409FC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 2swift_weakDestroy(v0 + 16) = v12;
  *(_OWORD *)(v8 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v11;
  *(_OWORD *)(v8 + 184) = v10;
  *(void *)(v8 + 168) = a7;
  *(void *)(v8 + 176) = a8;
  *(void *)(v8 + 152) = a5;
  *(void *)(v8 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a6;
  *(void *)(v8 + 136) = a3;
  *(void *)(v8 + 144) = a4;
  *(void *)(v8 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a1;
  *(void *)(v8 + 128) = a2;
  return swift_task_switch(sub_100240A38, 0LL, 0LL);
}

uint64_t sub_100240A38()
{
  unint64_t v1 = *(void **)(v0 + 216);
  __int128 v15 = *(_OWORD *)(v0 + 184);
  __int128 v16 = *(_OWORD *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v17 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 128);
  id v9 = [objc_allocWithZone(RPClient) init];
  *(void *)(v0 + 224) = v9;
  id v10 = sub_100240848(v8, v7, v6, v5, v4, v3, v2, v17, v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v1);
  *(void *)(v0 + 2sub_100195658(v0 + 32) = v10;
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_100240B6C;
  uint64_t v11 = v0 + 16;
  uint64_t v12 = swift_continuation_init(v0 + 16, 1LL);
  *(void *)(v0 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = _NSConcreteStackBlock;
  NSString v13 = (void *)(v0 + 80);
  v13[1] = 0x40000000LL;
  v13[2] = sub_10023FD5C;
  v13[3] = &unk_1005D6510;
  v13[4] = v12;
  [v9 addOrUpdateIdentity:v10 completion:v13];
  return swift_continuation_await(v11);
}

uint64_t sub_100240B6C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48LL);
  *(void *)(*(void *)v0 + 240LL) = v1;
  if (v1) {
    uint64_t v2 = sub_100240DA4;
  }
  else {
    uint64_t v2 = sub_100240BCC;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_100240BCC()
{
  if (qword_100644040 != -1) {
    swift_once(&qword_100644040, sub_10023FEF4);
  }
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_100649B20);
  uint64_t v3 = swift_bridgeObjectRetain_n(v1, 2LL);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void **)(v0 + 232);
  uint64_t v8 = *(const char **)(v0 + 144);
  if (v6)
  {
    uint64_t v9 = *(void *)(v0 + 136);
    id v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v11 = swift_slowAlloc(32LL, -1LL);
    uint64_t v14 = v11;
    *(_DWORD *)id v10 = 136315138;
    swift_bridgeObjectRetain(v8);
    *(void *)(v0 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10018CDB4(v9, (unint64_t)v8, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease_n(v8, 3LL);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Added/updated identity for contact %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(*(void *)(v0 + 144), 2LL);
  }

  uint64_t v12 = *(void **)(v0 + 224);
  [v12 invalidate];

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100240DA4()
{
  uint64_t v1 = *(void **)(v0 + 232);
  uint64_t v2 = *(void **)(v0 + 224);
  swift_willThrow();

  [v2 invalidate];
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100240DFC()
{
  unint64_t result = qword_100646C30;
  if (!qword_100646C30)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___CNContact);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100646C30);
  }

  return result;
}

uint64_t type metadata accessor for SDAirDropContentHandlerPodcastsLinks()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary36SDAirDropContentHandlerPodcastsLinks);
}

uint64_t sub_100240E58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerPodcastsLinks();
  uint64_t result = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(result + swift_weakDestroy(v0 + 16) = 0LL;
  *a1 = result;
  return result;
}

void sub_100240E90(__n128 a1, uint64_t a2, char a3)
{
  uint64_t v4 = SFAirDropReceive.AskRequest.urlItems.getter(a1);
  unint64_t v5 = *(void *)(v4 + 16);
  swift_bridgeObjectRelease((const char *)v4);
  uint64_t v6 = sub_100183098((uint64_t *)&unk_100650440);
  uint64_t inited = swift_initStackObject(v6, v25);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
  *(void *)(inited + sub_100195658(v0 + 32) = 0xD000000000000019LL;
  uint64_t v8 = inited + 32;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0x8000000100506F40LL;
  *(void *)(inited + 48) = v5;
  swift_bridgeObjectRetain((const char *)0x8000000100506F40LL);
  swift_bridgeObjectRetain((const char *)inited);
  v9._uint64_t countAndFlagsBits = 95LL;
  v9._object = (void *)0xE100000000000000LL;
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = 0xD000000000000019LL;
  v10._object = (void *)0x8000000100506F40LL;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0x8000000100506F40LL);
  if (v5 > 1)
  {
    v11._uint64_t countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000LL;
    String.append(_:)(v11);
  }

  swift_bridgeObjectRelease((const char *)inited);
  if ((a3 & 1) != 0)
  {
    v12._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v12);
  }

  v13._uint64_t countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000LL;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  uint64_t v14 = *(void *)(inited + 16);
  uint64_t v15 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(v8, v14, v15);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL);
  id v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    uint64_t v21 = v20;

    uint64_t v22 = sub_100183098(&qword_1006483E0);
    uint64_t v23 = swift_allocObject(v22, 72LL, 7LL);
    *(_OWORD *)(v23 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(v23 + 56) = &type metadata for Int;
    *(void *)(v23 + 64) = &protocol witness table for Int;
    *(void *)(v23 + sub_100195658(v0 + 32) = v5;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(void *)&double v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }

  else
  {
    __break(1u);
  }

uint64_t sub_1002410D0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID(0LL);
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  id v41 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  id v40 = (char *)&v34 - v6;
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = &_swiftEmptyArrayStorage;
  if (!v7) {
    return (uint64_t)v8;
  }
  uint64_t v34 = v1;
  __n128 v44 = &_swiftEmptyArrayStorage;
  sub_10018D82C(0, v7, 0);
  uint64_t result = sub_100248B60(a1);
  uint64_t v11 = result;
  uint64_t v12 = 0LL;
  uint64_t v13 = a1 + 64;
  uint64_t v35 = a1 + 80;
  int64_t v36 = v7;
  uint64_t v38 = a1 + 64;
  uint64_t v39 = a1;
  uint64_t v37 = v10;
  while ((v11 & 0x8000000000000000LL) == 0 && v11 < 1LL << *(_BYTE *)(a1 + 32))
  {
    unint64_t v16 = (unint64_t)v11 >> 6;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v10) {
      goto LABEL_26;
    }
    uint64_t v17 = *(void *)(a1 + 48);
    uint64_t v19 = v42;
    uint64_t v18 = v43;
    uint64_t v20 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v40, v17 + *(void *)(v42 + 72) * v11, v43);
    uint64_t v21 = v41;
    uint64_t v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v19 + 32))(v41, v20, v18);
    uint64_t v23 = UUID.description.getter(v22);
    uint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    uint64_t v8 = v44;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native(v44);
    if ((result & 1) == 0)
    {
      uint64_t result = sub_10018D82C(0, v8[2] + 1LL, 1);
      uint64_t v8 = v44;
    }

    unint64_t v27 = v8[2];
    unint64_t v26 = v8[3];
    if (v27 >= v26 >> 1)
    {
      uint64_t result = sub_10018D82C(v26 > 1, v27 + 1, 1);
      uint64_t v8 = v44;
    }

    v8[2] = v27 + 1;
    __n128 v28 = (char *)&v8[2 * v27];
    *((void *)v28 + 4) = v23;
    *((void *)v28 + 5) = v25;
    a1 = v39;
    int64_t v14 = 1LL << *(_BYTE *)(v39 + 32);
    if (v11 >= v14) {
      goto LABEL_27;
    }
    uint64_t v13 = v38;
    uint64_t v29 = *(void *)(v38 + 8 * v16);
    if ((v29 & (1LL << v11)) == 0) {
      goto LABEL_28;
    }
    LODWORD(v1_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v37;
    if (*(_DWORD *)(v39 + 36) != (_DWORD)v37) {
      goto LABEL_29;
    }
    unint64_t v30 = v29 & (-2LL << (v11 & 0x3F));
    if (v30)
    {
      int64_t v14 = __clz(__rbit64(v30)) | v11 & 0xFFFFFFFFFFFFFFC0LL;
      int64_t v15 = v36;
    }

    else
    {
      unint64_t v31 = v16 + 1;
      unint64_t v32 = (unint64_t)(v14 + 63) >> 6;
      int64_t v15 = v36;
      if (v16 + 1 < v32)
      {
        unint64_t v33 = *(void *)(v38 + 8 * v31);
        if (v33)
        {
LABEL_22:
          int64_t v14 = __clz(__rbit64(v33)) + (v31 << 6);
        }

        else
        {
          while (v32 - 2 != v16)
          {
            unint64_t v33 = *(void *)(v35 + 8 * v16++);
            if (v33)
            {
              unint64_t v31 = v16 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }

    ++v12;
    uint64_t v11 = v14;
    if (v12 == v15) {
      return (uint64_t)v8;
    }
  }

  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1002413A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v35 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v3 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = sub_100183098(&qword_100645010);
  uint64_t v30 = *(void *)(v36 - 8);
  uint64_t v6 = __chkstk_darwin(v36);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v32 = a1 + 64;
  uint64_t v12 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v13 = -1LL;
  if (v12 < 64) {
    uint64_t v13 = ~(-1LL << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v33 = (unint64_t)(v12 + 63) >> 6;
  unsigned int v34 = enum case for SFNWInterfaceType.cellular(_:);
  uint64_t v37 = a1;
  uint64_t result = swift_bridgeObjectRetain(a1);
  int64_t v16 = 0LL;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v37;
    uint64_t v23 = *(void *)(v37 + 48);
    uint64_t v24 = type metadata accessor for UUID(0LL);
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v24 - 8) + 16LL))( v10,  v23 + *(void *)(*(void *)(v24 - 8) + 72LL) * i,  v24);
    unint64_t v25 = *(void *)(v22 + 56) + *(void *)(v3 + 72) * i;
    uint64_t v27 = v35;
    uint64_t v26 = v36;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(&v10[*(int *)(v36 + 48)], v25, v35);
    sub_1001870BC((uint64_t)v10, (uint64_t)v8, &qword_100645010);
    __n128 v28 = &v8[*(int *)(v26 + 48)];
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, v34, v27);
    LOBYTE(v28) = static SFNWInterfaceType.== infix(_:_:)(v28, v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v27);
    if ((v28 & 1) != 0)
    {
      swift_release(v37);
      uint64_t v29 = v31;
      sub_1001870BC((uint64_t)v8, v31, &qword_100645010);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v29, 0LL, 1LL, v36);
    }

    uint64_t result = sub_100187100((uint64_t)v8, &qword_100645010);
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1LL))
    {
      __break(1u);
      goto LABEL_27;
    }

    if (v19 >= v33) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v32 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v33) {
        goto LABEL_25;
      }
      unint64_t v20 = *(void *)(v32 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v33) {
          goto LABEL_25;
        }
        unint64_t v20 = *(void *)(v32 + 8 * v16);
        if (!v20)
        {
          int64_t v16 = v19 + 3;
          if (v19 + 3 >= v33) {
            goto LABEL_25;
          }
          unint64_t v20 = *(void *)(v32 + 8 * v16);
          if (!v20) {
            break;
          }
        }
      }
    }

uint64_t sub_1002416E4(uint64_t a1, uint64_t a2)
{
  void v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = sub_100183098(&qword_100647918);
  uint64_t v4 = sub_1001CD538( &qword_100649DF8,  &qword_100647918,  (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  uint64_t v5 = (void *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v2[6] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10024177C;
  return dispatch thunk of AsyncIteratorProtocol.next()(v2 + 2, v3, v4);
}

uint64_t sub_10024177C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 48);
  uint64_t v4 = *(void *)(*v1 + 32);
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(v2 + 40);
      uint64_t ObjectType = swift_getObjectType(*(void *)(v2 + 32));
      uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v5);
      uint64_t v9 = v8;
    }

    else
    {
      uint64_t v7 = 0LL;
      uint64_t v9 = 0LL;
    }

    uint64_t v13 = sub_10024184C;
  }

  else
  {
    if (v4)
    {
      uint64_t v10 = *(void *)(v2 + 40);
      uint64_t v11 = swift_getObjectType(*(void *)(v2 + 32));
      uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(v11, v10);
      uint64_t v9 = v12;
    }

    else
    {
      uint64_t v7 = 0LL;
      uint64_t v9 = 0LL;
    }

    uint64_t v13 = sub_100241840;
  }

  return swift_task_switch(v13, v7, v9);
}

uint64_t sub_100241840()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_10024184C()
{
  *(void *)(v0 + 24) = *(void *)(v0 + 56);
  uint64_t v1 = sub_100183098(&qword_100645710);
  uint64_t v2 = swift_dynamicCast(v1, v0 + 24, v1, &type metadata for Never, 7LL);
  swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002418BC(uint64_t a1, uint64_t a2)
{
  void v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = sub_100183098(&qword_100649D98);
  uint64_t v4 = sub_1001CD538( &qword_100649DE8,  &qword_100649D98,  (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  uint64_t v5 = (void *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v2[6] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100241954;
  return dispatch thunk of AsyncIteratorProtocol.next()(v2 + 2, v3, v4);
}

uint64_t sub_100241954()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 48);
  uint64_t v4 = *(void *)(*v1 + 32);
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(v2 + 40);
      uint64_t ObjectType = swift_getObjectType(*(void *)(v2 + 32));
      uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v5);
      uint64_t v9 = v8;
    }

    else
    {
      uint64_t v7 = 0LL;
      uint64_t v9 = 0LL;
    }

    uint64_t v13 = sub_100249A24;
  }

  else
  {
    if (v4)
    {
      uint64_t v10 = *(void *)(v2 + 40);
      uint64_t v11 = swift_getObjectType(*(void *)(v2 + 32));
      uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(v11, v10);
      uint64_t v9 = v12;
    }

    else
    {
      uint64_t v7 = 0LL;
      uint64_t v9 = 0LL;
    }

    uint64_t v13 = sub_100249A20;
  }

  return swift_task_switch(v13, v7, v9);
}

uint64_t sub_100241A18(int64_t a1, uint64_t a2)
{
  uint64_t v299 = a2;
  uint64_t v276 = sub_100183098(&qword_100649DB8);
  __chkstk_darwin(v276);
  uint64_t v278 = (uint64_t)&v271 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_100183098(&qword_100645018);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v272 = (uint64_t)&v271 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  v281 = (char *)&v271 - v8;
  __chkstk_darwin(v7);
  v302 = (char *)&v271 - v9;
  uint64_t v292 = sub_100183098(&qword_100649DC0);
  uint64_t v10 = __chkstk_darwin(v292);
  v304 = (char *)&v271 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  v291 = (char *)&v271 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v303 = (uint64_t)&v271 - v15;
  __chkstk_darwin(v14);
  v290 = (char *)&v271 - v16;
  uint64_t v17 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v318 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  v273 = (char *)&v271 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  v285 = (char *)&v271 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v305 = (char *)&v271 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v287 = (char *)&v271 - v25;
  __chkstk_darwin(v24);
  v293 = (char *)&v271 - v26;
  uint64_t v27 = sub_100183098(&qword_100656490);
  uint64_t v28 = __chkstk_darwin(v27);
  v275 = (char *)&v271 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v274 = (uint64_t)&v271 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  v277 = (char *)&v271 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v284 = (uint64_t)&v271 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v271 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  v279 = (char *)&v271 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  v289 = (char *)&v271 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  v288 = (char *)&v271 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v280 = (char *)&v271 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v298 = (char *)&v271 - v48;
  __chkstk_darwin(v47);
  v297 = (char *)&v271 - v49;
  uint64_t v50 = type metadata accessor for UUID(0LL);
  v319 = *(uint8_t **)(v50 - 8);
  uint64_t v51 = __chkstk_darwin(v50);
  uint64_t v301 = (uint64_t)&v271 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v317 = (uint64_t)&v271 - v54;
  __chkstk_darwin(v53);
  NSString v56 = (char *)&v271 - v55;
  uint64_t v296 = sub_100183098(&qword_100649DC8);
  uint64_t v57 = __chkstk_darwin(v296);
  v312 = (char *)&v271 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v59 = __chkstk_darwin(v57);
  v295 = (char *)&v271 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v311 = (uint64_t)&v271 - v62;
  __chkstk_darwin(v61);
  v294 = (char *)&v271 - v63;
  unint64_t v306 = sub_1003918D8((uint64_t)&_swiftEmptyArrayStorage);
  uint64_t v64 = *(void *)(a1 + 64);
  int64_t v282 = a1 + 64;
  uint64_t v65 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v66 = -1LL;
  if (v65 < 64) {
    uint64_t v66 = ~(-1LL << v65);
  }
  unint64_t v67 = v66 & v64;
  int64_t v283 = (unint64_t)(v65 + 63) >> 6;
  int64_t v300 = a1;
  swift_bridgeObjectRetain(a1);
  unint64_t v68 = 0LL;
  v314 = v38;
  v315 = (void (*)(void, void, void, void))v17;
  uint64_t v316 = v50;
  uint64_t v313 = (uint64_t)v56;
  while (1)
  {
    if (v67)
    {
      v308 = (const __CFString *)((v67 - 1) & v67);
      unint64_t v309 = v68;
      unint64_t v71 = __clz(__rbit64(v67)) | (v68 << 6);
      goto LABEL_25;
    }

    int64_t v72 = v68 + 1;
    if (__OFADD__(v68, 1LL)) {
      goto LABEL_158;
    }
    uint64_t v73 = (uint64_t)v302;
    if (v72 >= v283) {
      break;
    }
    unint64_t v74 = *(void *)(v282 + 8 * v72);
    int64_t v75 = v68 + 1;
    if (!v74)
    {
      int64_t v75 = v68 + 2;
      unint64_t v74 = *(void *)(v282 + 8 * v75);
      if (!v74)
      {
        int64_t v75 = v68 + 3;
        unint64_t v74 = *(void *)(v282 + 8 * v75);
        if (!v74)
        {
          int64_t v75 = v68 + 4;
          unint64_t v74 = *(void *)(v282 + 8 * v75);
          if (!v74)
          {
            unint64_t v76 = v68 + 5;
            unint64_t v74 = *(void *)(v282 + 8 * v76);
            if (!v74)
            {
              while (1)
              {
                int64_t v75 = v76 + 1;
                if (__OFADD__(v76, 1LL)) {
                  goto LABEL_163;
                }
                if (v75 >= v283) {
                  goto LABEL_45;
                }
                unint64_t v74 = *(void *)(v282 + 8 * v75);
                ++v76;
                if (v74) {
                  goto LABEL_24;
                }
              }
            }

            int64_t v75 = v68 + 5;
          }
        }
      }
    }

LABEL_164:
              __break(1u);
LABEL_165:
              swift_once(&qword_100643F48, sub_100216318);
              goto LABEL_143;
            }

            int64_t v140 = a1 + 5;
          }
        }
      }
    }

              __break(1u);
LABEL_165:
              swift_once(&qword_100643F48, sub_100216318);
              goto LABEL_143;
            }

            uint64_t v142 = a1 + 5;
          }
        }
      }
    }

LABEL_88:
  swift_release(v299);
  a1 = v306;
  swift_bridgeObjectRetain(v306);
  uint64_t v192 = sub_100245400(v309, a1);
  v304 = 0LL;
  uint64_t v193 = *(void *)(v192 + 64);
  unint64_t v309 = v192 + 64;
  uint64_t v194 = 1LL << *(_BYTE *)(v192 + 32);
  uint64_t v195 = -1LL;
  if (v194 < 64) {
    uint64_t v195 = ~(-1LL << v194);
  }
  unint64_t v196 = v195 & v193;
  v307 = @"Send";
  v308 = @"Receive";
  v310 = @"InterfaceChanged";
  uint64_t v311 = (unint64_t)(v194 + 63) >> 6;
  uint64_t v303 = v311 - 1;
  v312 = (char *)v192;
  swift_bridgeObjectRetain(v192);
  uint64_t v313 = 0LL;
  while (2)
  {
    uint64_t v198 = (uint64_t)v281;
    if (v196)
    {
      unint64_t v199 = __clz(__rbit64(v196));
      uint64_t v200 = (v196 - 1) & v196;
      uint64_t v201 = v199 | (v313 << 6);
      goto LABEL_96;
    }

    uint64_t v206 = v313 + 1;
    if (__OFADD__(v313, 1LL)) {
      goto LABEL_162;
    }
    if (v206 >= v311) {
      goto LABEL_117;
    }
    unint64_t v207 = *(void *)(v309 + 8 * v206);
    if (!v207)
    {
      uint64_t v208 = v313 + 2;
      ++v313;
      if (v206 + 1 < v311)
      {
        unint64_t v207 = *(void *)(v309 + 8 * v208);
        if (v207)
        {
LABEL_103:
          uint64_t v206 = v208;
          goto LABEL_100;
        }

        uint64_t v313 = v206 + 1;
        if (v206 + 2 < v311)
        {
          unint64_t v207 = *(void *)(v309 + 8 * (v206 + 2));
          if (v207)
          {
            v206 += 2LL;
            goto LABEL_100;
          }

          uint64_t v313 = v206 + 2;
          if (v206 + 3 < v311)
          {
            unint64_t v207 = *(void *)(v309 + 8 * (v206 + 3));
            if (v207)
            {
              v206 += 3LL;
              goto LABEL_100;
            }

            uint64_t v208 = v206 + 4;
            uint64_t v313 = v206 + 3;
            if (v206 + 4 < v311)
            {
              unint64_t v207 = *(void *)(v309 + 8 * v208);
              if (!v207)
              {
                while (1)
                {
                  uint64_t v206 = v208 + 1;
                  if (__OFADD__(v208, 1LL)) {
                    break;
                  }
                  if (v206 >= v311)
                  {
                    uint64_t v313 = v303;
                    goto LABEL_117;
                  }

                  unint64_t v207 = *(void *)(v309 + 8 * v206);
                  ++v208;
                  if (v207) {
                    goto LABEL_100;
                  }
                }

                __break(1u);
                goto LABEL_167;
              }

              goto LABEL_103;
            }
          }
        }
      }

  swift_release(v305);
  a1 = (int64_t)v312;
  swift_bridgeObjectRetain(v312);
  unint64_t v196 = sub_100245400(v315, a1);
  v310 = 0LL;
  uint64_t v197 = *(void *)(v196 + 64);
  v315 = v196 + 64;
  uint64_t v198 = 1LL << *(_BYTE *)(v196 + 32);
  unint64_t v199 = -1LL;
  if (v198 < 64) {
    unint64_t v199 = ~(-1LL << v198);
  }
  uint64_t v200 = v199 & v197;
  uint64_t v313 = @"Send";
  v314 = @"Receive";
  uint64_t v316 = @"InterfaceChanged";
  uint64_t v317 = (unint64_t)(v198 + 63) >> 6;
  unint64_t v309 = v317 - 1;
  uint64_t v318 = (char *)v196;
  swift_bridgeObjectRetain((const char *)v196);
  v319 = 0LL;
  while (2)
  {
    uint64_t v202 = (uint64_t)v287;
    if (v200)
    {
      uint64_t v203 = __clz(__rbit64(v200));
      uint64_t v204 = (v200 - 1) & v200;
      uint64_t v205 = v203 | (v319 << 6);
      goto LABEL_96;
    }

    uint64_t v210 = v319 + 1;
    if (__OFADD__(v319, 1LL)) {
      goto LABEL_162;
    }
    if (v210 >= v317) {
      goto LABEL_117;
    }
    uint64_t v211 = *(void *)(v315 + 8 * v210);
    if (!v211)
    {
      uint64_t v212 = v319 + 2;
      ++v319;
      if (v210 + 1 < v317)
      {
        uint64_t v211 = *(void *)(v315 + 8 * v212);
        if (v211)
        {
LABEL_103:
          uint64_t v210 = v212;
          goto LABEL_100;
        }

        v319 = v210 + 1;
        if (v210 + 2 < v317)
        {
          uint64_t v211 = *(void *)(v315 + 8 * (v210 + 2));
          if (v211)
          {
            v210 += 2LL;
            goto LABEL_100;
          }

          v319 = v210 + 2;
          if (v210 + 3 < v317)
          {
            uint64_t v211 = *(void *)(v315 + 8 * (v210 + 3));
            if (v211)
            {
              v210 += 3LL;
              goto LABEL_100;
            }

            uint64_t v212 = v210 + 4;
            v319 = v210 + 3;
            if (v210 + 4 < v317)
            {
              uint64_t v211 = *(void *)(v315 + 8 * v212);
              if (!v211)
              {
                while (1)
                {
                  uint64_t v210 = v212 + 1;
                  if (__OFADD__(v212, 1LL)) {
                    break;
                  }
                  if (v210 >= v317)
                  {
                    v319 = v309;
                    goto LABEL_117;
                  }

                  uint64_t v211 = *(void *)(v315 + 8 * v210);
                  ++v212;
                  if (v211) {
                    goto LABEL_100;
                  }
                }

                __break(1u);
                goto LABEL_167;
              }

              goto LABEL_103;
            }
          }
        }
      }

        if ((v87 & 1) != 0) {
          goto LABEL_126;
        }
        uint64_t v95 = &v62[16 * v64];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        int64_t v75 = __OFSUB__(v96, v97);
        unint64_t v98 = v96 - v97;
        if (v75) {
          goto LABEL_129;
        }
        if (v98 < v86) {
          goto LABEL_14;
        }
LABEL_96:
        Swift::String v103 = v17;
        uint64_t v104 = v64 - 1;
        if (v64 - 1 >= v18)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }

        if (!*v134) {
          goto LABEL_144;
        }
        uint64_t v105 = v16;
        uint64_t v106 = &v62[16 * v104];
        uint64_t v107 = *(void *)v106;
        char v108 = &v62[16 * v64];
        char v109 = *((void *)v108 + 1);
        char v110 = v129;
        sub_1002C059C( *v134 + *(void *)(v128 + 72) * *(void *)v106,  *v134 + *(void *)(v128 + 72) * *(void *)v108,  *v134 + *(void *)(v128 + 72) * v109,  v127);
        uint64_t v129 = v110;
        if (v110) {
          goto LABEL_116;
        }
        if (v109 < v107) {
          goto LABEL_119;
        }
        if (v64 > *((void *)v105 + 2)) {
          goto LABEL_120;
        }
        *(void *)uint64_t v106 = v107;
        *(void *)&v62[16 * v104 + 8] = v109;
        int64_t v111 = *((void *)v105 + 2);
        if (v64 >= v111) {
          goto LABEL_121;
        }
        uint64_t v16 = v105;
        uint64_t v18 = v111 - 1;
        memmove(&v62[16 * v64], v108 + 16, 16 * (v111 - 1 - v64));
        *((void *)v105 + 2) = v111 - 1;
        uint64_t v92 = v111 > 2;
        uint64_t v17 = v103;
        if (!v92) {
          goto LABEL_14;
        }
      }
    }

    uint64_t v18 = 1LL;
LABEL_14:
    uint64_t v10 = v134[1];
    if (v17 >= v10) {
      goto LABEL_105;
    }
  }

  uint64_t v131 = v10;
  BOOL v121 = v16;
  uint64_t v52 = 0LL;
  uint64_t v53 = v137 * (v17 - 1);
  uint64_t v54 = v17 * v137;
  uint64_t v55 = v19;
  NSString v56 = v19 * v137;
  uint64_t v35 = v134;
  uint64_t v126 = v19;
  do
  {
    if (v55 != v17 + v52 - 1)
    {
      uint64_t v57 = v130;
      if (!v130) {
        goto LABEL_145;
      }
      uint64_t v58 = v130 + v56;
      uint64_t v59 = v130 + v53;
      sub_1001870BC(v130 + v56, v125, &qword_1006453B0);
      if (v56 < v53 || v58 >= v57 + v54)
      {
        swift_arrayInitWithTakeFrontToBack(v57 + v56, v57 + v53, 1LL, v135);
        uint64_t v51 = v137;
      }

      else
      {
        uint64_t v51 = v137;
        if (v56 != v53) {
          swift_arrayInitWithTakeBackToFront(v58);
        }
      }

      sub_1001870BC(v125, v59, &qword_1006453B0);
      uint64_t v35 = v134;
      uint64_t v19 = v126;
    }

    ++v55;
    --v52;
    v53 -= v51;
    v54 -= v51;
    v56 += v51;
  }

  while (v55 < v17 + v52);
  uint64_t v16 = v121;
  uint64_t v10 = v131;
  if (v17 >= v131) {
    goto LABEL_57;
  }
LABEL_25:
  if (__OFSUB__(v17, v19)) {
    goto LABEL_138;
  }
  if (v17 - v19 >= v123) {
    goto LABEL_57;
  }
  if (__OFADD__(v19, v123)) {
    goto LABEL_141;
  }
  if (v19 + v123 >= v10) {
    uint64_t v36 = v10;
  }
  else {
    uint64_t v36 = v19 + v123;
  }
  if (v36 >= v19)
  {
    if (v17 != v36)
    {
      BOOL v121 = v16;
      uint64_t v37 = *(void *)(v128 + 72);
      unint64_t v137 = v37 * (v17 - 1);
      uint64_t v130 = v37;
      uint64_t v38 = v17 * v37;
      uint64_t v126 = v19;
      char v124 = v36;
      do
      {
        uint64_t v40 = 0LL;
        uint64_t v41 = v19;
        uint64_t v131 = v17;
        while (1)
        {
          uint64_t v42 = *v35;
          uint64_t v43 = v38;
          uint64_t v44 = v38 + v40 + *v35;
          uint64_t v45 = v132;
          uint64_t v46 = v35;
          sub_1001915A4(v44, v132, &qword_1006453B0);
          uint64_t v47 = v133;
          sub_1001915A4(v137 + v40 + v42, v133, &qword_1006453B0);
          LOBYTE(v42) = static Date.> infix(_:_:)(v45 + *(int *)(v135 + 48), v47 + *(int *)(v135 + 48));
          sub_100187100(v47, &qword_1006453B0);
          sub_100187100(v45, &qword_1006453B0);
          if ((v42 & 1) == 0) {
            break;
          }
          uint64_t v48 = *v46;
          if (!*v46) {
            goto LABEL_143;
          }
          uint64_t v38 = v43;
          uint64_t v49 = v48 + v43 + v40;
          uint64_t v50 = v48 + v137 + v40;
          sub_1001870BC(v49, v136, &qword_1006453B0);
          swift_arrayInitWithTakeFrontToBack(v49, v50, 1LL, v135);
          sub_1001870BC(v136, v50, &qword_1006453B0);
          uint64_t v39 = v131;
          v40 -= v130;
          ++v41;
          uint64_t v35 = v134;
          if (v131 == v41) {
            goto LABEL_35;
          }
        }

        uint64_t v39 = v131;
        uint64_t v38 = v43;
        uint64_t v35 = v46;
LABEL_35:
        uint64_t v17 = v39 + 1;
        v137 += v130;
        v38 += v130;
        uint64_t v19 = v126;
      }

      while (v17 != v124);
      uint64_t v17 = v124;
      uint64_t v16 = v121;
    }

    goto LABEL_57;
  }

LABEL_117:
      uint64_t v209 = sub_100183098(&qword_100645010);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v209 - 8) + 56LL))(v198, 1LL, 1LL, v209);
      uint64_t v200 = 0LL;
      goto LABEL_118;
    }

      uint64_t v213 = sub_100183098(&qword_100645010);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v213 - 8) + 56LL))(v202, 1LL, 1LL, v213);
      uint64_t v204 = 0LL;
      goto LABEL_118;
    }

LABEL_100:
    uint64_t v200 = (v207 - 1) & v207;
    uint64_t v201 = __clz(__rbit64(v207)) + (v206 << 6);
    uint64_t v313 = v206;
LABEL_96:
    uint64_t v202 = v312;
    (*((void (**)(char *, uint64_t, uint64_t))v319 + 2))( v281,  *((void *)v312 + 6) + *((void *)v319 + 9) * v201,  v50);
    uint64_t v203 = v318;
    uint64_t v204 = *((void *)v202 + 7) + *(void *)(v318 + 72) * v201;
    uint64_t v205 = sub_100183098(&qword_100645010);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v203 + 16))(v198 + *(int *)(v205 + 48), v204, v17);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v205 - 8) + 56LL))(v198, 0LL, 1LL, v205);
LABEL_118:
    sub_1001870BC(v198, v73, &qword_100645018);
    uint64_t v210 = sub_100183098(&qword_100645010);
    uint64_t v211 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v210 - 8) + 48LL);
    if (v211(v73, 1LL, v210) != 1)
    {
      uint64_t v212 = v73 + *(int *)(v210 + 48);
      uint64_t v213 = v301;
      (*((void (**)(uint64_t, uint64_t, uint64_t))v319 + 4))(v301, v73, v50);
      uint64_t v214 = v318;
      uint64_t v215 = *(void (**)(char *, uint64_t, uint64_t))(v318 + 32);
      v215(v305, v212, v17);
      uint64_t v216 = *(void *)(v286 + 64);
      uint64_t v217 = *(void *)(v216 + 16);
      uint64_t v317 = v200;
      if (v217)
      {
        swift_bridgeObjectRetain(v216);
        unint64_t v218 = sub_1003AD618(v213);
        uint64_t v214 = v318;
        if ((v219 & 1) != 0)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v318 + 16))( v38,  *(void *)(v216 + 56) + *(void *)(v318 + 72) * v218,  v17);
          v220 = *(void (**)(void, void, void, void))(v214 + 56);
          uint64_t v221 = v38;
          uint64_t v222 = 0LL;
        }

        else
        {
          v220 = *(void (**)(void, void, void, void))(v318 + 56);
          uint64_t v221 = v38;
          uint64_t v222 = 1LL;
        }

        v315 = v220;
        v220(v221, v222, 1LL, v17);
        swift_bridgeObjectRelease(v216);
        a1 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v214 + 48))(v38, 1LL, v17) != 1;
      }

      else
      {
        v315 = *(void (**)(void, void, void, void))(v214 + 56);
        v315(v38, 1LL, 1LL, v17);
        a1 = 0LL;
      }

      uint64_t v223 = v284;
      sub_100219774((uint64_t)v38, v284);
      v224 = *(void (**)(char *, char *, uint64_t))(v214 + 16);
      uint64_t v225 = v285;
      v224(v285, v305, v17);
      if (!(_DWORD)a1)
      {
        uint64_t v197 = *(void (**)(char *, uint64_t))(v214 + 8);
        v197(v225, v17);
        sub_100187100(v223, &qword_100656490);
        goto LABEL_92;
      }

      uint64_t v226 = (uint64_t)v277;
      v224(v277, v225, v17);
      v315(v226, 0LL, 1LL, v17);
      uint64_t v227 = v278;
      a1 = v278 + *(int *)(v276 + 48);
      sub_100219774(v223, v278);
      sub_100219774(v226, a1);
      v228 = *(unsigned int (**)(int64_t, uint64_t, uint64_t))(v214 + 48);
      if (v228(v227, 1LL, v17) == 1)
      {
        sub_100187100(v226, &qword_100656490);
        uint64_t v197 = *(void (**)(char *, uint64_t))(v214 + 8);
        v197(v225, v17);
        sub_100187100(v223, &qword_100656490);
        if (v228(a1, 1LL, v17) == 1)
        {
          sub_100187100(v278, &qword_100656490);
          uint64_t v73 = (uint64_t)v302;
          uint64_t v38 = v314;
LABEL_92:
          uint64_t v50 = v316;
LABEL_93:
          v197(v305, v17);
          (*((void (**)(uint64_t, uint64_t))v319 + 1))(v301, v50);
          sub_100187100((uint64_t)v38, &qword_100656490);
          unint64_t v196 = v317;
          continue;
        }

        uint64_t v230 = v278;
LABEL_132:
        uint64_t v38 = v314;
        uint64_t v50 = v316;
        sub_100187100(v230, &qword_100649DB8);
      }

      else
      {
        uint64_t v229 = v274;
        sub_100219774(v227, v274);
        if (v228(a1, 1LL, v17) == 1)
        {
          sub_100187100((uint64_t)v277, &qword_100656490);
          uint64_t v197 = *(void (**)(char *, uint64_t))(v318 + 8);
          v197(v285, v17);
          sub_100187100(v284, &qword_100656490);
          v197((char *)v229, v17);
          uint64_t v230 = v227;
          goto LABEL_132;
        }

        v242 = v273;
        v215(v273, a1, v17);
        uint64_t v243 = sub_100183F14( &qword_100649DD0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFNWInterfaceType,  (uint64_t)&protocol conformance descriptor for SFNWInterfaceType);
        a1 = dispatch thunk of static Equatable.== infix(_:_:)(v229, v242, v17, v243);
        uint64_t v197 = *(void (**)(char *, uint64_t))(v318 + 8);
        v197(v242, v17);
        sub_100187100((uint64_t)v277, &qword_100656490);
        v197(v285, v17);
        sub_100187100(v284, &qword_100656490);
        v197((char *)v229, v17);
        sub_100187100(v227, &qword_100656490);
        uint64_t v73 = (uint64_t)v302;
        uint64_t v38 = v314;
        uint64_t v50 = v316;
        if ((a1 & 1) != 0) {
          goto LABEL_93;
        }
      }

      unint64_t v231 = v306;
      if (*(void *)(v306 + 16) && (unint64_t v232 = sub_1003AD618(v301), (v233 & 1) != 0))
      {
        v224(v275, (char *)(*(void *)(v231 + 56) + *(void *)(v318 + 72) * v232), v17);
        uint64_t v234 = 0LL;
        int v235 = (__CFString *)v307;
      }

      else
      {
        uint64_t v234 = 1LL;
        int v235 = (__CFString *)v308;
      }

      uint64_t v236 = (uint64_t)v275;
      v315(v275, v234, 1LL, v17);
      sub_100187100(v236, &qword_100656490);
      a1 = *(void *)(v286 + 56);
      uint64_t v237 = v235;
      swift_retain(a1);
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      SFNWInterfaceType.description.getter();
      uint64_t v240 = v239;
      NSString v241 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v240);
      sub_10002FB54((uint64_t)v237, (uint64_t)v310, isa, (uint64_t)v241, 0.0);
      swift_release(a1);

      uint64_t v73 = (uint64_t)v302;
      goto LABEL_93;
    }

    break;
  }

  swift_bridgeObjectRelease(v306);
  uint64_t v244 = v312;
  swift_release(v312);
  uint64_t v245 = swift_bridgeObjectRetain(v244);
  a1 = sub_100247FD4(v245);
  swift_bridgeObjectRelease(v244);
  uint64_t v246 = *(void *)(v286 + 64);
  uint64_t v247 = swift_bridgeObjectRetain(v246);
  uint64_t v248 = v272;
  sub_1002413A4(v247, v272);
  swift_bridgeObjectRelease(v246);
  unsigned int v249 = v211(v248, 1LL, v210);
  sub_100187100(v248, &qword_100645018);
  if (*(void *)(a1 + 16))
  {
    if (v249 != 1)
    {
      swift_release(a1);
      goto LABEL_155;
    }

    if (qword_100643F48 != -1) {
      goto LABEL_165;
    }
LABEL_143:
    uint64_t v250 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v250, (uint64_t)qword_1006484C8);
    uint64_t v251 = swift_retain(a1);
    v252 = (os_log_s *)Logger.logObject.getter(v251);
    os_log_type_t v253 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v252, v253))
    {
      v254 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v255 = swift_slowAlloc(32LL, -1LL);
      unint64_t v322 = v255;
      *(_DWORD *)v254 = 136315138;
      v319 = v254 + 4;
      uint64_t v256 = swift_retain(a1);
      uint64_t v257 = sub_1002410D0(v256);
      swift_release(a1);
      uint64_t v320 = v257;
      uint64_t v258 = sub_100183098((uint64_t *)&unk_10064D7D0);
      uint64_t v259 = sub_1001CD538( (unint64_t *)&qword_100649800,  (uint64_t *)&unk_10064D7D0,  (uint64_t)&protocol conformance descriptor for [A]);
      uint64_t v260 = BidirectionalCollection<>.joined(separator:)(44LL, 0xE100000000000000LL, v258, v259);
      unint64_t v262 = v261;
      swift_bridgeObjectRelease(v257);
      uint64_t v320 = sub_10018CDB4(v260, v262, (uint64_t *)&v322);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v320, v321, v319, v254 + 12);
      swift_release_n(a1, 2LL);
      swift_bridgeObjectRelease(v262);
      _os_log_impl((void *)&_mh_execute_header, v252, v253, "Transfers using cellular: %s", v254, 0xCu);
      swift_arrayDestroy(v255, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v255, -1LL, -1LL);
      swift_slowDealloc(v254, -1LL, -1LL);
    }

    else
    {

      swift_release_n(a1, 2LL);
    }

    char v268 = 1;
  }

  else
  {
    swift_release(a1);
    if (v249 == 1) {
      goto LABEL_155;
    }
    if (qword_100643F48 != -1) {
      swift_once(&qword_100643F48, sub_100216318);
    }
    uint64_t v263 = type metadata accessor for Logger(0LL);
    uint64_t v264 = sub_100186DE4(v263, (uint64_t)qword_1006484C8);
    v265 = (os_log_s *)Logger.logObject.getter(v264);
    os_log_type_t v266 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v265, v266))
    {
      v267 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v267 = 0;
      _os_log_impl((void *)&_mh_execute_header, v265, v266, "Transfers stopped using cellular", v267, 2u);
      swift_slowDealloc(v267, -1LL, -1LL);
    }

    char v268 = 0;
  }

  sub_100418F9C(v268);
LABEL_155:
  uint64_t v269 = *(void *)(v286 + 64);
  *(void *)(v286 + 64) = v312;
  return swift_bridgeObjectRelease(v269);
}

    uint64_t v204 = (v211 - 1) & v211;
    uint64_t v205 = __clz(__rbit64(v211)) + (v210 << 6);
    v319 = v210;
LABEL_96:
    uint64_t v206 = v318;
    (*((void (**)(char *, uint64_t, uint64_t))v325 + 2))( v287,  *((void *)v318 + 6) + *((void *)v325 + 9) * v205,  v50);
    unint64_t v207 = v324;
    uint64_t v208 = *((void *)v206 + 7) + *(void *)(v324 + 72) * v205;
    uint64_t v209 = sub_100183098(&qword_100645010);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 16))(v202 + *(int *)(v209 + 48), v208, v17);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v209 - 8) + 56LL))(v202, 0LL, 1LL, v209);
LABEL_118:
    sub_1001870BC(v202, v73, &qword_100645018);
    uint64_t v214 = sub_100183098(&qword_100645010);
    uint64_t v215 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v214 - 8) + 48LL);
    if (v215(v73, 1LL, v214) != 1)
    {
      uint64_t v216 = v73 + *(int *)(v214 + 48);
      uint64_t v217 = v307;
      (*((void (**)(uint64_t, uint64_t, uint64_t))v325 + 4))(v307, v73, v50);
      unint64_t v218 = v324;
      char v219 = *(void (**)(char *, uint64_t, uint64_t))(v324 + 32);
      v219(v311, v216, v17);
      v220 = *(void *)(v292 + 160);
      uint64_t v221 = *(void *)(v220 + 16);
      v323 = v204;
      if (v221)
      {
        swift_bridgeObjectRetain((const char *)v220);
        uint64_t v222 = sub_1003AD618(v217);
        unint64_t v218 = v324;
        if ((v223 & 1) != 0)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v324 + 16))( v38,  *(void *)(v220 + 56) + *(void *)(v324 + 72) * v222,  v17);
          v224 = *(void (**)(void, void, void, void))(v218 + 56);
          uint64_t v225 = v38;
          uint64_t v226 = 0LL;
        }

        else
        {
          v224 = *(void (**)(void, void, void, void))(v324 + 56);
          uint64_t v225 = v38;
          uint64_t v226 = 1LL;
        }

        v321 = v224;
        v224(v225, v226, 1LL, v17);
        uint64_t v227 = swift_bridgeObjectRelease((const char *)v220);
        a1 = (*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v218 + 48))(v38, 1LL, v17, v227) != 1;
      }

      else
      {
        v321 = *(void (**)(void, void, void, void))(v218 + 56);
        v321(v38, 1LL, 1LL, v17);
        a1 = 0LL;
      }

      v228 = v290;
      sub_100219774((uint64_t)v38, v290);
      uint64_t v229 = *(void (**)(char *, char *, uint64_t))(v218 + 16);
      uint64_t v230 = v291;
      v229(v291, v311, v17);
      if (!(_DWORD)a1)
      {
        uint64_t v201 = *(void (**)(char *, uint64_t))(v218 + 8);
        v201(v230, v17);
        sub_100187100(v228, &qword_100656490);
        goto LABEL_92;
      }

      unint64_t v231 = (uint64_t)v283;
      v229(v283, v230, v17);
      v321(v231, 0LL, 1LL, v17);
      unint64_t v232 = v284;
      a1 = v284 + *(int *)(v282 + 48);
      sub_100219774(v228, v284);
      sub_100219774(v231, a1);
      char v233 = *(unsigned int (**)(int64_t, uint64_t, uint64_t))(v218 + 48);
      if (v233(v232, 1LL, v17) == 1)
      {
        sub_100187100(v231, &qword_100656490);
        uint64_t v201 = *(void (**)(char *, uint64_t))(v218 + 8);
        v201(v230, v17);
        sub_100187100(v228, &qword_100656490);
        if (v233(a1, 1LL, v17) == 1)
        {
          sub_100187100(v284, &qword_100656490);
          uint64_t v73 = (uint64_t)v308;
          uint64_t v38 = v320;
LABEL_92:
          uint64_t v50 = v322;
LABEL_93:
          v201(v311, v17);
          (*((void (**)(uint64_t, uint64_t))v325 + 1))(v307, v50);
          sub_100187100((uint64_t)v38, &qword_100656490);
          uint64_t v200 = v323;
          continue;
        }

        int v235 = v284;
LABEL_132:
        uint64_t v38 = v320;
        uint64_t v50 = v322;
        sub_100187100(v235, &qword_100649DB8);
      }

      else
      {
        uint64_t v234 = v280;
        sub_100219774(v232, v280);
        if (v233(a1, 1LL, v17) == 1)
        {
          sub_100187100((uint64_t)v283, &qword_100656490);
          uint64_t v201 = *(void (**)(char *, uint64_t))(v324 + 8);
          v201(v291, v17);
          sub_100187100(v290, &qword_100656490);
          v201((char *)v234, v17);
          int v235 = v232;
          goto LABEL_132;
        }

        uint64_t v247 = v279;
        v219(v279, a1, v17);
        uint64_t v248 = sub_100183F14( &qword_100649DD0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFNWInterfaceType,  (uint64_t)&protocol conformance descriptor for SFNWInterfaceType);
        a1 = dispatch thunk of static Equatable.== infix(_:_:)(v234, v247, v17, v248);
        uint64_t v201 = *(void (**)(char *, uint64_t))(v324 + 8);
        v201(v247, v17);
        sub_100187100((uint64_t)v283, &qword_100656490);
        v201(v291, v17);
        sub_100187100(v290, &qword_100656490);
        v201((char *)v234, v17);
        sub_100187100(v232, &qword_100656490);
        uint64_t v73 = (uint64_t)v308;
        uint64_t v38 = v320;
        uint64_t v50 = v322;
        if ((a1 & 1) != 0) {
          goto LABEL_93;
        }
      }

      uint64_t v236 = v312;
      if (*((void *)v312 + 2) && (uint64_t v237 = sub_1003AD618(v307), (v238 & 1) != 0))
      {
        v229(v281, (char *)(*((void *)v236 + 7) + *(void *)(v324 + 72) * v237), v17);
        uint64_t v239 = 0LL;
        uint64_t v240 = (void *)v313;
      }

      else
      {
        uint64_t v239 = 1LL;
        uint64_t v240 = (void *)v314;
      }

      NSString v241 = (uint64_t)v281;
      v321(v281, v239, 1LL, v17);
      sub_100187100(v241, &qword_100656490);
      a1 = *(void *)(v292 + 152);
      v242 = v240;
      swift_retain(a1);
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      SFNWInterfaceType.description.getter(isa);
      uint64_t v245 = v244;
      uint64_t v246 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v245);
      sub_10002FB54((uint64_t)v242, (uint64_t)v316, isa, (uint64_t)v246, 0.0);
      swift_release(a1);

      uint64_t v73 = (uint64_t)v308;
      goto LABEL_93;
    }

    break;
  }

  swift_bridgeObjectRelease(v312);
  unsigned int v249 = v318;
  swift_release(v318);
  uint64_t v250 = swift_bridgeObjectRetain(v249);
  a1 = sub_100247FD4(v250);
  *(void *)&uint64_t v251 = swift_bridgeObjectRelease(v249).n128_u64[0];
  v252 = *(const char **)(v292 + 160);
  os_log_type_t v253 = swift_bridgeObjectRetain(v252, v251);
  v254 = v278;
  sub_1002413A4(v253, v278);
  uint64_t v255 = swift_bridgeObjectRelease(v252);
  uint64_t v256 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v215)(v254, 1LL, v214, v255);
  sub_100187100(v254, &qword_100645018);
  if (*(void *)(a1 + 16))
  {
    if (v256 != 1)
    {
      swift_release(a1);
      goto LABEL_155;
    }

    if (qword_100643F48 != -1) {
      goto LABEL_165;
    }
LABEL_143:
    uint64_t v257 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v257, (uint64_t)qword_1006484C8);
    uint64_t v258 = swift_retain(a1);
    uint64_t v259 = (os_log_s *)Logger.logObject.getter(v258);
    uint64_t v260 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v259, v260))
    {
      unint64_t v261 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      unint64_t v262 = swift_slowAlloc(32LL, -1LL);
      v328 = v262;
      *(_DWORD *)unint64_t v261 = 136315138;
      v325 = v261 + 4;
      uint64_t v263 = swift_retain(a1);
      uint64_t v264 = (const char *)sub_1002410D0(v263);
      swift_release(a1);
      v326 = (uint64_t)v264;
      v265 = sub_100183098((uint64_t *)&unk_10064D7D0);
      os_log_type_t v266 = sub_1001CD538( (unint64_t *)&qword_100649800,  (uint64_t *)&unk_10064D7D0,  (uint64_t)&protocol conformance descriptor for [A]);
      v267 = BidirectionalCollection<>.joined(separator:)(44LL, 0xE100000000000000LL, v265, v266);
      uint64_t v269 = v268;
      swift_bridgeObjectRelease(v264);
      v326 = sub_10018CDB4(v267, (unint64_t)v269, (uint64_t *)&v328);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v326, v327, v325, v261 + 12);
      swift_release_n(a1, 2LL);
      swift_bridgeObjectRelease(v269);
      _os_log_impl((void *)&_mh_execute_header, v259, v260, "Transfers using cellular: %s", v261, 0xCu);
      swift_arrayDestroy(v262, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v262, -1LL, -1LL);
      swift_slowDealloc(v261, -1LL, -1LL);
    }

    else
    {

      swift_release_n(a1, 2LL);
    }

    v275 = 1;
  }

  else
  {
    swift_release(a1);
    if (v256 == 1) {
      goto LABEL_155;
    }
    if (qword_100643F48 != -1) {
      swift_once(&qword_100643F48, sub_100216318);
    }
    v270 = type metadata accessor for Logger(0LL);
    uint64_t v271 = sub_100186DE4(v270, (uint64_t)qword_1006484C8);
    uint64_t v272 = (os_log_s *)Logger.logObject.getter(v271);
    v273 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v272, v273))
    {
      uint64_t v274 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v274 = 0;
      _os_log_impl((void *)&_mh_execute_header, v272, v273, "Transfers stopped using cellular", v274, 2u);
      swift_slowDealloc(v274, -1LL, -1LL);
    }

    v275 = 0;
  }

  sub_100418F9C(v275);
LABEL_155:
  uint64_t v276 = *(const char **)(v292 + 160);
  *(void *)(v292 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v318;
  swift_bridgeObjectRelease(v276);
}

    swift_errorRelease(v37);
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v211, v211);
    __break(1u);
    return result;
  }

  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.legacyTransferState(_:))
  {
    uint64_t v34 = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 96))(v33, v14);
    uint64_t v36 = 0LL;
    uint64_t v37 = 0LL;
    uint64_t v210 = 0LL;
    uint64_t v211 = 0LL;
    uint64_t v38 = *v33;
    goto LABEL_3;
  }

  uint64_t v208 = 1LL;
  uint64_t v209 = (char *)_swiftEmptyArrayStorage;
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.created(_:)
    || (_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.autoAccepted(_:))
  {
    uint64_t v36 = 0LL;
    uint64_t v37 = 0LL;
    uint64_t v210 = 0LL;
    uint64_t v211 = 0LL;
    goto LABEL_19;
  }

  uint64_t v36 = 0LL;
  uint64_t v37 = 0LL;
  uint64_t v210 = 0LL;
  uint64_t v211 = 0LL;
  if ((_DWORD)v34 != enum case for SFAirDropReceive.Transfer.State.analyizingPreview(_:))
  {
    if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForContactExchangeRequest(_:))
    {
      unint64_t v186 = (uint64_t)v213;
      sub_100187100((uint64_t)v213, (uint64_t *)&unk_100645130);
      uint64_t v211 = 1LL;
      uint64_t v34 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v144)(v186, 1LL, 1LL, v214);
      goto LABEL_47;
    }

    _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
    __break(1u);
    goto LABEL_100;
  }

void sub_10024370C(int64_t a1, const char *a2)
{
  v305 = a2;
  uint64_t v282 = sub_100183098(&qword_100649DB8);
  __chkstk_darwin(v282);
  uint64_t v284 = (uint64_t)&v277 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_100183098(&qword_100645018);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v278 = (uint64_t)&v277 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  v287 = (char *)&v277 - v8;
  __chkstk_darwin(v7);
  v308 = (char *)&v277 - v9;
  uint64_t v298 = sub_100183098(&qword_100649DC0);
  uint64_t v10 = __chkstk_darwin(v298);
  v310 = (char *)&v277 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  v297 = (char *)&v277 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v309 = (uint64_t)&v277 - v15;
  __chkstk_darwin(v14);
  uint64_t v296 = (char *)&v277 - v16;
  uint64_t v17 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v324 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  v279 = (char *)&v277 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  v291 = (char *)&v277 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v311 = (char *)&v277 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v293 = (char *)&v277 - v25;
  __chkstk_darwin(v24);
  uint64_t v299 = (char *)&v277 - v26;
  uint64_t v27 = sub_100183098(&qword_100656490);
  uint64_t v28 = __chkstk_darwin(v27);
  v281 = (char *)&v277 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v280 = (uint64_t)&v277 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  int64_t v283 = (char *)&v277 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v290 = (uint64_t)&v277 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v277 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  v285 = (char *)&v277 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  v295 = (char *)&v277 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  v294 = (char *)&v277 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v286 = (char *)&v277 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v304 = (char *)&v277 - v48;
  __chkstk_darwin(v47);
  uint64_t v303 = (char *)&v277 - v49;
  uint64_t v50 = type metadata accessor for UUID(0LL);
  v325 = *(uint8_t **)(v50 - 8);
  uint64_t v51 = __chkstk_darwin(v50);
  uint64_t v307 = (uint64_t)&v277 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v323 = (uint64_t)&v277 - v54;
  __chkstk_darwin(v53);
  NSString v56 = (char *)&v277 - v55;
  uint64_t v302 = sub_100183098(&qword_100649DC8);
  uint64_t v57 = __chkstk_darwin(v302);
  uint64_t v318 = (char *)&v277 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v301 = (char *)&v277 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v317 = (uint64_t)&v277 - v62;
  __chkstk_darwin(v61);
  int64_t v300 = (char *)&v277 - v63;
  v312 = (const char *)sub_1003918D8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v64 = *(void *)(a1 + 64);
  int64_t v288 = a1 + 64;
  uint64_t v65 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v66 = -1LL;
  if (v65 < 64) {
    uint64_t v66 = ~(-1LL << v65);
  }
  unint64_t v67 = v66 & v64;
  int64_t v289 = (unint64_t)(v65 + 63) >> 6;
  int64_t v306 = a1;
  swift_bridgeObjectRetain((const char *)a1);
  unint64_t v68 = 0LL;
  uint64_t v320 = v38;
  v321 = (void (*)(void, void, void, void))v17;
  uint64_t v322 = v50;
  uint64_t v319 = (uint64_t)v56;
  while (1)
  {
    if (v67)
    {
      v314 = (const __CFString *)((v67 - 1) & v67);
      unint64_t v315 = v68;
      unint64_t v71 = __clz(__rbit64(v67)) | (v68 << 6);
      goto LABEL_25;
    }

    int64_t v72 = v68 + 1;
    if (__OFADD__(v68, 1LL)) {
      goto LABEL_158;
    }
    uint64_t v73 = (uint64_t)v308;
    if (v72 >= v289) {
      break;
    }
    unint64_t v74 = *(void *)(v288 + 8 * v72);
    int64_t v75 = v68 + 1;
    if (!v74)
    {
      int64_t v75 = v68 + 2;
      unint64_t v74 = *(void *)(v288 + 8 * v75);
      if (!v74)
      {
        int64_t v75 = v68 + 3;
        unint64_t v74 = *(void *)(v288 + 8 * v75);
        if (!v74)
        {
          int64_t v75 = v68 + 4;
          unint64_t v74 = *(void *)(v288 + 8 * v75);
          if (!v74)
          {
            unint64_t v76 = v68 + 5;
            unint64_t v74 = *(void *)(v288 + 8 * v76);
            if (!v74)
            {
              while (1)
              {
                int64_t v75 = v76 + 1;
                if (__OFADD__(v76, 1LL)) {
                  goto LABEL_163;
                }
                if (v75 >= v289) {
                  goto LABEL_45;
                }
                unint64_t v74 = *(void *)(v288 + 8 * v75);
                ++v76;
                if (v74) {
                  goto LABEL_24;
                }
              }
            }

            int64_t v75 = v68 + 5;
          }
        }
      }
    }

uint64_t sub_100245400(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2);
  uint64_t v8 = a2;
  sub_100247BBC(a1, (uint64_t)sub_100247B30, 0LL, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  if (v2) {
    swift_bridgeObjectRelease(v6);
  }
  return v6;
}

uint64_t sub_10024547C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100649C30);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100649C30);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_10024550C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  uint64_t v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_100644048 != -1) {
    swift_once(&qword_100644048, sub_10024547C);
  }
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = sub_100186DE4(v5, (uint64_t)qword_100649C30);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "SDAirDropReceiveService start", v9, 2u);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  uint64_t v10 = v1[5];
  *(void *)(v10 + 24) = &off_1005D65E0;
  swift_unknownObjectWeakAssign(v10 + 16, v1);
  sub_100249E0C();
  uint64_t v11 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v4, 1LL, 1LL, v11);
  uint64_t v12 = qword_100643F28;
  swift_retain(v1);
  if (v12 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v13 = static AirDropActor.shared;
  uint64_t v14 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v15 = (void *)swift_allocObject(&unk_1005D6688, 40LL, 7LL);
  v15[2] = v13;
  v15[3] = v14;
  void v15[4] = v1;
  swift_retain(v13);
  uint64_t v16 = sub_1001B341C((uint64_t)v4, (uint64_t)&unk_100649D88, (uint64_t)v15);
  swift_release(v16);
  sub_100418F9C(0);
  uint64_t v17 = (const char *)v1[20];
  v1[20] = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v17);
  swift_beginAccess(v1 + 14, v24, 33LL, 0LL);
  uint64_t v18 = v1[17];
  if (v18)
  {
    uint64_t v19 = v1[18];
    sub_1002499B4((uint64_t)(v1 + 14), v1[17]);
    uint64_t v20 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v19 + 16);
    uint64_t v21 = swift_unknownObjectRetain(v1);
    v20(v21, &off_1005D65D0, v18, v19);
  }

  return swift_endAccess(v24);
}

uint64_t sub_10024577C(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  v2[7] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[8] = v4;
  void v2[9] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_100649E10);
  v2[10] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v2[11] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[12] = v7;
  unint64_t v8 = (*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[13] = swift_task_alloc(v8);
  v2[14] = swift_task_alloc(v8);
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v2[15] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v2[16] = v10;
  v2[17] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v11 = static AirDropActor.shared;
  v2[18] = static AirDropActor.shared;
  return swift_task_switch(sub_100245894, v11, 0LL);
}

uint64_t sub_100245894()
{
  if (qword_100644048 != -1) {
    swift_once(&qword_100644048, sub_10024547C);
  }
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[15];
  sub_100186DE4(v0[7], (uint64_t)qword_100649C30);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v1, v4);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[17];
  uint64_t v10 = v0[15];
  if (v8)
  {
    uint64_t v75 = v0[16];
    uint64_t v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v77 = swift_slowAlloc(32LL, -1LL);
    uint64_t v80 = v77;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v12 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter(v10, v12);
    uint64_t v15 = (const char *)v14;
    v0[4] = sub_10018CDB4(v13, v14, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 4, v0 + 5, v11 + 4, v11 + 12);
    __n128 v16 = swift_bridgeObjectRelease(v15);
    (*(void (**)(uint64_t, uint64_t, __n128))(v75 + 8))(v9, v10, v16);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Canceling receive transfer %s", v11, 0xCu);
    swift_arrayDestroy(v77, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v77, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t))(v0[16] + 8LL))(v9, v10);
  }

  unint64_t v18 = CurrentValueSubject.value.getter(v17);
  uint64_t v19 = v0[2];
  if (!*(void *)(v19 + 16) || (unint64_t v18 = sub_1003AD580(v0[5]), (v20 & 1) == 0))
  {
    uint64_t v36 = SFAirDrop.TransferIdentifier.stringValue.getter(v18);
    uint64_t v38 = (const char *)v37;
    uint64_t v39 = sub_10037C5B0(8LL, v36, v37);
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    uint64_t v45 = v44;
    swift_bridgeObjectRelease(v38);
    uint64_t v46 = static String._fromSubstring(_:)(v39, v41, v43, v45);
    uint64_t v48 = v47;
    swift_bridgeObjectRelease(v45);
    uint64_t v80 = 0x2E706F7244726941LL;
    unint64_t v81 = 0xE800000000000000LL;
    v49._uint64_t countAndFlagsBits = v46;
    v49._object = v48;
    String.append(_:)(v49);
    swift_bridgeObjectRelease((const char *)v48);
    Logger.init(subsystem:category:)(0xD000000000000011LL, 0x8000000100505BA0LL, v80, v81);
    swift_bridgeObjectRetain((const char *)v19);
    uint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
    os_log_type_t v52 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v74 = v0[15];
      uint64_t v53 = v0[11];
      uint64_t v76 = v0[8];
      uint64_t v78 = v0[7];
      uint64_t v79 = v0[9];
      uint64_t v54 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v55 = swift_slowAlloc(32LL, -1LL);
      uint64_t v80 = v55;
      *(_DWORD *)uint64_t v54 = 136315138;
      uint64_t v56 = sub_100183F14( &qword_100646250,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      swift_bridgeObjectRetain((const char *)v19);
      uint64_t v58 = Dictionary.Keys.description.getter(v57, v74, v53, v56);
      uint64_t v60 = v59;
      swift_bridgeObjectRelease((const char *)v19);
      v0[3] = sub_10018CDB4(v58, (unint64_t)v60, &v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 3, v0 + 4, v54 + 4, v54 + 12);
      swift_bridgeObjectRelease(v60);
      swift_bridgeObjectRelease_n(v19, 2LL);
      _os_log_impl( (void *)&_mh_execute_header,  v51,  v52,  "No receive transfer to cancel. Current transfer IDs: %s",  v54,  0xCu);
      swift_arrayDestroy(v55, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1LL, -1LL);
      swift_slowDealloc(v54, -1LL, -1LL);

      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v79, v78);
    }

    else
    {
      uint64_t v62 = v0[8];
      uint64_t v61 = v0[9];
      uint64_t v63 = v0[7];
      swift_bridgeObjectRelease_n(v19, 2LL);

      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
    }

    uint64_t v64 = type metadata accessor for SFAirDropReceive.Failure(0LL);
    uint64_t v65 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    swift_allocError(v64, v65, 0LL, 0LL);
    uint64_t v67 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v64 - 8) + 104LL))( v66,  enum case for SFAirDropReceive.Failure.badRequest(_:),  v64);
    swift_willThrow(v67);
    uint64_t v69 = v0[13];
    uint64_t v68 = v0[14];
    uint64_t v71 = v0[9];
    uint64_t v70 = v0[10];
    swift_task_dealloc(v0[17]);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    uint64_t v35 = (uint64_t (*)(void))v0[1];
    return v35();
  }

  uint64_t v21 = v0[13];
  uint64_t v22 = v0[14];
  uint64_t v23 = v0[11];
  uint64_t v24 = v0[12];
  uint64_t v25 = v0[10];
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 16))( v21,  *(void *)(v19 + 56) + *(void *)(v24 + 72) * v18,  v23);
  __n128 v26 = swift_bridgeObjectRelease((const char *)v19);
  uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v24 + 32))(v22, v21, v23, v26);
  SFAirDropReceive.Transfer.cancelAction.getter(v27);
  uint64_t v28 = type metadata accessor for SFAirDrop.DeclineAction(0LL);
  v0[19] = v28;
  uint64_t v29 = *(void *)(v28 - 8);
  v0[20] = v29;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v25, 1LL, v28) == 1)
  {
    uint64_t v30 = v0[10];
    (*(void (**)(void, void))(v0[12] + 8LL))(v0[14], v0[11]);
    sub_100187100(v30, &qword_100649E10);
    uint64_t v31 = v0[13];
    uint64_t v32 = v0[14];
    uint64_t v34 = v0[9];
    uint64_t v33 = v0[10];
    swift_task_dealloc(v0[17]);
    swift_task_dealloc(v32);
    swift_task_dealloc(v31);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    uint64_t v35 = (uint64_t (*)(void))v0[1];
    return v35();
  }

  uint64_t v73 = (void *)swift_task_alloc(async function pointer to SFAirDrop.DeclineAction.decline()[1]);
  v0[21] = v73;
  *uint64_t v73 = v0;
  v73[1] = sub_100245EE8;
  return SFAirDrop.DeclineAction.decline()();
}

uint64_t sub_100245EE8()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 168LL);
  *(void *)(*(void *)v1 + 176LL) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = v2[18];
    uint64_t v5 = sub_100245FD8;
  }

  else
  {
    uint64_t v6 = v2[18];
    (*(void (**)(void, void))(v2[20] + 8LL))(v2[10], v2[19]);
    uint64_t v5 = sub_100245F64;
    uint64_t v4 = v6;
  }

  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_100245F64()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  swift_task_dealloc(*(void *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100245FD8()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 80);
  (*(void (**)(void, void))(*(void *)(v0 + 96) + 8LL))(*(void *)(v0 + 112), *(void *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 80);
  swift_task_dealloc(*(void *)(v0 + 136));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10024606C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[5] = a4;
  uint64_t v5 = sub_100183098(&qword_100649D90);
  void v4[6] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_100649D98);
  v4[9] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[10] = v8;
  v4[11] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  v4[12] = static AirDropActor.shared;
  return swift_task_switch(sub_100246130, v9, 0LL);
}

uint64_t sub_100246130()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  v0[2] = *(void *)(v0[5] + 48LL);
  uint64_t v4 = sub_100183098(&qword_100649DA0);
  uint64_t v5 = sub_1001CD538( &qword_100649DA8,  &qword_100649DA0,  (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  Publisher<>.values.getter(v4, v5);
  AsyncPublisher.makeAsyncIterator()(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v6 = static AirDropActor.shared;
  uint64_t v7 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v10 = (char *)&dword_100649DB0 + dword_100649DB0;
  uint64_t v8 = (void *)swift_task_alloc(unk_100649DB4);
  v0[13] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100246258;
  return ((uint64_t (*)(uint64_t, uint64_t, void *))v10)(v6, v7, v0 + 3);
}

uint64_t sub_100246258(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 96LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 104LL);
  *(void *)(*(void *)v1 + 112LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002462B4, v3, 0LL);
}

uint64_t sub_1002462B4()
{
  uint64_t v1 = *(const char **)(v0 + 112);
  if (v1)
  {
    if (qword_100644048 != -1) {
      swift_once(&qword_100644048, sub_10024547C);
    }
    uint64_t v2 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v2, (uint64_t)qword_100649C30);
    uint64_t v3 = swift_bridgeObjectRetain_n(v1, 2LL);
    uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v7 = swift_slowAlloc(32LL, -1LL);
      uint64_t v22 = v7;
      *(_DWORD *)uint64_t v6 = 136315138;
      uint64_t v8 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      uint64_t v9 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
      uint64_t v10 = sub_100183F14( &qword_100646250,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      uint64_t v11 = swift_bridgeObjectRetain(v1);
      uint64_t v12 = Dictionary.description.getter(v11, v8, v9, v10);
      unint64_t v14 = v13;
      swift_bridgeObjectRelease(v1);
      *(void *)(v0 + sub_100195658(v0 + 32) = sub_10018CDB4(v12, (unint64_t)v14, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v6 + 4, v6 + 12);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease_n(v1, 2LL);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Receive transfers updates in daemon: %s", v6, 0xCu);
      swift_arrayDestroy(v7, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1LL, -1LL);
      swift_slowDealloc(v6, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(v1, 2LL);
    }

    sub_10024370C((int64_t)&_swiftEmptyDictionarySingleton, v1);
    swift_bridgeObjectRelease(v1);
    uint64_t v18 = static AirDropActor.shared;
    uint64_t v19 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100649DB0 + dword_100649DB0);
    char v20 = (void *)swift_task_alloc(unk_100649DB4);
    *(void *)(v0 + 104) = v20;
    *char v20 = v0;
    v20[1] = sub_100246258;
    return v21(v18, v19);
  }

  else
  {
    uint64_t v15 = *(void *)(v0 + 88);
    uint64_t v16 = *(void *)(v0 + 64);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 80) + 8LL))(v15, *(void *)(v0 + 72));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1002465A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[20] = a3;
  v4[21] = a4;
  void v4[19] = a2;
  uint64_t v5 = sub_100183098(&qword_100646560);
  v4[22] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for UUID(0LL);
  v4[23] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[24] = v7;
  uint64_t v8 = *(void *)(v7 + 64);
  v4[25] = v8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  void v4[26] = swift_task_alloc(v9);
  v4[27] = swift_task_alloc(v9);
  uint64_t v10 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  v4[28] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v4[29] = v11;
  v4[30] = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for SFAirDrop.DisplayPriority(0LL);
  v4[31] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v4[32] = v13;
  v4[33] = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v4[34] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v4[35] = v15;
  v4[36] = swift_task_alloc((*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v4[37] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v4[38] = v17;
  uint64_t v18 = *(void *)(v17 + 64);
  v4[39] = v18;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  v4[40] = swift_task_alloc(v19);
  v4[41] = swift_task_alloc(v19);
  v4[42] = swift_task_alloc(v19);
  v4[43] = swift_task_alloc(v19);
  uint64_t v20 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v4[44] = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  v4[45] = v21;
  unint64_t v22 = (*(void *)(v21 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[46] = swift_task_alloc(v22);
  v4[47] = swift_task_alloc(v22);
  v4[48] = swift_task_alloc(v22);
  v4[49] = swift_task_alloc(v22);
  unint64_t v23 = (*(void *)(*(void *)(sub_100183098(&qword_100649D48) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[50] = swift_task_alloc(v23);
  v4[51] = swift_task_alloc(v23);
  v4[52] = swift_task_alloc(v23);
  v4[53] = swift_task_alloc(v23);
  v4[54] = swift_task_alloc(v23);
  uint64_t v24 = sub_100183098(&qword_100649D60);
  v4[55] = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  v4[56] = v25;
  v4[57] = swift_task_alloc((*(void *)(v25 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v26 = static AirDropActor.shared;
  v4[58] = static AirDropActor.shared;
  return swift_task_switch(sub_100246810, v26, 0LL);
}

uint64_t sub_100246810()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = sub_100183098(&qword_100649D40);
  SFNoThrowAsyncSequence.makeAsyncIterator()(v2);
  swift_beginAccess(v1 + 112, v0 + 10, 0LL, 0LL);
  v0[59] = static AirDropActor.shared;
  v0[60] = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v3 = sub_1001CD538( &qword_100649D68,  &qword_100649D60,  (uint64_t)&protocol conformance descriptor for SFNoThrowAsyncSequence<A>.AsyncIterator);
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[61] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002468F8;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[54], v0[55], v3);
}

uint64_t sub_1002468F8()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 488LL);
  *(void *)(*(void *)v1 + 496LL) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = v2[59];
    if (v4)
    {
      uint64_t v5 = v2[60];
      uint64_t ObjectType = swift_getObjectType(v4);
      uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v5);
      uint64_t v9 = v8;
    }

    else
    {
      uint64_t v7 = 0LL;
      uint64_t v9 = 0LL;
    }

    uint64_t v11 = sub_100247364;
    uint64_t v10 = v7;
  }

  else
  {
    uint64_t v10 = v2[58];
    uint64_t v11 = sub_100246990;
    uint64_t v9 = 0LL;
  }

  return swift_task_switch(v11, v10, v9);
}

uint64_t sub_100246990()
{
  unint64_t v1 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v4 = *(uint64_t (**)(void, void, void, __n128))(v3 + 48);
  if (((unsigned int (*)(unint64_t, uint64_t, uint64_t))v4)(v1, 1LL, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 448) + 8LL))(*(void *)(v0 + 456), *(void *)(v0 + 440));
    if (qword_100644048 != -1) {
      swift_once(&qword_100644048, sub_10024547C);
    }
    uint64_t v5 = *(void *)(v0 + 392);
    uint64_t v7 = *(void *)(v0 + 352);
    uint64_t v6 = *(void *)(v0 + 360);
    uint64_t v8 = *(void *)(v0 + 160);
    uint64_t v9 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v9, (uint64_t)qword_100649C30);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    *(void *)(v0 + 504) = v10;
    uint64_t v11 = v10(v5, v8, v7);
    uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
    os_log_type_t v13 = static os_log_type_t.default.getter();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = *(void *)(v0 + 392);
    uint64_t v17 = *(void *)(v0 + 352);
    uint64_t v16 = *(void *)(v0 + 360);
    if (v14)
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      int64_t v142 = v4;
      uint64_t v145 = (const char *)swift_slowAlloc(32LL, -1LL);
      unint64_t v19 = v145;
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v20 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter(v17, v20);
      unint64_t v23 = (const char *)v22;
      *(void *)(v0 + 112) = sub_10018CDB4(v21, v22, (uint64_t *)&v145);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v18 + 4, v18 + 12);
      __n128 v24 = swift_bridgeObjectRelease(v23);
      (*(void (**)(uint64_t, uint64_t, __n128))(v16 + 8))(v15, v17, v24);
      _os_log_impl( (void *)&_mh_execute_header,  v12,  v13,  "SDAirDropReceiveService.transfers REMOVE {id: %s}",  v18,  0xCu);
      swift_arrayDestroy(v19, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v25 = v19;
      uint64_t v4 = v142;
      swift_slowDealloc(v25, -1LL, -1LL);
      swift_slowDealloc(v18, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(void, void))(v16 + 8))(*(void *)(v0 + 392), *(void *)(v0 + 352));
    }

    *(void *)(v0 + 536) = *(void *)(*(void *)(v0 + 168) + 48LL);
    CurrentValueSubject.value.getter(v62);
    uint64_t v63 = *(void *)(v0 + 104);
    if (*(void *)(v63 + 16))
    {
      unint64_t v64 = sub_1003AD580(*(void *)(v0 + 160));
      uint64_t v65 = *(void *)(v0 + 408);
      uint64_t v66 = *(void *)(v0 + 296);
      uint64_t v67 = *(void *)(v0 + 304);
      if ((v68 & 1) != 0)
      {
        (*(void (**)(void, unint64_t, void))(v67 + 16))( *(void *)(v0 + 408),  *(void *)(v63 + 56) + *(void *)(v67 + 72) * v64,  *(void *)(v0 + 296));
        uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56);
        v69(v65, 0LL, 1LL, v66);
      }

      else
      {
        uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56);
        v69(*(void *)(v0 + 408), 1LL, 1LL, v66);
      }
    }

    else
    {
      uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 304) + 56LL);
      v69(*(void *)(v0 + 408), 1LL, 1LL, *(void *)(v0 + 296));
    }

    *(void *)(v0 + 544) = v69;
    uint64_t v98 = *(void *)(v0 + 408);
    uint64_t v99 = *(void *)(v0 + 296);
    __n128 v100 = swift_bridgeObjectRelease((const char *)v63);
    int v101 = v4(v98, 1LL, v99, v100);
    uint64_t v102 = *(void *)(v0 + 408);
    if (v101 == 1)
    {
      sub_100187100(*(void *)(v0 + 408), &qword_100649D48);
      uint64_t v104 = *(void *)(v0 + 424);
      uint64_t v103 = *(void *)(v0 + 432);
      uint64_t v105 = *(void *)(v0 + 408);
      uint64_t v106 = *(void *)(v0 + 416);
      uint64_t v108 = *(void *)(v0 + 392);
      uint64_t v107 = *(void *)(v0 + 400);
      uint64_t v110 = *(void *)(v0 + 376);
      uint64_t v109 = *(void *)(v0 + 384);
      uint64_t v111 = *(void *)(v0 + 368);
      uint64_t v126 = *(void *)(v0 + 344);
      uint64_t v128 = *(void *)(v0 + 336);
      uint64_t v130 = *(void *)(v0 + 328);
      *(void *)uint64_t typea = *(void *)(v0 + 320);
      uint64_t v134 = *(void *)(v0 + 288);
      uint64_t v136 = *(void *)(v0 + 264);
      uint64_t v138 = *(void *)(v0 + 240);
      uint64_t v140 = *(void *)(v0 + 216);
      uint64_t v141 = *(void *)(v0 + 208);
      uint64_t v144 = *(void *)(v0 + 176);
      swift_task_dealloc(*(void *)(v0 + 456));
      swift_task_dealloc(v103);
      swift_task_dealloc(v104);
      swift_task_dealloc(v106);
      swift_task_dealloc(v105);
      swift_task_dealloc(v107);
      swift_task_dealloc(v108);
      swift_task_dealloc(v109);
      swift_task_dealloc(v110);
      swift_task_dealloc(v111);
      swift_task_dealloc(v126);
      swift_task_dealloc(v128);
      swift_task_dealloc(v130);
      swift_task_dealloc(*(void *)typea);
      swift_task_dealloc(v134);
      swift_task_dealloc(v136);
      swift_task_dealloc(v138);
      swift_task_dealloc(v140);
      swift_task_dealloc(v141);
      swift_task_dealloc(v144);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }

    else
    {
      uint64_t v113 = *(void *)(v0 + 320);
      uint64_t v114 = *(void *)(v0 + 296);
      uint64_t v115 = *(void *)(v0 + 168);
      uint64_t v116 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 304) + 32LL);
      *(void *)(v0 + 552) = v116;
      uint64_t v117 = v116(v113, v102, v114);
      if (*(void *)(v115 + 136))
      {
        return swift_task_switch(sub_100247678, *(void *)(v0 + 464), 0LL);
      }

      else
      {
        SFAirDropReceive.Transfer.askRequest.getter(v117);
        BOOL v122 = (void *)swift_task_alloc(dword_10064DABC);
        *(void *)(v0 + 56_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v122;
        *BOOL v122 = v0;
        v122[1] = sub_1002476DC;
        return sub_1002E7AB4(*(void *)(v0 + 240));
      }
    }
  }

  else
  {
    int64_t v143 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v4;
    uint64_t v135 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 32);
    v135(*(void *)(v0 + 344), v1, v2);
    if (qword_100644048 != -1) {
      swift_once(&qword_100644048, sub_10024547C);
    }
    uint64_t v26 = *(void *)(v0 + 384);
    uint64_t v27 = *(void *)(v0 + 352);
    uint64_t v28 = *(void *)(v0 + 360);
    uint64_t v30 = *(void *)(v0 + 336);
    uint64_t v29 = *(void *)(v0 + 344);
    uint64_t v31 = *(void *)(v0 + 296);
    uint64_t v32 = *(void *)(v0 + 304);
    uint64_t v33 = *(void *)(v0 + 160);
    uint64_t v34 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v34, (uint64_t)qword_100649C30);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
    v35(v26, v33, v27);
    unint64_t v139 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
    uint64_t v36 = v139(v30, v29, v31);
    unint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.default.getter();
    BOOL v39 = os_log_type_enabled(v37, v38);
    unint64_t v40 = *(void *)(v0 + 384);
    uint64_t v42 = *(void *)(v0 + 352);
    uint64_t v41 = *(void *)(v0 + 360);
    uint64_t v43 = *(void *)(v0 + 336);
    uint64_t v44 = *(void *)(v0 + 296);
    uint64_t v137 = *(void *)(v0 + 304);
    if (v39)
    {
      uint64_t v123 = *(void *)(v0 + 336);
      os_log_type_t type = v38;
      uint64_t v45 = *(void *)(v0 + 288);
      uint64_t v125 = *(void *)(v0 + 280);
      uint64_t v124 = *(void *)(v0 + 272);
      uint64_t v127 = *(void *)(v0 + 296);
      uint64_t v46 = swift_slowAlloc(22LL, -1LL);
      uint64_t v129 = (const char *)swift_slowAlloc(64LL, -1LL);
      uint64_t v145 = v129;
      *(_DWORD *)uint64_t v46 = 136315394;
      uint64_t v47 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter(v42, v47);
      uint64_t v133 = v35;
      uint64_t v50 = (const char *)v49;
      *(void *)(v0 + 136) = sub_10018CDB4(v48, v49, (uint64_t *)&v145);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v46 + 4, v46 + 12);
      __n128 v51 = swift_bridgeObjectRelease(v50);
      os_log_type_t v52 = *(uint64_t (**)(unint64_t, uint64_t, __n128))(v41 + 8);
      uint64_t v53 = v52(v40, v42, v51);
      *(_WORD *)(v46 + 12) = 2080;
      SFAirDropReceive.Transfer.state.getter(v53);
      uint64_t v54 = sub_100183F14( &qword_100649D78,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
      uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter(v124, v54);
      unint64_t v57 = v56;
      uint64_t v58 = (void (*)(unint64_t, uint64_t))v52;
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v45, v124);
      *(void *)(v0 + 144) = sub_10018CDB4(v55, v57, (uint64_t *)&v145);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v46 + 14, v46 + 22);
      uint64_t v59 = (const char *)v57;
      uint64_t v35 = v133;
      __n128 v60 = swift_bridgeObjectRelease(v59);
      uint64_t v61 = *(void (**)(uint64_t, uint64_t, __n128))(v137 + 8);
      v61(v123, v127, v60);
      _os_log_impl( (void *)&_mh_execute_header,  v37,  type,  "SDAirDropReceiveService.transfers UPDATE {id: %s, state: %s}",  (uint8_t *)v46,  0x16u);
      swift_arrayDestroy(v129, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v129, -1LL, -1LL);
      swift_slowDealloc(v46, -1LL, -1LL);
    }

    else
    {
      uint64_t v58 = *(void (**)(unint64_t, uint64_t))(v41 + 8);
      v58(v40, v42);
      uint64_t v61 = *(void (**)(uint64_t, uint64_t, __n128))(v137 + 8);
      ((void (*)(uint64_t, uint64_t))v61)(v43, v44);
    }

    *(void *)(v0 + 512) = v61;
    uint64_t v70 = *(void *)(v0 + 424);
    uint64_t v71 = *(void *)(v0 + 344);
    uint64_t v73 = *(void *)(v0 + 296);
    uint64_t v72 = *(void *)(v0 + 304);
    v35(*(void *)(v0 + 376), *(void *)(v0 + 160), *(void *)(v0 + 352));
    v139(v70, v71, v73);
    uint64_t v74 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v72 + 56);
    v74(v70, 0LL, 1LL, v73);
    uint64_t v75 = v0 + 16;
    uint64_t v76 = (void (*)(uint64_t, void))CurrentValueSubject.value.modify(v0 + 16);
    uint64_t v78 = v77;
    int v79 = v143(v70, 1LL, v73);
    uint64_t v80 = *(void *)(v0 + 376);
    if (v79 == 1)
    {
      sub_100187100(*(void *)(v0 + 424), &qword_100649D48);
      unint64_t v81 = *v78;
      swift_bridgeObjectRetain(*v78);
      unint64_t v82 = sub_1003AD580(v80);
      char v84 = v83;
      __n128 v85 = swift_bridgeObjectRelease(v81);
      if ((v84 & 1) != 0)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v78);
        *(void *)(v0 + 128) = *v78;
        *uint64_t v78 = (const char *)0x8000000000000000LL;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1003AE5A4();
        }
        uint64_t v87 = *(void *)(v0 + 416);
        uint64_t v88 = *(void *)(v0 + 296);
        uint64_t v89 = *(void *)(v0 + 304);
        v58( *(void *)(*(void *)(v0 + 128) + 48LL) + *(void *)(*(void *)(v0 + 360) + 72LL) * v82,  *(void *)(v0 + 352));
        uint64_t v90 = *(void *)(v0 + 128);
        v135(v87, *(void *)(v90 + 56) + *(void *)(v89 + 72) * v82, v88);
        sub_1001CB85C(v82, v90);
        uint64_t v91 = *v78;
        *uint64_t v78 = (const char *)v90;
        __n128 v85 = swift_bridgeObjectRelease(v91);
        uint64_t v92 = 0LL;
        uint64_t v75 = v0 + 16;
      }

      else
      {
        uint64_t v92 = 1LL;
      }

      uint64_t v118 = *(void *)(v0 + 416);
      unint64_t v119 = *(void *)(v0 + 376);
      uint64_t v120 = *(void *)(v0 + 352);
      ((void (*)(uint64_t, uint64_t, uint64_t, void, __n128))v74)(v118, v92, 1LL, *(void *)(v0 + 296), v85);
      v58(v119, v120);
      sub_100187100(v118, &qword_100649D48);
    }

    else
    {
      uint64_t v93 = *(void *)(v0 + 352);
      uint64_t v94 = *(void *)(v0 + 328);
      v135(v94, *(void *)(v0 + 424), *(void *)(v0 + 296));
      char v95 = swift_isUniquelyReferenced_nonNull_native(*v78);
      uint64_t v145 = *v78;
      *uint64_t v78 = (const char *)0x8000000000000000LL;
      sub_1003B2C88(v94, v80, v95);
      uint64_t v96 = *v78;
      *uint64_t v78 = v145;
      __n128 v97 = swift_bridgeObjectRelease(v96);
      ((void (*)(uint64_t, uint64_t, __n128))v58)(v80, v93, v97);
    }

    v76(v75, 0LL);
    uint64_t v121 = (void *)swift_task_alloc(dword_10064974C);
    *(void *)(v0 + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v121;
    void *v121 = v0;
    v121[1] = sub_1002473C4;
    return sub_10023051C(*(void *)(v0 + 344));
  }

uint64_t sub_100247364()
{
  *(void *)(v0 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(void *)(v0 + 496);
  uint64_t v1 = sub_100183098(&qword_100645710);
  uint64_t v2 = swift_dynamicCast(v1, v0 + 120, v1, &type metadata for Never, 7LL);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_1002473C4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 464LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 520LL));
  return swift_task_switch(sub_10024741C, v1, 0LL);
}

uint64_t sub_10024741C()
{
  if (*(void *)(v0[21] + 136LL)) {
    return swift_task_switch(sub_100247498, v0[58], 0LL);
  }
  uint64_t v2 = (void *)swift_task_alloc(dword_10064DAAC);
  v0[66] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1002474EC;
  return sub_1002E76D8(v0[43]);
}

uint64_t sub_100247498()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_10064DAAC);
  *(void *)(v0 + 528) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002474EC;
  return sub_1002E76D8(*(void *)(v0 + 344));
}

uint64_t sub_1002474EC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 464LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 528LL));
  return swift_task_switch(sub_100247544, v1, 0LL);
}

uint64_t sub_100247544(uint64_t a1)
{
  uint64_t v2 = v1[43];
  uint64_t v3 = v1[36];
  uint64_t v13 = v1[37];
  BOOL v14 = (void (*)(uint64_t, uint64_t))v1[64];
  uint64_t v4 = v1[34];
  uint64_t v5 = v1[35];
  uint64_t v7 = v1[32];
  uint64_t v6 = v1[33];
  uint64_t v8 = v1[31];
  uint64_t v9 = SFAirDropReceive.Transfer.state.getter(a1);
  SFAirDropReceive.Transfer.displayPriority.getter(v9);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_1003941C4(v2);
  v14(v2, v13);
  v1[59] = static AirDropActor.shared;
  v1[60] = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v10 = sub_1001CD538( &qword_100649D68,  &qword_100649D60,  (uint64_t)&protocol conformance descriptor for SFNoThrowAsyncSequence<A>.AsyncIterator);
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v1[61] = v11;
  void *v11 = v1;
  v11[1] = sub_1002468F8;
  return dispatch thunk of AsyncIteratorProtocol.next()(v1[54], v1[55], v10);
}

uint64_t sub_100247678(uint64_t a1)
{
  uint64_t v2 = (void *)swift_task_alloc(dword_10064DABC);
  *(void *)(v1 + 56_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1002476DC;
  return sub_1002E7AB4(*(void *)(v1 + 240));
}

uint64_t sub_1002476DC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 464LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 232LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 240LL);
  uint64_t v4 = *(void *)(*(void *)v0 + 224LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 560LL));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_100247754, v1, 0LL);
}

uint64_t sub_100247754()
{
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 552);
  uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 544);
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
  uint64_t v45 = *(void *)(v0 + 400);
  uint64_t v39 = *(void *)(v0 + 368);
  uint64_t v41 = *(void *)(v0 + 352);
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 296);
  uint64_t v6 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 216);
  uint64_t v7 = *(void *)(v0 + 192);
  uint64_t v30 = *(void *)(v0 + 200);
  uint64_t v31 = *(void *)(v0 + 312);
  uint64_t v8 = *(void *)(v0 + 176);
  uint64_t v29 = *(void *)(v0 + 184);
  uint64_t v35 = *(void *)(v0 + 160);
  uint64_t v37 = v1;
  SFAirDropReceive.Transfer.receiveID.getter();
  uint64_t v9 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v8, 1LL, 1LL, v9);
  uint64_t v33 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v29);
  uint64_t v10 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = (v10 + 16) & ~v10;
  uint64_t v12 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = (v31 + v12 + v11) & ~v12;
  uint64_t v14 = swift_allocObject(&unk_1005D6660, v13 + v30, v10 | v12 | 7);
  uint64_t v15 = v2;
  uint64_t v16 = v4;
  v32(v14 + v11, v15, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v14 + v13, v6, v29);
  uint64_t v17 = static Task<>.noThrow(priority:operation:)(v8, &unk_100649D70, v14, (char *)&type metadata for () + 8);
  swift_release(v14);
  swift_release(v17);
  sub_100187100(v8, &qword_100646560);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v29);
  v43(v39, v35, v41);
  v47(v45, 1LL, 1LL, v16);
  uint64_t v18 = (void (*)(uint64_t, void))CurrentValueSubject.value.modify(v0 + 48);
  sub_1002E5220(v45, v39);
  v18(v0 + 48, 0LL);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v37, v16);
  uint64_t v20 = *(void *)(v0 + 424);
  uint64_t v19 = *(void *)(v0 + 432);
  uint64_t v21 = *(void *)(v0 + 408);
  uint64_t v22 = *(void *)(v0 + 416);
  uint64_t v24 = *(void *)(v0 + 392);
  uint64_t v23 = *(void *)(v0 + 400);
  uint64_t v26 = *(void *)(v0 + 376);
  uint64_t v25 = *(void *)(v0 + 384);
  uint64_t v27 = *(void *)(v0 + 368);
  uint64_t v34 = *(void *)(v0 + 344);
  uint64_t v36 = *(void *)(v0 + 336);
  uint64_t v38 = *(void *)(v0 + 328);
  uint64_t v40 = *(void *)(v0 + 320);
  uint64_t v42 = *(void *)(v0 + 288);
  uint64_t v44 = *(void *)(v0 + 264);
  uint64_t v46 = *(void *)(v0 + 240);
  uint64_t v48 = *(void *)(v0 + 216);
  uint64_t v49 = *(void *)(v0 + 208);
  uint64_t v50 = *(void *)(v0 + 176);
  swift_task_dealloc(*(void *)(v0 + 456));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v21);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100247A7C()
{
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));
  sub_100195658(v0 + 56);
  sub_10018709C((void *)(v0 + 72));
  sub_100187100(v0 + 112, &qword_100649E00);
  swift_release(*(void *)(v0 + 152));
  swift_bridgeObjectRelease(*(const char **)(v0 + 160));

  return v0;
}

uint64_t sub_100247AF0()
{
  return swift_deallocClassInstance(v0, 176LL, 7LL);
}

uint64_t type metadata accessor for SDAirDropReceiveService()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary23SDAirDropReceiveService);
}

uint64_t sub_100247B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + *(int *)(sub_100183098(&qword_100645010) + 48);
  uint64_t v5 = a2 + *(int *)(sub_100183098(&qword_100645020) + 48);
  uint64_t v6 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a2, a1, v6);
  uint64_t v7 = type metadata accessor for SFNWInterfaceType(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16LL))(v5, v4, v7);
}

uint64_t sub_100247BBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v66 = a5;
  uint64_t v9 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v54 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v53 = (char *)&v51 - v14;
  __chkstk_darwin(v13);
  uint64_t v58 = (char *)&v51 - v15;
  uint64_t v57 = type metadata accessor for UUID(0LL);
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_100183098(&qword_100649DE0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = -1LL << *(_BYTE *)(a1 + 32);
  uint64_t v22 = ~v21;
  uint64_t v23 = *(void *)(a1 + 64);
  uint64_t v24 = -v21;
  uint64_t v59 = a1;
  uint64_t v60 = a1 + 64;
  if (v24 < 64) {
    uint64_t v25 = ~(-1LL << v24);
  }
  else {
    uint64_t v25 = -1LL;
  }
  uint64_t v61 = v22;
  uint64_t v62 = 0LL;
  uint64_t v63 = v25 & v23;
  uint64_t v64 = a2;
  uint64_t v65 = a3;
  uint64_t v52 = a1;
  swift_bridgeObjectRetain(a1);
  uint64_t v51 = a3;
  swift_retain(a3);
  sub_100185714((uint64_t)v20);
  uint64_t v26 = sub_100183098(&qword_100645020);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48LL))(v20, 1LL, v26) == 1)
  {
LABEL_5:
    swift_release(v51);
    swift_bridgeObjectRelease(v52);
    sub_100187094(v59);
    return swift_release(v65);
  }

  unint64_t v56 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  while (1)
  {
    uint64_t v34 = &v20[*(int *)(v26 + 48)];
    v56(v17, v20, v57);
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v35(v58, v34, v9);
    uint64_t v36 = (void *)*v66;
    unint64_t v38 = sub_1003AD618((uint64_t)v17);
    uint64_t v39 = v36[2];
    BOOL v40 = (v37 & 1) == 0;
    uint64_t v41 = v39 + v40;
    if (__OFADD__(v39, v40)) {
      break;
    }
    char v42 = v37;
    if (v36[3] >= v41)
    {
      if ((a4 & 1) != 0)
      {
        uint64_t v44 = v66;
        uint64_t v47 = (void *)*v66;
        if ((v37 & 1) != 0) {
          goto LABEL_7;
        }
      }

      else
      {
        uint64_t v44 = v66;
        sub_1003AEE9C();
        uint64_t v47 = (void *)*v44;
        if ((v42 & 1) != 0) {
          goto LABEL_7;
        }
      }
    }

    else
    {
      uint64_t v43 = a4 & 1;
      uint64_t v44 = v66;
      sub_1003A9F00(v41, v43);
      unint64_t v45 = sub_1003AD618((uint64_t)v17);
      if ((v42 & 1) != (v46 & 1)) {
        goto LABEL_22;
      }
      unint64_t v38 = v45;
      uint64_t v47 = (void *)*v44;
      if ((v42 & 1) != 0)
      {
LABEL_7:
        uint64_t v28 = v47[7];
        unint64_t v29 = *(void *)(v10 + 72) * v38;
        uint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
        uint64_t v31 = v54;
        v30(v54, v28 + v29, v9);
        uint64_t v32 = v53;
        v30(v53, (unint64_t)v31, v9);
        uint64_t v33 = *(void (**)(char *, uint64_t))(v10 + 8);
        v33(v31, v9);
        v33(v58, v9);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v17, v57);
        (*(void (**)(unint64_t, char *, uint64_t))(v10 + 40))(*(void *)(*v44 + 56LL) + v29, v32, v9);
        goto LABEL_8;
      }
    }

    v47[(v38 >> 6) + 8] |= 1LL << v38;
    v56((char *)(v47[6] + *(void *)(v55 + 72) * v38), v17, v57);
    v35((char *)(v47[7] + *(void *)(v10 + 72) * v38), v58, v9);
    uint64_t v48 = v47[2];
    BOOL v49 = __OFADD__(v48, 1LL);
    uint64_t v50 = v48 + 1;
    if (v49) {
      goto LABEL_21;
    }
    v47[2] = v50;
LABEL_8:
    sub_100185714((uint64_t)v20);
    uint64_t v26 = sub_100183098(&qword_100645020);
    a4 = 1;
  }

  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v57);
  __break(1u);
  return result;
}

uint64_t sub_100247FD4(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  unsigned int v4 = v3 & 0x3F;
  unint64_t v5 = (1LL << v3) + 63;
  uint64_t v6 = v5 >> 6;
  size_t v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8LL), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0LL), v7);
    uint64_t v8 = sub_100248124((unint64_t *)((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0LL)), v6, v2);
    if (v1) {
      swift_willThrow(v8);
    }
    else {
      return v8;
    }
  }

  else
  {
    uint64_t v9 = (void *)swift_slowAlloc(v7, -1LL);
    bzero(v9, v7);
    uint64_t v2 = sub_100248124((unint64_t *)v9, v6, v2);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  return v2;
}

uint64_t sub_100248124(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a2;
  char v37 = a1;
  uint64_t v49 = sub_100183098(&qword_100645010);
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v45 = *(void *)(v43 - 8);
  uint64_t v5 = __chkstk_darwin(v43);
  uint64_t v47 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  char v46 = (char *)&v35 - v7;
  uint64_t v44 = type metadata accessor for UUID(0LL);
  uint64_t v54 = *(void *)(v44 - 8);
  uint64_t result = __chkstk_darwin(v44);
  char v42 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int64_t v10 = 0LL;
  uint64_t v51 = (void *)a3;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v38 = 0LL;
  uint64_t v39 = a3 + 64;
  uint64_t v12 = 1LL << *(_BYTE *)(a3 + 32);
  uint64_t v13 = -1LL;
  if (v12 < 64) {
    uint64_t v13 = ~(-1LL << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v40 = (unint64_t)(v12 + 63) >> 6;
  unsigned int v41 = enum case for SFNWInterfaceType.cellular(_:);
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  uint64_t v18 = v44;
  uint64_t v17 = v45;
  uint64_t v20 = v46;
  uint64_t v19 = v47;
  while (1)
  {
    if (v14)
    {
      uint64_t v52 = (v14 - 1) & v14;
      int64_t v53 = v10;
      unint64_t v21 = __clz(__rbit64(v14)) | (v10 << 6);
      goto LABEL_5;
    }

    int64_t v30 = v10 + 1;
    if (__OFADD__(v10, 1LL))
    {
      __break(1u);
      goto LABEL_26;
    }

    if (v30 >= v40) {
      return sub_100248774(v37, v36, v38, v51);
    }
    unint64_t v31 = *(void *)(v39 + 8 * v30);
    int64_t v32 = v10 + 1;
    if (!v31)
    {
      int64_t v32 = v10 + 2;
      if (v10 + 2 >= v40) {
        return sub_100248774(v37, v36, v38, v51);
      }
      unint64_t v31 = *(void *)(v39 + 8 * v32);
      if (!v31)
      {
        int64_t v32 = v10 + 3;
        if (v10 + 3 >= v40) {
          return sub_100248774(v37, v36, v38, v51);
        }
        unint64_t v31 = *(void *)(v39 + 8 * v32);
        if (!v31) {
          break;
        }
      }
    }

uint64_t sub_1002484BC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain(a4);
    return v4;
  }

  sub_100183098(&qword_100649E18);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)(v5);
  uint64_t v9 = result;
  uint64_t v31 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0LL;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0LL;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }

    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1LL)) {
        goto LABEL_40;
      }
      if (v15 >= v31) {
        return v9;
      }
      unint64_t v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v31) {
          return v9;
        }
        unint64_t v16 = a1[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v31) {
            return v9;
          }
          unint64_t v16 = a1[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v31) {
              return v9;
            }
            unint64_t v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1LL)) {
                  goto LABEL_41;
                }
                if (v11 >= v31) {
                  return v9;
                }
                unint64_t v16 = a1[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }

            uint64_t v11 = v17;
          }
        }
      }

uint64_t sub_100248774(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v59 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v53 = *(void *)(v59 - 8);
  uint64_t v8 = __chkstk_darwin(v59);
  uint64_t v58 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v52 = (char *)&v46 - v10;
  uint64_t v11 = type metadata accessor for UUID(0LL);
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v57 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  unint64_t v50 = (char *)&v46 - v14;
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  if (a4[2] == a3)
  {
    swift_retain(a4);
    return (uint64_t)a4;
  }

  sub_100183098(&qword_100649DD8);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)(a3);
  uint64_t v16 = result;
  char v46 = a1;
  uint64_t v47 = a2;
  if (a2 < 1) {
    unint64_t v17 = 0LL;
  }
  else {
    unint64_t v17 = *a1;
  }
  uint64_t v18 = 0LL;
  uint64_t v19 = result + 64;
  uint64_t v48 = a4;
  uint64_t v49 = result;
  uint64_t v20 = v52;
  while (1)
  {
    uint64_t v56 = a3;
    if (v17)
    {
      uint64_t v54 = (v17 - 1) & v17;
      uint64_t v55 = v18;
      unint64_t v21 = __clz(__rbit64(v17)) | (v18 << 6);
    }

    else
    {
      uint64_t v22 = v18 + 1;
      if (__OFADD__(v18, 1LL)) {
        goto LABEL_40;
      }
      if (v22 >= v47) {
        return v16;
      }
      unint64_t v23 = v46[v22];
      uint64_t v24 = v18 + 1;
      if (!v23)
      {
        uint64_t v24 = v18 + 2;
        if (v18 + 2 >= v47) {
          return v16;
        }
        unint64_t v23 = v46[v24];
        if (!v23)
        {
          uint64_t v24 = v18 + 3;
          if (v18 + 3 >= v47) {
            return v16;
          }
          unint64_t v23 = v46[v24];
          if (!v23)
          {
            uint64_t v25 = v18 + 4;
            if (v18 + 4 >= v47) {
              return v16;
            }
            unint64_t v23 = v46[v25];
            if (!v23)
            {
              while (1)
              {
                uint64_t v24 = v25 + 1;
                if (__OFADD__(v25, 1LL)) {
                  goto LABEL_41;
                }
                if (v24 >= v47) {
                  return v16;
                }
                unint64_t v23 = v46[v24];
                ++v25;
                if (v23) {
                  goto LABEL_24;
                }
              }
            }

            uint64_t v24 = v18 + 4;
          }
        }
      }

uint64_t sub_100248B60(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0LL;
    return __clz(__rbit64(v1)) + v2;
  }

  char v5 = *(_BYTE *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1LL << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64LL;
    return __clz(__rbit64(v1)) + v2;
  }

  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128LL;
    return __clz(__rbit64(v1)) + v2;
  }

  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192LL;
    return __clz(__rbit64(v1)) + v2;
  }

  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4LL;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192LL;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64LL;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }

  return v3;
}

uint64_t sub_100248C10(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  v3[13] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[14] = v5;
  v3[15] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_100649D40);
  v3[16] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[17] = v7;
  uint64_t v8 = *(void *)(v7 + 64);
  v3[18] = v8;
  v3[19] = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098(&qword_100646560);
  v3[20] = swift_task_alloc((*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_100649D48);
  v3[21] = swift_task_alloc((*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v3[22] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v3[23] = v12;
  uint64_t v13 = *(void *)(v12 + 64);
  v3[24] = v13;
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  v3[25] = swift_task_alloc(v14);
  v3[26] = swift_task_alloc(v14);
  uint64_t v15 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v3[27] = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  v3[28] = v16;
  v3[29] = swift_task_alloc((*(void *)(v16 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v17 = static AirDropActor.shared;
  v3[30] = static AirDropActor.shared;
  return swift_task_switch(sub_100248D84, v17, 0LL);
}

uint64_t sub_100248D84()
{
  unint64_t v1 = v0 + 6;
  if (qword_100644048 != -1) {
    swift_once(&qword_100644048, sub_10024547C);
  }
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[28];
  uint64_t v3 = v0[29];
  uint64_t v5 = v0[27];
  uint64_t v6 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v6, (uint64_t)qword_100649C30);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[31] = v7;
  uint64_t v8 = v7(v3, v2, v5);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = v0[29];
  if (v11)
  {
    uint64_t v13 = v0[26];
    uint64_t v49 = v0[23];
    uint64_t v14 = v0[22];
    os_log_type_t type = v10;
    uint64_t v53 = v0[27];
    uint64_t v51 = v0[28];
    uint64_t v15 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v55 = swift_slowAlloc(32LL, -1LL);
    uint64_t v59 = v55;
    *(_DWORD *)uint64_t v15 = 136315138;
    SFAirDropReceive.Transfer.id.getter(v55);
    uint64_t v16 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter(v14, v16);
    uint64_t v19 = v18;
    uint64_t v20 = v14;
    unint64_t v1 = v0 + 6;
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v13, v20);
    v0[9] = sub_10018CDB4(v17, (unint64_t)v19, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 9, v0 + 10, v15 + 4, v15 + 12);
    __n128 v21 = swift_bridgeObjectRelease(v19);
    (*(void (**)(uint64_t, uint64_t, __n128))(v51 + 8))(v12, v53, v21);
    _os_log_impl((void *)&_mh_execute_header, v9, type, "SDAirDropReceiveService.transfers ADD {id: %s}", v15, 0xCu);
    swift_arrayDestroy(v55, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1LL, -1LL);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(void, void))(v0[28] + 8LL))(v0[29], v0[27]);
  }

  uint64_t v22 = v0[12];
  swift_beginAccess(v22 + 112, v1, 0LL, 0LL);
  if (*(void *)(v22 + 136))
  {
    SFAirDropReceive.Transfer.id.getter(v23);
    return swift_task_switch(sub_100249290, static AirDropActor.shared, 0LL);
  }

  else
  {
    uint64_t v25 = (void (*)(uint64_t, uint64_t, uint64_t))v0[31];
    uint64_t v27 = v0[27];
    uint64_t v26 = v0[28];
    uint64_t v28 = v0[26];
    uint64_t v52 = v0[24];
    uint64_t v46 = v0[23];
    uint64_t v29 = v0[21];
    uint64_t v47 = v0[22];
    uint64_t v48 = v0[25];
    uint64_t v58 = v0[20];
    uint64_t v50 = v0[18];
    uint64_t v44 = v0[16];
    uint64_t v45 = v0[19];
    *(void *)uint64_t typea = v0[17];
    uint64_t v54 = v0[12];
    uint64_t v43 = v0[11];
    uint64_t v30 = v0[10];
    SFAirDropReceive.Transfer.id.getter(v23);
    v25(v29, v30, v27);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v29, 0LL, 1LL, v27);
    uint64_t v31 = (uint64_t (*)(void *, void))CurrentValueSubject.value.modify(v0 + 2);
    sub_1002E5220(v29, v28);
    uint64_t v32 = v31(v0 + 2, 0LL);
    SFAirDropReceive.Transfer.id.getter(v32);
    uint64_t v33 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56LL))(v58, 1LL, 1LL, v33);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)typea + 16LL))(v45, v43, v44);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v48, v28, v47);
    uint64_t v34 = *(unsigned __int8 *)(*(void *)typea + 80LL);
    uint64_t v35 = (v34 + 16) & ~v34;
    uint64_t v36 = *(unsigned __int8 *)(v46 + 80);
    uint64_t v37 = (v50 + v36 + v35) & ~v36;
    unint64_t v38 = (v52 + v37 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v39 = swift_allocObject(&unk_1005D6638, v38 + 8, v34 | v36 | 7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)typea + 32LL))(v39 + v35, v45, v44);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v39 + v37, v48, v47);
    *(void *)(v39 + v38) = v54;
    swift_retain(v54);
    uint64_t v40 = static Task<>.noThrow(priority:operation:)(v58, &unk_100649D58, v39, (char *)&type metadata for () + 8);
    swift_release(v39);
    swift_release(v40);
    sub_100187100(v58, &qword_100646560);
    uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8))(v28, v47);
    SFAirDropReceive.Transfer.askRequest.getter(v41);
    char v42 = (void *)swift_task_alloc(dword_10064DA54);
    v0[32] = v42;
    *char v42 = v0;
    v42[1] = sub_100249570;
    return sub_1002E7F50(v0[15]);
  }

uint64_t sub_100249290()
{
  uint64_t v1 = v0[30];
  (*(void (**)(void, void))(v0[23] + 8LL))(v0[26], v0[22]);
  return swift_task_switch(sub_1002492D8, v1, 0LL);
}

uint64_t sub_1002492D8(uint64_t a1)
{
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v1[31];
  uint64_t v4 = v1[27];
  uint64_t v3 = v1[28];
  uint64_t v5 = v1[26];
  uint64_t v28 = v1[24];
  uint64_t v24 = v1[23];
  uint64_t v6 = v1[21];
  uint64_t v25 = v1[22];
  uint64_t v26 = v1[25];
  uint64_t v31 = v1[20];
  uint64_t v23 = v1[19];
  uint64_t v27 = v1[18];
  uint64_t v30 = v1[17];
  uint64_t v29 = v1[12];
  uint64_t v7 = v1[10];
  uint64_t v21 = v1[11];
  uint64_t v22 = v1[16];
  SFAirDropReceive.Transfer.id.getter(a1);
  v2(v6, v7, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v6, 0LL, 1LL, v4);
  uint64_t v8 = (uint64_t (*)(void *, void))CurrentValueSubject.value.modify(v1 + 2);
  sub_1002E5220(v6, v5);
  uint64_t v9 = v8(v1 + 2, 0LL);
  SFAirDropReceive.Transfer.id.getter(v9);
  uint64_t v10 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v31, 1LL, 1LL, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v23, v21, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v26, v5, v25);
  uint64_t v11 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v12 = (v11 + 16) & ~v11;
  uint64_t v13 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v14 = (v27 + v13 + v12) & ~v13;
  unint64_t v15 = (v28 + v14 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v16 = swift_allocObject(&unk_1005D6638, v15 + 8, v11 | v13 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v16 + v12, v23, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v16 + v14, v26, v25);
  *(void *)(v16 + v15) = v29;
  swift_retain(v29);
  uint64_t v17 = static Task<>.noThrow(priority:operation:)(v31, &unk_100649D58, v16, (char *)&type metadata for () + 8);
  swift_release(v16);
  swift_release(v17);
  sub_100187100(v31, &qword_100646560);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v5, v25);
  SFAirDropReceive.Transfer.askRequest.getter(v18);
  uint64_t v19 = (void *)swift_task_alloc(dword_10064DA54);
  v1[32] = v19;
  *uint64_t v19 = v1;
  v19[1] = sub_100249570;
  return sub_1002E7F50(v1[15]);
}

uint64_t sub_100249570()
{
  uint64_t v1 = *(void *)(*v0 + 232);
  uint64_t v3 = *(void *)(*v0 + 200);
  uint64_t v2 = *(void *)(*v0 + 208);
  uint64_t v5 = *(void *)(*v0 + 160);
  uint64_t v4 = *(void *)(*v0 + 168);
  uint64_t v6 = *(void *)(*v0 + 152);
  uint64_t v8 = *(void *)(*v0 + 112);
  uint64_t v7 = *(void *)(*v0 + 120);
  uint64_t v9 = *(void *)(*v0 + 104);
  uint64_t v11 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 256));
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(uint64_t))(v11 + 8))(1LL);
}

uint64_t sub_100249640()
{
  uint64_t v1 = sub_100183098(&qword_100649D40);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release(*(void *)(v0 + v8));
  return swift_deallocObject(v0, v8 + 8);
}

uint64_t sub_10024970C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100183098(&qword_100649D40) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for SFAirDrop.TransferIdentifier(0LL) - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v1 + v5;
  uint64_t v10 = v1 + v8;
  uint64_t v11 = *(void *)(v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8LL));
  uint64_t v12 = (void *)swift_task_alloc(dword_100649D54);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1001943E8;
  return sub_1002465A0(a1, v9, v10, v11);
}

uint64_t sub_1002497C8()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_10024987C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SFAirDropReceive.Transfer(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UUID(0LL) - 8) + 80LL);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = v1 + (v8 & ~v7);
  uint64_t v11 = (void *)swift_task_alloc(dword_10064A404);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_100195708;
  return sub_10026A4AC(a1, v9, v10);
}

uint64_t sub_10024991C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_100249948(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_100649D84);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1001943E8;
  return sub_10024606C(a1, v4, v5, v6);
}

uint64_t sub_1002499B4(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }

  return result;
}

uint64_t sub_1002499DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + sub_100195658(v0 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t _s8KeyClassOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }

uint64_t storeEnumTagSinglePayload for SDAirDropServerType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_100249B04 + 4 * byte_1004D0585[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100249B38 + 4 * byte_1004D0580[v4]))();
}

uint64_t sub_100249B38(uint64_t result)
{
  *(_BYTE *)(result + sub_10022D314(2, 1) = v1;
  return result;
}

uint64_t sub_100249B40(uint64_t result, int a2)
{
  *(_WORD *)(result + sub_10022D314(2, 1) = 0;
  if (a2) {
    JUMPOUT(0x100249B48LL);
  }
  return result;
}

uint64_t sub_100249B54(uint64_t result, int a2)
{
  *(_DWORD *)(result + sub_10022D314(2, 1) = 0;
  if (!a2) {
    JUMPOUT(0x100249B5CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_100249B60(uint64_t result)
{
  *(_DWORD *)(result + sub_10022D314(2, 1) = v1;
  return result;
}

uint64_t sub_100249B68(uint64_t result)
{
  *(_WORD *)(result + sub_10022D314(2, 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropServerType()
{
  return &type metadata for SDAirDropServerType;
}

uint64_t sub_100249B84()
{
  return sub_100249BA4(&OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener) & 1;
}

uint64_t sub_100249BA4(void *a1)
{
  uint64_t v3 = type metadata accessor for NWListener.State(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *(void *)(v1 + *a1);
  if (v7)
  {
    uint64_t v8 = swift_retain(v7);
    NWListener.state.getter(v8);
    swift_release(v7);
    int v9 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
    uint64_t v7 = v9 == enum case for NWListener.State.failed(_:);
    if (v9 != enum case for NWListener.State.failed(_:) && v9 == enum case for NWListener.State.cancelled(_:)) {
      return 1LL;
    }
    else {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }

  return v7;
}

uint64_t sub_100249C84()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100649E20);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100649E20);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

unint64_t sub_100249D14()
{
  uint64_t v1 = 0x2072756F6A6E6F42LL;
  if (*v0 != 1) {
    uint64_t v1 = 0x656946207261654ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD00000000000001ALL;
  }
}

unint64_t sub_100249D88()
{
  unint64_t result = qword_100649E38;
  if (!qword_100649E38)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D064C, &type metadata for SDAirDropServerType);
    atomic_store(result, (unint64_t *)&qword_100649E38);
  }

  return result;
}

uint64_t sub_100249DCC()
{
  return sub_100249BA4(&OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener) & 1;
}

uint64_t sub_100249DEC()
{
  return sub_100249BA4(&OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener) & 1;
}

void sub_100249E0C()
{
  uint64_t v1 = v0;
  if (qword_100644058 != -1) {
    swift_once(&qword_100644058, sub_10024A19C);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_100649E40);
  uint64_t v3 = swift_retain_n(v0, 2LL);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    unsigned int v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v31 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)unsigned int v6 = 136315138;
    uint64_t v7 = v6 + 12;
    uint64_t v33 = v31;
    uint64_t v29 = v6 + 4;
    buf = v6;
    uint64_t v8 = (void *)v1[4];
    int v9 = (void *)v1[5];
    uint64_t v11 = (void *)v1[6];
    uint64_t v10 = v1[7];
    id v12 = sub_10024A784(v8, v9, v11, v10);
    unint64_t v15 = sub_10024A22C((uint64_t)v12, v13, v14, v10);
    uint64_t v17 = v16;
    sub_10024A7E8(v8, v9, v11, v10);
    uint64_t v32 = sub_10018CDB4(v15, (unint64_t)v17, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v29, v7);
    swift_release_n(v1, 2LL);
    swift_bridgeObjectRelease(v17);
    _os_log_impl( (void *)&_mh_execute_header,  v4,  v5,  "SDAirDropReceiveStateMachineAdaptor start {pipeline: %s}",  buf,  0xCu);
    swift_arrayDestroy(v31, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1LL, -1LL);
    swift_slowDealloc(buf, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v1, 2LL);
  }

  uint64_t v19 = (void *)v1[4];
  uint64_t v20 = (void *)v1[5];
  uint64_t v22 = (void *)v1[6];
  uint64_t v21 = v1[7];
  if (v21 < 0)
  {
    uint64_t v26 = (void *)(v21 & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1 + 2, v18);
    v20[3] = v1[3];
    swift_unknownObjectWeakAssign(v20 + 2, Strong);
    swift_retain(v19);
    swift_retain(v20);
    id v25 = v22;
    id v28 = v26;
    swift_unknownObjectRelease(Strong);
    sub_100228158();
    [v25 activate];

    swift_release(v20);
    swift_release(v19);
  }

  else
  {
    id v23 = v19;
    uint64_t v24 = v20;
    id v25 = v22;
    [v25 activate];
    [v23 start];
    [v24 activate];
  }
}

void sub_10024A0C8()
{
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = *(void **)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  if (v3 < 0)
  {
    unsigned int v6 = (void *)(v3 & 0x7FFFFFFFFFFFFFFFLL);
    swift_retain(v1);
    id v5 = v2;
    id v7 = v6;
    [v5 invalidate];
    sub_1001CEB18();
    swift_release(v1);
  }

  else
  {
    id v4 = *(id *)(v0 + 32);
    id v5 = v1;
    id v7 = v2;
    [v5 invalidate];
    [v4 stop];
    [v7 invalidate];
  }
}

uint64_t sub_10024A19C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100649E40);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100649E40);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

unint64_t sub_10024A22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_100183168(0LL, (unint64_t *)&qword_100645140, &OBJC_CLASS___NSUserDefaults_ptr);
  unsigned int v6 = (void *)static NSUserDefaults.airdrop.getter(v5);
  _StringGuts.grow(_:)(66LL);
  v7._uint64_t countAndFlagsBits = 0xD000000000000020LL;
  v7._object = (void *)0x8000000100507040LL;
  String.append(_:)(v7);
  char v8 = SFAirDropUserDefaults.privateContactDiscoveryEnabled.getter();
  BOOL v9 = (v8 & 1) == 0;
  if ((v8 & 1) != 0) {
    uint64_t v10 = 1702195828LL;
  }
  else {
    uint64_t v10 = 0x65736C6166LL;
  }
  if (v9) {
    uint64_t v11 = (const char *)0xE500000000000000LL;
  }
  else {
    uint64_t v11 = (const char *)0xE400000000000000LL;
  }
  id v12 = v11;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease(v11);
  v13._object = (void *)0x8000000100507070LL;
  v13._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v13);
  char v14 = SFAirDropUserDefaults.systemLevelProgressEnabled.getter();
  BOOL v15 = (v14 & 1) == 0;
  if ((v14 & 1) != 0) {
    uint64_t v16 = 1702195828LL;
  }
  else {
    uint64_t v16 = 0x65736C6166LL;
  }
  if (v15) {
    uint64_t v17 = (const char *)0xE500000000000000LL;
  }
  else {
    uint64_t v17 = (const char *)0xE400000000000000LL;
  }
  uint64_t v18 = v17;
  String.append(_:)(*(Swift::String *)&v16);
  swift_bridgeObjectRelease(v17);
  if (a4 < 0)
  {
    _StringGuts.grow(_:)(41LL);
    swift_bridgeObjectRelease((const char *)0xE000000000000000LL, 0LL);
    unint64_t v19 = 0xD000000000000026LL;
  }

  else
  {
    _StringGuts.grow(_:)(36LL);
    swift_bridgeObjectRelease((const char *)0xE000000000000000LL, 0LL);
    unint64_t v19 = 0xD000000000000021LL;
  }

  unint64_t v23 = v19;
  v20._uint64_t countAndFlagsBits = 0LL;
  v20._object = (void *)0xE000000000000000LL;
  String.append(_:)(v20);
  swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
  v21._uint64_t countAndFlagsBits = 93LL;
  v21._object = (void *)0xE100000000000000LL;
  String.append(_:)(v21);

  return v23;
}

unint64_t sub_10024A3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10024A22C(a1, a2, a3, *(void *)(v3 + 24));
}

void *sub_10024A3F8(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  unsigned int v6 = v5;
  v5[3] = 0LL;
  swift_unknownObjectWeakInit(v5 + 2, 0LL);
  uint64_t v11 = sub_100183168(0LL, (unint64_t *)&qword_100645140, &OBJC_CLASS___NSUserDefaults_ptr);
  id v12 = (void *)static NSUserDefaults.airdrop.getter(v11);
  char v13 = SFAirDropUserDefaults.privateContactDiscoveryEnabled.getter();

  if ((v13 & 1) != 0)
  {
    uint64_t v14 = type metadata accessor for SDAirDropReceiveStateMachine();
    BOOL v15 = (void *)swift_allocObject(v14, 64LL, 7LL);
    v15[3] = 0LL;
    swift_unknownObjectWeakInit(v15 + 2, 0LL);
    void v15[4] = a1;
    void v15[5] = a2;
    uint64_t v16 = type metadata accessor for SDAirDropPlatformHapticsManagerUnsupported();
    v15[6] = swift_allocObject(v16, 16LL, 7LL);
    v15[7] = &off_1005D8A80;
    a4[3] = &off_1005DD0B0;
    swift_unknownObjectWeakAssign(a4 + 2, v15);
    id v17 = objc_allocWithZone((Class)&OBJC_CLASS___SDAirDropClassroomTransferManager);
    id v34 = a1;
    id v33 = a2;
    id v18 = [v17 init];
    sub_100183168(0LL, (unint64_t *)&qword_100650E50, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v19 = swift_retain(v15);
    Swift::String v20 = a5;
    Swift::String v21 = (void *)static OS_dispatch_queue.main.getter(v19);
    uint64_t v22 = (objc_class *)type metadata accessor for SDAirDropReceiveClassroomHandler();
    unint64_t v23 = (char *)objc_allocWithZone(v22);
    swift_unknownObjectWeakInit( &v23[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_delegate],  0LL);
    uint64_t v24 = swift_unknownObjectWeakInit( &v23[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_classroomDelegate],  0LL);
    *(void *)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_queue] = v21;
    *(void *)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_stateMachine] = v15;
    swift_unknownObjectWeakAssign(v24, 0LL);
    swift_retain(v15);
    id v25 = v23;
    id v26 = v21;
    *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_continuations] = sub_100391670((uint64_t)_swiftEmptyArrayStorage);

    v36.receiver = v25;
    v36.super_class = v22;
    unint64_t v27 = (unint64_t)objc_msgSendSuper2(&v36, "init");
    swift_release(v15);

    swift_unknownObjectWeakAssign( v27 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_classroomDelegate,  v18);
    id v28 = (id)v27;
    [v18 setAlertManager:v28];

    unint64_t v29 = v27 | 0x8000000000000000LL;
  }

  else
  {
    id v30 = [objc_allocWithZone((Class)SDAirDropReceiveManager) init];
    BOOL v15 = [objc_allocWithZone((Class)SDAirDropClassroomTransferManager) init];
    id v31 = [objc_allocWithZone((Class)SDAirDropTransferManager) init];
    [v30 setAlertManager:v31];
    [v31 setDelegate:v30];
    id v18 = v31;
    [v15 setAlertManager:v18];

    swift_release(a4);
    unint64_t v29 = 0LL;
    a4 = v30;
  }

  void v6[4] = a4;
  v6[5] = v15;
  v6[6] = v18;
  v6[7] = v29;
  return v6;
}

uint64_t sub_10024A734()
{
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t type metadata accessor for SDAirDropReceiveStateMachineAdaptor()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary35SDAirDropReceiveStateMachineAdaptor);
}

id sub_10024A784(void *a1, void *a2, void *a3, uint64_t a4)
{
  if (a4 < 0)
  {
    uint64_t v6 = a4 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain(a1);
    swift_retain(a2);
    a2 = a3;
    a3 = (void *)v6;
  }

  else
  {
    id v5 = a1;
  }

  id v7 = a2;
  return a3;
}

void destroy for SDAirDropReceiveStateMachineAdaptor.Pipeline(uint64_t a1)
{
}

void sub_10024A7E8(void *a1, void *a2, void *a3, uint64_t a4)
{
  if (a4 < 0)
  {
    uint64_t v5 = a4 & 0x7FFFFFFFFFFFFFFFLL;
    swift_release(a1);
    swift_release(a2);
    a2 = a3;
    a3 = (void *)v5;
  }

  else
  {
  }
}

void *initializeWithCopy for SDAirDropReceiveStateMachineAdaptor.Pipeline(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  sub_10024A784(*(void **)a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t assignWithCopy for SDAirDropReceiveStateMachineAdaptor.Pipeline(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  sub_10024A784(*(void **)a2, v4, v5, v6);
  id v7 = *(void **)a1;
  char v8 = *(void **)(a1 + 8);
  BOOL v9 = *(void **)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + sub_100195658(v0 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  sub_10024A7E8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SDAirDropReceiveStateMachineAdaptor.Pipeline(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v5 = *(void **)(a1 + 8);
  id v4 = *(void **)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  __int128 v7 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + sub_100195658(v0 + 16) = v7;
  sub_10024A7E8(v3, v5, v4, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAirDropReceiveStateMachineAdaptor.Pipeline( uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)(a1 + 24) >> 57) >> 6) | (2
                                                           * ((*(void *)(a1 + 24) >> 57) & 0x38 | *(void *)(a1 + 24) & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SDAirDropReceiveStateMachineAdaptor.Pipeline( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + sub_100195658(v0 + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)unint64_t result = a2 - 127;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0x7F) {
      *(_BYTE *)(result + sub_100195658(v0 + 32) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7F) {
      *(_BYTE *)(result + sub_100195658(v0 + 32) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)unint64_t result = 0LL;
      *(void *)(result + 8) = 0LL;
      *(void *)(result + sub_100195658(v0 + 16) = 0LL;
      *(void *)(result + 24) = (v3 | (v3 << 57)) & 0xF000000000000007LL;
    }
  }

  return result;
}

uint64_t sub_10024A9E0(uint64_t a1)
{
  return *(void *)(a1 + 24) >> 63;
}

uint64_t sub_10024A9EC(uint64_t result)
{
  *(void *)(result + 24) &= ~0x8000000000000000LL;
  return result;
}

uint64_t sub_10024A9FC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 24) = *(void *)(result + 24) & 0xFFFFFFFFFFFFFF8LL | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropReceiveStateMachineAdaptor.Pipeline()
{
  return &type metadata for SDAirDropReceiveStateMachineAdaptor.Pipeline;
}

uint64_t sub_10024AA20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100183098(&qword_100649F60);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v4);
  char v8 = &v14[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner____lazy_storage___senderContact;
  swift_beginAccess( v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner____lazy_storage___senderContact,  v15,  0LL,  0LL);
  sub_1001915A4(v9, (uint64_t)v8, &qword_100649F60);
  uint64_t v10 = sub_100183098(&qword_100649F50);
  uint64_t v11 = *(void *)(v10 - 8);
  sub_100187100((uint64_t)v8, &qword_100649F60);
  uint64_t v12 = type metadata accessor for SFAirDrop.ContactInfo(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(a1, 1LL, 1LL, v12);
  sub_1001915A4(a1, (uint64_t)v6, &qword_100649F50);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0LL, 1LL, v10);
  swift_beginAccess(v9, v14, 33LL, 0LL);
  sub_1001C9860((uint64_t)v6, v9, &qword_100649F60);
  return swift_endAccess(v14);
}

uint64_t sub_10024ABBC(uint64_t a1)
{
  v2[85] = v1;
  v2[84] = a1;
  uint64_t v3 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0LL);
  v2[86] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[87] = v4;
  v2[88] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_1006475C8);
  v2[89] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_100649F58);
  v2[90] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_100649F70);
  v2[91] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SFAirDropSend.Request(0LL);
  v2[92] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v2[93] = v9;
  v2[94] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v10 = (*(void *)(*(void *)(sub_100183098(&qword_100656490) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[95] = swift_task_alloc(v10);
  v2[96] = swift_task_alloc(v10);
  uint64_t v11 = type metadata accessor for SFAirDropSend.Transfer.State(0LL);
  v2[97] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v2[98] = v12;
  v2[99] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v2[100] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v2[101] = v14;
  v2[102] = swift_task_alloc((*(void *)(v14 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_100183098(&qword_1006457E8);
  v2[103] = swift_task_alloc((*(void *)(*(void *)(v15 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_100183098(&qword_100649F78);
  v2[104] = swift_task_alloc((*(void *)(*(void *)(v16 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Date(0LL);
  v2[105] = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  v2[106] = v18;
  v2[107] = swift_task_alloc((*(void *)(v18 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v2[108] = swift_task_alloc((*(void *)(*(void *)(v19 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0LL);
  v2[109] = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  v2[110] = v21;
  v2[111] = swift_task_alloc((*(void *)(v21 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for CancellationError(0LL);
  v2[112] = v22;
  uint64_t v23 = *(void *)(v22 - 8);
  v2[113] = v23;
  v2[114] = swift_task_alloc((*(void *)(v23 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for SFAirDropSend.Failure(0LL);
  v2[115] = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  v2[116] = v25;
  unint64_t v26 = (*(void *)(v25 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[117] = swift_task_alloc(v26);
  v2[118] = swift_task_alloc(v26);
  uint64_t v27 = sub_100183098(&qword_100649F80);
  v2[119] = swift_task_alloc((*(void *)(*(void *)(v27 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v28 = (*(void *)(*(void *)(sub_100183098(&qword_100649F88) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[120] = swift_task_alloc(v28);
  v2[121] = swift_task_alloc(v28);
  uint64_t v29 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v2[122] = v29;
  uint64_t v30 = *(void *)(v29 - 8);
  v2[123] = v30;
  unint64_t v31 = (*(void *)(v30 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[124] = swift_task_alloc(v31);
  v2[125] = swift_task_alloc(v31);
  unint64_t v32 = (*(void *)(*(void *)(_s14descr1005DF7D1C10AskRequestVMa(0LL) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[126] = swift_task_alloc(v32);
  v2[127] = swift_task_alloc(v32);
  uint64_t v33 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  v2[128] = v33;
  uint64_t v34 = *(void *)(v33 - 8);
  v2[129] = v34;
  unint64_t v35 = (*(void *)(v34 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[130] = swift_task_alloc(v35);
  v2[131] = swift_task_alloc(v35);
  v2[132] = swift_task_alloc(v35);
  v2[133] = swift_task_alloc(v35);
  v2[134] = swift_task_alloc(v35);
  v2[135] = swift_task_alloc(v35);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v36 = static AirDropActor.shared;
  v2[136] = static AirDropActor.shared;
  return swift_task_switch(sub_10024AFAC, v36, 0LL);
}

uint64_t sub_10024AFAC(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 680);
  uint64_t v3 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
  *(void *)(v1 + 1096) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
  uint64_t v4 = v2 + v3;
  uint64_t v5 = SFAirDropSend.Request.urls.getter(a1);
  if (v5 && (uint64_t v6 = *(void *)(v5 + 16), swift_bridgeObjectRelease((const char *)v5), v6))
  {
    *(void *)(v1 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0LL;
    *(_OWORD *)(v1 + 208) = 0u;
    *(_OWORD *)(v1 + 224) = 0u;
    *(_OWORD *)(v1 + 176) = 0u;
    *(_OWORD *)(v1 + 192) = 0u;
    *(_OWORD *)(v1 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0u;
    *(_OWORD *)(v1 + 144) = 0u;
    uint64_t v7 = (void *)swift_task_alloc(dword_100649FA4);
    *(void *)(v1 + 1104) = v7;
    *uint64_t v7 = v1;
    v7[1] = sub_10024B0A0;
    return sub_10024CBF0(v4, 0LL, 0x300000000LL, v1 + 144);
  }

  else
  {
    uint64_t v9 = (void *)swift_task_alloc(dword_100649F94);
    *(void *)(v1 + 1152) = v9;
    *uint64_t v9 = v1;
    v9[1] = sub_10024B290;
    return sub_10024DE5C( v1 + 16,  *(void *)(v1 + 1008),  *(void *)(v1 + 992),  *(void *)(v1 + 960),  *(void *)(v1 + 952));
  }

uint64_t sub_10024B0A0(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 1104);
  *(void *)(*v2 + 1112) = v1;
  swift_task_dealloc(v5);
  uint64_t v6 = *(void *)(v4 + 1088);
  if (v1)
  {
    uint64_t v7 = sub_10024C518;
  }

  else
  {
    *(void *)(v4 + 112_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a1;
    uint64_t v7 = sub_10024B114;
  }

  return swift_task_switch(v7, v6, 0LL);
}

uint64_t sub_10024B114()
{
  uint64_t v1 = v0[85];
  uint64_t v2 = swift_task_alloc(32LL);
  v0[141] = v2;
  *(void *)(v2 + sub_100195658(v0 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc(async function pointer to static SFSecurityScopedURL.withAccess<A>(to:body:)[1]);
  v0[142] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10024B190;
  return static SFSecurityScopedURL.withAccess<A>(to:body:)(v0[134], v0[140], &unk_100649FC0, v2, v0[128]);
}

uint64_t sub_10024B190()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 1136);
  uint64_t v4 = *(void *)(*v1 + 1128);
  uint64_t v5 = *(const char **)(*v1 + 1120);
  *(void *)(*v1 + 1144) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v5);
  swift_task_dealloc(v4);
  if (v0) {
    uint64_t v6 = sub_10024C630;
  }
  else {
    uint64_t v6 = sub_10024B214;
  }
  return swift_task_switch(v6, *(void *)(v2 + 1088), 0LL);
}

uint64_t sub_10024B214()
{
  uint64_t v1 = v0[134];
  uint64_t v2 = v0[135];
  uint64_t v3 = v0[128];
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[129] + 32LL);
  v0[166] = v4;
  v4(v2, v1, v3);
  sub_1002E8668();
  uint64_t v5 = (void *)swift_task_alloc(dword_100649F9C);
  v0[167] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10024B8F0;
  return sub_100250C88(0);
}

uint64_t sub_10024B290()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 1152);
  *(void *)(v2 + 116_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v0;
  int v4 = *(_DWORD *)(v2 + 16);
  *(_BYTE *)(v2 + 1172) = *(_BYTE *)(v2 + 20);
  *(_DWORD *)(v2 + 1168) = v4;
  uint64_t v5 = *(void *)(v2 + 32);
  *(void *)(v2 + 1176) = *(void *)(v2 + 24);
  uint64_t v23 = v5;
  *(void *)(v2 + 1184) = v5;
  uint64_t v21 = *(void *)(v2 + 48);
  uint64_t v22 = *(void *)(v2 + 40);
  *(void *)(v2 + 1192) = v22;
  *(void *)(v2 + 120_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v21;
  uint64_t v20 = *(void *)(v2 + 56);
  *(void *)(v2 + 1208) = v20;
  char v19 = *(_BYTE *)(v2 + 64);
  *(_BYTE *)(v2 + 1412) = v19;
  uint64_t v7 = *(void *)(v2 + 72);
  uint64_t v6 = *(void *)(v2 + 80);
  *(void *)(v2 + 12sub_100195658(v0 + 16) = v7;
  *(void *)(v2 + 1224) = v6;
  uint64_t v9 = *(void *)(v2 + 88);
  uint64_t v8 = *(void *)(v2 + 96);
  *(void *)(v2 + 12sub_100195658(v0 + 32) = v9;
  *(void *)(v2 + 124_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v8;
  uint64_t v10 = *(void *)(v2 + 104);
  uint64_t v11 = *(void *)(v2 + 112);
  *(void *)(v2 + 1248) = v10;
  *(void *)(v2 + 1256) = v11;
  uint64_t v12 = *(void *)(v2 + 120);
  uint64_t v13 = *(void *)(v2 + 128);
  *(void *)(v2 + 1264) = v12;
  *(void *)(v2 + 1272) = v13;
  uint64_t v18 = *(const char **)(v2 + 136);
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v14 = *(void *)(v2 + 1088);
    uint64_t v15 = sub_10024C748;
  }

  else
  {
    uint64_t v16 = *(void *)(v2 + 1088);
    sub_100187100(*(void *)(v2 + 952), &qword_100649F80);
    *(void *)(v2 + 352) = v23;
    *(void *)(v2 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v22;
    *(void *)(v2 + 368) = v21;
    *(void *)(v2 + 376) = v20;
    *(_BYTE *)(v2 + 384) = v19;
    *(void *)(v2 + 392) = v7;
    *(void *)(v2 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v6;
    *(void *)(v2 + 408) = v9;
    *(void *)(v2 + 4sub_100195658(v0 + 16) = v8;
    *(void *)(v2 + 424) = v10;
    *(void *)(v2 + 4sub_100195658(v0 + 32) = v11;
    *(void *)(v2 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v12;
    *(void *)(v2 + 448) = v13;
    swift_bridgeObjectRelease(v18);
    uint64_t v15 = sub_10024B3F0;
    uint64_t v14 = v16;
  }

  return swift_task_switch(v15, v14, 0LL);
}

uint64_t sub_10024B3F0()
{
  uint64_t v23 = *(void *)(v0 + 1264);
  unint64_t v24 = *(void *)(v0 + 1272);
  uint64_t v1 = *(const char **)(v0 + 1256);
  uint64_t v19 = *(void *)(v0 + 1232);
  uint64_t v20 = *(const char **)(v0 + 1240);
  uint64_t v2 = *(const char **)(v0 + 1224);
  uint64_t v17 = *(unsigned __int8 *)(v0 + 1412);
  uint64_t v18 = *(void *)(v0 + 1216);
  uint64_t v3 = *(const char **)(v0 + 1208);
  uint64_t v16 = *(void *)(v0 + 1200);
  int v4 = *(const char **)(v0 + 1192);
  uint64_t v5 = *(void *)(v0 + 1184);
  uint64_t v21 = *(void **)(v0 + 1176);
  uint64_t v22 = *(void *)(v0 + 1248);
  unint64_t v27 = *(unsigned int *)(v0 + 1168) | ((unint64_t)*(unsigned __int8 *)(v0 + 1172) << 32);
  uint64_t v6 = *(void *)(v0 + 1000);
  uint64_t v7 = *(void *)(v0 + 992);
  uint64_t v8 = *(void *)(v0 + 968);
  uint64_t v9 = *(void *)(v0 + 960);
  uint64_t v25 = *(void *)(v0 + 680);
  uint64_t v26 = *(void *)(v0 + 1096);
  sub_1001A4B40(*(void *)(v0 + 1008), *(void *)(v0 + 1016), _s14descr1005DF7D1C10AskRequestVMa);
  sub_1001A4B40(v7, v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001870BC(v9, v8, &qword_100649F88);
  *(void *)(v0 + 248) = v5;
  *(void *)(v0 + 256) = v4;
  *(void *)(v0 + 264) = v16;
  *(void *)(v0 + 272) = v3;
  *(void *)(v0 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v17;
  *(void *)(v0 + 288) = v18;
  *(void *)(v0 + 296) = v2;
  *(void *)(v0 + 304) = v19;
  *(void *)(v0 + 312) = v20;
  *(void *)(v0 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v22;
  *(void *)(v0 + 328) = v1;
  *(void *)(v0 + 336) = v23;
  *(void *)(v0 + 344) = v24;
  swift_bridgeObjectRetain(v1);
  id v10 = v21;
  *(void *)&double v11 = swift_bridgeObjectRetain(v4).n128_u64[0];
  *(void *)&double v12 = swift_bridgeObjectRetain(v3, v11).n128_u64[0];
  *(void *)&double v13 = swift_bridgeObjectRetain(v2, v12).n128_u64[0];
  swift_bridgeObjectRetain(v20, v13);
  sub_1001A4C04(v23, v24);
  uint64_t v14 = (void *)swift_task_alloc(dword_100649FA4);
  *(void *)(v0 + 128_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_10024B598;
  return sub_10024CBF0(v25 + v26, (uint64_t)v21, v27, v0 + 248);
}

uint64_t sub_10024B598(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 1280);
  unint64_t v20 = *(void *)(*v2 + 1272);
  uint64_t v5 = *(void *)(*v2 + 1264);
  uint64_t v6 = *(const char **)(*v2 + 1256);
  uint64_t v7 = *(const char **)(*v2 + 1240);
  uint64_t v8 = *(const char **)(*v2 + 1224);
  uint64_t v9 = *(const char **)(*v2 + 1208);
  id v10 = *(const char **)(*v2 + 1192);
  double v11 = *(void **)(*v2 + 1176);
  *(void *)(*v2 + 1288) = v1;
  swift_task_dealloc(v4);
  *(void *)&double v12 = swift_bridgeObjectRelease(v10).n128_u64[0];
  *(void *)&double v13 = swift_bridgeObjectRelease(v9, v12).n128_u64[0];
  *(void *)&double v14 = swift_bridgeObjectRelease(v8, v13).n128_u64[0];
  *(void *)&double v15 = swift_bridgeObjectRelease(v7, v14).n128_u64[0];
  swift_bridgeObjectRelease(v6, v15);
  sub_100189B0C(v5, v20);

  uint64_t v16 = *(void *)(v3 + 1088);
  if (v1)
  {
    uint64_t v17 = sub_10024C860;
  }

  else
  {
    *(void *)(v3 + 1296) = a1;
    uint64_t v17 = sub_10024B688;
  }

  return swift_task_switch(v17, v16, 0LL);
}

uint64_t sub_10024B688()
{
  uint64_t v1 = v0[147];
  uint64_t v2 = v0[127];
  uint64_t v3 = v0[125];
  uint64_t v4 = v0[121];
  uint64_t v5 = v0[85];
  uint64_t v6 = (void *)swift_task_alloc(64LL);
  v0[163] = v6;
  v6[2] = v5;
  v6[3] = v2;
  void v6[4] = v1;
  v6[5] = v3;
  v6[6] = v0 + 44;
  v6[7] = v4;
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to static SFSecurityScopedURL.withAccess<A>(to:body:)[1]);
  v0[164] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_10024B738;
  return static SFSecurityScopedURL.withAccess<A>(to:body:)(v0[133], v0[162], &unk_100649FB0, v6, v0[128]);
}

uint64_t sub_10024B738()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 1312);
  uint64_t v4 = *(void *)(*v1 + 1304);
  uint64_t v5 = *(const char **)(*v1 + 1296);
  *(void *)(*v1 + 132_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v5);
  swift_task_dealloc(v4);
  if (v0) {
    uint64_t v6 = sub_10024CA28;
  }
  else {
    uint64_t v6 = sub_10024B7BC;
  }
  return swift_task_switch(v6, *(void *)(v2 + 1088), 0LL);
}

uint64_t sub_10024B7BC()
{
  unint64_t v1 = *(void *)(v0 + 1272);
  uint64_t v2 = *(void *)(v0 + 1264);
  uint64_t v3 = *(const char **)(v0 + 1256);
  uint64_t v4 = *(const char **)(v0 + 1240);
  uint64_t v5 = *(const char **)(v0 + 1224);
  uint64_t v6 = *(const char **)(v0 + 1208);
  uint64_t v7 = *(const char **)(v0 + 1192);
  uint64_t v20 = *(void *)(v0 + 1016);
  uint64_t v8 = *(void *)(v0 + 1000);
  uint64_t v9 = *(void *)(v0 + 968);

  *(void *)&double v10 = swift_bridgeObjectRelease(v7).n128_u64[0];
  *(void *)&double v11 = swift_bridgeObjectRelease(v6, v10).n128_u64[0];
  *(void *)&double v12 = swift_bridgeObjectRelease(v3, v11).n128_u64[0];
  *(void *)&double v13 = swift_bridgeObjectRelease(v4, v12).n128_u64[0];
  swift_bridgeObjectRelease(v5, v13);
  sub_100189B0C(v2, v1);
  sub_100187100(v9, &qword_100649F88);
  sub_1001A4BC8(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4BC8(v20, _s14descr1005DF7D1C10AskRequestVMa);
  uint64_t v14 = *(void *)(v0 + 1064);
  uint64_t v15 = *(void *)(v0 + 1080);
  uint64_t v16 = *(void *)(v0 + 1024);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1032) + 32LL);
  *(void *)(v0 + 1328) = v17;
  v17(v15, v14, v16);
  sub_1002E8668();
  uint64_t v18 = (void *)swift_task_alloc(dword_100649F9C);
  *(void *)(v0 + 1336) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_10024B8F0;
  return sub_100250C88(0);
}

uint64_t sub_10024B8F0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1088LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 1336LL));
  return swift_task_switch(sub_10024B948, v1, 0LL);
}

uint64_t sub_10024B948()
{
  uint64_t v1 = *(void *)(v0 + 1080);
  uint64_t v2 = *(void *)(v0 + 1072);
  uint64_t v3 = *(void *)(v0 + 1064);
  uint64_t v4 = *(void *)(v0 + 1056);
  uint64_t v5 = *(void *)(v0 + 1048);
  uint64_t v6 = *(void *)(v0 + 1040);
  uint64_t v7 = *(void *)(v0 + 1016);
  uint64_t v8 = *(void *)(v0 + 1008);
  uint64_t v9 = *(void *)(v0 + 1000);
  uint64_t v11 = *(void *)(v0 + 992);
  uint64_t v12 = *(void *)(v0 + 968);
  uint64_t v13 = *(void *)(v0 + 960);
  uint64_t v14 = *(void *)(v0 + 952);
  uint64_t v15 = *(void *)(v0 + 944);
  uint64_t v16 = *(void *)(v0 + 936);
  uint64_t v17 = *(void *)(v0 + 912);
  uint64_t v18 = *(void *)(v0 + 888);
  uint64_t v19 = *(void *)(v0 + 864);
  uint64_t v20 = *(void *)(v0 + 856);
  uint64_t v21 = *(void *)(v0 + 832);
  uint64_t v22 = *(void *)(v0 + 824);
  uint64_t v23 = *(void *)(v0 + 816);
  uint64_t v24 = *(void *)(v0 + 792);
  uint64_t v25 = *(void *)(v0 + 768);
  uint64_t v26 = *(void *)(v0 + 760);
  uint64_t v27 = *(void *)(v0 + 752);
  uint64_t v28 = *(void *)(v0 + 728);
  uint64_t v29 = *(void *)(v0 + 720);
  uint64_t v30 = *(void *)(v0 + 712);
  uint64_t v31 = *(void *)(v0 + 704);
  (*(void (**)(void, uint64_t, void))(v0 + 1328))(*(void *)(v0 + 672), v1, *(void *)(v0 + 1024));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10024BB38()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1088LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 1352LL));
  return swift_task_switch(sub_10024BB90, v1, 0LL);
}

uint64_t sub_10024BB90()
{
  uint64_t v1 = *(void *)(v0 + 1056);
  uint64_t v2 = *(void *)(v0 + 1048);
  uint64_t v3 = *(void *)(v0 + 1032);
  uint64_t v4 = *(void *)(v0 + 1024);
  uint64_t v52 = *(void *)(v0 + 944);
  uint64_t v40 = *(void *)(v0 + 928);
  uint64_t v41 = *(void *)(v0 + 920);
  uint64_t v5 = *(void *)(v0 + 864);
  uint64_t v6 = *(void *)(v0 + 856);
  uint64_t v43 = *(void *)(v0 + 848);
  uint64_t v44 = *(void *)(v0 + 840);
  uint64_t v7 = *(void *)(v0 + 832);
  uint64_t v42 = *(void *)(v0 + 824);
  uint64_t v46 = *(void *)(v0 + 816);
  uint64_t v48 = *(void *)(v0 + 808);
  uint64_t v50 = *(void *)(v0 + 800);
  uint64_t v39 = *(void *)(v0 + 696);
  uint64_t v8 = *(void *)(v0 + 680)
     + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  uint64_t v38 = *(void *)(v0 + 688);
  __n128 v9 = swift_beginAccess(v8, v0 + 584, 0LL, 0LL);
  double v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16);
  uint64_t v11 = v10(v1, v8, v4, v9);
  SFAirDropSend.Transfer.id.getter(v11);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v12(v1, v4);
  uint64_t v13 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v2, v8, v4);
  SFAirDropSend.Transfer.startDate.getter(v13);
  uint64_t v54 = v12;
  v12(v2, v4);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)(v5, v6);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16);
  *(void *)(v0 + 136_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v14;
  uint64_t v15 = v52;
  uint64_t v53 = v14;
  v14(v7, v15, v41);
  *(_DWORD *)(v0 + 1408) = enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:);
  uint64_t v16 = *(void (**)(uint64_t))(v39 + 104);
  *(void *)(v0 + 1368) = v16;
  v16(v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v7, 0LL, 1LL, v38);
  uint64_t v17 = SFAirDropSend.Transfer.Metrics.result.setter(v7);
  static Date.now.getter(v17);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v42, 0LL, 1LL, v44);
  uint64_t v18 = SFAirDropSend.Transfer.Metrics.endDate.setter(v42);
  uint64_t v19 = SFAirDropSend.Request.type.getter(v18);
  LOBYTE(vsub_10022D314(2, 1) = SFAirDrop.TransferType.isOnlyExchange.getter(v19);
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v50);
  if ((v1 & 1) == 0)
  {
    uint64_t v20 = *(void *)(v0 + 944);
    uint64_t v21 = *(void *)(v0 + 936);
    uint64_t v22 = *(void *)(v0 + 928);
    uint64_t v23 = *(void *)(v0 + 920);
    (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))( v21,  enum case for SFAirDropSend.Failure.receiverDeclined(_:),  v23);
    static SFAirDropSend.Failure.== infix(_:_:)(v20, v21);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  }

  uint64_t v47 = *(void *)(v0 + 1040);
  uint64_t v49 = *(void *)(v0 + 1056);
  uint64_t v51 = *(void *)(v0 + 1024);
  uint64_t v24 = *(void *)(v0 + 944);
  uint64_t v25 = *(void *)(v0 + 888);
  uint64_t v26 = *(void *)(v0 + 880);
  uint64_t v27 = *(void *)(v0 + 872);
  uint64_t v28 = *(void *)(v0 + 792);
  uint64_t v29 = *(void *)(v0 + 784);
  uint64_t v30 = *(void *)(v0 + 776);
  uint64_t v31 = *(void *)(v0 + 768);
  uint64_t v45 = *(void *)(v0 + 920);
  uint64_t v32 = v28 + *(int *)(sub_100183098(&qword_100648568) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v28, v25, v27);
  v53(v32, v24, v45);
  (*(void (**)(uint64_t, void, uint64_t))(v29 + 104))( v28,  enum case for SFAirDropSend.Transfer.State.transferFailed(_:),  v30);
  sub_100217DD8(v28, v47);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  uint64_t v33 = type metadata accessor for SFNWInterfaceType(0LL);
  *(void *)(v0 + 1376) = v33;
  uint64_t v34 = *(void *)(v33 - 8);
  *(void *)(v0 + 1384) = v34;
  unint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56);
  *(void *)(v0 + 1392) = v35;
  v35(v31, 1LL, 1LL, v33);
  sub_1002182A8(v31, v49);
  sub_100187100(v31, &qword_100656490);
  v54(v49, v51);
  uint64_t v36 = (void *)swift_task_alloc(dword_100648544);
  *(void *)(v0 + 140_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v36;
  *uint64_t v36 = v0;
  v36[1] = sub_10024BF28;
  return sub_100217040();
}

uint64_t sub_10024BF28()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1088LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 1400LL));
  return swift_task_switch(sub_10024BF80, v1, 0LL);
}

uint64_t sub_10024BF80()
{
  uint64_t v1 = *(void *)(v0 + 680);
  (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 744) + 16LL))( *(void *)(v0 + 752),  v1 + *(void *)(v0 + 1096),  *(void *)(v0 + 736));
  uint64_t v2 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection);
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 728);
    uint64_t v5 = *(void *)(v0 + 720);
    uint64_t v6 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_telemetry;
    swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_telemetry, v0 + 608, 0LL, 0LL);
    sub_1001A4B84(v6, v4, type metadata accessor for SDAirDropSendConnectionTelemetry);
    uint64_t v7 = type metadata accessor for SDAirDropSendConnectionTelemetry(0LL);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(v4, 0LL, 1LL, v7);
    sub_1001A4B84( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint,  v5,  type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v8 = 0LL;
  }

  else
  {
    uint64_t v9 = *(void *)(v0 + 728);
    uint64_t v10 = type metadata accessor for SDAirDropSendConnectionTelemetry(0LL);
    uint64_t v8 = 1LL;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v9, 1LL, 1LL, v10);
  }

  uint64_t v11 = *(void *)(v0 + 680);
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 984) + 56LL))( *(void *)(v0 + 720),  v8,  1LL,  *(void *)(v0 + 976));
  uint64_t v12 = *(void *)(v11 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
  uint64_t v13 = swift_retain(v12);
  CurrentValueSubject.value.getter(v13);
  swift_release(v12);
  uint64_t v77 = *(const char **)(v0 + 656);
  uint64_t v14 = *(void *)(v1 + v2);
  if (v14)
  {
    uint64_t v15 = *(void *)(v0 + 1384);
    uint64_t v16 = *(void *)(v0 + 1376);
    uint64_t v17 = *(void *)(v0 + 760);
    uint64_t v18 = *(void *)(v0 + 712);
    uint64_t v19 = v14 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadRequest;
    swift_beginAccess( v14 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadRequest,  v0 + 632,  0LL,  0LL);
    sub_1001915A4(v19, v18, &qword_1006475C8);
    uint64_t v20 = v14 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_lastActiveInterfaceType;
    __n128 v21 = swift_beginAccess( v14 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_lastActiveInterfaceType,  v0 + 560,  0LL,  0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v15 + 16))(v17, v20, v16, v21);
    uint64_t v22 = 0LL;
  }

  else
  {
    uint64_t v23 = *(void *)(v0 + 712);
    uint64_t v24 = _s14descr1005D9BD1C13UploadRequestVMa(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56LL))(v23, 1LL, 1LL, v24);
    uint64_t v22 = 1LL;
  }

  uint64_t v55 = *(void (**)(uint64_t, void, uint64_t))(v0 + 1368);
  unsigned int v53 = *(_DWORD *)(v0 + 1408);
  uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1360);
  uint64_t v60 = *(void *)(v0 + 1344);
  uint64_t v75 = *(void *)(v0 + 1032);
  uint64_t v25 = *(void *)(v0 + 944);
  uint64_t v26 = *(void *)(v0 + 920);
  uint64_t v71 = *(void *)(v0 + 888);
  uint64_t v73 = *(void *)(v0 + 928);
  uint64_t v67 = *(void *)(v0 + 880);
  uint64_t v69 = *(void *)(v0 + 872);
  uint64_t v27 = *(void *)(v0 + 760);
  uint64_t v28 = *(void *)(v0 + 752);
  uint64_t v63 = *(void *)(v0 + 744);
  uint64_t v65 = *(void *)(v0 + 736);
  uint64_t v49 = *(void *)(v0 + 728);
  uint64_t v29 = *(void *)(v0 + 720);
  uint64_t v30 = *(void *)(v0 + 712);
  uint64_t v31 = *(void *)(v0 + 704);
  uint64_t v58 = *(void *)(v0 + 696);
  uint64_t v32 = *(void *)(v0 + 688);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0 + 1392))(v27, v22, 1LL, *(void *)(v0 + 1376));
  *(void *)(v0 + 552) = 0LL;
  *(_OWORD *)(v0 + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0u;
  *(_OWORD *)(v0 + 536) = 0u;
  *(_OWORD *)(v0 + 488) = 0u;
  *(_OWORD *)(v0 + 504) = 0u;
  *(_OWORD *)(v0 + 456) = 0u;
  *(_OWORD *)(v0 + 472) = 0u;
  v51(v31, v25, v26);
  v55(v31, v53, v32);
  sub_1002759E0(v28, v49, v29, (uint64_t)v77, v0 + 456, v30, v27, v31);
  swift_bridgeObjectRelease(v77);
  swift_errorRelease(v60);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v31, v32);
  sub_100187100(v27, &qword_100656490);
  sub_100187100(v30, &qword_1006475C8);
  sub_100187100(v29, &qword_100649F58);
  sub_100187100(v49, &qword_100649F70);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v28, v65);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v71, v69);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v25, v26);
  uint64_t v33 = *(void (**)(void, uint64_t, void))(v75 + 32);
  uint64_t v34 = *(void *)(v0 + 1040);
  uint64_t v35 = *(void *)(v0 + 1080);
  uint64_t v36 = *(void *)(v0 + 1072);
  uint64_t v37 = *(void *)(v0 + 1064);
  uint64_t v38 = *(void *)(v0 + 1056);
  uint64_t v39 = *(void *)(v0 + 1048);
  uint64_t v40 = *(void *)(v0 + 1016);
  uint64_t v41 = *(void *)(v0 + 1008);
  uint64_t v42 = *(void *)(v0 + 1000);
  uint64_t v44 = *(void *)(v0 + 992);
  uint64_t v45 = *(void *)(v0 + 968);
  uint64_t v46 = *(void *)(v0 + 960);
  uint64_t v47 = *(void *)(v0 + 952);
  uint64_t v48 = *(void *)(v0 + 944);
  uint64_t v50 = *(void *)(v0 + 936);
  uint64_t v52 = *(void *)(v0 + 912);
  uint64_t v54 = *(void *)(v0 + 888);
  uint64_t v56 = *(void *)(v0 + 864);
  uint64_t v57 = *(void *)(v0 + 856);
  uint64_t v59 = *(void *)(v0 + 832);
  uint64_t v61 = *(void *)(v0 + 824);
  uint64_t v62 = *(void *)(v0 + 816);
  uint64_t v64 = *(void *)(v0 + 792);
  uint64_t v66 = *(void *)(v0 + 768);
  uint64_t v68 = *(void *)(v0 + 760);
  uint64_t v70 = *(void *)(v0 + 752);
  uint64_t v72 = *(void *)(v0 + 728);
  uint64_t v74 = *(void *)(v0 + 720);
  uint64_t v76 = *(void *)(v0 + 712);
  uint64_t v78 = *(void *)(v0 + 704);
  v33(*(void *)(v0 + 672), v34, *(void *)(v0 + 1024));
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v34);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v68);
  swift_task_dealloc(v70);
  swift_task_dealloc(v72);
  swift_task_dealloc(v74);
  swift_task_dealloc(v76);
  swift_task_dealloc(v78);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10024C518()
{
  uint64_t v1 = v0[139];
  v0[168] = v1;
  uint64_t v2 = v0[114];
  uint64_t v3 = v0[112];
  v0[83] = v1;
  swift_errorRetain(v1);
  uint64_t v4 = sub_100183098(&qword_100645710);
  if (swift_dynamicCast(v2, v0 + 83, v4, v3, 0LL))
  {
    uint64_t v5 = v0[114];
    uint64_t v6 = v0[113];
    uint64_t v7 = v0[112];
    (*(void (**)(void, void, void))(v0[116] + 104LL))( v0[118],  enum case for SFAirDropSend.Failure.cancelled(_:),  v0[115]);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_errorRelease(v0[83]);
  }

  else
  {
    swift_errorRelease(v0[83]);
    swift_errorRetain(v1);
    SFAirDropSend.Failure.init(_:)(v1);
  }

  sub_1002E8668();
  uint64_t v8 = (void *)swift_task_alloc(dword_100649F9C);
  v0[169] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10024BB38;
  return sub_100250C88(1);
}

uint64_t sub_10024C630()
{
  uint64_t v1 = v0[143];
  v0[168] = v1;
  uint64_t v2 = v0[114];
  uint64_t v3 = v0[112];
  v0[83] = v1;
  swift_errorRetain(v1);
  uint64_t v4 = sub_100183098(&qword_100645710);
  if (swift_dynamicCast(v2, v0 + 83, v4, v3, 0LL))
  {
    uint64_t v5 = v0[114];
    uint64_t v6 = v0[113];
    uint64_t v7 = v0[112];
    (*(void (**)(void, void, void))(v0[116] + 104LL))( v0[118],  enum case for SFAirDropSend.Failure.cancelled(_:),  v0[115]);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_errorRelease(v0[83]);
  }

  else
  {
    swift_errorRelease(v0[83]);
    swift_errorRetain(v1);
    SFAirDropSend.Failure.init(_:)(v1);
  }

  sub_1002E8668();
  uint64_t v8 = (void *)swift_task_alloc(dword_100649F9C);
  v0[169] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10024BB38;
  return sub_100250C88(1);
}

uint64_t sub_10024C748()
{
  uint64_t v1 = v0[145];
  v0[168] = v1;
  uint64_t v2 = v0[114];
  uint64_t v3 = v0[112];
  v0[83] = v1;
  swift_errorRetain(v1);
  uint64_t v4 = sub_100183098(&qword_100645710);
  if (swift_dynamicCast(v2, v0 + 83, v4, v3, 0LL))
  {
    uint64_t v5 = v0[114];
    uint64_t v6 = v0[113];
    uint64_t v7 = v0[112];
    (*(void (**)(void, void, void))(v0[116] + 104LL))( v0[118],  enum case for SFAirDropSend.Failure.cancelled(_:),  v0[115]);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_errorRelease(v0[83]);
  }

  else
  {
    swift_errorRelease(v0[83]);
    swift_errorRetain(v1);
    SFAirDropSend.Failure.init(_:)(v1);
  }

  sub_1002E8668();
  uint64_t v8 = (void *)swift_task_alloc(dword_100649F9C);
  v0[169] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10024BB38;
  return sub_100250C88(1);
}

uint64_t sub_10024C860()
{
  unint64_t v1 = v0[159];
  uint64_t v2 = v0[158];
  uint64_t v3 = (const char *)v0[157];
  uint64_t v4 = (const char *)v0[155];
  uint64_t v5 = (const char *)v0[153];
  uint64_t v6 = (const char *)v0[149];
  uint64_t v7 = (void *)v0[147];
  uint64_t v22 = v0[127];
  uint64_t v8 = v0[125];
  uint64_t v9 = v0[121];
  *(void *)&double v10 = swift_bridgeObjectRelease((const char *)v0[151]).n128_u64[0];
  swift_bridgeObjectRelease(v6, v10);

  *(void *)&double v11 = swift_bridgeObjectRelease(v3).n128_u64[0];
  *(void *)&double v12 = swift_bridgeObjectRelease(v4, v11).n128_u64[0];
  swift_bridgeObjectRelease(v5, v12);
  sub_100189B0C(v2, v1);
  sub_100187100(v9, &qword_100649F88);
  sub_1001A4BC8(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4BC8(v22, _s14descr1005DF7D1C10AskRequestVMa);
  uint64_t v13 = v0[161];
  v0[168] = v13;
  uint64_t v14 = v0[114];
  uint64_t v15 = v0[112];
  v0[83] = v13;
  swift_errorRetain(v13);
  uint64_t v16 = sub_100183098(&qword_100645710);
  if (swift_dynamicCast(v14, v0 + 83, v16, v15, 0LL))
  {
    uint64_t v17 = v0[114];
    uint64_t v18 = v0[113];
    uint64_t v19 = v0[112];
    (*(void (**)(void, void, void))(v0[116] + 104LL))( v0[118],  enum case for SFAirDropSend.Failure.cancelled(_:),  v0[115]);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    swift_errorRelease(v0[83]);
  }

  else
  {
    swift_errorRelease(v0[83]);
    swift_errorRetain(v13);
    SFAirDropSend.Failure.init(_:)(v13);
  }

  sub_1002E8668();
  uint64_t v20 = (void *)swift_task_alloc(dword_100649F9C);
  v0[169] = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_10024BB38;
  return sub_100250C88(1);
}

uint64_t sub_10024CA28()
{
  unint64_t v1 = v0[159];
  uint64_t v2 = v0[158];
  uint64_t v3 = (const char *)v0[157];
  uint64_t v4 = (const char *)v0[155];
  uint64_t v5 = (const char *)v0[153];
  uint64_t v6 = (const char *)v0[149];
  uint64_t v7 = (void *)v0[147];
  uint64_t v22 = v0[127];
  uint64_t v8 = v0[125];
  uint64_t v9 = v0[121];
  *(void *)&double v10 = swift_bridgeObjectRelease((const char *)v0[151]).n128_u64[0];
  swift_bridgeObjectRelease(v6, v10);

  *(void *)&double v11 = swift_bridgeObjectRelease(v3).n128_u64[0];
  *(void *)&double v12 = swift_bridgeObjectRelease(v4, v11).n128_u64[0];
  swift_bridgeObjectRelease(v5, v12);
  sub_100189B0C(v2, v1);
  sub_100187100(v9, &qword_100649F88);
  sub_1001A4BC8(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4BC8(v22, _s14descr1005DF7D1C10AskRequestVMa);
  uint64_t v13 = v0[165];
  v0[168] = v13;
  uint64_t v14 = v0[114];
  uint64_t v15 = v0[112];
  v0[83] = v13;
  swift_errorRetain(v13);
  uint64_t v16 = sub_100183098(&qword_100645710);
  if (swift_dynamicCast(v14, v0 + 83, v16, v15, 0LL))
  {
    uint64_t v17 = v0[114];
    uint64_t v18 = v0[113];
    uint64_t v19 = v0[112];
    (*(void (**)(void, void, void))(v0[116] + 104LL))( v0[118],  enum case for SFAirDropSend.Failure.cancelled(_:),  v0[115]);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    swift_errorRelease(v0[83]);
  }

  else
  {
    swift_errorRelease(v0[83]);
    swift_errorRetain(v13);
    SFAirDropSend.Failure.init(_:)(v13);
  }

  sub_1002E8668();
  uint64_t v20 = (void *)swift_task_alloc(dword_100649F9C);
  v0[169] = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_10024BB38;
  return sub_100250C88(1);
}

uint64_t sub_10024CBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[20] = a4;
  v5[21] = v4;
  v5[18] = a2;
  v5[19] = a3;
  v5[17] = a1;
  uint64_t v6 = sub_100183098(&qword_10064A118);
  v5[22] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for CodableError(0LL);
  v5[23] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  _BYTE v5[24] = v8;
  v5[25] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v5[26] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[27] = v10;
  v5[28] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v11 = static AirDropActor.shared;
  v5[29] = static AirDropActor.shared;
  return swift_task_switch(sub_10024CCD8, v11, 0LL);
}

uint64_t sub_10024CCD8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 216);
  uint64_t v2 = *(void *)(v1 + 224);
  uint64_t v4 = *(void *)(v1 + 208);
  uint64_t v5 = SFAirDropSend.Request.type.getter(a1);
  char v6 = SFAirDrop.TransferType.isOnlyExchange.getter(v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(v1 + 200);
    uint64_t v8 = *(void *)(v1 + 176);
    swift_task_dealloc(*(void *)(v1 + 224));
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void *))(v1 + 8))(_swiftEmptyArrayStorage);
  }

  else
  {
    sub_1001870BC(*(void *)(v1 + 160), v1 + 16, &qword_10064A120);
    uint64_t v10 = *(void *)(v1 + 24);
    if (v10) {
      uint64_t v11 = *(void *)(v1 + 104);
    }
    else {
      uint64_t v11 = 0LL;
    }
    if (v10) {
      uint64_t v12 = *(void *)(v1 + 112);
    }
    else {
      uint64_t v12 = 0xF000000000000000LL;
    }
    uint64_t v13 = (void *)swift_task_alloc(dword_100651224);
    *(void *)(v1 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v13;
    *uint64_t v13 = v1;
    v13[1] = sub_10024CDD4;
    return sub_10037D5FC(v11, v12);
  }

uint64_t sub_10024CDD4(uint64_t a1)
{
  uint64_t v3 = *(void **)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 240LL);
  v3[31] = a1;
  v3[32] = v1;
  swift_task_dealloc(v4);
  if (v1) {
    uint64_t v5 = sub_10024D260;
  }
  else {
    uint64_t v5 = sub_10024CE40;
  }
  return swift_task_switch(v5, v3[29], 0LL);
}

uint64_t sub_10024CE40()
{
  uint64_t v1 = *(void *)(v0 + 248);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void *)(v0 + 200);
    uint64_t v3 = *(void *)(v0 + 176);
    swift_task_dealloc(*(void *)(v0 + 224));
    swift_task_dealloc(v2);
    swift_task_dealloc(v3);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
  }

  else
  {
    uint64_t v5 = v0 + 120;
    swift_bridgeObjectRelease(*(const char **)(v0 + 248));
    uint64_t v6 = type metadata accessor for SFAirDropSend.Failure(0LL);
    uint64_t v7 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    uint64_t v8 = swift_allocError(v6, v7, 0LL, 0LL);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104LL))( v9,  enum case for SFAirDropSend.Failure.badRequest(_:),  v6);
    swift_willThrow(v10);
    *(void *)(v0 + 264) = v8;
    swift_errorRetain(v8);
    uint64_t v11 = swift_errorRetain(v8);
    uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
    os_log_type_t v13 = static os_log_type_t.error.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v15 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v14 = 138412290;
      swift_errorRetain(v8);
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError(v8);
      *(void *)(v0 + 128) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v14 + 4, v14 + 12);
      *uint64_t v15 = v16;
      swift_errorRelease(v8);
      swift_errorRelease(v8);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to load final URLs %@", v14, 0xCu);
      uint64_t v17 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v15, 1LL, v17);
      uint64_t v18 = v15;
      uint64_t v5 = v0 + 120;
      swift_slowDealloc(v18, -1LL, -1LL);
      swift_slowDealloc(v14, -1LL, -1LL);
    }

    else
    {

      swift_errorRelease(v8);
      swift_errorRelease(v8);
    }

    uint64_t v19 = *(void *)(v0 + 184);
    uint64_t v20 = *(void *)(v0 + 192);
    uint64_t v21 = *(void *)(v0 + 176);
    *(void *)(v0 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v8;
    swift_errorRetain(v8);
    uint64_t v22 = sub_100183098(&qword_100645710);
    int v23 = swift_dynamicCast(v21, v5, v22, v19, 6LL);
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v25 = *(void *)(v0 + 200);
    if (v23)
    {
      uint64_t v26 = *(void *)(v0 + 184);
      uint64_t v27 = *(void *)(v0 + 192);
      uint64_t v28 = *(void *)(v0 + 176);
      v24(v28, 0LL, 1LL, v26);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v25, v28, v26);
    }

    else
    {
      uint64_t v29 = *(void *)(v0 + 176);
      v24(v29, 1LL, 1LL, *(void *)(v0 + 184));
      swift_errorRetain(v8);
      CodableError.init(_:)(v8);
      sub_100187100(v29, &qword_10064A118);
    }

    uint64_t v30 = *(void *)(v0 + 152);
    uint64_t v31 = (void *)swift_task_alloc(dword_10064A12C);
    *(void *)(v0 + 272) = v31;
    *uint64_t v31 = v0;
    v31[1] = sub_10024D180;
    return sub_10025B7C4(*(void *)(v0 + 136), *(void *)(v0 + 144), v30 & 0xFFFFFFFFFFLL, *(void *)(v0 + 200));
  }

uint64_t sub_10024D180()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 232LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 192LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 200LL);
  uint64_t v4 = *(void *)(*(void *)v0 + 184LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 272LL));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_10024D1F8, v1, 0LL);
}

uint64_t sub_10024D1F8()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 176);
  swift_willThrow();
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10024D260()
{
  uint64_t v1 = v0[32];
  v0[33] = v1;
  swift_errorRetain(v1);
  uint64_t v2 = swift_errorRetain(v1);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v6 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain(v1);
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 17, v5 + 4, v5 + 12);
    *uint64_t v6 = v7;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to load final URLs %@", v5, 0xCu);
    uint64_t v8 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v6, 1LL, v8);
    swift_slowDealloc(v6, -1LL, -1LL);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  else
  {

    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  uint64_t v9 = v0[23];
  uint64_t v10 = v0[24];
  uint64_t v11 = v0[22];
  v0[15] = v1;
  swift_errorRetain(v1);
  uint64_t v12 = sub_100183098(&qword_100645710);
  int v13 = swift_dynamicCast(v11, v0 + 15, v12, v9, 6LL);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v15 = v0[25];
  if (v13)
  {
    uint64_t v16 = v0[23];
    uint64_t v17 = v0[24];
    uint64_t v18 = v0[22];
    v14(v18, 0LL, 1LL, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v15, v18, v16);
  }

  else
  {
    uint64_t v19 = v0[22];
    v14(v19, 1LL, 1LL, v0[23]);
    swift_errorRetain(v1);
    CodableError.init(_:)(v1);
    sub_100187100(v19, &qword_10064A118);
  }

  uint64_t v20 = v0[19];
  uint64_t v21 = (void *)swift_task_alloc(dword_10064A12C);
  v0[34] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_10024D180;
  return sub_10025B7C4(v0[17], v0[18], v20 & 0xFFFFFFFFFFLL, v0[25]);
}

uint64_t sub_10024D4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[33] = a1;
  v3[34] = a3;
  unint64_t v5 = (*(void *)(*(void *)(sub_100183098(&qword_100649F80) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[35] = swift_task_alloc(v5);
  v3[36] = swift_task_alloc(v5);
  unint64_t v6 = (*(void *)(*(void *)(sub_100183098(&qword_100649F88) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[37] = swift_task_alloc(v6);
  v3[38] = swift_task_alloc(v6);
  unint64_t v7 = (*(void *)(*(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0LL) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[39] = swift_task_alloc(v7);
  v3[40] = swift_task_alloc(v7);
  unint64_t v8 = (*(void *)(*(void *)(_s14descr1005DF7D1C10AskRequestVMa(0LL) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[41] = swift_task_alloc(v8);
  v3[42] = swift_task_alloc(v8);
  v3[31] = a2;
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to Sequence<>.coordinateRead(withSaveToTempDir:options:)[1]);
  v3[43] = v9;
  uint64_t v10 = sub_100183098((uint64_t *)&unk_1006464E0);
  uint64_t v11 = sub_1001CD538(&qword_100649FC8, (uint64_t *)&unk_1006464E0, (uint64_t)&protocol conformance descriptor for [A]);
  *uint64_t v9 = v3;
  v9[1] = sub_10024D638;
  return Sequence<>.coordinateRead(withSaveToTempDir:options:)(0LL, 8LL, v10, v11);
}

uint64_t sub_10024D638(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v2 + 344LL);
  os_log_type_t v4 = *(void **)v2;
  v4[44] = a1;
  v4[45] = v1;
  swift_task_dealloc(v3);
  if (v1) {
    return swift_task_switch(sub_10024DC0C, 0LL, 0LL);
  }
  unint64_t v6 = (void *)swift_task_alloc(dword_100649FD4);
  v4[46] = v6;
  *unint64_t v6 = v4;
  v6[1] = sub_10024D6CC;
  return sub_10025F17C();
}

uint64_t sub_10024D6CC()
{
  uint64_t v2 = (*v1)[46];
  uint64_t v3 = *v1;
  v3[47] = v0;
  swift_task_dealloc(v2);
  if (v0) {
    return swift_task_switch(sub_10024D888, 0LL, 0LL);
  }
  unint64_t v5 = (uint64_t **)swift_task_alloc(dword_100649F94);
  v3[48] = (uint64_t)v5;
  *unint64_t v5 = v3;
  v5[1] = (uint64_t *)sub_10024D77C;
  return sub_10024DE5C((uint64_t)(v3 + 2), v3[41], v3[39], v3[37], v3[35]);
}

uint64_t sub_10024D77C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 384);
  uint64_t v4 = *(void *)(*v1 + 24);
  uint64_t v5 = *(void *)(*v1 + 32);
  *(void *)(v2 + 392) = v0;
  *(void *)(v2 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v4;
  uint64_t v6 = *(void *)(v2 + 40);
  uint64_t v19 = *(void *)(v2 + 48);
  uint64_t v20 = v5;
  uint64_t v7 = *(void *)(v2 + 56);
  *(void *)(v2 + 408) = v6;
  *(void *)(v2 + 4sub_100195658(v0 + 16) = v7;
  char v18 = *(_BYTE *)(v2 + 64);
  uint64_t v8 = *(void *)(v2 + 80);
  uint64_t v9 = *(void *)(v2 + 96);
  uint64_t v16 = *(void *)(v2 + 88);
  uint64_t v17 = *(void *)(v2 + 72);
  *(void *)(v2 + 424) = v8;
  *(void *)(v2 + 4sub_100195658(v0 + 32) = v9;
  uint64_t v11 = *(void *)(v2 + 104);
  uint64_t v10 = *(void *)(v2 + 112);
  uint64_t v12 = *(void *)(v2 + 120);
  *(void *)(v2 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v10;
  *(void *)(v2 + 448) = v12;
  __int128 v15 = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v2 + 456) = v15;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_bridgeObjectRelease(*(const char **)(v2 + 352));
    int v13 = sub_10024DC9C;
  }

  else
  {
    *(void *)(v2 + 144) = v20;
    *(void *)(v2 + 152) = v6;
    *(void *)(v2 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v19;
    *(void *)(v2 + 168) = v7;
    *(_BYTE *)(v2 + 176) = v18;
    *(void *)(v2 + 184) = v17;
    *(void *)(v2 + 192) = v8;
    *(void *)(v2 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v16;
    *(void *)(v2 + 208) = v9;
    *(void *)(v2 + 2sub_100195658(v0 + 16) = v11;
    *(void *)(v2 + 224) = v10;
    *(void *)(v2 + 2sub_100195658(v0 + 32) = v12;
    *(void *)(v2 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v15;
    int v13 = sub_10024D920;
  }

  return swift_task_switch(v13, 0LL, 0LL);
}

uint64_t sub_10024D888()
{
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v5 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v7 = *(void *)(v0 + 280);
  uint64_t v6 = *(void *)(v0 + 288);
  swift_task_dealloc(*(void *)(v0 + 336));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10024D920()
{
  uint64_t v1 = v0[58];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[40];
  uint64_t v5 = v0[37];
  uint64_t v4 = v0[38];
  uint64_t v7 = v0[35];
  uint64_t v6 = v0[36];
  sub_1001A4B40(v0[41], v0[42], _s14descr1005DF7D1C10AskRequestVMa);
  sub_1001A4B40(v2, v3, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001870BC(v5, v4, &qword_100649F88);
  sub_1001870BC(v7, v6, &qword_100649F80);
  if (v1)
  {
    uint64_t v8 = (const char *)v0[58];
    uint64_t v9 = (const char *)v0[44];
    v0[32] = (uint64_t)v8;
    uint64_t v10 = sub_100183098(&qword_100649FE0);
    uint64_t v11 = sub_1001CD538(&qword_100649FE8, &qword_100649FE0, (uint64_t)&protocol conformance descriptor for [A]);
    uint64_t v12 = RandomAccessCollection<>.urls.getter(v10, v11);
    *(void *)&double v13 = swift_bridgeObjectRelease(v8).n128_u64[0];
    swift_bridgeObjectRelease(v9, v13);
  }

  else
  {
    uint64_t v12 = v0[44];
  }

  v0[59] = v12;
  uint64_t v14 = (uint64_t **)swift_task_alloc(dword_100649FDC);
  v0[60] = (uint64_t)v14;
  *uint64_t v14 = v0;
  v14[1] = (uint64_t *)sub_10024DA6C;
  return sub_10024F67C(v0[33], v0[42], v0[50], v0[40], v0 + 18, v0[38], v12, v0[36]);
}

uint64_t sub_10024DA6C()
{
  uint64_t v3 = *(const char **)(*(void *)v1 + 472LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 480LL);
  *(void *)(*(void *)v1 + 488LL) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0) {
    uint64_t v4 = sub_10024DD2C;
  }
  else {
    uint64_t v4 = sub_10024DAD8;
  }
  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_10024DAD8()
{
  uint64_t v1 = *(void *)(v0 + 448);
  uint64_t v3 = *(const char **)(v0 + 432);
  uint64_t v2 = *(const char **)(v0 + 440);
  uint64_t v4 = *(const char **)(v0 + 416);
  uint64_t v5 = *(const char **)(v0 + 424);
  uint64_t v6 = *(void **)(v0 + 400);
  uint64_t v7 = *(void *)(v0 + 336);
  uint64_t v8 = *(void *)(v0 + 320);
  uint64_t v17 = *(void *)(v0 + 328);
  uint64_t v18 = *(void *)(v0 + 312);
  unint64_t v15 = *(void *)(v0 + 456);
  uint64_t v16 = *(void *)(v0 + 304);
  uint64_t v9 = *(void *)(v0 + 288);
  uint64_t v19 = *(void *)(v0 + 296);
  uint64_t v20 = *(void *)(v0 + 280);
  *(void *)&double v10 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 408)).n128_u64[0];
  *(void *)&double v11 = swift_bridgeObjectRelease(v4, v10).n128_u64[0];
  *(void *)&double v12 = swift_bridgeObjectRelease(v5, v11).n128_u64[0];
  *(void *)&double v13 = swift_bridgeObjectRelease(v3, v12).n128_u64[0];
  swift_bridgeObjectRelease(v2, v13);
  sub_100189B0C(v1, v15);

  sub_100187100(v9, &qword_100649F80);
  sub_100187100(v16, &qword_100649F88);
  sub_1001A4BC8(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4BC8(v7, _s14descr1005DF7D1C10AskRequestVMa);
  swift_task_dealloc(v7);
  swift_task_dealloc(v17);
  swift_task_dealloc(v8);
  swift_task_dealloc(v18);
  swift_task_dealloc(v16);
  swift_task_dealloc(v19);
  swift_task_dealloc(v9);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10024DC0C()
{
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v5 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v7 = *(void *)(v0 + 280);
  uint64_t v6 = *(void *)(v0 + 288);
  swift_task_dealloc(*(void *)(v0 + 336));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10024DC9C()
{
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v5 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v7 = *(void *)(v0 + 280);
  uint64_t v6 = *(void *)(v0 + 288);
  swift_task_dealloc(*(void *)(v0 + 336));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10024DD2C()
{
  uint64_t v1 = *(void *)(v0 + 448);
  unint64_t v2 = *(void *)(v0 + 456);
  uint64_t v4 = *(const char **)(v0 + 432);
  uint64_t v3 = *(const char **)(v0 + 440);
  uint64_t v6 = *(const char **)(v0 + 416);
  uint64_t v5 = *(const char **)(v0 + 424);
  uint64_t v7 = *(void **)(v0 + 400);
  uint64_t v22 = *(void *)(v0 + 320);
  uint64_t v23 = *(void *)(v0 + 336);
  uint64_t v8 = *(void *)(v0 + 304);
  uint64_t v9 = *(void *)(v0 + 288);
  *(void *)&double v10 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 408)).n128_u64[0];
  *(void *)&double v11 = swift_bridgeObjectRelease(v6, v10).n128_u64[0];
  *(void *)&double v12 = swift_bridgeObjectRelease(v5, v11).n128_u64[0];
  *(void *)&double v13 = swift_bridgeObjectRelease(v4, v12).n128_u64[0];
  swift_bridgeObjectRelease(v3, v13);
  sub_100189B0C(v1, v2);

  sub_100187100(v9, &qword_100649F80);
  sub_100187100(v8, &qword_100649F88);
  sub_1001A4BC8(v22, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4BC8(v23, _s14descr1005DF7D1C10AskRequestVMa);
  uint64_t v14 = *(void *)(v0 + 328);
  uint64_t v16 = *(void *)(v0 + 312);
  uint64_t v15 = *(void *)(v0 + 320);
  uint64_t v18 = *(void *)(v0 + 296);
  uint64_t v17 = *(void *)(v0 + 304);
  uint64_t v20 = *(void *)(v0 + 280);
  uint64_t v19 = *(void *)(v0 + 288);
  swift_task_dealloc(*(void *)(v0 + 336));
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10024DE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[56] = a5;
  v6[57] = v5;
  v6[54] = a3;
  v6[55] = a4;
  v6[52] = a1;
  v6[53] = a2;
  uint64_t v7 = sub_100183098(&qword_10064A140);
  v6[58] = v7;
  unint64_t v8 = (*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[59] = swift_task_alloc(v8);
  v6[60] = swift_task_alloc(v8);
  v6[61] = swift_task_alloc(v8);
  v6[62] = swift_task_alloc(v8);
  v6[63] = swift_task_alloc(v8);
  v6[64] = swift_task_alloc(v8);
  v6[65] = swift_task_alloc(v8);
  v6[66] = swift_task_alloc(v8);
  v6[67] = swift_task_alloc(v8);
  v6[68] = swift_task_alloc(v8);
  v6[69] = swift_task_alloc(v8);
  uint64_t v9 = type metadata accessor for SFAirDropSend.Transfer.State(0LL);
  v6[70] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[71] = v10;
  v6[72] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  v6[73] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v6[74] = v12;
  unint64_t v13 = (*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[75] = swift_task_alloc(v13);
  v6[76] = swift_task_alloc(v13);
  v6[77] = swift_task_alloc(v13);
  uint64_t v14 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v6[78] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v6[79] = v15;
  v6[80] = swift_task_alloc((*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v16 = static AirDropActor.shared;
  v6[81] = static AirDropActor.shared;
  return swift_task_switch(sub_10024E008, v16, 0LL);
}

uint64_t sub_10024E008(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 640);
  uint64_t v3 = *(void *)(v1 + 632);
  uint64_t v4 = *(void *)(v1 + 624);
  uint64_t v5 = *(void *)(v1 + 456) + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
  SFAirDropSend.Request.type.getter(a1);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 88))(v2, v4) == enum case for SFAirDrop.TransferType.exchange(_:))
  {
    uint64_t v6 = *(void *)(v1 + 640);
    uint64_t v7 = *(void *)(v1 + 456);
    (*(void (**)(uint64_t, void))(*(void *)(v1 + 632) + 96LL))(v6, *(void *)(v1 + 624));
    swift_bridgeObjectRelease(*(const char **)(v6 + 8));
    uint64_t v8 = *(void *)(v7 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
    uint64_t v9 = swift_retain(v8);
    CurrentValueSubject.value.getter(v9);
    swift_release(v8);
    uint64_t v10 = *(void *)(v1 + 408);
    uint64_t v11 = *(void *)(v10 + 16);
    swift_bridgeObjectRelease((const char *)v10);
    if (v11 == 1)
    {
      unint64_t v13 = (void *)swift_task_alloc(dword_10064A154);
      *(void *)(v1 + 656) = v13;
      *unint64_t v13 = v1;
      v13[1] = sub_10024E37C;
      return sub_1002515C4( v1 + 144,  *(void *)(v1 + 424),  *(void *)(v1 + 432),  *(void *)(v1 + 440),  *(void *)(v1 + 448));
    }
  }

  else
  {
    uint64_t v12 = (*(uint64_t (**)(void, void))(*(void *)(v1 + 632) + 8LL))( *(void *)(v1 + 640),  *(void *)(v1 + 624));
  }

  uint64_t v42 = v5;
  *(void *)(v1 + 664) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Send StateMachine ASK START", v17, 2u);
    swift_slowDealloc(v17, -1LL, -1LL);
  }

  uint64_t v18 = *(void *)(v1 + 616);
  uint64_t v19 = *(void *)(v1 + 608);
  uint64_t v41 = *(void *)(v1 + 600);
  uint64_t v37 = *(void *)(v1 + 592);
  uint64_t v20 = *(void *)(v1 + 584);
  uint64_t v21 = *(void *)(v1 + 576);
  uint64_t v22 = *(void *)(v1 + 568);
  uint64_t v23 = *(void *)(v1 + 560);
  uint64_t v24 = *(void *)(v1 + 456);
  uint64_t v39 = *(int **)(v1 + 464);
  uint64_t v40 = *(void *)(v1 + 552);

  uint64_t v38 = *(void (**)(uint64_t))(v24
                                       + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_yield);
  uint64_t v25 = v24 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  __n128 v26 = swift_beginAccess( v24 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer,  v1 + 376,  0LL,  0LL);
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v37 + 16);
  v27(v19, v25, v20, v26);
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))( v21,  enum case for SFAirDropSend.Transfer.State.waitingForAskResponse(_:),  v23);
  SFAirDropSend.Transfer.update(state:)(v21);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  *(void *)(v1 + 672) = v28;
  v28(v19, v20);
  v38(v18);
  v28(v18, v20);
  uint64_t v29 = v39[12];
  *(_DWORD *)(v1 + 8sub_100195658(v0 + 16) = v29;
  uint64_t v30 = v40 + v29;
  uint64_t v31 = v39[20];
  *(_DWORD *)(v1 + 82_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v31;
  uint64_t v32 = v40 + v31;
  uint64_t v33 = v39[32];
  *(_DWORD *)(v1 + 824) = v33;
  uint64_t v34 = v40 + v33;
  ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v41, v25, v20);
  uint64_t v35 = *(void *)(v24 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_deviceStatus);
  uint64_t v36 = (void *)swift_task_alloc(dword_10064A14C);
  *(void *)(v1 + 68_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v36;
  *uint64_t v36 = v1;
  v36[1] = sub_10024E63C;
  return sub_100253A7C(v1 + 16, v30, v32, v34, v42, *(void *)(v1 + 600), v35);
}

uint64_t sub_10024E37C()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v38 = *(void **)v1;
  uint64_t v15 = *(unsigned __int8 *)(*(void *)v1 + 148LL);
  uint64_t v14 = *(unsigned int *)(*(void *)v1 + 144LL);
  uint64_t v29 = *(void *)(*(void *)v1 + 160LL);
  uint64_t v30 = *(void *)(*(void *)v1 + 152LL);
  uint64_t v27 = *(void *)(*(void *)v1 + 176LL);
  uint64_t v28 = *(void *)(*(void *)v1 + 168LL);
  uint64_t v26 = *(void *)(*(void *)v1 + 184LL);
  char v25 = *(_BYTE *)(*(void *)v1 + 192LL);
  uint64_t v23 = *(void *)(*(void *)v1 + 208LL);
  uint64_t v24 = *(void *)(*(void *)v1 + 200LL);
  uint64_t v21 = *(void *)(*(void *)v1 + 224LL);
  uint64_t v22 = *(void *)(*(void *)v1 + 216LL);
  uint64_t v19 = *(void *)(*(void *)v1 + 240LL);
  uint64_t v20 = *(void *)(*(void *)v1 + 232LL);
  uint64_t v17 = *(void *)(*(void *)v1 + 256LL);
  uint64_t v18 = *(void *)(*(void *)v1 + 248LL);
  uint64_t v16 = *(void *)(*(void *)v1 + 264LL);
  swift_task_dealloc(*(void *)(*(void *)v1 + 656LL));
  uint64_t v3 = v2[80];
  uint64_t v4 = v2[77];
  uint64_t v5 = v2[76];
  uint64_t v6 = v2[75];
  uint64_t v7 = v2[72];
  uint64_t v8 = v2[69];
  uint64_t v9 = v2[68];
  uint64_t v10 = v2[67];
  uint64_t v11 = v2[66];
  uint64_t v31 = v2[65];
  uint64_t v32 = v2[64];
  uint64_t v33 = v2[63];
  uint64_t v34 = v2[62];
  uint64_t v35 = v2[61];
  uint64_t v36 = v2[60];
  uint64_t v37 = v2[59];
  if (v0)
  {
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
  }

  else
  {
    uint64_t v12 = v2[52];
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    *(_BYTE *)(v12 + 4) = (v14 | (unint64_t)(v15 << 32)) >> 32;
    *(_DWORD *)uint64_t v12 = v14;
    *(void *)(v12 + 8) = v30;
    *(void *)(v12 + sub_100195658(v0 + 16) = v29;
    *(void *)(v12 + 24) = v28;
    *(void *)(v12 + sub_100195658(v0 + 32) = v27;
    *(void *)(v12 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v26;
    *(_BYTE *)(v12 + 48) = v25;
    *(void *)(v12 + 56) = v24;
    *(void *)(v12 + 64) = v23;
    *(void *)(v12 + 72) = v22;
    *(void *)(v12 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v21;
    *(void *)(v12 + 88) = v20;
    *(void *)(v12 + 96) = v19;
    *(void *)(v12 + 104) = v18;
    *(void *)(v12 + 112) = v17;
    *(void *)(v12 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v16;
  }

  return ((uint64_t (*)(void))v38[1])();
}

uint64_t sub_10024E63C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 680);
  *(void *)(v2 + 688) = v0;
  int v4 = *(_DWORD *)(v2 + 16);
  *(_BYTE *)(v2 + 70_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(_BYTE *)(v2 + 20);
  *(_DWORD *)(v2 + 696) = v4;
  uint64_t v5 = *(void *)(v2 + 32);
  *(void *)(v2 + 704) = *(void *)(v2 + 24);
  *(void *)(v2 + 712) = v5;
  *(_OWORD *)(v2 + 72_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(_OWORD *)(v2 + 40);
  *(void *)(v2 + 736) = *(void *)(v2 + 56);
  *(_BYTE *)(v2 + 84_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(_BYTE *)(v2 + 64);
  __int128 v6 = *(_OWORD *)(v2 + 88);
  *(_OWORD *)(v2 + 744) = *(_OWORD *)(v2 + 72);
  *(_OWORD *)(v2 + 76_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v6;
  __int128 v7 = *(_OWORD *)(v2 + 120);
  *(_OWORD *)(v2 + 776) = *(_OWORD *)(v2 + 104);
  *(_OWORD *)(v2 + 792) = v7;
  *(void *)(v2 + 808) = *(void *)(v2 + 136);
  swift_task_dealloc(v3);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v2 + 672);
  uint64_t v9 = *(void *)(v2 + 648);
  uint64_t v10 = *(void *)(v2 + 600);
  uint64_t v11 = *(void *)(v2 + 584);
  if (v0)
  {
    v8(v10, v11);
    uint64_t v12 = sub_10024F560;
  }

  else
  {
    unint64_t v13 = *(_DWORD **)(v2 + 464);
    *(_DWORD *)(v2 + 828) = v13[16];
    *(_DWORD *)(v2 + 8sub_100195658(v0 + 32) = v13[24];
    *(_DWORD *)(v2 + 836) = v13[28];
    v8(v10, v11);
    uint64_t v12 = sub_10024E738;
  }

  return swift_task_switch(v12, v9, 0LL);
}

uint64_t sub_10024E738()
{
  uint64_t v167 = *(int *)(v0 + 836);
  uint64_t v1 = *(int *)(v0 + 828);
  unint64_t v181 = *(const char **)(v0 + 808);
  uint64_t v2 = *(void *)(v0 + 792);
  uint64_t v138 = *(const char **)(v0 + 784);
  unint64_t v141 = *(void *)(v0 + 800);
  uint64_t v3 = *(const char **)(v0 + 768);
  uint64_t v152 = *(void *)(v0 + 760);
  uint64_t v155 = *(void *)(v0 + 776);
  uint64_t v185 = *(const char **)(v0 + 752);
  uint64_t v149 = *(void *)(v0 + 744);
  char v4 = *(_BYTE *)(v0 + 840);
  char v147 = v4;
  uint64_t v5 = *(const char **)(v0 + 736);
  uint64_t v135 = *(const char **)(v0 + 720);
  uint64_t v143 = *(void *)(v0 + 712);
  uint64_t v145 = *(void *)(v0 + 728);
  int v6 = *(_DWORD *)(v0 + 696);
  char v7 = *(_BYTE *)(v0 + 700);
  uint64_t v8 = *(int *)(v0 + 816);
  uint64_t v9 = *(void *)(v0 + 552);
  uint64_t v10 = *(void *)(v0 + 544);
  uint64_t v174 = *(void *)(v0 + 536);
  uint64_t v177 = *(void *)(v0 + 528);
  uint64_t v11 = *(int **)(v0 + 464);
  uint64_t v12 = v9 + *(int *)(v0 + 832);
  uint64_t v171 = v9 + *(int *)(v0 + 824);
  uint64_t v158 = v9 + *(int *)(v0 + 820);
  uint64_t v161 = *(void **)(v0 + 704);
  *(_BYTE *)(v9 + 4) = v7;
  *(_DWORD *)uint64_t v9 = v6;
  *(void *)(v9 + vsub_10022D314(2, 1) = v161;
  *(void *)uint64_t v12 = v143;
  *(void *)(v12 + 8) = v135;
  *(void *)(v12 + sub_100195658(v0 + 16) = v145;
  *(void *)(v12 + 24) = v5;
  unint64_t v13 = v5;
  *(_BYTE *)(v12 + sub_100195658(v0 + 32) = v4;
  *(void *)(v12 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v149;
  *(void *)(v12 + 48) = v185;
  *(void *)(v12 + 56) = v152;
  *(void *)(v12 + 64) = v3;
  uint64_t v14 = v3;
  *(void *)(v12 + 72) = v155;
  *(void *)(v12 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v138;
  *(void *)(v12 + 88) = v2;
  *(void *)(v12 + 96) = v141;
  uint64_t v15 = v2;
  *(void *)(v9 + v167) = v181;
  uint64_t v16 = v11[12];
  uint64_t v17 = v11[16];
  uint64_t v18 = v11[20];
  uint64_t v19 = v11[24];
  uint64_t v164 = v2;
  uint64_t v168 = v11[28];
  uint64_t v20 = v11[32];
  *(_BYTE *)(v10 + 4) = v7;
  *(_DWORD *)uint64_t v10 = v6;
  uint64_t v21 = v10 + v18;
  uint64_t v22 = v10 + v19;
  uint64_t v132 = v10 + v20;
  sub_1001A4B84(v9 + v8, v10 + v16, _s14descr1005DF7D1C10AskRequestVMa);
  *(void *)(v10 + v17) = v161;
  sub_1001A4B84(v158, v21, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)uint64_t v22 = v143;
  *(void *)(v22 + 8) = v135;
  *(void *)(v22 + sub_100195658(v0 + 16) = v145;
  *(void *)(v22 + 24) = v13;
  *(_BYTE *)(v22 + sub_100195658(v0 + 32) = v147;
  *(void *)(v22 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v149;
  *(void *)(v22 + 48) = v185;
  *(void *)(v22 + 56) = v152;
  *(void *)(v22 + 64) = v14;
  *(void *)(v22 + 72) = v155;
  *(void *)(v22 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v138;
  *(void *)(v22 + 88) = v15;
  *(void *)(v22 + 96) = v141;
  *(void *)(v10 + v168) = v181;
  sub_1001915A4(v171, v132, &qword_100649F80);
  sub_1001915A4(v10, v174, &qword_10064A140);
  sub_1001870BC(v10, v177, &qword_10064A140);
  swift_bridgeObjectRetain(v138);
  id v23 = v161;
  swift_bridgeObjectRetain(v135);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v185);
  swift_bridgeObjectRetain(v14);
  sub_1001A4C04(v164, v141);
  uint64_t v24 = swift_bridgeObjectRetain(v181);
  char v25 = (os_log_s *)Logger.logObject.getter(v24);
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = *(void *)(v0 + 536);
    uint64_t v179 = *(void *)(v0 + 528);
    uint64_t v28 = *(void *)(v0 + 520);
    uint64_t v29 = *(int **)(v0 + 464);
    uint64_t v30 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v182 = swift_slowAlloc(32LL, -1LL);
    uint64_t v188 = v182;
    unsigned int v172 = v25;
    unint64_t v175 = v30;
    *(_DWORD *)uint64_t v30 = 136315138;
    uint64_t v169 = v30 + 12;
    uint64_t v31 = v29[12];
    uint64_t v32 = v28 + v31;
    uint64_t v162 = v28 + v31;
    uint64_t v165 = v30 + 4;
    uint64_t v33 = v29[16];
    uint64_t v34 = v29[20];
    uint64_t v35 = v28 + v34;
    uint64_t v36 = v29[24];
    uint64_t v153 = (void *)(v28 + v36);
    uint64_t v37 = v29[28];
    uint64_t v38 = v29[32];
    uint64_t v39 = v27 + v31;
    uint64_t v40 = v27 + v34;
    uint64_t v41 = (_OWORD *)(v27 + v36);
    uint64_t v156 = v27 + v38;
    uint64_t v159 = v28 + v38;
    LODWORD(v3sub_10022D314(2, 1) = *(_DWORD *)v27;
    *(_BYTE *)(v28 + 4) = *(_BYTE *)(v27 + 4);
    *(_DWORD *)uint64_t v28 = v31;
    sub_1001A4B84(v39, v32, _s14descr1005DF7D1C10AskRequestVMa);
    *(void *)(v28 + v33) = *(void *)(v27 + v33);
    sub_1001A4B84(v40, v35, type metadata accessor for SDAirDropDiscoveredEndpoint);
    __int128 v43 = v41[1];
    __int128 v42 = v41[2];
    *(_OWORD *)(v0 + 272) = *v41;
    *(_OWORD *)(v0 + 288) = v43;
    *(_OWORD *)(v0 + 304) = v42;
    __int128 v45 = v41[4];
    __int128 v44 = v41[5];
    __int128 v46 = v41[3];
    *(void *)(v0 + 368) = *((void *)v41 + 12);
    *(_OWORD *)(v0 + 336) = v45;
    *(_OWORD *)(v0 + 352) = v44;
    *(_OWORD *)(v0 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v46;
    memmove(v153, v41, 0x68uLL);
    *(void *)(v28 + v37) = *(void *)(v27 + v37);
    sub_1001915A4(v156, v159, &qword_100649F80);
    sub_10025FCB0((void *)(v0 + 272));
    sub_100187100(v159, &qword_100649F80);
    sub_1001A4BC8(v35, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1001A4BC8(v162, _s14descr1005DF7D1C10AskRequestVMa);
    uint64_t v47 = sub_1003E0AFC();
    uint64_t v49 = v48;
    sub_1001FC264((void *)(v0 + 272));
    *(void *)(v0 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10018CDB4(v47, (unint64_t)v49, &v188);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 400, v0 + 408, v165, v169);
    swift_bridgeObjectRelease(v49);
    sub_100187100(v179, &qword_10064A140);
    sub_100187100(v27, &qword_10064A140);
    _os_log_impl((void *)&_mh_execute_header, v172, v26, "Send StateMachine ASK END {response: %s}", v175, 0xCu);
    swift_arrayDestroy(v182, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v182, -1LL, -1LL);
    swift_slowDealloc(v175, -1LL, -1LL);
  }

  else
  {
    uint64_t v50 = *(void *)(v0 + 536);
    uint64_t v51 = *(void *)(v0 + 528);

    sub_100187100(v51, &qword_10064A140);
    sub_100187100(v50, &qword_10064A140);
  }

  uint64_t v139 = *(int *)(v0 + 836);
  uint64_t v183 = *(int *)(v0 + 828);
  uint64_t v186 = *(int *)(v0 + 832);
  uint64_t v52 = *(int **)(v0 + 552);
  uint64_t v53 = *(void *)(v0 + 520);
  uint64_t v54 = *(void *)(v0 + 512);
  uint64_t v124 = *(void *)(v0 + 504);
  uint64_t v101 = *(void *)(v0 + 496);
  uint64_t v103 = *(void *)(v0 + 488);
  uint64_t v109 = *(void *)(v0 + 480);
  uint64_t v55 = *(int **)(v0 + 464);
  uint64_t v113 = *(void *)(v0 + 472);
  uint64_t v116 = *(void *)(v0 + 448);
  uint64_t v119 = *(void *)(v0 + 440);
  uint64_t v121 = *(void *)(v0 + 432);
  uint64_t v127 = *(void *)(v0 + 424);
  uint64_t v56 = (uint64_t)v52 + *(int *)(v0 + 820);
  uint64_t v133 = (uint64_t)v52 + *(int *)(v0 + 824);
  uint64_t v136 = v56;
  uint64_t v150 = (uint64_t)v52 + *(int *)(v0 + 816);
  uint64_t v57 = v55[16];
  uint64_t v58 = v53 + v55[20];
  uint64_t v117 = v58;
  uint64_t v118 = v53 + v55[12];
  uint64_t v59 = v53 + v55[24];
  uint64_t v114 = v55[28];
  uint64_t v130 = v53 + v55[32];
  int v148 = *v52;
  char v166 = *((_BYTE *)v52 + 4);
  *(_BYTE *)(v53 + 4) = v166;
  *(_DWORD *)uint64_t v53 = v148;
  sub_1001A4B84(v150, v118, _s14descr1005DF7D1C10AskRequestVMa);
  uint64_t v157 = *(void *)((char *)v52 + v183);
  *(void *)(v53 + v57) = v157;
  sub_1001A4B84(v56, v58, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v176 = *(void *)(v12 + 8);
  uint64_t v178 = *(void *)((char *)v52 + v186);
  uint64_t v170 = *(void *)(v12 + 24);
  uint64_t v173 = *(void *)(v12 + 16);
  char v163 = *(_BYTE *)(v12 + 32);
  uint64_t v160 = *(void *)(v12 + 40);
  uint64_t v60 = *(void *)(v12 + 56);
  uint64_t v184 = *(void *)(v12 + 64);
  uint64_t v187 = *(void *)(v12 + 48);
  uint64_t v144 = *(void *)(v12 + 72);
  uint64_t v180 = *(void *)(v12 + 80);
  uint64_t v61 = *(void *)(v12 + 96);
  uint64_t v154 = *(void *)(v12 + 88);
  *(void *)uint64_t v59 = v178;
  *(void *)(v59 + 8) = v176;
  *(void *)(v59 + sub_100195658(v0 + 16) = v173;
  *(void *)(v59 + 24) = v170;
  *(_BYTE *)(v59 + sub_100195658(v0 + 32) = v163;
  *(void *)(v59 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v160;
  *(void *)(v59 + 48) = v187;
  *(void *)(v59 + 56) = v60;
  *(void *)(v59 + 64) = v184;
  uint64_t v146 = v60;
  *(void *)(v59 + 72) = v144;
  *(void *)(v59 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v180;
  *(void *)(v59 + 88) = v154;
  *(void *)(v59 + 96) = v61;
  uint64_t v140 = *(void *)((char *)v52 + v139);
  uint64_t v142 = v61;
  *(void *)(v53 + v114) = v140;
  sub_1001915A4(v133, v130, &qword_100649F80);
  uint64_t v62 = v55[16];
  uint64_t v63 = v54 + v55[20];
  uint64_t v115 = v63;
  uint64_t v64 = v54 + v55[24];
  uint64_t v107 = v55[28];
  uint64_t v65 = v54 + v55[32];
  uint64_t v111 = v54 + v55[12];
  *(_BYTE *)(v54 + 4) = v166;
  *(_DWORD *)uint64_t v54 = v148;
  sub_1001A4B84(v150, v111, _s14descr1005DF7D1C10AskRequestVMa);
  *(void *)(v54 + v62) = v157;
  sub_1001A4B84(v136, v63, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)uint64_t v64 = v178;
  *(void *)(v64 + 8) = v176;
  *(void *)(v64 + sub_100195658(v0 + 16) = v173;
  *(void *)(v64 + 24) = v170;
  *(_BYTE *)(v64 + sub_100195658(v0 + 32) = v163;
  *(void *)(v64 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v160;
  *(void *)(v64 + 48) = v187;
  *(void *)(v64 + 56) = v60;
  *(void *)(v64 + 64) = v184;
  *(void *)(v64 + 72) = v144;
  *(void *)(v64 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v180;
  *(void *)(v64 + 88) = v154;
  *(void *)(v64 + 96) = v142;
  *(void *)(v54 + v107) = v140;
  sub_1001915A4(v133, v65, &qword_100649F80);
  sub_1001A4B40(v111, v127, _s14descr1005DF7D1C10AskRequestVMa);
  uint64_t v66 = v124 + v55[12];
  uint64_t v112 = v66;
  uint64_t v67 = v55[16];
  uint64_t v68 = v124 + v55[20];
  uint64_t v69 = v124 + v55[24];
  uint64_t v105 = v55[28];
  uint64_t v108 = v68;
  uint64_t v128 = v124 + v55[32];
  *(_BYTE *)(v124 + 4) = v166;
  *(_DWORD *)uint64_t v124 = v148;
  sub_1001A4B84(v150, v66, _s14descr1005DF7D1C10AskRequestVMa);
  *(void *)(v124 + v67) = v157;
  sub_1001A4B84(v136, v68, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)uint64_t v69 = v178;
  *(void *)(v69 + 8) = v176;
  *(void *)(v69 + sub_100195658(v0 + 16) = v173;
  *(void *)(v69 + 24) = v170;
  *(_BYTE *)(v69 + sub_100195658(v0 + 32) = v163;
  *(void *)(v69 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v160;
  *(void *)(v69 + 48) = v187;
  *(void *)(v69 + 56) = v146;
  *(void *)(v69 + 64) = v184;
  *(void *)(v69 + 72) = v144;
  *(void *)(v69 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v180;
  *(void *)(v69 + 88) = v154;
  *(void *)(v69 + 96) = v142;
  *(void *)(v124 + v105) = v140;
  sub_1001915A4(v133, v128, &qword_100649F80);
  uint64_t v70 = v101 + v55[12];
  uint64_t v106 = v70;
  uint64_t v98 = v55[16];
  uint64_t v71 = v101 + v55[20];
  uint64_t v72 = v101 + v55[24];
  uint64_t v100 = v55[28];
  uint64_t v125 = v101 + v55[32];
  *(_BYTE *)(v101 + 4) = v166;
  *(_DWORD *)uint64_t v101 = v148;
  sub_1001A4B84(v150, v70, _s14descr1005DF7D1C10AskRequestVMa);
  *(void *)(v101 + v98) = v157;
  sub_1001A4B84(v136, v71, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)uint64_t v72 = v178;
  *(void *)(v72 + 8) = v176;
  *(void *)(v72 + sub_100195658(v0 + 16) = v173;
  *(void *)(v72 + 24) = v170;
  *(_BYTE *)(v72 + sub_100195658(v0 + 32) = v163;
  *(void *)(v72 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v160;
  *(void *)(v72 + 48) = v187;
  *(void *)(v72 + 56) = v146;
  *(void *)(v72 + 64) = v184;
  *(void *)(v72 + 72) = v144;
  *(void *)(v72 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v180;
  *(void *)(v72 + 88) = v154;
  *(void *)(v72 + 96) = v142;
  *(void *)(v101 + v10_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v140;
  sub_1001915A4(v133, v125, &qword_100649F80);
  sub_1001A4B40(v71, v121, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v95 = v55[16];
  uint64_t v73 = v103 + v55[20];
  uint64_t v102 = v103 + v55[12];
  uint64_t v74 = v103 + v55[24];
  uint64_t v99 = v55[28];
  uint64_t v122 = v103 + v55[32];
  *(_BYTE *)(v103 + 4) = v166;
  *(_DWORD *)uint64_t v103 = v148;
  sub_1001A4B84(v150, v102, _s14descr1005DF7D1C10AskRequestVMa);
  *(void *)(v103 + v95) = v157;
  sub_1001A4B84(v136, v73, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)uint64_t v74 = v178;
  *(void *)(v74 + 8) = v176;
  *(void *)(v74 + sub_100195658(v0 + 16) = v173;
  *(void *)(v74 + 24) = v170;
  *(_BYTE *)(v74 + sub_100195658(v0 + 32) = v163;
  *(void *)(v74 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v160;
  *(void *)(v74 + 48) = v187;
  *(void *)(v74 + 56) = v146;
  *(void *)(v74 + 64) = v184;
  *(void *)(v74 + 72) = v144;
  *(void *)(v74 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v180;
  *(void *)(v74 + 88) = v154;
  *(void *)(v74 + 96) = v142;
  *(void *)(v103 + v99) = v140;
  sub_1001915A4(v133, v122, &qword_100649F80);
  uint64_t v75 = type metadata accessor for SFAirDrop.ContactRequest(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56LL))(v119, 1LL, 1LL, v75);
  uint64_t v76 = v109 + v55[12];
  uint64_t v104 = v76;
  uint64_t v77 = v55[16];
  uint64_t v78 = v109 + v55[20];
  uint64_t v79 = v109 + v55[24];
  uint64_t v96 = v55[28];
  uint64_t v120 = v109 + v55[32];
  *(_BYTE *)(v109 + 4) = v166;
  *(_DWORD *)uint64_t v109 = v148;
  sub_1001A4B84(v150, v76, _s14descr1005DF7D1C10AskRequestVMa);
  *(void *)(v109 + v77) = v157;
  sub_1001A4B84(v136, v78, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)uint64_t v79 = v178;
  *(void *)(v79 + 8) = v176;
  *(void *)(v79 + sub_100195658(v0 + 16) = v173;
  *(void *)(v79 + 24) = v170;
  *(_BYTE *)(v79 + sub_100195658(v0 + 32) = v163;
  *(void *)(v79 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v160;
  *(void *)(v79 + 48) = v187;
  *(void *)(v79 + 56) = v146;
  *(void *)(v79 + 64) = v184;
  *(void *)(v79 + 72) = v144;
  *(void *)(v79 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v180;
  *(void *)(v79 + 88) = v154;
  *(void *)(v79 + 96) = v142;
  *(void *)(v109 + v96) = v140;
  sub_1001915A4(v133, v120, &qword_100649F80);
  uint64_t v80 = v113 + v55[12];
  uint64_t v110 = v80;
  uint64_t v94 = v55[16];
  uint64_t v81 = v113 + v55[20];
  uint64_t v82 = v113 + v55[24];
  uint64_t v97 = v55[28];
  uint64_t v83 = v113 + v55[32];
  *(_BYTE *)(v113 + 4) = v166;
  *(_DWORD *)uint64_t v113 = v148;
  sub_1001A4B40(v150, v80, _s14descr1005DF7D1C10AskRequestVMa);
  *(void *)(v113 + v94) = v157;
  sub_1001A4B40(v136, v81, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)uint64_t v82 = v178;
  *(void *)(v82 + 8) = v176;
  *(void *)(v82 + sub_100195658(v0 + 16) = v173;
  *(void *)(v82 + 24) = v170;
  *(_BYTE *)(v82 + sub_100195658(v0 + 32) = v163;
  *(void *)(v82 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v160;
  *(void *)(v82 + 48) = v187;
  *(void *)(v82 + 56) = v146;
  *(void *)(v82 + 64) = v184;
  *(void *)(v82 + 72) = v144;
  *(void *)(v82 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v180;
  *(void *)(v82 + 88) = v154;
  *(void *)(v82 + 96) = v142;
  *(void *)(v113 + v97) = v140;
  sub_1001870BC(v133, v83, &qword_100649F80);
  sub_1001870BC(v83, v116, &qword_100649F80);
  sub_1001A4BC8(v81, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4BC8(v110, _s14descr1005DF7D1C10AskRequestVMa);
  sub_100187100(v120, &qword_100649F80);
  sub_1001A4BC8(v78, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4BC8(v104, _s14descr1005DF7D1C10AskRequestVMa);
  sub_100187100(v122, &qword_100649F80);
  sub_1001A4BC8(v73, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4BC8(v102, _s14descr1005DF7D1C10AskRequestVMa);
  sub_100187100(v125, &qword_100649F80);
  sub_1001A4BC8(v106, _s14descr1005DF7D1C10AskRequestVMa);
  sub_100187100(v128, &qword_100649F80);
  sub_1001A4BC8(v108, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4BC8(v112, _s14descr1005DF7D1C10AskRequestVMa);
  sub_100187100(v65, &qword_100649F80);
  sub_1001A4BC8(v115, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_100187100(v130, &qword_100649F80);
  sub_1001A4BC8(v117, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4BC8(v118, _s14descr1005DF7D1C10AskRequestVMa);
  uint64_t v84 = *(void *)(v0 + 616);
  uint64_t v85 = *(void *)(v0 + 608);
  uint64_t v86 = *(void *)(v0 + 600);
  uint64_t v87 = *(void *)(v0 + 576);
  uint64_t v88 = *(void *)(v0 + 552);
  uint64_t v89 = *(void *)(v0 + 544);
  uint64_t v90 = *(void *)(v0 + 536);
  uint64_t v91 = *(void *)(v0 + 528);
  uint64_t v123 = *(void *)(v0 + 520);
  uint64_t v126 = *(void *)(v0 + 512);
  uint64_t v129 = *(void *)(v0 + 504);
  uint64_t v131 = *(void *)(v0 + 496);
  uint64_t v134 = *(void *)(v0 + 488);
  uint64_t v137 = *(void *)(v0 + 480);
  uint64_t v151 = *(void *)(v0 + 472);
  uint64_t v92 = *(void *)(v0 + 416);
  swift_task_dealloc(*(void *)(v0 + 640));
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v123);
  swift_task_dealloc(v126);
  swift_task_dealloc(v129);
  swift_task_dealloc(v131);
  swift_task_dealloc(v134);
  swift_task_dealloc(v137);
  swift_task_dealloc(v151);
  *(_BYTE *)(v92 + 4) = v166;
  *(_DWORD *)uint64_t v92 = v148;
  *(void *)(v92 + 8) = v157;
  *(void *)(v92 + sub_100195658(v0 + 16) = v178;
  *(void *)(v92 + 24) = v176;
  *(void *)(v92 + sub_100195658(v0 + 32) = v173;
  *(void *)(v92 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v170;
  *(_BYTE *)(v92 + 48) = v163;
  *(void *)(v92 + 56) = v160;
  *(void *)(v92 + 64) = v187;
  *(void *)(v92 + 72) = v146;
  *(void *)(v92 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v184;
  *(void *)(v92 + 88) = v144;
  *(void *)(v92 + 96) = v180;
  *(void *)(v92 + 104) = v154;
  *(void *)(v92 + 112) = v142;
  *(void *)(v92 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v140;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10024F560()
{
  uint64_t v1 = *(void *)(v0 + 616);
  uint64_t v2 = *(void *)(v0 + 608);
  uint64_t v3 = *(void *)(v0 + 600);
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 552);
  uint64_t v6 = *(void *)(v0 + 544);
  uint64_t v7 = *(void *)(v0 + 536);
  uint64_t v8 = *(void *)(v0 + 528);
  uint64_t v9 = *(void *)(v0 + 520);
  uint64_t v11 = *(void *)(v0 + 512);
  uint64_t v12 = *(void *)(v0 + 504);
  uint64_t v13 = *(void *)(v0 + 496);
  uint64_t v14 = *(void *)(v0 + 488);
  uint64_t v15 = *(void *)(v0 + 480);
  uint64_t v16 = *(void *)(v0 + 472);
  swift_task_dealloc(*(void *)(v0 + 640));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10024F67C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 272) = a7;
  *(void *)(v9 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a8;
  *(void *)(v9 + 256) = a5;
  *(void *)(v9 + 264) = a6;
  *(void *)(v9 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a3;
  *(void *)(v9 + 248) = a4;
  *(void *)(v9 + 224) = a1;
  *(void *)(v9 + 2sub_100195658(v0 + 32) = a2;
  uint64_t v10 = *a5;
  *(void *)(v9 + 288) = v8;
  *(void *)(v9 + 296) = v10;
  *(_OWORD *)(v9 + 304) = *(_OWORD *)(a5 + 1);
  *(void *)(v9 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a5[3];
  *(_BYTE *)(v9 + 756) = *((_BYTE *)a5 + 32);
  __int128 v11 = *(_OWORD *)(a5 + 7);
  *(_OWORD *)(v9 + 328) = *(_OWORD *)(a5 + 5);
  *(_OWORD *)(v9 + 344) = v11;
  __int128 v12 = *(_OWORD *)(a5 + 11);
  *(_OWORD *)(v9 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(_OWORD *)(a5 + 9);
  *(_OWORD *)(v9 + 376) = v12;
  uint64_t v13 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0LL);
  *(void *)(v9 + 392) = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  *(void *)(v9 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v14;
  *(void *)(v9 + 408) = swift_task_alloc((*(void *)(v14 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_100183098(&qword_100656490);
  *(void *)(v9 + 4sub_100195658(v0 + 16) = swift_task_alloc((*(void *)(*(void *)(v15 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_100183098(&qword_1006475C8);
  *(void *)(v9 + 424) = swift_task_alloc((*(void *)(*(void *)(v16 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_100183098(&qword_100649F58);
  *(void *)(v9 + 4sub_100195658(v0 + 32) = swift_task_alloc((*(void *)(*(void *)(v17 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_100183098(&qword_100649F70);
  *(void *)(v9 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = swift_task_alloc((*(void *)(*(void *)(v18 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for SFAirDropSend.Request(0LL);
  *(void *)(v9 + 448) = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  *(void *)(v9 + 456) = v20;
  *(void *)(v9 + 464) = swift_task_alloc((*(void *)(v20 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for SFAirDropSend.Transfer.State(0LL);
  *(void *)(v9 + 472) = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  *(void *)(v9 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v22;
  *(void *)(v9 + 488) = swift_task_alloc((*(void *)(v22 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_100183098(&qword_1006457E8);
  *(void *)(v9 + 496) = swift_task_alloc((*(void *)(*(void *)(v23 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_100183098(&qword_100649F78);
  *(void *)(v9 + 504) = swift_task_alloc((*(void *)(*(void *)(v24 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for Date(0LL);
  *(void *)(v9 + 512) = v25;
  uint64_t v26 = *(void *)(v25 - 8);
  *(void *)(v9 + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v26;
  *(void *)(v9 + 528) = swift_task_alloc((*(void *)(v26 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  *(void *)(v9 + 536) = swift_task_alloc((*(void *)(*(void *)(v27 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  *(void *)(v9 + 544) = v28;
  uint64_t v29 = *(void *)(v28 - 8);
  *(void *)(v9 + 552) = v29;
  unint64_t v30 = (*(void *)(v29 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v9 + 56_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = swift_task_alloc(v30);
  *(void *)(v9 + 568) = swift_task_alloc(v30);
  uint64_t v31 = type metadata accessor for SFAirDropSend.Transfer.Metrics(0LL);
  *(void *)(v9 + 576) = v31;
  uint64_t v32 = *(void *)(v31 - 8);
  *(void *)(v9 + 584) = v32;
  *(void *)(v9 + 592) = swift_task_alloc((*(void *)(v32 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = type metadata accessor for SFAirDrop.TransferType(0LL);
  *(void *)(v9 + 60_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v33;
  uint64_t v34 = *(void *)(v33 - 8);
  *(void *)(v9 + 608) = v34;
  *(void *)(v9 + 6sub_100195658(v0 + 16) = swift_task_alloc((*(void *)(v34 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v35 = (*(void *)(*(void *)(sub_100183098(&qword_100647608) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v9 + 624) = swift_task_alloc(v35);
  *(void *)(v9 + 6sub_100195658(v0 + 32) = swift_task_alloc(v35);
  uint64_t v36 = _s14descr1005DF7D1C10AskRequestVMa(0LL);
  *(void *)(v9 + 64_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v36;
  unint64_t v37 = (*(void *)(*(void *)(v36 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v9 + 648) = swift_task_alloc(v37);
  *(void *)(v9 + 656) = swift_task_alloc(v37);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v38 = static AirDropActor.shared;
  *(void *)(v9 + 664) = static AirDropActor.shared;
  return swift_task_switch(sub_10024F9B8, v38, 0LL);
}

uint64_t sub_10024F9B8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 272) + 16LL);
  sub_1001A4B84(*(void *)(v0 + 232), *(void *)(v0 + 656), _s14descr1005DF7D1C10AskRequestVMa);
  uint64_t v2 = *(void *)(v0 + 656);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 648);
    uint64_t v4 = *(void *)(v0 + 232);
    sub_1001A4BC8(v2, _s14descr1005DF7D1C10AskRequestVMa);
    sub_1001A4B84(v4, v3, _s14descr1005DF7D1C10AskRequestVMa);
LABEL_3:
    sub_1001A4BC8(*(void *)(v0 + 648), _s14descr1005DF7D1C10AskRequestVMa);
LABEL_4:
    uint64_t v5 = *(void *)(v0 + 616);
    uint64_t v6 = *(void *)(v0 + 608);
    uint64_t v7 = *(void *)(v0 + 600);
    uint64_t v8 = *(void *)(v0 + 288);
    uint64_t v9 = *(const char **)(v0 + 272);
    uint64_t v10 = *(const char **)(v8 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_urls);
    *(void *)(v8 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_urls) = v9;
    *(void *)&double v11 = swift_bridgeObjectRelease(v10).n128_u64[0];
    *(void *)(v0 + 672) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
    uint64_t v12 = swift_bridgeObjectRetain(v9, v11);
    uint64_t v13 = SFAirDropSend.Request.type.getter(v12);
    SFAirDrop.TransferType.isOnlyExchange.getter(v13);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    *(void *)(v0 + 68_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v14;
    v14(v5, v7);
    uint64_t v15 = (void *)swift_task_alloc(dword_100649FF4);
    *(void *)(v0 + 688) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_10024FDE8;
    return sub_1002563FC(*(void *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 280));
  }

  uint64_t v17 = *(void *)(v0 + 640);
  uint64_t v18 = *(void *)(v0 + 632);
  uint64_t v19 = *(void *)(v0 + 608);
  uint64_t v20 = *(void *)(v0 + 600);
  sub_1001915A4(v2 + *(int *)(v17 + 20), v18, &qword_100647608);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  uint64_t v22 = v21(v18, 1LL, v20);
  uint64_t v23 = *(void *)(v0 + 656);
  uint64_t v24 = *(void *)(v0 + 648);
  uint64_t v25 = *(void *)(v0 + 632);
  if ((_DWORD)v22 == 1)
  {
    uint64_t v26 = *(void *)(v0 + 232);
    sub_1001A4BC8(*(void *)(v0 + 656), _s14descr1005DF7D1C10AskRequestVMa);
    sub_100187100(v25, &qword_100647608);
    sub_1001A4B84(v26, v24, _s14descr1005DF7D1C10AskRequestVMa);
  }

  else
  {
    uint64_t v27 = *(void *)(v0 + 608);
    uint64_t v28 = *(void *)(v0 + 600);
    uint64_t v29 = *(void *)(v0 + 232);
    char v30 = SFAirDrop.TransferType.isOnlyExchange.getter(v22);
    sub_1001A4BC8(v23, _s14descr1005DF7D1C10AskRequestVMa);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v28);
    sub_1001A4B84(v29, v24, _s14descr1005DF7D1C10AskRequestVMa);
    if ((v30 & 1) != 0) {
      goto LABEL_3;
    }
  }

  uint64_t v31 = *(void *)(v0 + 624);
  uint64_t v32 = *(void *)(v0 + 600);
  sub_1001915A4(*(void *)(v0 + 648) + *(int *)(v17 + 20), v31, &qword_100647608);
  uint64_t v33 = v21(v31, 1LL, v32);
  uint64_t v34 = *(void *)(v0 + 648);
  uint64_t v35 = *(void *)(v0 + 624);
  if ((_DWORD)v33 == 1)
  {
    sub_1001A4BC8(*(void *)(v0 + 648), _s14descr1005DF7D1C10AskRequestVMa);
    sub_100187100(v35, &qword_100647608);
  }

  else
  {
    uint64_t v36 = *(void *)(v0 + 608);
    uint64_t v37 = *(void *)(v0 + 600);
    char v38 = SFAirDrop.TransferType.isCustom.getter(v33);
    sub_1001A4BC8(v34, _s14descr1005DF7D1C10AskRequestVMa);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    if ((v38 & 1) != 0) {
      goto LABEL_4;
    }
  }

  uint64_t v39 = type metadata accessor for SFAirDropSend.Failure(0LL);
  uint64_t v40 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  swift_allocError(v39, v40, 0LL, 0LL);
  uint64_t v42 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v39 - 8) + 104LL))( v41,  enum case for SFAirDropSend.Failure.badRequest(_:),  v39);
  swift_willThrow(v42);
  uint64_t v43 = *(void *)(v0 + 648);
  uint64_t v44 = *(void *)(v0 + 632);
  uint64_t v45 = *(void *)(v0 + 624);
  uint64_t v46 = *(void *)(v0 + 616);
  uint64_t v47 = *(void *)(v0 + 592);
  uint64_t v48 = *(void *)(v0 + 568);
  uint64_t v49 = *(void *)(v0 + 560);
  uint64_t v50 = *(void *)(v0 + 536);
  uint64_t v51 = *(void *)(v0 + 528);
  uint64_t v52 = *(void *)(v0 + 504);
  uint64_t v53 = *(void *)(v0 + 496);
  uint64_t v54 = *(void *)(v0 + 488);
  uint64_t v55 = *(void *)(v0 + 464);
  uint64_t v56 = *(void *)(v0 + 440);
  uint64_t v57 = *(void *)(v0 + 432);
  uint64_t v58 = *(void *)(v0 + 424);
  uint64_t v59 = *(void *)(v0 + 416);
  uint64_t v60 = *(void *)(v0 + 408);
  swift_task_dealloc(*(void *)(v0 + 656));
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10024FDE8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 688);
  *(void *)(*v1 + 696) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_100250728;
  }
  else {
    uint64_t v4 = sub_10024FE4C;
  }
  return swift_task_switch(v4, *(void *)(v2 + 664), 0LL);
}

uint64_t sub_10024FE4C(uint64_t a1)
{
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v1[85];
  uint64_t v3 = v1[77];
  uint64_t v4 = v1[75];
  uint64_t v5 = v1[32];
  uint64_t v6 = sub_100218B40(a1);
  uint64_t v7 = SFAirDropSend.Request.type.getter(v6);
  SFAirDrop.TransferType.isOnlyExchange.getter(v7);
  v2(v3, v4);
  LOBYTE(v3) = *(_BYTE *)(v5 + 32);
  uint64_t v8 = (uint64_t **)swift_task_alloc(dword_100649FFC);
  v1[88] = (uint64_t)v8;
  *uint64_t v8 = v1;
  v8[1] = (uint64_t *)sub_10024FEF8;
  return sub_100257944(v1[29], v1[30], v1[33], v3);
}

uint64_t sub_10024FEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  uint64_t v7 = *(void *)(*(void *)v3 + 704LL);
  *(void *)(*(void *)v3 + 712LL) = v2;
  swift_task_dealloc(v7);
  uint64_t v8 = v6[83];
  if (v2)
  {
    uint64_t v9 = sub_100250870;
  }

  else
  {
    v6[90] = a2;
    v6[91] = a1;
    uint64_t v9 = sub_10024FF74;
  }

  return swift_task_switch(v9, v8, 0LL);
}

uint64_t sub_10024FF74()
{
  uint64_t v31 = *(void *)(v0 + 720);
  uint64_t v32 = *(void *)(v0 + 728);
  uint64_t v28 = *(void *)(v0 + 584);
  uint64_t v1 = *(void *)(v0 + 568);
  uint64_t v2 = *(void *)(v0 + 560);
  uint64_t v3 = *(void *)(v0 + 552);
  uint64_t v4 = *(void *)(v0 + 544);
  uint64_t v5 = *(void *)(v0 + 536);
  uint64_t v24 = *(void *)(v0 + 520);
  uint64_t v6 = *(void *)(v0 + 504);
  uint64_t v25 = *(void *)(v0 + 512);
  uint64_t v7 = *(void *)(v0 + 488);
  uint64_t v22 = *(void *)(v0 + 592);
  uint64_t v23 = *(void *)(v0 + 496);
  uint64_t v26 = *(void *)(v0 + 480);
  uint64_t v29 = *(void *)(v0 + 472);
  uint64_t v30 = *(void *)(v0 + 576);
  uint64_t v19 = *(void *)(v0 + 528);
  uint64_t v20 = *(void *)(v0 + 400);
  uint64_t v21 = *(void *)(v0 + 392);
  uint64_t v8 = *(void *)(v0 + 288)
     + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  uint64_t v27 = *(void *)(v0 + 224);
  __n128 v9 = swift_beginAccess(v8, v0 + 120, 0LL, 0LL);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16);
  uint64_t v11 = v10(v1, v8, v4, v9);
  SFAirDropSend.Transfer.id.getter(v11);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v12(v1, v4);
  uint64_t v13 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v2, v8, v4);
  SFAirDropSend.Transfer.startDate.getter(v13);
  v12(v2, v4);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)(v5, v19);
  *(_DWORD *)(v0 + 752) = enum case for SFAirDropSend.Transfer.Metrics.TransferResult.success(_:);
  uint64_t v14 = *(void (**)(uint64_t))(v20 + 104);
  *(void *)(v0 + 736) = v14;
  v14(v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v6, 0LL, 1LL, v21);
  uint64_t v15 = SFAirDropSend.Transfer.Metrics.result.setter(v6);
  static Date.now.getter(v15);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v23, 0LL, 1LL, v25);
  SFAirDropSend.Transfer.Metrics.endDate.setter(v23);
  uint64_t v16 = (void *)(v7 + *(int *)(sub_100183098(&qword_100648580) + 48));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v7, v22, v30);
  *uint64_t v16 = v32;
  v16[1] = v31;
  (*(void (**)(uint64_t, void, uint64_t))(v26 + 104))( v7,  enum case for SFAirDropSend.Transfer.State.completedSuccessfully(_:),  v29);
  sub_100217DD8(v7, v27);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v7, v29);
  uint64_t v17 = (void *)swift_task_alloc(dword_100648544);
  *(void *)(v0 + 744) = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_1002501DC;
  return sub_100217040();
}

uint64_t sub_1002501DC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 664LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 744LL));
  return swift_task_switch(sub_100250234, v1, 0LL);
}

uint64_t sub_100250234()
{
  uint64_t v1 = *(void *)(v0 + 288);
  (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 456) + 16LL))( *(void *)(v0 + 464),  v1 + *(void *)(v0 + 672),  *(void *)(v0 + 448));
  uint64_t v2 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection);
  uint64_t v5 = *(void *)(v0 + 432);
  uint64_t v4 = *(void *)(v0 + 440);
  if (v3)
  {
    uint64_t v6 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_telemetry;
    swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_telemetry, v0 + 144, 0LL, 0LL);
    sub_1001A4B84(v6, v4, type metadata accessor for SDAirDropSendConnectionTelemetry);
    uint64_t v7 = type metadata accessor for SDAirDropSendConnectionTelemetry(0LL);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(v4, 0LL, 1LL, v7);
    sub_1001A4B84( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint,  v5,  type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56LL))(v5, 0LL, 1LL, v8);
  }

  else
  {
    uint64_t v9 = type metadata accessor for SDAirDropSendConnectionTelemetry(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v4, 1LL, 1LL, v9);
    uint64_t v10 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v5, 1LL, 1LL, v10);
  }

  uint64_t v11 = *(void *)(*(void *)(v0 + 288)
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
  uint64_t v12 = swift_retain(v11);
  CurrentValueSubject.value.getter(v12);
  swift_release(v11);
  uint64_t v62 = *(const char **)(v0 + 216);
  uint64_t v13 = *(void *)(v1 + v2);
  uint64_t v14 = *(void *)(v0 + 424);
  if (v13)
  {
    uint64_t v15 = *(void *)(v0 + 416);
    uint64_t v16 = v13 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadRequest;
    swift_beginAccess( v13 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadRequest,  v0 + 168,  0LL,  0LL);
    sub_1001915A4(v16, v14, &qword_1006475C8);
    uint64_t v17 = v13 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_lastActiveInterfaceType;
    swift_beginAccess( v13 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_lastActiveInterfaceType,  v0 + 192,  0LL,  0LL);
    uint64_t v18 = type metadata accessor for SFNWInterfaceType(0LL);
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v15, v17, v18);
    uint64_t v20 = 0LL;
  }

  else
  {
    uint64_t v21 = _s14descr1005D9BD1C13UploadRequestVMa(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v14, 1LL, 1LL, v21);
    uint64_t v22 = type metadata accessor for SFNWInterfaceType(0LL);
    uint64_t v20 = 1LL;
    uint64_t v18 = v22;
    uint64_t v19 = *(void *)(v22 - 8);
  }

  uint64_t v44 = *(void (**)(uint64_t, void, uint64_t))(v0 + 736);
  unsigned int v43 = *(_DWORD *)(v0 + 752);
  uint64_t v50 = *(void *)(v0 + 656);
  uint64_t v51 = *(void *)(v0 + 648);
  uint64_t v52 = *(void *)(v0 + 632);
  uint64_t v53 = *(void *)(v0 + 624);
  uint64_t v54 = *(void *)(v0 + 616);
  uint64_t v47 = *(void *)(v0 + 584);
  uint64_t v48 = *(void *)(v0 + 576);
  uint64_t v49 = *(void *)(v0 + 592);
  uint64_t v55 = *(void *)(v0 + 568);
  uint64_t v56 = *(void *)(v0 + 560);
  uint64_t v57 = *(void *)(v0 + 536);
  uint64_t v58 = *(void *)(v0 + 528);
  uint64_t v59 = *(void *)(v0 + 504);
  uint64_t v60 = *(void *)(v0 + 496);
  uint64_t v61 = *(void *)(v0 + 488);
  uint64_t v45 = *(void *)(v0 + 456);
  uint64_t v46 = *(void *)(v0 + 448);
  uint64_t v38 = *(void *)(v0 + 440);
  uint64_t v39 = *(void *)(v0 + 432);
  uint64_t v40 = *(void *)(v0 + 464);
  uint64_t v23 = *(void *)(v0 + 416);
  uint64_t v24 = *(void *)(v0 + 408);
  uint64_t v41 = *(void *)(v0 + 424);
  uint64_t v42 = *(void *)(v0 + 400);
  uint64_t v26 = *(void *)(v0 + 384);
  uint64_t v25 = *(void *)(v0 + 392);
  uint64_t v27 = *(void *)(v0 + 376);
  __int128 v36 = *(_OWORD *)(v0 + 344);
  __int128 v37 = *(_OWORD *)(v0 + 360);
  __int128 v34 = *(_OWORD *)(v0 + 296);
  __int128 v35 = *(_OWORD *)(v0 + 328);
  uint64_t v28 = *(unsigned __int8 *)(v0 + 756);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v30 = *(void *)(v0 + 312);
  uint64_t v31 = *(void *)(v0 + 320);
  v29(v23, v20, 1LL, v18);
  *(_OWORD *)(v0 + sub_100195658(v0 + 16) = v34;
  *(void *)(v0 + sub_100195658(v0 + 32) = v30;
  *(void *)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v31;
  *(void *)(v0 + 48) = v28;
  *(_OWORD *)(v0 + 56) = v35;
  *(_OWORD *)(v0 + 72) = v36;
  *(_OWORD *)(v0 + 88) = v37;
  *(void *)(v0 + 104) = v27;
  *(void *)(v0 + 112) = v26;
  v44(v24, v43, v25);
  sub_1002759E0(v40, v38, v39, (uint64_t)v62, v0 + 16, v41, v23, v24);
  __n128 v32 = swift_bridgeObjectRelease(v62);
  (*(void (**)(uint64_t, uint64_t, __n128))(v42 + 8))(v24, v25, v32);
  sub_100187100(v23, &qword_100656490);
  sub_100187100(v41, &qword_1006475C8);
  sub_100187100(v39, &qword_100649F58);
  sub_100187100(v38, &qword_100649F70);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v40, v46);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49, v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v49);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v40);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100250728()
{
  uint64_t v1 = *(void *)(v0 + 648);
  uint64_t v2 = *(void *)(v0 + 632);
  uint64_t v3 = *(void *)(v0 + 624);
  uint64_t v4 = *(void *)(v0 + 616);
  uint64_t v5 = *(void *)(v0 + 592);
  uint64_t v6 = *(void *)(v0 + 568);
  uint64_t v7 = *(void *)(v0 + 560);
  uint64_t v8 = *(void *)(v0 + 536);
  uint64_t v9 = *(void *)(v0 + 528);
  uint64_t v11 = *(void *)(v0 + 504);
  uint64_t v12 = *(void *)(v0 + 496);
  uint64_t v13 = *(void *)(v0 + 488);
  uint64_t v14 = *(void *)(v0 + 464);
  uint64_t v15 = *(void *)(v0 + 440);
  uint64_t v16 = *(void *)(v0 + 432);
  uint64_t v17 = *(void *)(v0 + 424);
  uint64_t v18 = *(void *)(v0 + 416);
  uint64_t v19 = *(void *)(v0 + 408);
  swift_task_dealloc(*(void *)(v0 + 656));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100250870()
{
  uint64_t v1 = *(void *)(v0 + 648);
  uint64_t v2 = *(void *)(v0 + 632);
  uint64_t v3 = *(void *)(v0 + 624);
  uint64_t v4 = *(void *)(v0 + 616);
  uint64_t v5 = *(void *)(v0 + 592);
  uint64_t v6 = *(void *)(v0 + 568);
  uint64_t v7 = *(void *)(v0 + 560);
  uint64_t v8 = *(void *)(v0 + 536);
  uint64_t v9 = *(void *)(v0 + 528);
  uint64_t v11 = *(void *)(v0 + 504);
  uint64_t v12 = *(void *)(v0 + 496);
  uint64_t v13 = *(void *)(v0 + 488);
  uint64_t v14 = *(void *)(v0 + 464);
  uint64_t v15 = *(void *)(v0 + 440);
  uint64_t v16 = *(void *)(v0 + 432);
  uint64_t v17 = *(void *)(v0 + 424);
  uint64_t v18 = *(void *)(v0 + 416);
  uint64_t v19 = *(void *)(v0 + 408);
  swift_task_dealloc(*(void *)(v0 + 656));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002509B8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  void v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[3] = a1;
  uint64_t v10 = sub_100183098(&qword_100649F80);
  v8[10] = swift_task_alloc((*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  v8[2] = a2;
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to Sequence<>.coordinateRead(withSaveToTempDir:options:)[1]);
  v8[11] = v11;
  uint64_t v12 = sub_100183098((uint64_t *)&unk_1006464E0);
  uint64_t v13 = sub_1001CD538(&qword_100649FC8, (uint64_t *)&unk_1006464E0, (uint64_t)&protocol conformance descriptor for [A]);
  void *v11 = v8;
  v11[1] = sub_100250A88;
  return Sequence<>.coordinateRead(withSaveToTempDir:options:)(0LL, 8LL, v12, v13);
}

uint64_t sub_100250A88(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 88);
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    uint64_t v6 = sub_100250C20;
  }

  else
  {
    *(void *)(v4 + 104) = a1;
    uint64_t v6 = sub_100250AFC;
  }

  return swift_task_switch(v6, 0LL, 0LL);
}

uint64_t sub_100250AFC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = sub_100183098(&qword_10064A100);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(v1, 1LL, 1LL, v2);
  uint64_t v3 = (void *)swift_task_alloc(dword_100649FDC);
  *(void *)(v0 + 112) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100250B84;
  return sub_10024F67C( *(void *)(v0 + 24),  *(void *)(v0 + 40),  *(void *)(v0 + 48),  *(void *)(v0 + 56),  *(uint64_t **)(v0 + 64),  *(void *)(v0 + 72),  *(void *)(v0 + 104),  *(void *)(v0 + 80));
}

uint64_t sub_100250B84()
{
  uint64_t v3 = *(const char **)(*v1 + 104);
  uint64_t v2 = *(void *)(*v1 + 112);
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *v1;
  *(void *)(v5 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v0;
  swift_task_dealloc(v2);
  sub_100187100(v4, &qword_100649F80);
  swift_bridgeObjectRelease(v3);
  if (v0) {
    return swift_task_switch(sub_100250C54, 0LL, 0LL);
  }
  swift_task_dealloc(*(void *)(v5 + 80));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_100250C20()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100250C54()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100250C88(char a1)
{
  *(void *)(v2 + 96) = v1;
  *(_BYTE *)(v2 + 104) = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100250CF4, static AirDropActor.shared, 0LL);
}

void sub_100250CF4()
{
  *(void *)&double v2 = swift_beginAccess(v1, v0 + 56, 1LL, 0LL).n128_u64[0];
  uint64_t v3 = *v1;
  uint64_t v28 = (const char **)v1;
  if ((*v1 & 0xC000000000000001LL) != 0)
  {
    if (v3 < 0) {
      uint64_t v4 = *v1;
    }
    else {
      uint64_t v4 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain((const char *)v3, v2);
    uint64_t v5 = __CocoaSet.makeIterator()(v4);
    uint64_t v6 = type metadata accessor for SDAirDropSendConnection(0LL);
    uint64_t v7 = sub_100183F14( &qword_10064A138,  type metadata accessor for SDAirDropSendConnection,  (uint64_t)&protocol conformance descriptor for NSObject);
    uint64_t v8 = Set.Iterator.init(_cocoa:)((void *)(v0 + 16), v5, v6, v7);
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v29 = *(void *)(v0 + 24);
    uint64_t v9 = *(void *)(v0 + 32);
    uint64_t v10 = *(void *)(v0 + 40);
    unint64_t v11 = *(void *)(v0 + 48);
  }

  else
  {
    uint64_t v12 = -1LL << *(_BYTE *)(v3 + 32);
    uint64_t v29 = v3 + 56;
    uint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1LL << v13);
    }
    else {
      uint64_t v14 = -1LL;
    }
    unint64_t v11 = v14 & *(void *)(v3 + 56);
    swift_bridgeObjectRetain((const char *)v3, v2);
    uint64_t v10 = 0LL;
  }

  int64_t v15 = (unint64_t)(v9 + 64) >> 6;
  if (v3 < 0) {
    goto LABEL_13;
  }
  while (1)
  {
    if (v11)
    {
      uint64_t v16 = (v11 - 1) & v11;
      unint64_t v17 = __clz(__rbit64(v11)) | (v10 << 6);
      uint64_t v18 = v10;
      goto LABEL_30;
    }

    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1LL)) {
      break;
    }
    if (v23 >= v15) {
      goto LABEL_33;
    }
    unint64_t v24 = *(void *)(v29 + 8 * v23);
    uint64_t v18 = v10 + 1;
    if (!v24)
    {
      uint64_t v18 = v10 + 2;
      if (v10 + 2 >= v15) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v29 + 8 * v18);
      if (!v24)
      {
        uint64_t v18 = v10 + 3;
        if (v10 + 3 >= v15) {
          goto LABEL_33;
        }
        unint64_t v24 = *(void *)(v29 + 8 * v18);
        if (!v24)
        {
          uint64_t v18 = v10 + 4;
          if (v10 + 4 >= v15) {
            goto LABEL_33;
          }
          unint64_t v24 = *(void *)(v29 + 8 * v18);
          if (!v24)
          {
            uint64_t v25 = v10 + 5;
            while (v15 != v25)
            {
              unint64_t v24 = *(void *)(v29 + 8 * v25++);
              if (v24)
              {
                uint64_t v18 = v25 - 1;
                goto LABEL_29;
              }
            }

uint64_t sub_100250FD0@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v35 = a4;
  __int128 v36 = a5;
  uint64_t v37 = a6;
  v32._uint64_t countAndFlagsBits = a2;
  v32._object = a3;
  uint64_t v33 = sub_100183098(&qword_10064A100);
  uint64_t v31 = *(void *)(v33 - 8);
  uint64_t v7 = *(void *)(v31 + 64);
  __chkstk_darwin(v33);
  uint64_t v29 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  uint64_t v8 = *(void *)(v30 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v30);
  uint64_t v28 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for SFAirDrop.ButtonConfiguration(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v38 = 0x2D6C65636E6143LL;
  uint64_t v39 = 0xE700000000000000LL;
  String.append(_:)(v32);
  v32._uint64_t countAndFlagsBits = v39;
  v32._object = (void *)v38;
  *uint64_t v13 = 0x662E657261757173LL;
  v13[1] = 0xEB000000006C6C69LL;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))( v13,  enum case for SFAirDrop.ButtonConfiguration.symbol(_:),  v10);
  uint64_t v14 = swift_allocObject(&unk_1005D6990, 24LL, 7LL);
  swift_unknownObjectWeakInit(v14 + 16, v34);
  uint64_t v15 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))( (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v30);
  uint64_t v16 = v31;
  uint64_t v17 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))( (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v35,  v33);
  uint64_t v18 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = (v18 + 24) & ~v18;
  uint64_t v20 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v21 = (v9 + v20 + v19) & ~v20;
  unint64_t v22 = (v7 + v21 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v23 = swift_allocObject(&unk_1005D69B8, v22 + 8, v18 | v20 | 7);
  *(void *)(v23 + sub_100195658(v0 + 16) = v14;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v23 + v19, v28, v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v23 + v21, v29, v17);
  unint64_t v24 = v36;
  *(void *)(v23 + v22) = v36;
  id v25 = v24;
  return SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)( v32._object,  v32._countAndFlagsBits,  v13,  0LL,  sub_10025FC34,  v23);
}

double sub_100251238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a3;
  uint64_t v50 = a4;
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v48 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a1 += 16LL;
  swift_beginAccess(a1, v53, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a1, v17);
  if (Strong)
  {
    uint64_t v19 = (void *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))( v16,  Strong + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log,  v13);

    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
    uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.default.getter();
    int v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v24 = swift_slowAlloc(12LL, -1LL);
      int v46 = v23;
      id v25 = (uint8_t *)v24;
      uint64_t v26 = swift_slowAlloc(32LL, -1LL);
      uint64_t v47 = v26;
      uint64_t v52 = v26;
      unsigned int v43 = v25;
      os_log_t v44 = v21;
      *(_DWORD *)id v25 = 136315138;
      uint64_t v27 = v25 + 12;
      uint64_t v42 = v25 + 4;
      SFAirDropSend.Transfer.id.getter(v26);
      uint64_t v28 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter(v6, v28);
      uint64_t v45 = v13;
      uint64_t v31 = v30;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v6);
      uint64_t v51 = sub_10018CDB4(v29, (unint64_t)v31, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v42, v27);
      __n128 v32 = swift_bridgeObjectRelease(v31);
      (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v32);
      uint64_t v34 = v43;
      os_log_t v33 = v44;
      _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v46, "Transfer %s was cancelled.", v43, 0xCu);
      uint64_t v35 = v47;
      swift_arrayDestroy(v47, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1LL, -1LL);
      swift_slowDealloc(v34, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v45);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
  }

  uint64_t v36 = type metadata accessor for SFAirDropSend.Failure(0LL);
  uint64_t v37 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  uint64_t v38 = swift_allocError(v36, v37, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v36 - 8) + 104LL))( v39,  enum case for SFAirDropSend.Failure.cancelled(_:),  v36);
  uint64_t v40 = sub_100183098(&qword_10064A100);
  SFProgressTask.cancel(_:)(v38, v40);
  swift_errorRelease(v38);
  *(void *)&double result = sub_1001F3FA4(1).n128_u64[0];
  return result;
}

uint64_t sub_1002515C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[152] = v5;
  v6[151] = a5;
  v6[150] = a4;
  v6[149] = a3;
  v6[148] = a2;
  v6[147] = a1;
  uint64_t v7 = type metadata accessor for SFAirDropSend.Failure(0LL);
  v6[153] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[154] = v8;
  v6[155] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SFAirDrop.ContactRequest(0LL);
  v6[156] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[157] = v10;
  unint64_t v11 = (*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[158] = swift_task_alloc(v11);
  v6[159] = swift_task_alloc(v11);
  v6[160] = swift_task_alloc(v11);
  uint64_t v12 = type metadata accessor for SFAirDropSend.Transfer.State(0LL);
  v6[161] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v6[162] = v13;
  v6[163] = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  v6[164] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v6[165] = v15;
  v6[166] = swift_task_alloc((*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_100183098(&qword_10064A010);
  v6[167] = swift_task_alloc((*(void *)(*(void *)(v16 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = *(void *)(_s14descr1005DF7D1C10AskRequestVMa(0LL) - 8);
  v6[168] = v17;
  uint64_t v18 = *(void *)(v17 + 64);
  v6[169] = v18;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  v6[170] = swift_task_alloc(v19);
  v6[171] = swift_task_alloc(v19);
  uint64_t v20 = sub_100183098(&qword_10064A158);
  v6[172] = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  v6[173] = v21;
  v6[174] = swift_task_alloc((*(void *)(v21 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = _s12HelloRequestVMa(0LL);
  v6[175] = v22;
  v6[176] = swift_task_alloc((*(void *)(*(void *)(v22 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for SFAirDropSend.Request(0LL);
  v6[177] = v23;
  uint64_t v24 = *(void *)(v23 - 8);
  v6[178] = v24;
  unint64_t v25 = (*(void *)(v24 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[179] = swift_task_alloc(v25);
  v6[180] = swift_task_alloc(v25);
  uint64_t v26 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v6[181] = v26;
  uint64_t v27 = *(void *)(v26 - 8);
  v6[182] = v27;
  v6[183] = swift_task_alloc((*(void *)(v27 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = sub_100183098(&qword_100649F58);
  v6[184] = swift_task_alloc((*(void *)(*(void *)(v28 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v6[185] = v29;
  uint64_t v30 = *(void *)(v29 - 8);
  v6[186] = v30;
  unint64_t v31 = (*(void *)(v30 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[187] = swift_task_alloc(v31);
  v6[188] = swift_task_alloc(v31);
  uint64_t v32 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
  v6[189] = v32;
  uint64_t v33 = *(void *)(v32 - 8);
  v6[190] = v33;
  v6[191] = swift_task_alloc((*(void *)(v33 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = type metadata accessor for SFAirDrop.ContactInfo(0LL);
  v6[192] = v34;
  uint64_t v35 = *(void *)(v34 - 8);
  v6[193] = v35;
  v6[194] = swift_task_alloc((*(void *)(v35 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v36 = (*(void *)(*(void *)(sub_100183098(&qword_100649F50) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[195] = swift_task_alloc(v36);
  v6[196] = swift_task_alloc(v36);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v37 = static AirDropActor.shared;
  v6[197] = static AirDropActor.shared;
  return swift_task_switch(sub_1002518EC, v37, 0LL);
}

uint64_t sub_1002518EC()
{
  uint64_t v1 = *(void *)(v0 + 1568);
  uint64_t v2 = *(void *)(v0 + 1560);
  uint64_t v3 = *(void *)(v0 + 1544);
  uint64_t v4 = *(void *)(v0 + 1536);
  sub_10024AA20(v1);
  sub_1001915A4(v1, v2, &qword_100649F50);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1LL, v4);
  uint64_t v6 = *(void *)(v0 + 1560);
  if (v5 == 1)
  {
    uint64_t v7 = *(void **)(v0 + 1528);
    uint64_t v8 = *(void *)(v0 + 1520);
    uint64_t v9 = *(void *)(v0 + 1512);
    *uint64_t v7 = 0xD000000000000012LL;
    v7[1] = 0x8000000100507360LL;
    (*(void (**)(void *, void, uint64_t))(v8 + 104))( v7,  enum case for SFAirDrop.ContactInfo.Handle.email(_:),  v9);
    SFAirDrop.ContactInfo.init(givenName:fullName:handle:vcard:)( 0LL,  0LL,  0x65502064656B6146LL,  0xEC0000006E6F7372LL,  v7,  0LL,  0xC000000000000000LL);
    sub_100187100(v6, &qword_100649F50);
  }

  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 1544) + 32LL))( *(void *)(v0 + 1552),  *(void *)(v0 + 1560),  *(void *)(v0 + 1536));
  }

  uint64_t v10 = *(void *)(v0 + 1488);
  uint64_t v11 = *(void *)(v0 + 1480);
  uint64_t v12 = *(void *)(v0 + 1472);
  uint64_t v13 = *(void *)(*(void *)(v0 + 1216)
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
  uint64_t v14 = swift_retain(v13);
  CurrentValueSubject.value.getter(v14);
  swift_release(v13);
  uint64_t v15 = *(const char **)(v0 + 1048);
  sub_10028CA8C((uint64_t)v15, v12);
  __n128 v16 = swift_bridgeObjectRelease(v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(v12, 1LL, v11, v16) == 1)
  {
    uint64_t v17 = *(void *)(v0 + 1568);
    uint64_t v18 = *(void *)(v0 + 1552);
    uint64_t v19 = *(void *)(v0 + 1544);
    uint64_t v20 = *(void *)(v0 + 1536);
    uint64_t v21 = *(void *)(v0 + 1232);
    uint64_t v22 = *(void *)(v0 + 1224);
    sub_100187100(*(void *)(v0 + 1472), &qword_100649F58);
    uint64_t v23 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    uint64_t v76 = swift_allocError(v22, v23, 0LL, 0LL);
    uint64_t v25 = v24;
    UUID.init()(v76);
    uint64_t v26 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v21 + 104))( v25,  enum case for SFAirDropSend.Failure.missingEndpoint(_:),  v22);
    swift_willThrow(v26);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    sub_100187100(v17, &qword_100649F50);
    uint64_t v27 = *(void *)(v0 + 1560);
    uint64_t v28 = *(void *)(v0 + 1552);
    uint64_t v29 = *(void *)(v0 + 1528);
    uint64_t v30 = *(void *)(v0 + 1504);
    uint64_t v31 = *(void *)(v0 + 1496);
    uint64_t v32 = *(void *)(v0 + 1472);
    uint64_t v33 = *(void *)(v0 + 1464);
    uint64_t v34 = *(void *)(v0 + 1440);
    uint64_t v35 = *(void *)(v0 + 1432);
    uint64_t v64 = *(void *)(v0 + 1408);
    uint64_t v65 = *(void *)(v0 + 1392);
    uint64_t v66 = *(void *)(v0 + 1368);
    uint64_t v67 = *(void *)(v0 + 1360);
    uint64_t v68 = *(void *)(v0 + 1336);
    uint64_t v69 = *(void *)(v0 + 1328);
    uint64_t v70 = *(void *)(v0 + 1304);
    uint64_t v71 = *(void *)(v0 + 1280);
    uint64_t v72 = *(void *)(v0 + 1272);
    uint64_t v73 = *(void *)(v0 + 1264);
    uint64_t v75 = *(void *)(v0 + 1240);
    swift_task_dealloc(*(void *)(v0 + 1568));
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v75);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    uint64_t v37 = *(void **)(v0 + 1216);
    sub_1001A4B40( *(void *)(v0 + 1472),  *(void *)(v0 + 1504),  type metadata accessor for SDAirDropDiscoveredEndpoint);
    *(void *)(v0 + 1584) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
    uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v39 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = *(void *)(v0 + 1464);
      uint64_t v74 = *(void *)(v0 + 1456);
      uint64_t v41 = *(void *)(v0 + 1448);
      uint64_t v42 = *(void **)(v0 + 1216);
      unsigned int v43 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v77 = (const char *)swift_slowAlloc(32LL, -1LL);
      v78[0] = v77;
      *(_DWORD *)unsigned int v43 = 136315138;
      SFAirDropSend.Request.type.getter(v77);
      uint64_t v44 = sub_100183F14( (unint64_t *)&unk_100656460,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
      uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter(v41, v44);
      uint64_t v47 = v46;
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v40, v41);
      *(void *)(v0 + 1168) = sub_10018CDB4(v45, (unint64_t)v47, (uint64_t *)v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1168, v0 + 1176, v43 + 4, v43 + 12);
      swift_bridgeObjectRelease(v47);

      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Send StateMachine ASK START - Async {type: %s}", v43, 0xCu);
      swift_arrayDestroy(v77, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v77, -1LL, -1LL);
      swift_slowDealloc(v43, -1LL, -1LL);
    }

    else
    {
      uint64_t v48 = *(void **)(v0 + 1216);
    }

    uint64_t v49 = *(void *)(v0 + 1496);
    uint64_t v50 = *(void *)(v0 + 1440);
    uint64_t v51 = *(void *)(v0 + 1424);
    uint64_t v52 = *(void *)(v0 + 1416);
    uint64_t v53 = *(void *)(v0 + 1216);
    sub_1001A4B84(*(void *)(v0 + 1504), v49, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v54 = *(void **)(v53 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_deviceStatus);
    *(void *)(v0 + 1592) = v54;
    uint64_t v55 = *(void *)(v53 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_pseudonymService);
    uint64_t v56 = *(void **)(v53 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_queue);
    uint64_t v57 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
    *(void *)(v0 + 160_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
    uint64_t v58 = v53 + v57;
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16);
    *(void *)(v0 + 1608) = v59;
    v59(v50, v58, v52);
    objc_allocWithZone((Class)type metadata accessor for SDAirDropSendConnection(0LL));
    id v60 = v54;
    swift_retain(v55);
    id v61 = v56;
    id v62 = sub_1001FAF08(v49, v60, v55, v61, v50);
    *(void *)(v0 + 16sub_100195658(v0 + 16) = v62;

    swift_release(v55);
    swift_beginAccess( v53 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections,  v0 + 984,  33LL,  0LL);
    sub_1003B667C(v78, v62);
    swift_endAccess(v0 + 984);

    uint64_t v63 = static AirDropActor.shared;
    *(void *)(v0 + 1624) = static AirDropActor.shared;
    return swift_task_switch(sub_100251F7C, v63, 0LL);
  }

uint64_t sub_100251F7C()
{
  unint64_t v1 = sub_10020F350();
  if ((v1 & 1) != 0
    && (type metadata accessor for SFAirDropUserDefaults(0LL, v2),
        uint64_t v3 = (void *)static SFAirDropUserDefaults.shared.getter(),
        char v4 = SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter(),
        v3,
        (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(v0 + 1464);
    uint64_t v6 = *(void *)(v0 + 1456);
    uint64_t v7 = *(void *)(v0 + 1448);
    uint64_t v8 = *(void *)(v0 + 1408);
    uint64_t v9 = *(void *)(v0 + 1400);
    uint64_t v10 = *(void *)(v0 + 1392);
    uint64_t v11 = SFAirDropSend.Request.type.getter(v1);
    char v12 = SFAirDrop.TransferType.isPeerPayment.getter(v11);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    SFAirDropSend.Request.id.getter(v13);
    uint64_t v14 = *(int *)(v9 + 24);
    *(_DWORD *)(v8 + *(int *)(v9 + 20)) = 3;
    *(_BYTE *)(v8 + v14) = v12 & 1;
    sub_1001EE190(v8, v10);
    uint64_t v15 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(void *)(v0 + 16sub_100195658(v0 + 32) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_100252160;
    return SFProgressTask.finalValue.getter(v0 + 1856, *(void *)(v0 + 1376));
  }

  else
  {
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v1);
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Receiver does not support HELLO, skipping", v19, 2u);
      swift_slowDealloc(v19, -1LL, -1LL);
    }

    *(_DWORD *)(v0 + 164_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0;
    *(_BYTE *)(v0 + 1644) = 3;
    return swift_task_switch(sub_1002522A8, *(void *)(v0 + 1576), 0LL);
  }

uint64_t sub_100252160()
{
  uint64_t v2 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 1632));
  uint64_t v3 = *(void *)(v2 + 1624);
  if (v0)
  {
    swift_errorRelease(v0);
    char v4 = sub_100252240;
  }

  else
  {
    char v4 = sub_1002521CC;
  }

  return swift_task_switch(v4, v3, 0LL);
}

uint64_t sub_1002521CC()
{
  int v1 = *(_DWORD *)(v0 + 1856);
  char v2 = *(_BYTE *)(v0 + 1860);
  uint64_t v3 = *(void *)(v0 + 1408);
  (*(void (**)(void, void))(*(void *)(v0 + 1384) + 8LL))( *(void *)(v0 + 1392),  *(void *)(v0 + 1376));
  sub_1001A4BC8(v3, _s12HelloRequestVMa);
  *(_BYTE *)(v0 + 1644) = v2;
  *(_DWORD *)(v0 + 164_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v1;
  return swift_task_switch(sub_1002522A8, *(void *)(v0 + 1576), 0LL);
}

uint64_t sub_100252240()
{
  uint64_t v1 = *(void *)(v0 + 1408);
  (*(void (**)(void, void))(*(void *)(v0 + 1384) + 8LL))( *(void *)(v0 + 1392),  *(void *)(v0 + 1376));
  sub_1001A4BC8(v1, _s12HelloRequestVMa);
  *(_BYTE *)(v0 + 1644) = 3;
  *(_DWORD *)(v0 + 164_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0;
  return swift_task_switch(sub_1002522A8, *(void *)(v0 + 1576), 0LL);
}

uint64_t sub_1002522A8()
{
  uint64_t v1 = *(void **)(v0 + 1592);
  (*(void (**)(void, void, void))(v0 + 1608))( *(void *)(v0 + 1432),  *(void *)(v0 + 1216) + *(void *)(v0 + 1600),  *(void *)(v0 + 1416));
  sub_10021245C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = dword_100653174;
  id v7 = v1;
  uint64_t v8 = (void *)swift_task_alloc(v6);
  *(void *)(v0 + 1648) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100252360;
  return sub_1003DE730(*(void *)(v0 + 1368), *(void *)(v0 + 1432), v3, v5, *(void *)(v0 + 1592), 0LL, 0LL, 0LL);
}

uint64_t sub_100252360()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 1648);
  *(void *)(*v1 + 1656) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_100253290;
  }
  else {
    uint64_t v4 = sub_1002523C4;
  }
  return swift_task_switch(v4, *(void *)(v2 + 1576), 0LL);
}

uint64_t sub_1002523C4()
{
  uint64_t v1 = (void *)v0[202];
  uint64_t v2 = v0[170];
  uint64_t v3 = v0[169];
  uint64_t v4 = v0[168];
  sub_1001A4B84(v0[171], v2, _s14descr1005DF7D1C10AskRequestVMa);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 24) & ~v5;
  uint64_t v7 = swift_allocObject(&unk_1005D69E0, v6 + v3, v5 | 7);
  v0[208] = v7;
  *(void *)(v7 + sub_100195658(v0 + 16) = v1;
  sub_1001A4B40(v2, v7 + v6, _s14descr1005DF7D1C10AskRequestVMa);
  id v8 = v1;
  swift_retain(v7);
  uint64_t v9 = swift_asyncLet_begin(v0 + 2, 0LL, &_s14descr1005DF7D1C11AskResponseVN, &unk_10064A168, v7, v0 + 105);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    char v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)char v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Send StateMachine SHARE CONTACT PERMISSION START", v12, 2u);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  uint64_t v13 = v0[194];
  uint64_t v14 = v0[193];
  uint64_t v15 = v0[192];
  uint64_t v16 = v0[167];
  uint64_t v27 = v0[166];
  uint64_t v28 = v0[165];
  uint64_t v29 = v0[164];
  uint64_t v17 = v0[163];
  uint64_t v18 = v0[162];
  uint64_t v19 = v0[161];

  sub_10025BDB4(v13, 0, v16);
  uint64_t v20 = v17 + *(int *)(sub_100183098(&qword_10064A018) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v17, v13, v15);
  uint64_t v21 = sub_100183098(&qword_10064B750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16LL))(v20, v16, v21);
  uint64_t v22 = enum case for SFAirDropSend.Transfer.State.waitingForShareContactPermissionResponse(_:);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 104);
  v0[209] = v23;
  v23(v17, v22, v19);
  sub_100217DD8(v17, v27);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v0[210] = v24;
  v24(v17, v19);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v0[211] = v25;
  v25(v27, v29);
  return swift_task_switch(sub_100252614, 0LL, 0LL);
}

uint64_t sub_100252614()
{
  uint64_t v1 = v0[167];
  uint64_t v2 = swift_task_alloc(32LL);
  v0[212] = v2;
  *(void *)(v2 + sub_100195658(v0 + 16) = v1;
  uint64_t v3 = swift_task_alloc(32LL);
  v0[213] = v3;
  *(void *)(v3 + sub_100195658(v0 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[214] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002526BC;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)( v0[159],  &unk_10064A170,  v2,  sub_1002612EC,  v3,  0LL,  0LL,  v0[156]);
}

uint64_t sub_1002526BC()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 1712LL);
  *(void *)(*(void *)v1 + 1720LL) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_10025273C;
    uint64_t v5 = 0LL;
  }

  else
  {
    uint64_t v6 = v2[213];
    uint64_t v7 = v2[212];
    uint64_t v8 = v2[197];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    uint64_t v4 = sub_1002529BC;
    uint64_t v5 = v8;
  }

  return swift_task_switch(v4, v5, 0LL);
}

uint64_t sub_10025273C()
{
  uint64_t v1 = v0[212];
  uint64_t v2 = v0[197];
  swift_task_dealloc(v0[213]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100252788, v2, 0LL);
}

uint64_t sub_100252788()
{
  uint64_t v1 = v0[215];
  uint64_t v2 = v0[155];
  uint64_t v3 = v0[153];
  v0[137] = v1;
  swift_errorRetain(v1);
  uint64_t v4 = sub_100183098(&qword_100645710);
  if (swift_dynamicCast(v2, v0 + 137, v4, v3, 0LL))
  {
    uint64_t v5 = (*(uint64_t (**)(void, void))(v0[154] + 88LL))(v0[155], v0[153]);
    if ((_DWORD)v5 == enum case for SFAirDropSend.Failure.cancelled(_:))
    {
      uint64_t v6 = v5;
      uint64_t v7 = swift_errorRelease(v0[215]);
      uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
      os_log_type_t v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  v9,  "Send StateMachine SHARE CONTACT PERMISSION END - Cancelling exchange",  v10,  2u);
        swift_slowDealloc(v10, -1LL, -1LL);
      }

      os_log_type_t v11 = v0 + 82;
      uint64_t v12 = v0[167];
      uint64_t v13 = v0[154];
      uint64_t v14 = v0[153];

      uint64_t v15 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
      v0[231] = swift_allocError(v14, v15, 0LL, 0LL);
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 104))(v16, v6, v14);
      swift_willThrow(v17);
      sub_100187100(v12, &qword_10064A010);
      swift_errorRelease(v0[137]);
      uint64_t v18 = sub_100253440;
    }

    else
    {
      os_log_type_t v11 = v0 + 132;
      uint64_t v19 = v0[155];
      uint64_t v20 = v0[154];
      uint64_t v21 = v0[153];
      sub_100187100(v0[167], &qword_10064A010);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
      swift_errorRelease(v0[137]);
      uint64_t v18 = sub_100253628;
    }
  }

  else
  {
    os_log_type_t v11 = v0 + 126;
    sub_100187100(v0[167], &qword_10064A010);
    swift_errorRelease(v0[137]);
    uint64_t v18 = sub_100253810;
  }

  return swift_asyncLet_finish(v0 + 2, v0 + 105, v18, v11);
}

uint64_t sub_1002529BC()
{
  uint64_t v1 = v0[160];
  uint64_t v2 = v0[159];
  uint64_t v3 = v0[158];
  uint64_t v4 = v0[157];
  uint64_t v5 = v0[156];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v0[216] = v6;
  v6(v1, v2, v5);
  uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v7 = v38(v3, v1, v5);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = v0[158];
    uint64_t v37 = v0[157];
    uint64_t v11 = v0[156];
    uint64_t v12 = swift_slowAlloc(22LL, -1LL);
    uint64_t v13 = swift_slowAlloc(32LL, -1LL);
    uint64_t v39 = v13;
    *(_DWORD *)uint64_t v12 = 141558275;
    v0[144] = 1752392040LL;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 145, v12 + 4, v12 + 12);
    *(_WORD *)(v12 + 12) = 2081;
    uint64_t v14 = sub_100183F14( &qword_10064A038,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter(v11, v14);
    uint64_t v17 = (const char *)v16;
    v0[145] = sub_10018CDB4(v15, v16, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 145, v0 + 146, v12 + 14, v12 + 22);
    __n128 v18 = swift_bridgeObjectRelease(v17);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, __n128))(v37 + 8);
    v19(v10, v11, v18);
    _os_log_impl( (void *)&_mh_execute_header,  v8,  v9,  "Send StateMachine SHARE CONTACT PERMISSION END {contactRequest: %{private,mask.hash}s}",  (uint8_t *)v12,  0x16u);
    swift_arrayDestroy(v13, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {
    uint64_t v21 = v0[158];
    uint64_t v22 = v0[157];
    uint64_t v23 = v0[156];

    uint64_t v19 = *(void (**)(uint64_t, uint64_t, __n128))(v22 + 8);
    uint64_t v20 = ((uint64_t (*)(uint64_t, uint64_t))v19)(v21, v23);
  }

  v0[217] = v19;
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Send StateMachine EXCHANGING START", v26, 2u);
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  unint64_t v36 = (void (*)(uint64_t, uint64_t))v0[211];
  uint64_t v27 = (void (*)(uint64_t, uint64_t))v0[210];
  uint64_t v28 = (void (*)(uint64_t, void, uint64_t))v0[209];
  uint64_t v29 = v0[166];
  uint64_t v35 = v0[164];
  uint64_t v30 = v0[163];
  uint64_t v31 = v0[161];
  uint64_t v32 = v0[160];
  uint64_t v33 = v0[156];

  v38(v30, v32, v33);
  v28(v30, enum case for SFAirDropSend.Transfer.State.exchanging(_:), v31);
  sub_100217DD8(v30, v29);
  v27(v30, v31);
  v36(v29, v35);
  return swift_asyncLet_get_throwing(v0 + 2, v0 + 105, sub_100252CE8, v0 + 138);
}

uint64_t sub_100252CE8()
{
  *(void *)(v1 + 1744) = v0;
  if (v0) {
    uint64_t v2 = sub_100253824;
  }
  else {
    uint64_t v2 = sub_100252D14;
  }
  return swift_task_switch(v2, *(void *)(v1 + 1576), 0LL);
}

uint64_t sub_100252D14()
{
  *(void *)(v0 + 792) = *(void *)(v0 + 936);
  __int128 v1 = *(_OWORD *)(v0 + 920);
  *(_OWORD *)(v0 + 76_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(_OWORD *)(v0 + 904);
  *(_OWORD *)(v0 + 776) = v1;
  __int128 v2 = *(_OWORD *)(v0 + 856);
  *(_OWORD *)(v0 + 696) = *(_OWORD *)(v0 + 840);
  *(_OWORD *)(v0 + 712) = v2;
  __int128 v3 = *(_OWORD *)(v0 + 888);
  *(_OWORD *)(v0 + 728) = *(_OWORD *)(v0 + 872);
  *(_OWORD *)(v0 + 744) = v3;
  *(void *)(v0 + 1752) = *(void *)(v0 + 840);
  *(void *)(v0 + 176_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(void *)(v0 + 848);
  *(void *)(v0 + 1768) = *(void *)(v0 + 856);
  *(void *)(v0 + 1776) = *(void *)(v0 + 864);
  *(_BYTE *)(v0 + 186sub_10022D314(2, 1) = *(_BYTE *)(v0 + 872);
  __int128 v4 = *(_OWORD *)(v0 + 896);
  *(_OWORD *)(v0 + 1784) = *(_OWORD *)(v0 + 880);
  *(_OWORD *)(v0 + 180_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v4;
  __int128 v5 = *(_OWORD *)(v0 + 928);
  *(_OWORD *)(v0 + 18sub_100195658(v0 + 16) = *(_OWORD *)(v0 + 912);
  *(_OWORD *)(v0 + 18sub_100195658(v0 + 32) = v5;
  sub_10025FCB0((void *)(v0 + 696));
  sub_10025FCB0((void *)(v0 + 696));
  uint64_t v6 = sub_10025FCB0((void *)(v0 + 696));
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v26 = *(void *)(v0 + 1336);
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = swift_slowAlloc(32LL, -1LL);
    uint64_t v27 = v10;
    *(_DWORD *)os_log_type_t v9 = 136315138;
    sub_10025FCB0((void *)(v0 + 696));
    uint64_t v11 = sub_1003E0AFC();
    uint64_t v13 = v12;
    sub_1001FC264((void *)(v0 + 696));
    *(void *)(v0 + 1144) = sub_10018CDB4(v11, (unint64_t)v13, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1144, v0 + 1152, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v13);
    sub_1001FC264((void *)(v0 + 696));
    sub_1001FC264((void *)(v0 + 696));
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Send StateMachine ASK END - Async {response: %s}", v9, 0xCu);
    swift_arrayDestroy(v10, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);

    uint64_t v14 = v26;
  }

  else
  {
    uint64_t v15 = *(void *)(v0 + 1336);
    sub_1001FC264((void *)(v0 + 696));
    sub_1001FC264((void *)(v0 + 696));

    uint64_t v14 = v15;
  }

  sub_100187100(v14, &qword_10064A010);
  unint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1728);
  uint64_t v17 = *(void *)(v0 + 1504);
  uint64_t v18 = *(void *)(v0 + 1280);
  uint64_t v19 = *(void *)(v0 + 1256);
  uint64_t v20 = *(void *)(v0 + 1248);
  uint64_t v21 = *(void *)(v0 + 1208);
  uint64_t v22 = *(void *)(v0 + 1200);
  uint64_t v23 = *(void *)(v0 + 1192);
  sub_1001A4B84(*(void *)(v0 + 1368), *(void *)(v0 + 1184), _s14descr1005DF7D1C10AskRequestVMa);
  sub_1001A4B84(v17, v23, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v16(v22, v18, v20);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v22, 0LL, 1LL, v20);
  uint64_t v24 = sub_100183098(&qword_10064A100);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56LL))(v21, 1LL, 1LL, v24);
  return swift_asyncLet_finish(v0 + 16, v0 + 840, sub_100252FF4, v0 + 944);
}

uint64_t sub_100252FF4()
{
  return swift_task_switch(sub_100253008, *(void *)(v0 + 1576), 0LL);
}

uint64_t sub_100253008()
{
  uint64_t v38 = *(void *)(v0 + 1832);
  uint64_t v39 = *(void *)(v0 + 1840);
  __int128 v36 = *(_OWORD *)(v0 + 1800);
  __int128 v37 = *(_OWORD *)(v0 + 1816);
  __int128 v35 = *(_OWORD *)(v0 + 1784);
  char v34 = *(_BYTE *)(v0 + 1861);
  uint64_t v32 = *(void *)(v0 + 1768);
  uint64_t v33 = *(void *)(v0 + 1776);
  uint64_t v30 = *(void *)(v0 + 1752);
  uint64_t v31 = *(void *)(v0 + 1760);
  uint64_t v1 = *(void *)(v0 + 1664);
  int v29 = *(_DWORD *)(v0 + 1640);
  char v27 = *(_BYTE *)(v0 + 1644);
  uint64_t v28 = *(void *)(v0 + 1616);
  uint64_t v2 = *(void *)(v0 + 1568);
  uint64_t v3 = *(void *)(v0 + 1560);
  uint64_t v4 = *(void *)(v0 + 1552);
  uint64_t v5 = *(void *)(v0 + 1544);
  uint64_t v6 = *(void *)(v0 + 1536);
  uint64_t v7 = *(void *)(v0 + 1504);
  uint64_t v11 = *(void *)(v0 + 1528);
  uint64_t v12 = *(void *)(v0 + 1496);
  uint64_t v13 = *(void *)(v0 + 1472);
  uint64_t v14 = *(void *)(v0 + 1464);
  uint64_t v15 = *(void *)(v0 + 1440);
  uint64_t v16 = *(void *)(v0 + 1432);
  uint64_t v17 = *(void *)(v0 + 1408);
  uint64_t v18 = *(void *)(v0 + 1392);
  uint64_t v8 = *(void *)(v0 + 1368);
  uint64_t v19 = *(void *)(v0 + 1360);
  uint64_t v20 = *(void *)(v0 + 1336);
  uint64_t v21 = *(void *)(v0 + 1328);
  uint64_t v22 = *(void *)(v0 + 1304);
  uint64_t v23 = *(void *)(v0 + 1280);
  uint64_t v24 = *(void *)(v0 + 1272);
  uint64_t v25 = *(void *)(v0 + 1264);
  uint64_t v26 = *(void *)(v0 + 1240);
  uint64_t v9 = *(void *)(v0 + 1176);
  sub_1001A4BC8(v8, _s14descr1005DF7D1C10AskRequestVMa);
  sub_1001A4BC8(v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_100187100(v2, &qword_100649F50);
  swift_release_n(v1, 2LL);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v11);
  swift_task_dealloc(v7);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v8);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  *(_BYTE *)(v9 + 4) = v27;
  *(_DWORD *)uint64_t v9 = v29;
  *(void *)(v9 + 8) = v28;
  *(void *)(v9 + sub_100195658(v0 + 16) = v30;
  *(void *)(v9 + 24) = v31;
  *(void *)(v9 + sub_100195658(v0 + 32) = v32;
  *(void *)(v9 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v33;
  *(_BYTE *)(v9 + 48) = v34;
  *(_OWORD *)(v9 + 56) = v35;
  *(_OWORD *)(v9 + 72) = v36;
  *(_OWORD *)(v9 + 88) = v37;
  *(void *)(v9 + 104) = v38;
  *(void *)(v9 + 112) = v39;
  *(void *)(v9 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0LL;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100253290()
{
  uint64_t v1 = *(void *)(v0 + 1568);
  uint64_t v2 = *(void *)(v0 + 1552);
  uint64_t v3 = *(void *)(v0 + 1544);
  uint64_t v4 = *(void *)(v0 + 1536);
  uint64_t v5 = *(void *)(v0 + 1504);

  sub_1001A4BC8(v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_100187100(v1, &qword_100649F50);
  uint64_t v6 = *(void *)(v0 + 1560);
  uint64_t v7 = *(void *)(v0 + 1552);
  uint64_t v8 = *(void *)(v0 + 1528);
  uint64_t v9 = *(void *)(v0 + 1504);
  uint64_t v10 = *(void *)(v0 + 1496);
  uint64_t v11 = *(void *)(v0 + 1472);
  uint64_t v12 = *(void *)(v0 + 1464);
  uint64_t v13 = *(void *)(v0 + 1440);
  uint64_t v14 = *(void *)(v0 + 1432);
  uint64_t v16 = *(void *)(v0 + 1408);
  uint64_t v17 = *(void *)(v0 + 1392);
  uint64_t v18 = *(void *)(v0 + 1368);
  uint64_t v19 = *(void *)(v0 + 1360);
  uint64_t v20 = *(void *)(v0 + 1336);
  uint64_t v21 = *(void *)(v0 + 1328);
  uint64_t v22 = *(void *)(v0 + 1304);
  uint64_t v23 = *(void *)(v0 + 1280);
  uint64_t v24 = *(void *)(v0 + 1272);
  uint64_t v25 = *(void *)(v0 + 1264);
  uint64_t v26 = *(void *)(v0 + 1240);
  swift_task_dealloc(*(void *)(v0 + 1568));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100253440()
{
  return swift_task_switch(sub_100253454, *(void *)(v0 + 1576), 0LL);
}

uint64_t sub_100253454()
{
  uint64_t v1 = *(void *)(v0 + 1664);
  uint64_t v2 = *(void *)(v0 + 1568);
  uint64_t v3 = *(void *)(v0 + 1552);
  uint64_t v4 = *(void *)(v0 + 1544);
  uint64_t v5 = *(void *)(v0 + 1536);
  uint64_t v6 = *(void *)(v0 + 1504);
  uint64_t v7 = *(void *)(v0 + 1368);

  sub_1001A4BC8(v7, _s14descr1005DF7D1C10AskRequestVMa);
  sub_1001A4BC8(v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_100187100(v2, &qword_100649F50);
  swift_release_n(v1, 2LL);
  uint64_t v8 = *(void *)(v0 + 1560);
  uint64_t v9 = *(void *)(v0 + 1552);
  uint64_t v10 = *(void *)(v0 + 1528);
  uint64_t v11 = *(void *)(v0 + 1504);
  uint64_t v12 = *(void *)(v0 + 1496);
  uint64_t v13 = *(void *)(v0 + 1472);
  uint64_t v14 = *(void *)(v0 + 1464);
  uint64_t v15 = *(void *)(v0 + 1440);
  uint64_t v16 = *(void *)(v0 + 1432);
  uint64_t v18 = *(void *)(v0 + 1408);
  uint64_t v19 = *(void *)(v0 + 1392);
  uint64_t v20 = *(void *)(v0 + 1368);
  uint64_t v21 = *(void *)(v0 + 1360);
  uint64_t v22 = *(void *)(v0 + 1336);
  uint64_t v23 = *(void *)(v0 + 1328);
  uint64_t v24 = *(void *)(v0 + 1304);
  uint64_t v25 = *(void *)(v0 + 1280);
  uint64_t v26 = *(void *)(v0 + 1272);
  uint64_t v27 = *(void *)(v0 + 1264);
  uint64_t v28 = *(void *)(v0 + 1240);
  swift_task_dealloc(*(void *)(v0 + 1568));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100253628()
{
  return swift_task_switch(sub_10025363C, *(void *)(v0 + 1576), 0LL);
}

uint64_t sub_10025363C()
{
  uint64_t v1 = *(void *)(v0 + 1664);
  uint64_t v2 = *(void *)(v0 + 1568);
  uint64_t v3 = *(void *)(v0 + 1552);
  uint64_t v4 = *(void *)(v0 + 1544);
  uint64_t v5 = *(void *)(v0 + 1536);
  uint64_t v6 = *(void *)(v0 + 1504);
  uint64_t v7 = *(void *)(v0 + 1368);

  sub_1001A4BC8(v7, _s14descr1005DF7D1C10AskRequestVMa);
  sub_1001A4BC8(v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_100187100(v2, &qword_100649F50);
  swift_release_n(v1, 2LL);
  uint64_t v8 = *(void *)(v0 + 1560);
  uint64_t v9 = *(void *)(v0 + 1552);
  uint64_t v10 = *(void *)(v0 + 1528);
  uint64_t v11 = *(void *)(v0 + 1504);
  uint64_t v12 = *(void *)(v0 + 1496);
  uint64_t v13 = *(void *)(v0 + 1472);
  uint64_t v14 = *(void *)(v0 + 1464);
  uint64_t v15 = *(void *)(v0 + 1440);
  uint64_t v16 = *(void *)(v0 + 1432);
  uint64_t v18 = *(void *)(v0 + 1408);
  uint64_t v19 = *(void *)(v0 + 1392);
  uint64_t v20 = *(void *)(v0 + 1368);
  uint64_t v21 = *(void *)(v0 + 1360);
  uint64_t v22 = *(void *)(v0 + 1336);
  uint64_t v23 = *(void *)(v0 + 1328);
  uint64_t v24 = *(void *)(v0 + 1304);
  uint64_t v25 = *(void *)(v0 + 1280);
  uint64_t v26 = *(void *)(v0 + 1272);
  uint64_t v27 = *(void *)(v0 + 1264);
  uint64_t v28 = *(void *)(v0 + 1240);
  swift_task_dealloc(*(void *)(v0 + 1568));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100253810()
{
  return swift_task_switch(sub_1002612F0, *(void *)(v0 + 1576), 0LL);
}

uint64_t sub_100253824()
{
  uint64_t v1 = *(void *)(v0 + 1336);
  (*(void (**)(void, void))(v0 + 1736))(*(void *)(v0 + 1280), *(void *)(v0 + 1248));
  sub_100187100(v1, &qword_10064A010);
  return swift_asyncLet_finish(v0 + 16, v0 + 840, sub_100253894, v0 + 800);
}

uint64_t sub_100253894()
{
  return swift_task_switch(sub_1002538A8, *(void *)(v0 + 1576), 0LL);
}

uint64_t sub_1002538A8()
{
  uint64_t v1 = *(void *)(v0 + 1664);
  uint64_t v2 = *(void *)(v0 + 1568);
  uint64_t v3 = *(void *)(v0 + 1552);
  uint64_t v4 = *(void *)(v0 + 1544);
  uint64_t v5 = *(void *)(v0 + 1536);
  uint64_t v6 = *(void *)(v0 + 1504);
  uint64_t v7 = *(void *)(v0 + 1368);

  sub_1001A4BC8(v7, _s14descr1005DF7D1C10AskRequestVMa);
  sub_1001A4BC8(v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_100187100(v2, &qword_100649F50);
  swift_release_n(v1, 2LL);
  uint64_t v8 = *(void *)(v0 + 1560);
  uint64_t v9 = *(void *)(v0 + 1552);
  uint64_t v10 = *(void *)(v0 + 1528);
  uint64_t v11 = *(void *)(v0 + 1504);
  uint64_t v12 = *(void *)(v0 + 1496);
  uint64_t v13 = *(void *)(v0 + 1472);
  uint64_t v14 = *(void *)(v0 + 1464);
  uint64_t v15 = *(void *)(v0 + 1440);
  uint64_t v16 = *(void *)(v0 + 1432);
  uint64_t v18 = *(void *)(v0 + 1408);
  uint64_t v19 = *(void *)(v0 + 1392);
  uint64_t v20 = *(void *)(v0 + 1368);
  uint64_t v21 = *(void *)(v0 + 1360);
  uint64_t v22 = *(void *)(v0 + 1336);
  uint64_t v23 = *(void *)(v0 + 1328);
  uint64_t v24 = *(void *)(v0 + 1304);
  uint64_t v25 = *(void *)(v0 + 1280);
  uint64_t v26 = *(void *)(v0 + 1272);
  uint64_t v27 = *(void *)(v0 + 1264);
  uint64_t v28 = *(void *)(v0 + 1240);
  swift_task_dealloc(*(void *)(v0 + 1568));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100253A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[43] = a7;
  v8[44] = v7;
  v8[41] = a5;
  v8[42] = a6;
  v8[39] = a3;
  v8[40] = a4;
  v8[37] = a1;
  v8[38] = a2;
  v8[45] = swift_getObjectType(v7);
  uint64_t v9 = sub_100183098(&qword_10064A140);
  v8[46] = v9;
  unint64_t v10 = (*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v8[47] = swift_task_alloc(v10);
  v8[48] = swift_task_alloc(v10);
  uint64_t v11 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  v8[49] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v8[50] = v12;
  v8[51] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for SFAirDropSend.Request(0LL);
  v8[52] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v8[53] = v14;
  v8[54] = swift_task_alloc((*(void *)(v14 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v15 = static AirDropActor.shared;
  v8[55] = static AirDropActor.shared;
  return swift_task_switch(sub_100253B88, v15, 0LL);
}

uint64_t sub_100253B88()
{
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v26 = v1;
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v29 = *(void *)(v0 + 384);
  uint64_t v5 = *(void *)(v0 + 360);
  uint64_t v4 = *(int **)(v0 + 368);
  uint64_t v6 = *(char **)(v0 + 352);
  uint64_t v27 = *(void **)(v0 + 344);
  uint64_t v28 = *(void *)(v0 + 432);
  uint64_t v7 = *(void *)(v0 + 336);
  (*(void (**)(void))(*(void *)(v0 + 424) + 16LL))();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v7, v2);
  uint64_t v8 = *(void **)&v6[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_endpointService];
  *(void *)(v0 + 2sub_100195658(v0 + 16) = v5;
  *(void *)(v0 + 224) = &off_1005D6848;
  *(void *)(v0 + 192) = v6;
  uint64_t v9 = type metadata accessor for SDAirDropAskFanoutHelper(0LL);
  uint64_t v10 = swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  uint64_t v11 = sub_1002499B4(v0 + 192, v5);
  uint64_t v12 = *(void *)(v5 - 8);
  uint64_t v13 = (uint64_t *)swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16))(v13, v11, v5);
  uint64_t v14 = *v13;
  id v15 = v8;
  id v16 = v27;
  uint64_t v17 = v6;
  *(void *)(v0 + 448) = sub_10025E388(v28, v26, (uint64_t)v15, (uint64_t)v16, v14, v10);
  sub_10018709C((void *)(v0 + 192));
  swift_task_dealloc(v13);
  uint64_t v18 = v4[12];
  *(_DWORD *)(v0 + 60_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v18;
  uint64_t v19 = v29 + v18;
  uint64_t v20 = v4[20];
  *(_DWORD *)(v0 + 604) = v20;
  uint64_t v21 = v29 + v20;
  uint64_t v22 = v4[32];
  *(_DWORD *)(v0 + 608) = v22;
  uint64_t v23 = v29 + v22;
  uint64_t v24 = (void *)swift_task_alloc(dword_10064EA14);
  *(void *)(v0 + 456) = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_100253D34;
  return sub_100316C70(v0 + 16, v19, v21, v23);
}

uint64_t sub_100253D34()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 456);
  *(void *)(v2 + 464) = v0;
  int v4 = *(_DWORD *)(v2 + 16);
  *(_BYTE *)(v2 + 476) = *(_BYTE *)(v2 + 20);
  *(_DWORD *)(v2 + 472) = v4;
  uint64_t v5 = *(void *)(v2 + 32);
  *(void *)(v2 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(void *)(v2 + 24);
  *(void *)(v2 + 488) = v5;
  *(_OWORD *)(v2 + 496) = *(_OWORD *)(v2 + 40);
  *(void *)(v2 + 512) = *(void *)(v2 + 56);
  *(_BYTE *)(v2 + 624) = *(_BYTE *)(v2 + 64);
  __int128 v6 = *(_OWORD *)(v2 + 88);
  *(_OWORD *)(v2 + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(_OWORD *)(v2 + 72);
  *(_OWORD *)(v2 + 536) = v6;
  __int128 v7 = *(_OWORD *)(v2 + 120);
  *(_OWORD *)(v2 + 552) = *(_OWORD *)(v2 + 104);
  *(_OWORD *)(v2 + 568) = v7;
  uint64_t v8 = *(void *)(v2 + 144);
  *(void *)(v2 + 584) = *(void *)(v2 + 136);
  *(void *)(v2 + 592) = v8;
  swift_task_dealloc(v3);
  uint64_t v9 = *(void *)(v2 + 440);
  if (v0)
  {
    uint64_t v10 = sub_1002543B0;
  }

  else
  {
    uint64_t v11 = *(_DWORD **)(v2 + 368);
    *(_DWORD *)(v2 + 612) = v11[16];
    *(_DWORD *)(v2 + 6sub_100195658(v0 + 16) = v11[24];
    *(_DWORD *)(v2 + 62_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v11[28];
    uint64_t v10 = sub_100253E10;
  }

  return swift_task_switch(v10, v9, 0LL);
}

void sub_100253E10()
{
  uint64_t v1 = *(int *)(v0 + 620);
  uint64_t v2 = *(int *)(v0 + 612);
  uint64_t v3 = *(void **)(v0 + 592);
  uint64_t v4 = *(void *)(v0 + 584);
  char v5 = *(_BYTE *)(v0 + 624);
  uint64_t v7 = *(void *)(v0 + 504);
  uint64_t v6 = *(void *)(v0 + 512);
  __int128 v8 = *(_OWORD *)(v0 + 488);
  uint64_t v9 = *(void *)(v0 + 480);
  int v10 = *(_DWORD *)(v0 + 472);
  uint64_t v11 = *(void *)(v0 + 384);
  uint64_t v12 = *(void *)(v0 + 352);
  uint64_t v13 = v11 + *(int *)(v0 + 616);
  __int128 v14 = *(_OWORD *)(v0 + 520);
  __int128 v15 = *(_OWORD *)(v0 + 536);
  __int128 v16 = *(_OWORD *)(v0 + 552);
  __int128 v17 = *(_OWORD *)(v0 + 568);
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v0 + 476);
  *(_DWORD *)uint64_t v11 = v10;
  *(void *)(v11 + v2) = v9;
  *(_OWORD *)uint64_t v13 = v8;
  *(void *)(v13 + sub_100195658(v0 + 16) = v7;
  *(void *)(v13 + 24) = v6;
  *(_BYTE *)(v13 + sub_100195658(v0 + 32) = v5;
  *(_OWORD *)(v13 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v14;
  *(_OWORD *)(v13 + 56) = v15;
  *(_OWORD *)(v13 + 72) = v16;
  *(_OWORD *)(v13 + 88) = v17;
  *(void *)(v11 + vsub_10022D314(2, 1) = v4;
  uint64_t v18 = (const char **)(v12 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections);
  swift_beginAccess( v12 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections,  v0 + 232,  0LL,  0LL);
  uint64_t v19 = *v18;
  id v20 = v3;
  uint64_t v21 = swift_bridgeObjectRetain(v19);
  Swift::Int v22 = sub_10025EE68(v21, v20);

  uint64_t v70 = v13;
  if ((v22 & 0xC000000000000001LL) != 0)
  {
    uint64_t v24 = __CocoaSet.makeIterator()(v22);
    uint64_t v25 = type metadata accessor for SDAirDropSendConnection(0LL);
    uint64_t v26 = sub_100183F14( &qword_10064A138,  type metadata accessor for SDAirDropSendConnection,  (uint64_t)&protocol conformance descriptor for NSObject);
    uint64_t v23 = Set.Iterator.init(_cocoa:)((void *)(v0 + 152), v24, v25, v26);
    Swift::Int v22 = *(void *)(v0 + 152);
    Swift::Int v81 = *(void *)(v0 + 160);
    uint64_t v27 = *(void *)(v0 + 168);
    uint64_t v28 = *(void *)(v0 + 176);
    unint64_t v29 = *(void *)(v0 + 184);
  }

  else
  {
    uint64_t v28 = 0LL;
    uint64_t v30 = -1LL << *(_BYTE *)(v22 + 32);
    Swift::Int v81 = v22 + 56;
    uint64_t v31 = ~v30;
    uint64_t v32 = -v30;
    if (v32 < 64) {
      uint64_t v33 = ~(-1LL << v32);
    }
    else {
      uint64_t v33 = -1LL;
    }
    unint64_t v29 = v33 & *(void *)(v22 + 56);
    uint64_t v27 = v31;
  }

  uint64_t v74 = (uint64_t *)(v0 + 288);
  uint64_t v76 = (id *)(v0 + 280);
  int64_t v79 = (unint64_t)(v27 + 64) >> 6;
  if (v22 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v29)
    {
      uint64_t v34 = (v29 - 1) & v29;
      unint64_t v35 = __clz(__rbit64(v29)) | (v28 << 6);
      uint64_t v36 = v28;
      goto LABEL_27;
    }

    int64_t v41 = v28 + 1;
    if (__OFADD__(v28, 1LL)) {
      break;
    }
    if (v41 >= v79) {
      goto LABEL_30;
    }
    unint64_t v42 = *(void *)(v81 + 8 * v41);
    uint64_t v36 = v28 + 1;
    if (!v42)
    {
      uint64_t v36 = v28 + 2;
      if (v28 + 2 >= v79) {
        goto LABEL_30;
      }
      unint64_t v42 = *(void *)(v81 + 8 * v36);
      if (!v42)
      {
        uint64_t v36 = v28 + 3;
        if (v28 + 3 >= v79) {
          goto LABEL_30;
        }
        unint64_t v42 = *(void *)(v81 + 8 * v36);
        if (!v42)
        {
          uint64_t v36 = v28 + 4;
          if (v28 + 4 >= v79) {
            goto LABEL_30;
          }
          unint64_t v42 = *(void *)(v81 + 8 * v36);
          if (!v42)
          {
            uint64_t v43 = v28 + 5;
            while (v79 != v43)
            {
              unint64_t v42 = *(void *)(v81 + 8 * v43++);
              if (v42)
              {
                uint64_t v36 = v43 - 1;
                goto LABEL_26;
              }
            }

uint64_t sub_1002543B0()
{
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v4 = *(void *)(v0 + 376);
  uint64_t v3 = *(void *)(v0 + 384);
  swift_release(*(void *)(v0 + 448));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100254418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  *(void *)(v8 + 2sub_100195658(v0 + 32) = a7;
  *(void *)(v8 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v7;
  *(_BYTE *)(v8 + 54_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a6;
  *(void *)(v8 + 2sub_100195658(v0 + 16) = a4;
  *(void *)(v8 + 224) = a5;
  *(void *)(v8 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a2;
  *(void *)(v8 + 208) = a3;
  *(void *)(v8 + 192) = a1;
  uint64_t v9 = sub_100183098(&qword_10064A188);
  *(void *)(v8 + 248) = swift_task_alloc((*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for SFAirDropSend.Failure(0LL);
  *(void *)(v8 + 256) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v8 + 264) = v11;
  unint64_t v12 = (*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v8 + 272) = swift_task_alloc(v12);
  *(void *)(v8 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = swift_task_alloc(v12);
  uint64_t v13 = type metadata accessor for CancellationError(0LL);
  *(void *)(v8 + 288) = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  *(void *)(v8 + 296) = v14;
  *(void *)(v8 + 304) = swift_task_alloc((*(void *)(v14 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_100183098(&qword_10064A140);
  *(void *)(v8 + 312) = v15;
  unint64_t v16 = (*(void *)(*(void *)(v15 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v8 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = swift_task_alloc(v16);
  *(void *)(v8 + 328) = swift_task_alloc(v16);
  uint64_t v17 = type metadata accessor for SFAirDropSend.Request(0LL);
  *(void *)(v8 + 336) = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  *(void *)(v8 + 344) = v18;
  *(void *)(v8 + 352) = swift_task_alloc((*(void *)(v18 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v19 = (*(void *)(*(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0LL) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v8 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = swift_task_alloc(v19);
  *(void *)(v8 + 368) = swift_task_alloc(v19);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v20 = static AirDropActor.shared;
  *(void *)(v8 + 376) = static AirDropActor.shared;
  return swift_task_switch(sub_1002545A8, v20, 0LL);
}

uint64_t sub_1002545A8()
{
  uint64_t v1 = sub_1001A4B84( *(void *)(v0 + 224),  *(void *)(v0 + 368),  type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 368);
    char v5 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v6 = (const char *)swift_slowAlloc(32LL, -1LL);
    unint64_t v35 = (char *)v6;
    *(_DWORD *)char v5 = 136315138;
    sub_10020E23C();
    uint64_t v8 = (const char *)v7;
    *(void *)(v0 + 184) = sub_10018CDB4(v9, v7, (uint64_t *)&v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192, v5 + 4, v5 + 12);
    swift_bridgeObjectRelease(v8);
    sub_1001A4BC8(v4, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sending Ask to new endpoint: %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1LL, -1LL);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  else
  {
    uint64_t v10 = *(void *)(v0 + 368);

    sub_1001A4BC8(v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  uint64_t v11 = *(void *)(v0 + 352);
  uint64_t v12 = *(void *)(v0 + 360);
  uint64_t v13 = *(void *)(v0 + 336);
  uint64_t v14 = *(void *)(v0 + 344);
  uint64_t v34 = *(void *)(v0 + 328);
  uint64_t v33 = *(int **)(v0 + 312);
  uint64_t v16 = *(void *)(v0 + 232);
  uint64_t v15 = *(void *)(v0 + 240);
  sub_1001A4B84(*(void *)(v0 + 224), v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v17 = *(void **)(v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_deviceStatus);
  uint64_t v18 = *(void *)(v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_pseudonymService);
  unint64_t v19 = *(void **)(v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_queue);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v11, v16, v13);
  id v20 = objc_allocWithZone((Class)type metadata accessor for SDAirDropSendConnection(0LL));
  id v21 = v17;
  swift_retain(v18);
  id v22 = v19;
  id v23 = sub_1001FAF08(v12, v21, v18, v22, v11);
  *(void *)(v0 + 384) = v23;

  swift_release(v18);
  swift_beginAccess( v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections,  v0 + 144,  33LL,  0LL);
  id v24 = v23;
  sub_1003B667C((const char **)&v35, v24);
  swift_endAccess(v0 + 144);

  uint64_t v25 = v33[12];
  *(_DWORD *)(v0 + 528) = v25;
  uint64_t v26 = v34 + v25;
  uint64_t v27 = v33[20];
  *(_DWORD *)(v0 + 5sub_100195658(v0 + 32) = v27;
  uint64_t v28 = v34 + v27;
  uint64_t v29 = v33[32];
  *(_DWORD *)(v0 + 536) = v29;
  uint64_t v30 = v34 + v29;
  uint64_t v31 = (void *)swift_task_alloc(dword_10064A194);
  *(void *)(v0 + 392) = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_1002548C8;
  return sub_100254F48(v0 + 16, v26, v28, v30, *(void *)(v0 + 224), *(void *)(v0 + 232), (uint64_t)v24, (uint64_t)v21);
}

uint64_t sub_1002548C8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 392);
  *(void *)(v2 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v0;
  int v4 = *(_DWORD *)(v2 + 16);
  *(_BYTE *)(v2 + 412) = *(_BYTE *)(v2 + 20);
  *(_DWORD *)(v2 + 408) = v4;
  uint64_t v5 = *(void *)(v2 + 32);
  *(void *)(v2 + 4sub_100195658(v0 + 16) = *(void *)(v2 + 24);
  *(void *)(v2 + 424) = v5;
  *(_OWORD *)(v2 + 4sub_100195658(v0 + 32) = *(_OWORD *)(v2 + 40);
  *(void *)(v2 + 448) = *(void *)(v2 + 56);
  *(_BYTE *)(v2 + 54sub_10022D314(2, 1) = *(_BYTE *)(v2 + 64);
  __int128 v6 = *(_OWORD *)(v2 + 88);
  *(_OWORD *)(v2 + 456) = *(_OWORD *)(v2 + 72);
  *(_OWORD *)(v2 + 472) = v6;
  __int128 v7 = *(_OWORD *)(v2 + 120);
  *(_OWORD *)(v2 + 488) = *(_OWORD *)(v2 + 104);
  *(_OWORD *)(v2 + 504) = v7;
  *(void *)(v2 + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(void *)(v2 + 136);
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v8 = sub_100254BC8;
  }
  else {
    uint64_t v8 = sub_100254984;
  }
  return swift_task_switch(v8, *(void *)(v2 + 376), 0LL);
}

uint64_t sub_100254984()
{
  uint64_t v32 = *(void *)(v0 + 520);
  __int128 v30 = *(_OWORD *)(v0 + 488);
  __int128 v31 = *(_OWORD *)(v0 + 504);
  __int128 v29 = *(_OWORD *)(v0 + 472);
  __int128 v28 = *(_OWORD *)(v0 + 456);
  char v27 = *(_BYTE *)(v0 + 541);
  uint64_t v26 = *(void *)(v0 + 448);
  __int128 v25 = *(_OWORD *)(v0 + 432);
  __int128 v23 = *(_OWORD *)(v0 + 416);
  int v22 = *(_DWORD *)(v0 + 408);
  char v21 = *(_BYTE *)(v0 + 412);
  uint64_t v24 = *(void *)(v0 + 384);
  uint64_t v14 = *(void *)(v0 + 368);
  uint64_t v15 = *(void *)(v0 + 360);
  uint64_t v16 = *(void *)(v0 + 352);
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v3 = *(int **)(v0 + 312);
  uint64_t v17 = *(void *)(v0 + 304);
  uint64_t v18 = *(void *)(v0 + 280);
  uint64_t v19 = *(void *)(v0 + 272);
  uint64_t v20 = *(void *)(v0 + 248);
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v12 = *(void *)(v0 + 208);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v5 = v2 + *(int *)(v0 + 536);
  uint64_t v6 = v2 + *(int *)(v0 + 532);
  uint64_t v7 = v1 + v3[12];
  uint64_t v8 = v1 + v3[20];
  uint64_t v9 = v1 + v3[32];
  uint64_t v10 = *(void *)(v0 + 192);
  sub_1001A4B40(v2 + *(int *)(v0 + 528), v7, _s14descr1005DF7D1C10AskRequestVMa);
  sub_1001A4B40(v6, v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001870BC(v5, v9, &qword_100649F80);
  sub_1001A4B40(v7, v4, _s14descr1005DF7D1C10AskRequestVMa);
  sub_1001A4B40(v8, v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001870BC(v9, v13, &qword_100649F80);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  *(_BYTE *)(v10 + 4) = v21;
  *(_DWORD *)uint64_t v10 = v22;
  *(_OWORD *)(v10 + 8) = v23;
  *(_OWORD *)(v10 + 24) = v25;
  *(void *)(v10 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v26;
  *(_BYTE *)(v10 + 48) = v27;
  *(_OWORD *)(v10 + 56) = v28;
  *(_OWORD *)(v10 + 72) = v29;
  *(_OWORD *)(v10 + 88) = v30;
  *(_OWORD *)(v10 + 104) = v31;
  *(void *)(v10 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v32;
  *(void *)(v10 + 128) = v24;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100254BC8()
{
  uint64_t v1 = *(void *)(v0 + 400);
  *(void *)(v0 + 168) = v1;
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 288);
  swift_errorRetain(v1);
  uint64_t v4 = sub_100183098(&qword_100645710);
  int v5 = swift_dynamicCast(v2, v0 + 168, v4, v3, 0LL);
  uint64_t v6 = *(void *)(v0 + 400);
  if (v5)
  {
    uint64_t v7 = *(void *)(v0 + 360);
    uint64_t v8 = *(void *)(v0 + 296);
    uint64_t v54 = *(void *)(v0 + 304);
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v51 = *(void **)(v0 + 384);
    uint64_t v52 = *(void *)(v0 + 288);
    uint64_t v11 = *(void *)(v0 + 256);
    uint64_t v10 = *(void *)(v0 + 264);
    uint64_t v12 = *(void *)(v0 + 224);
    swift_errorRelease(v6);
    sub_1001A4B84(v12, v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
    (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))( v9,  enum case for SFAirDropSend.Failure.cancelled(_:),  v11);
    uint64_t v13 = _s15EndpointFailureVMa(0LL);
    uint64_t v14 = sub_100183F14(&qword_10064A198, _s15EndpointFailureVMa, (uint64_t)&unk_1004D0774);
    swift_allocError(v13, v14, 0LL, 0LL);
    uint64_t v16 = v15;
    sub_1001A4B40(v7, v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v16 + *(int *)(v13 + 20), v9, v11);
    swift_willThrow(v17);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v54, v52);
    swift_errorRelease(*(void *)(v0 + 168));
  }

  else
  {
    uint64_t v18 = *(void *)(v0 + 256);
    uint64_t v19 = *(void *)(v0 + 264);
    uint64_t v20 = *(void *)(v0 + 248);
    swift_errorRelease(*(void *)(v0 + 168));
    *(void *)(v0 + 176) = v6;
    swift_errorRetain(v6);
    int v21 = swift_dynamicCast(v20, v0 + 176, v4, v18, 6LL);
    int v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
    if (v21)
    {
      uint64_t v24 = *(void *)(v0 + 264);
      uint64_t v23 = *(void *)(v0 + 272);
      uint64_t v26 = *(void *)(v0 + 248);
      uint64_t v25 = *(void *)(v0 + 256);
      v22(v26, 0LL, 1LL, v25);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v23, v26, v25);
    }

    else
    {
      uint64_t v27 = *(void *)(v0 + 400);
      uint64_t v29 = *(void *)(v0 + 264);
      uint64_t v28 = *(void *)(v0 + 272);
      uint64_t v31 = *(void *)(v0 + 248);
      uint64_t v30 = *(void *)(v0 + 256);
      v22(v31, 1LL, 1LL, v30);
      swift_errorRetain(v27);
      CodableError.init(_:)(v27);
      (*(void (**)(uint64_t, void, uint64_t))(v29 + 104))( v28,  enum case for SFAirDropSend.Failure.unexpected(_:),  v30);
      sub_100187100(v31, &qword_10064A188);
    }

    uint64_t v53 = *(void *)(v0 + 400);
    __int128 v55 = *(void **)(v0 + 384);
    uint64_t v32 = *(void *)(v0 + 360);
    uint64_t v33 = *(void *)(v0 + 272);
    uint64_t v34 = *(void *)(v0 + 280);
    uint64_t v35 = *(void *)(v0 + 256);
    uint64_t v36 = *(void *)(v0 + 264);
    sub_1001A4B84(*(void *)(v0 + 224), v32, type metadata accessor for SDAirDropDiscoveredEndpoint);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v34, v33, v35);
    uint64_t v37 = _s15EndpointFailureVMa(0LL);
    uint64_t v38 = sub_100183F14(&qword_10064A198, _s15EndpointFailureVMa, (uint64_t)&unk_1004D0774);
    swift_allocError(v37, v38, 0LL, 0LL);
    uint64_t v40 = v39;
    sub_1001A4B40(v32, v39, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v40 + *(int *)(v37 + 20), v34, v35);
    swift_willThrow(v41);
    swift_errorRelease(v53);

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v33, v35);
  }

  uint64_t v42 = *(void *)(v0 + 360);
  uint64_t v43 = *(void *)(v0 + 352);
  uint64_t v45 = *(void *)(v0 + 320);
  uint64_t v44 = *(void *)(v0 + 328);
  uint64_t v46 = *(void *)(v0 + 304);
  uint64_t v48 = *(void *)(v0 + 272);
  uint64_t v47 = *(void *)(v0 + 280);
  uint64_t v49 = *(void *)(v0 + 248);
  swift_task_dealloc(*(void *)(v0 + 368));
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100254F48( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 176) = a8;
  *(void *)(v9 + 184) = v8;
  *(_BYTE *)(v9 + 58sub_10022D314(2, 1) = v30;
  *(void *)(v9 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a6;
  *(void *)(v9 + 168) = a7;
  *(void *)(v9 + 144) = a4;
  *(void *)(v9 + 152) = a5;
  *(void *)(v9 + 128) = a2;
  *(void *)(v9 + 136) = a3;
  *(void *)(v9 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a1;
  uint64_t v10 = type metadata accessor for SFSecurityScopedURL(0LL);
  *(void *)(v9 + 192) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v9 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v11;
  *(void *)(v9 + 208) = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for URL(0LL);
  *(void *)(v9 + 2sub_100195658(v0 + 16) = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  *(void *)(v9 + 224) = v13;
  *(void *)(v9 + 2sub_100195658(v0 + 32) = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  *(void *)(v9 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  *(void *)(v9 + 248) = v15;
  *(void *)(v9 + 256) = swift_task_alloc((*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v16 = (*(void *)(*(void *)(sub_100183098(&qword_100649F80) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v9 + 264) = swift_task_alloc(v16);
  *(void *)(v9 + 272) = swift_task_alloc(v16);
  uint64_t v17 = sub_100183098(&qword_10064A178);
  *(void *)(v9 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  *(void *)(v9 + 288) = v18;
  *(void *)(v9 + 296) = swift_task_alloc((*(void *)(v18 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = _s14descr1005DF7D1C10AskRequestVMa(0LL);
  *(void *)(v9 + 304) = swift_task_alloc((*(void *)(*(void *)(v19 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_100183098(&qword_10064A158);
  *(void *)(v9 + 312) = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  *(void *)(v9 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v21;
  *(void *)(v9 + 328) = swift_task_alloc((*(void *)(v21 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = _s12HelloRequestVMa(0LL);
  *(void *)(v9 + 336) = v22;
  *(void *)(v9 + 344) = swift_task_alloc((*(void *)(*(void *)(v22 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for SFAirDrop.TransferType(0LL);
  *(void *)(v9 + 352) = v23;
  uint64_t v24 = *(void *)(v23 - 8);
  *(void *)(v9 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v24;
  *(void *)(v9 + 368) = swift_task_alloc((*(void *)(v24 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for SFAirDropSend.Request(0LL);
  *(void *)(v9 + 376) = v25;
  uint64_t v26 = *(void *)(v25 - 8);
  *(void *)(v9 + 384) = v26;
  unint64_t v27 = (*(void *)(v26 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v9 + 392) = swift_task_alloc(v27);
  *(void *)(v9 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = swift_task_alloc(v27);
  *(void *)(v9 + 408) = swift_task_alloc(v27);
  *(void *)(v9 + 4sub_100195658(v0 + 16) = swift_task_alloc(v27);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v28 = static AirDropActor.shared;
  *(void *)(v9 + 424) = static AirDropActor.shared;
  return swift_task_switch(sub_10025518C, v28, 0LL);
}

uint64_t sub_10025518C(uint64_t a1)
{
  uint64_t v2 = SFAirDropSend.Request.urls.getter(a1);
  *(void *)(v1 + 4sub_100195658(v0 + 32) = v2;
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = SFAirDropSend.Request.requestSource.getter(v2);
    uint64_t v6 = v5;
    *(void *)(v1 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v5;
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10064A490
                                                                                       + dword_10064A490);
    uint64_t v7 = (void *)swift_task_alloc(unk_10064A494);
    *(void *)(v1 + 448) = v7;
    *uint64_t v7 = v1;
    v7[1] = sub_1002552A4;
    return v17(*(void *)(v1 + 160), v3, v4, v6, *(void *)(v1 + 152), *(void *)(v1 + 176));
  }

  else
  {
    uint64_t v9 = *(uint64_t (**)(void, void, void))(*(void *)(v1 + 384) + 16LL);
    uint64_t v10 = v9(*(void *)(v1 + 416), *(void *)(v1 + 160), *(void *)(v1 + 376));
    uint64_t v11 = SFAirDropSend.Request.urls.getter(v10);
    *(void *)(v1 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0LL;
    *(void *)(v1 + 488) = v11;
    *(void *)(v1 + 472) = v9;
    *(_BYTE *)(v1 + 582) = 1;
    uint64_t v12 = *(void *)(v1 + 416);
    uint64_t v13 = *(void *)(v1 + 376);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v1 + 384) + 8LL);
    *(void *)(v1 + 496) = v14;
    uint64_t v15 = v14(v12, v13);
    SFAirDropSend.Request.requestSource.getter(v15);
    *(void *)(v1 + 504) = v16;
    return swift_task_switch(sub_1002554EC, static AirDropActor.shared, 0LL);
  }

uint64_t sub_1002552A4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 448LL);
  *(void *)(*(void *)v2 + 456LL) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    uint64_t v6 = v4[53];
    uint64_t v7 = sub_100255330;
  }

  else
  {
    uint64_t v8 = (const char *)v4[55];
    uint64_t v9 = v4[53];
    *(void *)&double v10 = swift_bridgeObjectRelease((const char *)v4[54]).n128_u64[0];
    v4[58] = a1;
    swift_bridgeObjectRelease(v8, v10);
    uint64_t v7 = sub_100255430;
    uint64_t v6 = v9;
  }

  return swift_task_switch(v7, v6, 0LL);
}

uint64_t sub_100255330()
{
  uint64_t v1 = *(void *)(v0 + 440);
  swift_bridgeObjectRelease(*(void *)(v0 + 432));
  swift_bridgeObjectRelease(v1);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v5 = *(void *)(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 344);
  uint64_t v7 = *(void *)(v0 + 328);
  uint64_t v9 = *(void *)(v0 + 296);
  uint64_t v8 = *(void *)(v0 + 304);
  uint64_t v10 = *(void *)(v0 + 272);
  uint64_t v12 = *(void *)(v0 + 264);
  uint64_t v13 = *(void *)(v0 + 256);
  uint64_t v14 = *(void *)(v0 + 232);
  uint64_t v15 = *(void *)(v0 + 208);
  swift_task_dealloc(*(void *)(v0 + 416));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100255430()
{
  uint64_t v1 = *(const char **)(v0 + 464);
  uint64_t v2 = *(uint64_t (**)(void, void, void))(*(void *)(v0 + 384) + 16LL);
  uint64_t v3 = v2(*(void *)(v0 + 416), *(void *)(v0 + 160), *(void *)(v0 + 376));
  if (v1)
  {
    uint64_t v4 = *(void *)(v0 + 464);
    uint64_t v5 = v1;
  }

  else
  {
    uint64_t v4 = SFAirDropSend.Request.urls.getter(v3);
    uint64_t v5 = 0LL;
  }

  *(void *)(v0 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v5;
  *(void *)(v0 + 488) = v4;
  *(void *)(v0 + 472) = v2;
  *(_BYTE *)(v0 + 582) = v1 == 0LL;
  uint64_t v6 = *(void *)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 376);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(*(void *)(v0 + 384) + 8LL);
  *(void *)(v0 + 496) = v8;
  __n128 v9 = swift_bridgeObjectRetain(v5);
  uint64_t v10 = v8(v6, v7, v9);
  SFAirDropSend.Request.requestSource.getter(v10);
  *(void *)(v0 + 504) = v11;
  return swift_task_switch(sub_1002554EC, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002554EC()
{
  uint64_t v1 = (const char *)v0[63];
  uint64_t v2 = v0[53];
  *(void *)&double v3 = swift_bridgeObjectRelease((const char *)v0[61]).n128_u64[0];
  swift_bridgeObjectRelease(v1, v3);
  return swift_task_switch(sub_100255538, v2, 0LL);
}

uint64_t sub_100255538()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 472);
  char v2 = *(_BYTE *)(v0 + 582);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 376);
  v1(v4, *(void *)(v0 + 160), v5);
  uint64_t v6 = v1(v3, v4, v5);
  if ((v2 & 1) != 0)
  {
    uint64_t v7 = SFAirDropSend.Request.urls.getter(v6);
    uint64_t v8 = *(const char **)(v0 + 480);
  }

  else
  {
    uint64_t v8 = *(const char **)(v0 + 480);
    uint64_t v7 = (uint64_t)v8;
  }

  *(void *)(v0 + 512) = v7;
  __n128 v9 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 496);
  uint64_t v10 = *(void *)(v0 + 400);
  uint64_t v11 = *(void *)(v0 + 408);
  uint64_t v12 = *(void *)(v0 + 376);
  __n128 v13 = swift_bridgeObjectRetain(v8);
  v9(v10, v12, v13);
  ((void (*)(uint64_t, uint64_t))v9)(v11, v12);
  uint64_t v14 = static AirDropActor.shared;
  *(void *)(v0 + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = static AirDropActor.shared;
  return swift_task_switch(sub_100255604, v14, 0LL);
}

uint64_t sub_100255604()
{
  unint64_t v1 = sub_10020F350();
  if ((v1 & 1) != 0
    && (type metadata accessor for SFAirDropUserDefaults(0LL, v2),
        uint64_t v3 = (void *)static SFAirDropUserDefaults.shared.getter(),
        char v4 = SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter(),
        v3,
        (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(v0 + 360);
    uint64_t v6 = *(void *)(v0 + 368);
    uint64_t v8 = *(void *)(v0 + 344);
    uint64_t v7 = *(void *)(v0 + 352);
    uint64_t v9 = *(void *)(v0 + 328);
    uint64_t v10 = *(void *)(v0 + 336);
    uint64_t v11 = SFAirDropSend.Request.type.getter(v1);
    char v12 = SFAirDrop.TransferType.isPeerPayment.getter(v11);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
    SFAirDropSend.Request.id.getter(v13);
    uint64_t v14 = *(int *)(v10 + 24);
    *(_DWORD *)(v8 + *(int *)(v10 + 20)) = 3;
    *(_BYTE *)(v8 + v14) = v12 & 1;
    sub_1001EE190(v8, v9);
    uint64_t v15 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(void *)(v0 + 528) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_1002557D8;
    return SFProgressTask.finalValue.getter(v0 + 576, *(void *)(v0 + 312));
  }

  else
  {
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v1);
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Receiver does not support HELLO, skipping", v19, 2u);
      swift_slowDealloc(v19, -1LL, -1LL);
    }

    *(_DWORD *)(v0 + 536) = 0;
    *(_BYTE *)(v0 + 54_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 3;
    return swift_task_switch(sub_100255918, *(void *)(v0 + 424), 0LL);
  }

uint64_t sub_1002557D8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 528));
  uint64_t v3 = *(void *)(v2 + 520);
  if (v0)
  {
    swift_errorRelease(v0);
    char v4 = sub_1002558B4;
  }

  else
  {
    char v4 = sub_100255844;
  }

  return swift_task_switch(v4, v3, 0LL);
}

uint64_t sub_100255844()
{
  int v1 = *(_DWORD *)(v0 + 576);
  char v2 = *(_BYTE *)(v0 + 580);
  uint64_t v3 = *(void *)(v0 + 344);
  (*(void (**)(void, void))(*(void *)(v0 + 320) + 8LL))(*(void *)(v0 + 328), *(void *)(v0 + 312));
  sub_1001A4BC8(v3, _s12HelloRequestVMa);
  *(_BYTE *)(v0 + 54_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v2;
  *(_DWORD *)(v0 + 536) = v1;
  return swift_task_switch(sub_100255918, *(void *)(v0 + 424), 0LL);
}

uint64_t sub_1002558B4()
{
  uint64_t v1 = *(void *)(v0 + 344);
  (*(void (**)(void, void))(*(void *)(v0 + 320) + 8LL))(*(void *)(v0 + 328), *(void *)(v0 + 312));
  sub_1001A4BC8(v1, _s12HelloRequestVMa);
  *(_BYTE *)(v0 + 54_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 3;
  *(_DWORD *)(v0 + 536) = 0;
  return swift_task_switch(sub_100255918, *(void *)(v0 + 424), 0LL);
}

uint64_t sub_100255918(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(v1 + 540);
  uint64_t v3 = *(unsigned int *)(v1 + 536);
  uint64_t v5 = *(void *)(v1 + 360);
  uint64_t v4 = *(void *)(v1 + 368);
  uint64_t v6 = *(void *)(v1 + 352);
  uint64_t v7 = SFAirDropSend.Request.type.getter(a1);
  char v8 = SFAirDrop.TransferType.isPeerPayment.getter(v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if ((v8 & 1) != 0 && (((v3 | (v2 << 32)) & 0xFF00000000LL) != 0x300000000LL ? (BOOL v9 = (v3 & 2) == 0) : (BOOL v9 = 0), v9))
  {
    swift_bridgeObjectRelease(*(const char **)(v1 + 512));
    uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  v12,  "Hello response - peerPayment type is not supported by receiver device",  v13,  2u);
      swift_slowDealloc(v13, -1LL, -1LL);
    }

    uint64_t v14 = *(const char **)(v1 + 480);

    uint64_t v15 = type metadata accessor for SFAirDropSend.Failure(0LL);
    uint64_t v16 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v15, v16, 0LL, 0LL);
    uint64_t v18 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104LL))( v17,  enum case for SFAirDropSend.Failure.unsupportedConnection(_:),  v15);
    swift_willThrow(v18);
    swift_bridgeObjectRelease(v14);
    uint64_t v19 = *(void *)(v1 + 408);
    uint64_t v21 = *(void *)(v1 + 392);
    uint64_t v20 = *(void *)(v1 + 400);
    uint64_t v22 = *(void *)(v1 + 368);
    uint64_t v23 = *(void *)(v1 + 344);
    uint64_t v24 = *(void *)(v1 + 328);
    uint64_t v26 = *(void *)(v1 + 296);
    uint64_t v25 = *(void *)(v1 + 304);
    uint64_t v27 = *(void *)(v1 + 272);
    uint64_t v42 = *(void *)(v1 + 264);
    uint64_t v43 = *(void *)(v1 + 256);
    uint64_t v44 = *(void *)(v1 + 232);
    uint64_t v45 = *(void *)(v1 + 208);
    swift_task_dealloc(*(void *)(v1 + 416));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

  else
  {
    char v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 472);
    uint64_t v29 = *(const char **)(v1 + 480);
    uint64_t v31 = *(void *)(v1 + 392);
    uint64_t v32 = *(void *)(v1 + 376);
    uint64_t v33 = *(void **)(v1 + 176);
    uint64_t v34 = *(void *)(v1 + 160);
    sub_10021245C();
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    v30(v31, v34, v32);
    uint64_t v39 = dword_100653174;
    swift_bridgeObjectRetain(v29);
    id v40 = v33;
    uint64_t v41 = (void *)swift_task_alloc(v39);
    *(void *)(v1 + 544) = v41;
    *uint64_t v41 = v1;
    v41[1] = sub_100255C0C;
    return sub_1003DE730( *(void *)(v1 + 304),  *(void *)(v1 + 392),  v36,  v38,  *(void *)(v1 + 176),  *(void *)(v1 + 480),  0LL,  0LL);
  }

uint64_t sub_100255C0C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 544);
  *(void *)(*v1 + 552) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = *(void *)(v2 + 424);
    swift_bridgeObjectRelease(*(const char **)(v2 + 512));
    uint64_t v5 = sub_1002561D0;
    uint64_t v6 = v4;
  }

  else
  {
    uint64_t v6 = *(void *)(v2 + 424);
    uint64_t v5 = sub_100255C80;
  }

  return swift_task_switch(v5, v6, 0LL);
}

uint64_t sub_100255C80()
{
  uint64_t v1 = *(void *)(v0 + 512);
  uint64_t v2 = *(void *)(v0 + 272);
  sub_1001EF970(*(void *)(v0 + 304), *(void *)(v0 + 296));
  uint64_t v3 = sub_100183098(&qword_10064A100);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56LL);
  uint64_t v5 = v4(v2, 1LL, 1LL, v3);
  if (v1
    && ((*(unsigned int *)(v0 + 536) | ((unint64_t)*(unsigned __int8 *)(v0 + 540) << 32)) & 0xFF00000000LL) != 0x300000000LL
    && (*(_DWORD *)(v0 + 536) & 1) != 0
    && *(_BYTE *)(v0 + 581))
  {
    uint64_t v6 = *(void *)(v0 + 512);
    int64_t v7 = *(void *)(v6 + 16);
    char v8 = _swiftEmptyArrayStorage;
    if (v7)
    {
      uint64_t v30 = v3;
      uint64_t v9 = *(void *)(v0 + 224);
      uint64_t v10 = *(void *)(v0 + 200);
      uint64_t v32 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain((const char *)v6);
      sub_10018D718(0, v7, 0);
      uint64_t v29 = (const char *)v6;
      uint64_t v11 = v6 + ((*(unsigned __int8 *)(v10 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      uint64_t v31 = *(void *)(v10 + 72);
      uint64_t v12 = v10;
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      char v8 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v14 = *(void *)(v0 + 208);
        uint64_t v15 = *(void *)(v0 + 192);
        uint64_t v16 = v13(v14, v11, v15);
        SFSecurityScopedURL.url.getter(v16);
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v15);
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
        {
          sub_10018D718(0, v8[2] + 1LL, 1);
          char v8 = v32;
        }

        unint64_t v18 = v8[2];
        unint64_t v17 = v8[3];
        if (v18 >= v17 >> 1)
        {
          sub_10018D718(v17 > 1, v18 + 1, 1);
          char v8 = v32;
        }

        uint64_t v19 = *(void *)(v0 + 232);
        uint64_t v20 = *(void *)(v0 + 216);
        v8[2] = v18 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))( (unint64_t)v8 + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
        + *(void *)(v9 + 72) * v18,
          v19,
          v20);
        uint64_t v32 = v8;
        v11 += v31;
        --v7;
      }

      while (v7);
      swift_bridgeObjectRelease(v29);
      uint64_t v3 = v30;
    }

    uint64_t v22 = *(void *)(v0 + 264);
    uint64_t v21 = *(void *)(v0 + 272);
    uint64_t v23 = *(void *)(v0 + 248);
    uint64_t v24 = *(void *)(v0 + 256);
    uint64_t v25 = *(void *)(v0 + 240);
    SFAirDropSend.Request.id.getter(v5);
    sub_1001F12E8((const char *)v8, v24, v22);
    __n128 v26 = swift_bridgeObjectRelease((const char *)v8);
    (*(void (**)(uint64_t, uint64_t, __n128))(v23 + 8))(v24, v25, v26);
    sub_100187100(v21, &qword_100649F80);
    v4(v22, 0LL, 1LL, v3);
    sub_1001870BC(v22, v21, &qword_100649F80);
  }

  uint64_t v27 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  *(void *)(v0 + 56_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_100255F38;
  return SFProgressTask.finalValue.getter(v0 + 16, *(void *)(v0 + 280));
}

uint64_t sub_100255F38()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 560);
  *(void *)(*v1 + 568) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = *(void *)(v2 + 424);
    swift_bridgeObjectRelease(*(const char **)(v2 + 512));
    uint64_t v5 = sub_1002562C8;
    uint64_t v6 = v4;
  }

  else
  {
    uint64_t v6 = *(void *)(v2 + 424);
    uint64_t v5 = sub_100255FAC;
  }

  return swift_task_switch(v5, v6, 0LL);
}

uint64_t sub_100255FAC()
{
  int v35 = *(_DWORD *)(v0 + 536);
  char v34 = *(_BYTE *)(v0 + 540);
  uint64_t v36 = *(void *)(v0 + 512);
  uint64_t v16 = *(void *)(v0 + 416);
  uint64_t v17 = *(void *)(v0 + 408);
  uint64_t v18 = *(void *)(v0 + 400);
  uint64_t v19 = *(void *)(v0 + 392);
  uint64_t v20 = *(void *)(v0 + 368);
  uint64_t v21 = *(void *)(v0 + 344);
  uint64_t v22 = *(void *)(v0 + 328);
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v14 = *(void *)(v0 + 272);
  uint64_t v30 = *(void *)(v0 + 264);
  uint64_t v31 = *(void *)(v0 + 256);
  uint64_t v32 = *(void *)(v0 + 232);
  uint64_t v33 = *(void *)(v0 + 208);
  uint64_t v15 = *(void **)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 152);
  uint64_t v8 = *(void *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 136);
  uint64_t v9 = *(void *)(v0 + 120);
  __n128 v10 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 480));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1, v4, v10);
  __int128 v29 = *(_OWORD *)(v0 + 16);
  uint64_t v11 = *(void *)(v0 + 32);
  uint64_t v28 = *(void *)(v0 + 40);
  char v27 = *(_BYTE *)(v0 + 48);
  __int128 v25 = *(_OWORD *)(v0 + 72);
  __int128 v26 = *(_OWORD *)(v0 + 56);
  __int128 v23 = *(_OWORD *)(v0 + 104);
  __int128 v24 = *(_OWORD *)(v0 + 88);
  sub_1001A4B40(v2, v8, _s14descr1005DF7D1C10AskRequestVMa);
  sub_1001A4B84(v6, v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001870BC(v14, v5, &qword_100649F80);
  id v12 = v15;
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v14);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  *(_BYTE *)(v9 + 4) = v34;
  *(_DWORD *)uint64_t v9 = v35;
  *(void *)(v9 + 8) = v12;
  *(_OWORD *)(v9 + sub_100195658(v0 + 16) = v29;
  *(void *)(v9 + sub_100195658(v0 + 32) = v11;
  *(void *)(v9 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v28;
  *(_BYTE *)(v9 + 48) = v27;
  *(_OWORD *)(v9 + 56) = v26;
  *(_OWORD *)(v9 + 72) = v25;
  *(_OWORD *)(v9 + 88) = v24;
  *(_OWORD *)(v9 + 104) = v23;
  *(void *)(v9 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v36;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002561D0()
{
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v5 = *(void *)(v0 + 344);
  uint64_t v6 = *(void *)(v0 + 328);
  uint64_t v8 = *(void *)(v0 + 296);
  uint64_t v7 = *(void *)(v0 + 304);
  uint64_t v9 = *(void *)(v0 + 272);
  uint64_t v11 = *(void *)(v0 + 264);
  uint64_t v12 = *(void *)(v0 + 256);
  uint64_t v13 = *(void *)(v0 + 232);
  uint64_t v14 = *(void *)(v0 + 208);
  swift_task_dealloc(*(void *)(v0 + 416));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002562C8()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 288);
  uint64_t v5 = *(void *)(v0 + 272);
  swift_bridgeObjectRelease(*(const char **)(v0 + 480));
  sub_100187100(v5, &qword_100649F80);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  sub_1001A4BC8(v2, _s14descr1005DF7D1C10AskRequestVMa);
  uint64_t v6 = *(void *)(v0 + 408);
  uint64_t v8 = *(void *)(v0 + 392);
  uint64_t v7 = *(void *)(v0 + 400);
  uint64_t v9 = *(void *)(v0 + 368);
  uint64_t v10 = *(void *)(v0 + 344);
  uint64_t v11 = *(void *)(v0 + 328);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v12 = *(void *)(v0 + 304);
  uint64_t v14 = *(void *)(v0 + 272);
  uint64_t v16 = *(void *)(v0 + 264);
  uint64_t v17 = *(void *)(v0 + 256);
  uint64_t v18 = *(void *)(v0 + 232);
  uint64_t v19 = *(void *)(v0 + 208);
  swift_task_dealloc(*(void *)(v0 + 416));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002563FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  void v5[9] = a3;
  v5[7] = a1;
  uint64_t v6 = sub_100183098(&qword_100647608);
  v5[12] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = _s14descr1005DF7D1C10AskRequestVMa(0LL);
  v5[13] = v7;
  void v5[14] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SFNWInterfaceTypeCategory(0LL);
  v5[15] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v5[16] = v9;
  unint64_t v10 = (*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[17] = swift_task_alloc(v10);
  v5[18] = swift_task_alloc(v10);
  uint64_t v11 = sub_100183098(&qword_100656490);
  v5[19] = swift_task_alloc((*(void *)(*(void *)(v11 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for SFAirDrop.Progress(0LL);
  v5[20] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v5[21] = v13;
  v5[22] = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_100183098(&qword_10064A0F0);
  v5[23] = swift_task_alloc((*(void *)(*(void *)(v14 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_100183098(&qword_10064A0F8);
  _BYTE v5[24] = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  v5[25] = v16;
  v5[26] = swift_task_alloc((*(void *)(v16 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for SFNWInterfaceType(0LL);
  v5[27] = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  v5[28] = v18;
  unint64_t v19 = (*(void *)(v18 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[29] = swift_task_alloc(v19);
  v5[30] = swift_task_alloc(v19);
  v5[31] = swift_task_alloc(v19);
  uint64_t v20 = type metadata accessor for SFAirDropSend.Transfer.State(0LL);
  v5[32] = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  v5[33] = v21;
  v5[34] = swift_task_alloc((*(void *)(v21 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  v5[35] = v22;
  uint64_t v23 = *(void *)(v22 - 8);
  v5[36] = v23;
  v5[37] = swift_task_alloc((*(void *)(v23 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for SFAirDrop.DeclineAction(0LL);
  v5[38] = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  v5[39] = v25;
  v5[40] = swift_task_alloc((*(void *)(v25 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = sub_100183098(&qword_100649F80);
  v5[41] = swift_task_alloc((*(void *)(*(void *)(v26 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v5[42] = v27;
  uint64_t v28 = *(void *)(v27 - 8);
  v5[43] = v28;
  v5[44] = swift_task_alloc((*(void *)(v28 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = sub_100183098(&qword_10064A100);
  v5[45] = v29;
  uint64_t v30 = *(void *)(v29 - 8);
  v5[46] = v30;
  v5[47] = swift_task_alloc((*(void *)(v30 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v31 = static AirDropActor.shared;
  v5[48] = static AirDropActor.shared;
  return swift_task_switch(sub_1002566C0, v31, 0LL);
}

uint64_t sub_1002566C0()
{
  uint64_t v1 = *(const char **)(*(void *)(v0 + 88) + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_urls);
  *(void *)(v0 + 392) = v1;
  if (!v1) {
    goto LABEL_8;
  }
  uint64_t v2 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain(v1);
  uint64_t v3 = sub_10025F998(v2);
  if ((v3 & 1) == 0)
  {
    swift_bridgeObjectRelease(v1);
LABEL_8:
    uint64_t v15 = sub_1001A4B84(*(void *)(v0 + 56), *(void *)(v0 + 112), _s14descr1005DF7D1C10AskRequestVMa);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.default.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void *)(v0 + 112);
    if (v18)
    {
      uint64_t v21 = *(void *)(v0 + 96);
      uint64_t v20 = *(void *)(v0 + 104);
      uint64_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v23 = swift_slowAlloc(32LL, -1LL);
      uint64_t v89 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      sub_1001915A4(v19 + *(int *)(v20 + 20), v21, &qword_100647608);
      uint64_t v24 = type metadata accessor for SFAirDrop.TransferType(0LL);
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v21, 1LL, v24);
      uint64_t v27 = *(void *)(v0 + 96);
      if ((_DWORD)v26 == 1)
      {
        sub_100187100(*(void *)(v0 + 96), &qword_100647608);
        uint64_t v28 = (const char *)0x80000001005071A0LL;
        uint64_t v29 = 0xD000000000000020LL;
      }

      else
      {
        uint64_t v29 = SFAirDrop.TransferType.description.getter(v26);
        uint64_t v28 = v30;
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v24);
      }

      uint64_t v31 = *(void *)(v0 + 112);
      *(void *)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10018CDB4(v29, (unint64_t)v28, &v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v22 + 4, v22 + 12);
      swift_bridgeObjectRelease(v28);
      sub_1001A4BC8(v31, _s14descr1005DF7D1C10AskRequestVMa);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Send StateMachine UPLOAD SKIPPED {type: %s", v22, 0xCu);
      swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1LL, -1LL);
      swift_slowDealloc(v22, -1LL, -1LL);
    }

    else
    {

      sub_1001A4BC8(v19, _s14descr1005DF7D1C10AskRequestVMa);
    }

    uint64_t v32 = *(void *)(v0 + 352);
    uint64_t v34 = *(void *)(v0 + 320);
    uint64_t v33 = *(void *)(v0 + 328);
    uint64_t v35 = *(void *)(v0 + 296);
    uint64_t v36 = *(void *)(v0 + 272);
    uint64_t v37 = *(void *)(v0 + 240);
    uint64_t v38 = *(void *)(v0 + 248);
    uint64_t v39 = *(void *)(v0 + 232);
    uint64_t v40 = *(void *)(v0 + 208);
    uint64_t v77 = *(void *)(v0 + 184);
    uint64_t v78 = *(void *)(v0 + 176);
    uint64_t v80 = *(void *)(v0 + 152);
    uint64_t v82 = *(void *)(v0 + 144);
    uint64_t v83 = *(void *)(v0 + 136);
    uint64_t v85 = *(void *)(v0 + 112);
    uint64_t v87 = *(void *)(v0 + 96);
    swift_task_dealloc(*(void *)(v0 + 376));
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v38);
    swift_task_dealloc(v37);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v80);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v85);
    swift_task_dealloc(v87);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  *(void *)(v0 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Send StateMachine UPLOAD START", v6, 2u);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  uint64_t v7 = *(void *)(v0 + 360);
  uint64_t v8 = *(void *)(v0 + 368);
  uint64_t v9 = *(void *)(v0 + 80);

  unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v10(v9, 1LL, v7) == 1)
  {
    uint64_t v11 = *(void *)(v0 + 376);
    uint64_t v13 = *(void *)(v0 + 344);
    uint64_t v12 = *(void *)(v0 + 352);
    uint64_t v14 = *(void *)(v0 + 336);
    SFAirDropSend.Request.id.getter();
    sub_1001F12E8(v1, v12, v11);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }

  else
  {
    uint64_t v42 = *(void *)(v0 + 360);
    uint64_t v43 = *(void *)(v0 + 328);
    sub_1001915A4(*(void *)(v0 + 80), v43, &qword_100649F80);
    uint64_t result = v10(v43, 1LL, v42);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      return result;
    }

    (*(void (**)(void, void, void))(*(void *)(v0 + 368) + 32LL))( *(void *)(v0 + 376),  *(void *)(v0 + 328),  *(void *)(v0 + 360));
  }

  uint64_t v44 = *(void *)(v0 + 376);
  uint64_t v45 = *(void *)(v0 + 320);
  uint64_t v76 = v45;
  uint64_t v79 = *(void *)(v0 + 360);
  uint64_t v81 = *(void *)(v0 + 312);
  uint64_t v46 = *(void *)(v0 + 296);
  uint64_t v47 = *(void *)(v0 + 280);
  uint64_t v48 = *(void *)(v0 + 288);
  uint64_t v49 = *(void **)(v0 + 272);
  uint64_t v84 = *(void *)(v0 + 304);
  uint64_t v86 = *(void *)(v0 + 264);
  uint64_t v88 = *(void *)(v0 + 256);
  uint64_t v50 = *(char **)(v0 + 64);
  uint64_t v51 = *(void *)(v0 + 88)
      + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  __n128 v52 = swift_beginAccess(v51, v0 + 16, 0LL, 0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v48 + 16))(v46, v51, v47, v52);
  sub_100250FD0(v46, 0x726566736E617274LL, (void *)0xEC000000676E6972LL, v44, v50, v45);
  uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
  *(void *)(v0 + 408) = v53;
  v53(v46, v47);
  uint64_t v54 = sub_100183098(&qword_10064A108);
  *(void *)(v0 + 4sub_100195658(v0 + 16) = v54;
  __int128 v55 = (void *)((char *)v49 + *(int *)(v54 + 64));
  __int128 v56 = (char *)v49 + *(int *)(v54 + 80);
  sub_10020C5CC();
  *uint64_t v49 = v57;
  v49[1] = v58;
  SFProgressTask.initialValue.getter(v79);
  *__int128 v55 = 0LL;
  v55[1] = 0LL;
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 16);
  *(void *)(v0 + 424) = v59;
  v59(v56, v76, v84);
  *(_DWORD *)(v0 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = enum case for SFAirDropSend.Transfer.State.transferring(_:);
  uint64_t v60 = *(void (**)(void *))(v86 + 104);
  *(void *)(v0 + 4sub_100195658(v0 + 32) = v60;
  v60(v49);
  sub_100217DD8((uint64_t)v49, v46);
  uint64_t v61 = *(void (**)(void *, uint64_t))(v86 + 8);
  *(void *)(v0 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v61;
  v61(v49, v88);
  v53(v46, v47);
  uint64_t v62 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection;
  *(void *)(v0 + 448) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection;
  uint64_t v63 = *(void *)&v50[v62];
  if (v63)
  {
    uint64_t v64 = *(void *)(v0 + 248);
    swift_retain(*(void *)&v50[v62]);
    sub_100410970(v64);
    swift_release(v63);
  }

  else
  {
    if (qword_100643F08 != -1) {
      swift_once(&qword_100643F08, sub_1001EE100);
    }
    uint64_t v65 = type metadata accessor for Logger(0LL);
    uint64_t v66 = sub_100186DE4(v65, (uint64_t)qword_1006473E0);
    uint64_t v67 = (os_log_s *)Logger.logObject.getter(v66);
    os_log_type_t v68 = static os_log_type_t.error.getter(v67);
    if (os_log_type_enabled(v67, v68))
    {
      char v69 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)char v69 = 0;
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "UPLOAD connection is not active", v69, 2u);
      swift_slowDealloc(v69, -1LL, -1LL);
    }

    uint64_t v70 = *(void *)(v0 + 248);
    uint64_t v71 = *(void *)(v0 + 216);
    uint64_t v72 = *(void *)(v0 + 224);

    (*(void (**)(uint64_t, void, uint64_t))(v72 + 104))(v70, enum case for SFNWInterfaceType.other(_:), v71);
  }

  SFProgressTask.makeAsyncIterator()(*(void *)(v0 + 360));
  uint64_t v73 = static AirDropActor.shared;
  uint64_t v74 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  *(void *)(v0 + 456) = v74;
  uint64_t v75 = (void *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(void *)(v0 + 464) = v75;
  *uint64_t v75 = v0;
  v75[1] = sub_100256E58;
  return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF( *(void *)(v0 + 184),  v73,  v74,  *(void *)(v0 + 192),  v0 + 48);
}

uint64_t sub_100256E58()
{
  uint64_t v2 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 464));
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 384);
    swift_bridgeObjectRelease(*(const char **)(v2 + 392));
    uint64_t v4 = sub_1002577D0;
    uint64_t v5 = v3;
  }

  else
  {
    *(_DWORD *)(v2 + 484) = enum case for SFNWInterfaceType.other(_:);
    *(_DWORD *)(v2 + 488) = enum case for SFNWInterfaceTypeCategory.regular(_:);
    uint64_t v5 = *(void *)(v2 + 384);
    uint64_t v4 = sub_100256EE4;
  }

  return swift_task_switch(v4, v5, 0LL);
}

uint64_t sub_100256EE4()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1LL, v3) == 1)
  {
    uint64_t v125 = *(void (**)(void *, uint64_t))(v0 + 440);
    unsigned int v106 = *(_DWORD *)(v0 + 480);
    uint64_t v108 = *(void (**)(void *, void, uint64_t))(v0 + 432);
    uint64_t v4 = *(int **)(v0 + 416);
    uint64_t v97 = *(void *)(v0 + 392);
    uint64_t v101 = *(void *)(v0 + 320);
    uint64_t v5 = *(void *)(v0 + 296);
    uint64_t v99 = *(void *)(v0 + 304);
    uint64_t v6 = *(void **)(v0 + 272);
    uint64_t v113 = *(void *)(v0 + 280);
    uint64_t v102 = *(void *)(v0 + 256);
    uint64_t v104 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 424);
    uint64_t v116 = *(void *)(v0 + 224);
    uint64_t v119 = *(void *)(v0 + 216);
    uint64_t v122 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
    uint64_t v110 = *(void *)(v0 + 152);
    (*(void (**)(void, void))(*(void *)(v0 + 200) + 8LL))(*(void *)(v0 + 208), *(void *)(v0 + 192));
    uint64_t v7 = (void *)((char *)v6 + v4[12]);
    uint64_t v8 = (void *)((char *)v6 + v4[16]);
    uint64_t v9 = (char *)v6 + v4[20];
    sub_10020C5CC();
    *uint64_t v6 = v10;
    v6[1] = v11;
    *uint64_t v7 = v97;
    (*(void (**)(void *, void, uint64_t))(v2 + 104))( v7,  enum case for SFAirDrop.Progress.completed(_:),  v3);
    *uint64_t v8 = 0LL;
    v8[1] = 0LL;
    v104(v9, v101, v99);
    v108(v6, v106, v102);
    sub_100217DD8((uint64_t)v6, v5);
    v125(v6, v102);
    v122(v5, v113);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v116 + 56))(v110, 1LL, 1LL, v119);
    sub_1002182A8(v110, v5);
    sub_100187100(v110, &qword_100656490);
    uint64_t v12 = ((uint64_t (*)(uint64_t, uint64_t))v122)(v5, v113);
    uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Send StateMachine UPLOAD END", v15, 2u);
      swift_slowDealloc(v15, -1LL, -1LL);
    }

    uint64_t v16 = *(void *)(v0 + 368);
    uint64_t v126 = *(void *)(v0 + 360);
    uint64_t v129 = *(void *)(v0 + 376);
    uint64_t v17 = *(void *)(v0 + 312);
    uint64_t v18 = *(void *)(v0 + 320);
    uint64_t v19 = *(void *)(v0 + 304);
    uint64_t v20 = *(void *)(v0 + 248);
    uint64_t v22 = *(void *)(v0 + 216);
    uint64_t v21 = *(void *)(v0 + 224);

    __n128 v23 = sub_1001F3FA4(0);
    (*(void (**)(uint64_t, uint64_t, __n128))(v21 + 8))(v20, v22, v23);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v129, v126);
    uint64_t v24 = *(void *)(v0 + 352);
    uint64_t v26 = *(void *)(v0 + 320);
    uint64_t v25 = *(void *)(v0 + 328);
    uint64_t v27 = *(void *)(v0 + 296);
    uint64_t v28 = *(void *)(v0 + 272);
    uint64_t v29 = *(void *)(v0 + 240);
    uint64_t v30 = *(void *)(v0 + 248);
    uint64_t v31 = *(void *)(v0 + 232);
    uint64_t v32 = *(void *)(v0 + 208);
    uint64_t v111 = *(void *)(v0 + 184);
    uint64_t v114 = *(void *)(v0 + 176);
    uint64_t v117 = *(void *)(v0 + 152);
    uint64_t v120 = *(void *)(v0 + 144);
    uint64_t v123 = *(void *)(v0 + 136);
    uint64_t v127 = *(void *)(v0 + 112);
    uint64_t v130 = *(void *)(v0 + 96);
    swift_task_dealloc(*(void *)(v0 + 376));
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v30);
    swift_task_dealloc(v29);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v111);
    swift_task_dealloc(v114);
    swift_task_dealloc(v117);
    swift_task_dealloc(v120);
    swift_task_dealloc(v123);
    swift_task_dealloc(v127);
    swift_task_dealloc(v130);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    uint64_t v34 = *(void *)(v0 + 448);
    uint64_t v35 = *(void *)(v0 + 64);
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*(void *)(v0 + 176), v1, v3);
    uint64_t v36 = *(void *)(v35 + v34);
    if (v36)
    {
      uint64_t v37 = *(void *)(v0 + 240);
      swift_retain(v36);
      sub_100410970(v37);
      swift_release(v36);
    }

    else
    {
      if (qword_100643F08 != -1) {
        swift_once(&qword_100643F08, sub_1001EE100);
      }
      uint64_t v38 = type metadata accessor for Logger(0LL);
      uint64_t v39 = sub_100186DE4(v38, (uint64_t)qword_1006473E0);
      uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
      os_log_type_t v41 = static os_log_type_t.error.getter(v40);
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v42 = 0;
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "UPLOAD connection is not active", v42, 2u);
        swift_slowDealloc(v42, -1LL, -1LL);
      }

      uint64_t v43 = *(unsigned int *)(v0 + 484);
      uint64_t v44 = *(void *)(v0 + 240);
      uint64_t v45 = *(void *)(v0 + 216);
      uint64_t v46 = *(void *)(v0 + 224);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 104))(v44, v43, v45);
    }

    unsigned int v109 = *(_DWORD *)(v0 + 480);
    uint64_t v105 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 424);
    uint64_t v47 = *(int **)(v0 + 416);
    uint64_t v118 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
    uint64_t v121 = *(void (**)(void *, uint64_t))(v0 + 440);
    uint64_t v98 = *(void *)(v0 + 304);
    uint64_t v100 = *(void *)(v0 + 320);
    uint64_t v107 = *(void *)(v0 + 296);
    uint64_t v48 = *(void **)(v0 + 272);
    uint64_t v112 = *(void (**)(void *, void, uint64_t))(v0 + 432);
    uint64_t v115 = *(void *)(v0 + 280);
    uint64_t v103 = *(void *)(v0 + 256);
    uint64_t v131 = *(void *)(v0 + 248);
    uint64_t v124 = *(void *)(v0 + 240);
    uint64_t v128 = *(void *)(v0 + 216);
    uint64_t v49 = *(void *)(v0 + 168);
    uint64_t v50 = *(void *)(v0 + 176);
    uint64_t v51 = *(void *)(v0 + 160);
    __n128 v52 = (char *)v48 + v47[12];
    uint64_t v53 = (void *)((char *)v48 + v47[16]);
    uint64_t v54 = (char *)v48 + v47[20];
    sub_10020C5CC();
    *uint64_t v48 = v55;
    v48[1] = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v52, v50, v51);
    uint64_t *v53 = sub_10021696C();
    v53[1] = v57;
    v105(v54, v100, v98);
    v112(v48, v109, v103);
    sub_100217DD8((uint64_t)v48, v107);
    v121(v48, v103);
    v118(v107, v115);
    uint64_t v58 = sub_100183F14( &qword_100649DD0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFNWInterfaceType,  (uint64_t)&protocol conformance descriptor for SFNWInterfaceType);
    uint64_t v59 = dispatch thunk of static Equatable.== infix(_:_:)(v124, v131, v128, v58);
    if ((v59 & 1) == 0)
    {
      uint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 408);
      uint64_t v61 = *(void *)(v0 + 296);
      uint64_t v62 = *(void *)(v0 + 280);
      uint64_t v63 = *(void *)(v0 + 216);
      uint64_t v64 = *(void *)(v0 + 224);
      uint64_t v65 = *(void *)(v0 + 152);
      (*(void (**)(uint64_t, void, uint64_t))(v64 + 16))(v65, *(void *)(v0 + 240), v63);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v64 + 56))(v65, 0LL, 1LL, v63);
      sub_1002182A8(v65, v61);
      sub_100187100(v65, &qword_100656490);
      uint64_t v59 = v60(v61, v62);
    }

    uint64_t v66 = *(unsigned int *)(v0 + 488);
    uint64_t v67 = *(void *)(v0 + 240);
    uint64_t v132 = *(void *)(v0 + 232);
    uint64_t v69 = *(void *)(v0 + 216);
    uint64_t v68 = *(void *)(v0 + 224);
    uint64_t v71 = *(void *)(v0 + 136);
    uint64_t v70 = *(void *)(v0 + 144);
    uint64_t v72 = *(void *)(v0 + 120);
    uint64_t v73 = *(void *)(v0 + 128);
    SFNWInterfaceType.category()(v59);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 104))(v71, v66, v72);
    uint64_t v74 = sub_100183F14( &qword_10064A110,  (uint64_t (*)(uint64_t))&type metadata accessor for SFNWInterfaceTypeCategory,  (uint64_t)&protocol conformance descriptor for SFNWInterfaceTypeCategory);
    char v75 = dispatch thunk of static Equatable.== infix(_:_:)(v70, v71, v72, v74);
    uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
    v76(v71, v72);
    v76(v70, v72);
    uint64_t v77 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v132, v67, v69);
    if ((v75 & 1) != 0)
    {
      uint64_t v78 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v0 + 224) + 8LL);
      v78(*(void *)(v0 + 232), *(void *)(v0 + 216));
    }

    else
    {
      uint64_t v80 = *(void *)(v0 + 224);
      uint64_t v79 = *(void *)(v0 + 232);
      uint64_t v133 = *(void *)(v0 + 216);
      uint64_t v82 = *(void *)(v0 + 136);
      uint64_t v81 = *(void *)(v0 + 144);
      uint64_t v83 = *(void *)(v0 + 120);
      uint64_t v84 = SFNWInterfaceType.category()(v77);
      SFNWInterfaceType.category()(v84);
      char v85 = dispatch thunk of static Equatable.== infix(_:_:)(v81, v82, v83, v74);
      v76(v82, v83);
      v76(v81, v83);
      uint64_t v78 = *(uint64_t (**)(uint64_t, uint64_t))(v80 + 8);
      uint64_t v86 = v78(v79, v133);
      if ((v85 & 1) == 0)
      {
        uint64_t v87 = (os_log_s *)Logger.logObject.getter(v86);
        os_log_type_t v88 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v87, v88))
        {
          uint64_t v89 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v89 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v87,  v88,  "AirDrop interface changed to high priority category",  v89,  2u);
          swift_slowDealloc(v89, -1LL, -1LL);
        }

        sub_100218CC0(3.0);
      }
    }

    uint64_t v90 = *(void *)(v0 + 456);
    uint64_t v92 = *(void *)(v0 + 240);
    uint64_t v91 = *(void *)(v0 + 248);
    uint64_t v94 = *(void *)(v0 + 216);
    uint64_t v93 = *(void *)(v0 + 224);
    (*(void (**)(void, void))(*(void *)(v0 + 168) + 8LL))(*(void *)(v0 + 176), *(void *)(v0 + 160));
    v78(v91, v94);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 32))(v91, v92, v94);
    uint64_t v95 = static AirDropActor.shared;
    uint64_t v96 = (void *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(void *)(v0 + 472) = v96;
    *uint64_t v96 = v0;
    v96[1] = sub_100257764;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF( *(void *)(v0 + 184),  v95,  v90,  *(void *)(v0 + 192),  v0 + 48);
  }

uint64_t sub_100257764()
{
  uint64_t v2 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 472));
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 384);
    swift_bridgeObjectRelease(*(const char **)(v2 + 392));
    uint64_t v4 = sub_1002577D0;
    uint64_t v5 = v3;
  }

  else
  {
    uint64_t v5 = *(void *)(v2 + 384);
    uint64_t v4 = sub_100256EE4;
  }

  return swift_task_switch(v4, v5, 0LL);
}

uint64_t sub_1002577D0()
{
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v11 = *(void *)(v0 + 360);
  uint64_t v12 = *(void *)(v0 + 352);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 312);
  uint64_t v13 = *(void *)(v0 + 328);
  uint64_t v14 = *(void *)(v0 + 296);
  uint64_t v6 = *(void *)(v0 + 248);
  uint64_t v15 = *(void *)(v0 + 272);
  uint64_t v16 = *(void *)(v0 + 240);
  uint64_t v7 = *(void *)(v0 + 224);
  uint64_t v9 = *(void *)(v0 + 208);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v17 = *(void *)(v0 + 232);
  uint64_t v18 = *(void *)(v0 + 184);
  uint64_t v19 = *(void *)(v0 + 176);
  uint64_t v20 = *(void *)(v0 + 152);
  uint64_t v21 = *(void *)(v0 + 144);
  uint64_t v22 = *(void *)(v0 + 136);
  uint64_t v23 = *(void *)(v0 + 112);
  uint64_t v24 = *(void *)(v0 + 96);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 200) + 8LL))(v9, *(void *)(v0 + 192));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v11);
  swift_task_dealloc(v1);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v3);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v6);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v9);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100257944(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)(v5 + 112_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v4;
  *(_BYTE *)(v5 + 1793) = a4;
  *(void *)(v5 + 1112) = a3;
  *(void *)(v5 + 1104) = a2;
  *(void *)(v5 + 1096) = a1;
  uint64_t v6 = _s14descr1005DF7D1C10AskRequestVMa(0LL);
  *(void *)(v5 + 1128) = v6;
  *(void *)(v5 + 1136) = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_10064A000);
  *(void *)(v5 + 1144) = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_10064A008);
  *(void *)(v5 + 1152) = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)(v5 + 116_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v9;
  unint64_t v10 = (*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v5 + 1168) = swift_task_alloc(v10);
  *(void *)(v5 + 1176) = swift_task_alloc(v10);
  uint64_t v11 = _s14descr1005DEB71C16ExchangeResponseVMa(0LL);
  *(void *)(v5 + 1184) = swift_task_alloc((*(void *)(*(void *)(v11 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  *(void *)(v5 + 1192) = swift_task_alloc((*(void *)(*(void *)(v12 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v13 = (*(void *)(*(void *)(_s14descr1005DEB71C15ExchangeRequestVMa(0LL) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v5 + 120_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = swift_task_alloc(v13);
  *(void *)(v5 + 1208) = swift_task_alloc(v13);
  uint64_t v14 = type metadata accessor for SFAirDropSend.Failure(0LL);
  *(void *)(v5 + 12sub_100195658(v0 + 16) = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  *(void *)(v5 + 1224) = v15;
  *(void *)(v5 + 12sub_100195658(v0 + 32) = swift_task_alloc((*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for SFAirDropSend.Transfer.State(0LL);
  *(void *)(v5 + 124_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  *(void *)(v5 + 1248) = v17;
  *(void *)(v5 + 1256) = swift_task_alloc((*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  *(void *)(v5 + 1264) = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  *(void *)(v5 + 1272) = v19;
  *(void *)(v5 + 128_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = swift_task_alloc((*(void *)(v19 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_100183098(&qword_10064A010);
  *(void *)(v5 + 1288) = swift_task_alloc((*(void *)(*(void *)(v20 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v21 = (*(void *)(*(void *)(sub_100183098(&qword_100649F50) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v5 + 1296) = swift_task_alloc(v21);
  *(void *)(v5 + 1304) = swift_task_alloc(v21);
  *(void *)(v5 + 1312) = swift_task_alloc(v21);
  uint64_t v22 = type metadata accessor for SFAirDrop.ContactInfo(0LL);
  *(void *)(v5 + 132_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v22;
  uint64_t v23 = *(void *)(v22 - 8);
  *(void *)(v5 + 1328) = v23;
  unint64_t v24 = (*(void *)(v23 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v5 + 1336) = swift_task_alloc(v24);
  *(void *)(v5 + 1344) = swift_task_alloc(v24);
  *(void *)(v5 + 1352) = swift_task_alloc(v24);
  unint64_t v25 = (*(void *)(*(void *)(sub_100183098(&qword_100649F88) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v5 + 136_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = swift_task_alloc(v25);
  *(void *)(v5 + 1368) = swift_task_alloc(v25);
  *(void *)(v5 + 1376) = swift_task_alloc(v25);
  uint64_t v26 = type metadata accessor for SFAirDrop.ContactRequest(0LL);
  *(void *)(v5 + 1384) = v26;
  uint64_t v27 = *(void *)(v26 - 8);
  *(void *)(v5 + 1392) = v27;
  unint64_t v28 = (*(void *)(v27 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v5 + 140_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = swift_task_alloc(v28);
  *(void *)(v5 + 1408) = swift_task_alloc(v28);
  *(void *)(v5 + 14sub_100195658(v0 + 16) = swift_task_alloc(v28);
  *(void *)(v5 + 1424) = swift_task_alloc(v28);
  *(void *)(v5 + 14sub_100195658(v0 + 32) = swift_task_alloc(v28);
  *(void *)(v5 + 144_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = swift_task_alloc(v28);
  unint64_t v29 = (*(void *)(*(void *)(sub_100183098(&qword_100647608) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v5 + 1448) = swift_task_alloc(v29);
  *(void *)(v5 + 1456) = swift_task_alloc(v29);
  uint64_t v30 = type metadata accessor for SFAirDrop.TransferType(0LL);
  *(void *)(v5 + 1464) = v30;
  uint64_t v31 = *(void *)(v30 - 8);
  *(void *)(v5 + 1472) = v31;
  unint64_t v32 = (*(void *)(v31 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v5 + 148_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = swift_task_alloc(v32);
  *(void *)(v5 + 1488) = swift_task_alloc(v32);
  *(void *)(v5 + 1496) = swift_task_alloc(v32);
  *(void *)(v5 + 1504) = swift_task_alloc(v32);
  *(void *)(v5 + 1512) = swift_task_alloc(v32);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v33 = static AirDropActor.shared;
  *(void *)(v5 + 152_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = static AirDropActor.shared;
  return swift_task_switch(sub_100257D0C, v33, 0LL);
}

uint64_t sub_100257D0C()
{
  uint64_t v1 = *(void *)(v0 + 1472);
  uint64_t v2 = *(void *)(v0 + 1464);
  uint64_t v3 = *(void *)(v0 + 1456);
  uint64_t v4 = *(void *)(v0 + 1128);
  sub_1001915A4(*(void *)(v0 + 1096) + *(int *)(v4 + 20), v3, &qword_100647608);
  uint64_t v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v5(v3, 1LL, v2) == 1)
  {
    sub_100187100(*(void *)(v0 + 1456), &qword_100647608);
    goto LABEL_15;
  }

  uint64_t v6 = (*(uint64_t (**)(void, void, void))(*(void *)(v0 + 1472) + 32LL))( *(void *)(v0 + 1512),  *(void *)(v0 + 1456),  *(void *)(v0 + 1464));
  SFAirDrop.TransferType.exchangeType.getter(v6);
  uint64_t v8 = v7;
  __n128 v9 = swift_bridgeObjectRelease(v7);
  if (!v8)
  {
    (*(void (**)(void, void, __n128))(*(void *)(v0 + 1472) + 8LL))( *(void *)(v0 + 1512),  *(void *)(v0 + 1464),  v9);
LABEL_15:
    uint64_t v34 = *(void **)(v0 + 1120);
    sub_1001A4B84(*(void *)(v0 + 1096), *(void *)(v0 + 1136), _s14descr1005DF7D1C10AskRequestVMa);
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v198 = v4;
      uint64_t v37 = *(void *)(v0 + 1328);
      uint64_t v38 = *(void *)(v0 + 1320);
      uint64_t v39 = *(void *)(v0 + 1296);
      uint64_t v40 = swift_slowAlloc(38LL, -1LL);
      uint64_t v190 = swift_slowAlloc(64LL, -1LL);
      v225[0] = v190;
      *(_DWORD *)uint64_t v40 = 141558787;
      *(void *)(v0 + 104_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 1752392040LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1040, v0 + 1048, v40 + 4, v40 + 12);
      *(_WORD *)(v40 + 12) = 2081;
      sub_10024AA20(v39);
      uint64_t v196 = v35;
      os_log_type_t v193 = v36;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v39, 1LL, v38))
      {
        sub_100187100(*(void *)(v0 + 1296), &qword_100649F50);
        uint64_t v41 = 0xD00000000000001CLL;
        uint64_t v42 = (const char *)0x8000000100507180LL;
      }

      else
      {
        uint64_t v66 = *(void *)(v0 + 1336);
        uint64_t v67 = *(void *)(v0 + 1328);
        uint64_t v68 = *(void *)(v0 + 1320);
        uint64_t v69 = *(void *)(v0 + 1296);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v66, v69, v68);
        uint64_t v70 = sub_100187100(v69, &qword_100649F50);
        uint64_t v41 = SFAirDrop.ContactInfo.description.getter(v70);
        uint64_t v42 = v71;
        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
      }

      uint64_t v72 = *(void *)(v0 + 1464);
      uint64_t v73 = *(void *)(v0 + 1448);
      uint64_t v74 = *(void *)(v0 + 1136);
      char v75 = *(void **)(v0 + 1120);
      *(void *)(v0 + 1048) = sub_10018CDB4(v41, (unint64_t)v42, v225);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1048, v0 + 1056, v40 + 14, v40 + 22);
      swift_bridgeObjectRelease(v42);

      *(_WORD *)(v40 + 22) = 1024;
      unint64_t v76 = sub_10025F338();
      uint64_t v77 = (void *)static NSUserDefaults.airdrop.getter(v76);
      char v78 = SFAirDropUserDefaults.alwaysExchangeContacts.getter();

      *(_DWORD *)(v0 + 1784) = v78 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1784, v0 + 1788, v40 + 24, v40 + 28);
      *(_WORD *)(v40 + 28) = 2080;
      sub_1001915A4(v74 + *(int *)(v198 + 20), v73, &qword_100647608);
      uint64_t v79 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v73, 1LL, v72);
      if ((_DWORD)v79 == 1)
      {
        sub_100187100(*(void *)(v0 + 1448), &qword_100647608);
        uint64_t v80 = 0xD000000000000020LL;
        uint64_t v81 = (const char *)0x80000001005071A0LL;
      }

      else
      {
        uint64_t v82 = *(void *)(v0 + 1472);
        uint64_t v83 = *(void *)(v0 + 1464);
        uint64_t v84 = *(void *)(v0 + 1448);
        uint64_t v80 = SFAirDrop.TransferType.description.getter(v79);
        uint64_t v81 = v85;
        (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v84, v83);
      }

      uint64_t v86 = *(void *)(v0 + 1136);
      *(void *)(v0 + 10sub_100195658(v0 + 32) = sub_10018CDB4(v80, (unint64_t)v81, v225);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1032, v0 + 1040, v40 + 30, v40 + 38);
      swift_bridgeObjectRelease(v81);
      sub_1001A4BC8(v86, _s14descr1005DF7D1C10AskRequestVMa);
      _os_log_impl( (void *)&_mh_execute_header,  v196,  v193,  "Send StateMachine CONTACTS SKIPPED - Not needed {senderContact: %{private,mask.hash}s, alwaysExchangeContacts: % {BOOL}d, type: %s}",  (uint8_t *)v40,  0x26u);
      swift_arrayDestroy(v190, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v190, -1LL, -1LL);
      swift_slowDealloc(v40, -1LL, -1LL);
    }

    else
    {
      uint64_t v43 = *(void *)(v0 + 1136);
      uint64_t v44 = *(void **)(v0 + 1120);

      sub_1001A4BC8(v43, _s14descr1005DF7D1C10AskRequestVMa);
    }

uint64_t sub_100258E18()
{
  uint64_t v1 = v0[161];
  uint64_t v2 = swift_task_alloc(32LL);
  v0[197] = v2;
  *(void *)(v2 + sub_100195658(v0 + 16) = v1;
  uint64_t v3 = swift_task_alloc(32LL);
  v0[198] = v3;
  *(void *)(v3 + sub_100195658(v0 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[199] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100258EC0;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)( v0[179],  &unk_10064A020,  v2,  sub_10025F3CC,  v3,  0LL,  0LL,  v0[173]);
}

uint64_t sub_100258EC0()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 1592LL);
  *(void *)(*(void *)v1 + 1600LL) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_1002594A0;
    uint64_t v5 = 0LL;
  }

  else
  {
    uint64_t v6 = v2[198];
    uint64_t v7 = v2[197];
    uint64_t v8 = v2[190];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    uint64_t v4 = sub_100258F40;
    uint64_t v5 = v8;
  }

  return swift_task_switch(v4, v5, 0LL);
}

uint64_t sub_100258F40()
{
  uint64_t v1 = (*(uint64_t (**)(void, void, void))(v0[174] + 32LL))(v0[180], v0[179], v0[173]);
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Send StateMachine SHARE CONTACT PERMISSION END", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Send StateMachine EXCHANGING START", v8, 2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  uint64_t v71 = (void (*)(uint64_t, uint64_t))v0[196];
  uint64_t v65 = (void (*)(uint64_t, uint64_t))v0[195];
  __n128 v9 = (void (*)(uint64_t, void, uint64_t))v0[194];
  uint64_t v10 = v0[180];
  uint64_t v11 = v0[174];
  uint64_t v12 = v0[173];
  uint64_t v80 = v0[169];
  uint64_t v74 = v0[166];
  uint64_t v77 = v0[165];
  uint64_t v68 = v0[161];
  uint64_t v13 = v0[160];
  uint64_t v63 = v0[158];
  uint64_t v14 = v0[157];
  uint64_t v15 = v0[155];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, v10, v12);
  v9(v14, enum case for SFAirDropSend.Transfer.State.exchanging(_:), v15);
  sub_100217DD8(v14, v13);
  v65(v14, v15);
  v71(v13, v63);
  sub_100187100(v68, &qword_10064A010);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 8))(v80, v77);
  uint64_t v17 = v0[166];
  uint64_t v18 = v0[165];
  uint64_t v19 = v0[163];
  SFAirDrop.ContactRequest.contact.getter(v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v19, 1LL, v18) == 1)
  {
    sub_100187100(v0[163], &qword_100649F50);
    uint64_t v20 = 0LL;
    BOOL v21 = 0LL;
  }

  else
  {
    uint64_t v22 = v0[166];
    uint64_t v23 = v0[165];
    uint64_t v24 = v0[163];
    uint64_t v20 = SFAirDrop.ContactInfo.accountHandle.getter();
    BOOL v21 = v25;
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }

  uint64_t v26 = v0[180];
  uint64_t v27 = v0[178];
  uint64_t v28 = v0[174];
  uint64_t v29 = v0[173];
  sub_1002E03F4(v20, v21, v0 + 98);
  uint64_t v30 = v0[98];
  unint64_t v31 = (const char *)v0[99];
  unint64_t v81 = v0[101];
  uint64_t v83 = v0[100];
  uint64_t v78 = v0[102];
  uint64_t v72 = v0[104];
  unint64_t v75 = v0[103];
  uint64_t v66 = v0[106];
  unint64_t v69 = v0[105];
  uint64_t v62 = v0[108];
  __n128 v64 = (const char *)v0[107];
  __n128 v32 = swift_bridgeObjectRelease(v21);
  (*(void (**)(uint64_t, void, uint64_t, __n128))(v28 + 104))( v27,  enum case for SFAirDrop.ContactRequest.notNeeded(_:),  v29,  v32);
  char v33 = static SFAirDrop.ContactRequest.== infix(_:_:)(v26, v27);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v0[201] = v34;
  v34(v27, v29);
  if ((v33 & 1) != 0)
  {
    uint64_t v30 = 0LL;
    unint64_t v31 = 0LL;
    uint64_t v35 = 0LL;
    unint64_t v36 = 0LL;
    uint64_t v37 = 0LL;
    unint64_t v38 = 0LL;
    uint64_t v39 = 0LL;
    unint64_t v40 = 0LL;
    uint64_t v41 = 0LL;
    uint64_t v42 = 0LL;
    uint64_t v43 = 0LL;
  }

  else
  {
    sub_10025F56C( v0 + 98,  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F43C);
    unint64_t v36 = v81;
    uint64_t v35 = v83;
    uint64_t v37 = v78;
    uint64_t v39 = v72;
    unint64_t v38 = v75;
    uint64_t v41 = v66;
    unint64_t v40 = v69;
    uint64_t v43 = v62;
    uint64_t v42 = v64;
  }

  uint64_t v79 = v37;
  unint64_t v82 = v36;
  uint64_t v73 = v39;
  unint64_t v76 = v38;
  uint64_t v67 = v41;
  unint64_t v70 = v40;
  v0[212] = v43;
  v0[211] = v42;
  v0[210] = v41;
  v0[209] = v40;
  v0[208] = v39;
  v0[207] = v38;
  v0[206] = v37;
  v0[205] = v36;
  v0[204] = v35;
  v0[203] = v31;
  v0[202] = v30;
  uint64_t v60 = v0[178];
  uint64_t v44 = v41;
  uint64_t v45 = v42;
  uint64_t v46 = v0[174];
  uint64_t v47 = v0[160];
  uint64_t v48 = v31;
  uint64_t v49 = v0[159];
  uint64_t v50 = v0[158];
  uint64_t v61 = v0[151];
  uint64_t v51 = v0[149];
  uint64_t v52 = v0[140];
  v0[87] = v30;
  v0[88] = v48;
  v0[89] = v35;
  v0[90] = v36;
  v0[91] = v37;
  v0[92] = v38;
  v0[93] = v39;
  v0[94] = v40;
  v0[95] = v44;
  v0[96] = v45;
  v0[97] = v43;
  uint64_t v53 = *(void (**)(void))(v46 + 16);
  v0[213] = v53;
  v53();
  uint64_t v54 = v52 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  __n128 v55 = swift_beginAccess(v54, v0 + 120, 0LL, 0LL);
  uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v49 + 16))(v47, v54, v50, v55);
  SFAirDropSend.Transfer.id.getter(v56);
  unint64_t v57 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  v0[214] = v57;
  v57(v47, v50);
  sub_10025F43C(v30, v48, v35, v82, v79, v76, v73, v70, v67, v45);
  sub_1003C48A0(v60, v51, (uint64_t)(v0 + 87), v61);
  sub_1001F1F34(v61);
  uint64_t v58 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[215] = v58;
  *uint64_t v58 = v0;
  v58[1] = sub_1002599FC;
  return SFProgressTask.finalValue.getter(v0[148], v0[144]);
}

uint64_t sub_1002594A0()
{
  uint64_t v1 = v0[197];
  uint64_t v2 = v0[190];
  swift_task_dealloc(v0[198]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1002594EC, v2, 0LL);
}

uint64_t sub_1002594EC()
{
  uint64_t v1 = *(void *)(v0 + 1600);
  uint64_t v2 = *(void *)(v0 + 1232);
  uint64_t v3 = *(void *)(v0 + 1216);
  *(void *)(v0 + 1024) = v1;
  swift_errorRetain(v1);
  uint64_t v4 = sub_100183098(&qword_100645710);
  if (!swift_dynamicCast(v2, v0 + 1024, v4, v3, 0LL))
  {
    BOOL v21 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
    uint64_t v22 = *(void *)(v0 + 1512);
    uint64_t v23 = *(void *)(v0 + 1464);
    uint64_t v24 = *(void *)(v0 + 1352);
    uint64_t v25 = *(void *)(v0 + 1328);
    uint64_t v26 = *(void *)(v0 + 1320);
    sub_100187100(*(void *)(v0 + 1288), &qword_10064A010);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    v21(v22, v23);
LABEL_8:
    swift_errorRelease(*(void *)(v0 + 1024));
    uint64_t v36 = *(void *)(v0 + 1504);
    uint64_t v37 = *(void *)(v0 + 1496);
    uint64_t v38 = *(void *)(v0 + 1488);
    uint64_t v39 = *(void *)(v0 + 1480);
    uint64_t v40 = *(void *)(v0 + 1456);
    uint64_t v41 = *(void *)(v0 + 1448);
    uint64_t v42 = *(void *)(v0 + 1440);
    uint64_t v43 = *(void *)(v0 + 1432);
    uint64_t v44 = *(void *)(v0 + 1424);
    uint64_t v45 = *(void *)(v0 + 1416);
    uint64_t v46 = *(void *)(v0 + 1408);
    uint64_t v47 = *(void *)(v0 + 1400);
    uint64_t v48 = *(void *)(v0 + 1376);
    uint64_t v49 = *(void *)(v0 + 1368);
    uint64_t v50 = *(void *)(v0 + 1360);
    uint64_t v51 = *(void *)(v0 + 1352);
    uint64_t v52 = *(void *)(v0 + 1344);
    uint64_t v53 = *(void *)(v0 + 1336);
    uint64_t v54 = *(void *)(v0 + 1312);
    uint64_t v55 = *(void *)(v0 + 1304);
    uint64_t v56 = *(void *)(v0 + 1296);
    uint64_t v57 = *(void *)(v0 + 1288);
    uint64_t v58 = *(void *)(v0 + 1280);
    uint64_t v59 = *(void *)(v0 + 1256);
    uint64_t v60 = *(void *)(v0 + 1232);
    uint64_t v61 = *(void *)(v0 + 1208);
    uint64_t v63 = *(void *)(v0 + 1200);
    uint64_t v65 = *(void *)(v0 + 1192);
    uint64_t v67 = *(void *)(v0 + 1184);
    uint64_t v69 = *(void *)(v0 + 1176);
    uint64_t v71 = *(void *)(v0 + 1168);
    uint64_t v73 = *(void *)(v0 + 1144);
    uint64_t v74 = *(void *)(v0 + 1136);
    swift_task_dealloc(*(void *)(v0 + 1512));
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v63);
    swift_task_dealloc(v65);
    swift_task_dealloc(v67);
    swift_task_dealloc(v69);
    swift_task_dealloc(v71);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 1224) + 88LL))( *(void *)(v0 + 1232),  *(void *)(v0 + 1216)) != enum case for SFAirDropSend.Failure.cancelled(_:))
  {
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
    uint64_t v28 = *(void *)(v0 + 1512);
    uint64_t v29 = *(void *)(v0 + 1464);
    uint64_t v30 = *(void *)(v0 + 1352);
    uint64_t v31 = *(void *)(v0 + 1328);
    uint64_t v32 = *(void *)(v0 + 1320);
    uint64_t v33 = *(void *)(v0 + 1232);
    uint64_t v34 = *(void *)(v0 + 1224);
    uint64_t v35 = *(void *)(v0 + 1216);
    sub_100187100(*(void *)(v0 + 1288), &qword_10064A010);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    v27(v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    goto LABEL_8;
  }

  uint64_t v5 = swift_errorRelease(*(void *)(v0 + 1600));
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  v7,  "Send StateMachine SHARE CONTACT PERMISSION END - Not exchanging contacts",  v8,  2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  __n128 v64 = *(void (**)(uint64_t, uint64_t))(v0 + 1568);
  uint64_t v9 = *(void *)(v0 + 1424);
  uint64_t v10 = *(void *)(v0 + 1392);
  uint64_t v11 = *(void *)(v0 + 1384);
  uint64_t v12 = *(void *)(v0 + 1280);
  uint64_t v62 = *(void *)(v0 + 1272);
  uint64_t v13 = *(void *)(v0 + 1264);
  uint64_t v14 = *(void *)(v0 + 1192);
  uint64_t v70 = *(void *)(v0 + 1152);
  uint64_t v72 = *(void *)(v0 + 1168);
  uint64_t v15 = *(void *)(v0 + 1120);
  uint64_t v66 = *(void *)(v0 + 1200);
  uint64_t v68 = *(void *)(v0 + 1104);

  (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))( v9,  enum case for SFAirDrop.ContactRequest.notNeeded(_:),  v11);
  uint64_t v16 = v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  __n128 v17 = swift_beginAccess( v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer,  v0 + 984,  0LL,  0LL);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v62 + 16))(v12, v16, v13, v17);
  SFAirDropSend.Transfer.id.getter(v18);
  v64(v12, v13);
  *(void *)(v0 + 952) = 0LL;
  *(_OWORD *)(v0 + 92_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0u;
  *(_OWORD *)(v0 + 936) = 0u;
  *(_OWORD *)(v0 + 888) = 0u;
  *(_OWORD *)(v0 + 904) = 0u;
  *(_OWORD *)(v0 + 872) = 0u;
  sub_1003C48A0(v9, v14, v0 + 872, v66);
  uint64_t v19 = swift_task_alloc(32LL);
  *(void *)(v0 + 1768) = v19;
  *(void *)(v19 + sub_100195658(v0 + 16) = v68;
  *(void *)(v19 + 24) = v66;
  swift_asyncLet_begin(v0 + 16, 0LL, v70, &unk_10064A030, v19, v72);
  return swift_asyncLet_finish(v0 + 16, *(void *)(v0 + 1168), sub_10025B284, v0 + 656);
}

uint64_t sub_1002599FC()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 1720LL);
  *(void *)(*(void *)v1 + 1728LL) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = v2[190];
  (*(void (**)(void, void))(v2[145] + 8LL))(v2[147], v2[144]);
  if (v0) {
    uint64_t v5 = sub_10025B520;
  }
  else {
    uint64_t v5 = sub_100259A80;
  }
  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_100259A80()
{
  uint64_t v1 = sub_1003C48AC(*(void *)(v0 + 1416));
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Send StateMachine EXCHANGING END", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1704);
  uint64_t v6 = *(void *)(v0 + 1416);
  uint64_t v7 = *(void *)(v0 + 1408);
  uint64_t v8 = *(void *)(v0 + 1392);
  uint64_t v9 = *(void *)(v0 + 1384);

  v5(v7, v6, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v8 + 88))(v7, v9) == enum case for SFAirDrop.ContactRequest.contact(_:))
  {
    uint64_t v10 = *(void *)(v0 + 1408);
    uint64_t v11 = *(void *)(v0 + 1368);
    uint64_t v12 = *(void *)(v0 + 1344);
    uint64_t v13 = *(void *)(v0 + 1328);
    uint64_t v14 = *(void *)(v0 + 1320);
    uint64_t v15 = *(void *)(v0 + 1112);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 1392) + 96LL))(v10, *(void *)(v0 + 1384));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v12, v10, v14);
    uint64_t v16 = sub_1001915A4(v15, v11, &qword_100649F88);
    __n128 v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v112 = *(void *)(v0 + 1384);
      uint64_t v115 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1544);
      uint64_t v19 = *(void *)(v0 + 1368);
      uint64_t v20 = *(void *)(v0 + 1360);
      BOOL v21 = *(_DWORD *)(v0 + 1788) == 1;
      uint64_t v22 = swift_slowAlloc(28LL, -1LL);
      uint64_t v23 = swift_slowAlloc(32LL, -1LL);
      v125[0] = v23;
      *(_DWORD *)uint64_t v22 = 67109635;
      *(_DWORD *)(v0 + 1776) = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1776, v0 + 1780, v22 + 4, v22 + 8);
      *(_WORD *)(v22 + 8) = 2160;
      *(void *)(v0 + 1088) = 1752392040LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1088, v0 + 1096, v22 + 10, v22 + 18);
      *(_WORD *)(v22 + 18) = 2081;
      sub_1001915A4(v19, v20, &qword_100649F88);
      if (v115(v20, 1LL, v112) == 1)
      {
        sub_100187100(*(void *)(v0 + 1360), &qword_100649F88);
        uint64_t v24 = (const char *)0x8000000100507200LL;
        uint64_t v25 = 0xD000000000000013LL;
      }

      else
      {
        uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v0 + 1608);
        uint64_t v64 = *(void *)(v0 + 1384);
        uint64_t v65 = *(void *)(v0 + 1360);
        uint64_t v25 = SFAirDrop.ContactRequest.description.getter();
        uint64_t v24 = v66;
        v63(v65, v64);
      }

      uint64_t v67 = *(void *)(v0 + 1368);
      *(void *)(v0 + 108_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10018CDB4(v25, (unint64_t)v24, v125);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1080, v0 + 1088, v22 + 20, v22 + 28);
      swift_bridgeObjectRelease(v24);
      sub_100187100(v67, &qword_100649F88);
      _os_log_impl( (void *)&_mh_execute_header,  v17,  v18,  "Should Import CONTACT START {afterAirDrop: %{BOOL}d, contactRequest: %{private,mask.hash}s}",  (uint8_t *)v22,  0x1Cu);
      swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1LL, -1LL);
      swift_slowDealloc(v22, -1LL, -1LL);
    }

    else
    {
      uint64_t v45 = *(void *)(v0 + 1368);

      sub_100187100(v45, &qword_100649F88);
    }

    uint64_t v68 = *(void *)(v0 + 1344);
    uint64_t v69 = *(void *)(v0 + 1328);
    uint64_t v70 = *(void *)(v0 + 1320);
    uint64_t v118 = *(void *)(v0 + 1280);
    uint64_t v121 = *(void *)(v0 + 1264);
    uint64_t v124 = *(void (**)(uint64_t, uint64_t))(v0 + 1712);
    uint64_t v71 = *(void *)(v0 + 1256);
    uint64_t v72 = *(void *)(v0 + 1248);
    uint64_t v73 = *(void *)(v0 + 1240);
    uint64_t v74 = *(void *)(v0 + 1144);
    sub_10025C8C0(v68, *(_DWORD *)(v0 + 1788) == 1, v74);
    uint64_t v75 = v71 + *(int *)(sub_100183098(&qword_10064A040) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v71, v68, v70);
    uint64_t v76 = sub_100183098(&qword_10064A048);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16LL))(v75, v74, v76);
    (*(void (**)(uint64_t, void, uint64_t))(v72 + 104))( v71,  enum case for SFAirDropSend.Transfer.State.waitingForImportContactResponse(_:),  v73);
    sub_100217DD8(v71, v118);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
    v124(v118, v121);
    return swift_task_switch(sub_10025A3F4, 0LL, 0LL);
  }

  else
  {
    BOOL v122 = (void *)(v0 + 784);
    uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1704);
    uint64_t v27 = *(void *)(v0 + 1416);
    uint64_t v28 = *(void *)(v0 + 1400);
    uint64_t v29 = *(void *)(v0 + 1384);
    (*(void (**)(void, uint64_t))(v0 + 1608))(*(void *)(v0 + 1408), v29);
    uint64_t v30 = v26(v28, v27, v29);
    uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
    os_log_type_t v32 = static os_log_type_t.default.getter();
    BOOL v33 = os_log_type_enabled(v31, v32);
    unint64_t v34 = *(void *)(v0 + 1640);
    uint64_t v116 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
    uint64_t v110 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1608);
    uint64_t v113 = *(void *)(v0 + 1512);
    uint64_t v119 = *(void *)(v0 + 1464);
    uint64_t v35 = *(void *)(v0 + 1400);
    uint64_t v106 = *(void *)(v0 + 1208);
    uint64_t v108 = *(void *)(v0 + 1440);
    uint64_t v102 = *(void *)(v0 + 1416);
    uint64_t v104 = *(void *)(v0 + 1184);
    uint64_t v98 = *(void *)(v0 + 1664);
    unint64_t v100 = *(void *)(v0 + 1672);
    uint64_t v94 = *(void *)(v0 + 1648);
    unint64_t v96 = *(void *)(v0 + 1656);
    if (v33)
    {
      uint64_t v36 = *(void *)(v0 + 1384);
      unint64_t v90 = *(void *)(v0 + 1640);
      uint64_t v92 = *(const char **)(v0 + 1624);
      uint64_t v86 = *(void *)(v0 + 1680);
      uint64_t v88 = *(void *)(v0 + 1632);
      unint64_t v82 = *(const char **)(v0 + 1688);
      uint64_t v84 = *(void *)(v0 + 1616);
      uint64_t v37 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v38 = swift_slowAlloc(32LL, -1LL);
      v125[0] = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      uint64_t v39 = sub_100183F14( &qword_10064A038,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
      uint64_t v40 = v36;
      uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter(v36, v39);
      uint64_t v43 = (const char *)v42;
      *(void *)(v0 + 1064) = sub_10018CDB4(v41, v42, v125);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1064, v0 + 1072, v37 + 4, v37 + 12);
      __n128 v44 = swift_bridgeObjectRelease(v43);
      v110(v35, v40, v44);
      _os_log_impl( (void *)&_mh_execute_header,  v31,  v32,  "Import CONTACT SKIP. No contact from receiver {exchangeContactResponse: %s}",  v37,  0xCu);
      swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1LL, -1LL);
      swift_slowDealloc(v37, -1LL, -1LL);

      sub_10025F4D4(v84, v92, v88, v90, v94, v96, v98, v100, v86, v82);
      sub_10025F56C( v122,  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F4D4);
      ((void (*)(uint64_t, uint64_t))v110)(v102, v40);
      sub_1001A4BC8(v104, _s14descr1005DEB71C16ExchangeResponseVMa);
      sub_1001A4BC8(v106, _s14descr1005DEB71C15ExchangeRequestVMa);
      ((void (*)(uint64_t, uint64_t))v110)(v108, v40);
    }

    else
    {
      uint64_t v46 = v31;
      uint64_t v47 = *(void *)(v0 + 1680);
      uint64_t v48 = *(void *)(v0 + 1384);
      uint64_t v49 = *(const char **)(v0 + 1688);
      uint64_t v50 = *(void *)(v0 + 1632);
      uint64_t v51 = *(const char **)(v0 + 1624);
      uint64_t v52 = *(void *)(v0 + 1616);

      ((void (*)(uint64_t, uint64_t))v110)(v35, v48);
      sub_10025F4D4(v52, v51, v50, v34, v94, v96, v98, v100, v47, v49);
      sub_10025F56C( v122,  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F4D4);
      ((void (*)(uint64_t, uint64_t))v110)(v102, v48);
      sub_1001A4BC8(v104, _s14descr1005DEB71C16ExchangeResponseVMa);
      sub_1001A4BC8(v106, _s14descr1005DEB71C15ExchangeRequestVMa);
      ((void (*)(uint64_t, uint64_t))v110)(v108, v48);
    }

    v116(v113, v119);
    uint64_t v53 = *(void *)(v0 + 1504);
    uint64_t v54 = *(void *)(v0 + 1496);
    uint64_t v55 = *(void *)(v0 + 1488);
    uint64_t v56 = *(void *)(v0 + 1480);
    uint64_t v57 = *(void *)(v0 + 1456);
    uint64_t v58 = *(void *)(v0 + 1448);
    uint64_t v59 = *(void *)(v0 + 1440);
    uint64_t v60 = *(void *)(v0 + 1432);
    uint64_t v61 = *(void *)(v0 + 1424);
    uint64_t v77 = *(void *)(v0 + 1416);
    uint64_t v78 = *(void *)(v0 + 1408);
    uint64_t v79 = *(void *)(v0 + 1400);
    uint64_t v80 = *(void *)(v0 + 1376);
    uint64_t v81 = *(void *)(v0 + 1368);
    uint64_t v83 = *(void *)(v0 + 1360);
    uint64_t v85 = *(void *)(v0 + 1352);
    uint64_t v87 = *(void *)(v0 + 1344);
    uint64_t v89 = *(void *)(v0 + 1336);
    uint64_t v91 = *(void *)(v0 + 1312);
    uint64_t v93 = *(void *)(v0 + 1304);
    uint64_t v95 = *(void *)(v0 + 1296);
    uint64_t v97 = *(void *)(v0 + 1288);
    uint64_t v99 = *(void *)(v0 + 1280);
    uint64_t v101 = *(void *)(v0 + 1256);
    uint64_t v103 = *(void *)(v0 + 1232);
    uint64_t v105 = *(void *)(v0 + 1208);
    uint64_t v107 = *(void *)(v0 + 1200);
    uint64_t v109 = *(void *)(v0 + 1192);
    uint64_t v111 = *(void *)(v0 + 1184);
    uint64_t v114 = *(void *)(v0 + 1176);
    uint64_t v117 = *(void *)(v0 + 1168);
    uint64_t v120 = *(void *)(v0 + 1144);
    uint64_t v123 = *(void *)(v0 + 1136);
    swift_task_dealloc(*(void *)(v0 + 1512));
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v83);
    swift_task_dealloc(v85);
    swift_task_dealloc(v87);
    swift_task_dealloc(v89);
    swift_task_dealloc(v91);
    swift_task_dealloc(v93);
    swift_task_dealloc(v95);
    swift_task_dealloc(v97);
    swift_task_dealloc(v99);
    swift_task_dealloc(v101);
    swift_task_dealloc(v103);
    swift_task_dealloc(v105);
    swift_task_dealloc(v107);
    swift_task_dealloc(v109);
    swift_task_dealloc(v111);
    swift_task_dealloc(v114);
    swift_task_dealloc(v117);
    swift_task_dealloc(v120);
    swift_task_dealloc(v123);
    return (*(uint64_t (**)(void, void))(v0 + 8))(0LL, 0LL);
  }

uint64_t sub_10025A3F4()
{
  uint64_t v1 = v0[143];
  uint64_t v2 = swift_task_alloc(32LL);
  v0[217] = v2;
  *(void *)(v2 + sub_100195658(v0 + 16) = v1;
  uint64_t v3 = swift_task_alloc(32LL);
  v0[218] = v3;
  *(void *)(v3 + sub_100195658(v0 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[219] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10025A4A4;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)( v0 + 224,  &unk_10064A058,  v2,  sub_10025F62C,  v3,  0LL,  0LL,  &type metadata for Bool);
}

uint64_t sub_10025A4A4()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 1752LL);
  *(void *)(*(void *)v1 + 1760LL) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_10025AA28;
    uint64_t v5 = 0LL;
  }

  else
  {
    uint64_t v6 = v2 + 224;
    uint64_t v7 = v2[218];
    uint64_t v8 = v2[217];
    uint64_t v9 = v2[190];
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    v6[2] = *v6;
    uint64_t v4 = sub_10025A538;
    uint64_t v5 = v9;
  }

  return swift_task_switch(v4, v5, 0LL);
}

uint64_t sub_10025A538(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v1 + 1794);
    uint64_t v5 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v5 = 67109120;
    *(_DWORD *)(v1 + 178_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1780, v1 + 1784, v5 + 4, v5 + 8);
    _os_log_impl( (void *)&_mh_execute_header,  v2,  v3,  "Should Import CONTACT END {shouldImportContact: %{BOOL}d}",  v5,  8u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  int v6 = *(unsigned __int8 *)(v1 + 1794);

  if (v6 == 1)
  {
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v1 + 1528);
    uint64_t v9 = *(void *)(v1 + 1488);
    uint64_t v10 = *(void *)(v1 + 1464);
    uint64_t v11 = SFAirDropSend.Request.type.getter(v7);
    SFAirDrop.TransferType.isOnlyExchange.getter(v11);
    v8(v9, v10);
    return swift_task_switch(sub_10025AD78, static AirDropActor.shared, 0LL);
  }

  else
  {
    uint64_t v13 = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Import CONTACT SKIP. Declined.", v15, 2u);
      swift_slowDealloc(v15, -1LL, -1LL);
    }

    __int128 v40 = *(_OWORD *)(v1 + 1680);
    unint64_t v45 = *(void *)(v1 + 1672);
    uint64_t v41 = *(void *)(v1 + 1664);
    unint64_t v16 = *(void *)(v1 + 1656);
    uint64_t v17 = *(void *)(v1 + 1648);
    unint64_t v18 = *(void *)(v1 + 1640);
    uint64_t v19 = *(void *)(v1 + 1632);
    uint64_t v20 = *(const char **)(v1 + 1624);
    uint64_t v21 = *(void *)(v1 + 1616);
    uint64_t v66 = *(void *)(v1 + 1512);
    uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v1 + 1528);
    uint64_t v62 = *(void *)(v1 + 1440);
    uint64_t v64 = *(void *)(v1 + 1464);
    uint64_t v56 = *(void *)(v1 + 1416);
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v1 + 1608);
    uint64_t v52 = *(void *)(v1 + 1384);
    uint64_t v43 = *(void *)(v1 + 1328);
    uint64_t v47 = *(void *)(v1 + 1320);
    uint64_t v49 = *(void *)(v1 + 1344);
    uint64_t v60 = *(void *)(v1 + 1208);
    uint64_t v54 = *(void *)(v1 + 1184);
    uint64_t v22 = *(void *)(v1 + 1144);

    sub_10025F4D4(v21, v20, v19, v18, v17, v16, v41, v45, v40, *((const char **)&v40 + 1));
    sub_10025F56C( (void *)(v1 + 784),  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F4D4);
    sub_100187100(v22, &qword_10064A000);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v49, v47);
    v58(v56, v52);
    sub_1001A4BC8(v54, _s14descr1005DEB71C16ExchangeResponseVMa);
    sub_1001A4BC8(v60, _s14descr1005DEB71C15ExchangeRequestVMa);
    v58(v62, v52);
    v68(v66, v64);
    uint64_t v23 = *(void *)(v1 + 1504);
    uint64_t v24 = *(void *)(v1 + 1496);
    uint64_t v25 = *(void *)(v1 + 1488);
    uint64_t v26 = *(void *)(v1 + 1480);
    uint64_t v27 = *(void *)(v1 + 1456);
    uint64_t v28 = *(void *)(v1 + 1448);
    uint64_t v29 = *(void *)(v1 + 1440);
    uint64_t v30 = *(void *)(v1 + 1432);
    uint64_t v31 = *(void *)(v1 + 1424);
    uint64_t v32 = *(void *)(v1 + 1416);
    uint64_t v33 = *(void *)(v1 + 1408);
    uint64_t v34 = *(void *)(v1 + 1400);
    uint64_t v35 = *(void *)(v1 + 1376);
    uint64_t v36 = *(void *)(v1 + 1368);
    uint64_t v37 = *(void *)(v1 + 1360);
    uint64_t v38 = *(void *)(v1 + 1352);
    uint64_t v39 = *(void *)(v1 + 1344);
    *(void *)&__int128 v40 = *(void *)(v1 + 1336);
    uint64_t v42 = *(void *)(v1 + 1312);
    uint64_t v44 = *(void *)(v1 + 1304);
    uint64_t v46 = *(void *)(v1 + 1296);
    uint64_t v48 = *(void *)(v1 + 1288);
    uint64_t v50 = *(void *)(v1 + 1280);
    uint64_t v51 = *(void *)(v1 + 1256);
    uint64_t v53 = *(void *)(v1 + 1232);
    uint64_t v55 = *(void *)(v1 + 1208);
    uint64_t v57 = *(void *)(v1 + 1200);
    uint64_t v59 = *(void *)(v1 + 1192);
    uint64_t v61 = *(void *)(v1 + 1184);
    uint64_t v63 = *(void *)(v1 + 1176);
    uint64_t v65 = *(void *)(v1 + 1168);
    uint64_t v67 = *(void *)(v1 + 1144);
    uint64_t v69 = *(void *)(v1 + 1136);
    swift_task_dealloc(*(void *)(v1 + 1512));
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v42);
    swift_task_dealloc(v44);
    swift_task_dealloc(v46);
    swift_task_dealloc(v48);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v53);
    swift_task_dealloc(v55);
    swift_task_dealloc(v57);
    swift_task_dealloc(v59);
    swift_task_dealloc(v61);
    swift_task_dealloc(v63);
    swift_task_dealloc(v65);
    swift_task_dealloc(v67);
    swift_task_dealloc(v69);
    return (*(uint64_t (**)(void, void))(v1 + 8))(0LL, 0LL);
  }

uint64_t sub_10025AA28()
{
  uint64_t v1 = v0[217];
  uint64_t v2 = v0[190];
  swift_task_dealloc(v0[218]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10025AA74, v2, 0LL);
}

uint64_t sub_10025AA74()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1608);
  uint64_t v45 = *(void *)(v0 + 1512);
  uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
  uint64_t v41 = *(void *)(v0 + 1440);
  uint64_t v43 = *(void *)(v0 + 1464);
  uint64_t v2 = *(void *)(v0 + 1416);
  uint64_t v3 = *(void *)(v0 + 1384);
  uint64_t v4 = *(void *)(v0 + 1344);
  uint64_t v5 = *(void *)(v0 + 1328);
  uint64_t v6 = *(void *)(v0 + 1320);
  uint64_t v39 = *(void *)(v0 + 1208);
  uint64_t v7 = *(void *)(v0 + 1184);
  uint64_t v8 = *(void *)(v0 + 1144);
  sub_10025F4D4( *(void *)(v0 + 1616),  *(const char **)(v0 + 1624),  *(void *)(v0 + 1632),  *(void *)(v0 + 1640),  *(void *)(v0 + 1648),  *(void *)(v0 + 1656),  *(void *)(v0 + 1664),  *(void *)(v0 + 1672),  *(void *)(v0 + 1680),  *(const char **)(v0 + 1688));
  sub_10025F56C( (void *)(v0 + 784),  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F4D4);
  sub_100187100(v8, &qword_10064A000);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  sub_1001A4BC8(v7, _s14descr1005DEB71C16ExchangeResponseVMa);
  sub_1001A4BC8(v39, _s14descr1005DEB71C15ExchangeRequestVMa);
  v1(v41, v3);
  v47(v45, v43);
  uint64_t v9 = *(void *)(v0 + 1504);
  uint64_t v10 = *(void *)(v0 + 1496);
  uint64_t v11 = *(void *)(v0 + 1488);
  uint64_t v12 = *(void *)(v0 + 1480);
  uint64_t v13 = *(void *)(v0 + 1456);
  uint64_t v14 = *(void *)(v0 + 1448);
  uint64_t v15 = *(void *)(v0 + 1440);
  uint64_t v16 = *(void *)(v0 + 1432);
  uint64_t v17 = *(void *)(v0 + 1424);
  uint64_t v19 = *(void *)(v0 + 1416);
  uint64_t v20 = *(void *)(v0 + 1408);
  uint64_t v21 = *(void *)(v0 + 1400);
  uint64_t v22 = *(void *)(v0 + 1376);
  uint64_t v23 = *(void *)(v0 + 1368);
  uint64_t v24 = *(void *)(v0 + 1360);
  uint64_t v25 = *(void *)(v0 + 1352);
  uint64_t v26 = *(void *)(v0 + 1344);
  uint64_t v27 = *(void *)(v0 + 1336);
  uint64_t v28 = *(void *)(v0 + 1312);
  uint64_t v29 = *(void *)(v0 + 1304);
  uint64_t v30 = *(void *)(v0 + 1296);
  uint64_t v31 = *(void *)(v0 + 1288);
  uint64_t v32 = *(void *)(v0 + 1280);
  uint64_t v33 = *(void *)(v0 + 1256);
  uint64_t v34 = *(void *)(v0 + 1232);
  uint64_t v35 = *(void *)(v0 + 1208);
  uint64_t v36 = *(void *)(v0 + 1200);
  uint64_t v37 = *(void *)(v0 + 1192);
  uint64_t v38 = *(void *)(v0 + 1184);
  uint64_t v40 = *(void *)(v0 + 1176);
  uint64_t v42 = *(void *)(v0 + 1168);
  uint64_t v44 = *(void *)(v0 + 1144);
  uint64_t v46 = *(void *)(v0 + 1136);
  swift_task_dealloc(*(void *)(v0 + 1512));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025AD78()
{
  if (qword_100643F60 != -1) {
    swift_once(&qword_100643F60, sub_100220910);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100649288);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  v4,  "SDAirDropContentHandlerExchange importContact is not implemented on this platform.",  v5,  2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  uint64_t v6 = *(void *)(v0 + 1520);

  return swift_task_switch(sub_10025AE64, v6, 0LL);
}

uint64_t sub_10025AE64(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.error.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Import CONTACT FAILED", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  __int128 v34 = *(_OWORD *)(v1 + 1680);
  unint64_t v44 = *(void *)(v1 + 1672);
  unint64_t v38 = *(void *)(v1 + 1656);
  uint64_t v40 = *(void *)(v1 + 1664);
  uint64_t v36 = *(void *)(v1 + 1648);
  unint64_t v32 = *(void *)(v1 + 1640);
  uint64_t v5 = *(void *)(v1 + 1632);
  uint64_t v6 = *(const char **)(v1 + 1624);
  uint64_t v7 = *(void *)(v1 + 1616);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v1 + 1608);
  uint64_t v61 = *(void *)(v1 + 1512);
  uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v1 + 1528);
  uint64_t v57 = *(void *)(v1 + 1440);
  uint64_t v59 = *(void *)(v1 + 1464);
  uint64_t v53 = *(void *)(v1 + 1416);
  uint64_t v9 = *(void *)(v1 + 1384);
  uint64_t v42 = *(void *)(v1 + 1328);
  uint64_t v46 = *(void *)(v1 + 1320);
  uint64_t v48 = *(void *)(v1 + 1344);
  uint64_t v10 = *(void *)(v1 + 1224);
  uint64_t v11 = *(void *)(v1 + 1216);
  uint64_t v55 = *(void *)(v1 + 1208);
  uint64_t v50 = *(void *)(v1 + 1184);
  uint64_t v12 = *(void *)(v1 + 1144);

  uint64_t v13 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  swift_allocError(v11, v13, 0LL, 0LL);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v10 + 104))( v14,  enum case for SFAirDropSend.Failure.badRequest(_:),  v11);
  swift_willThrow(v15);
  sub_10025F4D4(v7, v6, v5, v32, v36, v38, v40, v44, v34, *((const char **)&v34 + 1));
  sub_10025F56C( (void *)(v1 + 784),  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F4D4);
  sub_100187100(v12, &qword_10064A000);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v48, v46);
  v8(v53, v9);
  sub_1001A4BC8(v50, _s14descr1005DEB71C16ExchangeResponseVMa);
  sub_1001A4BC8(v55, _s14descr1005DEB71C15ExchangeRequestVMa);
  v8(v57, v9);
  v63(v61, v59);
  uint64_t v16 = *(void *)(v1 + 1504);
  uint64_t v17 = *(void *)(v1 + 1496);
  uint64_t v18 = *(void *)(v1 + 1488);
  uint64_t v19 = *(void *)(v1 + 1480);
  uint64_t v20 = *(void *)(v1 + 1456);
  uint64_t v21 = *(void *)(v1 + 1448);
  uint64_t v22 = *(void *)(v1 + 1440);
  uint64_t v23 = *(void *)(v1 + 1432);
  uint64_t v24 = *(void *)(v1 + 1424);
  uint64_t v26 = *(void *)(v1 + 1416);
  uint64_t v27 = *(void *)(v1 + 1408);
  uint64_t v28 = *(void *)(v1 + 1400);
  uint64_t v29 = *(void *)(v1 + 1376);
  uint64_t v30 = *(void *)(v1 + 1368);
  uint64_t v31 = *(void *)(v1 + 1360);
  uint64_t v33 = *(void *)(v1 + 1352);
  *(void *)&__int128 v34 = *(void *)(v1 + 1344);
  uint64_t v35 = *(void *)(v1 + 1336);
  uint64_t v37 = *(void *)(v1 + 1312);
  uint64_t v39 = *(void *)(v1 + 1304);
  uint64_t v41 = *(void *)(v1 + 1296);
  uint64_t v43 = *(void *)(v1 + 1288);
  uint64_t v45 = *(void *)(v1 + 1280);
  uint64_t v47 = *(void *)(v1 + 1256);
  uint64_t v49 = *(void *)(v1 + 1232);
  uint64_t v51 = *(void *)(v1 + 1208);
  uint64_t v52 = *(void *)(v1 + 1200);
  uint64_t v54 = *(void *)(v1 + 1192);
  uint64_t v56 = *(void *)(v1 + 1184);
  uint64_t v58 = *(void *)(v1 + 1176);
  uint64_t v60 = *(void *)(v1 + 1168);
  uint64_t v62 = *(void *)(v1 + 1144);
  uint64_t v64 = *(void *)(v1 + 1136);
  swift_task_dealloc(*(void *)(v1 + 1512));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10025B284()
{
  return swift_task_switch(sub_10025B298, *(void *)(v0 + 1520), 0LL);
}

uint64_t sub_10025B298()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
  uint64_t v2 = *(void *)(v0 + 1512);
  uint64_t v3 = *(void *)(v0 + 1464);
  uint64_t v4 = *(void *)(v0 + 1352);
  uint64_t v5 = *(void *)(v0 + 1328);
  uint64_t v6 = *(void *)(v0 + 1320);
  uint64_t v7 = *(void *)(v0 + 1288);
  uint64_t v8 = *(void *)(v0 + 1200);
  swift_task_dealloc(*(void *)(v0 + 1768));
  sub_100187100(v7, &qword_10064A010);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  sub_1001A4BC8(v8, _s14descr1005DEB71C15ExchangeRequestVMa);
  swift_errorRelease(*(void *)(v0 + 1024));
  uint64_t v9 = *(void *)(v0 + 1504);
  uint64_t v10 = *(void *)(v0 + 1496);
  uint64_t v11 = *(void *)(v0 + 1488);
  uint64_t v12 = *(void *)(v0 + 1480);
  uint64_t v13 = *(void *)(v0 + 1456);
  uint64_t v14 = *(void *)(v0 + 1448);
  uint64_t v15 = *(void *)(v0 + 1440);
  uint64_t v16 = *(void *)(v0 + 1432);
  uint64_t v17 = *(void *)(v0 + 1424);
  uint64_t v19 = *(void *)(v0 + 1416);
  uint64_t v20 = *(void *)(v0 + 1408);
  uint64_t v21 = *(void *)(v0 + 1400);
  uint64_t v22 = *(void *)(v0 + 1376);
  uint64_t v23 = *(void *)(v0 + 1368);
  uint64_t v24 = *(void *)(v0 + 1360);
  uint64_t v25 = *(void *)(v0 + 1352);
  uint64_t v26 = *(void *)(v0 + 1344);
  uint64_t v27 = *(void *)(v0 + 1336);
  uint64_t v28 = *(void *)(v0 + 1312);
  uint64_t v29 = *(void *)(v0 + 1304);
  uint64_t v30 = *(void *)(v0 + 1296);
  uint64_t v31 = *(void *)(v0 + 1288);
  uint64_t v32 = *(void *)(v0 + 1280);
  uint64_t v33 = *(void *)(v0 + 1256);
  uint64_t v34 = *(void *)(v0 + 1232);
  uint64_t v35 = *(void *)(v0 + 1208);
  uint64_t v36 = *(void *)(v0 + 1200);
  uint64_t v37 = *(void *)(v0 + 1192);
  uint64_t v38 = *(void *)(v0 + 1184);
  uint64_t v39 = *(void *)(v0 + 1176);
  uint64_t v40 = *(void *)(v0 + 1168);
  uint64_t v41 = *(void *)(v0 + 1144);
  uint64_t v42 = *(void *)(v0 + 1136);
  swift_task_dealloc(*(void *)(v0 + 1512));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  return (*(uint64_t (**)(void, void))(v0 + 8))(0LL, 0LL);
}

uint64_t sub_10025B520()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1608);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
  uint64_t v3 = *(void *)(v0 + 1512);
  uint64_t v4 = *(void *)(v0 + 1464);
  uint64_t v5 = *(void *)(v0 + 1440);
  uint64_t v6 = *(void *)(v0 + 1384);
  uint64_t v7 = *(void *)(v0 + 1208);
  sub_10025F4D4( *(void *)(v0 + 1616),  *(const char **)(v0 + 1624),  *(void *)(v0 + 1632),  *(void *)(v0 + 1640),  *(void *)(v0 + 1648),  *(void *)(v0 + 1656),  *(void *)(v0 + 1664),  *(void *)(v0 + 1672),  *(void *)(v0 + 1680),  *(const char **)(v0 + 1688));
  sub_10025F56C( (void *)(v0 + 784),  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F4D4);
  sub_1001A4BC8(v7, _s14descr1005DEB71C15ExchangeRequestVMa);
  v1(v5, v6);
  v2(v3, v4);
  uint64_t v8 = *(void *)(v0 + 1504);
  uint64_t v9 = *(void *)(v0 + 1496);
  uint64_t v10 = *(void *)(v0 + 1488);
  uint64_t v11 = *(void *)(v0 + 1480);
  uint64_t v12 = *(void *)(v0 + 1456);
  uint64_t v13 = *(void *)(v0 + 1448);
  uint64_t v14 = *(void *)(v0 + 1440);
  uint64_t v15 = *(void *)(v0 + 1432);
  uint64_t v16 = *(void *)(v0 + 1424);
  uint64_t v18 = *(void *)(v0 + 1416);
  uint64_t v19 = *(void *)(v0 + 1408);
  uint64_t v20 = *(void *)(v0 + 1400);
  uint64_t v21 = *(void *)(v0 + 1376);
  uint64_t v22 = *(void *)(v0 + 1368);
  uint64_t v23 = *(void *)(v0 + 1360);
  uint64_t v24 = *(void *)(v0 + 1352);
  uint64_t v25 = *(void *)(v0 + 1344);
  uint64_t v26 = *(void *)(v0 + 1336);
  uint64_t v27 = *(void *)(v0 + 1312);
  uint64_t v28 = *(void *)(v0 + 1304);
  uint64_t v29 = *(void *)(v0 + 1296);
  uint64_t v30 = *(void *)(v0 + 1288);
  uint64_t v31 = *(void *)(v0 + 1280);
  uint64_t v32 = *(void *)(v0 + 1256);
  uint64_t v33 = *(void *)(v0 + 1232);
  uint64_t v34 = *(void *)(v0 + 1208);
  uint64_t v35 = *(void *)(v0 + 1200);
  uint64_t v36 = *(void *)(v0 + 1192);
  uint64_t v37 = *(void *)(v0 + 1184);
  uint64_t v38 = *(void *)(v0 + 1176);
  uint64_t v39 = *(void *)(v0 + 1168);
  uint64_t v40 = *(void *)(v0 + 1144);
  uint64_t v41 = *(void *)(v0 + 1136);
  swift_task_dealloc(*(void *)(v0 + 1512));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025B7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  uint64_t v6 = sub_100183098(&qword_10064A130);
  void v5[9] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[10] = v7;
  v5[11] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = _s14descr1005DD3D1C12ErrorRequestVMa(0LL);
  v5[12] = v8;
  v5[13] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  void v5[14] = static AirDropActor.shared;
  return swift_task_switch(sub_10025B888, v9, 0LL);
}

uint64_t sub_10025B888()
{
  uint64_t v1 = *(void **)(v0 + 40);
  if (v1)
  {
    if ((*(void *)(v0 + 48) & 0xFF00000000LL) != 0x300000000LL && (*(void *)(v0 + 48) & 4LL) != 0)
    {
      uint64_t v9 = *(void *)(v0 + 96);
      uint64_t v8 = *(void *)(v0 + 104);
      uint64_t v10 = *(void *)(v0 + 88);
      uint64_t v11 = *(void *)(v0 + 56);
      SFAirDropSend.Request.id.getter(v1);
      uint64_t v12 = v8 + *(int *)(v9 + 20);
      uint64_t v13 = type metadata accessor for CodableError(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16LL))(v12, v11, v13);
      sub_1001F2FB0(v8, v10);
      uint64_t v14 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
      *(void *)(v0 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v14;
      *uint64_t v14 = v0;
      v14[1] = sub_10025BA38;
      return SFProgressTask.finalValue.getter(v0 + 16, *(void *)(v0 + 72));
    }

    id v3 = v1;
    uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "No HELLO response present with .errorMessage support", v6, 2u);
      swift_slowDealloc(v6, -1LL, -1LL);
    }
  }

  uint64_t v7 = *(void *)(v0 + 88);
  swift_task_dealloc(*(void *)(v0 + 104));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025BA38()
{
  uint64_t v2 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 120));
  uint64_t v3 = *(void *)(v2 + 112);
  if (v0)
  {
    swift_errorRelease(v0);
    uint64_t v4 = sub_10025BB24;
  }

  else
  {
    uint64_t v4 = sub_10025BAA4;
  }

  return swift_task_switch(v4, v3, 0LL);
}

uint64_t sub_10025BAA4()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 72);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1001A4BC8(v1, _s14descr1005DD3D1C12ErrorRequestVMa);
  sub_100189B20(*(void *)(v0 + 16), *(void *)(v0 + 24));
  uint64_t v5 = *(void *)(v0 + 88);
  swift_task_dealloc(*(void *)(v0 + 104));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025BB24()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 72);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1001A4BC8(v1, _s14descr1005DD3D1C12ErrorRequestVMa);
  uint64_t v5 = *(void *)(v0 + 88);
  swift_task_dealloc(*(void *)(v0 + 104));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025BB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_100183098(&qword_10064A178);
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10025BC04, 0LL, 0LL);
}

uint64_t sub_10025BC04()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10025BC68, static AirDropActor.shared, 0LL);
}

uint64_t sub_10025BC68()
{
  uint64_t v1 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10025BCCC;
  return SFProgressTask.finalValue.getter(v0[2], v0[5]);
}

uint64_t sub_10025BCCC()
{
  uint64_t v3 = *(void *)(*(void *)v1 + 56LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 64LL);
  uint64_t v4 = *(void *)(*(void *)v1 + 40LL);
  uint64_t v5 = *(void *)(*(void *)v1 + 48LL);
  *(void *)(*(void *)v1 + 72LL) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0) {
    uint64_t v6 = sub_10025BD80;
  }
  else {
    uint64_t v6 = sub_10025BD4C;
  }
  return swift_task_switch(v6, 0LL, 0LL);
}

uint64_t sub_10025BD4C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025BD80()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025BDB4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v125 = a1;
  uint64_t v121 = a3;
  uint64_t v4 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v4);
  uint64_t v120 = &v97[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v6 = type metadata accessor for Date(0LL);
  __chkstk_darwin(v6);
  uint64_t v115 = &v97[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v8 = type metadata accessor for UUID(0LL);
  __chkstk_darwin(v8);
  uint64_t v116 = &v97[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = sub_100183098(&qword_10064B750);
  uint64_t v118 = *(void *)(v10 - 8);
  uint64_t v119 = v10;
  __chkstk_darwin(v10);
  uint64_t v131 = &v97[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v104 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
  uint64_t v103 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v102 = &v97[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v13 = type metadata accessor for SFAirDrop.ContactRequest(0LL);
  uint64_t v114 = *(void *)(v13 - 8);
  uint64_t v126 = v13;
  __chkstk_darwin(v13);
  uint64_t v123 = &v97[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v15 = sub_100183098(&qword_10064A098);
  uint64_t v129 = *(void *)(v15 - 8);
  uint64_t v130 = v15;
  __chkstk_darwin(v15);
  uint64_t v124 = &v97[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v17 = type metadata accessor for SFAirDrop.ButtonConfiguration(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v112 = (_BYTE *)v17;
  __chkstk_darwin(v17);
  uint64_t v20 = &v97[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v117 = type metadata accessor for SFAirDrop.DeclineAction(0LL);
  uint64_t v128 = *(void *)(v117 - 8);
  uint64_t v21 = __chkstk_darwin(v117);
  uint64_t v109 = &v97[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v21);
  uint64_t v127 = &v97[-v23];
  uint64_t v24 = sub_100183098(&qword_10064A0A0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v28 = &v97[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v27);
  uint64_t v30 = &v97[-v29];
  unint64_t v122 = 0xD000000000000017LL;
  SFProgressContinuation.init(_:initialProgress:file:line:)( 0xD00000000000001DLL,  0x8000000100507220LL,  v31,  0xD000000000000067LL,  0x8000000100507240LL,  456LL,  (char *)&type metadata for () + 8,  v13);
  *uint64_t v20 = 0x776F4E20746F4ELL;
  v20[1] = 0xE700000000000000LL;
  LODWORD(v105) = enum case for SFAirDrop.ButtonConfiguration.text(_:);
  uint64_t v107 = *(void (**)(void *))(v18 + 104);
  v107(v20);
  int v98 = ~a2;
  uint64_t v32 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v25 + 16);
  v32(v28, v30, v24);
  uint64_t v33 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v34 = (v33 + 16) & ~v33;
  uint64_t v110 = v26;
  uint64_t v108 = (void (*)(uint64_t, _BYTE *, uint64_t))(v34 + v26);
  uint64_t v106 = v33;
  uint64_t v35 = v33 | 7;
  uint64_t v36 = swift_allocObject(&unk_1005D6918, v34 + v26, v33 | 7);
  uint64_t v113 = v25;
  uint64_t v37 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v25 + 32);
  v37(v36 + v34, v28, v24);
  BOOL v38 = (a2 & 1) == 0;
  uint64_t v39 = v28;
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)( 0x776F4E20746F4ELL,  0xE700000000000000LL,  v20,  v38,  sub_10025F7B4,  v36);
  *uint64_t v20 = 0x6572616853LL;
  v20[1] = 0xE500000000000000LL;
  ((void (*)(void *, void, _BYTE *))v107)(v20, v105, v112);
  uint64_t v40 = type metadata accessor for SFAirDrop.ContactInfo(0LL);
  uint64_t v41 = v123;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16LL))(v123, v125, v40);
  uint64_t v42 = v126;
  (*(void (**)(_BYTE *, void, uint64_t))(v114 + 104))( v41,  enum case for SFAirDrop.ContactRequest.contact(_:),  v126);
  uint64_t v112 = v30;
  uint64_t v105 = v32;
  v32(v39, v30, v24);
  uint64_t v43 = v39;
  unint64_t v44 = v124;
  uint64_t v107 = (void (*)(void *))v35;
  uint64_t v45 = swift_allocObject(&unk_1005D6940, v108, v35);
  uint64_t v114 = v24;
  uint64_t v108 = v37;
  v37(v45 + v34, v39, v24);
  uint64_t v46 = sub_100183F14( &qword_10064A0A8,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
  uint64_t v47 = sub_100183F14( &qword_10064A0B0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
  uint64_t v99 = sub_100183F14( &qword_10064A0B8,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
  uint64_t v100 = v47;
  uint64_t v101 = v46;
  uint64_t v48 = SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)( 0x6572616853LL,  0xE500000000000000LL,  v20,  0LL,  0LL,  v123,  sub_10025F84C,  v45,  v42,  v46,  v47,  v99);
  uint64_t v111 = v43;
  uint64_t v49 = v44;
  if ((v98 & 1) != 0)
  {
    uint64_t v132 = SFAirDrop.ContactInfo.fullName.getter(v48);
    uint64_t v133 = v61;
    v62._uint64_t countAndFlagsBits = 10LL;
    v62._object = (void *)0xE100000000000000LL;
    String.append(_:)(v62);
    uint64_t v63 = v102;
    SFAirDrop.ContactInfo.handle.getter();
    uint64_t v64 = sub_100183F14( &qword_10064A068,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactInfo.Handle);
    uint64_t v65 = v104;
    v66._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v104, v64);
    object = (const char *)v66._object;
    String.append(_:)(v66);
    __n128 v68 = swift_bridgeObjectRelease(object);
    uint64_t v59 = (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v103 + 8))(v63, v65, v68);
    uint64_t v123 = (_BYTE *)v132;
    uint64_t v104 = v133;
    uint64_t v60 = "Exchange Contact Cards?";
  }

  else
  {
    uint64_t v132 = SFAirDrop.ContactInfo.fullName.getter(v48);
    uint64_t v133 = v50;
    v51._uint64_t countAndFlagsBits = 10272LL;
    v51._object = (void *)0xE200000000000000LL;
    String.append(_:)(v51);
    uint64_t v52 = v102;
    SFAirDrop.ContactInfo.handle.getter();
    uint64_t v53 = sub_100183F14( &qword_10064A068,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactInfo.Handle);
    uint64_t v54 = v104;
    v55._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v104, v53);
    uint64_t v56 = (const char *)v55._object;
    String.append(_:)(v55);
    __n128 v57 = swift_bridgeObjectRelease(v56);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v103 + 8))(v52, v54, v57);
    v58._uint64_t countAndFlagsBits = 41LL;
    v58._object = (void *)0xE100000000000000LL;
    String.append(_:)(v58);
    uint64_t v123 = (_BYTE *)v132;
    uint64_t v104 = v133;
    unint64_t v122 = 0xD00000000000001FLL;
    uint64_t v60 = "Share Your Contact Information?";
  }

  unint64_t v69 = (unint64_t)(v60 - 32) | 0x8000000000000000LL;
  uint64_t v70 = v106;
  uint64_t v125 = ~v106;
  uint64_t v71 = v116;
  uint64_t v72 = UUID.init()(v59);
  uint64_t v73 = v115;
  static Date.now.getter(v72);
  uint64_t v74 = sub_100183098(&qword_10064A0C0);
  uint64_t v75 = sub_100183098(&qword_10064A0C8);
  uint64_t v76 = *(void *)(v75 - 8);
  uint64_t v77 = *(unsigned __int8 *)(v76 + 80);
  uint64_t v78 = (v77 + 32) & ~v77;
  uint64_t v79 = swift_allocObject(v74, v78 + *(void *)(v76 + 72), v77 | 7);
  *(_OWORD *)(v79 + sub_100195658(v0 + 16) = xmmword_1004CDCA0;
  uint64_t v80 = v79 + v78;
  sub_100183098(&qword_10064A0D0);
  uint64_t v81 = (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v129 + 16))(v80, v49, v130);
  UUID.init()(v81);
  (*(void (**)(uint64_t, void, uint64_t))(v76 + 104))( v80,  enum case for SFAirDrop.AcceptAction.single<A>(_:),  v75);
  unint64_t v82 = v127;
  uint64_t v83 = v109;
  uint64_t v84 = v117;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v128 + 16))(v109, v127, v117);
  SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)( v71,  v73,  v122,  v69,  v123,  v104,  v79,  v83,  0,  v126,  v101,  v100,  v99);
  uint64_t v85 = type metadata accessor for TaskPriority(0LL);
  uint64_t v86 = (uint64_t)v120;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56LL))(v120, 1LL, 1LL, v85);
  uint64_t v87 = v111;
  uint64_t v88 = v112;
  uint64_t v89 = v114;
  v105(v111, v112, v114);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v90 = static AirDropActor.shared;
  uint64_t v91 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v92 = (v70 + 32) & v125;
  uint64_t v93 = swift_allocObject(&unk_1005D6968, v92 + v110, v107);
  *(void *)(v93 + sub_100195658(v0 + 16) = v90;
  *(void *)(v93 + 24) = v91;
  v108(v93 + v92, v87, v89);
  swift_retain(v90);
  uint64_t v94 = sub_1001B356C(v86, (uint64_t)&unk_10064A0E0, v93);
  (*(void (**)(_BYTE *, uint64_t))(v129 + 8))(v124, v130);
  (*(void (**)(_BYTE *, uint64_t))(v128 + 8))(v82, v84);
  (*(void (**)(_BYTE *, uint64_t))(v113 + 8))(v88, v89);
  uint64_t v95 = v121;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v118 + 32))(v121, v131, v119);
  uint64_t result = sub_100183098(&qword_10064A010);
  *(void *)(v95 + *(int *)(result + 52)) = v94;
  return result;
}

uint64_t sub_10025C808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_10025C824, 0LL, 0LL);
}

uint64_t sub_10025C824()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10025C888, static AirDropActor.shared, 0LL);
}

uint64_t sub_10025C888()
{
  __n128 v1 = sub_1001F1F34(*(void *)(v0 + 32));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_10025C8C0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  char v3 = a2;
  LODWORD(v89) = a2;
  uint64_t v93 = a1;
  uint64_t v106 = a3;
  uint64_t v4 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v4);
  uint64_t v105 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Date(0LL);
  __chkstk_darwin(v6);
  uint64_t v102 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for UUID(0LL);
  __chkstk_darwin(v8);
  uint64_t v100 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_10064A048);
  uint64_t v103 = *(void *)(v10 - 8);
  uint64_t v104 = v10;
  __chkstk_darwin(v10);
  uint64_t v113 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v86 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v84 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_100183098(&qword_10064A060);
  uint64_t v111 = *(void *)(v13 - 8);
  uint64_t v112 = v13;
  __chkstk_darwin(v13);
  uint64_t v107 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for SFAirDrop.ButtonConfiguration(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v91 = v15;
  __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t *)((char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v101 = type metadata accessor for SFAirDrop.DeclineAction(0LL);
  uint64_t v110 = *(void *)(v101 - 8);
  uint64_t v19 = __chkstk_darwin(v101);
  uint64_t v94 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v109 = (char *)&v83 - v21;
  uint64_t v22 = sub_100183098((uint64_t *)&unk_1006456D0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v83 - v27;
  SFProgressContinuation.init(_:initialProgress:file:line:)( 0xD00000000000001DLL,  0x8000000100507220LL,  v29,  0xD000000000000067LL,  0x8000000100507240LL,  479LL,  (char *)&type metadata for () + 8,  &type metadata for Bool);
  uint64_t v30 = 0x6574656C6544LL;
  if ((v3 & 1) != 0) {
    uint64_t v30 = 0x656E696C636544LL;
  }
  unint64_t v31 = 0xE700000000000000LL;
  if ((v3 & 1) == 0) {
    unint64_t v31 = 0xE600000000000000LL;
  }
  *uint64_t v18 = v30;
  v18[1] = v31;
  LODWORD(v88) = enum case for SFAirDrop.ButtonConfiguration.text(_:);
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v16 + 104);
  uint64_t v90 = v32;
  uint64_t v33 = 1885693259LL;
  if ((v3 & 1) != 0) {
    uint64_t v33 = 0x747065636341LL;
  }
  uint64_t v92 = (void (*)(uint64_t, char *, uint64_t))v33;
  unint64_t v34 = 0xE400000000000000LL;
  if ((v3 & 1) != 0) {
    unint64_t v34 = 0xE600000000000000LL;
  }
  unint64_t v87 = v34;
  ((void (*)(uint64_t *))v32)(v18);
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  v35(v26, v28, v22);
  uint64_t v36 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v37 = (v36 + 16) & ~v36;
  uint64_t v95 = v24;
  uint64_t v38 = v37 + v24;
  uint64_t v108 = v36;
  uint64_t v39 = v36 | 7;
  uint64_t v40 = swift_allocObject(&unk_1005D68A0, v38, v36 | 7);
  uint64_t v98 = v23;
  uint64_t v41 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 32);
  v41(v40 + v37, v26, v22);
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)( 0x656E696C636544LL,  0xE700000000000000LL,  v18,  0LL,  sub_10025F640,  v40);
  unint64_t v42 = v87;
  *uint64_t v18 = (uint64_t)v92;
  v18[1] = v42;
  v90((char *)v18, (char *)v88, v91);
  LOBYTE(v114) = 1;
  uint64_t v90 = v35;
  v35(v26, v28, v22);
  uint64_t v43 = v107;
  uint64_t v91 = v39;
  uint64_t v44 = swift_allocObject(&unk_1005D68C8, v38, v39);
  uint64_t v92 = v41;
  v41(v44 + v37, v26, v22);
  uint64_t v45 = SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)( 0x747065636341LL,  0xE600000000000000LL,  v18,  0LL,  0LL,  &v114,  sub_10025F6A8,  v44,  &type metadata for Bool,  &protocol witness table for Bool,  &protocol witness table for Bool,  &protocol witness table for Bool);
  uint64_t v99 = v22;
  unint64_t v96 = v26;
  uint64_t v97 = v28;
  if ((v89 & 1) != 0)
  {
    uint64_t v46 = SFAirDrop.ContactInfo.fullName.getter(v45);
    uint64_t v86 = v46;
    unint64_t v87 = v47;
    unint64_t v89 = 0xD000000000000013LL;
    unint64_t v48 = 0x80000001005072D0LL;
    uint64_t v49 = &v117;
  }

  else
  {
    uint64_t v114 = SFAirDrop.ContactInfo.fullName.getter(v45);
    uint64_t v115 = v50;
    v51._uint64_t countAndFlagsBits = 10LL;
    v51._object = (void *)0xE100000000000000LL;
    String.append(_:)(v51);
    uint64_t v52 = v84;
    SFAirDrop.ContactInfo.handle.getter();
    uint64_t v53 = sub_100183F14( &qword_10064A068,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactInfo.Handle);
    uint64_t v54 = v86;
    v55._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v86, v53);
    object = (const char *)v55._object;
    String.append(_:)(v55);
    __n128 v57 = swift_bridgeObjectRelease(object);
    uint64_t v46 = (*(uint64_t (**)(char *, uint64_t, __n128))(v85 + 8))(v52, v54, v57);
    unint64_t v89 = v114;
    uint64_t v88 = v115;
    unint64_t v87 = 0x80000001005072B0LL;
    unint64_t v48 = 0xD000000000000012LL;
    uint64_t v49 = &v116;
  }

  *(v49 - sub_100195658(v0 + 32) = v48;
  uint64_t v93 = ~v108;
  Swift::String v58 = v100;
  uint64_t v59 = UUID.init()(v46);
  uint64_t v60 = v102;
  static Date.now.getter(v59);
  uint64_t v61 = sub_100183098(&qword_10064A070);
  uint64_t v62 = sub_100183098(&qword_10064A078);
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v64 = *(unsigned __int8 *)(v63 + 80);
  uint64_t v65 = (v64 + 32) & ~v64;
  uint64_t v66 = swift_allocObject(v61, v65 + *(void *)(v63 + 72), v64 | 7);
  *(_OWORD *)(v66 + sub_100195658(v0 + 16) = xmmword_1004CDCA0;
  sub_100183098(&qword_10064A080);
  uint64_t v67 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v111 + 16))(v66 + v65, v43, v112);
  UUID.init()(v67);
  (*(void (**)(uint64_t, void, uint64_t))(v63 + 104))( v66 + v65,  enum case for SFAirDrop.AcceptAction.single<A>(_:),  v62);
  __n128 v68 = v109;
  unint64_t v69 = v94;
  uint64_t v70 = v101;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v94, v109, v101);
  SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)( v58,  v60,  v86,  v87,  v89,  v88,  v66,  v69,  0,  &type metadata for Bool,  &protocol witness table for Bool,  &protocol witness table for Bool,  &protocol witness table for Bool);
  uint64_t v71 = type metadata accessor for TaskPriority(0LL);
  uint64_t v72 = (uint64_t)v105;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56LL))(v105, 1LL, 1LL, v71);
  uint64_t v74 = v96;
  uint64_t v73 = v97;
  uint64_t v75 = v99;
  v90(v96, v97, v99);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v76 = static AirDropActor.shared;
  uint64_t v77 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v78 = (v108 + 32) & v93;
  uint64_t v79 = swift_allocObject(&unk_1005D68F0, v78 + v95, v91);
  *(void *)(v79 + sub_100195658(v0 + 16) = v76;
  *(void *)(v79 + 24) = v77;
  v92(v79 + v78, v74, v75);
  swift_retain(v76);
  uint64_t v80 = sub_1001B36AC(v72, (uint64_t)&unk_10064A090, v79);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v107, v112);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v68, v70);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v73, v75);
  uint64_t v81 = v106;
  (*(void (**)(uint64_t, char *, uint64_t))(v103 + 32))(v106, v113, v104);
  uint64_t result = sub_100183098(&qword_10064A000);
  *(void *)(v81 + *(int *)(result + 52)) = v80;
  return result;
}

uint64_t sub_10025D1FC()
{
  uint64_t v0 = type metadata accessor for SFAirDropSend.Failure(0LL);
  uint64_t v1 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  uint64_t v2 = swift_allocError(v0, v1, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 - 8) + 104LL))( v3,  enum case for SFAirDropSend.Failure.cancelled(_:),  v0);
  uint64_t v4 = sub_100183098(&qword_10064A0A0);
  SFProgressContinuation.fail(with:)(v2, v4);
  return swift_errorRelease(v2);
}

uint64_t sub_10025D29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[2] = a1;
  void v4[3] = a4;
  uint64_t v5 = sub_100183098(&qword_10064A0E8);
  v4[4] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  void v4[5] = v6;
  void v4[6] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v7 = static AirDropActor.shared;
  v4[7] = static AirDropActor.shared;
  return swift_task_switch(sub_10025D334, v7, 0LL);
}

uint64_t sub_10025D334()
{
  uint64_t v1 = sub_100183098(&qword_10064A0A0);
  SFProgressContinuation.task.getter(v1);
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10025D3A8;
  return SFProgressTask.finalValue.getter(v0[2], v0[4]);
}

uint64_t sub_10025D3A8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 64);
  uint64_t v5 = *(void *)(*v1 + 40);
  uint64_t v4 = *(void *)(*v1 + 48);
  uint64_t v6 = *(void *)(*v1 + 32);
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0) {
    uint64_t v7 = sub_10025D468;
  }
  else {
    uint64_t v7 = sub_10025D434;
  }
  return swift_task_switch(v7, *(void *)(v2 + 56), 0LL);
}

uint64_t sub_10025D434()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025D468()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025D49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[2] = a1;
  void v4[3] = a4;
  uint64_t v5 = sub_100183098(&qword_1006457C8);
  v4[4] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  void v4[5] = v6;
  void v4[6] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v7 = static AirDropActor.shared;
  v4[7] = static AirDropActor.shared;
  return swift_task_switch(sub_10025D534, v7, 0LL);
}

uint64_t sub_10025D534()
{
  uint64_t v1 = sub_100183098((uint64_t *)&unk_1006456D0);
  SFProgressContinuation.task.getter(v1);
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10025D5A8;
  return SFProgressTask.finalValue.getter(v0[2], v0[4]);
}

uint64_t sub_10025D5A8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 64);
  uint64_t v5 = *(void *)(*v1 + 40);
  uint64_t v4 = *(void *)(*v1 + 48);
  uint64_t v6 = *(void *)(*v1 + 32);
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0) {
    uint64_t v7 = sub_1002612E8;
  }
  else {
    uint64_t v7 = sub_1002612E4;
  }
  return swift_task_switch(v7, *(void *)(v2 + 56), 0LL);
}

uint64_t sub_10025D634(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v89 = a1;
  uint64_t v3 = sub_100183098(&qword_100649F58);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v88 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v6 = *(void *)(v88 - 8);
  uint64_t v7 = __chkstk_darwin(v88);
  uint64_t v9 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v84 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v84 - v13;
  uint64_t v15 = type metadata accessor for SFAirDrop.TransferType(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = SFAirDropSend.Request.type.getter(v17);
  char v21 = SFAirDrop.TransferType.isOnlyExchange.getter(v20);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  if ((v21 & 1) != 0) {
    return result;
  }
  uint64_t v84 = v12;
  uint64_t v85 = v9;
  uint64_t v23 = (uint64_t)v14;
  uint64_t v86 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints;
  uint64_t v87 = v2;
  uint64_t v24 = *(void *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
  uint64_t v25 = swift_retain(v24);
  CurrentValueSubject.value.getter(v25);
  uint64_t v26 = swift_release(v24);
  uint64_t v27 = (const char *)v91[2];
  __chkstk_darwin(v26);
  uint64_t v28 = v89;
  *(&v84 - 2) = (char *)v89;
  sub_10028CBE0((uint64_t (*)(char *))sub_10025E36C, (uint64_t)v27, (uint64_t)v5);
  __n128 v29 = swift_bridgeObjectRelease(v27);
  uint64_t v30 = v88;
  uint64_t v31 = v6;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v5, 1LL, v88, v29) == 1)
  {
    sub_100187100((uint64_t)v5, &qword_100649F58);
LABEL_8:
    uint64_t v46 = v87;
    uint64_t v47 = (uint64_t)v85;
    uint64_t v48 = sub_1001A4B84(v28, (uint64_t)v85, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
    os_log_type_t v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      Swift::String v51 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v52 = swift_slowAlloc(32LL, -1LL);
      v91[0] = v52;
      *(_DWORD *)Swift::String v51 = 136315138;
      sub_10020E23C();
      uint64_t v54 = (const char *)v53;
      uint64_t v90 = sub_10018CDB4(v55, v53, v91);
      uint64_t v46 = v87;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v91, v51 + 4, v51 + 12);
      swift_bridgeObjectRelease(v54);
      sub_1001A4BC8(v47, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl( (void *)&_mh_execute_header,  v49,  v50,  "Adding connectable endpoint to runner endpoints %s",  v51,  0xCu);
      swift_arrayDestroy(v52, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1LL, -1LL);
      uint64_t v56 = v51;
      uint64_t v28 = v89;
      swift_slowDealloc(v56, -1LL, -1LL);
    }

    else
    {

      sub_1001A4BC8(v47, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    uint64_t v57 = v86;
    uint64_t v58 = sub_100183098(&qword_100645390);
    uint64_t v59 = *(unsigned __int8 *)(v31 + 80);
    uint64_t v60 = (v59 + 32) & ~v59;
    uint64_t v61 = swift_allocObject(v58, v60 + *(void *)(v31 + 72), v59 | 7);
    *(_OWORD *)(v61 + sub_100195658(v0 + 16) = xmmword_1004CDCA0;
    uint64_t v62 = v61 + v60;
    sub_1001A4B84(v28, v61 + v60, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v63 = (const char *)sub_100190128(v61);
    swift_setDeallocating(v61);
    swift_arrayDestroy(v62, 1LL, v30);
    swift_deallocClassInstance(v61, 32LL, 7LL);
    uint64_t v64 = *(void *)(v46 + v57);
    uint64_t v65 = swift_retain(v64);
    CurrentValueSubject.value.getter(v65);
    swift_release(v64);
    uint64_t v66 = *(void *)(v46 + v57);
    uint64_t v67 = v91[0];
    swift_retain(v66);
    swift_bridgeObjectRetain(v63);
    unint64_t v69 = (const char *)sub_100456F0C(v68, v67);
    uint64_t v90 = (uint64_t)v69;
    CurrentValueSubject.send(_:)(&v90);
    *(void *)&double v70 = swift_bridgeObjectRelease(v63).n128_u64[0];
    swift_bridgeObjectRelease(v69, v70);
    return swift_release(v66);
  }

  uint64_t v32 = v23;
  sub_1001A4B40((uint64_t)v5, v23, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_100212640();
  uint64_t v34 = v33;
  sub_100212640();
  if (v35 >= v34)
  {
    sub_1001A4BC8(v23, type metadata accessor for SDAirDropDiscoveredEndpoint);
    goto LABEL_8;
  }

  uint64_t v36 = v87;
  uint64_t v37 = (uint64_t)v84;
  uint64_t v38 = sub_1001A4B84(v28, (uint64_t)v84, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
  os_log_type_t v40 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v42 = swift_slowAlloc(32LL, -1LL);
    v91[0] = v42;
    *(_DWORD *)uint64_t v41 = 136315138;
    uint64_t v86 = (uint64_t)(v41 + 4);
    sub_10020E23C();
    uint64_t v44 = (const char *)v43;
    uint64_t v90 = sub_10018CDB4(v45, v43, v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v91, v86, v41 + 12);
    swift_bridgeObjectRelease(v44);
    sub_1001A4BC8(v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Adding connectable endpoint to backup endpoints %s", v41, 0xCu);
    swift_arrayDestroy(v42, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1LL, -1LL);
    uint64_t v36 = v87;
    uint64_t v30 = v88;
    swift_slowDealloc(v41, -1LL, -1LL);
  }

  else
  {

    sub_1001A4BC8(v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  uint64_t v71 = sub_100183098(&qword_100645390);
  uint64_t v72 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v73 = (v72 + 32) & ~v72;
  uint64_t v74 = swift_allocObject(v71, v73 + *(void *)(v31 + 72), v72 | 7);
  *(_OWORD *)(v74 + sub_100195658(v0 + 16) = xmmword_1004CDCA0;
  sub_1001A4B84(v28, v74 + v73, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v75 = (const char *)sub_100190128(v74);
  swift_setDeallocating(v74);
  swift_arrayDestroy(v74 + v73, 1LL, v30);
  swift_deallocClassInstance(v74, 32LL, 7LL);
  uint64_t v76 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints;
  uint64_t v77 = *(void *)(v36 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints);
  uint64_t v78 = swift_retain(v77);
  CurrentValueSubject.value.getter(v78);
  swift_release(v77);
  uint64_t v79 = *(void *)(v36 + v76);
  uint64_t v80 = v91[0];
  swift_retain(v79);
  swift_bridgeObjectRetain(v75);
  unint64_t v82 = (const char *)sub_100456F0C(v81, v80);
  uint64_t v90 = (uint64_t)v82;
  CurrentValueSubject.send(_:)(&v90);
  *(void *)&double v83 = swift_bridgeObjectRelease(v75).n128_u64[0];
  swift_bridgeObjectRelease(v82, v83);
  swift_release(v79);
  return sub_1001A4BC8(v32, type metadata accessor for SDAirDropDiscoveredEndpoint);
}

void sub_10025DD3C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  uint64_t v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v11 - v7;
  sub_1001A4B84(a1, (uint64_t)&v11 - v7, v9);
  uint64_t v10 = (char *)&loc_10025DE6C + *((int *)qword_10025E118 + swift_getEnumCaseMultiPayload(v8, v5));
  __asm { BR              X10 }

void sub_10025DE7C()
{
  uint64_t v5 = sub_1001A4B40(v3, v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v6 = NWEndpoint.nw.getter(v5);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t device_id = nw_endpoint_get_device_id();
    swift_unknownObjectRelease(v7);
    if (device_id) {
      String.init(cString:)(device_id);
    }
    sub_1001A4BC8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1001A4B84(v2, v4, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v9 = (char *)&loc_10025DF80 + *((int *)qword_10025E128 + swift_getEnumCaseMultiPayload(v4, v0));
    __asm { BR              X10 }
  }

  __break(1u);
  JUMPOUT(0x10025E114LL);
}

uint64_t sub_10025E138()
{
  swift_bridgeObjectRelease(*(const char **)(v0
                                           + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections));

  swift_bridgeObjectRelease(*(const char **)(v0
                                           + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_urls));
  return sub_100187100( v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner____lazy_storage___senderContact,  &qword_100649F60);
}

uint64_t sub_10025E254()
{
  return _s6RunnerCMa(0LL);
}

uint64_t _s6RunnerCMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, (uint64_t *)&unk_100649F38, (uint64_t)&_s6RunnerCMn);
}

void sub_10025E270(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  void v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  void v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[4] = "\b";
  void v4[5] = "\b";
  sub_10025E314(319LL);
  if (v3 <= 0x3F)
  {
    void v4[6] = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 7LL, v4, a1 + 432);
  }

void sub_10025E314(uint64_t a1)
{
  if (!qword_100649F48)
  {
    uint64_t v2 = sub_100183124(&qword_100649F50);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_100649F48);
    }
  }

uint64_t sub_10025E36C(uint64_t a1)
{
  return v1 & 1;
}

uint64_t sub_10025E388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v9 = sub_100183098(&qword_10064A1A0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v31[3] = _s6RunnerCMa(0LL);
  v31[4] = &off_1005D6848;
  v31[0] = a5;
  swift_defaultActor_initialize(a6);
  uint64_t v12 = a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
  uint64_t v13 = sub_100183098(&qword_10064A1A8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56LL);
  v14(v12, 1LL, 1LL, v13);
  *(void *)(a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askTasks) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_failedResolveEndpointIDs) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_needsFallbackDeviceIDs) = &_swiftEmptySetSingleton;
  *(_BYTE *)(a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_pipelinedUploadAvailable) = 1;
  uint64_t v15 = a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_sendRequest;
  uint64_t v16 = type metadata accessor for SFAirDropSend.Request(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, a1, v16);
  uint64_t v18 = a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_initialTransfer;
  uint64_t v19 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v18, v27, v19);
  *(void *)(a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_endpointService) = v28;
  *(void *)(a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_deviceStatus) = v29;
  sub_10019A6C4((uint64_t)v31, a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner);
  v30[0] = 0LL;
  uint64_t v22 = sub_100183098(&qword_10064A1B0);
  uint64_t v23 = sub_100183098(&qword_10064A1B8);
  SFProgressContinuation.init(_:initialProgress:file:line:)( 0xD000000000000015LL,  0x8000000100507380LL,  v30,  0xD00000000000005FLL,  0x80000001005073A0LL,  58LL,  v22,  v23);
  sub_10018709C(v31);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v19);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v26, v16);
  v14((uint64_t)v11, 0LL, 1LL, v13);
  uint64_t v24 = a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
  swift_beginAccess(a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation, v30, 33LL, 0LL);
  sub_1001C9860((uint64_t)v11, v24, &qword_10064A1A0);
  swift_endAccess(v30);
  return a6;
}

uint64_t sub_10025E62C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + sub_100195658(v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch(sub_10025E644, 0LL, 0LL);
}

uint64_t sub_10025E644()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + *(int *)(sub_100183098(&qword_10064A000) + 52));
  unint64_t v3 = (void *)swift_task_alloc(async function pointer to Task.value.getter[1]);
  *(void *)(v0 + sub_100195658(v0 + 32) = v3;
  uint64_t v4 = sub_100183098(&qword_100645710);
  *unint64_t v3 = v0;
  v3[1] = sub_10025E6DC;
  return Task.value.getter(v0 + 48, v2, &type metadata for Bool, v4, &protocol self-conformance witness table for Error);
}

uint64_t sub_10025E6DC()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32LL);
  *(void *)(*(void *)v1 + 40LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    unint64_t v3 = sub_10025E758;
  }
  else {
    unint64_t v3 = sub_10025E740;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_10025E740()
{
  **(_BYTE **)(v0 + sub_100195658(v0 + 16) = *(_BYTE *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025E758()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10025E764( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void (**a10)(void, uint64_t), uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  uint64_t v65 = a8;
  uint64_t v66 = a6;
  uint64_t v68 = a5;
  uint64_t v69 = a4;
  uint64_t v71 = a2;
  uint64_t v61 = a13;
  uint64_t v62 = a1;
  uint64_t v63 = a11;
  uint64_t v64 = a12;
  uint64_t v57 = a10;
  uint64_t v58 = a14;
  uint64_t v56 = a9;
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v59 = *(void *)(v17 - 8);
  uint64_t v60 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v72 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  uint64_t v20 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for SFAirDrop.TransferType(0LL);
  uint64_t v54 = *(void *)(v23 - 8);
  uint64_t v55 = v23;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = type metadata accessor for SFAirDropSend.Request(0LL);
  uint64_t v73 = *(void *)(v26 - 8);
  uint64_t v27 = __chkstk_darwin(v26);
  unint64_t v53 = (char *)&v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v53 - v29;
  uint64_t v31 = v14;
  uint64_t v70 = a3;
  uint64_t v67 = a7;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000LL) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_1001DD468((uint64_t)_swiftEmptyArrayStorage);
  }

  else
  {
    uint64_t v32 = &_swiftEmptySetSingleton;
  }

  *(void *)&v31[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections] = v32;
  *(void *)&v31[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection] = 0LL;
  *(void *)&v31[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_urls] = 0LL;
  uint64_t v33 = &v31[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner____lazy_storage___senderContact];
  uint64_t v34 = sub_100183098(&qword_100649F50);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56LL))(v33, 1LL, 1LL, v34);
  uint64_t v35 = v56;
  uint64_t v36 = v57;
  *(void *)&v31[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_pseudonymService] = v56;
  *(void *)&v31[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_nearbyAgent] = v36;
  uint64_t v37 = v58;
  *(void *)&v31[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_endpointService] = v58;
  swift_retain(v35);
  id v38 = v36;
  id v39 = v37;

  uint64_t v40 = v71;
  static SFAirDrop.TransferType.transferType(for:)(v71);
  SFAirDropSend.Request.requestWithType(_:)(v25);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v25, v55);
  uint64_t v41 = (uint64_t)v53;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v53, v30, v26);
  uint64_t v42 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v70, v72);
  uint64_t v57 = (void (**)(void, uint64_t))v20;
  uint64_t v58 = (void *)v26;
  uint64_t v43 = v59;
  uint64_t v44 = (uint64_t)v19;
  uint64_t v45 = v19;
  uint64_t v46 = v68;
  uint64_t v47 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v45, v68, v60);
  id v48 = sub_100219854(v62, v65, v41, (uint64_t)v22, v66, v67, v63, v64, v61, v44);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v46, v47);
  sub_100187100(v69, &qword_100649F50);
  v57[1](v42, v72);
  uint64_t v49 = *(void (**)(uint64_t, void *))(v73 + 8);
  uint64_t v50 = v40;
  Swift::String v51 = v58;
  v49(v50, v58);
  v49((uint64_t)v30, v51);
  return v48;
}

void sub_10025EAE4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = 0LL;
  int64_t v6 = 0LL;
  uint64_t v22 = a3 + 56;
  uint64_t v7 = 1LL << *(_BYTE *)(a3 + 32);
  uint64_t v8 = -1LL;
  if (v7 < 64) {
    uint64_t v8 = ~(-1LL << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }

    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1LL))
    {
      __break(1u);
      goto LABEL_26;
    }

    if (v15 >= v10) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v22 + 8 * v15);
    ++v6;
    if (!v16)
    {
      int64_t v6 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v22 + 8 * v6);
      if (!v16)
      {
        int64_t v6 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v22 + 8 * v6);
        if (!v16) {
          break;
        }
      }
    }

uint64_t sub_10025ECBC(uint64_t a1, void *a2)
{
  char v4 = *(_BYTE *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1LL << v4) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  uint64_t v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * v6, 8LL), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    unint64_t v9 = (char *)&v18 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0LL);
    bzero(v9, 8 * v6);
    id v10 = v8;
    sub_10025EAE4((unint64_t *)v9, v6, a1, (uint64_t)v10);
    uint64_t v12 = v11;
    swift_release(a1);

    if (v2) {
      swift_willThrow(v13);
    }
  }

  else
  {
    char v14 = (void *)swift_slowAlloc(8 * v6, -1LL);
    bzero(v14, 8 * v6);
    id v15 = v8;
    sub_10025EAE4((unint64_t *)v14, v6, a1, (uint64_t)v15);
    uint64_t v12 = v16;
    swift_release(a1);

    swift_slowDealloc(v14, -1LL, -1LL);
  }

  return v12;
}

Swift::Int sub_10025EE68(uint64_t a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType(a2);
  if ((a1 & 0xC000000000000001LL) == 0) {
    return sub_10025ECBC(a1, a2);
  }
  uint64_t v5 = ObjectType;
  unint64_t v6 = &_swiftEmptySetSingleton;
  uint64_t v27 = &_swiftEmptySetSingleton;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  else {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  id v8 = a2;
  uint64_t v9 = __CocoaSet.makeIterator()(v7);
  uint64_t v10 = __CocoaSet.Iterator.next()(v9);
  if (v10)
  {
    uint64_t v11 = &_swiftEmptySetSingleton;
    do
    {
      uint64_t v25 = v10;
      swift_dynamicCast(&v26, &v25, (char *)&type metadata for Swift.AnyObject + 8, v5, 7LL);
      char v13 = static NSObject.== infix(_:_:)(v26, v8);
      id v14 = v26;
      if ((v13 & 1) != 0)
      {
      }

      else
      {
        unint64_t v15 = v11[2];
        if (v11[3] <= v15)
        {
          sub_1003B85A4(v15 + 1);
          uint64_t v11 = v27;
        }

        Swift::Int result = NSObject._rawHashValue(seed:)(v11[5]);
        uint64_t v16 = (char *)(v11 + 7);
        uint64_t v17 = -1LL << *((_BYTE *)v11 + 32);
        unint64_t v18 = result & ~v17;
        unint64_t v19 = v18 >> 6;
        if (((-1LL << v18) & ~v11[(v18 >> 6) + 7]) != 0)
        {
          unint64_t v20 = __clz(__rbit64((-1LL << v18) & ~v11[(v18 >> 6) + 7])) | v18 & 0x7FFFFFFFFFFFFFC0LL;
        }

        else
        {
          char v21 = 0;
          unint64_t v22 = (unint64_t)(63 - v17) >> 6;
          do
          {
            if (++v19 == v22 && (v21 & 1) != 0)
            {
              __break(1u);
              return result;
            }

            BOOL v23 = v19 == v22;
            if (v19 == v22) {
              unint64_t v19 = 0LL;
            }
            v21 |= v23;
            uint64_t v24 = *(void *)&v16[8 * v19];
          }

          while (v24 == -1);
          unint64_t v20 = __clz(__rbit64(~v24)) + (v19 << 6);
        }

        *(void *)&v16[(v20 >> 3) & 0x1FFFFFFFFFFFFFF8LL] |= 1LL << v20;
        *(void *)(v11[6] + 8 * v2_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v14;
        ++v11[2];
      }

      uint64_t v10 = __CocoaSet.Iterator.next()(result);
    }

    while (v10);
    unint64_t v6 = v27;
  }

  swift_release(v9);
  return (Swift::Int)v6;
}

uint64_t sub_10025F080(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v12 = (void *)swift_task_alloc(dword_100649FAC);
  *(void *)(v3 + sub_100195658(v0 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_100195708;
  return sub_1002509B8(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_10025F114(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc(dword_100649FBC);
  *(void *)(v3 + sub_100195658(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  return sub_10024D4D0(a1, a2, v6);
}

uint64_t sub_10025F17C()
{
  *(void *)(v1 + 24) = v0;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10025F1E4, static AirDropActor.shared, 0LL);
}

uint64_t sub_10025F1E4(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v5 = swift_slowAlloc(32LL, -1LL);
    uint64_t v7 = v5;
    *(_DWORD *)char v4 = 136315138;
    *(void *)(v1 + sub_100195658(v0 + 16) = sub_10018CDB4(0xD000000000000021LL, 0x8000000100507330LL, &v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v4 + 4, v4 + 12);
    _os_log_impl( (void *)&_mh_execute_header,  v2,  v3,  "Send StateMachine UserSafety SKIP {userSafetyMode: %s}",  v4,  0xCu);
    swift_arrayDestroy(v5, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v5, -1LL, -1LL);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_10025F338()
{
  unint64_t result = qword_100645140;
  if (!qword_100645140)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSUserDefaults);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100645140);
  }

  return result;
}

uint64_t sub_10025F374(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc(dword_100650C64);
  *(void *)(v2 + sub_100195658(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  return sub_10036E3DC(a1, v4);
}

void sub_10025F3CC()
{
}

uint64_t sub_10025F3D4(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc(dword_10064A02C);
  __int128 v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + sub_100195658(v0 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100195708;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + sub_100195658(v0 + 16) = a1;
  return swift_task_switch(sub_10025C824, 0LL, 0LL);
}

uint64_t sub_10025F43C( uint64_t a1, const char *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, const char *a10)
{
  if (a10)
  {
    swift_bridgeObjectRetain(a2);
    sub_1001A4C04(a3, a4);
    sub_10019BA8C(a5, a6);
    sub_10019BA8C(a7, a8);
    return swift_bridgeObjectRetain(a10);
  }

  return result;
}

__n128 sub_10025F4D4( uint64_t a1, const char *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, const char *a10)
{
  if (a10)
  {
    swift_bridgeObjectRelease(a2);
    sub_100189B0C(a3, a4);
    sub_100189B20(a5, a6);
    sub_100189B20(a7, a8);
    return swift_bridgeObjectRelease(a10);
  }

  return result;
}

void *sub_10025F56C( void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_10025F5C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  __int128 v5 = (void *)swift_task_alloc(dword_10064A054);
  *(void *)(v2 + sub_100195658(v0 + 16) = v5;
  *__int128 v5 = v2;
  v5[1] = sub_100195708;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10064A050 + dword_10064A050))(a1, v4);
}

void sub_10025F62C()
{
}

uint64_t sub_10025F634()
{
  return sub_10025F7F0((uint64_t *)&unk_1006456D0);
}

uint64_t sub_10025F640()
{
  char v2 = 0;
  uint64_t v0 = sub_100183098((uint64_t *)&unk_1006456D0);
  return SFProgressContinuation.finish(with:)(&v2, v0);
}

uint64_t sub_10025F69C()
{
  return sub_10025F7F0((uint64_t *)&unk_1006456D0);
}

uint64_t sub_10025F6A8(char *a1)
{
  char v4 = *a1;
  uint64_t v2 = sub_100183098((uint64_t *)&unk_1006456D0);
  return SFProgressContinuation.finish(with:)(&v4, v2);
}

uint64_t sub_10025F714()
{
  return sub_10025F8A0((uint64_t *)&unk_1006456D0);
}

uint64_t sub_10025F720(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(sub_100183098((uint64_t *)&unk_1006456D0) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((v4 + 32) & ~v4);
  uint64_t v8 = (void *)swift_task_alloc(dword_10064A08C);
  *(void *)(v2 + sub_100195658(v0 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100195708;
  return sub_10025D49C(a1, v5, v6, v7);
}

uint64_t sub_10025F7A8()
{
  return sub_10025F7F0(&qword_10064A0A0);
}

uint64_t sub_10025F7B4()
{
  return sub_10025D1FC();
}

uint64_t sub_10025F7E4()
{
  return sub_10025F7F0(&qword_10064A0A0);
}

uint64_t sub_10025F7F0(uint64_t *a1)
{
  uint64_t v2 = sub_100183098(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject(v1, v5);
}

uint64_t sub_10025F84C(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_10064A0A0);
  return SFProgressContinuation.finish(with:)(a1, v2);
}

uint64_t sub_10025F894()
{
  return sub_10025F8A0(&qword_10064A0A0);
}

uint64_t sub_10025F8A0(uint64_t *a1)
{
  uint64_t v2 = sub_100183098(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  swift_unknownObjectRelease(*(void *)(v1 + 16));
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject(v1, v5);
}

uint64_t sub_10025F910(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(sub_100183098(&qword_10064A0A0) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((v4 + 32) & ~v4);
  uint64_t v8 = (void *)swift_task_alloc(dword_10064A0DC);
  *(void *)(v2 + sub_100195658(v0 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100195708;
  return sub_10025D29C(a1, v5, v6, v7);
}

uint64_t sub_10025F998(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100647608);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SFAirDrop.TransferType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = _s14descr1005DF7D1C10AskRequestVMa(0LL);
  sub_1001915A4(a1 + *(int *)(v12 + 20), (uint64_t)v4, &qword_100647608);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1LL, v5) != 1)
  {
    uint64_t v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    char v14 = SFAirDrop.TransferType.isFiles.getter(v13);
    uint64_t v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    if ((v14 & 1) != 0)
    {
      uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
      v16(v9, v5);
      v16(v11, v5);
    }

    else
    {
      char v17 = SFAirDrop.TransferType.isCustom.getter(v15);
      unint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
      v18(v9, v5);
      v18(v11, v5);
      if ((v17 & 1) == 0) {
        return 0LL;
      }
    }

    return 1LL;
  }

  sub_100187100((uint64_t)v4, &qword_100647608);
  return 0LL;
}

uint64_t sub_10025FB3C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10025FB60()
{
  uint64_t v1 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = sub_100183098(&qword_10064A100);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject(v0, v8 + 8);
}

double sub_10025FC34()
{
  uint64_t v1 = *(void *)(type metadata accessor for SFAirDropSend.Transfer(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_100183098(&qword_10064A100) - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return sub_100251238( *(void *)(v0 + 16),  v0 + v2,  v0 + v5,  *(void *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8LL)));
}

void *sub_10025FCB0(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[6];
  uint64_t v5 = a1[8];
  uint64_t v6 = a1[11];
  unint64_t v7 = a1[12];
  swift_bridgeObjectRetain(a1[10]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  sub_1001A4C04(v6, v7);
  return a1;
}

uint64_t sub_10025FD30()
{
  uint64_t v1 = (int *)_s14descr1005DF7D1C10AskRequestVMa(0LL);
  uint64_t v2 = *((void *)v1 - 1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);

  uint64_t v5 = v0 + v3;
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v5 + v1[5];
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferType(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = (uint64_t *)(v5 + v1[6]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_100189B20(*v11, v12);
  }
  *(void *)&double v13 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v1[7] + 8)).n128_u64[0];
  *(void *)&double v14 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v1[8] + 8), v13).n128_u64[0];
  *(void *)&double v15 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v1[9] + 8), v14).n128_u64[0];
  *(void *)&double v16 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v1[10] + 8), v15).n128_u64[0];
  *(void *)&double v17 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v1[11]), v16).n128_u64[0];
  *(void *)&double v18 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v1[12]), v17).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(v5 + v1[13] + 8), v18);
  unint64_t v19 = (uint64_t *)(v5 + v1[14]);
  unint64_t v20 = v19[1];
  if (v20 >> 60 != 15) {
    sub_100189B20(*v19, v20);
  }
  char v21 = (uint64_t *)(v5 + v1[15]);
  unint64_t v22 = v21[1];
  if (v22 >> 60 != 15) {
    sub_100189B20(*v21, v22);
  }
  BOOL v23 = (uint64_t *)(v5 + v1[17]);
  unint64_t v24 = v23[1];
  if (v24 >> 60 != 15) {
    sub_100189B20(*v23, v24);
  }
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_10025FF00(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(_s14descr1005DF7D1C10AskRequestVMa(0LL) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((v4 + 24) & ~v4);
  uint64_t v7 = (void *)swift_task_alloc(dword_10064A164);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_10025BB9C(a1, v5, v6);
}

uint64_t sub_10025FF80(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc(dword_100650C64);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1001943E8;
  return sub_10036E3DC(a1, v4);
}

uint64_t _s15EndpointFailureVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064A218, (uint64_t)&_s15EndpointFailureVMn);
}

uint64_t sub_10025FFEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
    uint64_t v7 = (char *)&loc_100260058 + 4 * byte_1004D0700[swift_getEnumCaseMultiPayload(a2, v6)];
    __asm { BR              X10 }
  }

  uint64_t v8 = *a2;
  *a1 = *a2;
  uint64_t v9 = v8 + ((v5 + 16LL) & ~(unint64_t)v5);
  swift_retain(v8);
  return v9;
}

uint64_t sub_10026038C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  switch(swift_getEnumCaseMultiPayload(a1, v4))
  {
    case 0u:
      uint64_t v5 = type metadata accessor for NWEndpoint(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(a1, v5);
      break;
    case 1u:
      swift_bridgeObjectRelease(*(const char **)(a1 + 8));
      unint64_t v12 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
      uint64_t v13 = a1 + v12[5];
      uint64_t v14 = type metadata accessor for NWEndpoint(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8LL))(v13, v14);
      *(void *)&double v15 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + v12[7] + 8)).n128_u64[0];
      *(void *)&double v16 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + v12[8] + 8), v15).n128_u64[0];
      *(void *)&double v17 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + v12[9] + 8), v16).n128_u64[0];
      *(void *)&double v18 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + v12[10] + 8), v17).n128_u64[0];
      *(void *)&double v19 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + v12[11] + 8), v18).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(a1 + v12[12] + 8), v19);
      unint64_t v20 = (uint64_t *)(a1 + v12[14]);
      unint64_t v10 = v20[1];
      if (v10 >> 60 != 15)
      {
        uint64_t v11 = *v20;
        goto LABEL_8;
      }

      break;
    case 2u:
      sub_100189B20(*(void *)a1, *(void *)(a1 + 8));
      uint64_t v6 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
      uint64_t v7 = a1 + v6[5];
      uint64_t v8 = type metadata accessor for UUID(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);
      swift_unknownObjectRelease(*(void *)(a1 + v6[6]));
      swift_bridgeObjectRelease(*(const char **)(a1 + v6[7] + 8));
      break;
    case 3u:
      *(void *)&double v9 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + 8)).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(a1 + 24), v9);
      unint64_t v10 = *(void *)(a1 + 40);
      if (v10 >> 60 != 15)
      {
        uint64_t v11 = *(void *)(a1 + 32);
LABEL_8:
        sub_100189B20(v11, v10);
      }

      break;
    default:
      break;
  }

  uint64_t v21 = a1 + *(int *)(a2 + 20);
  uint64_t v22 = type metadata accessor for SFAirDropSend.Failure(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8LL))(v21, v22);
}

void sub_100260564(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v4 = (char *)sub_1002605C4 + 4 * byte_1004D0708[swift_getEnumCaseMultiPayload(a2, v3)];
  __asm { BR              X10 }

uint64_t sub_1002605C4()
{
  uint64_t v4 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(v0, v1, v4);
  swift_storeEnumTagMultiPayload(v0, v3, 0LL);
  uint64_t v5 = *(int *)(v2 + 20);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v1 + v5;
  uint64_t v8 = type metadata accessor for SFAirDropSend.Failure(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16LL))(v6, v7, v8);
  return v0;
}

uint64_t sub_1002608D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001A4BC8(a1, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
    uint64_t v6 = (char *)&loc_10026094C + 4 * byte_1004D070C[swift_getEnumCaseMultiPayload(a2, v5)];
    __asm { BR              X10 }
  }

  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropSend.Failure(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24LL))(v8, v9, v10);
  return a1;
}

_OWORD *sub_100260CA8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v9 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
    uint64_t v10 = v9[5];
    uint64_t v11 = (char *)a1 + v10;
    unint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for UUID(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32LL))(v11, v12, v13);
    *(void *)((char *)a1 + v9[6]) = *(void *)((char *)a2 + v9[6]);
    *(_OWORD *)((char *)a1 + v9[7]) = *(_OWORD *)((char *)a2 + v9[7]);
    *((_BYTE *)a1 + v9[8]) = *((_BYTE *)a2 + v9[8]);
    *((_BYTE *)a1 + v9[9]) = *((_BYTE *)a2 + v9[9]);
    swift_storeEnumTagMultiPayload(a1, v6, 2LL);
  }

  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v14 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
    uint64_t v15 = v14[5];
    double v16 = (char *)a1 + v15;
    double v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for NWEndpoint(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32LL))(v16, v17, v18);
    uint64_t v19 = v14[6];
    unint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    *(void *)unint64_t v20 = *(void *)v21;
    v20[8] = v21[8];
    *(_OWORD *)((char *)a1 + v14[7]) = *(_OWORD *)((char *)a2 + v14[7]);
    *(_OWORD *)((char *)a1 + v14[8]) = *(_OWORD *)((char *)a2 + v14[8]);
    *(_OWORD *)((char *)a1 + v14[9]) = *(_OWORD *)((char *)a2 + v14[9]);
    *(_OWORD *)((char *)a1 + v14[10]) = *(_OWORD *)((char *)a2 + v14[10]);
    *(_OWORD *)((char *)a1 + v14[11]) = *(_OWORD *)((char *)a2 + v14[11]);
    *(_OWORD *)((char *)a1 + v14[12]) = *(_OWORD *)((char *)a2 + v14[12]);
    *((_BYTE *)a1 + v14[13]) = *((_BYTE *)a2 + v14[13]);
    *(_OWORD *)((char *)a1 + v14[14]) = *(_OWORD *)((char *)a2 + v14[14]);
    *((_BYTE *)a1 + v14[15]) = *((_BYTE *)a2 + v14[15]);
    *((_BYTE *)a1 + v14[16]) = *((_BYTE *)a2 + v14[16]);
    swift_storeEnumTagMultiPayload(a1, v6, 1LL);
  }

  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64LL));
  }

  else
  {
    uint64_t v8 = type metadata accessor for NWEndpoint(0LL);
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v8 - 8) + 32LL))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, v6, 0LL);
  }

  uint64_t v22 = *(int *)(a3 + 20);
  BOOL v23 = (char *)a1 + v22;
  unint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for SFAirDropSend.Failure(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32LL))(v23, v24, v25);
  return a1;
}

_OWORD *sub_100260EF4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001A4BC8((uint64_t)a1, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v9 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
      uint64_t v10 = v9[5];
      uint64_t v11 = (char *)a1 + v10;
      unint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = type metadata accessor for UUID(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32LL))(v11, v12, v13);
      *(void *)((char *)a1 + v9[6]) = *(void *)((char *)a2 + v9[6]);
      *(_OWORD *)((char *)a1 + v9[7]) = *(_OWORD *)((char *)a2 + v9[7]);
      *((_BYTE *)a1 + v9[8]) = *((_BYTE *)a2 + v9[8]);
      *((_BYTE *)a1 + v9[9]) = *((_BYTE *)a2 + v9[9]);
      swift_storeEnumTagMultiPayload(a1, v6, 2LL);
    }

    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v14 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
      uint64_t v15 = v14[5];
      double v16 = (char *)a1 + v15;
      double v17 = (char *)a2 + v15;
      uint64_t v18 = type metadata accessor for NWEndpoint(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32LL))(v16, v17, v18);
      uint64_t v19 = v14[6];
      unint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      *(void *)unint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      *(_OWORD *)((char *)a1 + v14[7]) = *(_OWORD *)((char *)a2 + v14[7]);
      *(_OWORD *)((char *)a1 + v14[8]) = *(_OWORD *)((char *)a2 + v14[8]);
      *(_OWORD *)((char *)a1 + v14[9]) = *(_OWORD *)((char *)a2 + v14[9]);
      *(_OWORD *)((char *)a1 + v14[10]) = *(_OWORD *)((char *)a2 + v14[10]);
      *(_OWORD *)((char *)a1 + v14[11]) = *(_OWORD *)((char *)a2 + v14[11]);
      *(_OWORD *)((char *)a1 + v14[12]) = *(_OWORD *)((char *)a2 + v14[12]);
      *((_BYTE *)a1 + v14[13]) = *((_BYTE *)a2 + v14[13]);
      *(_OWORD *)((char *)a1 + v14[14]) = *(_OWORD *)((char *)a2 + v14[14]);
      *((_BYTE *)a1 + v14[15]) = *((_BYTE *)a2 + v14[15]);
      *((_BYTE *)a1 + v14[16]) = *((_BYTE *)a2 + v14[16]);
      swift_storeEnumTagMultiPayload(a1, v6, 1LL);
    }

    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64LL));
    }

    else
    {
      uint64_t v8 = type metadata accessor for NWEndpoint(0LL);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v8 - 8) + 32LL))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, v6, 0LL);
    }
  }

  uint64_t v22 = *(int *)(a3 + 20);
  BOOL v23 = (char *)a1 + v22;
  unint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for SFAirDropSend.Failure(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40LL))(v23, v24, v25);
  return a1;
}

uint64_t sub_100261158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100261164);
}

uint64_t sub_100261164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }

  else
  {
    uint64_t v8 = type metadata accessor for SFAirDropSend.Failure(0LL);
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_1002611D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002611E4);
}

uint64_t sub_1002611E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    uint64_t v10 = type metadata accessor for SFAirDropSend.Failure(0LL);
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_100261260(uint64_t a1)
{
  uint64_t result = type metadata accessor for SDAirDropDiscoveredEndpoint(319LL);
  if (v3 <= 0x3F)
  {
    v5[0] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for SFAirDropSend.Failure(319LL);
    if (v4 <= 0x3F)
    {
      v5[1] = *(void *)(result - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 2LL, v5, a1 + 16);
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1002612F4()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064A250);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064A250);
  if (qword_100643FF0 != -1) {
    swift_once(&qword_100643FF0, sub_10023A46C);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_100669640);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

id sub_100261384( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v8);
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection] = 0LL;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection] = 0LL;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnectionTimeout] = 5LL;
  double v17 = &v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName];
  *(void *)double v17 = a1;
  *((void *)v17 + sub_10022D314(2, 1) = a2;
  uint64_t v18 = &v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_endpoint];
  uint64_t v19 = type metadata accessor for NWEndpoint(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a3, v19);
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_deviceSupportFlags] = a4;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_deviceStatus] = a5;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_nearbyAgent] = a6;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_browserQueue] = a8;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_rpClient] = a7;
  v24.receiver = v8;
  v24.super_class = ObjectType;
  id v21 = objc_msgSendSuper2(&v24, "init");
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a3, v19);
  return v21;
}

uint64_t sub_1002614C4(uint64_t a1)
{
  v2[84] = v1;
  v2[83] = a1;
  uint64_t v3 = type metadata accessor for NWEndpoint(0LL);
  v2[85] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[86] = v4;
  v2[87] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  v2[88] = v5;
  v2[89] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Date(0LL);
  v2[90] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[91] = v7;
  unint64_t v8 = (*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[92] = swift_task_alloc(v8);
  v2[93] = swift_task_alloc(v8);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  v2[94] = static AirDropActor.shared;
  return swift_task_switch(sub_1002615B8, v9, 0LL);
}

uint64_t sub_1002615B8(uint64_t a1)
{
  uint64_t v2 = (void *)swift_task_alloc(dword_10064A2DC);
  *(void *)(v1 + 76_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100261614;
  return sub_100262A14(v1 + 16);
}

uint64_t sub_100261614()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 760);
  *(void *)(v2 + 768) = v0;
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  uint64_t v7 = *(void *)(v2 + 40);
  uint64_t v8 = *(void *)(v2 + 48);
  uint64_t v9 = *(void *)(v2 + 56);
  uint64_t v30 = *(void *)(v2 + 64);
  uint64_t v28 = *(void *)(v2 + 80);
  uint64_t v29 = *(void *)(v2 + 72);
  uint64_t v26 = *(void *)(v2 + 96);
  uint64_t v27 = *(void *)(v2 + 88);
  uint64_t v24 = *(void *)(v2 + 112);
  uint64_t v25 = *(void *)(v2 + 104);
  uint64_t v22 = *(void *)(v2 + 128);
  uint64_t v23 = *(void *)(v2 + 120);
  char v21 = *(_BYTE *)(v2 + 136);
  uint64_t v10 = *(void *)(v2 + 160);
  uint64_t v19 = *(void *)(v2 + 152);
  uint64_t v20 = *(void *)(v2 + 144);
  *(void *)(v2 + 776) = v10;
  swift_task_dealloc(v3);
  uint64_t v11 = *(void *)(v2 + 752);
  if (v0)
  {
    uint64_t v12 = sub_1002629A0;
  }

  else
  {
    *(void *)(v2 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v4;
    *(void *)(v2 + 328) = v5;
    *(void *)(v2 + 336) = v6;
    *(void *)(v2 + 344) = v7;
    *(void *)(v2 + 352) = v8;
    *(void *)(v2 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v9;
    *(void *)(v2 + 368) = v30;
    *(void *)(v2 + 376) = v29;
    *(void *)(v2 + 384) = v28;
    *(void *)(v2 + 392) = v27;
    *(void *)(v2 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v26;
    *(void *)(v2 + 408) = v25;
    *(void *)(v2 + 4swift_unknownObjectWeakDestroy(v0 + 16) = v24;
    *(void *)(v2 + 424) = v23;
    *(void *)(v2 + 4sub_100195658(v0 + 32) = v22;
    *(_BYTE *)(v2 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v21;
    *(void *)(v2 + 448) = v20;
    *(void *)(v2 + 456) = v19;
    *(void *)(v2 + 464) = v10;
    __int128 v13 = *(_OWORD *)(v2 + 336);
    *(_OWORD *)(v2 + 472) = *(_OWORD *)(v2 + 320);
    *(_OWORD *)(v2 + 488) = v13;
    __int128 v14 = *(_OWORD *)(v2 + 448);
    __int128 v15 = *(_OWORD *)(v2 + 416);
    *(_OWORD *)(v2 + 584) = *(_OWORD *)(v2 + 432);
    *(_OWORD *)(v2 + 60_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v14;
    __int128 v16 = *(_OWORD *)(v2 + 384);
    *(_OWORD *)(v2 + 552) = *(_OWORD *)(v2 + 400);
    *(_OWORD *)(v2 + 568) = v15;
    __int128 v17 = *(_OWORD *)(v2 + 352);
    *(_OWORD *)(v2 + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(_OWORD *)(v2 + 368);
    *(_OWORD *)(v2 + 536) = v16;
    *(_OWORD *)(v2 + 504) = v17;
    uint64_t v12 = sub_100261780;
  }

  return swift_task_switch(v12, v11, 0LL);
}

uint64_t sub_100261780()
{
  __int128 v1 = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 400);
  __int128 v2 = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v0 + 264) = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v0 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v2;
  *(_OWORD *)(v0 + 296) = *(_OWORD *)(v0 + 448);
  __int128 v3 = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 336);
  __int128 v4 = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v0 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(_OWORD *)(v0 + 352);
  *(_OWORD *)(v0 + 2swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(_OWORD *)(v0 + 2sub_100195658(v0 + 32) = v1;
  uint64_t v5 = *(void *)(v0 + 776);
  *(_OWORD *)(v0 + 168) = v3;
  *(void *)(v0 + 312) = v5;
  SecTrustRef v6 = sub_100411988();
  *(void *)(v0 + 784) = v6;
  if (v6)
  {
    SecTrustRef v7 = v6;
    uint64_t v8 = *(void *)(v0 + 776);
    sub_100265000((uint64_t *)(v0 + 168));
    swift_release(v8);
    if (qword_100644060 != -1) {
      swift_once(&qword_100644060, sub_1002612F4);
    }
    uint64_t v9 = *(void *)(v0 + 744);
    uint64_t v10 = *(void *)(v0 + 736);
    uint64_t v11 = *(void *)(v0 + 728);
    uint64_t v12 = *(void *)(v0 + 720);
    __int128 v13 = *(void **)(v0 + 672);
    uint64_t v14 = type metadata accessor for Logger(0LL);
    *(void *)(v0 + 792) = sub_100186DE4(v14, (uint64_t)qword_10064A250);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v9, v12);
    sub_1002650C0((uint64_t *)(v0 + 320));
    id v15 = v13;
    sub_1002650C0((uint64_t *)(v0 + 320));
    __int128 v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.default.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void *)(v0 + 736);
    uint64_t v20 = *(void *)(v0 + 728);
    uint64_t v21 = *(void *)(v0 + 720);
    uint64_t v22 = *(void **)(v0 + 672);
    if (v18)
    {
      os_log_type_t type = v17;
      uint64_t v23 = swift_slowAlloc(32LL, -1LL);
      uint64_t v61 = swift_slowAlloc(64LL, -1LL);
      v62[0] = v61;
      *(_DWORD *)uint64_t v23 = 134218498;
      *(double *)(v0 + 64_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = -Date.timeIntervalSinceNow.getter(v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 640, v0 + 648, v23 + 4, v23 + 12);
      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v24(v19, v21);
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v25 = sub_1002B8DC8();
      uint64_t v27 = (const char *)v26;
      *(void *)(v0 + 648) = sub_10018CDB4(v25, v26, v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 648, v0 + 656, v23 + 14, v23 + 22);
      swift_bridgeObjectRelease(v27);
      sub_100265178((uint64_t *)(v0 + 320));
      uint64_t v28 = sub_100265178((uint64_t *)(v0 + 320));
      *(_WORD *)(v23 + 22) = 2080;
      uint64_t v29 = NWEndpoint.debugDescription.getter(v28);
      uint64_t v31 = (const char *)v30;
      *(void *)(v0 + 656) = sub_10018CDB4(v29, v30, v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 656, v0 + 664, v23 + 24, v23 + 32);
      swift_bridgeObjectRelease(v31);

      _os_log_impl( (void *)&_mh_execute_header,  v16,  type,  "Got DISCOVER response - %fs - %s for endpoint %s",  (uint8_t *)v23,  0x20u);
      swift_arrayDestroy(v61, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1LL, -1LL);
      swift_slowDealloc(v23, -1LL, -1LL);
    }

    else
    {
      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v24(*(void *)(v0 + 736), *(void *)(v0 + 720));
      sub_100265178((uint64_t *)(v0 + 320));
      sub_100265178((uint64_t *)(v0 + 320));
    }

    *(void *)(v0 + 80_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v24;
    uint64_t v48 = *(void *)(v0 + 672);
    uint64_t v49 = *(void **)(v48 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_deviceStatus);
    *(void *)(v0 + 808) = v49;
    uint64_t v50 = type metadata accessor for SDAirDropBonjourContactFetcher();
    uint64_t v51 = swift_allocObject(v50, 128LL, 15LL);
    id v52 = v49;
    unint64_t v53 = v7;
    swift_defaultActor_initialize(v51);
    *(void *)(v51 + 112) = v52;
    *(void *)(v51 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v53;
    *(void *)(v0 + 6swift_unknownObjectWeakDestroy(v0 + 16) = v51;
    *(void *)(v0 + 624) = v50;
    *(void *)(v0 + 8swift_unknownObjectWeakDestroy(v0 + 16) = objc_msgSendSuper2((objc_super *)(v0 + 616), "init");
    uint64_t v54 = *(void *)(v0 + 352);
    uint64_t v55 = *(void *)(v0 + 360);
    *(void *)(v0 + 824) = v54;
    *(void *)(v0 + 8sub_100195658(v0 + 32) = v55;
    uint64_t v56 = v48 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName;
    uint64_t v57 = *(void *)(v48 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName);
    *(void *)(v0 + 84_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v57;
    uint64_t v58 = *(void *)(v56 + 8);
    *(void *)(v0 + 848) = v58;
    uint64_t v59 = (void *)swift_task_alloc(dword_1006548F4);
    *(void *)(v0 + 856) = v59;
    *uint64_t v59 = v0;
    v59[1] = sub_100261CE0;
    return sub_100409A50(v54, v55, v57, v58);
  }

  else
  {
    if (qword_100644060 != -1) {
      swift_once(&qword_100644060, sub_1002612F4);
    }
    uint64_t v32 = type metadata accessor for Logger(0LL);
    uint64_t v33 = sub_100186DE4(v32, (uint64_t)qword_10064A250);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.error.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Missing SecTrust dropping", v36, 2u);
      swift_slowDealloc(v36, -1LL, -1LL);
    }

    uint64_t v37 = *(void *)(v0 + 744);
    uint64_t v38 = *(void *)(v0 + 728);
    uint64_t v39 = *(void *)(v0 + 720);

    uint64_t v40 = type metadata accessor for SFAirDropSend.Failure(0LL);
    unint64_t v41 = sub_100264EF8();
    swift_allocError(v40, v41, 0LL, 0LL);
    uint64_t v43 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v40 - 8) + 104LL))( v42,  enum case for SFAirDropSend.Failure.badRequest(_:),  v40);
    swift_willThrow(v43);
    sub_100264F40((uint64_t *)(v0 + 168));
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    uint64_t v44 = *(void *)(v0 + 736);
    uint64_t v45 = *(void *)(v0 + 712);
    uint64_t v46 = *(void *)(v0 + 696);
    swift_task_dealloc(*(void *)(v0 + 744));
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_100261CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)v4;
  uint64_t v6 = *(void *)(*(void *)v4 + 856LL);
  uint64_t v7 = *(void *)(*(void *)v4 + 752LL);
  v5[108] = a1;
  v5[109] = a2;
  v5[110] = a3;
  v5[111] = a4;
  swift_task_dealloc(v6);
  return swift_task_switch(sub_100261D4C, v7, 0LL);
}

uint64_t sub_100261D4C()
{
  unint64_t v1 = *(void *)(v0 + 832);
  if (v1 >> 60 == 15)
  {
    Class isa = 0LL;
  }

  else
  {
    uint64_t v3 = *(void *)(v0 + 824);
    sub_10019BA8C(v3, *(void *)(v0 + 832));
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100189B0C(v3, v1);
  }

  uint64_t v4 = (__SecTrust *)*(id *)(v0 + 784);
  NSString v5 = String._bridgeToObjectiveC()();
  uint64_t v6 = (uint64_t)sub_100035F78(isa, v4, v5);

  if (v6)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    uint64_t v10 = v9;

    swift_bridgeObjectRetain(v10);
    LOBYTE(v6) = sub_1002E0654();
    *(void *)&double v7 = swift_bridgeObjectRelease(v10).n128_u64[0];
  }

  else
  {
    uint64_t v8 = 0LL;
    uint64_t v10 = 0LL;
  }

  *(void *)(v0 + 904) = v10;
  *(void *)(v0 + 896) = v8;
  *(_BYTE *)(v0 + 952) = v6 & 1;
  uint64_t v11 = *(const char **)(v0 + 872);
  char v85 = v6;
  unint64_t v82 = v10;
  double v83 = v11;
  if (v11)
  {
    id v12 = objc_msgSend(*(id *)(v0 + 808), "meCard", swift_bridgeObjectRetain(v11, v7).n128_f64[0]);
    if (v12)
    {
      __int128 v13 = v12;
      uint64_t v14 = *(void *)(v0 + 872);
      uint64_t v15 = *(void *)(v0 + 864);
      id v16 = [v12 identifier];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      uint64_t v6 = v18;

      if (v15 == v17 && v14 == v6)
      {
        char v19 = 1;
        uint64_t v11 = v83;
      }

      else
      {
        uint64_t v11 = v83;
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)(*(void *)(v0 + 864), v83, v17, v6, 0LL);
      }

      swift_bridgeObjectRelease((const char *)v6);

      LOBYTE(v6) = v85;
    }

    else
    {
      char v19 = 0;
    }

    swift_bridgeObjectRelease(v11);
  }

  else
  {
    char v19 = 0;
  }

  uint64_t v20 = (os_log_s *)Logger.logObject.getter(*(id *)(v0 + 672));
  os_log_type_t v21 = static os_log_type_t.default.getter();
  uint64_t v84 = v8;
  if (os_log_type_enabled(v20, v21))
  {
    char v80 = v19;
    uint64_t v22 = *(const char **)(v0 + 848);
    uint64_t v6 = *(void *)(v0 + 840);
    uint64_t v76 = *(void **)(v0 + 672);
    uint64_t v23 = swift_slowAlloc(24LL, -1LL);
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    v86[0] = v24;
    *(_DWORD *)uint64_t v23 = 136315650;
    swift_bridgeObjectRetain(v22);
    *(void *)(v0 + 6sub_100195658(v0 + 32) = sub_10018CDB4(v6, (unint64_t)v22, v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 632, v0 + 640, v23 + 4, v23 + 12);
    uint64_t v25 = v22;
    char v19 = v80;
    swift_bridgeObjectRelease(v25);

    *(_WORD *)(v23 + 12) = 1024;
    *(_DWORD *)(v0 + 944) = v80 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 944, v0 + 948, v23 + 14, v23 + 18);
    *(_WORD *)(v23 + 18) = 1024;
    LOBYTE(v6) = v85;
    *(_DWORD *)(v0 + 948) = v85 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 948, v0 + 952, v23 + 20, v23 + 24);
    _os_log_impl( (void *)&_mh_execute_header,  v20,  v21,  "%s - isContactIDMe: %{BOOL}d isSameAccount: %{BOOL}d",  (uint8_t *)v23,  0x18u);
    swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1LL, -1LL);
    swift_slowDealloc(v23, -1LL, -1LL);
  }

  else
  {
  }

  uint64_t v26 = *(void *)(v0 + 672);
  (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 688) + 16LL))( *(void *)(v0 + 696),  v26 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_endpoint,  *(void *)(v0 + 680));
  uint64_t v81 = *(void *)(v26 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_deviceSupportFlags);
  if (v6 & 1 | ((v19 & 1) == 0))
  {
    uint64_t v28 = *(const char **)(v0 + 424);
    uint64_t v79 = *(void *)(v0 + 416);
    __n128 v27 = swift_bridgeObjectRetain(v28);
    if ((v6 & 1) == 0) {
      goto LABEL_22;
    }
LABEL_25:
    uint64_t v77 = 0LL;
    uint64_t v78 = 0LL;
    unint64_t v30 = 0LL;
    uint64_t v31 = *(void *)(v0 + 368);
    uint64_t v29 = *(const char **)(v0 + 344);
    uint64_t v74 = 0LL;
    uint64_t v75 = *(void *)(v0 + 336);
    uint64_t v32 = *(const char **)(v0 + 376);
    __n128 v27 = swift_bridgeObjectRetain(v32, v27.n128_f64[0]);
    goto LABEL_27;
  }

  uint64_t v79 = 0LL;
  uint64_t v28 = 0LL;
  if ((v6 & 1) != 0) {
    goto LABEL_25;
  }
LABEL_22:
  uint64_t v29 = *(const char **)(v0 + 344);
  uint64_t v75 = *(void *)(v0 + 336);
  if ((v19 & 1) != 0)
  {
    uint64_t v77 = 0LL;
    uint64_t v78 = 0LL;
    uint64_t v74 = 0LL;
    unint64_t v30 = 0LL;
    uint64_t v31 = 0LL;
    uint64_t v32 = 0LL;
  }

  else
  {
    uint64_t v78 = *(const char **)(v0 + 888);
    *(void *)&double v33 = swift_bridgeObjectRetain(v78, v27.n128_f64[0]).n128_u64[0];
    uint64_t v31 = 0LL;
    uint64_t v32 = 0LL;
    uint64_t v77 = *(void *)(v0 + 880);
    uint64_t v74 = *(void *)(v0 + 864);
    unint64_t v30 = *(const char **)(v0 + 872);
    __n128 v27 = swift_bridgeObjectRetain(v30, v33);
  }

uint64_t sub_10026247C()
{
  uint64_t v2 = *(void *)(*v1 + 912);
  uint64_t v3 = *v1;
  *(void *)(v3 + 92_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    uint64_t v4 = *(const char **)(v3 + 888);
    uint64_t v5 = *(void *)(v3 + 872);
    uint64_t v6 = *(void *)(v3 + 752);
    swift_bridgeObjectRelease(*(const char **)(v3 + 904));
    swift_bridgeObjectRelease_n(v5, 2LL);
    swift_bridgeObjectRelease(v4);
    return swift_task_switch(sub_100262770, v6, 0LL);
  }

  else
  {
    swift_bridgeObjectRelease(*(const char **)(v3 + 872));
    uint64_t v8 = *(void *)(v3 + 432);
    char v9 = *(_BYTE *)(v3 + 440);
    uint64_t v10 = (void *)swift_task_alloc(dword_10064A2E4);
    *(void *)(v3 + 928) = v10;
    void *v10 = v3;
    v10[1] = sub_100262594;
    return sub_10026329C( v3 + 472,  *(void *)(v3 + 896),  *(void *)(v3 + 904),  *(void *)(v3 + 864),  *(void *)(v3 + 872),  *(_BYTE *)(v3 + 952),  v8,  v9);
  }

uint64_t sub_100262594()
{
  unint64_t v1 = *(const char **)(*(void *)v0 + 904LL);
  uint64_t v2 = *(const char **)(*(void *)v0 + 888LL);
  uint64_t v3 = *(const char **)(*(void *)v0 + 872LL);
  uint64_t v4 = *(void *)(*(void *)v0 + 752LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 928LL));
  *(void *)&double v5 = swift_bridgeObjectRelease(v1).n128_u64[0];
  *(void *)&double v6 = swift_bridgeObjectRelease(v3, v5).n128_u64[0];
  swift_bridgeObjectRelease(v2, v6);
  return swift_task_switch(sub_100262618, v4, 0LL);
}

uint64_t sub_100262618(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Finished DISCOVER and IDENTITY-SHARE", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  double v5 = *(void **)(v1 + 784);

  double v6 = *(void (**)(uint64_t, uint64_t))(v1 + 800);
  uint64_t v7 = *(void *)(v1 + 744);
  uint64_t v8 = *(void *)(v1 + 736);
  uint64_t v9 = *(void *)(v1 + 720);
  uint64_t v10 = *(void *)(v1 + 712);
  uint64_t v11 = *(void *)(v1 + 696);
  uint64_t v12 = *(void *)(v1 + 664);

  sub_100265178((uint64_t *)(v1 + 320));
  sub_100264F40((uint64_t *)(v1 + 168));
  v6(v7, v9);
  sub_1001A4B40(v10, v12, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v13 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  swift_storeEnumTagMultiPayload(v12, v13, 1LL);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100262770()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
  uint64_t v2 = *(void **)(v0 + 784);
  uint64_t v3 = *(void *)(v0 + 744);
  uint64_t v4 = *(void *)(v0 + 720);
  uint64_t v5 = *(void *)(v0 + 712);

  sub_100265178((uint64_t *)(v0 + 320));
  sub_100264F40((uint64_t *)(v0 + 168));
  sub_1001A4BC8(v5, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  v1(v3, v4);
  uint64_t v6 = *(void *)(v0 + 736);
  uint64_t v7 = *(void *)(v0 + 712);
  uint64_t v8 = *(void *)(v0 + 696);
  swift_task_dealloc(*(void *)(v0 + 744));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100262834()
{
  uint64_t v1 = *(const char **)(*(void *)v0 + 904LL);
  uint64_t v2 = *(const char **)(*(void *)v0 + 888LL);
  uint64_t v3 = *(const char **)(*(void *)v0 + 872LL);
  uint64_t v4 = *(void *)(*(void *)v0 + 752LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 936LL));
  *(void *)&double v5 = swift_bridgeObjectRelease(v1).n128_u64[0];
  *(void *)&double v6 = swift_bridgeObjectRelease(v3, v5).n128_u64[0];
  swift_bridgeObjectRelease(v2, v6);
  return swift_task_switch(sub_1002628B8, v4, 0LL);
}

uint64_t sub_1002628B8()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
  uint64_t v2 = *(void *)(v0 + 744);
  uint64_t v3 = *(void *)(v0 + 736);
  uint64_t v4 = *(void *)(v0 + 720);
  uint64_t v5 = *(void *)(v0 + 712);
  uint64_t v6 = *(void *)(v0 + 696);
  uint64_t v7 = *(void *)(v0 + 664);

  sub_100265178((uint64_t *)(v0 + 320));
  sub_100264F40((uint64_t *)(v0 + 168));
  v1(v2, v4);
  sub_1001A4B40(v5, v7, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  swift_storeEnumTagMultiPayload(v7, v8, 1LL);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002629A0()
{
  uint64_t v1 = *(void *)(v0 + 736);
  uint64_t v2 = *(void *)(v0 + 712);
  uint64_t v3 = *(void *)(v0 + 696);
  swift_task_dealloc(*(void *)(v0 + 744));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100262A14(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = sub_100183098(&qword_100646560);
  v2[8] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for SDAirDropMessage(0LL);
  void v2[9] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[10] = v5;
  uint64_t v6 = *(void *)(v5 + 64);
  v2[11] = v6;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  v2[12] = swift_task_alloc(v7);
  v2[13] = swift_task_alloc(v7);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v8 = static AirDropActor.shared;
  v2[14] = static AirDropActor.shared;
  return swift_task_switch(sub_100262AE0, v8, 0LL);
}

uint64_t sub_100262AE0()
{
  if (qword_100644060 != -1) {
    swift_once(&qword_100644060, sub_1002612F4);
  }
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_10064A250);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = (void *)v0[7];
  if (v5)
  {
    unint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)unint64_t v7 = 136315138;
    uint64_t v14 = v8;
    uint64_t v9 = NWEndpoint.debugDescription.getter(v8);
    uint64_t v11 = (const char *)v10;
    v0[5] = sub_10018CDB4(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 5, v0 + 6, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v11, v14);

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Sending DISCOVER request %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  else
  {
  }

  uint64_t v12 = (void *)swift_task_alloc(dword_10064A2F4);
  v0[15] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_100262CA8;
  return sub_100263B14();
}

uint64_t sub_100262CA8(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 112LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 120LL);
  *(void *)(*(void *)v1 + 128LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100262D04, v3, 0LL);
}

uint64_t sub_100262D04()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[12];
  uint64_t v3 = (uint64_t *)v0[13];
  uint64_t v4 = v0[10];
  uint64_t v21 = v0[11];
  uint64_t v6 = v0[8];
  uint64_t v5 = v0[9];
  unint64_t v7 = (char *)v0[7];
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection];
  *(void *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection] = v1;
  swift_retain(v1);
  swift_release(v8);
  id v9 = sub_1002E07C0();
  v0[17] = v9;
  v0[18] = v10;
  if (v10 >> 60 == 15) {
    uint64_t v11 = 0LL;
  }
  else {
    uint64_t v11 = (uint64_t)v9;
  }
  if (v10 >> 60 == 15) {
    unint64_t v12 = 0xC000000000000000LL;
  }
  else {
    unint64_t v12 = v10;
  }
  *uint64_t v3 = v11;
  v3[1] = v12;
  swift_storeEnumTagMultiPayload(v3, v5, 2LL);
  uint64_t v13 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56LL))(v6, 1LL, 1LL, v13);
  sub_100265DCC((uint64_t)v3, v2);
  uint64_t v14 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = (v14 + 24) & ~v14;
  uint64_t v16 = swift_allocObject(&unk_1005D6AF8, v15 + v21, v14 | 7);
  v0[19] = v16;
  *(void *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  sub_1001A4B40(v2, v16 + v15, type metadata accessor for SDAirDropMessage);
  uint64_t v17 = swift_allocObject(&unk_1005D6B20, 32LL, 7LL);
  v0[20] = v17;
  *(void *)(v17 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *(void *)(v17 + 24) = v1;
  swift_retain_n(v1, 2LL);
  uint64_t v18 = v7;
  sub_10019BA8C(v11, v12);
  char v19 = (void *)swift_task_alloc(async function pointer to concurrentRace<A>(priority:operation:against:)[1]);
  v0[21] = v19;
  *char v19 = v0;
  v19[1] = sub_100262EC0;
  return concurrentRace<A>(priority:operation:against:)( v0 + 2,  v0[8],  &unk_10064A328,  v16,  &unk_10064A338,  v17,  &type metadata for SDNWHTTPResponse);
}

uint64_t sub_100262EC0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = (*v1)[21];
  (*v1)[22] = v0;
  swift_task_dealloc(v3);
  uint64_t v5 = v2[19];
  uint64_t v4 = v2[20];
  uint64_t v6 = v2[14];
  sub_100265EFC(v2[8]);
  swift_release(v4);
  swift_release(v5);
  if (v0) {
    unint64_t v7 = sub_1002631E0;
  }
  else {
    unint64_t v7 = sub_100262F54;
  }
  return swift_task_switch(v7, v6, 0LL);
}

uint64_t sub_100262F54()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(v0 + 32);
  if (v1 >= 3)
  {
    uint64_t v5 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9) {
      uint64_t v5 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    }
    if (v1 == 4) {
      uint64_t v6 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    }
    else {
      uint64_t v6 = v5;
    }
    uint64_t v7 = type metadata accessor for SFAirDropSend.Failure(0LL);
    unint64_t v8 = sub_100264EF8();
    swift_allocError(v7, v8, 0LL, 0LL);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 104LL))(v9, *v6, v7);
    swift_willThrow(v10);
    goto LABEL_10;
  }

  uint64_t v4 = *(void *)(v0 + 176);
  sub_10019BA8C(*(void *)(v0 + 24), *(void *)(v0 + 32));
  sub_100445998(v3, v2);
  if (v4)
  {
    sub_100189B20(v3, v2);
LABEL_10:
    sub_100189B20(v3, v2);
    unint64_t v11 = *(void *)(v0 + 144);
    uint64_t v12 = *(void *)(v0 + 128);
    uint64_t v14 = *(void *)(v0 + 96);
    uint64_t v13 = *(void *)(v0 + 104);
    uint64_t v15 = *(void *)(v0 + 64);
    if (v11 >> 60 == 15) {
      uint64_t v16 = 0LL;
    }
    else {
      uint64_t v16 = *(void *)(v0 + 136);
    }
    if (v11 >> 60 == 15) {
      unint64_t v17 = 0xC000000000000000LL;
    }
    else {
      unint64_t v17 = *(void *)(v0 + 144);
    }
    NWConnection.forceCancel()();
    swift_willThrow(v18);
    sub_100189B20(v16, v17);
    swift_release(v12);
    sub_1001A4BC8(v13, type metadata accessor for SDAirDropMessage);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    char v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }

  unint64_t v20 = *(void *)(v0 + 144);
  uint64_t v21 = *(void *)(v0 + 128);
  uint64_t v22 = *(void *)(v0 + 104);
  uint64_t v27 = *(void *)(v0 + 96);
  uint64_t v28 = *(void *)(v0 + 64);
  uint64_t v23 = *(void *)(v0 + 48);
  if (v20 >> 60 == 15) {
    uint64_t v24 = 0LL;
  }
  else {
    uint64_t v24 = *(void *)(v0 + 136);
  }
  if (v20 >> 60 == 15) {
    unint64_t v25 = 0xC000000000000000LL;
  }
  else {
    unint64_t v25 = *(void *)(v0 + 144);
  }
  sub_100189B20(v3, v2);
  NWConnection.forceCancel()();
  sub_100189B20(v3, v2);
  sub_100189B20(v24, v25);
  sub_1001A4BC8(v22, type metadata accessor for SDAirDropMessage);
  swift_task_dealloc(v22);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  *(_OWORD *)uint64_t v23 = v29;
  *(_OWORD *)(v23 + swift_unknownObjectWeakDestroy(v0 + 16) = v30;
  *(_OWORD *)(v23 + sub_100195658(v0 + 32) = v31;
  *(_OWORD *)(v23 + 48) = v32;
  *(_OWORD *)(v23 + 64) = v33;
  *(_OWORD *)(v23 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v34;
  *(_OWORD *)(v23 + 96) = v35;
  *(void *)(v23 + 112) = v36;
  *(_BYTE *)(v23 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v37 & 1;
  *(void *)(v23 + 128) = v38;
  *(void *)(v23 + 136) = v39;
  *(void *)(v23 + 144) = v21;
  char v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_1002631E0()
{
  unint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 64);
  if (v1 >> 60 == 15) {
    uint64_t v6 = 0LL;
  }
  else {
    uint64_t v6 = *(void *)(v0 + 136);
  }
  if (v1 >> 60 == 15) {
    unint64_t v7 = 0xC000000000000000LL;
  }
  else {
    unint64_t v7 = *(void *)(v0 + 144);
  }
  NWConnection.forceCancel()();
  swift_willThrow(v8);
  sub_100189B20(v6, v7);
  swift_release(v2);
  sub_1001A4BC8(v3, type metadata accessor for SDAirDropMessage);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10026329C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  *(void *)(v9 + 272) = v13;
  *(void *)(v9 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v8;
  *(void *)(v9 + 256) = a7;
  *(void *)(v9 + 264) = v12;
  *(_BYTE *)(v9 + 313) = a8;
  *(_BYTE *)(v9 + 312) = a6;
  *(void *)(v9 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a4;
  *(void *)(v9 + 248) = a5;
  *(void *)(v9 + 224) = a2;
  *(void *)(v9 + 2sub_100195658(v0 + 32) = a3;
  *(void *)(v9 + 2swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v10 = static AirDropActor.shared;
  *(void *)(v9 + 288) = static AirDropActor.shared;
  return swift_task_switch(sub_100263324, v10, 0LL);
}

uint64_t sub_100263324()
{
  if ((*(_BYTE *)(v0 + 312) & 1) != 0)
  {
    if (qword_100644060 != -1) {
      swift_once(&qword_100644060, sub_1002612F4);
    }
    uint64_t v1 = type metadata accessor for Logger(0LL);
    uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_10064A250);
    uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v3, v4)) {
      goto LABEL_16;
    }
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    uint64_t v6 = "SameAccount device detected, skipping identity update";
LABEL_15:
    _os_log_impl((void *)&_mh_execute_header, v3, v4, v6, v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
LABEL_16:

    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v7 = *(void *)(v0 + 232);
  if (!v7) {
    goto LABEL_11;
  }
  sub_1001870BC(*(void *)(v0 + 216) + 96LL, v0 + 136, &qword_1006462D8);
  sub_1001870BC(v0 + 136, v0 + 120, &qword_1006462D8);
  uint64_t v8 = *(void *)(v0 + 128);
  if (!v8) {
    goto LABEL_11;
  }
  uint64_t v9 = *(const char **)(v0 + 248);
  if (!v9) {
    goto LABEL_11;
  }
  uint64_t v10 = *(void *)(v0 + 120);
  sub_1001870BC(*(void *)(v0 + 216) + 64LL, v0 + 152, &qword_100645150);
  sub_1001870BC(v0 + 152, v0 + 184, &qword_100645150);
  unint64_t v11 = *(void *)(v0 + 192);
  if (v11 >> 60 == 15
    || (uint64_t v28 = *(void *)(v0 + 184),
        sub_1001870BC(*(void *)(v0 + 216) + 80LL, v0 + 168, &qword_100645150),
        sub_1001870BC(v0 + 168, v0 + 200, &qword_100645150),
        unint64_t v12 = *(void *)(v0 + 208),
        v12 >> 60 == 15))
  {
LABEL_11:
    if (qword_100644060 != -1) {
      swift_once(&qword_100644060, sub_1002612F4);
    }
    uint64_t v13 = type metadata accessor for Logger(0LL);
    uint64_t v14 = sub_100186DE4(v13, (uint64_t)qword_10064A250);
    uint64_t v3 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v3, v4)) {
      goto LABEL_16;
    }
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    uint64_t v6 = "Missing data for identity update, skipping";
    goto LABEL_15;
  }

  uint64_t v26 = *(void *)(v0 + 280);
  uint64_t v27 = v0 + 16;
  uint64_t v21 = *(void *)(v0 + 264);
  uint64_t v23 = *(void **)(v0 + 272);
  uint64_t v24 = *(void *)(v0 + 240);
  uint64_t v22 = *(void *)(v0 + 224);
  uint64_t v25 = *(void *)(v0 + 200);
  if ((*(_BYTE *)(v0 + 313) & 1) != 0) {
    uint64_t v16 = 0LL;
  }
  else {
    uint64_t v16 = *(void *)(v0 + 256);
  }
  swift_bridgeObjectRetain(v9);
  sub_100265FC0(v0 + 152);
  sub_100265FC0(v0 + 168);
  id v17 = sub_100240848(v22, v7, v24, (uint64_t)v9, v28, v11, v25, v12, v10, v8, v16, v21, v23);
  *(void *)(v0 + 296) = v17;
  uint64_t v18 = *(void **)(v26 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_rpClient);
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1002636A8;
  uint64_t v19 = swift_continuation_init(v27, 1LL);
  *(void *)(v0 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = _NSConcreteStackBlock;
  unint64_t v20 = (void *)(v0 + 80);
  v20[1] = 0x40000000LL;
  void v20[2] = sub_10023FD5C;
  v20[3] = &unk_1005D6AD0;
  v20[4] = v19;
  [v18 addOrUpdateIdentity:v17 completion:v20];
  return swift_continuation_await(v27);
}

uint64_t sub_1002636A8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(v1 + 304) = v2;
  uint64_t v3 = *(void *)(v1 + 288);
  if (v2)
  {
    swift_bridgeObjectRelease(*(const char **)(v1 + 248));
    os_log_type_t v4 = sub_100263900;
  }

  else
  {
    os_log_type_t v4 = sub_100263714;
  }

  return swift_task_switch(v4, v3, 0LL);
}

uint64_t sub_100263714()
{
  if (qword_100644060 != -1) {
    swift_once(&qword_100644060, sub_1002612F4);
  }
  uint64_t v1 = *(const char **)(v0 + 248);
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_10064A250);
  swift_bridgeObjectRetain(v1);
  os_log_type_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void **)(v0 + 296);
  uint64_t v8 = *(const char **)(v0 + 248);
  if (v6)
  {
    uint64_t v9 = *(void *)(v0 + 240);
    uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v11 = swift_slowAlloc(32LL, -1LL);
    uint64_t v13 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_bridgeObjectRetain(v8);
    *(void *)(v0 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10018CDB4(v9, (unint64_t)v8, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease_n(v8, 3LL);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Added/updated identity for contact %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
    sub_100265FEC(v0 + 152);
  }

  else
  {
    sub_100265FEC(v0 + 152);
    swift_bridgeObjectRelease_n(v8, 2LL);
  }

  sub_100265FEC(v0 + 168);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100263900(uint64_t a1)
{
  if (qword_100644060 != -1) {
    swift_once(&qword_100644060, sub_1002612F4);
  }
  uint64_t v2 = *(void *)(v1 + 304);
  uint64_t v3 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v3, (uint64_t)qword_10064A250);
  swift_errorRetain(v2);
  uint64_t v4 = swift_errorRetain(v2);
  os_log_type_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.error.getter(v5);
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v9 = *(void **)(v1 + 296);
  uint64_t v8 = *(void *)(v1 + 304);
  if (v7)
  {
    uint64_t v15 = *(void **)(v1 + 296);
    uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v11 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v10 = 138412290;
    swift_errorRetain(v8);
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(void *)(v1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 80, v1 + 88, v10 + 4, v10 + 12);
    uint64_t *v11 = v12;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Identity update failed %@", v10, 0xCu);
    uint64_t v13 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v11, 1LL, v13);
    swift_slowDealloc(v11, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
    sub_100265FEC(v1 + 152);

    sub_100265FEC(v1 + 168);
    swift_errorRelease(v8);
  }

  else
  {
    sub_100265FEC(v1 + 152);

    sub_100265FEC(v1 + 168);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
  }

  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100263B14()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for NWEndpoint(0LL);
  v1[3] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(void *)(v3 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for UUID(0LL);
  v1[6] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v1[7] = v5;
  v1[8] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100263BCC, static AirDropActor.shared, 0LL);
}

uint64_t sub_100263BCC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = UUID.init()(a1);
  uint64_t v10 = UUID.uuidString.getter(v9);
  uint64_t v12 = v11;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  uint64_t v13 = String.utf8CString.getter(v10, v12);
  swift_bridgeObjectRelease(v12);
  nw_content_context_t v14 = nw_content_context_create((const char *)(v13 + 32));
  swift_release(v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))( v4,  v8 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_endpoint,  v6);
  uint64_t v15 = *(dispatch_queue_s **)(v8 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_browserQueue);
  uint64_t v16 = swift_allocObject(&unk_1005D6AB8, 24LL, 7LL);
  swift_unknownObjectWeakInit(v16 + 16, v8);
  uint64_t v17 = swift_allocObject(&unk_1005D6AB8, 24LL, 7LL);
  swift_unknownObjectWeakInit(v17 + 16, v8);
  swift_unknownObjectRetain(v14);
  swift_retain(v16);
  swift_retain(v17);
  uint64_t v18 = sub_100418C78(v15, (uint64_t)v14, 0, (uint64_t)sub_100265FB0, v16, (uint64_t)sub_100265FB8, v17);
  swift_release_n(v17, 2LL);
  swift_release_n(v16, 2LL);
  swift_unknownObjectRelease(v14);
  uint64_t v19 = type metadata accessor for NWConnection(0LL);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  uint64_t v20 = NWConnection.init(to:using:)(v4, v18);
  NWConnection.start(queue:)(v15);
  swift_unknownObjectRelease(v14);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v20);
}

void sub_100263D98(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v10, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v6, v7);
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    a3(1LL);
  }

uint64_t sub_100263DFC(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 16;
  swift_beginAccess(a4 + 16, v10, 0LL, 0LL);
  uint64_t result = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (result)
  {
    uint64_t v8 = (void *)result;
    sec_identity_t v9 = sub_1002DED54();
    a2();

    return swift_unknownObjectRelease(v9);
  }

  return result;
}

uint64_t sub_100263E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v4 = static AirDropActor.shared;
  v3[8] = static AirDropActor.shared;
  return swift_task_switch(sub_100263EF4, v4, 0LL);
}

uint64_t sub_100263EF4()
{
  v0[9] = v1;
  sub_1004444B0();
  v0[10] = v2;
  v0[11] = v3;
  return swift_task_switch(sub_100263F74, 0LL, 0LL);
}

uint64_t sub_100263F74()
{
  __int128 v6 = *(_OWORD *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc(64LL);
  *(void *)(v0 + 96) = v3;
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v6;
  *(void *)(v3 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v1;
  *(_BYTE *)(v3 + 48) = 1;
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 104) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100264034;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v4,  0LL,  0LL,  0xD000000000000029LL,  0x80000001005074E0LL,  sub_100265F80,  v3,  (char *)&type metadata for () + 8);
}

uint64_t sub_100264034()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 104);
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_1002641A0;
  }

  else
  {
    swift_task_dealloc(*(void *)(v2 + 96));
    uint64_t v4 = sub_1002640A0;
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_1002640A0()
{
  uint64_t v1 = v0[9];
  sub_100189B20(v0[10], v0[11]);
  swift_unknownObjectRelease(v1);
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[15] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10026413C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 2,  0LL,  0LL,  0xD000000000000015LL,  0x8000000100507510LL,  sub_100265F84,  v0[6],  &type metadata for SDNWHTTPResponse);
}

uint64_t sub_10026413C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120LL);
  *(void *)(*(void *)v1 + 128LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_100264264;
  }
  else {
    uint64_t v3 = sub_100264220;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_1002641A0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_task_dealloc(*(void *)(v0 + 96));
  return swift_task_switch(sub_1002641E0, v1, 0LL);
}

uint64_t sub_1002641E0()
{
  uint64_t v1 = *(void *)(v0 + 72);
  sub_100189B20(*(void *)(v0 + 80), *(void *)(v0 + 88));
  swift_unknownObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100264220()
{
  uint64_t v1 = *(void *)(v0 + 64);
  *(_BYTE *)(v0 + 152) = *(_BYTE *)(v0 + 16);
  *(_OWORD *)(v0 + 136) = *(_OWORD *)(v0 + 24);
  return swift_task_switch(sub_100264244, v1, 0LL);
}

uint64_t sub_100264244()
{
  uint64_t v1 = *(void *)(v0 + 40);
  __int128 v2 = *(_OWORD *)(v0 + 136);
  *(_BYTE *)uint64_t v1 = *(_BYTE *)(v0 + 152);
  *(_OWORD *)(v1 + 8) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100264264()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100264270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  uint64_t v4 = type metadata accessor for ContinuousClock(0LL);
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v6 = static AirDropActor.shared;
  v3[8] = static AirDropActor.shared;
  return swift_task_switch(sub_100264304, v6, 0LL);
}

uint64_t sub_100264304(uint64_t a1)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006461D8 + dword_1006461D8);
  __int128 v2 = (void *)swift_task_alloc(unk_1006461DC);
  *(void *)(v1 + 72) = v2;
  *__int128 v2 = v1;
  v2[1] = sub_100264384;
  return v4(5000000000000000000LL, 0LL, 0LL, 0LL, 1);
}

uint64_t sub_100264384()
{
  __int128 v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 72LL);
  *(void *)(*(void *)v1 + 80LL) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = v2[8];
  (*(void (**)(void, void))(v2[6] + 8LL))(v2[7], v2[5]);
  if (v0) {
    uint64_t v5 = sub_100264400;
  }
  else {
    uint64_t v5 = sub_100264434;
  }
  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_100264400()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100264434()
{
  if (qword_100644060 != -1) {
    swift_once(&qword_100644060, sub_1002612F4);
  }
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_10064A250);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v4 = static os_log_type_t.error.getter(v3);
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(char **)(v0 + 24);
  if (v5)
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v10 = *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName];
    sec_identity_t v9 = *(const char **)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName + 8];
    swift_bridgeObjectRetain(v9);
    *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10018CDB4(v10, (unint64_t)v9, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v9);

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "DISCOVER request timeout for serviceName %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  else
  {
  }

  NWConnection.forceCancel()();
  unint64_t v11 = sub_100265F3C();
  uint64_t v12 = swift_allocError(&type metadata for SDNWHTTPResponseError, v11, 0LL, 0LL);
  *uint64_t v13 = 504;
  swift_willThrow(v12);
  swift_task_dealloc(*(void *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100264628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v4 = static AirDropActor.shared;
  v3[8] = static AirDropActor.shared;
  return swift_task_switch(sub_100264698, v4, 0LL);
}

uint64_t sub_100264698()
{
  v0[9] = v1;
  sub_1004444B0();
  v0[10] = v2;
  v0[11] = v3;
  return swift_task_switch(sub_100264718, 0LL, 0LL);
}

uint64_t sub_100264718()
{
  __int128 v6 = *(_OWORD *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc(64LL);
  *(void *)(v0 + 96) = v3;
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v6;
  *(void *)(v3 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v1;
  *(_BYTE *)(v3 + 48) = 1;
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 104) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002647D8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v4,  0LL,  0LL,  0xD000000000000029LL,  0x80000001005074E0LL,  sub_100265F80,  v3,  (char *)&type metadata for () + 8);
}

uint64_t sub_1002647D8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 104);
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_100264944;
  }

  else
  {
    swift_task_dealloc(*(void *)(v2 + 96));
    uint64_t v4 = sub_100264844;
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_100264844()
{
  uint64_t v1 = v0[9];
  sub_100189B20(v0[10], v0[11]);
  swift_unknownObjectRelease(v1);
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[15] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1002648E0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 2,  0LL,  0LL,  0xD000000000000015LL,  0x8000000100507510LL,  sub_100265F84,  v0[6],  &type metadata for SDNWHTTPResponse);
}

uint64_t sub_1002648E0()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120LL);
  *(void *)(*(void *)v1 + 128LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_100266648;
  }
  else {
    uint64_t v3 = sub_100264984;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_100264944()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_task_dealloc(*(void *)(v0 + 96));
  return swift_task_switch(sub_100266644, v1, 0LL);
}

uint64_t sub_100264984()
{
  uint64_t v1 = *(void *)(v0 + 64);
  *(_BYTE *)(v0 + 152) = *(_BYTE *)(v0 + 16);
  *(_OWORD *)(v0 + 136) = *(_OWORD *)(v0 + 24);
  return swift_task_switch(sub_10026663C, v1, 0LL);
}

uint64_t sub_1002649A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  uint64_t v4 = type metadata accessor for ContinuousClock(0LL);
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v6 = static AirDropActor.shared;
  v3[8] = static AirDropActor.shared;
  return swift_task_switch(sub_100264A3C, v6, 0LL);
}

uint64_t sub_100264A3C(uint64_t a1)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006461D8 + dword_1006461D8);
  uint64_t v2 = (void *)swift_task_alloc(unk_1006461DC);
  *(void *)(v1 + 72) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100264ABC;
  return v4(5000000000000000000LL, 0LL, 0LL, 0LL, 1);
}

uint64_t sub_100264ABC()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 72LL);
  *(void *)(*(void *)v1 + 80LL) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = v2[8];
  (*(void (**)(void, void))(v2[6] + 8LL))(v2[7], v2[5]);
  if (v0) {
    uint64_t v5 = sub_100266640;
  }
  else {
    uint64_t v5 = sub_100264B38;
  }
  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_100264B38()
{
  if (qword_100644060 != -1) {
    swift_once(&qword_100644060, sub_1002612F4);
  }
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_10064A250);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v4 = static os_log_type_t.error.getter(v3);
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(char **)(v0 + 24);
  if (v5)
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v10 = *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName];
    sec_identity_t v9 = *(const char **)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName + 8];
    swift_bridgeObjectRetain(v9);
    *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10018CDB4(v10, (unint64_t)v9, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v9);

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "IDENTITY-SHARE request timeout for serviceName %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  else
  {
  }

  NWConnection.forceCancel()();
  unint64_t v11 = sub_100265F3C();
  uint64_t v12 = swift_allocError(&type metadata for SDNWHTTPResponseError, v11, 0LL, 0LL);
  *uint64_t v13 = 504;
  swift_willThrow(v12);
  swift_task_dealloc(*(void *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100264E0C()
{
  return type metadata accessor for SDAirDropBonjourDiscoverConnection(0LL);
}

uint64_t type metadata accessor for SDAirDropBonjourDiscoverConnection(uint64_t a1)
{
  uint64_t result = qword_10064A2C0;
  if (!qword_10064A2C0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropBonjourDiscoverConnection);
  }
  return result;
}

uint64_t sub_100264E50(uint64_t a1)
{
  v4[0] = &unk_1004D0808;
  uint64_t result = type metadata accessor for NWEndpoint(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    void v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    void v4[3] = &unk_1004D0820;
    v4[4] = &unk_1004D0820;
    void v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 10LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

unint64_t sub_100264EF8()
{
  unint64_t result = qword_100654D00;
  if (!qword_100654D00)
  {
    uint64_t v1 = type metadata accessor for SFAirDropSend.Failure(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SFAirDropSend.Failure, v1);
    atomic_store(result, &qword_100654D00);
  }

  return result;
}

uint64_t *sub_100264F40(uint64_t *a1)
{
  uint64_t v2 = (const char *)a1[3];
  uint64_t v3 = a1[4];
  unint64_t v4 = a1[5];
  BOOL v5 = (const char *)a1[7];
  uint64_t v6 = a1[8];
  unint64_t v7 = a1[9];
  uint64_t v8 = a1[10];
  unint64_t v9 = a1[11];
  uint64_t v10 = a1[18];
  uint64_t v13 = (const char *)a1[13];
  nw_content_context_t v14 = (const char *)a1[17];
  sub_100189B0C(*a1, a1[1]);
  swift_bridgeObjectRelease(v2);
  sub_100189B0C(v3, v4);
  swift_bridgeObjectRelease(v5);
  sub_100189B0C(v6, v7);
  sub_100189B0C(v8, v9);
  swift_release(v10);
  *(void *)&double v11 = swift_bridgeObjectRelease(v13).n128_u64[0];
  swift_bridgeObjectRelease(v14, v11);
  return a1;
}

uint64_t *sub_100265000(uint64_t *a1)
{
  uint64_t v2 = (const char *)a1[3];
  uint64_t v3 = a1[4];
  unint64_t v4 = a1[5];
  BOOL v5 = (const char *)a1[7];
  uint64_t v6 = a1[8];
  unint64_t v7 = a1[9];
  uint64_t v8 = a1[10];
  unint64_t v9 = a1[11];
  uint64_t v10 = (const char *)a1[17];
  uint64_t v12 = a1[18];
  uint64_t v13 = (const char *)a1[13];
  sub_1001A4C04(*a1, a1[1]);
  swift_bridgeObjectRetain(v2);
  sub_1001A4C04(v3, v4);
  swift_bridgeObjectRetain(v5);
  sub_1001A4C04(v6, v7);
  sub_1001A4C04(v8, v9);
  swift_bridgeObjectRetain(v10);
  swift_retain(v12);
  swift_bridgeObjectRetain(v13);
  return a1;
}

uint64_t *sub_1002650C0(uint64_t *a1)
{
  uint64_t v2 = (const char *)a1[3];
  uint64_t v3 = a1[4];
  unint64_t v4 = a1[5];
  BOOL v5 = (const char *)a1[7];
  uint64_t v6 = a1[8];
  unint64_t v7 = a1[9];
  uint64_t v8 = a1[10];
  unint64_t v9 = a1[11];
  uint64_t v12 = (const char *)a1[13];
  uint64_t v10 = (const char *)a1[17];
  sub_1001A4C04(*a1, a1[1]);
  swift_bridgeObjectRetain(v2);
  sub_1001A4C04(v3, v4);
  swift_bridgeObjectRetain(v5);
  sub_1001A4C04(v6, v7);
  sub_1001A4C04(v8, v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  return a1;
}

uint64_t *sub_100265178(uint64_t *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  unint64_t v4 = a1[5];
  uint64_t v5 = a1[7];
  uint64_t v6 = a1[8];
  unint64_t v7 = a1[9];
  uint64_t v8 = a1[10];
  unint64_t v9 = a1[11];
  uint64_t v10 = a1[13];
  uint64_t v12 = a1[17];
  sub_100189B0C(*a1, a1[1]);
  swift_bridgeObjectRelease(v2);
  sub_100189B0C(v3, v4);
  swift_bridgeObjectRelease(v5);
  sub_100189B0C(v6, v7);
  sub_100189B0C(v8, v9);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v12);
  return a1;
}

uint64_t sub_100265230()
{
  v1[6] = v0;
  uint64_t v2 = sub_100183098(&qword_100646560);
  v1[7] = swift_task_alloc((*(void *)(*(void *)(v2 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for SDAirDropMessage(0LL);
  v1[8] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[9] = v4;
  uint64_t v5 = *(void *)(v4 + 64);
  v1[10] = v5;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  v1[11] = swift_task_alloc(v6);
  v1[12] = swift_task_alloc(v6);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v7 = static AirDropActor.shared;
  v1[13] = static AirDropActor.shared;
  return swift_task_switch(sub_1002652FC, v7, 0LL);
}

uint64_t sub_1002652FC()
{
  uint64_t v1 = (void **)(v0 + 48);
  uint64_t v2 = (os_log_s *)objc_retainAutoreleasedReturnValue( objc_msgSend( *(id *)(*(void *)(v0 + 48)
                             + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_nearbyAgent),
                       "idSelfIdentity"));
  *(void *)(v0 + 112) = v2;
  id v3 = sub_1002E07C0();
  *(void *)(v0 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v3;
  *(void *)(v0 + 128) = v4;
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = (uint64_t)v3;
    unint64_t v6 = v4;
    if (v2)
    {
      id v7 = -[os_log_s idsDeviceID](v2, "idsDeviceID");
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
        double v11 = v10;

        *(void *)(v0 + 136) = v9;
        *(void *)(v0 + 144) = v11;
        id v12 = -[os_log_s deviceIRKData](v2, "deviceIRKData");
        if (v12)
        {
          uint64_t v13 = v12;
          uint64_t v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v12);
          unint64_t v16 = v15;

          *(void *)(v0 + 152) = v14;
          *(void *)(v0 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v16;
          id v17 = -[os_log_s edPKData](v2, "edPKData");
          if (v17)
          {
            uint64_t v18 = v17;
            uint64_t v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v17);
            uint64_t v21 = v20;

            *(void *)(v0 + 168) = v19;
            *(void *)(v0 + 176) = v21;
            if (qword_100644060 != -1) {
              swift_once(&qword_100644060, sub_1002612F4);
            }
            uint64_t v22 = *v1;
            uint64_t v23 = type metadata accessor for Logger(0LL);
            sub_100186DE4(v23, (uint64_t)qword_10064A250);
            uint64_t v24 = (os_log_s *)Logger.logObject.getter(v22);
            os_log_type_t v25 = static os_log_type_t.default.getter();
            BOOL v26 = os_log_type_enabled(v24, v25);
            uint64_t v27 = *v1;
            if (v26)
            {
              uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v29 = swift_slowAlloc(32LL, -1LL);
              *(_DWORD *)uint64_t v28 = 136315138;
              uint64_t v43 = v29;
              uint64_t v30 = NWEndpoint.debugDescription.getter();
              __int128 v32 = (const char *)v31;
              *(void *)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10018CDB4(v30, v31, &v43);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v28 + 4, v28 + 12);
              swift_bridgeObjectRelease(v32);

              _os_log_impl((void *)&_mh_execute_header, v24, v25, "Sending IDENTITY-SHARE request %s", v28, 0xCu);
              swift_arrayDestroy(v29, 1LL, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v29, -1LL, -1LL);
              swift_slowDealloc(v28, -1LL, -1LL);
            }

            else
            {
            }

            uint64_t v42 = (void *)swift_task_alloc(dword_10064A2F4);
            *(void *)(v0 + 184) = v42;
            *uint64_t v42 = v0;
            v42[1] = sub_1002656EC;
            return sub_100263B14();
          }

          swift_bridgeObjectRelease(v11);
          sub_100189B20(v14, v16);
        }

        else
        {
          swift_bridgeObjectRelease(v11);
        }
      }
    }

    sub_100189B0C(v5, v6);
  }

  if (qword_100644060 != -1) {
    swift_once(&qword_100644060, sub_1002612F4);
  }
  uint64_t v33 = type metadata accessor for Logger(0LL);
  uint64_t v34 = sub_100186DE4(v33, (uint64_t)qword_10064A250);
  __int128 v35 = (os_log_s *)Logger.logObject.getter(v34);
  os_log_type_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    char v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)char v37 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v35,  v36,  "Missing data for identity update, skipping IDENTITY-SHARE",  v37,  2u);
    swift_slowDealloc(v37, -1LL, -1LL);
    uint64_t v38 = v35;
  }

  else
  {
    uint64_t v38 = v2;
    uint64_t v2 = v35;
  }

  uint64_t v39 = *(void *)(v0 + 88);
  uint64_t v40 = *(void *)(v0 + 56);
  swift_task_dealloc(*(void *)(v0 + 96));
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002656EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 184LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 104LL);
  *(void *)(*(void *)v1 + 192LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10026574C, v3, 0LL);
}

uint64_t sub_10026574C()
{
  uint64_t v1 = v0[24];
  uint64_t v3 = v0[21];
  unint64_t v2 = v0[22];
  uint64_t v4 = v0[19];
  unint64_t v5 = v0[20];
  unint64_t v29 = v2;
  unint64_t v6 = v0[16];
  uint64_t v22 = v0[17];
  uint64_t v23 = (const char *)v0[18];
  uint64_t v7 = v0[15];
  uint64_t v28 = v7;
  uint64_t v8 = (void *)v0[12];
  uint64_t v27 = v0[10];
  uint64_t v25 = v0[11];
  uint64_t v26 = v0[9];
  id v20 = (id)v0[14];
  uint64_t v21 = v0[8];
  uint64_t v24 = v0[7];
  uint64_t v30 = (char *)v0[6];
  uint64_t v9 = *(void *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection];
  *(void *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection] = v1;
  swift_retain(v1);
  swift_release(v9);
  id v10 = [v20 featureFlags];
  *uint64_t v8 = 0LL;
  v8[1] = 0LL;
  v8[2] = v7;
  v8[3] = v6;
  v8[4] = v4;
  v8[5] = v5;
  v8[6] = v3;
  v8[7] = v2;
  v8[8] = v22;
  void v8[9] = v23;
  v8[10] = v10;
  swift_storeEnumTagMultiPayload(v8, v21, 10LL);
  uint64_t v11 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v24, 1LL, 1LL, v11);
  sub_100265DCC((uint64_t)v8, v25);
  uint64_t v12 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v13 = (v12 + 24) & ~v12;
  uint64_t v14 = swift_allocObject(&unk_1005D6A68, v13 + v27, v12 | 7);
  v0[25] = v14;
  *(void *)(v14 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  sub_1001A4B40(v25, v14 + v13, type metadata accessor for SDAirDropMessage);
  uint64_t v15 = swift_allocObject(&unk_1005D6A90, 32LL, 7LL);
  v0[26] = v15;
  *(void *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = v30;
  *(void *)(v15 + 24) = v1;
  swift_retain_n(v1, 2LL);
  unint64_t v16 = v30;
  sub_1001A4C04(v28, v6);
  sub_10019BA8C(v4, v5);
  sub_10019BA8C(v3, v29);
  sub_1001A4C04(v28, v6);
  sub_10019BA8C(v4, v5);
  sub_10019BA8C(v3, v29);
  uint64_t v17 = async function pointer to concurrentRace<A>(priority:operation:against:)[1];
  swift_bridgeObjectRetain(v23);
  uint64_t v18 = (void *)swift_task_alloc(v17);
  v0[27] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_1002659A8;
  return concurrentRace<A>(priority:operation:against:)( v0 + 2,  v0[7],  &unk_10064A300,  v14,  &unk_10064A310,  v15,  &type metadata for SDNWHTTPResponse);
}

uint64_t sub_1002659A8()
{
  unint64_t v2 = *v1;
  uint64_t v3 = (*v1)[27];
  (*v1)[28] = v0;
  swift_task_dealloc(v3);
  uint64_t v5 = v2[25];
  uint64_t v4 = v2[26];
  uint64_t v6 = v2[13];
  sub_100265EFC(v2[7]);
  swift_release(v4);
  swift_release(v5);
  if (v0) {
    uint64_t v7 = sub_100265CB8;
  }
  else {
    uint64_t v7 = sub_100265A3C;
  }
  return swift_task_switch(v7, v6, 0LL);
}

uint64_t sub_100265A3C()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  unint64_t v3 = *(void *)(v0 + 32);
  if (v1 >= 3)
  {
    uint64_t v14 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9) {
      uint64_t v14 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    }
    if (v1 == 4) {
      uint64_t v15 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    }
    else {
      uint64_t v15 = v14;
    }
    uint64_t v16 = type metadata accessor for SFAirDropSend.Failure(0LL);
    unint64_t v17 = sub_100264EF8();
    swift_allocError(v16, v17, 0LL, 0LL);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104LL))(v18, *v15, v16);
    swift_willThrow(v19);
    sub_100189B20(v2, v3);
    uint64_t v20 = *(void *)(v0 + 192);
    uint64_t v22 = *(void *)(v0 + 168);
    unint64_t v21 = *(void *)(v0 + 176);
    uint64_t v23 = *(void *)(v0 + 152);
    unint64_t v24 = *(void *)(v0 + 160);
    uint64_t v26 = *(void *)(v0 + 120);
    unint64_t v25 = *(void *)(v0 + 128);
    unint64_t v29 = *(const char **)(v0 + 144);
    uint64_t v30 = *(void **)(v0 + 112);
    uint64_t v32 = *(void *)(v0 + 96);
    uint64_t v34 = *(void *)(v0 + 88);
    uint64_t v36 = *(void *)(v0 + 56);
    NWConnection.forceCancel()();
    swift_willThrow(v27);
    swift_bridgeObjectRelease(0LL);
    sub_100189B0C(v26, v25);
    sub_100189B20(v23, v24);
    sub_100189B20(v22, v21);
    swift_bridgeObjectRelease(v29);
    sub_100189B20(v22, v21);
    sub_100189B20(v23, v24);
    sub_100189B0C(v26, v25);
    swift_release(v20);

    sub_1001A4BC8(v32, type metadata accessor for SDAirDropMessage);
    swift_task_dealloc(v32);
    swift_task_dealloc(v34);
    swift_task_dealloc(v36);
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  }

  else
  {
    uint64_t v4 = *(void *)(v0 + 192);
    uint64_t v6 = *(void *)(v0 + 168);
    unint64_t v5 = *(void *)(v0 + 176);
    uint64_t v8 = *(void *)(v0 + 152);
    unint64_t v7 = *(void *)(v0 + 160);
    uint64_t v10 = *(void *)(v0 + 120);
    unint64_t v9 = *(void *)(v0 + 128);
    unint64_t v31 = *(const char **)(v0 + 144);
    uint64_t v33 = *(void **)(v0 + 112);
    uint64_t v35 = *(void *)(v0 + 96);
    NWConnection.forceCancel()();
    sub_100189B20(v2, v3);
    swift_bridgeObjectRelease(0LL);
    sub_100189B0C(v10, v9);
    sub_100189B20(v8, v7);
    sub_100189B20(v6, v5);
    swift_bridgeObjectRelease(v31);
    sub_100189B20(v6, v5);
    sub_100189B20(v8, v7);
    sub_100189B0C(v10, v9);
    swift_release(v4);

    sub_1001A4BC8(v35, type metadata accessor for SDAirDropMessage);
    uint64_t v11 = *(void *)(v0 + 88);
    uint64_t v12 = *(void *)(v0 + 56);
    swift_task_dealloc(*(void *)(v0 + 96));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  }

  return v13();
}

uint64_t sub_100265CB8()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 168);
  unint64_t v2 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 152);
  unint64_t v5 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 120);
  unint64_t v6 = *(void *)(v0 + 128);
  uint64_t v11 = *(const char **)(v0 + 144);
  uint64_t v12 = *(void **)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 56);
  NWConnection.forceCancel()();
  swift_willThrow(v9);
  swift_bridgeObjectRelease(0LL);
  sub_100189B0C(v7, v6);
  sub_100189B20(v4, v5);
  sub_100189B20(v3, v2);
  swift_bridgeObjectRelease(v11);
  sub_100189B20(v3, v2);
  sub_100189B20(v4, v5);
  sub_100189B0C(v7, v6);
  swift_release(v1);

  sub_1001A4BC8(v8, type metadata accessor for SDAirDropMessage);
  swift_task_dealloc(v8);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100265DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropMessage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100265E14(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SDAirDropMessage(0LL) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((v4 + 24) & ~v4);
  uint64_t v7 = (void *)swift_task_alloc(dword_10064A2FC);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_100264628(a1, v5, v6);
}

uint64_t sub_100265E98(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc(dword_10064A30C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100195708;
  return sub_1002649A8(a1, v5, v4);
}

uint64_t sub_100265EFC(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100646560);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

unint64_t sub_100265F3C()
{
  unint64_t result = qword_10064A318;
  if (!qword_10064A318)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004DB630, &type metadata for SDNWHTTPResponseError);
    atomic_store(result, &qword_10064A318);
  }

  return result;
}

uint64_t sub_100265F84(uint64_t a1)
{
  return sub_1004173E8(a1, v1);
}

uint64_t sub_100265F8C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_100265FB0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
}

uint64_t sub_100265FB8(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  return sub_100263DFC(a1, a2, a3, v3);
}

uint64_t sub_100265FC0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100265FEC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10026601C()
{
  uint64_t v1 = type metadata accessor for SDAirDropMessage(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_release(*(void *)(v0 + 16));
  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload(v0 + v3, v1))
  {
    case 0u:
      uint64_t v8 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      goto LABEL_46;
    case 2u:
      unint64_t v7 = *(void *)(v5 + 8);
      if (v7 >> 60 == 15) {
        return swift_deallocObject(v0, v3 + v4);
      }
      uint64_t v6 = *(void *)v5;
      goto LABEL_3;
    case 3u:
      unint64_t v9 = *(void *)(v5 + 8);
      if (v9 >> 60 != 15) {
        sub_100189B20(*(void *)v5, v9);
      }
      swift_bridgeObjectRelease(*(const char **)(v5 + 24));
      unint64_t v10 = *(void *)(v5 + 40);
      if (v10 >> 60 != 15) {
        sub_100189B20(*(void *)(v5 + 32), v10);
      }
      swift_bridgeObjectRelease(*(const char **)(v5 + 56));
      unint64_t v11 = *(void *)(v5 + 72);
      if (v11 >> 60 != 15) {
        sub_100189B20(*(void *)(v5 + 64), v11);
      }
      unint64_t v12 = *(void *)(v5 + 88);
      if (v12 >> 60 != 15) {
        sub_100189B20(*(void *)(v5 + 80), v12);
      }
      *(void *)&double v13 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + 104)).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v5 + 136), v13);
      return swift_deallocObject(v0, v3 + v4);
    case 4u:
      uint64_t v14 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = (int *)_s14descr1005DF7D1C10AskRequestVMa(0LL);
      uint64_t v17 = v5 + v16[5];
      uint64_t v18 = type metadata accessor for SFAirDrop.TransferType(0LL);
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = (uint64_t *)(v5 + v16[6]);
      unint64_t v21 = v20[1];
      if (v21 >> 60 != 15) {
        sub_100189B20(*v20, v21);
      }
      *(void *)&double v22 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v16[7] + 8)).n128_u64[0];
      *(void *)&double v23 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v16[8] + 8), v22).n128_u64[0];
      *(void *)&double v24 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v16[9] + 8), v23).n128_u64[0];
      *(void *)&double v25 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v16[10] + 8), v24).n128_u64[0];
      *(void *)&double v26 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v16[11]), v25).n128_u64[0];
      *(void *)&double v27 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v16[12]), v26).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v5 + v16[13] + 8), v27);
      uint64_t v28 = (uint64_t *)(v5 + v16[14]);
      unint64_t v29 = v28[1];
      if (v29 >> 60 != 15) {
        sub_100189B20(*v28, v29);
      }
      uint64_t v30 = (uint64_t *)(v5 + v16[15]);
      unint64_t v31 = v30[1];
      if (v31 >> 60 != 15) {
        sub_100189B20(*v30, v31);
      }
      uint64_t v32 = (uint64_t *)(v5 + v16[17]);
      unint64_t v7 = v32[1];
      if (v7 >> 60 == 15) {
        return swift_deallocObject(v0, v3 + v4);
      }
      uint64_t v6 = *v32;
      goto LABEL_3;
    case 5u:
      *(void *)&double v33 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + 8)).n128_u64[0];
      *(void *)&double v34 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + 24), v33).n128_u64[0];
      *(void *)&double v35 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + 48), v34).n128_u64[0];
      *(void *)&double v36 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + 64), v35).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v5 + 80), v36);
      unint64_t v7 = *(void *)(v5 + 96);
      if (v7 >> 60 == 15) {
        return swift_deallocObject(v0, v3 + v4);
      }
      uint64_t v6 = *(void *)(v5 + 88);
LABEL_3:
      sub_100189B20(v6, v7);
      return swift_deallocObject(v0, v3 + v4);
    case 6u:
      uint64_t v37 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      uint64_t v38 = *(void *)(v37 - 8);
      uint64_t v39 = (int *)_s14descr1005D9BD1C13UploadRequestVMa(0LL);
      swift_bridgeObjectRelease(*(const char **)(v5 + v39[6] + 8));
      uint64_t v40 = (uint64_t *)(v5 + v39[7]);
      unint64_t v41 = v40[1];
      if (v41 >> 60 != 15) {
        sub_100189B20(*v40, v41);
      }
      *(void *)&double v42 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v39[9] + 8)).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v5 + v39[10] + 8), v42);
      return swift_deallocObject(v0, v3 + v4);
    case 7u:
    case 0xBu:
    case 0xDu:
      uint64_t v6 = *(void *)v5;
      unint64_t v7 = *(void *)(v5 + 8);
      goto LABEL_3;
    case 8u:
      uint64_t v43 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v43 - 8) + 8LL))(v0 + v3, v43);
      uint64_t v44 = _s14descr1005DEB71C15ExchangeRequestVMa(0LL);
      goto LABEL_37;
    case 9u:
      uint64_t v45 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v45 - 8) + 8LL))(v0 + v3, v45);
      uint64_t v44 = _s14descr1005DEB71C16ExchangeResponseVMa(0LL);
LABEL_37:
      uint64_t v46 = (int *)v44;
      *(void *)&double v47 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + *(int *)(v44 + 20) + 8)).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v5 + v46[6] + 8), v47);
      uint64_t v48 = v5 + v46[7];
      uint64_t v49 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
      uint64_t v50 = *(void *)(v49 - 8);
      uint64_t v51 = (uint64_t *)(v5 + v46[8]);
      unint64_t v52 = v51[1];
      if (v52 >> 60 != 15) {
        sub_100189B20(*v51, v52);
      }
      v5 += v46[9];
      if (*(void *)(v5 + 72)) {
        goto LABEL_42;
      }
      return swift_deallocObject(v0, v3 + v4);
    case 0xAu:
LABEL_42:
      swift_bridgeObjectRelease(*(const char **)(v5 + 8));
      unint64_t v53 = *(void *)(v5 + 24);
      if (v53 >> 60 != 15) {
        sub_100189B20(*(void *)(v5 + 16), v53);
      }
      sub_100189B20(*(void *)(v5 + 32), *(void *)(v5 + 40));
      sub_100189B20(*(void *)(v5 + 48), *(void *)(v5 + 56));
      swift_bridgeObjectRelease(*(const char **)(v5 + 72));
      break;
    case 0xCu:
      uint64_t v54 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v54 - 8) + 8LL))(v0 + v3, v54);
      v5 += *(int *)(_s14descr1005DD3D1C12ErrorRequestVMa(0LL) + 20);
      uint64_t v8 = type metadata accessor for CodableError(0LL);
LABEL_46:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v5, v8);
      break;
    default:
      return swift_deallocObject(v0, v3 + v4);
  }

  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100266518(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SDAirDropMessage(0LL) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((v4 + 24) & ~v4);
  unint64_t v7 = (void *)swift_task_alloc(dword_10064A324);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_100263E84(a1, v5, v6);
}

uint64_t sub_10026659C()
{
  swift_release(*(void *)(v0 + 24));
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1002665C8(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc(dword_10064A334);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1001943E8;
  return sub_100264270(a1, v5, v4);
}

void sub_10026662C(uint64_t a1)
{
}

uint64_t sub_10026664C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v41 = a3;
  uint64_t v44 = a2;
  uint64_t v45 = a4;
  uint64_t v5 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v5);
  unint64_t v7 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v8 = type metadata accessor for URL(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = &v40[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v10);
  uint64_t v49 = &v40[-v13];
  uint64_t v51 = &_swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  uint64_t v42 = v14;
  uint64_t v43 = a1;
  if (v14)
  {
    unint64_t v47 = (*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v48 = v12;
    uint64_t v15 = a1 + v47;
    uint64_t v16 = *(void *)(v9 + 72);
    uint64_t v50 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v17 = v49;
    uint64_t v46 = v16;
    v50(v7, v15, v8);
    while (1)
    {
      uint64_t v18 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v18(v7, 0LL, 1LL, v8);
      uint64_t v19 = *(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32);
      uint64_t v20 = v19(v17, v7, v8);
      if ((URL.isFileURL.getter(v20) & 1) != 0)
      {
        (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v17, v8);
      }

      else
      {
        v19(v12, v17, v8);
        unint64_t v21 = v51;
        if ((swift_isUniquelyReferenced_nonNull_native(v51) & 1) == 0)
        {
          sub_10018D718(0, v21[2] + 1LL, 1);
          unint64_t v21 = v51;
        }

        unint64_t v23 = v21[2];
        unint64_t v22 = v21[3];
        if (v23 >= v22 >> 1)
        {
          sub_10018D718(v22 > 1, v23 + 1, 1);
          unint64_t v21 = v51;
        }

        v21[2] = v23 + 1;
        uint64_t v16 = v46;
        unint64_t v24 = (unint64_t)v21 + v47 + v23 * v46;
        unint64_t v12 = v48;
        v19((_BYTE *)v24, v48, v8);
        uint64_t v51 = v21;
        uint64_t v17 = v49;
      }

      v15 += v16;
      if (!--v14) {
        goto LABEL_14;
      }
      v50(v7, v15, v8);
    }
  }

  else
  {
    uint64_t v18 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56);
LABEL_14:
    v18(v7, 1LL, 1LL, v8);
  }

  uint64_t v25 = v43;
  swift_bridgeObjectRelease(v43);
  sub_100187100((uint64_t)v7, (uint64_t *)&unk_100645130);
  double v26 = v51;
  uint64_t v27 = v51[2];
  if (v27)
  {
    if (v27 != v42)
    {
      if (qword_100644068 != -1) {
        swift_once(&qword_100644068, sub_1002678E4);
      }
      uint64_t v28 = type metadata accessor for Logger(0LL);
      uint64_t v29 = sub_100186DE4(v28, (uint64_t)qword_10064A340);
      uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v30,  v31,  "Asked to view mixed files and links, only viewing links",  v32,  2u);
        swift_slowDealloc(v32, -1LL, -1LL);
      }
    }

    uint64_t v51 = 0LL;
    uint64_t v33 = swift_allocObject(&unk_1005D6B98, 32LL, 7LL);
    double v34 = v44;
    *(void *)(v33 + swift_unknownObjectWeakDestroy(v0 + 16) = v26;
    *(void *)(v33 + 24) = v34;
    id v35 = v34;
    return SFProgressTask.init(_:initialProgress:operation:file:line:)( 0x6E694C2077656956LL,  0xEA0000000000736BLL,  &v51,  &unk_10064A438,  v33,  0xD000000000000067LL,  0x8000000100507620LL,  284LL,  &type metadata for Double,  &type metadata for Bool);
  }

  else
  {
    swift_release(v51);
    uint64_t v51 = 0LL;
    uint64_t v37 = swift_allocObject(&unk_1005D6BC0, 40LL, 7LL);
    uint64_t v38 = v44;
    *(void *)(v37 + swift_unknownObjectWeakDestroy(v0 + 16) = v44;
    *(_BYTE *)(v37 + 24) = v41 & 1;
    *(void *)(v37 + sub_100195658(v0 + 32) = v25;
    id v39 = v38;
    swift_bridgeObjectRetain(v25);
    return SFProgressTask.init(_:initialProgress:operation:file:line:)( 0xD000000000000013LL,  0x80000001005076D0LL,  &v51,  &unk_10064A448,  v37,  0xD000000000000067LL,  0x8000000100507620LL,  214LL,  &type metadata for Double,  &type metadata for Bool);
  }

uint64_t sub_100266ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v30 = a3;
  uint64_t v4 = sub_100183098((uint64_t *)&unk_100645130);
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v28 + 64);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = type metadata accessor for URL(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a2, v14);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v17, v14) == enum case for SFAirDropReceive.ItemDestination.customURL(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v13, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0LL, 1LL, v10);
    uint64_t v31 = 0LL;
    sub_10026D9AC((uint64_t)v9, (uint64_t)v7);
    uint64_t v18 = *(unsigned __int8 *)(v28 + 80);
    uint64_t v19 = (v18 + 16) & ~v18;
    unint64_t v20 = (v5 + v19 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v21 = swift_allocObject(&unk_1005D6B70, v20 + 8, v18 | 7);
    sub_1001870BC((uint64_t)v7, v21 + v19, (uint64_t *)&unk_100645130);
    uint64_t v22 = v29;
    *(void *)(v21 + v2_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v29;
    swift_bridgeObjectRetain(v22);
    uint64_t v23 = sub_100183098((uint64_t *)&unk_1006464E0);
    SFProgressTask.init(_:initialProgress:operation:file:line:)( 0x6C69462065766F4DLL,  0xEA00000000007365LL,  &v31,  &unk_10064A428,  v21,  0xD000000000000067LL,  0x8000000100507620LL,  252LL,  &type metadata for Double,  v23);
    sub_100187100((uint64_t)v9, (uint64_t *)&unk_100645130);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }

  else
  {
    uint64_t v31 = 0LL;
    uint64_t v25 = swift_allocObject(&unk_1005D6B48, 24LL, 7LL);
    uint64_t v26 = v29;
    *(void *)(v25 + swift_unknownObjectWeakDestroy(v0 + 16) = v29;
    swift_bridgeObjectRetain(v26);
    uint64_t v27 = sub_100183098((uint64_t *)&unk_1006464E0);
    SFProgressTask.init(_:initialProgress:operation:file:line:)( 0x552074726F706D49LL,  0xEB00000000734C52LL,  &v31,  &unk_10064A418,  v25,  0xD000000000000067LL,  0x8000000100507620LL,  163LL,  &type metadata for Double,  v27);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }

uint64_t sub_100266DE4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_100183098(&qword_10064A480);
    unint64_t v3 = (_BYTE *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    unint64_t v3 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v31 = a1 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v30 = (unint64_t)(63 - v4) >> 6;
  unint64_t v7 = v3 + 64;
  swift_bridgeObjectRetain(a1);
  uint64_t result = swift_retain(v3);
  int64_t v9 = 0LL;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_28;
    }

    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }

    if (v13 >= v30) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    int64_t v15 = v9 + 1;
    if (!v14)
    {
      int64_t v15 = v9 + 2;
      if (v9 + 2 >= v30) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v9 + 3;
        if (v9 + 3 >= v30) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v9 + 4;
          if (v9 + 4 >= v30) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v31 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }

unint64_t sub_10026719C(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_100183098(&qword_1006457A0);
    unint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    unint64_t v3 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v39 = v1 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 64);
  int64_t v38 = (unint64_t)(63 - v4) >> 6;
  unint64_t v7 = &v45;
  uint64_t v8 = &v47;
  unint64_t result = swift_bridgeObjectRetain((const char *)v1);
  int64_t v40 = 0LL;
  unint64_t v10 = (unint64_t *)&unk_10064A458;
  unint64_t v11 = &OBJC_CLASS___NSNumber_ptr;
  unint64_t v12 = (char *)&type metadata for Any + 8;
  if (v6) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v21 = v40 + 1;
  if (__OFADD__(v40, 1LL)) {
    goto LABEL_35;
  }
  if (v21 >= v38) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v39 + 8 * v21);
  int64_t v23 = v40 + 1;
  if (!v22)
  {
    int64_t v23 = v40 + 2;
    if (v40 + 2 >= v38) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v39 + 8 * v23);
    if (!v22)
    {
      int64_t v23 = v40 + 3;
      if (v40 + 3 >= v38) {
        goto LABEL_32;
      }
      unint64_t v22 = *(void *)(v39 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v40 + 4;
        if (v40 + 4 >= v38) {
          goto LABEL_32;
        }
        unint64_t v22 = *(void *)(v39 + 8 * v23);
        if (!v22)
        {
          int64_t v24 = v40 + 5;
          if (v40 + 5 < v38)
          {
            unint64_t v22 = *(void *)(v39 + 8 * v24);
            if (v22)
            {
              int64_t v23 = v40 + 5;
              goto LABEL_26;
            }

            while (1)
            {
              int64_t v23 = v24 + 1;
              if (__OFADD__(v24, 1LL)) {
                goto LABEL_36;
              }
              if (v23 >= v38) {
                break;
              }
              unint64_t v22 = *(void *)(v39 + 8 * v23);
              ++v24;
              if (v22) {
                goto LABEL_26;
              }
            }
          }

uint64_t sub_100267518(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_100183098(&qword_10064A478);
    unint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    unint64_t v3 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v29 = a1 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v4) >> 6;
  unint64_t v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain((const char *)a1, -1LL << *(_BYTE *)(a1 + 32));
  uint64_t result = swift_retain(v3);
  int64_t v9 = 0LL;
  while (1)
  {
    if (v6)
    {
      unint64_t v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }

    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }

    if (v14 >= v28) {
      goto LABEL_37;
    }
    unint64_t v15 = *(void *)(v29 + 8 * v14);
    int64_t v16 = v9 + 1;
    if (!v15)
    {
      int64_t v16 = v9 + 2;
      if (v9 + 2 >= v28) {
        goto LABEL_37;
      }
      unint64_t v15 = *(void *)(v29 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v9 + 3;
        if (v9 + 3 >= v28) {
          goto LABEL_37;
        }
        unint64_t v15 = *(void *)(v29 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v9 + 4;
          if (v9 + 4 >= v28) {
            goto LABEL_37;
          }
          unint64_t v15 = *(void *)(v29 + 8 * v16);
          if (!v15) {
            break;
          }
        }
      }
    }

uint64_t Sequence<>.fileCoordinatorReadingOptions()()
{
  return 8LL;
}

uint64_t sub_1002678E4()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064A340);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064A340);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_100267974()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v7);
  int64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183168(0LL, (unint64_t *)&qword_100650E50, &OBJC_CLASS___OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v10);
  int64_t v16 = _swiftEmptyArrayStorage;
  uint64_t v11 = sub_100183F14( (unint64_t *)&qword_100644420,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v12 = sub_100183098(&qword_100650E60);
  uint64_t v13 = sub_1001CD538( (unint64_t *)&qword_100644430,  &qword_100650E60,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v4, v11);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))( v3,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD00000000000003BLL,  0x8000000100507690LL,  v9,  v6,  v3,  0LL);
  qword_10064A358 = result;
  return result;
}

uint64_t sub_100267B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100267BB0, static AirDropActor.shared, 0LL);
}

uint64_t sub_100267BB0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  **(void **)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  unint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  swift_bridgeObjectRetain(v1);
  return v3();
}

uint64_t sub_100267BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  *(void *)(v6 + sub_100195658(v0 + 32) = a6;
  *(_BYTE *)(v6 + 73) = a5;
  *(void *)(v6 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v7 = static AirDropActor.shared;
  *(void *)(v6 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = static AirDropActor.shared;
  return swift_task_switch(sub_100267C64, v7, 0LL);
}

uint64_t sub_100267C64()
{
  uint64_t v1 = *(void **)(v0 + 24);
  if (v1) {
    BOOL v2 = *(_BYTE *)(v0 + 73) == 0;
  }
  else {
    BOOL v2 = 1;
  }
  if (v2)
  {
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v5 = sub_100267E68;
  }

  else
  {
    uint64_t v3 = static AirDropActor.shared;
    *(void *)(v0 + 48) = static AirDropActor.shared;
    id v4 = v1;
    uint64_t v5 = sub_100267CD0;
    uint64_t v6 = v3;
  }

  return swift_task_switch(v5, v6, 0LL);
}

uint64_t sub_100267CD0()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = static AirDropActor.shared;
  uint64_t v4 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v5 = swift_task_alloc(32LL);
  v0[7] = v5;
  *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  *(void *)(v5 + 24) = v1;
  uint64_t v6 = (void *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[8] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100267DAC;
  return withCheckedContinuation<A>(isolation:function:_:)( v0 + 9,  v3,  v4,  0xD00000000000001ALL,  0x80000001005076F0LL,  sub_10026DCB0,  v5,  &type metadata for Bool);
}

uint64_t sub_100267DAC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 48LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 64LL));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100267E0C, v2, 0LL);
}

uint64_t sub_100267E0C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  *(_BYTE *)(v0 + 74) = *(_BYTE *)(v0 + 72);
  return swift_task_switch(sub_100267E28, v1, 0LL);
}

uint64_t sub_100267E28()
{
  char v1 = *(_BYTE *)(v0 + 74);

  **(_BYTE **)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100267E68()
{
  **(_BYTE **)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100267E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  void v5[2] = a1;
  uint64_t v6 = sub_100183098((uint64_t *)&unk_100645130);
  v5[5] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100267F0C, static AirDropActor.shared, 0LL);
}

uint64_t sub_100267F0C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_10026D9AC(*(void *)(v0 + 24), v1);
  uint64_t v2 = type metadata accessor for URL(0LL);
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48LL))(v1, 1LL, v2);
  sub_100187100(v1, (uint64_t *)&unk_100645130);
  if (v3 == 1)
  {
    if (qword_100644068 != -1) {
      swift_once(&qword_100644068, sub_1002678E4);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL);
    uint64_t v5 = sub_100186DE4(v4, (uint64_t)qword_10064A340);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Could not move files to nil folder", v8, 2u);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    uint64_t v10 = *(const char **)(v0 + 32);
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t v11 = *(const char ***)(v0 + 16);

    void *v11 = v10;
    swift_bridgeObjectRetain(v10);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    if (qword_100644070 != -1) {
      swift_once(&qword_100644070, sub_100267974);
    }
    return swift_task_switch(sub_1002680A8, static AirDropActor.shared, 0LL);
  }

uint64_t sub_1002680A8()
{
  return _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000022LL,  0x8000000100503DB0LL,  "DaemoniOSLibrary/SDAirDropDownloadDestinationProvider.swift",  59LL,  2LL,  41LL,  0);
}

uint64_t sub_100268114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[22] = a4;
  v5[23] = a5;
  v5[20] = a2;
  v5[21] = a3;
  v5[19] = a1;
  uint64_t v6 = sub_100183098(&qword_1006494C8);
  _BYTE v5[24] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[25] = v7;
  v5[26] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098((uint64_t *)&unk_100645130);
  v5[27] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for URL(0LL);
  v5[28] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[29] = v10;
  unint64_t v11 = (*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[30] = swift_task_alloc(v11);
  v5[31] = swift_task_alloc(v11);
  unint64_t v12 = (*(void *)(*(void *)(sub_100183098(&qword_1006494D0) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[32] = swift_task_alloc(v12);
  v5[33] = swift_task_alloc(v12);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v13 = static AirDropActor.shared;
  v5[34] = static AirDropActor.shared;
  return swift_task_switch(sub_100268244, v13, 0LL);
}

id sub_100268244()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v2;
  if (!v2)
  {
    if (qword_100644068 != -1) {
      swift_once(&qword_100644068, sub_1002678E4);
    }
    uint64_t v18 = type metadata accessor for Logger(0LL);
    uint64_t v19 = sub_100186DE4(v18, (uint64_t)qword_10064A340);
    uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
    os_log_type_t v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      unint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Cannot open empty list of URLs", v22, 2u);
      swift_slowDealloc(v22, -1LL, -1LL);
    }

    char v23 = 0;
LABEL_77:
    uint64_t v112 = *(void *)(v0 + 256);
    uint64_t v111 = *(void *)(v0 + 264);
    uint64_t v114 = *(void *)(v0 + 240);
    uint64_t v113 = *(void *)(v0 + 248);
    uint64_t v116 = *(void *)(v0 + 208);
    uint64_t v115 = *(void *)(v0 + 216);
    **(_BYTE **)(v0 + 152) = v23;
    swift_task_dealloc(v111);
    swift_task_dealloc(v112);
    swift_task_dealloc(v113);
    swift_task_dealloc(v114);
    swift_task_dealloc(v115);
    swift_task_dealloc(v116);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v3 = v0 + 136;
  uint64_t v4 = *(void **)(v0 + 184);
  uint64_t v5 = &selRef_btAddr;
  uint64_t v117 = v0 + 120;
  if (v4)
  {
    uint64_t v6 = qword_100644068;
    uint64_t v7 = v4;
    if (v6 != -1)
    {
LABEL_81:
      swift_once(&qword_100644068, sub_1002678E4);
      uint64_t v1 = *(void *)(v0 + 176);
    }

    uint64_t v8 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v8, (uint64_t)qword_10064A340);
    swift_bridgeObjectRetain_n(v1, 2LL);
    uint64_t v9 = v7;
    uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v119 = v0 + 144;
      uint64_t v12 = swift_slowAlloc(22LL, -1LL);
      uint64_t v118 = swift_slowAlloc(64LL, -1LL);
      uint64_t v121 = v118;
      *(_DWORD *)uint64_t v12 = 136315394;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      id v14 = (id)SFCompactStringFromCollection(isa);

      if (v14)
      {
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        int64_t v17 = v16;
      }

      else
      {
        uint64_t v15 = 0xD000000000000015LL;
        double v122 = 0.0;
        uint64_t v123 = (const char *)0xE000000000000000LL;
        _StringGuts.grow(_:)(17LL);
        swift_bridgeObjectRelease(v123);
        int64_t v17 = (const char *)0x80000001005046B0LL;
      }

      uint64_t v36 = *(void *)(v0 + 176);
      *(void *)(v0 + 136) = sub_10018CDB4(v15, (unint64_t)v17, &v121);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3, v119, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease_n(v36, 2LL);
      *(_WORD *)(v12 + 12) = 2080;
      id v37 = -[SEL bundleIdentifier](v9, "bundleIdentifier");
      if (v37)
      {
        int64_t v38 = v37;
        uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
        uint64_t v41 = v40;
      }

      else
      {
        uint64_t v39 = 0xD000000000000015LL;
        double v122 = 0.0;
        uint64_t v123 = (const char *)0xE000000000000000LL;
        _StringGuts.grow(_:)(17LL);
        swift_bridgeObjectRelease(v123);
        uint64_t v41 = (const char *)0x80000001005046B0LL;
      }

      *(void *)(v0 + 144) = sub_10018CDB4(v39, (unint64_t)v41, &v121);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v119, v0 + 152, v12 + 14, v12 + 22);
      swift_bridgeObjectRelease(v41);

      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Opening URLs: %s in %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy(v118, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v118, -1LL, -1LL);
      swift_slowDealloc(v12, -1LL, -1LL);

LABEL_27:
      uint64_t v5 = &selRef_btAddr;
      goto LABEL_28;
    }

    uint64_t v34 = *(void *)(v0 + 176);

    uint64_t v35 = v34;
  }

  else
  {
    if (qword_100644068 != -1)
    {
      swift_once(&qword_100644068, sub_1002678E4);
      uint64_t v1 = *(void *)(v0 + 176);
    }

    uint64_t v24 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v24, (uint64_t)qword_10064A340);
    uint64_t v25 = swift_bridgeObjectRetain_n(v1, 2LL);
    uint64_t v10 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v28 = swift_slowAlloc(32LL, -1LL);
      uint64_t v121 = v28;
      *(_DWORD *)uint64_t v27 = 136315138;
      Class v29 = Array._bridgeToObjectiveC()().super.isa;
      id v30 = (id)SFCompactStringFromCollection(v29);

      if (v30)
      {
        uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
        char v33 = v32;
      }

      else
      {
        uint64_t v31 = 0xD000000000000015LL;
        double v122 = 0.0;
        uint64_t v123 = (const char *)0xE000000000000000LL;
        _StringGuts.grow(_:)(17LL);
        swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
        char v33 = (const char *)0x80000001005046B0LL;
      }

      uint64_t v42 = *(void *)(v0 + 176);
      *(void *)(v0 + 128) = sub_10018CDB4(v31, (unint64_t)v33, &v121);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v27 + 4, v27 + 12);
      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease_n(v42, 2LL);
      _os_log_impl((void *)&_mh_execute_header, v10, v26, "Opening URLs: %s", v27, 0xCu);
      swift_arrayDestroy(v28, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1LL, -1LL);
      swift_slowDealloc(v27, -1LL, -1LL);

      goto LABEL_27;
    }

    uint64_t v35 = *(void *)(v0 + 176);
  }

  swift_bridgeObjectRelease_n(v35, 2LL);

LABEL_28:
  swift_bridgeObjectRetain(*(const char **)(v0 + 176), v117);
  char v43 = 0;
  uint64_t v3 = 0LL;
  unint64_t v44 = 0LL;
  uint64_t v45 = &IDSSendMessageOptionForceLocalDeliveryKey_ptr;
  uint64_t v7 = (SEL *)&selRef_btAddr;
  while (1)
  {
    unint64_t v46 = *(void *)(v0 + 280);
    char v120 = v43;
    if (v44 == v46)
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 232) + 56LL))( *(void *)(v0 + 216),  1LL,  1LL,  *(void *)(v0 + 224));
      unint64_t v47 = *(void *)(v0 + 280);
LABEL_33:
      uint64_t v51 = *(void *)(v0 + 256);
      uint64_t v53 = *(void *)(v0 + 192);
      uint64_t v52 = *(void *)(v0 + 200);
      sub_100187100(*(void *)(v0 + 216), (uint64_t *)&unk_100645130);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v51, 1LL, 1LL, v53);
      goto LABEL_36;
    }

    if (v44 >= v46) {
      goto LABEL_79;
    }
    uint64_t v49 = *(void *)(v0 + 224);
    uint64_t v48 = *(void *)(v0 + 232);
    uint64_t v50 = *(void *)(v0 + 216);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v48 + 16))( v50,  *(void *)(v0 + 176)
    + ((*(unsigned __int8 *)(v48 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))
    + *(void *)(v48 + 72) * v44,
      v49);
    unint64_t v47 = v44 + 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v50, 0LL, 1LL, v49);
    uint64_t v54 = *(void *)(v0 + 248);
    uint64_t v55 = *(void *)(v0 + 224);
    uint64_t v56 = *(void *)(v0 + 208);
    uint64_t v57 = *(void *)(v0 + 192);
    uint64_t v5 = *(char ***)(*(void *)(v0 + 232) + 32LL);
    ((void (*)(uint64_t, void, uint64_t))v5)(v54, *(void *)(v0 + 216), v55);
    uint64_t v58 = v56 + *(int *)(v57 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v5)(v58, v54, v55);
    if (__OFADD__(v3, 1LL)) {
      goto LABEL_80;
    }
    uint64_t v59 = *(void **)(v0 + 256);
    uint64_t v60 = *(void *)(v0 + 224);
    os_log_type_t v61 = v7;
    uint64_t v63 = *(void *)(v0 + 192);
    uint64_t v62 = *(void *)(v0 + 200);
    uint64_t v64 = (char *)v59 + *(int *)(v63 + 48);
    *uint64_t v59 = v3;
    ((void (*)(char *, uint64_t, uint64_t))v5)(v64, v58, v60);
    os_log_type_t v65 = *(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56);
    uint64_t v7 = v61;
    uint64_t v45 = &IDSSendMessageOptionForceLocalDeliveryKey_ptr;
    v65(v59, 0LL, 1LL, v63);
    ++v3;
    uint64_t v5 = &selRef_btAddr;
LABEL_36:
    *(void *)(v0 + 288) = v3;
    *(void *)(v0 + 296) = v47;
    uint64_t v66 = *(void *)(v0 + 264);
    uint64_t v68 = *(void *)(v0 + 192);
    uint64_t v67 = *(void *)(v0 + 200);
    sub_1001870BC(*(void *)(v0 + 256), v66, &qword_1006494D0);
    uint64_t v69 = *(char **)(v0 + 264);
    uint64_t v70 = *(void *)(v0 + 232);
    uint64_t v71 = *(void *)(v0 + 240);
    uint64_t v72 = *(void *)(v0 + 224);
    uint64_t v73 = *(void *)(v0 + 192);
    *(void *)(v0 + 304) = *(void *)v69;
    uint64_t v74 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v70 + 32))(v71, &v69[*(int *)(v73 + 48)], v72);
    URL.scheme.getter(v74);
    if (!v75) {
      break;
    }
    uint64_t v76 = v75;
    Swift::String v77 = String.lowercased()();
    *(void *)&double v78 = swift_bridgeObjectRelease(v76).n128_u64[0];
    if (v77._countAndFlagsBits == 0x6D656D6563696F76LL && v77._object == (void *)0xEA0000000000736FLL)
    {
      swift_bridgeObjectRelease((const char *)0xEA0000000000736FLL, v78);
      goto LABEL_47;
    }

    if ((_stringCompareWithSmolCheck(_:_:expecting:)( v77._countAndFlagsBits,  v77._object,  0x6D656D6563696F76LL,  0xEA0000000000736FLL,  0LL) & 1) != 0) {
      goto LABEL_46;
    }
    if (v77._countAndFlagsBits == 0x736F746F6870LL && v77._object == (void *)0xE600000000000000LL)
    {
LABEL_44:
      swift_bridgeObjectRelease((const char *)0xE600000000000000LL, v79);
      goto LABEL_47;
    }

    if ((_stringCompareWithSmolCheck(_:_:expecting:)( v77._countAndFlagsBits,  v77._object,  0x736F746F6870LL,  0xE600000000000000LL,  0LL) & 1) != 0)
    {
LABEL_46:
      swift_bridgeObjectRelease((const char *)v77._object, v79);
      goto LABEL_47;
    }

    if (v77._countAndFlagsBits == 0xD000000000000010LL && v77._object == (void *)0x8000000100507740LL)
    {
      swift_bridgeObjectRelease((const char *)0x8000000100507740LL, v79);
      goto LABEL_47;
    }

    if ((_stringCompareWithSmolCheck(_:_:expecting:)( v77._countAndFlagsBits,  v77._object,  0xD000000000000010LL,  0x8000000100507740LL,  0LL) & 1) != 0) {
      goto LABEL_46;
    }
    if (v77._countAndFlagsBits == 0x786F62656F6873LL && v77._object == (void *)0xE700000000000000LL)
    {
LABEL_61:
      swift_bridgeObjectRelease((const char *)0xE700000000000000LL, v79);
      goto LABEL_47;
    }

    if ((_stringCompareWithSmolCheck(_:_:expecting:)( v77._countAndFlagsBits,  v77._object,  0x786F62656F6873LL,  0xE700000000000000LL,  0LL) & 1) != 0) {
      goto LABEL_46;
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)( v77._countAndFlagsBits,  v77._object,  0x736B636F7473LL,  0xE600000000000000LL,  0LL) & 1) != 0) {
      goto LABEL_46;
    }
    if (v77._countAndFlagsBits == 0x6870656C69626F6DLL && v77._object == (void *)0xEB00000000656E6FLL)
    {
      swift_bridgeObjectRelease((const char *)0xEB00000000656E6FLL, v79);
    }

    else
    {
      if ((_stringCompareWithSmolCheck(_:_:expecting:)( v77._countAndFlagsBits,  v77._object,  0x6870656C69626F6DLL,  0xEB00000000656E6FLL,  0LL) & 1) != 0) {
        goto LABEL_46;
      }
      char v102 = _stringCompareWithSmolCheck(_:_:expecting:)( v77._countAndFlagsBits,  v77._object,  0x746361746E6F63LL,  0xE700000000000000LL,  0LL);
      swift_bridgeObjectRelease((const char *)v77._object);
      if ((v102 & 1) == 0) {
        break;
      }
    }

uint64_t sub_100268F1C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(v1 + 336) = v2;
  uint64_t v3 = *(void *)(v1 + 272);
  if (v2)
  {
    swift_bridgeObjectRelease(*(const char **)(v1 + 176));
    uint64_t v4 = sub_100269720;
  }

  else
  {
    uint64_t v4 = sub_100268F88;
  }

  return swift_task_switch(v4, v3, 0LL);
}

void sub_100268F88()
{
  uint64_t v2 = *(void **)(v0 + 320);
  uint64_t v1 = *(void **)(v0 + 328);
  uint64_t v3 = *(void **)(v0 + 312);

  uint64_t v4 = *(const char **)(v0 + 120);
  __n128 v5 = swift_bridgeObjectRelease(v4);
  if (!v4)
  {
LABEL_49:
    (*(void (**)(void, void, __n128))(*(void *)(v0 + 232) + 8LL))( *(void *)(v0 + 240),  *(void *)(v0 + 224),  v5);
    char v49 = 0;
LABEL_50:
    swift_bridgeObjectRelease(*(const char **)(v0 + 176));
    uint64_t v78 = *(void *)(v0 + 256);
    uint64_t v77 = *(void *)(v0 + 264);
    uint64_t v80 = *(void *)(v0 + 240);
    uint64_t v79 = *(void *)(v0 + 248);
    uint64_t v82 = *(void *)(v0 + 208);
    uint64_t v81 = *(void *)(v0 + 216);
    **(_BYTE **)(v0 + 152) = v49;
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    (*(void (**)(void))(v0 + 8))();
    return;
  }

  uint64_t v6 = &IDSSendMessageOptionForceLocalDeliveryKey_ptr;
  uint64_t v7 = &selRef_btAddr;
  while (1)
  {
    uint64_t v8 = *(void **)(v0 + 184);
    if (v8 && (id v9 = objc_msgSend(v8, "bundleIdentifier", v5.n128_f64[0])) != 0)
    {
      uint64_t v10 = v9;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      uint64_t v12 = v11;

      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v12);
    }

    else
    {
      NSString v13 = 0LL;
    }

    uint64_t v14 = *(void *)(v0 + 304);
    uint64_t v15 = (void *)objc_opt_self(&OBJC_CLASS___SDAirDropHandler);
    URL._bridgeToObjectiveC()(v16);
    uint64_t v18 = v17;
    [v15 logReceiverBundleID:v13 forURL:v17];

    uint64_t v19 = v14 + 1;
    if (__OFADD__(v14, 1LL))
    {
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }

    uint64_t v20 = *(void *)(v0 + 232);
    uint64_t v21 = *(void *)(v0 + 240);
    uint64_t v22 = *(void *)(v0 + 224);
    char v23 = *(void (**)(double *))(v0 + 160);
    double v83 = (double)v19 / (double)(*(void *)(v0 + 280) + 1LL);
    v23(&v83);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
    uint64_t v25 = *(void *)(v0 + 288);
    unint64_t v24 = *(void *)(v0 + 296);
    unint64_t v26 = *(void *)(v0 + 280);
    if (v24 == v26)
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 232) + 56LL))( *(void *)(v0 + 216),  1LL,  1LL,  *(void *)(v0 + 224));
      unint64_t v27 = *(void *)(v0 + 280);
LABEL_12:
      uint64_t v31 = *(void *)(v0 + 256);
      uint64_t v32 = *(void *)(v0 + 192);
      uint64_t v33 = *(void *)(v0 + 200);
      sub_100187100(*(void *)(v0 + 216), (uint64_t *)&unk_100645130);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v31, 1LL, 1LL, v32);
      goto LABEL_15;
    }

    if (v24 >= v26) {
      goto LABEL_52;
    }
    uint64_t v28 = *(void *)(v0 + 224);
    uint64_t v29 = *(void *)(v0 + 232);
    uint64_t v30 = *(void *)(v0 + 216);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v29 + 16))( v30,  *(void *)(v0 + 176)
    + ((*(unsigned __int8 *)(v29 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))
    + *(void *)(v29 + 72) * v24,
      v28);
    unint64_t v27 = v24 + 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v30, 0LL, 1LL, v28);
    uint64_t v34 = v7;
    uint64_t v35 = *(void *)(v0 + 248);
    uint64_t v36 = *(void *)(v0 + 224);
    uint64_t v37 = *(void *)(v0 + 208);
    uint64_t v38 = *(void *)(v0 + 192);
    uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 232) + 32LL);
    v39(v35, *(void *)(v0 + 216), v36);
    uint64_t v40 = v37 + *(int *)(v38 + 48);
    v39(v40, v35, v36);
    if (__OFADD__(v25, 1LL)) {
      goto LABEL_53;
    }
    uint64_t v41 = *(void **)(v0 + 256);
    uint64_t v42 = *(void *)(v0 + 224);
    uint64_t v44 = *(void *)(v0 + 192);
    uint64_t v43 = *(void *)(v0 + 200);
    uint64_t v45 = (char *)v41 + *(int *)(v44 + 48);
    *uint64_t v41 = v25;
    v39((uint64_t)v45, v40, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v41, 0LL, 1LL, v44);
    ++v25;
    uint64_t v7 = v34;
    uint64_t v6 = &IDSSendMessageOptionForceLocalDeliveryKey_ptr;
LABEL_15:
    *(void *)(v0 + 288) = v25;
    *(void *)(v0 + 296) = v27;
    uint64_t v46 = *(void *)(v0 + 264);
    uint64_t v47 = *(void *)(v0 + 192);
    uint64_t v48 = *(void *)(v0 + 200);
    sub_1001870BC(*(void *)(v0 + 256), v46, &qword_1006494D0);
    char v49 = 1;
    uint64_t v50 = *(char **)(v0 + 264);
    uint64_t v51 = *(void *)(v0 + 232);
    uint64_t v52 = *(void *)(v0 + 240);
    uint64_t v53 = *(void *)(v0 + 224);
    uint64_t v54 = *(void *)(v0 + 192);
    *(void *)(v0 + 304) = *(void *)v50;
    uint64_t v55 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v51 + 32))(v52, &v50[*(int *)(v54 + 48)], v53);
    URL.scheme.getter(v55);
    if (!v56) {
      break;
    }
    uint64_t v57 = v56;
    Swift::String v58 = String.lowercased()();
    *(void *)&double v59 = swift_bridgeObjectRelease(v57).n128_u64[0];
    if (v58._countAndFlagsBits == 0x6D656D6563696F76LL && v58._object == (void *)0xEA0000000000736FLL)
    {
      swift_bridgeObjectRelease((const char *)0xEA0000000000736FLL, v59);
      goto LABEL_26;
    }

    if ((_stringCompareWithSmolCheck(_:_:expecting:)( v58._countAndFlagsBits,  v58._object,  0x6D656D6563696F76LL,  0xEA0000000000736FLL,  0LL) & 1) != 0) {
      goto LABEL_25;
    }
    if (v58._countAndFlagsBits == 0x736F746F6870LL && v58._object == (void *)0xE600000000000000LL)
    {
LABEL_23:
      swift_bridgeObjectRelease((const char *)0xE600000000000000LL, v60);
      goto LABEL_26;
    }

    if ((_stringCompareWithSmolCheck(_:_:expecting:)( v58._countAndFlagsBits,  v58._object,  0x736F746F6870LL,  0xE600000000000000LL,  0LL) & 1) != 0)
    {
LABEL_25:
      swift_bridgeObjectRelease((const char *)v58._object, v60);
      goto LABEL_26;
    }

    if (v58._countAndFlagsBits == 0xD000000000000010LL && v58._object == (void *)0x8000000100507740LL)
    {
      swift_bridgeObjectRelease((const char *)0x8000000100507740LL, v60);
      goto LABEL_26;
    }

    if ((_stringCompareWithSmolCheck(_:_:expecting:)( v58._countAndFlagsBits,  v58._object,  0xD000000000000010LL,  0x8000000100507740LL,  0LL) & 1) != 0) {
      goto LABEL_25;
    }
    if (v58._countAndFlagsBits == 0x786F62656F6873LL && v58._object == (void *)0xE700000000000000LL)
    {
LABEL_35:
      swift_bridgeObjectRelease((const char *)0xE700000000000000LL, v60);
      goto LABEL_26;
    }

    if ((_stringCompareWithSmolCheck(_:_:expecting:)( v58._countAndFlagsBits,  v58._object,  0x786F62656F6873LL,  0xE700000000000000LL,  0LL) & 1) != 0) {
      goto LABEL_25;
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)( v58._countAndFlagsBits,  v58._object,  0x736B636F7473LL,  0xE600000000000000LL,  0LL) & 1) != 0) {
      goto LABEL_25;
    }
    if (v58._countAndFlagsBits == 0x6870656C69626F6DLL && v58._object == (void *)0xEB00000000656E6FLL)
    {
      swift_bridgeObjectRelease((const char *)0xEB00000000656E6FLL, v60);
    }

    else
    {
      if ((_stringCompareWithSmolCheck(_:_:expecting:)( v58._countAndFlagsBits,  v58._object,  0x6870656C69626F6DLL,  0xEB00000000656E6FLL,  0LL) & 1) != 0) {
        goto LABEL_25;
      }
      char v67 = _stringCompareWithSmolCheck(_:_:expecting:)( v58._countAndFlagsBits,  v58._object,  0x746361746E6F63LL,  0xE700000000000000LL,  0LL);
      swift_bridgeObjectRelease((const char *)v58._object);
      if ((v67 & 1) == 0) {
        break;
      }
    }

LABEL_55:
  __break(1u);
}

    if (__OFSUB__(v4, v15)) {
      goto LABEL_171;
    }
    double v60 = v15 + v146;
    if (__OFADD__(v15, v146)) {
      goto LABEL_174;
    }
    if (v60 >= v150) {
      double v60 = v150;
    }
    if (v60 < v15)
    {
LABEL_175:
      __break(1u);
LABEL_176:

      __break(1u);
LABEL_177:

      __break(1u);
LABEL_178:

      __break(1u);
LABEL_179:

      __break(1u);
LABEL_180:

      _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Can't construct Array with count < 0",  36LL,  2LL,  "Swift/Array.swift",  17LL,  2,  936LL,  0);
      __break(1u);
      return;
    }

    if (v4 == v60) {
      goto LABEL_82;
    }
    uint64_t v156 = v13;
    id v61 = &v12[2 * v4];
    unint64_t v148 = v60;
    while (2)
    {
      uint64_t v62 = &v12[2 * v4];
      uint64_t v63 = *v62;
      uint64_t v64 = (const char *)v62[1];
      os_log_type_t v65 = v15;
      uint64_t v159 = v61;
      while (2)
      {
        unsigned __int8 v66 = v4;
        char v67 = *(v61 - 2);
        id v68 = (const char *)*(v61 - 1);
        *(void *)&id v69 = swift_beginAccess(v162, v164, 32LL, 0LL).n128_u64[0];
        uint64_t v70 = *(void *)v162;
        uint64_t v71 = *(void *)(*(void *)v162 + 16LL);
        *(void *)&uint64_t v72 = swift_bridgeObjectRetain(v64, v69).n128_u64[0];
        swift_bridgeObjectRetain(v68, v72);
        if (v71)
        {
          uint64_t v73 = sub_1003AD53C(v63, (uint64_t)v64);
          if ((v74 & 1) != 0)
          {
            uint64_t v75 = *(void *)(*(void *)(v70 + 56) + 8 * v73);
            if (*(void *)(v70 + 16)) {
              goto LABEL_70;
            }
LABEL_74:
            uint64_t v4 = 0LL;
          }

          else
          {
            uint64_t v75 = 0LL;
            if (!*(void *)(v70 + 16)) {
              goto LABEL_74;
            }
LABEL_70:
            swift_bridgeObjectRetain(v68);
            uint64_t v76 = sub_1003AD53C(v67, (uint64_t)v68);
            if ((v77 & 1) != 0) {
              uint64_t v4 = *(void *)(*(void *)(v70 + 56) + 8 * v76);
            }
            else {
              uint64_t v4 = 0LL;
            }
            swift_bridgeObjectRelease(v68);
          }
        }

        else
        {
          uint64_t v75 = 0LL;
          uint64_t v4 = 0LL;
        }

        swift_endAccess(v164);
        *(void *)&uint64_t v78 = swift_bridgeObjectRelease(v64).n128_u64[0];
        swift_bridgeObjectRelease(v68, v78);
        if (v75 < (uint64_t)v4)
        {
          uint64_t v12 = v165;
          if (!v165) {
            goto LABEL_176;
          }
          uint64_t v4 = v66;
          uint64_t v63 = *v61;
          uint64_t v64 = (const char *)v61[1];
          *(_OWORD *)id v61 = *((_OWORD *)v61 - 1);
          *(v61 - sub_10022D314(2, 1) = (uint64_t)v64;
          *(v61 - 2) = v63;
          v61 -= 2;
          if (v66 == ++v65) {
            goto LABEL_65;
          }
          continue;
        }

        break;
      }

      uint64_t v12 = v165;
      uint64_t v4 = v66;
LABEL_65:
      ++v4;
      id v61 = v159 + 2;
      uint64_t v15 = v151;
      if (v4 != v148) {
        continue;
      }
      break;
    }

    uint64_t v4 = v148;
    NSString v13 = v156;
LABEL_82:
    if ((uint64_t)v4 < v15)
    {
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
      goto LABEL_173;
    }

    uint64_t v79 = v13;
    uint64_t v149 = v4;
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) != 0) {
      NSString v13 = v79;
    }
    else {
      NSString v13 = sub_1002FA994(0LL, *((void *)v79 + 2) + 1LL, 1, v79);
    }
    uint64_t v81 = *((void *)v13 + 2);
    uint64_t v80 = *((void *)v13 + 3);
    uint64_t v4 = v81 + 1;
    if (v81 >= v80 >> 1) {
      NSString v13 = sub_1002FA994((char *)(v80 > 1), v81 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v4;
    uint64_t v82 = v13 + 32;
    double v83 = &v13[16 * v81 + 32];
    *(void *)double v83 = v15;
    *((void *)v83 + sub_10022D314(2, 1) = v149;
    if (!v81)
    {
      uint64_t v4 = 1LL;
LABEL_15:
      os_log_type_t v11 = v149;
      uint64_t v14 = v150;
      if (v149 >= v150)
      {
        uint64_t v10 = v147;
        if (v4 < 2) {
          goto LABEL_148;
        }
        goto LABEL_135;
      }

      continue;
    }

    break;
  }

  unint64_t v152 = v13 + 32;
  uint64_t v157 = v13;
  while (1)
  {
    uint64_t v84 = v4 - 1;
    if (v4 >= 4)
    {
      uint64_t v89 = &v82[16 * v4];
      uint64_t v90 = *((void *)v89 - 8);
      NSString v91 = *((void *)v89 - 7);
      uint64_t v95 = __OFSUB__(v91, v90);
      uint64_t v92 = v91 - v90;
      if (v95) {
        goto LABEL_155;
      }
      uint64_t v94 = *((void *)v89 - 6);
      uint64_t v93 = *((void *)v89 - 5);
      uint64_t v95 = __OFSUB__(v93, v94);
      id v87 = v93 - v94;
      uint64_t v88 = v95;
      if (v95) {
        goto LABEL_156;
      }
      unint64_t v96 = v4 - 2;
      uint64_t v97 = &v82[16 * v4 - 32];
      uint64_t v99 = *(void *)v97;
      uint64_t v98 = *((void *)v97 + 1);
      uint64_t v95 = __OFSUB__(v98, v99);
      uint64_t v100 = v98 - v99;
      if (v95) {
        goto LABEL_158;
      }
      uint64_t v95 = __OFADD__(v87, v100);
      uint64_t v101 = v87 + v100;
      if (v95) {
        goto LABEL_161;
      }
      if (v101 >= v92)
      {
        uint64_t v119 = &v82[16 * v84];
        uint64_t v121 = *(void *)v119;
        char v120 = *((void *)v119 + 1);
        uint64_t v95 = __OFSUB__(v120, v121);
        double v122 = v120 - v121;
        if (v95) {
          goto LABEL_165;
        }
        uint64_t v112 = v87 < v122;
        goto LABEL_120;
      }
    }

    else
    {
      if (v4 != 3)
      {
        uint64_t v113 = *((void *)v13 + 4);
        uint64_t v114 = *((void *)v13 + 5);
        uint64_t v95 = __OFSUB__(v114, v113);
        uint64_t v106 = v114 - v113;
        uint64_t v107 = v95;
        goto LABEL_114;
      }

      uint64_t v86 = *((void *)v13 + 4);
      unsigned __int8 v85 = *((void *)v13 + 5);
      uint64_t v95 = __OFSUB__(v85, v86);
      id v87 = v85 - v86;
      uint64_t v88 = v95;
    }

    if ((v88 & 1) != 0) {
      goto LABEL_157;
    }
    unint64_t v96 = v4 - 2;
    char v102 = &v82[16 * v4 - 32];
    uint64_t v104 = *(void *)v102;
    id v103 = *((void *)v102 + 1);
    uint64_t v105 = __OFSUB__(v103, v104);
    uint64_t v106 = v103 - v104;
    uint64_t v107 = v105;
    if (v105) {
      goto LABEL_160;
    }
    uint64_t v108 = &v82[16 * v84];
    uint64_t v110 = *(void *)v108;
    uint64_t v109 = *((void *)v108 + 1);
    uint64_t v95 = __OFSUB__(v109, v110);
    uint64_t v111 = v109 - v110;
    if (v95) {
      goto LABEL_163;
    }
    if (__OFADD__(v106, v111)) {
      goto LABEL_164;
    }
    if (v106 + v111 >= v87)
    {
      uint64_t v112 = v87 < v111;
LABEL_120:
      if (v112) {
        uint64_t v84 = v96;
      }
      goto LABEL_122;
    }

          uint64_t v2 = sub_10018CA1C(0LL, v2[2] + 1LL, 1, (uint64_t)v2);
          goto LABEL_40;
        }
      }
    }
  }

  uint64_t v28 = swift_bridgeObjectRelease((const char *)a2, v7).n128_u64[0];
  uint64_t v3 = _swiftEmptyArrayStorage;
  uint64_t v2 = _swiftEmptyArrayStorage;
LABEL_38:
LABEL_52:
  swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage, *(double *)&v28);
  return v2;
}

    (*(void (**)(char *, char *))(v239 + 8))(v240, v263);
    goto LABEL_67;
  }

  uint64_t v239 = v42;
  uint64_t v89 = *(void (**)(char *, uint64_t))(v42 + 96);
  uint64_t v263 = (char *)v41;
  v89(v45, v41);
  swift_bridgeObjectRelease(*(const char **)v45);
  uint64_t v90 = (uint64_t)v259;
  SFAirDropReceive.Transfer.id.getter(v91);
  uint64_t v92 = v272;
  swift_beginAccess(v272 + 48, v274, 32LL, 0LL);
  uint64_t v93 = *(void *)(v92 + 48);
  uint64_t v94 = v264;
  if (!*(void *)(v93 + 16) || (uint64_t v95 = sub_1003AD580(v90), (v96 & 1) == 0))
  {
    swift_endAccess(v274);
    (*((void (**)(uint64_t, uint64_t))v269 + 1))(v90, v270);
    goto LABEL_55;
  }

  uint64_t v262 = (void (*)(void, void, void, void, __n128))(v92 + 48);
  uint64_t v97 = v247;
  sub_100396EBC(*(void *)(v93 + 56) + v267[2].info * v95, v247);
  uint64_t v98 = v250;
  sub_1001A4B40(v97, v250, type metadata accessor for SDAirDropLegacySessionLogger.Transfer);
  swift_endAccess(v274);
  unint64_t v261 = *((void *)v269 + 1);
  ((void (*)(uint64_t, uint64_t))v261)(v90, v270);
  uint64_t v99 = v98 + v268[7];
  uint64_t v100 = v249;
  sub_1001915A4(v99, v249, &qword_1006457E8);
  uint64_t v101 = v260;
  char v102 = (*((uint64_t (**)(uint64_t, uint64_t, void *))v94 + 6))(v100, 1LL, v260);
  id v103 = sub_100187100(v100, &qword_1006457E8);
  if (v102 != 1)
  {
    (*(void (**)(char *, char *))(v239 + 8))(v240, v263);
LABEL_66:
    sub_100396F00(v98);
    goto LABEL_67;
  }

  uint64_t v269 = v59;
  uint64_t v104 = v245;
  Date.init()(v103);
  sub_100187100(v99, &qword_1006457E8);
  (*((void (**)(uint64_t, char *, void *))v94 + 2))(v99, v104, v101);
  (*((void (**)(uint64_t, void, uint64_t, void *))v94 + 7))(v99, 0LL, 1LL, v101);
  uint64_t v105 = Date.timeIntervalSince(_:)(v98);
  uint64_t v106 = v268[5];
  uint64_t v107 = (double)*(uint64_t *)(v98 + v106);
  uint64_t v108 = v107 / v105;
  uint64_t v109 = String._bridgeToObjectiveC()();
  uint64_t v110 = String._bridgeToObjectiveC()();
  uint64_t v111 = [*(id *)(v92 + 16) discoverableLevel];
  *(void *)&uint64_t v112 = swift_beginAccess(v92 + 32, v274, 0LL, 0LL).n128_u64[0];
  uint64_t v113 = *(const char **)(v92 + 32);
  uint64_t v114 = swift_bridgeObjectRetain(v113, v112);
  uint64_t v115 = sub_100392670(v114);
  *(void *)&uint64_t v116 = swift_bridgeObjectRelease(v113).n128_u64[0];
  uint64_t v117 = *(void *)(v115 + 16);
  if (v117)
  {
    uint64_t v118 = 0LL;
    uint64_t v119 = v117 - 1;
    char v120 = 1;
    while (1)
    {
      while ((v120 & 1) == 0)
      {
        if (v119 == v118)
        {
          swift_bridgeObjectRelease((const char *)v115, v116);
          goto LABEL_61;
        }

        char v120 = 0;
        ++v118;
      }

      char v120 = *(_BYTE *)(v115 + v118 + 32);
      if (v119 == v118) {
        break;
      }
      ++v118;
    }

    swift_bridgeObjectRelease((const char *)v115, v116);
    if ((v120 & 1) != 0) {
      goto LABEL_59;
    }
LABEL_61:
    uint64_t v211 = 0LL;
  }

  else
  {
    swift_bridgeObjectRelease((const char *)v115, v116);
LABEL_59:
    uint64_t v211 = 1LL;
  }

  unint64_t v212 = (const char *)sub_1003913F0((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v213 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v212);
  sub_10002EAC4(v109, v110, 0LL, (uint64_t)v111, v211, v213, v108, v107);

  uint64_t v214 = *(void *)(v98 + v268[6]);
  double v59 = v269;
  if (v214 > 0x7FFFFFFF)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }

  sub_10002F1DC(0LL, v214);
  uint64_t v215 = (uint64_t)v265;
  uint64_t v217 = SFAirDropReceive.Transfer.id.getter(v216);
  uint64_t v218 = v254;
  SFAirDrop.TransferIdentifier.id.getter(v217);
  ((void (*)(uint64_t, uint64_t))v261)(v215, v270);
  uint64_t v219 = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v255 + 8))(v218, v256);
  uint64_t v98 = v250;
  sub_10002FB54((uint64_t)@"Receive", (uint64_t)@"Stop", v219, 0LL, (double)*(uint64_t *)(v250 + v106));

  SFAirDropReceive.Transfer.id.getter(v220);
  uint64_t v221 = v266;
  sub_100396EBC(v98, v266);
  ((void (*)(uint64_t, void, uint64_t, int *))v267[1].length)(v221, 0LL, 1LL, v268);
  swift_beginAccess(v262, v273, 33LL, 0LL);
  sub_1002E5568(v221, v215);
  swift_endAccess(v273);
  (*((void (**)(char *, void *))v264 + 1))(v245, v260);
  (*(void (**)(char *, char *))(v239 + 8))(v240, v263);
  uint64_t v222 = *(void *)(v272 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_transfersCompleted);
  uint64_t v209 = __OFADD__(v222, 1LL);
  unint64_t v223 = v222 + 1;
  if (!v209)
  {
    *(void *)(v272 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_transfersCompleted) = v223;
    goto LABEL_66;
  }

            __break(1u);
            goto LABEL_56;
          }

uint64_t sub_100269720()
{
  uint64_t v1 = *(void **)(v0 + 328);
  uint64_t v2 = *(void **)(v0 + 312);
  uint64_t v3 = *(void **)(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v8 = *(void *)(v0 + 224);
  uint64_t v7 = *(void *)(v0 + 232);
  uint64_t v10 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 216);
  uint64_t v12 = *(void *)(v0 + 208);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v10);
  swift_task_dealloc(v6);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002697E4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    uint64_t v5 = sub_100183098(&qword_100645710);
    uint64_t v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0LL, 0LL);
    *uint64_t v7 = a3;
    id v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }

  else
  {
    if (a2) {
      uint64_t v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( a2,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    }
    else {
      uint64_t v10 = 0LL;
    }
    uint64_t v11 = v10;
    sub_1001870BC((uint64_t)&v11, *(void *)(*(void *)(v3 + 64) + 40LL), &qword_10064A470);
    return swift_continuation_throwingResume(v3);
  }

void sub_1002698B8(uint64_t a1, void *a2, const char *a3)
{
  uint64_t v104 = a3;
  uint64_t v113 = type metadata accessor for URL(0LL);
  uint64_t v5 = *(void *)(v113 - 8);
  uint64_t v6 = __chkstk_darwin(v113);
  uint64_t v110 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v114 = (char *)&v91 - v8;
  uint64_t v9 = sub_100183098(&qword_10064A450);
  uint64_t v99 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v97 = v10;
  uint64_t v98 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100183098((uint64_t *)&unk_100645130);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  int64_t v16 = (char *)&v91 - v15;
  uint64_t v17 = objc_opt_self(&OBJC_CLASS___LSApplicationRecord);
  uint64_t v18 = swift_dynamicCastObjCClass(a2, v17);
  uint64_t v109 = v5;
  if (v18)
  {
    uint64_t v19 = (void *)v18;
    uint64_t v20 = v16;
    id v21 = a2;
    id v22 = [v19 applicationState];
    unsigned int v23 = [v22 isInstalled];

    if (v23)
    {
      id v24 = [v19 applicationState];
      unsigned int v25 = [v24 isRestricted];

      int v26 = v25 ^ 1;
    }

    else
    {

      int v26 = 0;
    }

    uint64_t v5 = v109;
    int64_t v16 = v20;
  }

  else
  {
    int v26 = 1;
  }

  id v27 = [a2 bundleIdentifier];
  if (!v27)
  {
LABEL_25:
    id v74 = [(id)objc_opt_self(LSApplicationWorkspace) defaultWorkspace];
    if (v74)
    {
      uint64_t v75 = v74;
      if (*((void *)v104 + 2))
      {
        uint64_t v76 = v113;
        (*(void (**)(char *, const char *, uint64_t))(v5 + 16))( v14,  &v104[(*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)],  v113);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0LL, 1LL, v76);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1LL, v76) == 1)
        {
          uint64_t v78 = 0LL;
        }

        else
        {
          URL._bridgeToObjectiveC()(v77);
          uint64_t v78 = v79;
          (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v76);
        }
      }

      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, 1LL, 1LL, v113);
        uint64_t v78 = 0LL;
      }

      id v80 = [a2 bundleIdentifier];
      [v75 _LSFailedToOpenURL:v78 withBundle:v80];

      LOBYTE(aBlock[0]) = 1;
      CheckedContinuation.resume(returning:)(aBlock, v9);
    }

    else
    {
LABEL_37:
      __break(1u);
    }

    return;
  }

  uint64_t v28 = v27;
  uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  if (!v26)
  {
    swift_bridgeObjectRelease(v29);

    goto LABEL_25;
  }

  id v112 = v28;
  uint64_t v101 = v29;
  uint64_t v91 = v9;
  uint64_t v92 = a1;
  id v102 = [objc_allocWithZone(NSOperationQueue) init];
  id v108 = [(id)objc_opt_self(LSApplicationWorkspace) defaultWorkspace];
  uint64_t v30 = *((void *)v104 + 2);
  if (v30)
  {
    uint64_t v31 = &v104[(*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)];
    uint64_t v106 = *(void *)(v5 + 72);
    uint64_t v111 = *(void (**)(char *, const char *, uint64_t))(v5 + 16);
    uint64_t v105 = &v117;
    uint64_t v107 = LSMoveDocumentOnOpenKey;
    uint64_t v94 = &v116;
    __n128 v32 = swift_bridgeObjectRetain(v104);
    id v103 = (char *)&type metadata for Any + 8;
    v32.n128_u64[0] = 136315394LL;
    __n128 v93 = v32;
    uint64_t v33 = v113;
    while (1)
    {
      v111(v16, v31, v33);
      uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v36)(v16, 0LL, 1LL, v33);
      uint64_t v37 = v16;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v114, v16, v33);
      uint64_t v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v107);
      uint64_t v118 = v38;
      sub_100183168(0LL, &qword_10064A458, &OBJC_CLASS___NSNumber_ptr);
      Class isa = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
      sub_100183098(&qword_10064A460);
      uint64_t v39 = (void *)static _DictionaryStorage.allocate(capacity:)(1LL);
      uint64_t v40 = v117;
      uint64_t v41 = v118;
      Class v42 = isa;
      swift_bridgeObjectRetain(v118);
      uint64_t v43 = v42;
      unint64_t v44 = sub_1003AD53C(v40, (uint64_t)v41);
      if ((v45 & 1) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }

      v39[(v44 >> 6) + 8] |= 1LL << v44;
      uint64_t v46 = (uint64_t *)(v39[6] + 16 * v44);
      *uint64_t v46 = v40;
      v46[1] = (uint64_t)v41;
      *(void *)(v39[7] + 8 * v44) = v43;
      uint64_t v47 = v39[2];
      BOOL v48 = __OFADD__(v47, 1LL);
      uint64_t v49 = v47 + 1;
      if (v48) {
        goto LABEL_36;
      }
      _OWORD v39[2] = v49;
      uint64_t v50 = sub_100183098(&qword_10064A468);
      swift_arrayDestroy(v105, 1LL, v50);
      if (v108)
      {
        id v51 = v108;
        URL._bridgeToObjectiveC()(v52);
        uint64_t v54 = v53;
        uint64_t v55 = (const char *)sub_10026719C((uint64_t)v39);
        swift_release(v39);
        Class v56 = Dictionary._bridgeToObjectiveC()().super.isa;
        *(void *)&double v57 = swift_bridgeObjectRelease(v55).n128_u64[0];
        id v58 =  objc_msgSend( v51,  "operationToOpenResource:usingApplication:uniqueDocumentIdentifier:isContentManaged:sourceAuditToken:us erInfo:options:delegate:",  v54,  v112,  0,  0,  0,  v56,  v57,  0,  0);

        double v59 = v110;
        uint64_t v33 = v113;
        if (v58)
        {
          if (qword_100644068 != -1) {
            swift_once(&qword_100644068, sub_1002678E4);
          }
          uint64_t v60 = type metadata accessor for Logger(0LL);
          sub_100186DE4(v60, (uint64_t)qword_10064A340);
          v111(v59, v114, v33);
          id v61 = v101;
          uint64_t v62 = swift_bridgeObjectRetain_n(v101, 2LL);
          uint64_t v63 = (os_log_s *)Logger.logObject.getter(v62);
          os_log_type_t v64 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v63, v64))
          {
            uint64_t v65 = swift_slowAlloc(22LL, -1LL);
            uint64_t v96 = swift_slowAlloc(64LL, -1LL);
            aBlock[0] = v96;
            *(_DWORD *)uint64_t v65 = v93.n128_u32[0];
            os_log_t v95 = v63;
            swift_bridgeObjectRetain(v61);
            uint64_t v115 = sub_10018CDB4(v100, (unint64_t)v61, aBlock);
            unsigned __int8 v66 = v94;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, v94, v65 + 4, v65 + 12);
            swift_bridgeObjectRelease_n(v61, 3LL);
            *(_WORD *)(v65 + 12) = 2080;
            uint64_t v67 = sub_100183F14( (unint64_t *)&qword_100645408,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
            uint64_t v68 = dispatch thunk of CustomStringConvertible.description.getter(v113, v67);
            uint64_t v70 = (const char *)v69;
            uint64_t v115 = sub_10018CDB4(v68, v69, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, v66, v65 + 14, v65 + 22);
            __n128 v71 = swift_bridgeObjectRelease(v70);
            (*(void (**)(char *, uint64_t, __n128))(v109 + 8))(v110, v113, v71);
            uint64_t v63 = v95;
            _os_log_impl( (void *)&_mh_execute_header,  v95,  v64,  "Enqueuing resource open operation for %s, with URL: %s",  (uint8_t *)v65,  0x16u);
            uint64_t v72 = v96;
            swift_arrayDestroy(v96, 2LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v72, -1LL, -1LL);
            uint64_t v73 = v65;
            uint64_t v33 = v113;
            swift_slowDealloc(v73, -1LL, -1LL);
          }

          else
          {
            swift_bridgeObjectRelease_n(v61, 2LL);
            (*(void (**)(char *, uint64_t))(v109 + 8))(v59, v33);
          }

          [v102 addOperation:v58];
          uint64_t v5 = v109;
        }
      }

      else
      {
        swift_release(v39);
        uint64_t v33 = v113;
      }

      uint64_t v34 = (void *)objc_opt_self(&OBJC_CLASS___SDAirDropHandler);
      [v34 logReceiverBundleID:v112 forURL:0];
      (*(void (**)(char *, uint64_t))(v5 + 8))(v114, v33);
      v31 += v106;
      --v30;
      int64_t v16 = v37;
      if (!v30) {
        goto LABEL_33;
      }
    }
  }

  else
  {
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
    __n128 v35 = swift_bridgeObjectRetain(v104);
    uint64_t v33 = v113;
LABEL_33:
    v36(v16, 1LL, 1LL, v33, v35);
  }

  __n128 v81 = swift_bridgeObjectRelease(v104);
  uint64_t v82 = v99;
  double v83 = v98;
  uint64_t v84 = v91;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v99 + 16))(v98, v92, v91, v81);
  uint64_t v85 = *(unsigned __int8 *)(v82 + 80);
  uint64_t v86 = (v85 + 32) & ~v85;
  uint64_t v87 = swift_allocObject(&unk_1005D6BE8, v86 + v97, v85 | 7);
  uint64_t v88 = v101;
  *(void *)(v87 + swift_unknownObjectWeakDestroy(v0 + 16) = v100;
  *(void *)(v87 + 24) = v88;
  (*(void (**)(uint64_t, char *, uint64_t))(v82 + 32))(v87 + v86, v83, v84);
  aBlock[4] = (uint64_t)sub_10026DD30;
  uint64_t v121 = v87;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = (uint64_t)sub_1001B9FE4;
  aBlock[3] = (uint64_t)&unk_1005D6C00;
  uint64_t v89 = _Block_copy(aBlock);
  swift_release(v121);
  id v90 = v102;
  [v102 addBarrierBlock:v89];
  _Block_release(v89);
}

uint64_t sub_10026A2E0(uint64_t a1, const char *a2)
{
  if (qword_100644068 != -1) {
    swift_once(&qword_100644068, sub_1002678E4);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v4, (uint64_t)qword_10064A340);
  uint64_t v5 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = swift_slowAlloc(32LL, -1LL);
    uint64_t v13 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain(a2);
    uint64_t v12 = sub_10018CDB4(a1, (unint64_t)a2, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Resource open operation completed for %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
  }

  LOBYTE(v13) = 1;
  uint64_t v10 = sub_100183098(&qword_10064A450);
  return CheckedContinuation.resume(returning:)(&v13, v10);
}

uint64_t sub_10026A4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[16] = a2;
  v3[17] = a3;
  uint64_t v4 = type metadata accessor for URL.DirectoryHint(0LL);
  v3[18] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[19] = v5;
  v3[20] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098((uint64_t *)&unk_100645130);
  v3[21] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for URL(0LL);
  v3[22] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[23] = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[24] = swift_task_alloc(v9);
  v3[25] = swift_task_alloc(v9);
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v3[26] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v3[27] = v11;
  v3[28] = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v3[29] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v3[30] = v13;
  v3[31] = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for SFPlatform(0LL);
  v3[32] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v3[33] = v15;
  v3[34] = swift_task_alloc((*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  v3[35] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v3[36] = v17;
  v3[37] = swift_task_alloc((*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  v3[38] = v18;
  v3[39] = swift_task_alloc((*(void *)(*(void *)(v18 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for DispatchQoS(0LL);
  v3[40] = swift_task_alloc((*(void *)(*(void *)(v19 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10026A6A8, static AirDropActor.shared, 0LL);
}

uint64_t sub_10026A6A8()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[39];
  uint64_t v2 = v0[40];
  uint64_t v5 = v0[37];
  uint64_t v4 = v0[38];
  uint64_t v6 = v0[34];
  uint64_t v89 = v0[36];
  uint64_t v90 = v0[35];
  uint64_t v91 = v0[33];
  uint64_t v93 = v0[32];
  uint64_t v99 = v0[29];
  uint64_t v102 = v0[31];
  uint64_t v95 = v0[16];
  uint64_t v97 = v0[30];
  uint64_t v88 = v0 + 16;
  sub_100183168(0LL, (unint64_t *)&qword_100650E50, &OBJC_CLASS___OS_dispatch_queue_ptr);
  static DispatchQoS.default.getter();
  v0[12] = _swiftEmptyArrayStorage;
  uint64_t v7 = sub_100183F14( (unint64_t *)&qword_100644420,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v8 = sub_100183098(&qword_100650E60);
  unint64_t v9 = v0 + 12;
  uint64_t v10 = sub_1001CD538( (unint64_t *)&qword_100644430,  &qword_100650E60,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 12, v8, v10, v4, v7);
  (*(void (**)(uint64_t, void, uint64_t))(v89 + 104))( v5,  enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:),  v90);
  uint64_t v11 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000021LL,  0x80000001005075B0LL,  v2,  v3,  v5,  0LL);
  static SFPlatform.macOS.getter(v11);
  LOBYTE(v4) = static SFPlatform.isPlatform(_:)(v6);
  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v6, v93);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 16))(v102, v95, v99);
  uint64_t v13 = v0[30];
  uint64_t v14 = v0[31];
  uint64_t v15 = v0[29];
  if ((v4 & 1) != 0)
  {
    uint64_t v16 = v0[27];
    uint64_t v17 = v1[28];
    uint64_t v18 = v1[26];
    uint64_t v19 = SFAirDropReceive.Transfer.state.getter(v12);
    char v20 = SFAirDropReceive.Transfer.State.completedSuccessfully.getter(v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
    if ((v20 & 1) == 0)
    {
      uint64_t v21 = static AirDropActor.shared;
      id v22 = v11;
      return swift_task_switch(sub_10019ADC4, v21, 0LL);
    }
  }

  else
  {
    (*(void (**)(void, void))(v13 + 8))(v0[31], v0[29]);
  }

  id v24 = v9 + 3;
  id v25 = sub_100115790();
  if (!v25)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v1[23] + 56LL))(v1[21], 1LL, 1LL, v1[22]);
    goto LABEL_14;
  }

  int v26 = v25;
  uint64_t v28 = v1[23];
  uint64_t v27 = v1[24];
  uint64_t v30 = v1[21];
  uint64_t v29 = v1[22];
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v25);

  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32);
  v31(v30, v27, v29);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v30, 0LL, 1LL, v29);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v30, 1LL, v29) == 1)
  {
LABEL_14:
    sub_100187100(v1[21], (uint64_t *)&unk_100645130);
    uint64_t v63 = type metadata accessor for SFAirDropReceive.Failure(0LL);
    uint64_t v64 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    uint64_t v65 = swift_allocError(v63, v64, 0LL, 0LL);
    uint64_t v67 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v63 - 8) + 104LL))( v66,  enum case for SFAirDropReceive.Failure.missingDownloadDirectory(_:),  v63);
    swift_willThrow(v67);
LABEL_15:
    if (qword_100644068 != -1) {
      swift_once(&qword_100644068, sub_1002678E4);
    }
    uint64_t v68 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v68, (uint64_t)qword_10064A340);
    swift_errorRetain(v65);
    uint64_t v69 = swift_errorRetain(v65);
    uint64_t v70 = (os_log_s *)Logger.logObject.getter(v69);
    os_log_type_t v71 = static os_log_type_t.error.getter(v70);
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = v9 + 2;
      uint64_t v73 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v101 = v24;
      id v74 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v73 = 138412290;
      swift_errorRetain(v65);
      uint64_t v75 = _swift_stdlib_bridgeErrorToNSError(v65);
      *uint64_t v72 = v75;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v72, v101, v73 + 4, v73 + 12);
      *id v74 = v75;
      swift_errorRelease(v65);
      swift_errorRelease(v65);
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "Remove URL failed with error %@", v73, 0xCu);
      uint64_t v76 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v74, 1LL, v76);
      swift_slowDealloc(v74, -1LL, -1LL);
      swift_slowDealloc(v73, -1LL, -1LL);

      swift_errorRelease(v65);
    }

    else
    {

      swift_errorRelease(v65);
      swift_errorRelease(v65);
      swift_errorRelease(v65);
    }

    goto LABEL_20;
  }

  uint64_t v100 = v9 + 3;
  id v103 = v11;
  __n128 v32 = v9 - 4;
  uint64_t v92 = v9 - 2;
  uint64_t v94 = v9 - 10;
  uint64_t v96 = v9 + 1;
  uint64_t v98 = v9;
  uint64_t v34 = v1[19];
  uint64_t v33 = v1[20];
  uint64_t v35 = v1[18];
  v31(v1[25], v1[21], v1[22]);
  v1[8] = 0xD000000000000011LL;
  v1[9] = 0x80000001005075E0LL;
  uint64_t v36 = enum case for URL.DirectoryHint.isDirectory(_:);
  uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 104);
  v37(v33, enum case for URL.DirectoryHint.isDirectory(_:), v35);
  unint64_t v38 = sub_1001CCE8C();
  URL.append<A>(path:directoryHint:)(v32, v33, &type metadata for String, v38);
  uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8);
  uint64_t v40 = v39(v33, v35);
  v1[10] = UUID.uuidString.getter(v40);
  v1[11] = v41;
  v37(v33, v36, v35);
  URL.append<A>(path:directoryHint:)(v92, v33, &type metadata for String, v38);
  v39(v33, v35);
  swift_bridgeObjectRelease((const char *)v1[11]);
  if (qword_100644068 != -1) {
    swift_once(&qword_100644068, sub_1002678E4);
  }
  uint64_t v42 = type metadata accessor for Logger(0LL);
  uint64_t v43 = sub_100186DE4(v42, (uint64_t)qword_10064A340);
  unint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
  os_log_type_t v45 = static os_log_type_t.default.getter();
  id v24 = v100;
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = v1[25];
    uint64_t v47 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v48 = swift_slowAlloc(32LL, -1LL);
    uint64_t v104 = v48;
    *(_DWORD *)uint64_t v47 = 136315138;
    __n128 v49 = swift_beginAccess(v46, v98 - 7, 0LL, 0LL);
    uint64_t v50 = URL.path.getter(v49);
    uint64_t v52 = (const char *)v51;
    v1[15] = sub_10018CDB4(v50, v51, &v104);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v100, v88, v47 + 4, v47 + 12);
    swift_bridgeObjectRelease(v52);
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "Cleaning up transfer folder %s", v47, 0xCu);
    swift_arrayDestroy(v48, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v48, -1LL, -1LL);
    swift_slowDealloc(v47, -1LL, -1LL);
  }

  uint64_t v53 = v1[25];
  id v54 = [(id)objc_opt_self(NSFileManager) defaultManager];
  swift_beginAccess(v53, v94, 0LL, 0LL);
  URL._bridgeToObjectiveC()(v55);
  double v57 = v56;
  v1[13] = 0LL;
  unsigned int v58 = [v54 removeItemAtURL:v56 error:v96];

  id v59 = (id)v1[13];
  uint64_t v60 = v1[25];
  uint64_t v62 = v1[22];
  uint64_t v61 = v1[23];
  uint64_t v11 = v103;
  if (!v58)
  {
    uint64_t v86 = v59;
    uint64_t v65 = _convertNSErrorToError(_:)(v59);

    swift_willThrow(v87);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
    unint64_t v9 = v98;
    goto LABEL_15;
  }

  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
LABEL_20:
  uint64_t v77 = v1[39];
  uint64_t v78 = v1[37];
  uint64_t v79 = v1[34];
  uint64_t v80 = v1[31];
  uint64_t v81 = v1[28];
  uint64_t v82 = v1[24];
  uint64_t v83 = v1[25];
  uint64_t v85 = v1[20];
  uint64_t v84 = v1[21];
  swift_task_dealloc(v1[40]);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v82);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  return ((uint64_t (*)(void))v1[1])();
}

__n128 Sequence<>.markAllRecent()(uint64_t a1, char *a2)
{
  uint64_t v4 = sub_100183098(&qword_10064A360);
  __chkstk_darwin(v4);
  uint64_t v78 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFSandboxTokenURLPair(0LL);
  uint64_t v76 = *(void *)(v6 - 8);
  uint64_t v77 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v70 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v69 = (char *)&v67 - v10;
  __chkstk_darwin(v9);
  uint64_t v68 = (char *)&v67 - v11;
  uint64_t v12 = sub_100183098((uint64_t *)&unk_100656480);
  __chkstk_darwin(v12);
  uint64_t v87 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for SFSecurityScopedURL(0LL);
  uint64_t v88 = *(void *)(v14 - 8);
  uint64_t v89 = v14;
  __chkstk_darwin(v14);
  uint64_t v73 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for URL(0LL);
  os_log_type_t v71 = *(void **)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v83 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v86 = (char *)&v67 - v20;
  __chkstk_darwin(v19);
  id v22 = (char *)&v67 - v21;
  uint64_t v23 = sub_100183098((uint64_t *)&unk_100645130);
  uint64_t v24 = __chkstk_darwin(v23);
  int v26 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v81 = *(void *)(a1 - 8);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v84 = a2;
  uint64_t v85 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL, a2);
  uint64_t v72 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v31 = (char *)&v67 - v30;
  uint64_t v32 = type metadata accessor for SFPlatform(0LL);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v67 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SFPlatform.macOS.getter(v34);
  LOBYTE(a2) = static SFPlatform.isPlatform(_:)(v36);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v32);
  if ((a2 & 1) != 0)
  {
    uint64_t v38 = v85;
    (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v28, v82, v85);
    uint64_t v39 = v84;
    dispatch thunk of Sequence.makeIterator()(v38);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness( v39,  v38,  AssociatedTypeWitness,  &protocol requirements base descriptor for Sequence,  &associated conformance descriptor for Sequence.Sequence.Iterator: IteratorProtocol);
    uint64_t v84 = v31;
    uint64_t v85 = AssociatedTypeWitness;
    uint64_t v82 = AssociatedConformanceWitness;
    dispatch thunk of IteratorProtocol.next()(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v41 = v71;
    uint64_t v81 = v71[6];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v81)(v26, 1LL, v16) == 1)
    {
      uint64_t v43 = _swiftEmptyArrayStorage;
    }

    else
    {
      uint64_t v79 = (void (*)(char *, char *, uint64_t))v41[4];
      uint64_t v43 = _swiftEmptyArrayStorage;
      *(void *)&__int128 v42 = 136315138LL;
      __int128 v75 = v42;
      id v74 = (char *)&type metadata for Any + 8;
      unint64_t v44 = v78;
      uint64_t v46 = v88;
      uint64_t v45 = v89;
      uint64_t v80 = v26;
      do
      {
        os_log_type_t v71 = v43;
        v79(v22, v26, v16);
        uint64_t v47 = v41;
        uint64_t v48 = v86;
        ((void (*)(char *, char *, uint64_t))v41[2])(v86, v22, v16);
        __n128 v49 = v87;
        SFSecurityScopedURL.init(_:readWrite:)(v48, 0LL);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v49, 0LL, 1LL, v45);
        uint64_t v50 = v73;
        (*(void (**)(void))(v46 + 32))();
        static SFSecurityScopedURL.consumeSandboxToken(item:)(v50);
        uint64_t v52 = v76;
        uint64_t v51 = v77;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v44, 0LL, 1LL, v77);
        uint64_t v53 = v68;
        uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
        v67(v68, v44, v51);
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v69, v53, v51);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v71);
        int v26 = v80;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          os_log_type_t v71 = (void *)sub_10018C2D4(0, v71[2] + 1LL, 1, (unint64_t)v71);
        }
        unint64_t v56 = v71[2];
        unint64_t v55 = v71[3];
        if (v56 >= v55 >> 1) {
          os_log_type_t v71 = (void *)sub_10018C2D4(v55 > 1, v56 + 1, 1, (unint64_t)v71);
        }
        double v57 = (char *)v71;
        v71[2] = v56 + 1;
        uint64_t v59 = v76;
        uint64_t v58 = v77;
        v67( &v57[((*(unsigned __int8 *)(v59 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))
             + *(void *)(v76 + 72) * v56],
          v69,
          v77);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v68, v58);
        uint64_t v41 = v47;
        uint64_t v43 = v57;
        ((void (*)(char *, uint64_t))v41[1])(v22, v16);
        uint64_t v46 = v88;
        uint64_t v45 = v89;
        (*(void (**)(char *, uint64_t))(v88 + 8))(v73, v89);
        dispatch thunk of IteratorProtocol.next()(v85, v82);
      }

      while (((unsigned int (*)(char *, uint64_t, uint64_t))v81)(v26, 1LL, v16) != 1);
    }

    (*(void (**)(char *, uint64_t))(v72 + 8))(v84, v85);
    uint64_t v60 = v43[2];
    if (v60)
    {
      uint64_t v61 = v76;
      uint64_t v62 = (char *)v43 + ((*(unsigned __int8 *)(v76 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
      uint64_t v63 = *(void *)(v76 + 72);
      uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
      swift_bridgeObjectRetain((const char *)v43);
      uint64_t v65 = v77;
      uint64_t v66 = v70;
      do
      {
        v64(v66, v62, v65);
        SFSandboxTokenURLPair.releaseSandboxExtension()();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v66, v65);
        v62 += v63;
        --v60;
      }

      while (v60);
      swift_bridgeObjectRelease_n(v43, 2LL);
    }

    else
    {
      return swift_bridgeObjectRelease((const char *)v43);
    }
  }

  return result;
}

uint64_t type metadata accessor for SDAirDropContentHandlerUtilities()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary32SDAirDropContentHandlerUtilities);
}

void sub_10026B84C(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for SFPlatform(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v70[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 16];
  uint64_t v7 = sub_100183098(&qword_10064A408);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = &v70[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 16];
  uint64_t v11 = SFAirDropReceive.AskRequest.files.getter(v8);
  unint64_t v12 = *(void *)(v11 + 16);
  swift_bridgeObjectRelease((const char *)v11);
  if (v12 != 1) {
    goto LABEL_7;
  }
  uint64_t v14 = SFAirDropReceive.AskRequest.files.getter(v13);
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  if (v15)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))( v10,  v14 + ((*(unsigned __int8 *)(v17 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)),  v16);
    uint64_t v18 = 0LL;
  }

  else
  {
    uint64_t v18 = 1LL;
  }

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v10, v18, 1LL, v16);
  swift_bridgeObjectRelease((const char *)v14);
  type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0LL);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1LL, v16);
  if ((_DWORD)v19 == 1)
  {
    sub_100187100((uint64_t)v10, &qword_10064A408);
LABEL_7:
    uint64_t v20 = sub_100183098((uint64_t *)&unk_100650440);
    uint64_t inited = swift_initStackObject(v20, v73);
    __int128 v69 = xmmword_1004CDCA0;
    *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(inited + sub_100195658(v0 + 32) = 0x5F434952454E4547LL;
    uint64_t v22 = inited + 32;
    *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0xEC000000454C4946LL;
    *(void *)(inited + 48) = v12;
    uint64_t v71 = 0x545F4E5245444F4DLL;
    unint64_t v72 = 0xEF524546534E4152LL;
    *(void *)&double v23 = swift_bridgeObjectRetain((const char *)0xEC000000454C4946LL).n128_u64[0];
    swift_bridgeObjectRetain((const char *)inited, v23);
    v24._uint64_t countAndFlagsBits = 95LL;
    v24._object = (void *)0xE100000000000000LL;
    String.append(_:)(v24);
    v25._uint64_t countAndFlagsBits = 0x5F434952454E4547LL;
    v25._object = (void *)0xEC000000454C4946LL;
    String.append(_:)(v25);
    swift_bridgeObjectRelease((const char *)0xEC000000454C4946LL);
    if (v12 > 1)
    {
      v26._uint64_t countAndFlagsBits = 0x4C4152554C505FLL;
      v26._object = (void *)0xE700000000000000LL;
      String.append(_:)(v26);
    }

    swift_bridgeObjectRelease((const char *)inited);
    if ((a2 & 1) != 0)
    {
      v27._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
      v27._object = (void *)0xEC00000044455A49LL;
      String.append(_:)(v27);
    }

    v28._uint64_t countAndFlagsBits = 0x545845545FLL;
    v28._object = (void *)0xE500000000000000LL;
    String.append(_:)(v28);
    uint64_t v29 = (const char *)v72;
    swift_setDeallocating(inited);
    uint64_t v30 = *(void *)(inited + 16);
    uint64_t v31 = sub_100183098(&qword_100646EA0);
    swift_arrayDestroy(v22, v30, v31);
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v29);
    id v34 = (id)SFLocalizedStringForKey(v32, v33);

    if (v34)
    {
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      uint64_t v37 = v36;

      uint64_t v38 = sub_100183098(&qword_1006483E0);
      uint64_t v39 = swift_allocObject(v38, 72LL, 7LL);
      *(_OWORD *)(v39 + swift_unknownObjectWeakDestroy(v0 + 16) = v69;
      *(void *)(v39 + 56) = &type metadata for Int;
      *(void *)(v39 + 64) = &protocol witness table for Int;
      *(void *)(v39 + sub_100195658(v0 + 32) = v12;
      uint64_t v40 = v35;
LABEL_20:
      static String.localizedStringWithFormat(_:_:)(v40, v37, v39);
      *(void *)&double v68 = swift_bridgeObjectRelease(v37).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v39, v68);
      return;
    }

    __break(1u);
    goto LABEL_22;
  }

  uint64_t v41 = SFAirDropReceive.AskRequest.ItemInfo.fileName.getter(v19);
  uint64_t v43 = v42;
  uint64_t v44 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v10, v16);
  static SFPlatform.macOS.getter(v44);
  char v45 = static SFPlatform.isPlatform(_:)(v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((v45 & 1) == 0)
  {
    NSString v46 = String._bridgeToObjectiveC()();
    id v47 = (id)SFTruncateAirDropFilenameForUI();

    if (v47)
    {
      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
      __n128 v49 = v48;
      swift_bridgeObjectRelease(v43);

      uint64_t v43 = v49;
    }
  }

  uint64_t v50 = sub_100183098((uint64_t *)&unk_100650440);
  uint64_t v51 = swift_initStackObject(v50, v70);
  *(void *)(v51 + sub_100195658(v0 + 32) = 0xD000000000000017LL;
  uint64_t v52 = v51 + 32;
  __int128 v69 = xmmword_1004CDCA0;
  *(_OWORD *)(v51 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
  *(void *)(v51 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0x8000000100507600LL;
  *(void *)(v51 + 48) = 1LL;
  uint64_t v71 = 0x545F4E5245444F4DLL;
  unint64_t v72 = 0xEF524546534E4152LL;
  *(void *)&double v53 = swift_bridgeObjectRetain((const char *)0x8000000100507600LL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)v51, v53);
  v54._uint64_t countAndFlagsBits = 95LL;
  v54._object = (void *)0xE100000000000000LL;
  String.append(_:)(v54);
  v55._uint64_t countAndFlagsBits = 0xD000000000000017LL;
  v55._object = (void *)0x8000000100507600LL;
  String.append(_:)(v55);
  *(void *)&double v56 = swift_bridgeObjectRelease((const char *)v51).n128_u64[0];
  swift_bridgeObjectRelease((const char *)0x8000000100507600LL, v56);
  if ((a2 & 1) != 0)
  {
    v57._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
    v57._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v57);
  }

  v58._uint64_t countAndFlagsBits = 0x545845545FLL;
  v58._object = (void *)0xE500000000000000LL;
  String.append(_:)(v58);
  uint64_t v59 = (const char *)v72;
  swift_setDeallocating(v51);
  uint64_t v60 = *(void *)(v51 + 16);
  uint64_t v61 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(v52, v60, v61);
  NSString v62 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v59);
  id v64 = (id)SFLocalizedStringForKey(v62, v63);

  if (v64)
  {
    uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
    uint64_t v37 = v66;

    uint64_t v67 = sub_100183098(&qword_1006483E0);
    uint64_t v39 = swift_allocObject(v67, 72LL, 7LL);
    *(_OWORD *)(v39 + swift_unknownObjectWeakDestroy(v0 + 16) = v69;
    *(void *)(v39 + 56) = &type metadata for String;
    *(void *)(v39 + 64) = sub_10021366C();
    *(void *)(v39 + sub_100195658(v0 + 32) = v41;
    *(void *)(v39 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v43;
    uint64_t v40 = v65;
    goto LABEL_20;
  }

void *sub_10026BDFC()
{
  uint64_t v0 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v121 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v132 = [objc_allocWithZone(NSMutableOrderedSet) init];
  uint64_t v4 = SFAirDropReceive.AskRequest.files.getter(v132);
  uint64_t v129 = *(void *)(v4 + 16);
  if (!v129)
  {
LABEL_64:
    swift_bridgeObjectRelease((const char *)v4);
    if (qword_100644068 != -1) {
      goto LABEL_75;
    }
    goto LABEL_65;
  }

  uint64_t v5 = (void *)objc_opt_self(&OBJC_CLASS___LSDocumentProxy);
  unint64_t v6 = 0LL;
  uint64_t v123 = 0LL;
  unint64_t v127 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  id v128 = v5;
  *(void *)&__int128 v7 = 138412290LL;
  __int128 v121 = v7;
  double v122 = (char *)&type metadata for Any + 8;
  uint64_t v125 = v1;
  uint64_t v126 = v0;
  uint64_t v124 = v4;
  while (v6 < *(void *)(v4 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, v127 + *(void *)(v1 + 72) * v6, v0);
    id v131 = [objc_allocWithZone(NSMutableOrderedSet) init];
    uint64_t v14 = SFAirDropReceive.AskRequest.ItemInfo.fileName.getter(v131);
    uint64_t v16 = v15;
    SFAirDropReceive.AskRequest.ItemInfo.fileType.getter(v14);
    uint64_t v18 = v17;
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
    NSString v20 = String._bridgeToObjectiveC()();
    *(void *)&double v21 = swift_bridgeObjectRelease(v18).n128_u64[0];
    id v22 = objc_msgSend(v128, "documentProxyForName:type:MIMEType:", v19, v20, 0, v21);

    SFAirDropReceive.AskRequest.ItemInfo.fileType.getter(v23);
    Swift::String v25 = v24;
    NSString v26 = String._bridgeToObjectiveC()();
    __n128 v27 = swift_bridgeObjectRelease(v25);
    LOBYTE(v25) = SFIsCoreType(v26, v27);

    id v130 = v22;
    uint64_t v134 = 0LL;
    id v29 = [v22 availableClaimBindingsForMode:1 error:&v134];
    id v30 = (id)v134;
    if (!v29)
    {
      id v47 = (id)v134;
      uint64_t v48 = _convertNSErrorToError(_:)(v30);

      swift_willThrow(v49);
      if (qword_100644068 != -1) {
        swift_once(&qword_100644068, sub_1002678E4);
      }
      uint64_t v123 = 0LL;
      uint64_t v50 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v50, (uint64_t)qword_10064A340);
      swift_errorRetain(v48);
      uint64_t v51 = swift_errorRetain(v48);
      uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
      os_log_type_t v53 = static os_log_type_t.error.getter(v52);
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = swift_slowAlloc(12LL, -1LL);
        Swift::String v55 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)uint64_t v54 = v121;
        swift_errorRetain(v48);
        uint64_t v56 = _swift_stdlib_bridgeErrorToNSError(v48);
        *(void *)(v54 + 4) = v56;
        *Swift::String v55 = v56;
        swift_errorRelease(v48);
        swift_errorRelease(v48);
        _os_log_impl( (void *)&_mh_execute_header,  v52,  v53,  "Failed to get airdrop available applications for opening: %@",  (uint8_t *)v54,  0xCu);
        uint64_t v57 = sub_100183098(&qword_1006454E0);
        swift_arrayDestroy(v55, 1LL, v57);
        swift_slowDealloc(v55, -1LL, -1LL);
        swift_slowDealloc(v54, -1LL, -1LL);

        swift_errorRelease(v48);
      }

      else
      {
        swift_errorRelease(v48);
        swift_errorRelease(v48);
        swift_errorRelease(v48);
      }

void sub_10026CA9C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v60 = a2;
  id v61 = a4;
  uint64_t v58 = a3;
  uint64_t v4 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v4);
  uint64_t v59 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for URL(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v56 - v11;
  uint64_t v13 = type metadata accessor for SFAirDrop.TransferType(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  SFAirDropSend.Request.type.getter(v15);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v17, v13);
  int v19 = enum case for SFAirDrop.TransferType.links(_:);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  NSString v20 = v61;
  if (v18 != v19) {
    goto LABEL_10;
  }
  uint64_t v57 = v10;
  double v21 = v12;
  id v22 = v61;
  uint64_t v23 = (uint64_t)v59;
  if (!*(void *)(v60 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v59, 1LL, 1LL, v6);
    goto LABEL_8;
  }

  uint64_t v24 = type metadata accessor for SFSecurityScopedURL(0LL);
  SFSecurityScopedURL.url.getter(v24);
  uint64_t v25 = v6;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v23, 0LL, 1LL, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v23, 1LL, v6) == 1)
  {
LABEL_8:
    sub_100187100(v23, (uint64_t *)&unk_100645130);
    goto LABEL_9;
  }

  uint64_t v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 32))(v12, v23, v6);
  URL.scheme.getter(v26);
  if (v27)
  {
    Swift::String v28 = v27;
    object = (const char *)String.lowercased()()._object;
    swift_bridgeObjectRelease(v28);
    NSString v30 = String._bridgeToObjectiveC()();
    __n128 v31 = swift_bridgeObjectRelease(object);
    char v32 = SFIsCredential(v30, v31);

    uint64_t v33 = v57;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v57, v12, v25);
    if ((v32 & 1) != 0)
    {
      uint64_t v35 = *(void (**)(char *, uint64_t))(v7 + 8);
      v35(v33, v25);
    }

    else
    {
      URL._bridgeToObjectiveC()(v34);
      unint64_t v43 = v42;
      int v44 = SFIsPasskeyCredentialLink();

      uint64_t v35 = *(void (**)(char *, uint64_t))(v7 + 8);
      v35(v33, v25);
      if (!v44)
      {
LABEL_16:
        v35(v12, v25);
        goto LABEL_9;
      }
    }

    sub_10020F4E8();
    if ((v46 & 1) == 0)
    {
      URL._bridgeToObjectiveC()(v45);
      uint64_t v48 = v47;
      char v49 = SFIsPasskeyCredentialLink();

      _sSo11SFUserAlertC16DaemoniOSLibraryE015credentialShareB09isPasskeyABSb_tFZ_0(v49);
      uint64_t v51 = v50;
      [v50 present];
      uint64_t v52 = type metadata accessor for SFAirDropSend.Failure(0LL);
      uint64_t v53 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
      swift_allocError(v52, v53, 0LL, 0LL);
      uint64_t v55 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v52 - 8) + 104LL))( v54,  enum case for SFAirDropSend.Failure.badRequest(_:),  v52);
      swift_willThrow(v55);

      v35(v21, v25);
      return;
    }

    goto LABEL_16;
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_9:
  NSString v20 = v22;
LABEL_10:
  if ([v20 carplayConnected])
  {
    _sSo11SFUserAlertC16DaemoniOSLibraryE07carPlayB0AByFZ_0();
    uint64_t v37 = v36;
    [v36 present];
    uint64_t v38 = type metadata accessor for SFAirDropSend.Failure(0LL);
    uint64_t v39 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v38, v39, 0LL, 0LL);
    uint64_t v41 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v38 - 8) + 104LL))( v40,  enum case for SFAirDropSend.Failure.badRequest(_:),  v38);
    swift_willThrow(v41);
  }

void sub_10026CECC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10020F4E8();
  sub_10019140C(a1, (uint64_t)v5);
  uint64_t v6 = (char *)sub_10026CF94 + 4 * byte_1004D0840[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }

uint64_t sub_10026CF94()
{
  return 0LL;
}

uint64_t sub_10026D084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  void v6[9] = a6;
  v6[6] = a3;
  v6[7] = a4;
  void v6[4] = a1;
  v6[5] = a2;
  uint64_t v7 = type metadata accessor for SFSecurityScopedURL(0LL);
  v6[10] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[11] = v8;
  v6[12] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for URL(0LL);
  void v6[13] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[14] = v10;
  v6[15] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10026D144, static AirDropActor.shared, 0LL);
}

uint64_t sub_10026D144()
{
  uint64_t v1 = *(void *)(v0 + 40);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = (char *)_swiftEmptyArrayStorage;
  if (!v2)
  {
LABEL_30:
    uint64_t v57 = *(void *)(v0 + 96);
    swift_task_dealloc(*(void *)(v0 + 120));
    swift_task_dealloc(v57);
    return (*(uint64_t (**)(char *))(v0 + 8))(v3);
  }

  uint64_t v58 = (int64_t *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 88);
  id v61 = _swiftEmptyArrayStorage;
  sub_10018D718(0, v2, 0);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v60 = *(void *)(v5 + 72);
  uint64_t v7 = v5;
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  int64_t v59 = v2;
  uint64_t v10 = v0;
  do
  {
    uint64_t v11 = *(void *)(v10 + 96);
    uint64_t v0 = v10;
    uint64_t v12 = *(void *)(v10 + 80);
    uint64_t v13 = v8(v11, v6, v12);
    SFSecurityScopedURL.url.getter(v13);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v12);
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
    {
      sub_10018D718(0, v9[2] + 1LL, 1);
      uint64_t v9 = v61;
    }

    unint64_t v15 = v9[2];
    unint64_t v14 = v9[3];
    if (v15 >= v14 >> 1)
    {
      sub_10018D718(v14 > 1, v15 + 1, 1);
      uint64_t v9 = v61;
    }

    uint64_t v16 = *(void *)(v10 + 120);
    uint64_t v17 = *(void *)(v10 + 104);
    v9[2] = v15 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))( (unint64_t)v9 + ((*(unsigned __int8 *)(v4 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
    + *(void *)(v4 + 72) * v15,
      v16,
      v17);
    id v61 = v9;
    v6 += v60;
    --v2;
  }

  while (v2);
  uint64_t v18 = v10 + 32;
  sub_10026CA9C(*(void *)(v10 + 32), *(void *)(v10 + 40), *(void *)(v10 + 64), *(void **)(v10 + 72));
  uint64_t v19 = *(void *)(v10 + 56);
  sub_10026CECC(*(void *)(v10 + 64));
  double v21 = v20;
  unsigned int v23 = v22;
  uint64_t v24 = (const char *)sub_1002DDFF4((uint64_t)v9);
  swift_release(v9);
  v25.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v24);
  if (!v19)
  {
    NSString v26 = 0LL;
    if (v21) {
      goto LABEL_10;
    }
LABEL_12:
    NSString v27 = 0LL;
    goto LABEL_13;
  }

  NSString v26 = String._bridgeToObjectiveC()();
  if (!v21) {
    goto LABEL_12;
  }
LABEL_10:
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
LABEL_13:
  id v28 =  [(id)objc_opt_self(SDAirDropLegacyHelper) preprocessItems:v25.super.isa forClientBundleID:v26 receiverIdentifier:v27 receiverSupportsURLs:v23 & 1 receiverIsUnknown:(v23 >> 8) & 1];

  if ([v28 success])
  {
    id v29 = [v28 files];
    if (v29)
    {
      NSString v30 = v29;
      __n128 v31 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, *(void *)(v0 + 104));

      id v32 = [v28 links];
      if (v32)
      {
        uint64_t v33 = v32;
        id v34 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, *(void *)(v0 + 104));

        sub_10028A9C0((uint64_t)v31);
        *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v34;
        uint64_t v35 = sub_100183098((uint64_t *)&unk_1006464E0);
        uint64_t v36 = sub_1001CD538( (unint64_t *)&qword_1006476C0,  (uint64_t *)&unk_1006464E0,  (uint64_t)&protocol conformance descriptor for [A]);
        uint64_t v3 = (char *)RandomAccessCollection<>.securityScopedURLs.getter(v35, v36);
        *(void *)&double v37 = swift_bridgeObjectRelease(v34).n128_u64[0];
        if (*((void *)v3 + 2))
        {
        }

        else
        {
          swift_bridgeObjectRelease(v3, v37);
          if (qword_100644068 != -1) {
            swift_once(&qword_100644068, sub_1002678E4);
          }
          char v49 = *(const char **)(v0 + 40);
          uint64_t v50 = type metadata accessor for Logger(0LL);
          sub_100186DE4(v50, (uint64_t)qword_10064A340);
          swift_bridgeObjectRetain(v49);
          uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
          os_log_type_t v53 = static os_log_type_t.error.getter(v52);
          BOOL v54 = os_log_type_enabled(v52, v53);
          uint64_t v55 = *(const char **)(v0 + 40);
          if (v54)
          {
            uint64_t v56 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            *(_DWORD *)uint64_t v56 = 134217984;
            *uint64_t v58 = v59;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v58, v18, v56 + 4, v56 + 12);
            swift_bridgeObjectRelease(v55);
            _os_log_impl( (void *)&_mh_execute_header,  v52,  v53,  "Preprocessing URLs returned no items, although we were given %ld URLs. Falling back to initial URLs",  v56,  0xCu);
            swift_slowDealloc(v56, -1LL, -1LL);
          }

          else
          {
            swift_bridgeObjectRelease(*(const char **)(v0 + 40));
          }

          uint64_t v3 = *(char **)(v0 + 40);
          swift_bridgeObjectRetain(v3);
        }

        goto LABEL_30;
      }

      swift_bridgeObjectRelease(v31);
    }
  }

  if (qword_100644068 != -1) {
    swift_once(&qword_100644068, sub_1002678E4);
  }
  uint64_t v38 = type metadata accessor for Logger(0LL);
  uint64_t v39 = sub_100186DE4(v38, (uint64_t)qword_10064A340);
  uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
  os_log_type_t v41 = static os_log_type_t.error.getter(v40);
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Failed to preprocess items", v42, 2u);
    swift_slowDealloc(v42, -1LL, -1LL);
  }

  uint64_t v43 = type metadata accessor for SFAirDropSend.Failure(0LL);
  uint64_t v44 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  swift_allocError(v43, v44, 0LL, 0LL);
  uint64_t v46 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v43 - 8) + 104LL))( v45,  enum case for SFAirDropSend.Failure.badRequest(_:),  v43);
  swift_willThrow(v46);

  uint64_t v47 = *(void *)(v0 + 96);
  swift_task_dealloc(*(void *)(v0 + 120));
  swift_task_dealloc(v47);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10026D764(uint64_t a1, double a2)
{
  uint64_t v4 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = type metadata accessor for SFPlatform(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  char v16 = a2 < 8.0;
  static SFPlatform.macOS.getter(v13);
  char v17 = static SFPlatform.isPlatform(_:)(v15);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  if ((v17 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a1, v4);
    if (a2 >= 8.0)
    {
      (*(void (**)(char *, void, uint64_t))(v5 + 104))( v8,  enum case for SFAirDropReceive.ItemDestination.default(_:),  v4);
      uint64_t v18 = sub_100183F14( &qword_100646840,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v18);
      NSString v20 = *(void (**)(char *, uint64_t))(v5 + 8);
      v20(v8, v4);
      v20(v10, v4);
      char v16 = v19 ^ 1;
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      char v16 = 1;
    }
  }

  return v16 & 1;
}

uint64_t sub_10026D918()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10026D93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (void *)swift_task_alloc(dword_10064A414);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_100195708;
  return sub_100267B48(a1, a2, a3, v8);
}

uint64_t sub_10026D9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098((uint64_t *)&unk_100645130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10026D9F4()
{
  uint64_t v1 = *(void *)(sub_100183098((uint64_t *)&unk_100645130) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for URL(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = v6 + 8;
  swift_bridgeObjectRelease(*(const char **)(v0 + v6));
  return swift_deallocObject(v0, v7);
}

uint64_t sub_10026DAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(sub_100183098((uint64_t *)&unk_100645130) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v3 + v9;
  uint64_t v11 = *(void *)(v3 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8LL));
  uint64_t v12 = (void *)swift_task_alloc(dword_10064A424);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v12;
  *uint64_t v12 = v4;
  v12[1] = sub_100195708;
  return sub_100267E7C(a1, a2, a3, v10, v11);
}

uint64_t sub_10026DB54()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10026DB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v10 = (void *)swift_task_alloc(dword_10064A434);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v10;
  void *v10 = v4;
  v10[1] = sub_100195708;
  return sub_100268114(a1, a2, a3, v9, v8);
}

uint64_t sub_10026DBFC()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_10026DC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 16);
  char v9 = *(_BYTE *)(v3 + 24);
  uint64_t v10 = *(void *)(v3 + 32);
  uint64_t v11 = (void *)swift_task_alloc(dword_10064A444);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v11;
  void *v11 = v4;
  v11[1] = sub_1001943E8;
  return sub_100267BF0(a1, a2, a3, v8, v9, v10);
}

void sub_10026DCB0(uint64_t a1)
{
}

uint64_t sub_10026DCB8()
{
  uint64_t v1 = sub_100183098(&qword_10064A450);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  __n128 v5 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 24));
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_10026DD30()
{
  return sub_10026A2E0(*(void *)(v0 + 16), *(const char **)(v0 + 24));
}

uint64_t sub_10026DD64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + sub_100195658(v0 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10026DD74(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10026DD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10026DDC0()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064A498);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064A498);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_10026DE50(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v2[8] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  void v2[9] = v4;
  v2[10] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  v2[11] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[12] = v6;
  v2[13] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_10064A598);
  v2[14] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[15] = v8;
  v2[16] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v2[17] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v2[18] = v10;
  v2[19] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v11 = static AirDropActor.shared;
  v2[20] = static AirDropActor.shared;
  return swift_task_switch(sub_10026DF60, v11, 0LL);
}

uint64_t sub_10026DF60(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 144);
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v4 = *(void *)(v1 + 136);
  uint64_t v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  char v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) != 0)
  {
    uint64_t v8 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v7);
    uint64_t v9 = sub_10018D21C((uint64_t)v8);
    swift_bridgeObjectRelease(v8);
    *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
    uint64_t v10 = swift_allocObject(&unk_1005D6CC8, 24LL, 7LL);
    *(void *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
    uint64_t v11 = sub_100183098(&qword_10064A5B0);
    SFProgressTask.init(_:initialProgress:operation:file:line:)( 0xD000000000000016LL,  0x80000001005077B0LL,  v1 + 16,  &unk_10064A5A8,  v10,  0xD00000000000006ALL,  0x80000001005077D0LL,  56LL,  &type metadata for Double,  v11);
    uint64_t v12 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(void *)(v1 + 168) = v12;
    *uint64_t v12 = v1;
    v12[1] = sub_10026E0F8;
    return SFProgressTask.finalValue.getter(v1 + 24, *(void *)(v1 + 112));
  }

  else
  {
    uint64_t v14 = *(void *)(v1 + 128);
    uint64_t v15 = *(void *)(v1 + 104);
    uint64_t v16 = *(void *)(v1 + 80);
    swift_task_dealloc(*(void *)(v1 + 152));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v1 + 8))(0LL);
  }

uint64_t sub_10026E0F8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 168);
  uint64_t v5 = *(void *)(*v1 + 120);
  uint64_t v4 = *(void *)(*v1 + 128);
  uint64_t v6 = *(void *)(*v1 + 112);
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0) {
    __n128 v7 = sub_10026E208;
  }
  else {
    __n128 v7 = sub_10026E184;
  }
  return swift_task_switch(v7, *(void *)(v2 + 160), 0LL);
}

uint64_t sub_10026E184()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void **)(v1 + 16);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v0 + 24);

  BOOL v3 = *(void *)(*(void *)(v0 + 56) + 16LL) != 0LL;
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 80);
  swift_task_dealloc(*(void *)(v0 + 152));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(BOOL))(v0 + 8))(v3);
}

uint64_t sub_10026E208()
{
  if (qword_100644078 != -1) {
    swift_once(&qword_100644078, sub_10026DDC0);
  }
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v6, (uint64_t)qword_10064A498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v5);
  swift_errorRetain(v2);
  uint64_t v7 = swift_errorRetain(v2);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.error.getter(v8);
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = *(void *)(v0 + 176);
  uint64_t v12 = *(void *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 104);
  uint64_t v14 = *(void *)(v0 + 88);
  if (v10)
  {
    uint64_t v15 = *(void *)(v0 + 80);
    uint64_t v30 = *(void *)(v0 + 72);
    os_log_type_t type = v9;
    uint64_t v16 = *(void *)(v0 + 64);
    uint64_t v31 = *(void *)(v0 + 88);
    uint64_t v17 = swift_slowAlloc(22LL, -1LL);
    uint64_t v33 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    uint64_t v35 = swift_slowAlloc(32LL, -1LL);
    uint64_t v36 = v35;
    *(_DWORD *)uint64_t v17 = 136315394;
    os_log_t log = v8;
    SFAirDropReceive.AskRequest.id.getter(v35);
    uint64_t v18 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter(v16, v18);
    double v21 = v20;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v15, v16);
    *(void *)(v0 + sub_100195658(v0 + 32) = sub_10018CDB4(v19, (unint64_t)v21, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v17 + 4, v17 + 12);
    __n128 v22 = swift_bridgeObjectRelease(v21);
    (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v13, v31, v22);
    *(_WORD *)(v17 + 12) = 2112;
    swift_errorRetain(v11);
    uint64_t v23 = _swift_stdlib_bridgeErrorToNSError(v11);
    *(void *)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v17 + 14, v17 + 22);
    *uint64_t v33 = v23;
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl( (void *)&_mh_execute_header,  log,  type,  "Failed to get handling app for ask request %s: %@",  (uint8_t *)v17,  0x16u);
    uint64_t v24 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v33, 1LL, v24);
    swift_slowDealloc(v33, -1LL, -1LL);
    swift_arrayDestroy(v35, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1LL, -1LL);
    swift_slowDealloc(v17, -1LL, -1LL);

    swift_errorRelease(v11);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 176));
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }

  BOOL v25 = *(void *)(*(void *)(v0 + 56) + 16LL) != 0LL;
  uint64_t v26 = *(void *)(v0 + 128);
  uint64_t v27 = *(void *)(v0 + 104);
  uint64_t v28 = *(void *)(v0 + 80);
  swift_task_dealloc(*(void *)(v0 + 152));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(BOOL))(v0 + 8))(v25);
}

void sub_10026E554(__n128 a1, uint64_t a2, char a3)
{
  uint64_t v5 = SFAirDropReceive.AskRequest.urlItems.getter(a1);
  unint64_t v6 = *(void *)(v5 + 16);
  *(void *)&double v7 = swift_bridgeObjectRelease((const char *)v5).n128_u64[0];
  uint64_t v8 = *(void **)(v3 + 16);
  if (v8)
  {
    id v9 = objc_msgSend(v8, "localizedName", v7);
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    unint64_t v12 = v11;
  }

  else
  {
    uint64_t v10 = 0LL;
    unint64_t v12 = 0xE000000000000000LL;
  }

  uint64_t v13 = sub_100183098((uint64_t *)&unk_100650440);
  uint64_t inited = swift_initStackObject(v13, v33);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
  *(void *)(inited + sub_100195658(v0 + 32) = 0x5F434952454E4547LL;
  uint64_t v15 = inited + 32;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0xEC0000004B4E494CLL;
  *(void *)(inited + 48) = v6;
  *(void *)&double v16 = swift_bridgeObjectRetain((const char *)0xEC0000004B4E494CLL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v16);
  v17._uint64_t countAndFlagsBits = 95LL;
  v17._object = (void *)0xE100000000000000LL;
  String.append(_:)(v17);
  v18._uint64_t countAndFlagsBits = 0x5F434952454E4547LL;
  v18._object = (void *)0xEC0000004B4E494CLL;
  String.append(_:)(v18);
  swift_bridgeObjectRelease((const char *)0xEC0000004B4E494CLL);
  if (v6 > 1)
  {
    v19._uint64_t countAndFlagsBits = 0x4C4152554C505FLL;
    v19._object = (void *)0xE700000000000000LL;
    String.append(_:)(v19);
  }

  swift_bridgeObjectRelease((const char *)inited);
  if ((a3 & 1) != 0)
  {
    v20._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
    v20._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v20);
  }

  v21._uint64_t countAndFlagsBits = 0x545845545FLL;
  v21._object = (void *)0xE500000000000000LL;
  String.append(_:)(v21);
  swift_setDeallocating(inited);
  uint64_t v22 = *(void *)(inited + 16);
  uint64_t v23 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(v15, v22, v23);
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL);
  id v26 = (id)SFLocalizedStringForKey(v24, v25);

  if (v26)
  {
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    id v29 = v28;

    uint64_t v30 = sub_100183098(&qword_1006483E0);
    uint64_t v31 = swift_allocObject(v30, 112LL, 7LL);
    *(_OWORD *)(v31 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CD530;
    *(void *)(v31 + 56) = &type metadata for Int;
    *(void *)(v31 + 64) = &protocol witness table for Int;
    *(void *)(v31 + sub_100195658(v0 + 32) = v6;
    *(void *)(v31 + 96) = &type metadata for String;
    *(void *)(v31 + 104) = sub_10021366C();
    *(void *)(v31 + 72) = v10;
    *(void *)(v31 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v12;
    static String.localizedStringWithFormat(_:_:)(v27, v29, v31);
    *(void *)&double v32 = swift_bridgeObjectRelease(v29).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v31, v32);
  }

  else
  {
    __break(1u);
  }

uint64_t sub_10026E818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a3;
  void v4[19] = a4;
  _BYTE v4[16] = a1;
  v4[17] = a2;
  uint64_t v5 = sub_100183098(&qword_1006494C8);
  v4[20] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[21] = v6;
  v4[22] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v7 = (*(void *)(*(void *)(sub_100183098((uint64_t *)&unk_100645130) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[23] = swift_task_alloc(v7);
  v4[24] = swift_task_alloc(v7);
  v4[25] = swift_task_alloc(v7);
  void v4[26] = swift_task_alloc(v7);
  uint64_t v8 = type metadata accessor for URL(0LL);
  v4[27] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[28] = v9;
  unint64_t v10 = (*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[29] = swift_task_alloc(v10);
  v4[30] = swift_task_alloc(v10);
  v4[31] = swift_task_alloc(v10);
  unint64_t v11 = (*(void *)(*(void *)(sub_100183098(&qword_1006494D0) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[32] = swift_task_alloc(v11);
  v4[33] = swift_task_alloc(v11);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v12 = static AirDropActor.shared;
  v4[34] = static AirDropActor.shared;
  return swift_task_switch(sub_10026E978, v12, 0LL);
}

void sub_10026E978()
{
  uint64_t v1 = *(void *)(v0 + 152);
  unint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v2;
  __n128 v3 = swift_bridgeObjectRetain((const char *)v1);
  uint64_t v4 = 0LL;
  uint64_t v5 = 0LL;
  unint64_t v6 = 0LL;
  while (1)
  {
    *(void *)(v0 + 288) = v4;
    if (v6 == v2)
    {
      uint64_t v98 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v0 + 224) + 56LL);
      ((void (*)(void, uint64_t, uint64_t, void, __n128))v98)( *(void *)(v0 + 208),  1LL,  1LL,  *(void *)(v0 + 216),  v3);
      unint64_t v7 = *(void *)(v0 + 280);
LABEL_6:
      uint64_t v11 = *(void *)(v0 + 256);
      uint64_t v13 = *(void *)(v0 + 160);
      uint64_t v12 = *(void *)(v0 + 168);
      sub_100187100(*(void *)(v0 + 208), (uint64_t *)&unk_100645130);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v11, 1LL, 1LL, v13);
      goto LABEL_9;
    }

    if (v6 >= v2) {
      goto LABEL_47;
    }
    uint64_t v8 = *(void *)(v0 + 216);
    uint64_t v9 = *(void *)(v0 + 224);
    uint64_t v10 = *(void *)(v0 + 208);
    (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v9 + 16))( v10,  *(void *)(v0 + 152)
    + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
    + *(void *)(v9 + 72) * v6,
      v8,
      v3);
    unint64_t v7 = v6 + 1;
    uint64_t v98 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56);
    v98(v10, 0LL, 1LL, v8);
    uint64_t v14 = *(void *)(v0 + 248);
    uint64_t v15 = *(void *)(v0 + 216);
    uint64_t v16 = *(void *)(v0 + 176);
    uint64_t v17 = *(void *)(v0 + 160);
    Swift::String v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 224) + 32LL);
    v18(v14, *(void *)(v0 + 208), v15);
    uint64_t v19 = v16 + *(int *)(v17 + 48);
    v18(v19, v14, v15);
    if (__OFADD__(v5, 1LL)) {
      goto LABEL_48;
    }
    Swift::String v20 = *(void **)(v0 + 256);
    uint64_t v21 = *(void *)(v0 + 216);
    uint64_t v22 = v4;
    uint64_t v23 = *(void *)(v0 + 160);
    uint64_t v24 = *(void *)(v0 + 168);
    uint64_t v25 = (char *)v20 + *(int *)(v23 + 48);
    *Swift::String v20 = v5;
    v18((uint64_t)v25, v19, v21);
    id v26 = *(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56);
    uint64_t v4 = v22;
    v26(v20, 0LL, 1LL, v23);
    ++v5;
LABEL_9:
    *(void *)(v0 + 296) = v5;
    *(void *)(v0 + 304) = v7;
    uint64_t v27 = *(void *)(v0 + 264);
    uint64_t v29 = *(void *)(v0 + 160);
    uint64_t v28 = *(void *)(v0 + 168);
    sub_1001870BC(*(void *)(v0 + 256), v27, &qword_1006494D0);
    int v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v27, 1LL, v29);
    uint64_t v31 = *(char **)(v0 + 264);
    if (v30 == 1)
    {
      uint64_t v82 = *(void *)(v0 + 248);
      uint64_t v81 = *(void *)(v0 + 256);
      uint64_t v84 = *(void *)(v0 + 232);
      uint64_t v83 = *(void *)(v0 + 240);
      uint64_t v86 = *(void *)(v0 + 200);
      uint64_t v85 = *(void *)(v0 + 208);
      uint64_t v96 = *(void *)(v0 + 192);
      uint64_t v97 = *(void *)(v0 + 184);
      uint64_t v99 = *(void *)(v0 + 176);
      uint64_t v87 = v4;
      Class v88 = *(void **)(v0 + 128);
      swift_bridgeObjectRelease(*(const char **)(v0 + 152));
      *Class v88 = v87;
      swift_task_dealloc(v31);
      swift_task_dealloc(v81);
      swift_task_dealloc(v82);
      swift_task_dealloc(v83);
      swift_task_dealloc(v84);
      swift_task_dealloc(v85);
      swift_task_dealloc(v86);
      swift_task_dealloc(v96);
      swift_task_dealloc(v97);
      swift_task_dealloc(v99);
      (*(void (**)(void))(v0 + 8))();
      return;
    }

    uint64_t v32 = *(void *)(v0 + 240);
    uint64_t v33 = *(void *)(v0 + 216);
    uint64_t v34 = *(void *)(v0 + 224);
    uint64_t v35 = *(void *)(v0 + 160);
    *(void *)(v0 + 312) = *(void *)v31;
    uint64_t v36 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v32, &v31[*(int *)(v35 + 48)], v33);
    URL.scheme.getter(v36);
    if (v37)
    {
      uint64_t v38 = v37;
      Swift::String v39 = String.lowercased()();
      *(void *)&double v40 = swift_bridgeObjectRelease(v38).n128_u64[0];
      if (v39._countAndFlagsBits == 1886680168 && v39._object == (void *)0xE400000000000000LL)
      {
        swift_bridgeObjectRelease((const char *)0xE400000000000000LL, v40);
LABEL_44:
        uint64_t v89 = v0 + 16;
        uint64_t v90 = (void *)objc_opt_self(&OBJC_CLASS___LSAppLink);
        URL._bridgeToObjectiveC()(v91);
        uint64_t v93 = v92;
        *(void *)(v0 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v92;
        *(void *)(v0 + 56) = v0 + 120;
        *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v0;
        *(void *)(v0 + 24) = sub_10026F084;
        uint64_t v94 = swift_continuation_init(v0 + 16, 1LL);
        *(void *)(v0 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = _NSConcreteStackBlock;
        double v95 = (void *)(v0 + 80);
        v95[1] = 0x40000000LL;
        v95[2] = sub_100270204;
        v95[3] = &unk_1005D6CE0;
        v95[4] = v94;
        [v90 getAppLinksWithURL:v93 completionHandler:v95];
        swift_continuation_await(v89);
        return;
      }

      if ((_stringCompareWithSmolCheck(_:_:expecting:)( v39._countAndFlagsBits,  v39._object,  1886680168LL,  0xE400000000000000LL,  0LL) & 1) != 0)
      {
        swift_bridgeObjectRelease((const char *)v39._object, v41);
        goto LABEL_44;
      }

      if (v39._countAndFlagsBits == 0x7370747468LL && v39._object == (void *)0xE500000000000000LL)
      {
        swift_bridgeObjectRelease((const char *)0xE500000000000000LL, v41);
        goto LABEL_44;
      }

      char v42 = _stringCompareWithSmolCheck(_:_:expecting:)( v39._countAndFlagsBits,  v39._object,  0x7370747468LL,  0xE500000000000000LL,  0LL);
      swift_bridgeObjectRelease((const char *)v39._object);
      if ((v42 & 1) != 0) {
        goto LABEL_44;
      }
    }

    uint64_t v43 = (void *)objc_opt_self(&OBJC_CLASS___LSApplicationWorkspace);
    id v44 = [v43 defaultWorkspace];
    if (!v44) {
      goto LABEL_49;
    }
    uint64_t v46 = v44;
    URL._bridgeToObjectiveC()(v45);
    uint64_t v48 = v47;
    id v49 = [v46 URLOverrideForURL:v47];

    if (v49)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v49);

      uint64_t v50 = 0LL;
    }

    else
    {
      uint64_t v50 = 1LL;
    }

    uint64_t v52 = *(void *)(v0 + 192);
    uint64_t v51 = *(void *)(v0 + 200);
    v98(v52, v50, 1LL, *(void *)(v0 + 216));
    sub_1001870BC(v52, v51, (uint64_t *)&unk_100645130);
    id v53 = [v43 defaultWorkspace];
    if (!v53) {
      goto LABEL_50;
    }
    BOOL v54 = v53;
    uint64_t v56 = *(void *)(v0 + 216);
    uint64_t v55 = *(void *)(v0 + 224);
    uint64_t v57 = *(void *)(v0 + 184);
    sub_10026D9AC(*(void *)(v0 + 200), v57);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v57, 1LL, v56) == 1)
    {
      int64_t v59 = 0LL;
    }

    else
    {
      uint64_t v61 = *(void *)(v0 + 216);
      uint64_t v60 = *(void *)(v0 + 224);
      uint64_t v62 = *(void *)(v0 + 184);
      URL._bridgeToObjectiveC()(v58);
      int64_t v59 = v63;
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v62, v61);
    }

    id v64 = [v54 applicationsAvailableForOpeningURL:v59];

    if (!v64) {
      goto LABEL_51;
    }
    uint64_t v65 = sub_100183168(0LL, &qword_100645410, &OBJC_CLASS___LSApplicationProxy_ptr);
    uint64_t v66 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v64, v65);

    if ((unint64_t)v66 >> 62)
    {
      if (v66 < 0) {
        uint64_t v71 = v66;
      }
      else {
        uint64_t v71 = v66 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain((const char *)v66);
      uint64_t v72 = _CocoaArrayWrapper.endIndex.getter(v71);
      swift_bridgeObjectRelease((const char *)v66);
      if (!v72)
      {
LABEL_36:
        uint64_t v73 = *(void *)(v0 + 200);
        swift_bridgeObjectRelease((const char *)v66);
        sub_100187100(v73, (uint64_t *)&unk_100645130);

        uint64_t v4 = 0LL;
        goto LABEL_37;
      }
    }

    else if (!*(void *)((v66 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      goto LABEL_36;
    }

    if ((v66 & 0xC000000000000001LL) != 0)
    {
      id v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v66);
    }

    else
    {
      if (!*(void *)((v66 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
        goto LABEL_46;
      }
      id v67 = *(id *)(v66 + 32);
    }

    uint64_t v68 = v67;
    uint64_t v69 = *(void *)(v0 + 200);
    id v70 =  objc_msgSend( v67,  "correspondingApplicationRecord",  swift_bridgeObjectRelease((const char *)v66).n128_f64[0]);

    sub_100187100(v69, (uint64_t *)&unk_100645130);
    uint64_t v4 = v70;
LABEL_37:
    uint64_t v74 = *(void *)(v0 + 312);
    BOOL v75 = __OFADD__(v74, 1LL);
    uint64_t v76 = v74 + 1;
    if (v75) {
      break;
    }
    uint64_t v77 = *(void *)(v0 + 240);
    uint64_t v79 = *(void *)(v0 + 216);
    uint64_t v78 = *(void *)(v0 + 224);
    unint64_t v80 = *(void (**)(double *))(v0 + 136);
    double v100 = (double)v76 / (double)(*(void *)(v0 + 280) + 1LL);
    v80(&v100);
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v79);
    uint64_t v5 = *(void *)(v0 + 296);
    unint64_t v6 = *(void *)(v0 + 304);
    unint64_t v2 = *(void *)(v0 + 280);
  }

  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:

  __break(1u);
LABEL_50:

  __break(1u);
LABEL_51:

  __break(1u);
}

uint64_t sub_10026F084()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 328) = v2;
  if (v2) {
    __n128 v3 = sub_10026F890;
  }
  else {
    __n128 v3 = sub_10026F0E4;
  }
  return swift_task_switch(v3, *(void *)(v1 + 272), 0LL);
}

void sub_10026F0E4()
{
  uint64_t v2 = *(void *)(v1 + 120);

  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0) {
      uint64_t v7 = v2;
    }
    else {
      uint64_t v7 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain((const char *)v2);
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease((const char *)v2);
    uint64_t v98 = v1 + 120;
    if (v8)
    {
LABEL_3:
      if ((v2 & 0xC000000000000001LL) == 0)
      {
        if (!*(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10))
        {
          __break(1u);
LABEL_61:

          __break(1u);
LABEL_62:

          __break(1u);
LABEL_63:

          __break(1u);
          return;
        }

        id v3 = *(id *)(v2 + 32);
LABEL_6:
        uint64_t v4 = v3;
        uint64_t v5 = *(void **)(v1 + 288);
        id v6 = objc_msgSend(v3, "targetApplicationRecord", swift_bridgeObjectRelease((const char *)v2).n128_f64[0]);

        goto LABEL_13;
      }

void sub_10026F890(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 320);
  uint64_t v3 = *(void *)(v1 + 328);
  swift_willThrow(a1);

  uint64_t v4 = (void *)_convertErrorToNSError(_:)(v3);
  id v5 = [v4 code];

  if (v5 != (id)-10814LL)
  {
    if (qword_100644078 != -1) {
      goto LABEL_57;
    }
    goto LABEL_4;
  }

  uint64_t v6 = *(void *)(v1 + 328);
LABEL_6:
  swift_errorRelease(v6);
  while (1)
  {
    uint64_t v30 = *(void *)(v1 + 312);
    BOOL v31 = __OFADD__(v30, 1LL);
    uint64_t v32 = v30 + 1;
    if (!v31) {
      break;
    }
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    swift_once(&qword_100644078, sub_10026DDC0);
LABEL_4:
    uint64_t v7 = *(void *)(v1 + 328);
    uint64_t v9 = *(void *)(v1 + 232);
    uint64_t v8 = *(void *)(v1 + 240);
    uint64_t v10 = *(void *)(v1 + 216);
    uint64_t v11 = *(void *)(v1 + 224);
    uint64_t v12 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v12, (uint64_t)qword_10064A498);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v8, v10);
    swift_errorRetain(v7);
    uint64_t v13 = swift_errorRetain(v7);
    uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.error.getter(v14);
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = *(void *)(v1 + 328);
    uint64_t v19 = *(void *)(v1 + 224);
    uint64_t v18 = *(void *)(v1 + 232);
    uint64_t v20 = *(void *)(v1 + 216);
    if (v16)
    {
      uint64_t v21 = swift_slowAlloc(22LL, -1LL);
      unint64_t v22 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      uint64_t v126 = swift_slowAlloc(32LL, -1LL);
      v129[0] = v126;
      *(_DWORD *)uint64_t v21 = 136315394;
      uint64_t v23 = sub_100183F14( (unint64_t *)&qword_100645408,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter(v20, v23);
      uint64_t v26 = (const char *)v25;
      *(void *)(v21 + 4) = sub_10018CDB4(v24, v25, v129);
      __n128 v27 = swift_bridgeObjectRelease(v26);
      (*(void (**)(uint64_t, uint64_t, __n128))(v19 + 8))(v18, v20, v27);
      *(_WORD *)(v21 + 12) = 2112;
      swift_errorRetain(v17);
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError(v17);
      *(void *)(v21 + 14) = v28;
      uint64_t *v22 = v28;
      swift_errorRelease(v17);
      swift_errorRelease(v17);
      _os_log_impl( (void *)&_mh_execute_header,  v14,  v15,  "Failed to generate app link for %s (%@)",  (uint8_t *)v21,  0x16u);
      uint64_t v29 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v22, 1LL, v29);
      swift_slowDealloc(v22, -1LL, -1LL);
      swift_arrayDestroy(v126, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v126, -1LL, -1LL);
      swift_slowDealloc(v21, -1LL, -1LL);

      uint64_t v6 = v17;
      goto LABEL_6;
    }

    swift_errorRelease(*(void *)(v1 + 328));
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    swift_errorRelease(v17);
    swift_errorRelease(v17);
  }

  uint64_t v33 = *(void **)(v1 + 288);
  while (1)
  {
    uint64_t v36 = *(void *)(v1 + 240);
    uint64_t v38 = *(void *)(v1 + 216);
    uint64_t v37 = *(void *)(v1 + 224);
    uint64_t v39 = *(void (**)(uint64_t *))(v1 + 136);
    *(double *)uint64_t v129 = (double)v32 / (double)(*(void *)(v1 + 280) + 1LL);
    v39(v129);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
    uint64_t v40 = *(void *)(v1 + 296);
    unint64_t v41 = *(void *)(v1 + 304);
    *(void *)(v1 + 288) = v33;
    unint64_t v42 = *(void *)(v1 + 280);
    if (v41 == v42)
    {
      unint64_t v127 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 224) + 56LL);
      v127(*(void *)(v1 + 208), 1LL, 1LL, *(void *)(v1 + 216));
      unint64_t v43 = *(void *)(v1 + 280);
LABEL_16:
      uint64_t v47 = *(void *)(v1 + 256);
      uint64_t v49 = *(void *)(v1 + 160);
      uint64_t v48 = *(void *)(v1 + 168);
      sub_100187100(*(void *)(v1 + 208), (uint64_t *)&unk_100645130);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v47, 1LL, 1LL, v49);
      goto LABEL_19;
    }

    if (v41 >= v42) {
      goto LABEL_55;
    }
    uint64_t v44 = *(void *)(v1 + 216);
    uint64_t v45 = *(void *)(v1 + 224);
    uint64_t v46 = *(void *)(v1 + 208);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v45 + 16))( v46,  *(void *)(v1 + 152)
    + ((*(unsigned __int8 *)(v45 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))
    + *(void *)(v45 + 72) * v41,
      v44);
    unint64_t v43 = v41 + 1;
    unint64_t v127 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56);
    v127(v46, 0LL, 1LL, v44);
    uint64_t v50 = *(void *)(v1 + 248);
    uint64_t v51 = *(void *)(v1 + 216);
    uint64_t v52 = *(void *)(v1 + 176);
    uint64_t v53 = *(void *)(v1 + 160);
    BOOL v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 224) + 32LL);
    v54(v50, *(void *)(v1 + 208), v51);
    uint64_t v55 = v52 + *(int *)(v53 + 48);
    v54(v55, v50, v51);
    if (__OFADD__(v40, 1LL)) {
      goto LABEL_56;
    }
    uint64_t v56 = *(void **)(v1 + 256);
    uint64_t v57 = *(void *)(v1 + 216);
    uint64_t v58 = v33;
    uint64_t v59 = *(void *)(v1 + 160);
    uint64_t v60 = *(void *)(v1 + 168);
    uint64_t v61 = (char *)v56 + *(int *)(v59 + 48);
    *uint64_t v56 = v40;
    v54((uint64_t)v61, v55, v57);
    uint64_t v62 = *(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56);
    uint64_t v33 = v58;
    v62(v56, 0LL, 1LL, v59);
    ++v40;
LABEL_19:
    *(void *)(v1 + 296) = v40;
    *(void *)(v1 + 304) = v43;
    uint64_t v63 = *(void *)(v1 + 264);
    uint64_t v65 = *(void *)(v1 + 160);
    uint64_t v64 = *(void *)(v1 + 168);
    sub_1001870BC(*(void *)(v1 + 256), v63, &qword_1006494D0);
    int v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v63, 1LL, v65);
    uint64_t v67 = *(char **)(v1 + 264);
    if (v66 == 1)
    {
      uint64_t v110 = *(void *)(v1 + 248);
      uint64_t v109 = *(void *)(v1 + 256);
      uint64_t v112 = *(void *)(v1 + 232);
      uint64_t v111 = *(void *)(v1 + 240);
      uint64_t v114 = *(void *)(v1 + 200);
      uint64_t v113 = *(void *)(v1 + 208);
      uint64_t v124 = *(void *)(v1 + 192);
      uint64_t v125 = *(void *)(v1 + 184);
      uint64_t v128 = *(void *)(v1 + 176);
      double v115 = v33;
      id v116 = *(void **)(v1 + 128);
      swift_bridgeObjectRelease(*(const char **)(v1 + 152));
      *id v116 = v115;
      swift_task_dealloc(v67);
      swift_task_dealloc(v109);
      swift_task_dealloc(v110);
      swift_task_dealloc(v111);
      swift_task_dealloc(v112);
      swift_task_dealloc(v113);
      swift_task_dealloc(v114);
      swift_task_dealloc(v124);
      swift_task_dealloc(v125);
      swift_task_dealloc(v128);
      (*(void (**)(void))(v1 + 8))();
      return;
    }

    uint64_t v68 = *(void *)(v1 + 240);
    uint64_t v69 = *(void *)(v1 + 216);
    uint64_t v70 = *(void *)(v1 + 224);
    uint64_t v71 = *(void *)(v1 + 160);
    *(void *)(v1 + 312) = *(void *)v67;
    uint64_t v72 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v70 + 32))(v68, &v67[*(int *)(v71 + 48)], v69);
    URL.scheme.getter(v72);
    if (v73)
    {
      uint64_t v74 = v73;
      Swift::String v75 = String.lowercased()();
      *(void *)&double v76 = swift_bridgeObjectRelease(v74).n128_u64[0];
      if (v75._countAndFlagsBits == 1886680168 && v75._object == (void *)0xE400000000000000LL)
      {
        swift_bridgeObjectRelease((const char *)0xE400000000000000LL, v76);
LABEL_52:
        uint64_t v117 = v1 + 16;
        uint64_t v118 = (void *)objc_opt_self(&OBJC_CLASS___LSAppLink);
        URL._bridgeToObjectiveC()(v119);
        uint64_t v121 = v120;
        *(void *)(v1 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v120;
        *(void *)(v1 + 56) = v1 + 120;
        *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
        *(void *)(v1 + 24) = sub_10026F084;
        uint64_t v122 = swift_continuation_init(v1 + 16, 1LL);
        *(void *)(v1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = _NSConcreteStackBlock;
        uint64_t v123 = (void *)(v1 + 80);
        v123[1] = 0x40000000LL;
        v123[2] = sub_100270204;
        v123[3] = &unk_1005D6CE0;
        v123[4] = v122;
        [v118 getAppLinksWithURL:v121 completionHandler:v123];
        swift_continuation_await(v117);
        return;
      }

      if ((_stringCompareWithSmolCheck(_:_:expecting:)( v75._countAndFlagsBits,  v75._object,  1886680168LL,  0xE400000000000000LL,  0LL) & 1) != 0)
      {
        swift_bridgeObjectRelease((const char *)v75._object, v77);
        goto LABEL_52;
      }

      if (v75._countAndFlagsBits == 0x7370747468LL && v75._object == (void *)0xE500000000000000LL)
      {
        swift_bridgeObjectRelease((const char *)0xE500000000000000LL, v77);
        goto LABEL_52;
      }

      char v78 = _stringCompareWithSmolCheck(_:_:expecting:)( v75._countAndFlagsBits,  v75._object,  0x7370747468LL,  0xE500000000000000LL,  0LL);
      swift_bridgeObjectRelease((const char *)v75._object);
      if ((v78 & 1) != 0) {
        goto LABEL_52;
      }
    }

    uint64_t v79 = (void *)objc_opt_self(&OBJC_CLASS___LSApplicationWorkspace);
    id v80 = [v79 defaultWorkspace];
    if (!v80) {
      break;
    }
    uint64_t v82 = v80;
    URL._bridgeToObjectiveC()(v81);
    uint64_t v84 = v83;
    id v85 = [v82 URLOverrideForURL:v83];

    if (v85)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v85);

      uint64_t v86 = 0LL;
    }

    else
    {
      uint64_t v86 = 1LL;
    }

    uint64_t v88 = *(void *)(v1 + 192);
    uint64_t v87 = *(void *)(v1 + 200);
    v127(v88, v86, 1LL, *(void *)(v1 + 216));
    sub_1001870BC(v88, v87, (uint64_t *)&unk_100645130);
    id v89 = [v79 defaultWorkspace];
    if (!v89) {
      goto LABEL_59;
    }
    uint64_t v90 = v89;
    uint64_t v92 = *(void *)(v1 + 216);
    uint64_t v91 = *(void *)(v1 + 224);
    uint64_t v93 = *(void *)(v1 + 184);
    sub_10026D9AC(*(void *)(v1 + 200), v93);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v93, 1LL, v92) == 1)
    {
      uint64_t v95 = 0LL;
    }

    else
    {
      uint64_t v97 = *(void *)(v1 + 216);
      uint64_t v96 = *(void *)(v1 + 224);
      uint64_t v98 = *(void *)(v1 + 184);
      URL._bridgeToObjectiveC()(v94);
      uint64_t v95 = v99;
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v98, v97);
    }

    id v100 = [v90 applicationsAvailableForOpeningURL:v95];

    if (!v100) {
      goto LABEL_60;
    }
    uint64_t v101 = sub_100183168(0LL, &qword_100645410, &OBJC_CLASS___LSApplicationProxy_ptr);
    uint64_t v102 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v100, v101);

    if ((unint64_t)v102 >> 62)
    {
      if (v102 < 0) {
        uint64_t v107 = v102;
      }
      else {
        uint64_t v107 = v102 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain((const char *)v102);
      uint64_t v108 = _CocoaArrayWrapper.endIndex.getter(v107);
      swift_bridgeObjectRelease((const char *)v102);
      if (!v108)
      {
LABEL_10:
        uint64_t v34 = *(void *)(v1 + 200);
        swift_bridgeObjectRelease((const char *)v102);
        sub_100187100(v34, (uint64_t *)&unk_100645130);

        uint64_t v33 = 0LL;
        goto LABEL_11;
      }
    }

    else if (!*(void *)((v102 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      goto LABEL_10;
    }

    if ((v102 & 0xC000000000000001LL) != 0)
    {
      id v103 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v102);
    }

    else
    {
      if (!*(void *)((v102 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
        goto LABEL_54;
      }
      id v103 = *(id *)(v102 + 32);
    }

    uint64_t v104 = v103;
    uint64_t v105 = *(void *)(v1 + 200);
    id v106 =  objc_msgSend( v103,  "correspondingApplicationRecord",  swift_bridgeObjectRelease((const char *)v102).n128_f64[0]);

    sub_100187100(v105, (uint64_t *)&unk_100645130);
    uint64_t v33 = v106;
LABEL_11:
    uint64_t v35 = *(void *)(v1 + 312);
    BOOL v31 = __OFADD__(v35, 1LL);
    uint64_t v32 = v35 + 1;
    if (v31) {
      goto LABEL_53;
    }
  }

  __break(1u);
LABEL_59:

  __break(1u);
LABEL_60:

  __break(1u);
}

uint64_t sub_100270204(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    uint64_t v5 = sub_100183098(&qword_100645710);
    uint64_t v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0LL, 0LL);
    *uint64_t v7 = a3;
    id v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }

  else
  {
    uint64_t v11 = sub_100183168(0LL, &qword_10064A5B8, &OBJC_CLASS___LSAppLink_ptr);
    **(void **)(*(void *)(v3 + 64) + 40LL) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v11);
    return swift_continuation_throwingResume(v3);
  }

uint64_t type metadata accessor for SDAirDropContentHandlerGenericLinks()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary35SDAirDropContentHandlerGenericLinks);
}

uint64_t sub_1002702CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerGenericLinks();
  uint64_t result = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *a1 = result;
  return result;
}

uint64_t sub_100270300(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_10064A4DC);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001C97A0;
  return sub_10026DE50(a1);
}

void sub_100270350(uint64_t a1, char a2, __n128 a3)
{
}

uint64_t sub_100270370()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100270394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (void *)swift_task_alloc(dword_10064A5A4);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1001943E8;
  return sub_10026E818(a1, a2, a3, v8);
}

uint64_t sub_100270404()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064A5C0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064A5C0);
  if (qword_100644028 != -1) {
    swift_once(&qword_100644028, sub_10023A59C);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

id sub_100270494()
{
  id v0 = objc_allocWithZone((Class)_s10LTKManagerCMa());
  id result = sub_1002704CC(0LL, 0LL);
  qword_100669758 = (uint64_t)result;
  return result;
}

id sub_1002704CC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for URL(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v82 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  id v89 = (char *)&v82 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v88 = (char *)&v82 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v87 = (char *)&v82 - v18;
  __chkstk_darwin(v17);
  uint64_t v86 = (char *)&v82 - v19;
  uint64_t v20 = OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_lockStateMonitor;
  uint64_t v21 = type metadata accessor for SFLockStateMonitor(0LL);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  uint64_t v90 = v2;
  *(void *)&v2[v20] = SFLockStateMonitor.init()();
  uint64_t v22 = IDSCopyLocalDeviceUniqueID();
  if (v22)
  {
    uint64_t v23 = (void *)v22;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    unint64_t v26 = v25;
  }

  else
  {
    unint64_t v26 = 0x8000000100507910LL;
    uint64_t v24 = 0xD000000000000014LL;
  }

  __n128 v27 = v90;
  uint64_t v28 = (uint64_t *)&v90[OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localDeviceID];
  *uint64_t v28 = v24;
  v28[1] = v26;
  if (a2)
  {
    uint64_t v91 = a1;
    unint64_t v92 = a2;
    swift_bridgeObjectRetain(a2);
    v29._uint64_t countAndFlagsBits = 0x6B746C6C2DLL;
    v29._object = (void *)0xE500000000000000LL;
    String.append(_:)(v29);
    unint64_t v30 = v92;
    BOOL v31 = (uint64_t *)&v27[OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKBasename];
    *BOOL v31 = v91;
    v31[1] = v30;
    uint64_t v91 = a1;
    unint64_t v92 = a2;
    v32._uint64_t countAndFlagsBits = 0x6C6E556F7475412DLL;
    v32._object = (void *)0xEB000000006B636FLL;
    String.append(_:)(v32);
    uint64_t v33 = v91;
    unint64_t v34 = v92;
  }

  else
  {
    uint64_t v35 = &v27[OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKBasename];
    *(void *)uint64_t v35 = 1802792044LL;
    *((void *)v35 + sub_10022D314(2, 1) = 0xE400000000000000LL;
    unint64_t v34 = 0xEA00000000006B63LL;
    uint64_t v33 = 0x6F6C6E556F747541LL;
  }

  id result = sub_100115468();
  if (!result) {
    goto LABEL_33;
  }
  uint64_t v37 = result;
  uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  uint64_t v40 = v39;

  URL.init(fileURLWithPath:)(v38, v40);
  __n128 v41 = swift_bridgeObjectRelease(v40);
  uint64_t v42 = (uint64_t)v87;
  URL.appendingPathComponent(_:isDirectory:)(v33, v34, 1LL, v41);
  __n128 v43 = swift_bridgeObjectRelease(v34);
  uint64_t v44 = (uint64_t)v88;
  URL.appendingPathComponent(_:isDirectory:)(65LL, 0xE100000000000000LL, 1LL, v43);
  uint64_t v45 = (uint64_t)v89;
  URL.appendingPathComponent(_:isDirectory:)(67LL, 0xE100000000000000LL, 1LL, v46);
  URL.appendingPathComponent(_:isDirectory:)(68LL, 0xE100000000000000LL, 1LL, v47);
  sub_100271B58(v42);
  sub_100271B58(v44);
  sub_100271B58(v45);
  sub_100271B58((uint64_t)v12);
  uint64_t v48 = sub_100183098(&qword_10064A620);
  uint64_t inited = swift_initStackObject(v48, v94);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CD550;
  *(_BYTE *)(inited + sub_100195658(v0 + 32) = 0;
  uint64_t v84 = v6;
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v50(v9, v44, v5);
  uint64_t v51 = _s13LTKCollectionCMa(0LL);
  swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10034879C(0, (uint64_t)v9);
  *(_BYTE *)(inited + 48) = 1;
  v50(v9, v45, v5);
  swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
  *(void *)(inited + 56) = sub_10034879C(1, (uint64_t)v9);
  *(_BYTE *)(inited + 64) = 2;
  uint64_t v83 = v12;
  uint64_t v85 = v5;
  v50(v9, (uint64_t)v12, v5);
  swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
  *(void *)(inited + 72) = sub_10034879C(2, (uint64_t)v9);
  unint64_t v52 = sub_100397048(inited);
  swift_setDeallocating(inited);
  uint64_t v53 = sub_100183098(&qword_10064A628);
  swift_arrayDestroy(inited + 32, 3LL, v53);
  unint64_t v54 = v52 + 64;
  uint64_t v55 = 1LL << *(_BYTE *)(v52 + 32);
  uint64_t v56 = -1LL;
  if (v55 < 64) {
    uint64_t v56 = ~(-1LL << v55);
  }
  unint64_t v57 = v56 & *(void *)(v52 + 64);
  int64_t v58 = (unint64_t)(v55 + 63) >> 6;
  id result = (id)swift_bridgeObjectRetain(v52);
  int64_t v59 = 0LL;
  while (1)
  {
    if (v57)
    {
      unint64_t v60 = __clz(__rbit64(v57));
      v57 &= v57 - 1;
      unint64_t v61 = v60 | (v59 << 6);
      goto LABEL_12;
    }

    int64_t v71 = v59 + 1;
    if (__OFADD__(v59, 1LL))
    {
      __break(1u);
      goto LABEL_32;
    }

    if (v71 >= v58) {
      goto LABEL_30;
    }
    unint64_t v72 = *(void *)(v54 + 8 * v71);
    ++v59;
    if (!v72)
    {
      int64_t v59 = v71 + 1;
      if (v71 + 1 >= v58) {
        goto LABEL_30;
      }
      unint64_t v72 = *(void *)(v54 + 8 * v59);
      if (!v72)
      {
        int64_t v59 = v71 + 2;
        if (v71 + 2 >= v58) {
          goto LABEL_30;
        }
        unint64_t v72 = *(void *)(v54 + 8 * v59);
        if (!v72)
        {
          int64_t v59 = v71 + 3;
          if (v71 + 3 >= v58) {
            goto LABEL_30;
          }
          unint64_t v72 = *(void *)(v54 + 8 * v59);
          if (!v72) {
            break;
          }
        }
      }
    }

uint64_t sub_100270B84@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v29 = a5;
  uint64_t v8 = type metadata accessor for UTType(0LL);
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for URL.DirectoryHint(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for URL(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!*(void *)(a4 + 16)) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v29, 1LL, 1LL, v15);
  }
  unint64_t v19 = sub_1003AD6B0(a3);
  if ((v20 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v29, 1LL, 1LL, v15);
  }
  uint64_t v21 = *(void *)(*(void *)(a4 + 56) + 8 * v19);
  v30[0] = a1;
  v30[1] = v26;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))( v14,  enum case for URL.DirectoryHint.notDirectory(_:),  v11);
  unint64_t v22 = sub_1001CCE8C();
  swift_retain(v21);
  URL.appending<A>(path:directoryHint:)(v30, v14, &type metadata for String, v22);
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  static UTType.propertyList.getter(v23);
  uint64_t v24 = v29;
  URL.appendingPathExtension(for:)(v10);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  swift_release(v21);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v24, 0LL, 1LL, v15);
}

uint64_t sub_100270D9C(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0LL;
  }
  unint64_t v3 = sub_1003AD6B0(a1);
  if ((v4 & 1) == 0) {
    return 0LL;
  }
  if (!*(_BYTE *)(*(void *)(*(void *)(a2 + 56) + 8 * v3) + 16LL)) {
    return 0x20000000LL;
  }
  if (*(_BYTE *)(*(void *)(*(void *)(a2 + 56) + 8 * v3) + 16LL) == 1) {
    return 0x40000000LL;
  }
  return 0x10000000LL;
}

void sub_100270E0C()
{
  if (qword_100644080 != -1) {
    swift_once(&qword_100644080, sub_100270404);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v1, (uint64_t)qword_10064A5C0);
  uint64_t v2 = v0;
  unint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v6 = swift_slowAlloc(32LL, -1LL);
    uint64_t v10 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = *(void *)&v2[OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localDeviceID];
    uint64_t v8 = *(const char **)&v2[OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localDeviceID + 8];
    swift_bridgeObjectRetain(v8);
    uint64_t v9 = sub_10018CDB4(v7, (unint64_t)v8, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10, v5 + 4, v5 + 12);

    swift_bridgeObjectRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Starting LTKManager, localDeviceID=%s", v5, 0xCu);
    swift_arrayDestroy(v6, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1LL, -1LL);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  else
  {
  }

  sub_100270FB8();
}

void sub_100270FB8()
{
  uint64_t v1 = v0;
  id v2 = [(id)objc_opt_self(SDStatusMonitor) sharedMonitor];
  if (v2)
  {
    unint64_t v3 = v2;
    if (![v2 deviceKeyBagUnlocked])
    {
      uint64_t v19 = *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKByKeyClass);
      if (!*(void *)(v19 + 16)) {
        goto LABEL_22;
      }
      unint64_t v20 = sub_1003AD6B0(1u);
      if ((v21 & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v12 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
      uint64_t v13 = (os_unfair_lock_s *)(*(void *)(v12
                                           + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_ltkLock)
                               + 16LL);
      swift_retain();
      os_unfair_lock_lock(v13);
      sub_100271B04(&v30);
      char v14 = v30;
      goto LABEL_19;
    }

    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKByKeyClass);
    if (*(void *)(v4 + 16))
    {
      unint64_t v5 = sub_1003AD6B0(0);
      if ((v6 & 1) != 0)
      {
        uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
        uint64_t v8 = (os_unfair_lock_s *)(*(void *)(v7
                                            + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_ltkLock)
                                + 16LL);
        swift_retain();
        os_unfair_lock_lock(v8);
        sub_100271B04(&v28);
        char v9 = v28;
        os_unfair_lock_unlock(v8);
        if ((v9 & 1) != 0) {
          sub_1003498F0();
        }
        swift_release(v7);
      }

      if (*(void *)(v4 + 16))
      {
        unint64_t v10 = sub_1003AD6B0(1u);
        if ((v11 & 1) != 0)
        {
          uint64_t v12 = *(void *)(*(void *)(v4 + 56) + 8 * v10);
          uint64_t v13 = (os_unfair_lock_s *)(*(void *)(v12
                                               + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_ltkLock)
                                   + 16LL);
          swift_retain();
          os_unfair_lock_lock(v13);
          sub_100271B04(&v29);
          char v14 = v29;
LABEL_19:
          os_unfair_lock_unlock(v13);
          if ((v14 & 1) != 0) {
            sub_1003498F0();
          }
          swift_release(v12);
        }
      }
    }
  }

  else
  {
    if (qword_100644080 != -1) {
      swift_once(&qword_100644080, sub_100270404);
    }
    uint64_t v15 = type metadata accessor for Logger(0LL);
    uint64_t v16 = sub_100186DE4(v15, (uint64_t)qword_10064A5C0);
    unint64_t v3 = (void *)Logger.logObject.getter(v16);
    os_log_type_t v17 = static os_log_type_t.error.getter(v3);
    if (os_log_type_enabled((os_log_t)v3, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v3,  v17,  "Failed to get SDStatusMonitor to check lock state, only class D local LTKs will be loaded",  v18,  2u);
      swift_slowDealloc(v18, -1LL, -1LL);
    }
  }

void sub_1002712F8(char a1)
{
  swift_bridgeObjectRetain(*(void *)(v1
                                     + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKBasename
                                     + 8));
  v3._uint64_t countAndFlagsBits = 95LL;
  v3._object = (void *)0xE100000000000000LL;
  String.append(_:)(v3);
  __asm { BR              X10 }

void *sub_10027138C()
{
  v6._uint64_t countAndFlagsBits = 0x636F6C6E5563616DLL;
  v6._object = (void *)0xEE00656E6F68506BLL;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(0xEE00656E6F68506BLL);
  v7._uint64_t countAndFlagsBits = 95LL;
  v7._object = (void *)0xE100000000000000LL;
  String.append(_:)(v7);
  if (v0) {
    uint64_t v8 = 7955787LL;
  }
  else {
    uint64_t v8 = 1801678668LL;
  }
  if (v0) {
    unint64_t v9 = 0xE300000000000000LL;
  }
  else {
    unint64_t v9 = 0xE400000000000000LL;
  }
  if (v0) {
    signed __int8 v10 = v3 == 2;
  }
  else {
    signed __int8 v10 = 0x1020100u >> (8 * v3);
  }
  unint64_t v11 = v9;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease(v9);
  uint64_t v12 = *(void *)(v5 - 88);
  uint64_t v13 = *(void *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKByKeyClass);
  if (*(void *)(v13 + 16) && (uint64_t v14 = *(void *)(v5 - 96), v15 = sub_1003AD6B0(v10), (v16 & 1) != 0))
  {
    *(void *)(v5 - 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = &v37;
    uint64_t v17 = *(void *)(*(void *)(v13 + 56) + 8 * v15);
    __chkstk_darwin(v15);
    uint64_t v18 = v30;
    void v30[2] = v17;
    void v30[3] = v14;
    v30[4] = v12;
    char v31 = v3;
    char v32 = v0;
    char v33 = v2 & 1;
    char v34 = v1 & 1;
    unint64_t v20 = v19 + 4;
    uint64_t v21 = *(void *)(v5 - 104);
    uint64_t v35 = *(void *)(v5 - 112);
    uint64_t v36 = v21;
    swift_retain(v17);
    os_unfair_lock_lock(v20);
    uint64_t v22 = *(void *)(v5 - 72);
    sub_100272074((uint64_t *)(v5 - 96));
    if (!v22) {
      uint64_t v18 = *(void **)(v5 - 96);
    }
    os_unfair_lock_unlock(v20);
    swift_bridgeObjectRelease(v12);
    swift_release(v17);
  }

  else
  {
    swift_bridgeObjectRelease(v12);
    *(void *)(v5 - 96) = 0LL;
    *(void *)(v5 - 88) = 0xE000000000000000LL;
    _StringGuts.grow(_:)(35LL);
    swift_bridgeObjectRelease(*(void *)(v5 - 88));
    *(void *)(v5 - 96) = 0xD000000000000011LL;
    *(void *)(v5 - 88) = 0x8000000100507960LL;
    v23._uint64_t countAndFlagsBits = qword_1004D0910[v10];
    v23._object = (void *)0xE100000000000000LL;
    String.append(_:)(v23);
    v24._object = (void *)0x8000000100507980LL;
    v24._uint64_t countAndFlagsBits = 0xD000000000000010LL;
    String.append(_:)(v24);
    uint64_t v18 = *(void **)(v5 - 96);
    uint64_t v25 = *(void *)(v5 - 88);
    unint64_t v26 = sub_100187014();
    uint64_t v27 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v26, 0LL, 0LL);
    *(_DWORD *)uint64_t v28 = 1;
    *(void *)(v28 + 8) = v18;
    *(void *)(v28 + swift_unknownObjectWeakDestroy(v0 + 16) = v25;
    swift_willThrow(v27);
  }

  return v18;
}

id sub_100271664()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10LTKManagerCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s10LTKManagerCMa()
{
  return objc_opt_self(&OBJC_CLASS____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager);
}

unint64_t sub_100271768()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localDeviceID);
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localDeviceID + 8);
  swift_bridgeObjectRetain(v2);
  v3._uint64_t countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v2);
  v4._uint64_t countAndFlagsBits = 10LL;
  v4._object = (void *)0xE100000000000000LL;
  String.append(_:)(v4);
  return 0xD00000000000002ALL;
}

uint64_t sub_100271810(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DeviceLockState(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DeviceLockState.unlocked(_:), v4);
  LOBYTE(asub_10022D314(2, 1) = static DeviceLockState.== infix(_:_:)(a1, v7);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((a1 & 1) != 0)
  {
    if (qword_100644080 != -1) {
LABEL_34:
    }
      swift_once(&qword_100644080, sub_100270404);
    uint64_t v9 = type metadata accessor for Logger(0LL);
    uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_10064A5C0);
    unint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unlocked, start LTK checkup", v13, 2u);
      swift_slowDealloc(v13, -1LL, -1LL);
    }

    uint64_t v2 = *(void *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKByKeyClass);
    uint64_t v14 = v2 + 64;
    uint64_t v15 = 1LL << *(_BYTE *)(v2 + 32);
    uint64_t v16 = -1LL;
    if (v15 < 64) {
      uint64_t v16 = ~(-1LL << v15);
    }
    unint64_t v17 = v16 & *(void *)(v2 + 64);
    int64_t v18 = (unint64_t)(v15 + 63) >> 6;
    swift_bridgeObjectRetain((const char *)v2);
    int64_t v19 = 0LL;
    while (1)
    {
      if (v17)
      {
        unint64_t v20 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        unint64_t v21 = v20 | (v19 << 6);
      }

      else
      {
        if (__OFADD__(v19++, 1LL))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }

        if (v19 >= v18) {
          return swift_release(v2);
        }
        unint64_t v23 = *(void *)(v14 + 8 * v19);
        if (!v23)
        {
          int64_t v24 = v19 + 1;
          if (v19 + 1 >= v18) {
            return swift_release(v2);
          }
          unint64_t v23 = *(void *)(v14 + 8 * v24);
          if (!v23)
          {
            int64_t v24 = v19 + 2;
            if (v19 + 2 >= v18) {
              return swift_release(v2);
            }
            unint64_t v23 = *(void *)(v14 + 8 * v24);
            if (!v23)
            {
              int64_t v24 = v19 + 3;
              if (v19 + 3 >= v18) {
                return swift_release(v2);
              }
              unint64_t v23 = *(void *)(v14 + 8 * v24);
              if (!v23)
              {
                int64_t v24 = v19 + 4;
                if (v19 + 4 >= v18) {
                  return swift_release(v2);
                }
                unint64_t v23 = *(void *)(v14 + 8 * v24);
                if (!v23)
                {
                  while (1)
                  {
                    int64_t v19 = v24 + 1;
                    if (__OFADD__(v24, 1LL)) {
                      goto LABEL_33;
                    }
                    if (v19 >= v18) {
                      return swift_release(v2);
                    }
                    unint64_t v23 = *(void *)(v14 + 8 * v19);
                    ++v24;
                    if (v23) {
                      goto LABEL_23;
                    }
                  }
                }
              }
            }
          }

          int64_t v19 = v24;
        }

void sub_100271B04(char *a1@<X8>)
{
}

void *sub_100271B1C@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void sub_100271B58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v41 = [(id)objc_opt_self(NSFileManager) defaultManager];
  object = URL.path(percentEncoded:)(1)._object;
  NSString v7 = String._bridgeToObjectiveC()();
  *(void *)&double v8 = swift_bridgeObjectRelease(object).n128_u64[0];
  LOBYTE(object) = objc_msgSend(v41, "directoryExistsAtPath:", v7, v8);

  if ((object & 1) != 0)
  {
  }

  else
  {
    if (qword_100644080 != -1) {
      swift_once(&qword_100644080, sub_100270404);
    }
    uint64_t v9 = type metadata accessor for Logger(0LL);
    uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_10064A5C0);
    uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    os_log_type_t v12 = (os_log_s *)Logger.logObject.getter(v11);
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v15 = (void *)swift_slowAlloc(32LL, -1LL);
      uint64_t v40 = v10;
      uint64_t v16 = v15;
      id v44 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      uint64_t v39 = v14 + 4;
      uint64_t v17 = sub_100272034( (unint64_t *)&qword_100645408,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
      uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter(v2, v17);
      unint64_t v20 = v19;
      uint64_t v42 = sub_10018CDB4(v18, v19, (uint64_t *)&v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v39, v14 + 12);
      __n128 v21 = swift_bridgeObjectRelease(v20);
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v21);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Create LTK directory: %s", v14, 0xCu);
      swift_arrayDestroy(v16, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1LL, -1LL);
      swift_slowDealloc(v14, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }

    URL._bridgeToObjectiveC()(v22);
    int64_t v24 = v23;
    id v44 = 0LL;
    unsigned int v25 = [v41 createDirectoryAtURL:v23 withIntermediateDirectories:1 attributes:0 error:&v44];

    id v26 = v44;
    if (v25)
    {
      id v27 = v44;
    }

    else
    {
      id v28 = v44;
      uint64_t v29 = _convertNSErrorToError(_:)(v26);

      swift_willThrow(v30);
      swift_errorRetain(v29);
      uint64_t v31 = swift_errorRetain(v29);
      char v32 = (os_log_s *)Logger.logObject.getter(v31);
      os_log_type_t v33 = static os_log_type_t.error.getter(v32);
      if (os_log_type_enabled(v32, v33))
      {
        char v34 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v35 = (void *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)char v34 = 138412290;
        swift_errorRetain(v29);
        uint64_t v36 = (void *)_swift_stdlib_bridgeErrorToNSError(v29);
        id v44 = v36;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v34 + 4, v34 + 12);
        *uint64_t v35 = v36;
        swift_errorRelease(v29);
        swift_errorRelease(v29);
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "Create LTK directory failed: %@", v34, 0xCu);
        uint64_t v37 = sub_100183098(&qword_1006454E0);
        swift_arrayDestroy(v35, 1LL, v37);
        swift_slowDealloc(v35, -1LL, -1LL);
        swift_slowDealloc(v34, -1LL, -1LL);

        swift_errorRelease(v29);
      }

      else
      {

        swift_errorRelease(v29);
        swift_errorRelease(v29);
        swift_errorRelease(v29);
      }
    }
  }

uint64_t sub_100272000()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100272024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  return sub_100270B84(a1, a2, a3, *(void *)(v4 + 16), a4);
}

uint64_t sub_10027202C(unsigned __int8 a1)
{
  return sub_100270D9C(a1, *(void *)(v1 + 16));
}

uint64_t sub_100272034(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v7 = a3(a2);
    uint64_t result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_100272074@<X0>(uint64_t *a1@<X8>)
{
  return sub_100348B30( *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(unsigned __int8 *)(v1 + 40),  *(_BYTE *)(v1 + 41),  *(unsigned __int8 *)(v1 + 42),  *(unsigned __int8 *)(v1 + 43),  *(void *)(v1 + 48),  a1,  *(void *)(v1 + 56));
}

void *sub_1002720B4(int a1, size_t a2)
{
  if ((a2 & 0x8000000000000000LL) != 0)
  {
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Can't construct Array with count < 0",  36LL,  2LL,  "Swift/Array.swift",  17LL,  2,  936LL,  0);
    __break(1u);
  }

  else
  {
    if (!a2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v4 = sub_100183098(&qword_10064A730);
    uint64_t v5 = static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
    *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = a2;
    memset((void *)(v5 + 32), a1, a2);
    return (void *)v5;
  }

  return result;
}

uint64_t sub_100272174(char a1, uint64_t (*a2)(char *))
{
  char v3 = a1;
  return a2(&v3);
}

uint64_t sub_1002721A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  if (a2)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    uint64_t v8 = v7;
  }

  else
  {
    uint64_t v6 = 0LL;
    uint64_t v8 = 0LL;
  }

  swift_retain(v4);
  id v9 = a3;
  v5(v6, v8, a3);
  swift_release(v4);

  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_100272224(uint64_t *a1, unint64_t a2, char a3)
{
  uint64_t v6 = *a1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v6;
  if ((result & 1) != 0)
  {
    if ((a2 & 0x8000000000000000LL) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }

  uint64_t result = (uint64_t)sub_1001CCEE4(v6);
  uint64_t v6 = result;
  *a1 = result;
  if ((a2 & 0x8000000000000000LL) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (*(void *)(v6 + 16) > a2)
  {
    *(_BYTE *)(v6 + a2 + sub_100195658(v0 + 32) = a3 & 1;
    return swift_endAccess(v8);
  }

__n128 sub_1002722CC(uint64_t a1, uint64_t a2, void (*a3)(void *, __n128))
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain(*(const char **)(a1 + 16));
    uint64_t v8 = 0LL;
    id v9 = _swiftEmptyArrayStorage;
    do
    {
      int v10 = *(unsigned __int8 *)(v6 + v8 + 32);
      if (v10 != 2)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0) {
          id v9 = sub_10018C4F8(0LL, v9[2] + 1LL, 1, v9);
        }
        unint64_t v12 = v9[2];
        unint64_t v11 = v9[3];
        if (v12 >= v11 >> 1) {
          id v9 = sub_10018C4F8((void *)(v11 > 1), v12 + 1, 1, v9);
        }
        v9[2] = v12 + 1;
        *((_BYTE *)v9 + v12 + sub_100195658(v0 + 32) = v10 & 1;
      }

      ++v8;
    }

    while (v7 != v8);
    __n128 v5 = swift_bridgeObjectRelease((const char *)v6);
  }

  else
  {
    id v9 = _swiftEmptyArrayStorage;
  }

  a3(v9, v5);
  return swift_bridgeObjectRelease((const char *)v9);
}

uint64_t sub_1002723FC()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064A638);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064A638);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_10027248C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[2] = a1;
  v5[3] = a5;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v6 = static AirDropActor.shared;
  v5[4] = static AirDropActor.shared;
  return swift_task_switch(sub_1002724F8, v6, 0LL);
}

uint64_t sub_1002724F8()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = static AirDropActor.shared;
  uint64_t v3 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v4 = swift_task_alloc(32LL);
  v0[5] = v4;
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  __n128 v5 = (void *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[6] = v5;
  *__n128 v5 = v0;
  v5[1] = sub_1002725DC;
  return withCheckedContinuation<A>(isolation:function:_:)( v0 + 7,  v2,  v3,  0x496C6C6174736E69LL,  0xEF293A5F28734150LL,  sub_10027466C,  v4,  &type metadata for Bool);
}

uint64_t sub_1002725DC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 32LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 48LL));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10027263C, v2, 0LL);
}

uint64_t sub_10027263C()
{
  **(_BYTE **)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_BYTE *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100272654(unint64_t a1, uint64_t a2)
{
  unint64_t v118 = a1;
  uint64_t v3 = sub_100183098(&qword_1006494C8);
  uint64_t v112 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v101 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v99 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v98 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v97 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v95 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v8);
  uint64_t v113 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for URL(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  id v106 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v105 = (char *)&v91 - v15;
  uint64_t v117 = v16;
  __chkstk_darwin(v14);
  id v100 = (char *)&v91 - v17;
  uint64_t v18 = sub_100183098(&qword_1006494D0);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v114 = (uint64_t *)((char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v19);
  uint64_t v111 = (char *)&v91 - v21;
  unint64_t v22 = sub_100183098(&qword_10064A450);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  __chkstk_darwin(v22);
  size_t v25 = *(void *)(a2 + 16);
  if (!v25)
  {
    if (qword_100644090 != -1) {
      goto LABEL_19;
    }
    goto LABEL_14;
  }

  uint64_t v110 = v3;
  uint64_t v94 = v5;
  sub_100237A04();
  uint64_t v93 = static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, unint64_t, unint64_t))(v23 + 16))( (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v118,  v22);
  uint64_t v26 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v27 = (v26 + 16) & ~v26;
  uint64_t v92 = swift_allocObject(&unk_1005D6E20, v27 + v24, v26 | 7);
  (*(void (**)(uint64_t, char *, unint64_t))(v23 + 32))( v92 + v27,  (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v22);
  dispatch_group_t v109 = dispatch_group_create();
  uint64_t v28 = sub_100183098(&qword_10064EED0);
  uint64_t v107 = swift_allocObject(v28, 20LL, 7LL);
  *(_DWORD *)(v107 + swift_unknownObjectWeakDestroy(v0 + 16) = 0;
  uint64_t v29 = swift_allocObject(&unk_1005D6E48, 24LL, 7LL);
  uint64_t v30 = sub_1002720B4(2, v25);
  uint64_t v108 = v29;
  *(void *)(v29 + swift_unknownObjectWeakDestroy(v0 + 16) = v30;
  uint64_t v104 = v117 + 7;
  id v103 = (const char *)a2;
  __n128 v31 = swift_bridgeObjectRetain((const char *)a2);
  uint64_t v102 = 0LL;
  unint64_t v32 = 0LL;
  unint64_t v22 = v25;
  while (1)
  {
    uint64_t v33 = (uint64_t)v113;
    if (v32 == v22)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56))(v113, 1LL, 1LL, v10, v31);
      unint64_t v34 = v22;
      uint64_t v35 = v110;
LABEL_7:
      sub_100187100(v33, (uint64_t *)&unk_100645130);
      uint64_t v36 = 1LL;
      goto LABEL_10;
    }

    uint64_t v35 = v110;
    if (v32 >= v22) {
      break;
    }
    (*(void (**)(char *, const char *, uint64_t, __n128))(v11 + 16))( v113,  &v103[((*(unsigned __int8 *)(v11 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
          + *(void *)(v11 + 72) * v32],
      v10,
      v31);
    unint64_t v34 = v32 + 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v33, 0LL, 1LL, v10);
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v38 = v100;
    v37(v100, v33, v10);
    uint64_t v39 = &v101[*(int *)(v35 + 48)];
    v37(v39, (uint64_t)v38, v10);
    uint64_t v40 = v102 + 1;
    if (__OFADD__(v102, 1LL)) {
      goto LABEL_18;
    }
    id v41 = (char *)v114 + *(int *)(v35 + 48);
    *uint64_t v114 = v102;
    v37(v41, (uint64_t)v39, v10);
    uint64_t v36 = 0LL;
    uint64_t v102 = v40;
LABEL_10:
    uint64_t v43 = (uint64_t *)v111;
    uint64_t v42 = v112;
    uint64_t v44 = (uint64_t)v114;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v112 + 56))(v114, v36, 1LL, v35);
    sub_100227A2C(v44, (uint64_t)v43);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v42 + 48))(v43, 1LL, v35) == 1)
    {
      swift_bridgeObjectRelease(v103);
      int64_t v71 = (void *)swift_allocObject(&unk_1005D6E70, 48LL, 7LL);
      uint64_t v72 = v108;
      v71[2] = v108;
      v71[3] = v22;
      uint64_t v73 = v92;
      v71[4] = sub_1002746D8;
      v71[5] = v73;
      uint64_t v124 = sub_100227AA0;
      uint64_t v125 = v71;
      aBlock = _NSConcreteStackBlock;
      uint64_t v121 = 1107296256LL;
      uint64_t v122 = sub_1001B9FE4;
      uint64_t v123 = &unk_1005D6E88;
      uint64_t v74 = _Block_copy(&aBlock);
      swift_retain(v72);
      uint64_t v75 = swift_retain(v73);
      id v76 = v95;
      static DispatchQoS.unspecified.getter(v75);
      uint64_t v119 = _swiftEmptyArrayStorage;
      uint64_t v77 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      uint64_t v78 = sub_100183098((uint64_t *)&unk_1006460D0);
      unint64_t v79 = sub_1001D228C();
      uint64_t v80 = v98;
      uint64_t v81 = v94;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v119, v78, v79, v94, v77);
      uint64_t v82 = (void *)v93;
      dispatch_group_t v83 = v109;
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v76, v80, v93, v74);
      _Block_release(v74);
      swift_release(v107);

      (*(void (**)(char *, uint64_t))(v99 + 8))(v80, v81);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v76, v97);
      uint64_t v84 = v125;

      swift_release(v73);
      swift_release(v72);
      return swift_release(v84);
    }

    uint64_t v45 = *v43;
    __n128 v46 = (char *)v43 + *(int *)(v35 + 48);
    uint64_t v117 = *(char **)(v11 + 32);
    __n128 v47 = v105;
    ((void (*)(char *, char *, uint64_t))v117)(v105, v46, v10);
    dispatch_group_t v48 = v109;
    dispatch_group_enter(v109);
    uint64_t v49 = (void *)swift_allocObject(&unk_1005D6EC0, 48LL, 7LL);
    unint64_t v118 = v34;
    uint64_t v50 = v49;
    uint64_t v52 = v107;
    uint64_t v51 = v108;
    v49[2] = v107;
    v49[3] = v51;
    v49[4] = v45;
    void v49[5] = v48;
    uint64_t v53 = swift_allocObject(&unk_1005D6EE8, 32LL, 7LL);
    *(void *)(v53 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_100227AE0;
    *(void *)(v53 + 24) = v50;
    id v116 = (id)objc_opt_self(&OBJC_CLASS___IXAppInstallCoordinator);
    swift_retain(v52);
    swift_retain(v51);
    unint64_t v54 = v48;
    swift_retain(v50);
    URL._bridgeToObjectiveC()(v55);
    double v115 = v56;
    unint64_t v57 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v58 = v11;
    uint64_t v59 = v10;
    unint64_t v60 = v106;
    v57(v106, v47, v59);
    uint64_t v61 = *(unsigned __int8 *)(v58 + 80);
    uint64_t v62 = (v61 + 16) & ~v61;
    unint64_t v63 = v22;
    unint64_t v64 = (unint64_t)&v104[v62] & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v65 = swift_allocObject(&unk_1005D6F10, v64 + 16, v61 | 7);
    uint64_t v66 = v60;
    uint64_t v10 = v59;
    uint64_t v11 = v58;
    ((void (*)(uint64_t, char *, uint64_t))v117)(v65 + v62, v66, v10);
    uint64_t v67 = (uint64_t (**)(char))(v65 + v64);
    unint64_t v22 = v63;
    *uint64_t v67 = sub_1002747D8;
    v67[1] = (uint64_t (*)(char))v53;
    uint64_t v124 = sub_100274880;
    uint64_t v125 = (void *)v65;
    aBlock = _NSConcreteStackBlock;
    uint64_t v121 = 1107296256LL;
    uint64_t v122 = sub_1002721A4;
    uint64_t v123 = &unk_1005D6F28;
    uint64_t v68 = _Block_copy(&aBlock);
    swift_release(v125);
    uint64_t v69 = v115;
    [v116 installApplication:v115 options:0 completion:v68];
    _Block_release(v68);
    uint64_t v70 = v50;
    unint64_t v32 = v118;
    swift_release(v70);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v47, v10);
  }

  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  swift_once(&qword_100644090, sub_1002723FC);
LABEL_14:
  uint64_t v86 = type metadata accessor for Logger(0LL);
  uint64_t v87 = sub_100186DE4(v86, (uint64_t)qword_10064A638);
  uint64_t v88 = (os_log_s *)Logger.logObject.getter(v87);
  os_log_type_t v89 = static os_log_type_t.error.getter(v88);
  if (os_log_type_enabled(v88, v89))
  {
    uint64_t v90 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v90 = 0;
    _os_log_impl((void *)&_mh_execute_header, v88, v89, "No completedURLs to install", v90, 2u);
    swift_slowDealloc(v90, -1LL, -1LL);
  }

  LOBYTE(aBlock) = 0;
  return CheckedContinuation.resume(returning:)(&aBlock, v22);
}

uint64_t sub_100272F8C( uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v63 = a6;
  unint64_t v64 = a5;
  uint64_t v10 = type metadata accessor for URL(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v61 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v61 - v18;
  if (a3)
  {
    swift_errorRetain(a3);
    if (qword_100644090 != -1) {
      swift_once(&qword_100644090, sub_1002723FC);
    }
    uint64_t v20 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v20, (uint64_t)qword_10064A638);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v19, a4, v10);
    swift_errorRetain(a3);
    uint64_t v21 = swift_errorRetain(a3);
    unint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc(22LL, -1LL);
      uint64_t v62 = v10;
      uint64_t v25 = v24;
      uint64_t v26 = swift_slowAlloc(64LL, -1LL);
      uint64_t v65 = a3;
      uint64_t v66 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_errorRetain(a3);
      uint64_t v27 = sub_100183098(&qword_100645710);
      uint64_t v28 = String.init<A>(describing:)(&v65, v27);
      uint64_t v30 = (const char *)v29;
      uint64_t v65 = sub_10018CDB4(v28, v29, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v25 + 4, v25 + 12);
      swift_bridgeObjectRelease(v30);
      swift_errorRelease(a3);
      uint64_t v31 = swift_errorRelease(a3);
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v32 = URL.description.getter(v31);
      unint64_t v34 = (const char *)v33;
      uint64_t v65 = sub_10018CDB4(v32, v33, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v25 + 14, v25 + 22);
      __n128 v35 = swift_bridgeObjectRelease(v34);
      (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v19, v62, v35);
      _os_log_impl( (void *)&_mh_execute_header,  v22,  v23,  "IPA Handler: Failed to install app with error (%s for URL %s",  (uint8_t *)v25,  0x16u);
      swift_arrayDestroy(v26, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1LL, -1LL);
      swift_slowDealloc(v25, -1LL, -1LL);

      swift_errorRelease(a3);
    }

    else
    {
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
    }

uint64_t sub_1002735F0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    goto LABEL_4;
  }
  if ((*(_BYTE *)(result + 32) & 1) == 0)
  {
    LOBYTE(v2) = 0;
    goto LABEL_13;
  }

  if (v1 == 1)
  {
LABEL_4:
    LOBYTE(v2) = 1;
LABEL_13:
    char v7 = v2;
    uint64_t v6 = sub_100183098(&qword_10064A450);
    return CheckedContinuation.resume(returning:)(&v7, v6);
  }

  uint64_t v3 = 33LL;
  while (1)
  {
    uint64_t v4 = v3 - 31;
    if (__OFADD__(v3 - 32, 1LL)) {
      break;
    }
    int v2 = *(unsigned __int8 *)(result + v3++);
    if (v2 != 1 || v4 == v1) {
      goto LABEL_13;
    }
  }

  __break(1u);
  return result;
}

uint64_t type metadata accessor for SDAirDropContentHandlerIPA()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary26SDAirDropContentHandlerIPA);
}

uint64_t sub_1002736A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerIPA();
  uint64_t result = swift_allocObject(v2, 16LL, 7LL);
  *a1 = result;
  return result;
}

uint64_t sub_1002736D0(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_10064A718 + dword_10064A718);
  uint64_t v3 = (void *)swift_task_alloc(unk_10064A71C);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001C97A0;
  return v5(a1);
}

uint64_t sub_100273734(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v6 = 0LL;
  uint64_t v4 = swift_allocObject(&unk_1005D6DF8, 32LL, 7LL);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  *(void *)(v4 + 24) = a1;
  swift_retain(v3);
  swift_bridgeObjectRetain(a1);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)( 0xD000000000000015LL,  0x8000000100507A00LL,  &v6,  &unk_10064A728,  v4,  0xD000000000000061LL,  0x8000000100507A20LL,  81LL,  &type metadata for Double,  &type metadata for Bool);
}

uint64_t sub_1002737FC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_10027381C(uint64_t a1, os_unfair_lock_s *a2, uint64_t a3, uint64_t a4, dispatch_group_s *a5)
{
  uint64_t v6 = a2 + 4;
  os_unfair_lock_lock(a2 + 4);
  sub_10027490C();
  os_unfair_lock_unlock(v6);
  dispatch_group_leave(a5);
}

void sub_100273898(uint64_t a1, char a2)
{
  uint64_t v3 = sub_100183098(&qword_10064A408);
  __chkstk_darwin(v3);
  uint64_t v5 = &v65[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 16];
  uint64_t v6 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = &v65[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 16];
  uint64_t v11 = SFAirDropReceive.AskRequest.files.getter(v8);
  unint64_t v12 = *(void *)(v11 + 16);
  swift_bridgeObjectRelease((const char *)v11);
  if (v12 != 1) {
    goto LABEL_7;
  }
  uint64_t v14 = SFAirDropReceive.AskRequest.files.getter(v13);
  uint64_t v15 = (const char *)v14;
  if (*(void *)(v14 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))( v5,  v14 + ((*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)),  v6);
    uint64_t v16 = 0LL;
  }

  else
  {
    uint64_t v16 = 1LL;
  }

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v16, 1LL, v6);
  __n128 v17 = swift_bridgeObjectRelease(v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48))(v5, 1LL, v6, v17) == 1)
  {
    sub_100187100((uint64_t)v5, &qword_10064A408);
LABEL_7:
    uint64_t v18 = sub_100183098((uint64_t *)&unk_100650440);
    uint64_t inited = swift_initStackObject(v18, v68);
    __int128 v64 = xmmword_1004CDCA0;
    *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(inited + sub_100195658(v0 + 32) = 4280393LL;
    uint64_t v20 = inited + 32;
    *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0xE300000000000000LL;
    *(void *)(inited + 48) = v12;
    uint64_t v66 = 0x545F4E5245444F4DLL;
    unint64_t v67 = 0xEF524546534E4152LL;
    *(void *)&double v21 = swift_bridgeObjectRetain((const char *)0xE300000000000000LL).n128_u64[0];
    swift_bridgeObjectRetain((const char *)inited, v21);
    v22._uint64_t countAndFlagsBits = 95LL;
    v22._object = (void *)0xE100000000000000LL;
    String.append(_:)(v22);
    v23._uint64_t countAndFlagsBits = 4280393LL;
    v23._object = (void *)0xE300000000000000LL;
    String.append(_:)(v23);
    swift_bridgeObjectRelease((const char *)0xE300000000000000LL);
    if (v12 > 1)
    {
      v24._uint64_t countAndFlagsBits = 0x4C4152554C505FLL;
      v24._object = (void *)0xE700000000000000LL;
      String.append(_:)(v24);
    }

    swift_bridgeObjectRelease((const char *)inited);
    if ((a2 & 1) != 0)
    {
      v25._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
      v25._object = (void *)0xEC00000044455A49LL;
      String.append(_:)(v25);
    }

    v26._uint64_t countAndFlagsBits = 0x545845545FLL;
    v26._object = (void *)0xE500000000000000LL;
    String.append(_:)(v26);
    uint64_t v27 = (const char *)v67;
    swift_setDeallocating(inited);
    uint64_t v28 = *(void *)(inited + 16);
    uint64_t v29 = sub_100183098(&qword_100646EA0);
    swift_arrayDestroy(v20, v28, v29);
    NSString v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    id v32 = (id)SFLocalizedStringForKey(v30, v31);

    if (v32)
    {
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      __n128 v35 = v34;

      uint64_t v36 = sub_100183098(&qword_1006483E0);
      uint64_t v37 = swift_allocObject(v36, 72LL, 7LL);
      *(_OWORD *)(v37 + swift_unknownObjectWeakDestroy(v0 + 16) = v64;
      *(void *)(v37 + 56) = &type metadata for Int;
      *(void *)(v37 + 64) = &protocol witness table for Int;
      *(void *)(v37 + sub_100195658(v0 + 32) = v12;
      static String.localizedStringWithFormat(_:_:)(v33, v35, v37);
      *(void *)&double v38 = swift_bridgeObjectRelease(v35).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v37, v38);
      return;
    }

    __break(1u);
    goto LABEL_18;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
  uint64_t v39 = sub_100183098((uint64_t *)&unk_100650440);
  uint64_t v40 = swift_initStackObject(v39, v65);
  __int128 v64 = xmmword_1004CDCA0;
  *(_OWORD *)(v40 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
  *(void *)(v40 + sub_100195658(v0 + 32) = 0x485449575F415049LL;
  uint64_t v41 = v40 + 32;
  *(void *)(v40 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0xEE00454C5449545FLL;
  *(void *)(v40 + 48) = 1LL;
  uint64_t v66 = 0x545F4E5245444F4DLL;
  unint64_t v67 = 0xEF524546534E4152LL;
  *(void *)&double v42 = swift_bridgeObjectRetain((const char *)0xEE00454C5449545FLL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)v40, v42);
  v43._uint64_t countAndFlagsBits = 95LL;
  v43._object = (void *)0xE100000000000000LL;
  String.append(_:)(v43);
  v44._uint64_t countAndFlagsBits = 0x485449575F415049LL;
  v44._object = (void *)0xEE00454C5449545FLL;
  String.append(_:)(v44);
  *(void *)&double v45 = swift_bridgeObjectRelease((const char *)v40).n128_u64[0];
  swift_bridgeObjectRelease((const char *)0xEE00454C5449545FLL, v45);
  if ((a2 & 1) != 0)
  {
    v46._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
    v46._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v46);
  }

  v47._uint64_t countAndFlagsBits = 0x545845545FLL;
  v47._object = (void *)0xE500000000000000LL;
  String.append(_:)(v47);
  uint64_t v48 = (const char *)v67;
  swift_setDeallocating(v40);
  uint64_t v49 = *(void *)(v40 + 16);
  uint64_t v50 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(v41, v49, v50);
  NSString v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v48);
  id v53 = (id)SFLocalizedStringForKey(v51, v52);

  if (v53)
  {
    uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
    unint64_t v56 = v55;

    uint64_t v57 = sub_100183098(&qword_1006483E0);
    uint64_t v58 = swift_allocObject(v57, 72LL, 7LL);
    *(_OWORD *)(v58 + swift_unknownObjectWeakDestroy(v0 + 16) = v64;
    uint64_t v59 = SFAirDropReceive.AskRequest.ItemInfo.fileName.getter(v58);
    uint64_t v61 = v60;
    *(void *)(v58 + 56) = &type metadata for String;
    *(void *)(v58 + 64) = sub_10021366C();
    *(void *)(v58 + sub_100195658(v0 + 32) = v59;
    *(void *)(v58 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v61;
    static String.localizedStringWithFormat(_:_:)(v54, v56, v58);
    *(void *)&double v62 = swift_bridgeObjectRelease(v56).n128_u64[0];
    __n128 v63 = swift_bridgeObjectRelease((const char *)v58, v62);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v63);
    return;
  }

uint64_t sub_100273DF4(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0LL);
  v1[3] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(void *)(v3 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  v1[6] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v1[7] = v5;
  v1[8] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v6 = static AirDropActor.shared;
  v1[9] = static AirDropActor.shared;
  return swift_task_switch(sub_100273EB0, v6, 0LL);
}

uint64_t sub_100273EB0()
{
  *(void *)(v0 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = objc_opt_self(&OBJC_CLASS___UIApplication);
  uint64_t v1 = type metadata accessor for MainActor(0LL);
  *(void *)(v0 + 88) = static MainActor.shared.getter(v1);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100273F28, v2, v3);
}

uint64_t sub_100273F28()
{
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 72);
  swift_release(*(void *)(v0 + 88));
  *(_BYTE *)(v0 + 10_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11,  2,  0xD00000000000002DLL,  0x8000000100505960,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50,  2,  298, 0) = [v1 isRunningInStoreDemoMode];
  return swift_task_switch(sub_100273F7C, v2, 0LL);
}

id sub_100273F7C()
{
  if ((*(_BYTE *)(v0 + 100) & 1) != 0)
  {
    if (qword_100644090 != -1) {
      swift_once(&qword_100644090, sub_1002723FC);
    }
    uint64_t v1 = type metadata accessor for Logger(0LL);
    uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_10064A638);
    uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "IPA Handler: Device running in store demo mode";
LABEL_24:
      _os_log_impl((void *)&_mh_execute_header, v3, v4, v6, v5, 2u);
      uint64_t v47 = 0LL;
LABEL_25:
      swift_slowDealloc(v5, -1LL, -1LL);
LABEL_41:

      uint64_t v58 = *(void *)(v0 + 40);
      swift_task_dealloc(*(void *)(v0 + 64));
      swift_task_dealloc(v58);
      return (id)(*(uint64_t (**)(uint64_t))(v0 + 8))(v47);
    }

    goto LABEL_40;
  }

  id result = [(id)objc_opt_self(MCProfileConnection) sharedConnection];
  if (result)
  {
    uint64_t v8 = result;
    unsigned int v9 = [result isAirDropAppInstallationAllowed];

    if (v9)
    {
      uint64_t v11 = *(void *)(v0 + 56);
      uint64_t v10 = *(void *)(v0 + 64);
      uint64_t v12 = *(void *)(v0 + 48);
      uint64_t v13 = *(void *)(v0 + 16);
      uint64_t v14 = ((uint64_t (*)(void))SFAirDropReceive.AskRequest.files.getter)();
      uint64_t v15 = *(void *)(v14 + 16);
      __n128 v16 = swift_bridgeObjectRelease((const char *)v14);
      (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v11 + 16))(v10, v13, v12, v16);
      uint64_t v19 = *(void *)(v0 + 56);
      uint64_t v18 = *(void *)(v0 + 64);
      uint64_t v20 = *(void *)(v0 + 48);
      if (v15)
      {
        uint64_t v21 = SFAirDropReceive.AskRequest.urlItems.getter(v17);
        uint64_t v22 = *(void *)(v21 + 16);
        __n128 v23 = swift_bridgeObjectRelease((const char *)v21);
        uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v19 + 8))(v18, v20, v23);
        if (!v22)
        {
          uint64_t v25 = SFAirDropReceive.AskRequest.files.getter(v24);
          uint64_t v26 = *(void *)(v25 + 16);
          if (!v26)
          {
            swift_bridgeObjectRelease((const char *)v25);
LABEL_27:
            if ((SFAirDropReceive.AskRequest.senderIsMe.getter(v42) & 1) != 0)
            {
              if (qword_100644090 != -1) {
                swift_once(&qword_100644090, sub_1002723FC);
              }
              uint64_t v48 = type metadata accessor for Logger(0LL);
              uint64_t v49 = sub_100186DE4(v48, (uint64_t)qword_10064A638);
              uint64_t v3 = (os_log_s *)Logger.logObject.getter(v49);
              os_log_type_t v50 = static os_log_type_t.default.getter();
              if (!os_log_type_enabled(v3, v50))
              {
                uint64_t v47 = 1LL;
                goto LABEL_41;
              }

              uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)uint64_t v5 = 0;
              _os_log_impl((void *)&_mh_execute_header, v3, v50, "IPA Handler: Transfer is me, can handle.", v5, 2u);
              uint64_t v47 = 1LL;
            }

            else
            {
              id v51 = [(id)objc_opt_self(NSFileManager) defaultManager];
              NSString v52 = String._bridgeToObjectiveC()();
              uint64_t v47 = (uint64_t)[v51 fileExistsAtPath:v52];

              if (qword_100644090 != -1) {
                swift_once(&qword_100644090, sub_1002723FC);
              }
              uint64_t v53 = type metadata accessor for Logger(0LL);
              uint64_t v54 = sub_100186DE4(v53, (uint64_t)qword_10064A638);
              uint64_t v3 = (os_log_s *)Logger.logObject.getter(v54);
              os_log_type_t v55 = static os_log_type_t.default.getter();
              if (!os_log_type_enabled(v3, v55)) {
                goto LABEL_41;
              }
              uint64_t v5 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
              *(_DWORD *)uint64_t v5 = 67109120;
              *(_DWORD *)(v0 + 96) = v47;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 100, v5 + 4, v5 + 8);
              _os_log_impl( (void *)&_mh_execute_header,  v3,  v55,  "IPA Handler: Developer settings bundle exists? %{BOOL}d",  v5,  8u);
            }

            goto LABEL_25;
          }

          uint64_t v27 = *(void *)(v0 + 32);
          unint64_t v28 = v25 + ((*(unsigned __int8 *)(v27 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
          uint64_t v59 = v25;
          uint64_t v60 = *(void *)(v27 + 72);
          uint64_t v29 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, __n128))(v27 + 16);
          __n128 v30 = swift_bridgeObjectRetain((const char *)v25);
          while (1)
          {
            uint64_t v31 = *(void *)(v0 + 40);
            uint64_t v32 = *(void *)(v0 + 24);
            uint64_t v33 = v29(v31, v28, v32, v30);
            SFAirDropReceive.AskRequest.ItemInfo.fileName.getter(v33);
            __n128 v35 = v34;
            NSString v36 = String._bridgeToObjectiveC()();
            id v37 = objc_msgSend(v36, "pathExtension", swift_bridgeObjectRelease(v35).n128_f64[0]);

            static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
            uint64_t v39 = v38;

            NSString v40 = String._bridgeToObjectiveC()();
            __n128 v41 = swift_bridgeObjectRelease(v39);
            LODWORD(v36) = SFIsIPA(v40, v41);

            (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v31, v32);
            if (!(_DWORD)v36) {
              break;
            }
            v28 += v60;
            if (!--v26)
            {
              uint64_t v42 = swift_bridgeObjectRelease_n(v59, 2LL);
              goto LABEL_27;
            }
          }

          swift_bridgeObjectRelease_n(v59, 2LL);
          if (qword_100644090 != -1) {
            swift_once(&qword_100644090, sub_1002723FC);
          }
          uint64_t v56 = type metadata accessor for Logger(0LL);
          uint64_t v57 = sub_100186DE4(v56, (uint64_t)qword_10064A638);
          uint64_t v3 = (os_log_s *)Logger.logObject.getter(v57);
          os_log_type_t v4 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v3, v4))
          {
            uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v5 = 0;
            uint64_t v6 = "IPA Handler: File is not IPA, ignoring...";
            goto LABEL_24;
          }

          goto LABEL_40;
        }
      }

      else
      {
        (*(void (**)(void, void))(v19 + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
      }

      if (qword_100644090 != -1) {
        swift_once(&qword_100644090, sub_1002723FC);
      }
      uint64_t v45 = type metadata accessor for Logger(0LL);
      uint64_t v46 = sub_100186DE4(v45, (uint64_t)qword_10064A638);
      uint64_t v3 = (os_log_s *)Logger.logObject.getter(v46);
      os_log_type_t v4 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v5 = 0;
        uint64_t v6 = "IPA Handler: isJustFiles is false";
        goto LABEL_24;
      }
    }

    else
    {
      if (qword_100644090 != -1) {
        swift_once(&qword_100644090, sub_1002723FC);
      }
      uint64_t v43 = type metadata accessor for Logger(0LL);
      uint64_t v44 = sub_100186DE4(v43, (uint64_t)qword_10064A638);
      uint64_t v3 = (os_log_s *)Logger.logObject.getter(v44);
      os_log_type_t v4 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v5 = 0;
        uint64_t v6 = "IPA Handler: AirDrop app installation not allowed";
        goto LABEL_24;
      }
    }

uint64_t sub_1002745C4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1002745F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v10 = (void *)swift_task_alloc(dword_10064A724);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v10;
  void *v10 = v4;
  v10[1] = sub_1001943E8;
  return sub_10027248C(a1, a2, a3, v9, v8);
}

uint64_t sub_10027466C(unint64_t a1)
{
  return sub_100272654(a1, *(void *)(v1 + 16));
}

uint64_t sub_100274674()
{
  uint64_t v1 = sub_100183098(&qword_10064A450);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_1002746D8(uint64_t a1)
{
  return sub_1002735F0(a1);
}

uint64_t sub_100274718()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10027473C()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_100274768(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + sub_100195658(v0 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_100274778(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100274780()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1002747B4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1002747D8(char a1)
{
  uint64_t v2 = *(uint64_t (**)(char *))(v1 + 16);
  char v4 = a1;
  return v2(&v4);
}

uint64_t sub_100274808()
{
  uint64_t v1 = type metadata accessor for URL(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_100274880(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for URL(0LL) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_100272F8C(a1, a2, a3, v3 + v8, *(uint64_t (**)(uint64_t))v9, *(void *)(v9 + 8));
}

uint64_t sub_1002748EC()
{
  return sub_100272224(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), **(_BYTE **)(v0 + 32));
}

uint64_t sub_10027490C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100274934()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064A738);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064A738);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1002749C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDrop.TransferType(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_100649F58);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10028CA8C(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1LL, v9) == 1)
  {
    sub_100187100((uint64_t)v8, &qword_100649F58);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000001DLL,  0x8000000100507BE0LL,  "DaemoniOSLibrary/SDAirDropTelemetry.swift",  41LL,  2LL,  117LL,  0);
    __break(1u);
  }

  else
  {
    uint64_t v13 = sub_1001A4B40((uint64_t)v8, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    SFAirDropSend.Request.type.getter(v13);
    uint64_t v14 = sub_100275190((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1001A4BC8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return v14;
  }

  return result;
}

uint64_t sub_100274B90(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100649F58);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v15 - v10;
  if (*(void *)(a1 + 16) != 1LL) {
    return 2LL;
  }
  sub_10028CA8C(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1LL, v5) != 1)
  {
    sub_1001A4B40((uint64_t)v4, (uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1001A4B84((uint64_t)v11, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t EnumCaseMultiPayload = (int)swift_getEnumCaseMultiPayload(v9, v5);
    uint64_t v13 = *(void *)((char *)&unk_1004D0988 + EnumCaseMultiPayload * 8);
    sub_1001A4BC8((uint64_t)v9, (uint64_t (*)(void))off_1005D6F68[EnumCaseMultiPayload]);
    sub_1001A4BC8((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return v13;
  }

  sub_100187100((uint64_t)v4, &qword_100649F58);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000001DLL,  0x8000000100507BE0LL,  "DaemoniOSLibrary/SDAirDropTelemetry.swift",  41LL,  2LL,  130LL,  0);
  __break(1u);
  return result;
}

uint64_t sub_100274D54(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDrop.DeviceRelationship(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_100649F58);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10028CA8C(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1LL, v9) == 1)
  {
    sub_100187100((uint64_t)v8, &qword_100649F58);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000001DLL,  0x8000000100507BE0LL,  "DaemoniOSLibrary/SDAirDropTelemetry.swift",  41LL,  2LL,  138LL,  0);
    __break(1u);
  }

  else
  {
    sub_1001A4B40((uint64_t)v8, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_10020CBCC();
    uint64_t v13 = SFAirDrop.DeviceRelationship.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1001A4BC8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return v13;
  }

  return result;
}

uint64_t sub_100274F10()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SFAirDropSend.Failure(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v22 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t v12 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v1, v12);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v15, v2);
    __n128 v17 = *(void (**)(char *, void, uint64_t))(v3 + 104);
    v17(v9, enum case for SFAirDropSend.Failure.cancelled(_:), v2);
    char v18 = static SFAirDropSend.Failure.== infix(_:_:)(v11, v9);
    uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v9, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v11, v2);
    if ((v18 & 1) != 0)
    {
      v19(v6, v2);
      v19(v11, v2);
      return 2LL;
    }

    else
    {
      v17(v9, enum case for SFAirDropSend.Failure.receiverDeclined(_:), v2);
      char v21 = static SFAirDropSend.Failure.== infix(_:_:)(v6, v9);
      v19(v9, v2);
      v19(v6, v2);
      v19(v11, v2);
      if ((v21 & 1) != 0) {
        return 2LL;
      }
      else {
        return 1LL;
      }
    }
  }

  else if (v16 == enum case for SFAirDropSend.Transfer.Metrics.TransferResult.success(_:))
  {
    return 0LL;
  }

  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000001BLL,  0x8000000100507C00LL,  "DaemoniOSLibrary/SDAirDropTelemetry.swift",  41LL,  2LL,  80LL,  0);
    __break(1u);
  }

  return result;
}

uint64_t sub_100275190(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferType(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A4B84(v2, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    int v12 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
    int v13 = enum case for SFAirDrop.TransferType.exchange(_:);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1001A4BC8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    if (v12 == v13) {
      return 0x706F7264656D616ELL;
    }
    else {
      return 0x2D706F7264726961LL;
    }
  }

  else
  {
    sub_1001A4BC8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return 0x706F7264726961LL;
  }

uint64_t type metadata accessor for SDAirDropTelemetry()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary18SDAirDropTelemetry);
}

uint64_t sub_10027533C(const char *a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v57 = (uint64_t)a1;
  uint64_t v58 = a1 + 64;
  swift_bridgeObjectRetain(a1);
  uint64_t v56 = a3;
  swift_retain(a3);
  sub_100185A68();
  if (!v10) {
    goto LABEL_24;
  }
  uint64_t v12 = v9;
  int v13 = (const char *)v10;
  uint64_t v14 = v11;
  uint64_t v15 = (void *)*a5;
  unint64_t v17 = sub_1003AD53C(v9, v10);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }

  char v21 = v16;
  if (v15[3] >= v20)
  {
    if ((a4 & 1) != 0)
    {
      uint64_t v24 = (void *)*a5;
      if ((v16 & 1) != 0) {
        goto LABEL_9;
      }
    }

    else
    {
      sub_1003AE77C();
      uint64_t v24 = (void *)*a5;
      if ((v21 & 1) != 0) {
        goto LABEL_9;
      }
    }

id sub_100275620@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  id v4 = (id)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  swift_bridgeObjectRetain(v2);
  return v4;
}

void sub_100275658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a2;
  uint64_t v31 = a1;
  uint64_t v34 = type metadata accessor for SFAirDrop.TransferType(0LL);
  uint64_t v32 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDrop.DeviceRelationship(0LL);
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for SFAirDropSend.Failure(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  char v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_100183098(&qword_10064A7E8);
  uint64_t inited = swift_initStackObject(v17, v35);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CD550;
  strcpy((char *)(inited + 32), "failureSubType");
  *(_BYTE *)(inited + 47) = -18;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  if ((*(unsigned int (**)(char *, uint64_t))(v10 + 88))(v12, v9) == enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    uint64_t v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    SFAirDropSend.Failure.errorDescription.getter(v19);
    unint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    unint64_t v21 = 0xE400000000000000LL;
  }

  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  *(void *)(inited + 48) = v22;
  *(void *)(inited + 56) = 0xD000000000000010LL;
  *(void *)(inited + 64) = 0x8000000100507B10LL;
  sub_10020CBCC();
  SFAirDrop.DeviceRelationship.rawValue.getter();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
  *(NSNumber *)(inited + 72) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 1701869940LL;
  *(void *)(inited + 88) = 0xE400000000000000LL;
  SFAirDropSend.Request.type.getter();
  sub_100275190((uint64_t)v5);
  uint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  *(void *)(inited + 96) = v25;
  unint64_t v26 = sub_1003918B0(inited);
  NSString v27 = String._bridgeToObjectiveC()();
  sub_1002759A4();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v26);
  SFMetricsLog(v27, isa);
}

unint64_t sub_1002759A4()
{
  unint64_t result = qword_10064A7F0;
  if (!qword_10064A7F0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSObject);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10064A7F0);
  }

  return result;
}

void sub_1002759E0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v152 = a8;
  uint64_t v136 = a4;
  uint64_t v155 = a3;
  uint64_t v159 = a2;
  uint64_t v162 = a5;
  uint64_t v163 = a1;
  sub_1002766D8(a5, (uint64_t)v166);
  uint64_t v138 = (const char *)v166[1];
  uint64_t v139 = (const char *)v166[3];
  uint64_t v140 = (const char *)v166[6];
  uint64_t v141 = (const char *)v166[8];
  uint64_t v137 = (const char *)v166[10];
  unint64_t v142 = v166[12];
  uint64_t v143 = v166[11];
  uint64_t v10 = sub_100183098(&qword_100649F70);
  __chkstk_darwin(v10);
  uint64_t v158 = (uint64_t)&v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for SDAirDropSendConnectionTelemetry(0LL);
  uint64_t v156 = *(void *)(v12 - 8);
  uint64_t v157 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v124 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v161 = (char *)&v124 - v16;
  uint64_t v17 = type metadata accessor for SFAirDrop.DeviceRelationship(0LL);
  uint64_t v134 = *(void *)(v17 - 8);
  uint64_t v135 = v17;
  __chkstk_darwin(v17);
  uint64_t v133 = (char *)&v124 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for SFAirDrop.TransferType(0LL);
  uint64_t v129 = *(void *)(v19 - 8);
  uint64_t v130 = v19;
  __chkstk_darwin(v19);
  uint64_t v128 = (char *)&v124 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_100183098(&qword_100649F58);
  __chkstk_darwin(v21);
  uint64_t v153 = (uint64_t)&v124 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v154 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v151 = *(void *)(v154 - 8);
  uint64_t v23 = __chkstk_darwin(v154);
  uint64_t v131 = (uint64_t)&v124 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  uint64_t v132 = (uint64_t)&v124 - v25;
  uint64_t v26 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult(0LL);
  uint64_t v149 = *(void *)(v26 - 8);
  uint64_t v150 = v26;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v124 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for SFAirDropSend.Failure(0LL);
  uint64_t v126 = *(void *)(v29 - 8);
  uint64_t v127 = v29;
  __chkstk_darwin(v29);
  uint64_t v125 = (char *)&v124 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = type metadata accessor for UUID(0LL);
  uint64_t v147 = *(void *)(v31 - 8);
  uint64_t v148 = v31;
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v124 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v145 = *(void *)(v34 - 8);
  uint64_t v146 = v34;
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v124 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = sub_100183098(&qword_100656490);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v124 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v40 = sub_100183098(&qword_1006475C8);
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v124 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001915A4(a6, (uint64_t)v42, &qword_1006475C8);
  uint64_t v43 = _s14descr1005D9BD1C13UploadRequestVMa(0LL);
  int v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48LL))(v42, 1LL, v43);
  uint64_t v160 = v15;
  if (v44 == 1)
  {
    sub_100187100((uint64_t)v42, &qword_1006475C8);
    uint64_t v144 = 0LL;
  }

  else
  {
    uint64_t v144 = *(void *)&v42[*(int *)(v43 + 20)];
    sub_1001A4BC8((uint64_t)v42, _s14descr1005D9BD1C13UploadRequestVMa);
  }

  sub_1001915A4(a7, (uint64_t)v39, &qword_100656490);
  uint64_t v45 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48))(v39, 1LL, v45);
  if ((_DWORD)v47 == 1)
  {
    sub_100187100((uint64_t)v39, &qword_100656490);
    char v48 = (const char *)0xE500000000000000LL;
  }

  else
  {
    SFNWInterfaceType.description.getter(v47);
    char v48 = v49;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v39, v45);
  }

  uint64_t v50 = sub_100183098(&qword_10064A7E8);
  uint64_t inited = swift_initStackObject(v50, v165);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CD1E0;
  *(void *)(inited + sub_100195658(v0 + 32) = 0x726566736E617274LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0xEA00000000004449LL;
  uint64_t v52 = SFAirDropSend.Request.id.getter();
  SFAirDrop.TransferIdentifier.id.getter(v52);
  uint64_t v53 = (*(uint64_t (**)(char *, uint64_t))(v145 + 8))(v36, v146);
  UUID.uuidString.getter(v53);
  os_log_type_t v55 = v54;
  (*(void (**)(char *, uint64_t))(v147 + 8))(v33, v148);
  NSString v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v55);
  *(void *)(inited + 48) = v56;
  *(void *)(inited + 56) = 1702521203LL;
  *(void *)(inited + 64) = 0xE400000000000000LL;
  *(NSNumber *)(inited + 72) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0x726F70736E617274LL;
  *(void *)(inited + 88) = 0xE900000000000074LL;
  NSString v57 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v48);
  *(void *)(inited + 96) = v57;
  *(void *)(inited + 104) = 0x746C75736572LL;
  *(void *)(inited + 112) = 0xE600000000000000LL;
  uint64_t v58 = v152;
  sub_100274F10();
  *(NSNumber *)(inited + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = Int._bridgeToObjectiveC()();
  strcpy((char *)(inited + 128), "failureSubType");
  *(_BYTE *)(inited + 143) = -18;
  uint64_t v59 = v149;
  uint64_t v60 = v58;
  uint64_t v61 = v150;
  (*(void (**)(char *, uint64_t, uint64_t))(v149 + 16))(v28, v60, v150);
  int v62 = (*(uint64_t (**)(char *, uint64_t))(v59 + 88))(v28, v61);
  uint64_t v63 = (uint64_t)v160;
  if (v62 == enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:))
  {
    (*(void (**)(char *, uint64_t))(v59 + 96))(v28, v61);
    uint64_t v65 = v125;
    uint64_t v64 = v126;
    uint64_t v66 = v127;
    uint64_t v67 = (*(uint64_t (**)(char *, char *, uint64_t))(v126 + 32))(v125, v28, v127);
    SFAirDropSend.Failure.errorDescription.getter(v67);
    uint64_t v69 = v68;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v28, v61);
    uint64_t v69 = (const char *)0xE400000000000000LL;
  }

  uint64_t v70 = (uint64_t)v161;
  NSString v71 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v69);
  *(void *)(inited + 144) = v71;
  uint64_t v72 = (const char *)sub_1003918B0(inited);
  uint64_t v73 = v153;
  sub_1001915A4(v155, v153, &qword_100649F58);
  uint64_t v74 = v154;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v151 + 48))(v73, 1LL, v154) == 1)
  {
    sub_100187100(v73, &qword_100649F58);
    uint64_t v75 = v136;
    if (*(void *)(v136 + 16))
    {
      sub_1002749C4(v136);
      uint64_t v77 = v76;
      NSString v78 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v77);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v72);
      v167[0] = (uint64_t)v72;
      sub_1003B3168((uint64_t)v78, 1701869940LL, (const char *)0xE400000000000000LL, isUniquelyReferenced_nonNull_native);
      uint64_t v80 = v167[0];
      swift_bridgeObjectRelease((const char *)0x8000000000000000LL);
      sub_100274B90(v75);
      Class isa = Int._bridgeToObjectiveC()().super.super.isa;
      char v82 = swift_isUniquelyReferenced_nonNull_native(v80);
      v167[0] = v80;
      sub_1003B3168((uint64_t)isa, 0x6C6F636F746F7270LL, (const char *)0xE800000000000000LL, v82);
      uint64_t v83 = v167[0];
      swift_bridgeObjectRelease((const char *)0x8000000000000000LL);
      sub_100274D54(v75);
      Class v84 = Int._bridgeToObjectiveC()().super.super.isa;
      char v85 = swift_isUniquelyReferenced_nonNull_native(v83);
      v167[0] = v83;
      sub_1003B3168((uint64_t)v84, 0xD000000000000010LL, (const char *)0x8000000100507B10LL, v85);
      uint64_t v72 = (const char *)v167[0];
      swift_bridgeObjectRelease((const char *)0x8000000000000000LL);
    }
  }

  else
  {
    uint64_t v86 = v132;
    uint64_t v87 = sub_1001A4B40(v73, v132, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v88 = (uint64_t)v128;
    SFAirDropSend.Request.type.getter(v87);
    sub_100275190(v88);
    uint64_t v90 = v89;
    (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v88, v130);
    uint64_t v91 = v63;
    NSString v92 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v90);
    char v93 = swift_isUniquelyReferenced_nonNull_native(v72);
    v167[0] = (uint64_t)v72;
    sub_1003B3168((uint64_t)v92, 1701869940LL, (const char *)0xE400000000000000LL, v93);
    uint64_t v94 = v167[0];
    swift_bridgeObjectRelease((const char *)0x8000000000000000LL);
    uint64_t v95 = v131;
    sub_1001A4B84(v86, v131, type metadata accessor for SDAirDropDiscoveredEndpoint);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v95, v74);
    sub_1001A4BC8(v95, (uint64_t (*)(void))off_1005D6F88[EnumCaseMultiPayload]);
    Class v97 = Int._bridgeToObjectiveC()().super.super.isa;
    char v98 = swift_isUniquelyReferenced_nonNull_native(v94);
    v167[0] = v94;
    sub_1003B3168((uint64_t)v97, 0x6C6F636F746F7270LL, (const char *)0xE800000000000000LL, v98);
    uint64_t v99 = v167[0];
    swift_bridgeObjectRelease((const char *)0x8000000000000000LL);
    id v100 = v133;
    sub_10020CBCC();
    SFAirDrop.DeviceRelationship.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v134 + 8))(v100, v135);
    Class v101 = Int._bridgeToObjectiveC()().super.super.isa;
    char v102 = swift_isUniquelyReferenced_nonNull_native(v99);
    v167[0] = v99;
    uint64_t v103 = (uint64_t)v101;
    uint64_t v63 = v91;
    sub_1003B3168(v103, 0xD000000000000010LL, (const char *)0x8000000100507B10LL, v102);
    uint64_t v72 = (const char *)v167[0];
    swift_bridgeObjectRelease((const char *)0x8000000000000000LL);
    sub_1001A4BC8(v86, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  uint64_t v104 = v162;
  uint64_t v105 = v158;
  sub_1001915A4(v159, v158, &qword_100649F70);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48))(v105, 1LL, v157) == 1)
  {
    sub_100187100(v105, &qword_100649F70);
  }

  else
  {
    sub_1001A4B40(v105, v70, type metadata accessor for SDAirDropSendConnectionTelemetry);
    id v106 = (const char *)sub_1001F931C();
    char v107 = swift_isUniquelyReferenced_nonNull_native(v72);
    v167[0] = (uint64_t)v72;
    sub_10027533C(v106, (uint64_t)sub_100275620, 0LL, v107, v167);
    uint64_t v72 = (const char *)v167[0];
    swift_bridgeObjectRelease((const char *)0x8000000000000000LL);
    if (qword_100644098 != -1) {
      swift_once(&qword_100644098, sub_100274934);
    }
    uint64_t v108 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v108, (uint64_t)qword_10064A738);
    uint64_t v109 = sub_1001A4B84(v70, v63, type metadata accessor for SDAirDropSendConnectionTelemetry);
    uint64_t v110 = (os_log_s *)Logger.logObject.getter(v109);
    uint64_t v111 = v63;
    os_log_type_t v112 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v110, v112))
    {
      uint64_t v113 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v114 = swift_slowAlloc(32LL, -1LL);
      v167[0] = v114;
      *(_DWORD *)uint64_t v113 = 136315138;
      uint64_t v115 = sub_1001F94E4();
      uint64_t v117 = (const char *)v116;
      uint64_t v164 = sub_10018CDB4(v115, v116, v167);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165, v113 + 4, v113 + 12);
      swift_bridgeObjectRelease(v117);
      sub_1001A4BC8(v111, type metadata accessor for SDAirDropSendConnectionTelemetry);
      _os_log_impl((void *)&_mh_execute_header, v110, v112, "Performance: %s", v113, 0xCu);
      swift_arrayDestroy(v114, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v114, -1LL, -1LL);
      unint64_t v118 = v113;
      uint64_t v104 = v162;
      swift_slowDealloc(v118, -1LL, -1LL);

      uint64_t v119 = (uint64_t)v161;
    }

    else
    {

      sub_1001A4BC8(v111, type metadata accessor for SDAirDropSendConnectionTelemetry);
      uint64_t v119 = v70;
    }

    sub_1001A4BC8(v119, type metadata accessor for SDAirDropSendConnectionTelemetry);
  }

  sub_1002766D8(v104, (uint64_t)v167);
  if (v167[1])
  {
    swift_bridgeObjectRetain(v137);
    swift_bridgeObjectRetain(v138);
    swift_bridgeObjectRetain(v139);
    swift_bridgeObjectRetain(v140);
    swift_bridgeObjectRetain(v141);
    sub_1001A4C04(v143, v142);
    NSString v120 = String._bridgeToObjectiveC()();
    char v121 = swift_isUniquelyReferenced_nonNull_native(v72);
    uint64_t v164 = (uint64_t)v72;
    sub_1003B3168((uint64_t)v120, 0xD000000000000012LL, (const char *)0x8000000100507B90LL, v121);
    uint64_t v72 = (const char *)v164;
    swift_bridgeObjectRelease((const char *)0x8000000000000000LL);
    sub_100276720(v104);
  }

  NSString v122 = String._bridgeToObjectiveC()();
  sub_1002759A4();
  Class v123 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v72);
  SFMetricsLog(v122, v123);
}

uint64_t sub_1002766D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_10064A120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100276720(uint64_t a1)
{
  return a1;
}

uint64_t sub_100276770( uint64_t a1, const char *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, const char *a7, uint64_t a8, const char *a9, uint64_t a10, const char *a11, uint64_t a12, unint64_t a13)
{
  if (a2)
  {
    *(void *)&double v15 = swift_bridgeObjectRelease(a2).n128_u64[0];
    *(void *)&double v16 = swift_bridgeObjectRelease(a4, v15).n128_u64[0];
    *(void *)&double v17 = swift_bridgeObjectRelease(a7, v16).n128_u64[0];
    *(void *)&double v18 = swift_bridgeObjectRelease(a9, v17).n128_u64[0];
    swift_bridgeObjectRelease(a11, v18);
    return sub_100189B0C(a12, a13);
  }

  return result;
}

void sub_1002767E4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = type metadata accessor for UUID(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (*(void *)(a2 + 16))
  {
    uint64_t v13 = sub_100183098(&qword_10064A7E8);
    uint64_t inited = swift_initStackObject(v13, v32);
    *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CD1E0;
    *(void *)(inited + sub_100195658(v0 + 32) = 0x726566736E617274LL;
    *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0xEA00000000004449LL;
    LODWORD(v3sub_10022D314(2, 1) = a3;
    uint64_t v15 = SFAirDropSend.Request.id.getter(inited);
    SFAirDrop.TransferIdentifier.id.getter(v15);
    uint64_t v16 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    UUID.uuidString.getter(v16);
    double v18 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
    *(void *)(inited + 48) = v19;
    *(void *)(inited + 56) = 1701869940LL;
    *(void *)(inited + 64) = 0xE400000000000000LL;
    sub_1002749C4(a2);
    uint64_t v21 = v20;
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21);
    *(void *)(inited + 72) = v22;
    *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0x6C6F636F746F7270LL;
    *(void *)(inited + 88) = 0xE800000000000000LL;
    sub_100274B90(a2);
    *(NSNumber *)(inited + 96) = Int._bridgeToObjectiveC()();
    *(void *)(inited + 104) = 0xD000000000000010LL;
    *(void *)(inited + 112) = 0x8000000100507B10LL;
    sub_100274D54(a2);
    *(NSNumber *)(inited + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = Int._bridgeToObjectiveC()();
    *(void *)(inited + 128) = 0xD000000000000015LL;
    *(void *)(inited + 136) = 0x8000000100507C20LL;
    *(NSNumber *)(inited + 144) = Bool._bridgeToObjectiveC()();
    uint64_t v23 = (const char *)sub_1003918B0(inited);
    NSString v24 = String._bridgeToObjectiveC()();
    sub_1002759A4();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v23);
    SFMetricsLog(v24, isa);
  }

  else
  {
    if (qword_100644098 != -1) {
      swift_once(&qword_100644098, sub_100274934);
    }
    uint64_t v26 = type metadata accessor for Logger(0LL);
    uint64_t v27 = sub_100186DE4(v26, (uint64_t)qword_10064A738);
    uint64_t v31 = (os_log_s *)Logger.logObject.getter(v27);
    os_log_type_t v28 = static os_log_type_t.error.getter(v31);
    if (os_log_type_enabled(v31, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v28, "No send endpoints for logging send start", v29, 2u);
      swift_slowDealloc(v29, -1LL, -1LL);
    }
  }

uint64_t type metadata accessor for SDAirDropContentHandleriTunesULinks()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary35SDAirDropContentHandleriTunesULinks);
}

uint64_t sub_100276B5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandleriTunesULinks();
  uint64_t result = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *a1 = result;
  return result;
}

void sub_100276B94(uint64_t a1, char a2)
{
  v3._uint64_t countAndFlagsBits = 95LL;
  v3._object = (void *)0xE100000000000000LL;
  String.append(_:)(v3);
  v4._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v4._object = "IWORK_LINK_WITH_TITLE";
  String.append(_:)(v4);
  swift_bridgeObjectRelease("IWORK_LINK_WITH_TITLE");
  if ((a2 & 1) != 0)
  {
    v5._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
    v5._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v5);
  }

  v6._uint64_t countAndFlagsBits = 0x545845545FLL;
  v6._object = (void *)0xE500000000000000LL;
  String.append(_:)(v6);
  uint64_t v7 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(&qword_1005D0BC8, 1LL, v7);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL);
  id v10 = (id)SFLocalizedStringForKey(v8, v9);

  if (v10)
  {
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    uint64_t v13 = v12;

    static String.localizedStringWithFormat(_:_:)(v11, v13, _swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(v13);
  }

  else
  {
    __break(1u);
  }

uint64_t sub_100276D34()
{
  return sub_100276D54(_s15MacApprovePhoneV4FlowVMa) & 1;
}

uint64_t sub_100276D54(uint64_t (*a1)(void))
{
  uint64_t v3 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  __chkstk_darwin(v3);
  Swift::String v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = a1(0LL);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v26 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v26 - v13;
  unint64_t v15 = *(void *)(v1 + *(int *)(v3 + 28));
  if (v15 - 9 < 2) {
    return 1LL;
  }
  BOOL v16 = v15 > 0xE;
  uint64_t v17 = (1LL << v15) & 0x618E;
  double v18 = (char *)&v26 - v13;
  if (v16 || v17 == 0)
  {
    sub_1001A4B84(v1, (uint64_t)v18, a1);
    sub_1001A4BC8((uint64_t)v14, a1);
    sub_1001A4B84(v1, (uint64_t)v12, a1);
  }

  else
  {
    sub_1001A4B84(v1, (uint64_t)v18, a1);
    sub_1001A4B84((uint64_t)v14, (uint64_t)v5, type metadata accessor for SDAuthenticationCommonOperationInput);
    sub_1001A4BC8((uint64_t)v14, a1);
    char v20 = v5[*(int *)(v3 + 32)];
    sub_1001A4BC8((uint64_t)v5, type metadata accessor for SDAuthenticationCommonOperationInput);
    sub_1001A4B84(v1, (uint64_t)v12, a1);
    if ((v20 & 1) == 0)
    {
      sub_1001A4BC8((uint64_t)v12, a1);
      return 1LL;
    }
  }

  unint64_t v22 = *(void *)&v12[*(int *)(v3 + 28)];
  BOOL v16 = v22 > 0xE;
  uint64_t v23 = (1LL << v22) & 0x658E;
  if (v16 || v23 == 0)
  {
    sub_1001A4B84((uint64_t)v12, (uint64_t)v9, a1);
    sub_1001A4B84((uint64_t)v9, (uint64_t)v5, type metadata accessor for SDAuthenticationCommonOperationInput);
    sub_1001A4BC8((uint64_t)v9, a1);
    sub_1001A4BC8((uint64_t)v12, a1);
    uint64_t v21 = v5[*(int *)(v3 + 32)];
    sub_1001A4BC8((uint64_t)v5, type metadata accessor for SDAuthenticationCommonOperationInput);
  }

  else
  {
    sub_1001A4B84((uint64_t)v12, (uint64_t)v9, a1);
    sub_1001A4BC8((uint64_t)v9, a1);
    sub_1001A4BC8((uint64_t)v12, a1);
    return 0LL;
  }

  return v21;
}

uint64_t sub_100276F90()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SDAuthenticationCommonOperationInput(0LL) + 28));
}

uint64_t sub_100276FB0()
{
  return sub_100276D54(_s10NanoWalletV4FlowVMa) & 1;
}

uint64_t sub_100276FD0()
{
  return sub_100276D54(_s6UnpairV4FlowVMa) & 1;
}

uint64_t sub_100276FF0()
{
  return sub_100276D54(_s15GuestModeUnlockV4FlowVMa) & 1;
}

uint64_t sub_100277010()
{
  return sub_100276D54(_s14MacUnlockPhoneV4FlowVMa) & 1;
}

uint64_t sub_100277030()
{
  return sub_100276D54(_s27GuestModeUnlockRegistrationV4FlowVMa) & 1;
}

uint64_t sub_100277050()
{
  return sub_100276D54(_s22GuestModeUnlockPairingV4FlowVMa) & 1;
}

uint64_t sub_100277070()
{
  return sub_100276D54(_s8KeyCheckV4FlowVMa) & 1;
}

uint64_t sub_100277094()
{
  return 0x100000000LL;
}

uint64_t sub_1002770B0()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064A8D8);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064A8D8);
  if (qword_100644020 != -1) {
    swift_once(&qword_100644020, sub_10023A520);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

void sub_100277140()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  sub_10019A708(v0 + 5, v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  Swift::String v5 = v4;
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  uint64_t v6 = sub_100183098(&qword_1006462D8);
  Optional.tryUnwrap(_:file:line:)( 0xD000000000000011LL,  0x8000000100507EC0LL,  0xD000000000000066LL,  0x8000000100507EE0LL,  55LL,  v6);
  swift_bridgeObjectRelease(v5, v7, v8);
}

uint64_t sub_10027720C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[23] = a2;
  v3[24] = a3;
  v3[22] = a1;
  uint64_t v4 = type metadata accessor for AuthenticationSecurityRequest(0LL);
  v3[25] = v4;
  v3[26] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Date(0LL);
  v3[27] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[28] = v6;
  unint64_t v7 = (*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[29] = swift_task_alloc(v7);
  v3[30] = swift_task_alloc(v7);
  return swift_task_switch(sub_1002772A4, 0LL, 0LL);
}

uint64_t sub_1002772A4()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  uint64_t v3 = 0LL;
  int v4 = *(unsigned __int8 *)(v1 + *(int *)(v2 + 32));
  switch(*(void *)(v1 + *(int *)(v2 + 28)))
  {
    case 0LL:
    case 2LL:
      break;
    case 1LL:
      BOOL v5 = v4 == 0;
      uint64_t v6 = 96LL;
      uint64_t v7 = 31LL;
      goto LABEL_15;
    case 5LL:
      uint64_t v3 = 34816LL;
      break;
    case 6LL:
      BOOL v5 = v4 == 0;
      uint64_t v6 = 47744LL;
      goto LABEL_10;
    case 7LL:
      BOOL v5 = v4 == 0;
      uint64_t v6 = 0x4000LL;
LABEL_10:
      uint64_t v7 = 2LL;
      goto LABEL_15;
    case 8LL:
    case 0xALL:
      uint64_t v3 = 128LL;
      break;
    case 9LL:
      BOOL v5 = v4 == 0;
      uint64_t v6 = 34816LL;
      goto LABEL_13;
    case 0xBLL:
      BOOL v5 = v4 == 0;
      uint64_t v6 = 43648LL;
LABEL_13:
      uint64_t v7 = 34818LL;
      goto LABEL_15;
    case 0xELL:
      BOOL v5 = v4 == 0;
      uint64_t v6 = 35456LL;
      uint64_t v7 = 34816LL;
LABEL_15:
      if (v5) {
        uint64_t v3 = v6;
      }
      else {
        uint64_t v3 = v7;
      }
      break;
    default:
      if (qword_100643F68 != -1) {
        swift_once(&qword_100643F68, sub_100220C68);
      }
      uint64_t v3 = qword_100669510;
      break;
  }

  sub_10019A6C4(*(void *)(v0 + 184), v0 + 56);
  uint64_t v8 = sub_100183098(&qword_100645A28);
  uint64_t v9 = sub_100183098(&qword_10064ACF0);
  if (swift_dynamicCast(v0 + 96, v0 + 56, v8, v9, 6LL))
  {
    sub_1001CE0D0((__int128 *)(v0 + 96), v0 + 16);
    uint64_t v10 = *(void *)(v0 + 40);
    uint64_t v11 = *(void *)(v0 + 48);
    sub_10019A708((void *)(v0 + 16), v10);
    (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
    sub_10018709C((void *)(v0 + 16));
  }

  else
  {
    *(void *)(v0 + 128) = 0LL;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    uint64_t v12 = sub_100187100(v0 + 96, &qword_10064ACF8);
    static Date.distantFuture.getter(v12);
  }

  if (qword_1006440A0 != -1) {
    swift_once(&qword_1006440A0, sub_1002770B0);
  }
  uint64_t v13 = *(void *)(v0 + 232);
  uint64_t v14 = *(void *)(v0 + 240);
  uint64_t v15 = *(void *)(v0 + 216);
  uint64_t v16 = *(void *)(v0 + 224);
  uint64_t v17 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v17, (uint64_t)qword_10064A8D8);
  double v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v19 = v18(v13, v14, v15);
  char v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v23 = *(void *)(v0 + 232);
  uint64_t v24 = *(void *)(v0 + 216);
  if (v22)
  {
    uint64_t v45 = *(void *)(v0 + 224);
    uint64_t v46 = v18;
    uint64_t v25 = swift_slowAlloc(22LL, -1LL);
    uint64_t v26 = swift_slowAlloc(64LL, -1LL);
    uint64_t v47 = v26;
    uint64_t v44 = v26;
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v27 = String.init<A>(describing:)(v26, &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy);
    uint64_t v29 = (const char *)v28;
    *(void *)(v0 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10018CDB4(v27, v28, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168, v25 + 4, v25 + 12);
    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v30 = sub_100183F14( (unint64_t *)&qword_100651A50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
    uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter(v24, v30);
    uint64_t v33 = (const char *)v32;
    *(void *)(v0 + 168) = sub_10018CDB4(v31, v32, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v25 + 14, v25 + 22);
    uint64_t v34 = v33;
    double v18 = v46;
    __n128 v35 = swift_bridgeObjectRelease(v34);
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, __n128))(v45 + 8);
    v36(v23, v24, v35);
    _os_log_impl( (void *)&_mh_execute_header,  v20,  v21,  "%s: using requestingDeviceUnlockDate: %s",  (uint8_t *)v25,  0x16u);
    swift_arrayDestroy(v44, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v44, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  else
  {
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, __n128))(*(void *)(v0 + 224) + 8LL);
    ((void (*)(void, void))v36)(*(void *)(v0 + 232), *(void *)(v0 + 216));
  }

  *(void *)(v0 + 248) = v36;
  uint64_t v37 = *(uint64_t **)(v0 + 208);
  uint64_t v38 = *(void **)(v0 + 192);
  v18((uint64_t)v37 + *(int *)(*(void *)(v0 + 200) + 20LL), *(void *)(v0 + 240), *(void *)(v0 + 216));
  *uint64_t v37 = v3;
  uint64_t v39 = (void *)(*sub_10019A708(v38, v38[3])
                 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
  swift_beginAccess(v39, v0 + 136, 0LL, 0LL);
  uint64_t v40 = *sub_10019A708(v39, v39[3]);
  uint64_t v41 = swift_task_alloc(32LL);
  *(void *)(v0 + 256) = v41;
  *(void *)(v41 + swift_unknownObjectWeakDestroy(v0 + 16) = v40;
  *(void *)(v41 + 24) = v37;
  uint64_t v42 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 264) = v42;
  *uint64_t v42 = v0;
  v42[1] = sub_100277754;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v42,  0LL,  0LL,  0x6F6974616C6F6976LL,  0xEF293A726F66286ELL,  sub_100284668,  v41,  (char *)&type metadata for () + 8);
}

uint64_t sub_100277754()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 264);
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    int v4 = sub_100277854;
  }

  else
  {
    swift_task_dealloc(*(void *)(v2 + 256));
    int v4 = sub_1002777C0;
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_1002777C0()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v5 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 184);
  sub_1001A4BC8(v5, type metadata accessor for AuthenticationSecurityRequest);
  v2(v1, v4);
  sub_10019A6C4(v6, v7);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100277854()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 216);
  swift_task_dealloc(*(void *)(v0 + 256));
  sub_1001A4BC8(v5, type metadata accessor for AuthenticationSecurityRequest);
  v1(v3, v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002778D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064ACEC);
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  return sub_10027720C(a1, a2, a3);
}

uint64_t sub_10027793C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch(sub_100277954, 0LL, 0LL);
}

id sub_100277954()
{
  id result = [(id)objc_opt_self(SDStatusMonitor) sharedMonitor];
  if (result)
  {
    uint64_t v2 = result;
    unsigned int v3 = [result bluetoothEnabled];

    if (v3)
    {
      sub_10019A6C4(*(void *)(v0 + 24), *(void *)(v0 + 16));
    }

    else
    {
      unint64_t v4 = sub_100187014();
      uint64_t v5 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v4, 0LL, 0LL);
      *(_DWORD *)uint64_t v6 = 17;
      *(void *)(v6 + 8) = 0xD000000000000015LL;
      *(void *)(v6 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000100507D00LL;
      swift_willThrow(v5);
    }

    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_100277A28(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064ACC4);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  void v5[2] = a1;
  v5[3] = a2;
  return swift_task_switch(sub_100277954, 0LL, 0LL);
}

uint64_t sub_100277A8C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch(sub_100277AA4, 0LL, 0LL);
}

id sub_100277AA4()
{
  id result = [(id)objc_opt_self(SDStatusMonitor) sharedMonitor];
  if (result)
  {
    uint64_t v2 = result;
    unsigned int v3 = [result wirelessEnabled];

    if (v3)
    {
      sub_10019A6C4(*(void *)(v0 + 24), *(void *)(v0 + 16));
    }

    else
    {
      unint64_t v4 = sub_100187014();
      uint64_t v5 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v4, 0LL, 0LL);
      *(_DWORD *)uint64_t v6 = 16;
      *(void *)(v6 + 8) = 0xD000000000000010LL;
      *(void *)(v6 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000100507D20LL;
      swift_willThrow(v5);
    }

    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_100277B78(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064ACCC);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  void v5[2] = a1;
  v5[3] = a2;
  return swift_task_switch(sub_100277AA4, 0LL, 0LL);
}

uint64_t sub_100277BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[8] = a2;
  void v3[9] = a3;
  v3[7] = a1;
  return swift_task_switch(sub_100277BF8, 0LL, 0LL);
}

uint64_t sub_100277BF8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  sub_10019A708((void *)(v0 + 16), v1);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(v1, v2) & 1) != 0)
  {
    sub_10019A6C4(*(void *)(v0 + 64), *(void *)(v0 + 56));
  }

  else
  {
    unint64_t v3 = sub_100187014();
    uint64_t v4 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v3, 0LL, 0LL);
    *(_DWORD *)uint64_t v5 = 18;
    *(void *)(v5 + 8) = 0xD000000000000025LL;
    *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x8000000100507D40LL;
    swift_willThrow(v4);
  }

  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100277CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064ACD4);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[8] = a2;
  v7[9] = a3;
  v7[7] = a1;
  return swift_task_switch(sub_100277BF8, 0LL, 0LL);
}

uint64_t sub_100277D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  void v3[9] = a1;
  return swift_task_switch(sub_100277D6C, 0LL, 0LL);
}

uint64_t sub_100277D6C()
{
  uint64_t v1 = *(void *)(v0 + 88);
  sub_10019A6C4(v1 + 40, v0 + 16);
  unint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for SDAuthenticationCommonOperationInput(0LL) + 28)) - 1LL;
  float v3 = 0.0;
  if (v2 <= 0xA) {
    float v3 = flt_1004D238C[v2];
  }
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  sub_10019A708((void *)(v0 + 16), v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 64))(v4, v5);
  float v8 = (float)((float)v7 / 10.0) + (float)v6;
  if (v3 <= v8)
  {
    sub_10019A6C4(*(void *)(v0 + 80), *(void *)(v0 + 72));
    sub_10018709C((void *)(v0 + 16));
    os_log_type_t v21 = *(uint64_t (**)(void))(v0 + 8);
  }

  else
  {
    if (qword_1006440A0 != -1) {
      swift_once(&qword_1006440A0, sub_1002770B0);
    }
    uint64_t v9 = type metadata accessor for Logger(0LL);
    uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_10064A8D8);
    uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc(22LL, -1LL);
      *(_DWORD *)uint64_t v13 = 134218240;
      *(double *)(v0 + 56) = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v13 + 4, v13 + 12);
      *(_WORD *)(v13 + 12) = 2048;
      *(double *)(v0 + 56) = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v13 + 14, v13 + 22);
      _os_log_impl( (void *)&_mh_execute_header,  v11,  v12,  "Remote Device version is unsupported. Need: %f, got: %f",  (uint8_t *)v13,  0x16u);
      swift_slowDealloc(v13, -1LL, -1LL);
    }

    _StringGuts.grow(_:)(55LL);
    *(void *)(v0 + 56) = 0LL;
    *(void *)(v0 + 64) = 0xE000000000000000LL;
    v14._object = (void *)0x8000000100507D70LL;
    v14._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
    String.append(_:)(v14);
    Float.write<A>(to:)( v0 + 56,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation,  v3);
    v15._uint64_t countAndFlagsBits = 0x203A746F67202CLL;
    v15._object = (void *)0xE700000000000000LL;
    String.append(_:)(v15);
    Float.write<A>(to:)( v0 + 56,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation,  v8);
    uint64_t v16 = *(void *)(v0 + 56);
    uint64_t v17 = *(void *)(v0 + 64);
    unint64_t v18 = sub_100187014();
    uint64_t v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v18, 0LL, 0LL);
    *(_DWORD *)uint64_t v20 = 15;
    *(void *)(v20 + 8) = v16;
    *(void *)(v20 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v17;
    swift_willThrow(v19);
    sub_10018709C((void *)(v0 + 16));
    os_log_type_t v21 = *(uint64_t (**)(void))(v0 + 8);
  }

  return v21();
}

uint64_t sub_100278018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064ACDC);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[10] = a2;
  v7[11] = a3;
  v7[9] = a1;
  return swift_task_switch(sub_100277D6C, 0LL, 0LL);
}

uint64_t sub_10027808C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  return swift_task_switch(sub_1002780A8, 0LL, 0LL);
}

uint64_t sub_1002780A8()
{
  uint64_t v1 = *(void **)(v0 + 104);
  uint64_t v33 = *(void **)(v0 + 88);
  sub_10019A6C4(*(void *)(v0 + 96), v0 + 16);
  uint64_t v2 = v1[8];
  uint64_t v3 = v1[9];
  sub_10019A708(v1 + 5, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v7);
  uint64_t v9 = (void (*)(uint64_t, void, __n128))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))( v0 + 56,  v7,  v8);
  uint64_t v11 = v10;
  uint64_t v12 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v13 = (uint64_t *)(v11 + *(int *)(v12 + 80));
  Swift::String v14 = (const char *)v13[1];
  *uint64_t v13 = v4;
  v13[1] = v6;
  __n128 v15 = swift_bridgeObjectRelease(v14);
  v9(v0 + 56, 0LL, v15);
  uint64_t v16 = v1[8];
  uint64_t v17 = v1[9];
  sub_10019A708(v1 + 5, v16);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v0 + 40);
  uint64_t v22 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v21);
  uint64_t v23 = (void (*)(uint64_t, void, __n128))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))( v0 + 56,  v21,  v22);
  uint64_t v25 = (uint64_t *)(v24 + *(int *)(v12 + 84));
  uint64_t v26 = (const char *)v25[1];
  *uint64_t v25 = v18;
  v25[1] = v20;
  __n128 v27 = swift_bridgeObjectRelease(v26);
  v23(v0 + 56, 0LL, v27);
  uint64_t v28 = *(void *)(v0 + 40);
  uint64_t v29 = *(void *)(v0 + 48);
  uint64_t v30 = sub_10019A708((void *)(v0 + 16), v28);
  __int128 v33[3] = v28;
  _OWORD v33[4] = *(void *)(v29 + 8);
  uint64_t v31 = sub_1001A4B04(v33);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16LL))(v31, v30, v28);
  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100278258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064ACE4);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[12] = a2;
  v7[13] = a3;
  v7[11] = a1;
  return swift_task_switch(sub_1002780A8, 0LL, 0LL);
}

uint64_t sub_1002782CC(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  uint64_t v3 = sub_100183098(&qword_1006457E8);
  v2[14] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100278328, 0LL, 0LL);
}

uint64_t sub_100278328()
{
  uint64_t v2 = *(void **)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void **)(v0 + 96);
  sub_1002499DC((uint64_t)v2, v0 + 16);
  uint64_t v4 = sub_10019A708(v2, v2[3]);
  Date.init()(v4);
  uint64_t v5 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v1, 0LL, 1LL, v5);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v6);
  uint64_t v8 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))( v0 + 64,  v6,  v7);
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  sub_100225008(v1, v10 + *(int *)(v11 + 28));
  v8(v0 + 64, 0LL);
  uint64_t v12 = *(void *)(v0 + 40);
  uint64_t v13 = *(void *)(v0 + 48);
  Swift::String v14 = sub_10019A708((void *)(v0 + 16), v12);
  v3[3] = v12;
  v3[4] = *(void *)(v13 + 8);
  __n128 v15 = sub_1001A4B04(v3);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16LL))(v15, v14, v12);
  sub_10018709C((void *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100278460(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064B304);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  return sub_1002782CC(a1, a2);
}

uint64_t sub_1002784B8(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  uint64_t v3 = sub_100183098(&qword_1006457E8);
  v2[14] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100278514, 0LL, 0LL);
}

uint64_t sub_100278514()
{
  uint64_t v2 = *(void **)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void **)(v0 + 96);
  sub_1002499DC((uint64_t)v2, v0 + 16);
  uint64_t v4 = sub_10019A708(v2, v2[3]);
  Date.init()(v4);
  uint64_t v5 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v1, 0LL, 1LL, v5);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v6);
  uint64_t v8 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))( v0 + 64,  v6,  v7);
  sub_100225008(v1, v9);
  v8(v0 + 64, 0LL);
  uint64_t v10 = *(void *)(v0 + 40);
  uint64_t v11 = *(void *)(v0 + 48);
  uint64_t v12 = sub_10019A708((void *)(v0 + 16), v10);
  v3[3] = v10;
  v3[4] = *(void *)(v11 + 8);
  uint64_t v13 = sub_1001A4B04(v3);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v13, v12, v10);
  sub_10018709C((void *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100278638(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064B2F4);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  return sub_1002784B8(a1, a2);
}

uint64_t sub_100278690(uint64_t a1, uint64_t a2)
{
  v2[26] = a1;
  v2[27] = a2;
  uint64_t v3 = sub_100183098(&qword_1006457E8);
  v2[28] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Date(0LL);
  v2[29] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[30] = v5;
  unint64_t v6 = (*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[31] = swift_task_alloc(v6);
  v2[32] = swift_task_alloc(v6);
  return swift_task_switch(sub_100278724, 0LL, 0LL);
}

uint64_t sub_100278724()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v28 = (void *)(v0 + 16);
  uint64_t v2 = sub_10019A6C4(v1, v0 + 16);
  Date.init()(v2);
  sub_10019A6C4(v1, v0 + 96);
  uint64_t v3 = sub_100183098(&qword_10064B310);
  uint64_t v4 = sub_100183098(&qword_10064ACF0);
  if ((swift_dynamicCast(v0 + 136, v0 + 96, v3, v4, 6LL) & 1) != 0)
  {
    uint64_t v6 = *(void *)(v0 + 248);
    uint64_t v5 = *(void *)(v0 + 256);
    uint64_t v8 = *(void *)(v0 + 232);
    uint64_t v7 = *(void *)(v0 + 240);
    sub_1001CE0D0((__int128 *)(v0 + 136), v0 + 56);
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v10 = *(void *)(v0 + 88);
    sub_10019A708((void *)(v0 + 56), v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v5, v6, v8);
    sub_10018709C((void *)(v0 + 56));
  }

  else
  {
    *(void *)(v0 + 168) = 0LL;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    sub_100187100(v0 + 136, &qword_10064ACF8);
  }

  uint64_t v26 = *(void *)(v0 + 256);
  uint64_t v27 = *(void *)(v0 + 248);
  uint64_t v12 = *(void *)(v0 + 232);
  uint64_t v11 = *(void *)(v0 + 240);
  uint64_t v13 = *(void *)(v0 + 224);
  Swift::String v14 = *(void **)(v0 + 208);
  (*(void (**)(uint64_t))(v11 + 16))(v13);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v13, 0LL, 1LL, v12);
  uint64_t v16 = *(void *)(v0 + 40);
  uint64_t v15 = *(void *)(v0 + 48);
  sub_1002499B4((uint64_t)v28, v16);
  uint64_t v17 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))( v0 + 176,  v16,  v15);
  uint64_t v19 = v18;
  uint64_t v20 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  sub_100225008(v13, v19 + *(int *)(v20 + 32));
  v17(v0 + 176, 0LL);
  uint64_t v21 = *(void *)(v0 + 40);
  uint64_t v22 = *(void *)(v0 + 48);
  uint64_t v23 = sub_10019A708(v28, v21);
  void v14[3] = v21;
  v14[4] = *(void *)(v22 + 8);
  uint64_t v24 = sub_1001A4B04(v14);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16LL))(v24, v23, v21);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v26, v12);
  sub_10018709C(v28);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100278970(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064B30C);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  return sub_100278690(a1, a2);
}

uint64_t sub_1002789C8(uint64_t a1, uint64_t a2)
{
  v2[11] = a1;
  v2[12] = a2;
  uint64_t v3 = sub_100183098(&qword_1006457E8);
  v2[13] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100278A24, 0LL, 0LL);
}

uint64_t sub_100278A24()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void **)(v0 + 88);
  uint64_t v3 = sub_10019A6C4(*(void *)(v0 + 96), v0 + 16);
  Date.init()(v3);
  uint64_t v4 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(v1, 0LL, 1LL, v4);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v5);
  uint64_t v7 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))( v0 + 56,  v5,  v6);
  uint64_t v9 = v8;
  uint64_t v10 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  sub_100225008(v1, v9 + *(int *)(v10 + 40));
  v7(v0 + 56, 0LL);
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v12 = *(void *)(v0 + 48);
  uint64_t v13 = sub_10019A708((void *)(v0 + 16), v11);
  v2[3] = v11;
  void v2[4] = *(void *)(v12 + 8);
  Swift::String v14 = sub_1001A4B04(v2);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v14, v13, v11);
  sub_10018709C((void *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100278B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064B3C4);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  return sub_1002789C8(a1, a2);
}

uint64_t sub_100278BA4(uint64_t a1, uint64_t a2)
{
  v2[11] = a1;
  v2[12] = a2;
  uint64_t v3 = sub_100183098(&qword_1006457E8);
  v2[13] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100278C00, 0LL, 0LL);
}

uint64_t sub_100278C00()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void **)(v0 + 88);
  uint64_t v3 = sub_10019A6C4(*(void *)(v0 + 96), v0 + 16);
  Date.init()(v3);
  uint64_t v4 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(v1, 0LL, 1LL, v4);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v5);
  uint64_t v7 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))( v0 + 56,  v5,  v6);
  uint64_t v9 = v8;
  uint64_t v10 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  sub_100225008(v1, v9 + *(int *)(v10 + 36));
  v7(v0 + 56, 0LL);
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v12 = *(void *)(v0 + 48);
  uint64_t v13 = sub_10019A708((void *)(v0 + 16), v11);
  v2[3] = v11;
  void v2[4] = *(void *)(v12 + 8);
  Swift::String v14 = sub_1001A4B04(v2);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v14, v13, v11);
  sub_10018709C((void *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100278D28(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064B31C);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  return sub_100278BA4(a1, a2);
}

uint64_t sub_100278D80(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  uint64_t v3 = sub_100183098(&qword_1006457E8);
  v2[14] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100278DDC, 0LL, 0LL);
}

uint64_t sub_100278DDC()
{
  uint64_t v2 = *(void **)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void **)(v0 + 96);
  sub_1002499DC((uint64_t)v2, v0 + 16);
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[5];
  sub_10019A708(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  uint64_t v6 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(v1, 0LL, 1LL, v6);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v7);
  uint64_t v9 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))( v0 + 64,  v7,  v8);
  uint64_t v11 = v10;
  uint64_t v12 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  sub_100225008(v1, v11 + *(int *)(v12 + 68));
  v9(v0 + 64, 0LL);
  uint64_t v13 = *(void *)(v0 + 40);
  uint64_t v14 = *(void *)(v0 + 48);
  uint64_t v15 = sub_10019A708((void *)(v0 + 16), v13);
  v3[3] = v13;
  v3[4] = *(void *)(v14 + 8);
  uint64_t v16 = sub_1001A4B04(v3);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16LL))(v16, v15, v13);
  sub_10018709C((void *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100278F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064B2FC);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  return sub_100278D80(a1, a2);
}

uint64_t sub_100278F84(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + sub_100195658(v0 + 32) = a2;
  return swift_task_switch(sub_100278F9C, 0LL, 0LL);
}

uint64_t sub_100278F9C()
{
  if (qword_1006440A0 != -1) {
    swift_once(&qword_1006440A0, sub_1002770B0);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_10064A8D8);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v6 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v15 = v6;
    uint64_t v7 = (const __CFString *)SFAuthenticationRegistrationSucceeded;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(SFAuthenticationRegistrationSucceeded);
    uint64_t v10 = (const char *)v9;
    *(void *)(v0 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = sub_10018CDB4(v8, v9, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v5 + 4, v5 + 12);
    swift_bridgeObjectRelease(v10, v15);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Posting darwin notification %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1LL, -1LL);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  else
  {

    uint64_t v7 = (const __CFString *)SFAuthenticationRegistrationSucceeded;
  }

  uint64_t v12 = *(void *)(v0 + 24);
  uint64_t v11 = *(void *)(v0 + 32);
  uint64_t v13 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(v13, v7, 0LL, 0LL, 1u);

  sub_10019A6C4(v11, v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100279174(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064B2AC);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  v5[3] = a1;
  v5[4] = a2;
  return swift_task_switch(sub_100278F9C, 0LL, 0LL);
}

uint64_t sub_1002791D8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return swift_task_switch(sub_1002791F0, 0LL, 0LL);
}

uint64_t sub_1002791F0()
{
  uint64_t v1 = (_OWORD *)(v0 + 96);
  sub_10019A6C4(*(void *)(v0 + 144), v0 + 56);
  uint64_t v2 = sub_100183098(&qword_10064AD08);
  uint64_t v3 = sub_100183098(&qword_10064AD10);
  int v4 = swift_dynamicCast(v0 + 96, v0 + 56, v2, v3, 6LL);
  uint64_t v5 = *(void **)(v0 + 144);
  if (v4) {
    goto LABEL_3;
  }
  *(void *)(v0 + 128) = 0LL;
  *uint64_t v1 = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_100187100(v0 + 96, &qword_10064AD18);
  sub_10019A6C4((uint64_t)v5, v0 + 56);
  uint64_t v6 = sub_100183098(&qword_10064AD20);
  int v7 = swift_dynamicCast(v0 + 96, v0 + 56, v2, v6, 6LL);
  uint64_t v5 = *(void **)(v0 + 144);
  if (v7)
  {
LABEL_3:
    uint64_t v8 = *(void **)(v0 + 136);
    sub_1001CE0D0((__int128 *)(v0 + 96), v0 + 16);
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t v10 = *(void *)(v0 + 48);
    sub_1002499B4(v0 + 16, v9);
    uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    uint64_t v12 = v5[3];
    uint64_t v13 = v5[4];
    sub_10019A708(v5, v12);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
    unint64_t v16 = v15;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100189B20(v14, v16);
    [v11 setAwdlInfo:isa];

    uint64_t v18 = *(void *)(v0 + 40);
    uint64_t v19 = *(void *)(v0 + 48);
    uint64_t v20 = sub_10019A708((void *)(v0 + 16), v18);
    v8[3] = v18;
    v8[4] = *(void *)(v19 + 8);
    uint64_t v21 = sub_1001A4B04(v8);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16LL))(v21, v20, v18);
    sub_10018709C((void *)(v0 + 16));
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  }

  else
  {
    *(void *)(v0 + 128) = 0LL;
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    sub_100187100(v0 + 96, &qword_10064AD28);
    _StringGuts.grow(_:)(114LL);
    *(void *)(v0 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0LL;
    *(void *)(v0 + 24) = 0xE000000000000000LL;
    _print_unlocked<A, B>(_:_:)( v5,  v0 + 16,  v2,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
    v23._object = (void *)0x8000000100507DA0LL;
    v23._uint64_t countAndFlagsBits = 0xD000000000000070LL;
    String.append(_:)(v23);
    uint64_t v24 = *(void *)(v0 + 16);
    uint64_t v25 = *(void *)(v0 + 24);
    unint64_t v26 = sub_100187014();
    uint64_t v27 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v26, 0LL, 0LL);
    *(_DWORD *)uint64_t v28 = 10;
    *(void *)(v28 + 8) = v24;
    *(void *)(v28 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v25;
    swift_willThrow(v27);
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  }

  return v22();
}

uint64_t sub_10027946C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064AD04);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  v5[17] = a1;
  v5[18] = a2;
  return swift_task_switch(sub_1002791F0, 0LL, 0LL);
}

uint64_t sub_1002794D0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 272) = a1;
  *(void *)(v2 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a2;
  return swift_task_switch(sub_1002794E8, 0LL, 0LL);
}

uint64_t sub_1002794E8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_10019A708(v0 + 2, v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  unint64_t v5 = v4;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100189B20(v3, v5);
  id v7 = sub_100089EF4(isa);

  if (!v7)
  {
    unint64_t v23 = sub_100187014();
    uint64_t v24 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v23, 0LL, 0LL);
    *(_DWORD *)uint64_t v25 = 1;
    *(void *)(v25 + 8) = 0xD000000000000033LL;
    *(void *)(v25 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x8000000100508210LL;
    swift_willThrow(v24);
    sub_10018709C(v0 + 2);
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }

  uint64_t v8 = (const char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v7,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
  v0[36] = v8;

  id v9 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v10 = String._bridgeToObjectiveC()();
  unsigned int v11 = [v9 BOOLForKey:v10];

  if (v11)
  {
    swift_bridgeObjectRelease(v8);
    if (qword_1006440A0 != -1) {
      swift_once(&qword_1006440A0, sub_1002770B0);
    }
    uint64_t v12 = type metadata accessor for Logger(0LL);
    uint64_t v13 = sub_100186DE4(v12, (uint64_t)qword_10064A8D8);
    uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      unint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v16 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  v15,  "Default classCUnlockSkipRanging is set. Skipping ranging",  v16,  2u);
      swift_slowDealloc(v16, -1LL, -1LL);
    }

    uint64_t v17 = (void *)v0[34];

    uint64_t v18 = v0[5];
    uint64_t v19 = v0[6];
    uint64_t v20 = sub_10019A708(v0 + 2, v18);
    v17[3] = v18;
    v17[4] = *(void *)(*(void *)(v19 + 8) + 8LL);
    uint64_t v21 = sub_1001A4B04(v17);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16LL))(v21, v20, v18);
    sub_10018709C(v0 + 2);
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }

  if (qword_1006440A0 != -1) {
    swift_once(&qword_1006440A0, sub_1002770B0);
  }
  uint64_t v27 = type metadata accessor for Logger(0LL);
  uint64_t v28 = sub_100186DE4(v27, (uint64_t)qword_10064A8D8);
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Starting ranging as initiator", v31, 2u);
    swift_slowDealloc(v31, -1LL, -1LL);
  }

  unint64_t v32 = (void *)v0[35];

  uint64_t v34 = v0[5];
  uint64_t v33 = v0[6];
  sub_10019A708(v0 + 2, v34);
  (*(void (**)(uint64_t))(*(void *)(v33 + 8) + 16LL))(v34);
  sub_10019A708(v0 + 14, v0[17]);
  uint64_t v35 = v32[3];
  uint64_t v36 = v32[5];
  sub_10019A708(v32, v35);
  uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 16))(v35, v36);
  uint64_t v39 = v38;
  v0[37] = v37;
  v0[38] = v38;
  uint64_t v40 = (void *)swift_task_alloc(dword_10064CBDC);
  v0[39] = v40;
  *uint64_t v40 = v0;
  v40[1] = sub_1002798FC;
  return sub_1002C0EAC((uint64_t)v8, v37, v39);
}

uint64_t sub_1002798FC(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 312);
  *(void *)(*v2 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v1;
  swift_task_dealloc(v5);
  uint64_t v7 = *(void *)(v4 + 296);
  unint64_t v6 = *(void *)(v4 + 304);
  uint64_t v8 = *(const char **)(v4 + 288);
  if (v1)
  {
    sub_100189B20(*(void *)(v4 + 296), *(void *)(v4 + 304));
    swift_bridgeObjectRelease(v8);
    id v9 = sub_100279B9C;
  }

  else
  {
    swift_bridgeObjectRelease(*(const char **)(v4 + 288));
    *(_BYTE *)(v4 + 328) = a1 & 1;
    sub_100189B20(v7, v6);
    id v9 = sub_1002799AC;
  }

  return swift_task_switch(v9, 0LL, 0LL);
}

uint64_t sub_1002799AC()
{
  char v1 = *(_BYTE *)(v0 + 328);
  sub_10018709C((void *)(v0 + 112));
  if ((v1 & 1) != 0)
  {
    sub_1002499DC(v0 + 16, v0 + 64);
    uint64_t v2 = sub_100183098(&qword_10064B3D0);
    uint64_t v3 = sub_100183098(&qword_10064B3D8);
    int v4 = swift_dynamicCast(v0 + 192, v0 + 64, v2, v3, 6LL);
    uint64_t v5 = *(void **)(v0 + 272);
    if (v4)
    {
      sub_1001CE0D0((__int128 *)(v0 + 192), v0 + 152);
      uint64_t v6 = *(void *)(v0 + 176);
      uint64_t v7 = *(void *)(v0 + 184);
      sub_1002499B4(v0 + 152, v6);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(1LL, v6, v7);
      sub_10019A6C4(v0 + 152, v0 + 232);
      uint64_t v8 = sub_100183098(&qword_100645A28);
      swift_dynamicCast(v5, v0 + 232, v3, v8, 7LL);
      sub_10018709C((void *)(v0 + 152));
    }

    else
    {
      *(void *)(v0 + 224) = 0LL;
      *(_OWORD *)(v0 + 192) = 0u;
      *(_OWORD *)(v0 + 208) = 0u;
      sub_100187100(v0 + 192, &qword_10064B3E0);
      uint64_t v15 = *(void *)(v0 + 40);
      uint64_t v16 = *(void *)(v0 + 48);
      uint64_t v17 = sub_10019A708((void *)(v0 + 16), v15);
      v5[3] = v15;
      v5[4] = *(void *)(*(void *)(v16 + 8) + 8LL);
      uint64_t v18 = sub_1001A4B04(v5);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16LL))(v18, v17, v15);
    }

    sub_10018709C((void *)(v0 + 16));
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  }

  else
  {
    type metadata accessor for SFAuthenticationError(0LL);
    uint64_t v10 = v9;
    uint64_t v11 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
    uint64_t v12 = swift_allocError(v10, v11, 0LL, 0LL);
    *uint64_t v13 = 9;
    swift_willThrow(v12);
    sub_10018709C((void *)(v0 + 16));
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  }

  return v14();
}

uint64_t sub_100279B9C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100279BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064B3CC);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  v5[34] = a1;
  v5[35] = a2;
  return swift_task_switch(sub_1002794E8, 0LL, 0LL);
}

uint64_t sub_100279C40(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return swift_task_switch(sub_100279C58, 0LL, 0LL);
}

uint64_t sub_100279C58()
{
  char v1 = *(void **)(v0 + 64);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10019A708(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  unint64_t v6 = v5;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100189B20(v4, v6);
  id v8 = sub_100089EF4(isa);

  if (v8)
  {
    uint64_t v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v8,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
    *(void *)(v0 + 72) = v9;

    if (qword_1006440A0 != -1) {
      swift_once(&qword_1006440A0, sub_1002770B0);
    }
    uint64_t v10 = type metadata accessor for Logger(0LL);
    uint64_t v11 = sub_100186DE4(v10, (uint64_t)qword_10064A8D8);
    *(void *)(v0 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v11;
    uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Starting ranging", v14, 2u);
      swift_slowDealloc(v14, -1LL, -1LL);
    }

    uint64_t v15 = *(void **)(v0 + 64);

    uint64_t v17 = v1[3];
    uint64_t v16 = v1[4];
    sub_10019A708(v15, v17);
    (*(void (**)(uint64_t))(*(void *)(v16 + 8) + 16LL))(v17);
    sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v18 = v1[3];
    uint64_t v19 = v1[5];
    sub_10019A708(v15, v18);
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
    uint64_t v22 = v21;
    *(void *)(v0 + 88) = v20;
    *(void *)(v0 + 96) = v21;
    unint64_t v23 = (void *)swift_task_alloc(dword_10064CBE4);
    *(void *)(v0 + 104) = v23;
    *unint64_t v23 = v0;
    v23[1] = sub_100279EE4;
    return sub_1002C27A8(v9, v20, v22);
  }

  else
  {
    unint64_t v25 = sub_100187014();
    uint64_t v26 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v25, 0LL, 0LL);
    *(_DWORD *)uint64_t v27 = 1;
    *(void *)(v27 + 8) = 0xD000000000000033LL;
    *(void *)(v27 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x8000000100508210LL;
    swift_willThrow(v26);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_100279EE4()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 104LL);
  *(void *)(*(void *)v1 + 112LL) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = v2[11];
  unint64_t v5 = v2[12];
  unint64_t v6 = (const char *)v2[9];
  if (v0)
  {
    sub_100189B20(v4, v5);
    swift_bridgeObjectRelease(v6);
    uint64_t v7 = sub_10027A070;
  }

  else
  {
    swift_bridgeObjectRelease(v6);
    sub_100189B20(v4, v5);
    uint64_t v7 = sub_100279F80;
  }

  return swift_task_switch(v7, 0LL, 0LL);
}

uint64_t sub_100279F80()
{
  uint64_t v1 = sub_10018709C((void *)(v0 + 16));
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Ranging started", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  unint64_t v6 = *(void **)(v0 + 56);
  unint64_t v5 = *(void **)(v0 + 64);

  uint64_t v7 = v5[3];
  uint64_t v8 = v5[4];
  uint64_t v9 = sub_10019A708(v5, v7);
  v6[3] = v7;
  void v6[4] = *(void *)(*(void *)(v8 + 8) + 8LL);
  uint64_t v10 = sub_1001A4B04(v6);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v10, v9, v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027A070()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027A0A4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc(dword_10064B3BC);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100195708;
  v5[7] = a1;
  v5[8] = a2;
  return swift_task_switch(sub_100279C58, 0LL, 0LL);
}

uint64_t sub_10027A108(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return swift_task_switch(sub_10027A120, 0LL, 0LL);
}

uint64_t sub_10027A120()
{
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10019A708(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40));
  unsigned __int8 v4 = sub_10043EEFC();
  sub_10018709C((void *)(v0 + 16));
  if ((v4 & 1) != 0)
  {
    unint64_t v5 = *(void **)(v0 + 56);
    uint64_t v6 = v1[3];
    uint64_t v7 = v1[4];
    uint64_t v8 = sub_10019A708(*(void **)(v0 + 64), v6);
    v5[3] = v6;
    v5[4] = *(void *)(v7 + 8);
    uint64_t v9 = sub_1001A4B04(v5);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v9, v8, v6);
  }

  else
  {
    unint64_t v10 = sub_100187014();
    uint64_t v11 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v10, 0LL, 0LL);
    *(_DWORD *)uint64_t v12 = 33;
    *(void *)(v12 + 8) = 0x62616E6520746F4ELL;
    *(void *)(v12 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0xEB0000000064656CLL;
    swift_willThrow(v11);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027A244(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc(dword_10064AD4C);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100195708;
  v5[7] = a1;
  v5[8] = a2;
  return swift_task_switch(sub_10027A120, 0LL, 0LL);
}

uint64_t sub_10027A2A8(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  unint64_t v3 = (*(void *)(*(void *)(sub_100183098(&qword_1006457E8) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  void v2[4] = swift_task_alloc(v3);
  v2[5] = swift_task_alloc(v3);
  v2[6] = swift_task_alloc(v3);
  uint64_t v4 = type metadata accessor for Date(0LL);
  v2[7] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[8] = v5;
  unint64_t v6 = (*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  void v2[9] = swift_task_alloc(v6);
  v2[10] = swift_task_alloc(v6);
  return swift_task_switch(sub_10027A358, 0LL, 0LL);
}

uint64_t sub_10027A358()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = (void *)v0[3];
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  sub_10019A708(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v7(v3, 1LL, v1) == 1)
  {
    sub_100187100(v0[6], &qword_1006457E8);
    unint64_t v8 = sub_100187014();
    uint64_t v9 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v8, 0LL, 0LL);
    *(_DWORD *)uint64_t v10 = 11;
    strcpy((char *)(v10 + 8), "Unregistered");
    *(_BYTE *)(v10 + 2sub_10022D314(2, 1) = 0;
    *(_WORD *)(v10 + 22) = -5120;
    swift_willThrow(v9);
  }

  else
  {
    uint64_t v11 = v0[7];
    uint64_t v12 = v0[5];
    os_log_type_t v13 = (void *)v0[3];
    uint64_t v14 = *(void (**)(uint64_t, void, uint64_t))(v0[8] + 32LL);
    v14(v0[10], v0[6], v11);
    uint64_t v15 = v4[3];
    uint64_t v16 = v4[5];
    sub_10019A708(v13, v15);
    (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
    int v17 = v7(v12, 1LL, v11);
    uint64_t v18 = v0[10];
    if (v17 == 1)
    {
      uint64_t v19 = v0[7];
      uint64_t v20 = v0[8];
      sub_100187100(v0[5], &qword_1006457E8);
      _StringGuts.grow(_:)(38LL);
      swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
      strcpy((char *)v70, "Registered on ");
      HIBYTE(v70[1]) = -18;
      uint64_t v21 = sub_100183F14( (unint64_t *)&qword_100651A50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
      v22._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v19, v21);
      object = (const char *)v22._object;
      String.append(_:)(v22);
      swift_bridgeObjectRelease(object);
      v24._uint64_t countAndFlagsBits = 0xD000000000000016LL;
      v24._object = (void *)0x80000001005081B0LL;
      String.append(_:)(v24);
      uint64_t v25 = v70[0];
      uint64_t v26 = v70[1];
      unint64_t v27 = sub_100187014();
      uint64_t v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v27, 0LL, 0LL);
      *(_DWORD *)uint64_t v29 = 36;
      *(void *)(v29 + 8) = v25;
      *(void *)(v29 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v26;
      swift_willThrow(v28);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }

    else
    {
      uint64_t v30 = v0[9];
      uint64_t v31 = v0[7];
      v14(v30, v0[5], v31);
      uint64_t v32 = sub_100183F14( (unint64_t *)&unk_100656470,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
      if ((dispatch thunk of static Comparable.< infix(_:_:)(v30, v18, v31, v32) & 1) == 0)
      {
        uint64_t v57 = v0[9];
        uint64_t v56 = v0[10];
        uint64_t v58 = v0[7];
        uint64_t v59 = v0[8];
        uint64_t v60 = v0[6];
        uint64_t v67 = v0[5];
        uint64_t v69 = v0[4];
        uint64_t v61 = (void *)v0[2];
        uint64_t v63 = v4[3];
        uint64_t v62 = v4[4];
        uint64_t v64 = sub_10019A708((void *)v0[3], v63);
        v61[3] = v63;
        v61[4] = *(void *)(v62 + 8);
        uint64_t v65 = sub_1001A4B04(v61);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 16LL))(v65, v64, v63);
        uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
        v66(v57, v58);
        v66(v56, v58);
        swift_task_dealloc(v56);
        swift_task_dealloc(v57);
        swift_task_dealloc(v60);
        swift_task_dealloc(v67);
        swift_task_dealloc(v69);
        uint64_t v54 = (uint64_t (*)(void))v0[1];
        return v54();
      }

      uint64_t v33 = v0[10];
      uint64_t v68 = v0[9];
      v70[0] = 0LL;
      uint64_t v34 = v0[7];
      uint64_t v35 = v0[8];
      uint64_t v37 = (void *)v0[3];
      uint64_t v36 = v0[4];
      v70[1] = 0xE000000000000000LL;
      _StringGuts.grow(_:)(57LL);
      v38._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
      v38._object = (void *)0x80000001005081D0LL;
      String.append(_:)(v38);
      uint64_t v39 = sub_100183F14( (unint64_t *)&qword_100651A50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
      v40._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v34, v39);
      uint64_t v41 = (const char *)v40._object;
      String.append(_:)(v40);
      swift_bridgeObjectRelease(v41);
      v42._object = (void *)0x80000001005081F0LL;
      v42._uint64_t countAndFlagsBits = 0xD000000000000010LL;
      String.append(_:)(v42);
      uint64_t v43 = v4[3];
      uint64_t v44 = v4[5];
      sub_10019A708(v37, v43);
      (*(void (**)(uint64_t, uint64_t))(v44 + 16))(v43, v44);
      DefaultStringInterpolation.appendInterpolation<A>(_:)(v36, v34, v39);
      sub_100187100(v36, &qword_1006457E8);
      v45._uint64_t countAndFlagsBits = 0x736C616620736920LL;
      v45._object = (void *)0xE900000000000065LL;
      String.append(_:)(v45);
      unint64_t v46 = sub_100187014();
      uint64_t v47 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v46, 0LL, 0LL);
      *(_DWORD *)uint64_t v48 = 36;
      *(void *)(v48 + 8) = 0LL;
      *(void *)(v48 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0xE000000000000000LL;
      swift_willThrow(v47);
      uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
      v49(v68, v34);
      v49(v33, v34);
    }
  }

  uint64_t v50 = v0[9];
  uint64_t v52 = v0[5];
  uint64_t v51 = v0[6];
  uint64_t v53 = v0[4];
  swift_task_dealloc(v0[10]);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  uint64_t v54 = (uint64_t (*)(void))v0[1];
  return v54();
}

uint64_t sub_10027A854(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064B3AC);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  return sub_10027A2A8(a1, a2);
}

uint64_t sub_10027A8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  uint64_t v4 = sub_100183098(&qword_1006457E8);
  v3[15] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10027A90C, 0LL, 0LL);
}

uint64_t sub_10027A90C()
{
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v7 + *(int *)(v8 + 36), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    sub_1001CE0D0((__int128 *)(v0 + 56), v0 + 16);
    uint64_t v9 = *(void *)(*sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40))
                   + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
    uint64_t v10 = *(os_unfair_lock_s **)(v9 + 112);
    uint64_t v11 = (void *)swift_task_alloc(48LL);
    v11[2] = v9;
    v11[3] = v4;
    v11[4] = v6;
    uint64_t v12 = swift_task_alloc(32LL);
    *(void *)(v12 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = sub_100284808;
    *(void *)(v12 + 24) = v11;
    v10 += 4;
    os_unfair_lock_lock(v10);
    sub_100271B1C(*(void *(**)(uint64_t *__return_ptr))(v12 + 16), v40);
    os_unfair_lock_unlock(v10);
    char v16 = v40[0];
    swift_task_dealloc(v12);
    swift_task_dealloc(v11);
    if ((v16 & 1) != 0)
    {
      swift_bridgeObjectRelease(v6);
      if (qword_1006440A0 != -1) {
        swift_once(&qword_1006440A0, sub_1002770B0);
      }
      uint64_t v17 = type metadata accessor for Logger(0LL);
      uint64_t v18 = sub_100186DE4(v17, (uint64_t)qword_10064A8D8);
      uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
      os_log_type_t v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  v20,  "Just paired and armed, no need for registration yet",  v21,  2u);
        swift_slowDealloc(v21, -1LL, -1LL);
      }

      goto LABEL_13;
    }

    uint64_t v29 = *(void *)(*sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40))
                    + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
    uint64_t v30 = *(os_unfair_lock_s **)(v29 + 112);
    uint64_t v31 = (void *)swift_task_alloc(48LL);
    v31[2] = v29;
    v31[3] = v4;
    v31[4] = v6;
    uint64_t v32 = swift_task_alloc(32LL);
    *(void *)(v32 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = sub_100284BA0;
    *(void *)(v32 + 24) = v31;
    os_unfair_lock_lock(v30 + 4);
    sub_1002737FC(v33, *(uint64_t (**)(void))(v32 + 16));
    os_unfair_lock_unlock(v30 + 4);
    uint64_t v34 = *(void *)(v0 + 120);
    swift_bridgeObjectRelease(v6);
    swift_task_dealloc(v32);
    swift_task_dealloc(v31);
    uint64_t v35 = type metadata accessor for Date(0LL);
    int v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48LL))(v34, 1LL, v35);
    sub_100187100(v34, &qword_1006457E8);
    if (v36 != 1)
    {
      sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40));
      sub_1002855CC();
LABEL_13:
      uint64_t v22 = *(void *)(v0 + 120);
      Swift::String v24 = *(void **)(v0 + 96);
      unint64_t v23 = *(void **)(v0 + 104);
      uint64_t v25 = v23[3];
      uint64_t v26 = v23[4];
      unint64_t v27 = sub_10019A708(v23, v25);
      uint64_t v24[3] = v25;
      v24[4] = *(void *)(v26 + 8);
      uint64_t v28 = sub_1001A4B04(v24);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16LL))(v28, v27, v25);
      sub_10018709C((void *)(v0 + 16));
      swift_task_dealloc(v22);
      uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
      return v1();
    }

    unint64_t v37 = sub_100187014();
    uint64_t v38 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v37, 0LL, 0LL);
    *(_DWORD *)uint64_t v39 = 11;
    strcpy((char *)(v39 + 8), "Unregistered");
    *(_BYTE *)(v39 + 2sub_10022D314(2, 1) = 0;
    *(_WORD *)(v39 + 22) = -5120;
    swift_willThrow(v38);
    sub_10018709C((void *)(v0 + 16));
  }

  else
  {
    sub_100187100(v0 + 56, &qword_100650060);
    unint64_t v13 = sub_100187014();
    uint64_t v14 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v13, 0LL, 0LL);
    *(_DWORD *)uint64_t v15 = 37;
    *(void *)(v15 + 8) = 0xD000000000000027LL;
    *(void *)(v15 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v14);
    swift_bridgeObjectRelease(v6);
  }

  swift_task_dealloc(*(void *)(v0 + 120));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10027AD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064AD9C);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  return sub_10027A8AC(a1, a2, a3);
}

uint64_t sub_10027AD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  uint64_t v4 = sub_100183098(&qword_1006457E8);
  v3[15] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10027ADF0, 0LL, 0LL);
}

uint64_t sub_10027ADF0()
{
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v7 + *(int *)(v8 + 36), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    sub_1001CE0D0((__int128 *)(v0 + 56), v0 + 16);
    uint64_t v9 = *(void *)(*sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40))
                   + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
    uint64_t v10 = *(os_unfair_lock_s **)(v9 + 112);
    uint64_t v11 = (void *)swift_task_alloc(48LL);
    v11[2] = v9;
    v11[3] = v4;
    v11[4] = v6;
    uint64_t v12 = swift_task_alloc(32LL);
    *(void *)(v12 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = sub_100284BA0;
    *(void *)(v12 + 24) = v11;
    v10 += 4;
    os_unfair_lock_lock(v10);
    sub_1002737FC(v13, *(uint64_t (**)(void))(v12 + 16));
    os_unfair_lock_unlock(v10);
    swift_task_dealloc(v12);
    uint64_t v17 = *(void *)(v0 + 120);
    swift_task_dealloc(v11);
    uint64_t v18 = type metadata accessor for Date(0LL);
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48LL))(v17, 1LL, v18);
    uint64_t v20 = *(void *)(v0 + 120);
    if (v19 == 1)
    {
      swift_bridgeObjectRelease(v6);
      sub_100187100(v20, &qword_1006457E8);
      unint64_t v21 = sub_100187014();
      uint64_t v22 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v21, 0LL, 0LL);
      *(_DWORD *)uint64_t v23 = 11;
      strcpy((char *)(v23 + 8), "Unregistered");
      *(_BYTE *)(v23 + 2sub_10022D314(2, 1) = 0;
      *(_WORD *)(v23 + 22) = -5120;
      swift_willThrow(v22);
      Swift::String v24 = (void *)(v0 + 16);
LABEL_9:
      sub_10018709C(v24);
      goto LABEL_2;
    }

    sub_100187100(*(void *)(v0 + 120), &qword_1006457E8);
    uint64_t v25 = *(void *)(*sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40))
                    + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
    uint64_t v26 = *(os_unfair_lock_s **)(v25 + 112);
    unint64_t v27 = (void *)swift_task_alloc(48LL);
    v27[2] = v25;
    v27[3] = v4;
    v27[4] = v6;
    uint64_t v28 = swift_task_alloc(32LL);
    *(void *)(v28 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = sub_100284BB4;
    *(void *)(v28 + 24) = v27;
    os_unfair_lock_lock(v26 + 4);
    (*(void (**)(void *__return_ptr))(v28 + 16))(v49);
    uint64_t v30 = v49[0];
    uint64_t v29 = (const char *)v49[1];
    os_unfair_lock_unlock(v26 + 4);
    swift_bridgeObjectRelease(v6);
    swift_task_dealloc(v28);
    swift_task_dealloc(v27);
    if (v29)
    {
      uint64_t v31 = *(void **)(v0 + 104);
      uint64_t v32 = sub_10019A708(v31, v31[3]);
      uint64_t v33 = (void *)((char *)v32 + *(int *)(_s8KeyCheckV21HandleKeyCheckContextVMa(0LL) + 28));
      uint64_t v34 = (const char *)v33[1];
      if (v30 == *v33 && v29 == v34)
      {
        swift_bridgeObjectRelease(v29);
LABEL_16:
        uint64_t v41 = *(void *)(v0 + 120);
        uint64_t v43 = *(void **)(v0 + 96);
        Swift::String v42 = *(void **)(v0 + 104);
        uint64_t v44 = v31[3];
        uint64_t v45 = v42[4];
        unint64_t v46 = sub_10019A708(v42, v44);
        v43[3] = v44;
        v43[4] = *(void *)(v45 + 8);
        uint64_t v47 = sub_1001A4B04(v43);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 16LL))(v47, v46, v44);
        sub_10018709C((void *)(v0 + 16));
        swift_task_dealloc(v41);
        uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
        return v1();
      }

      char v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v29, *v33, v34, 0LL);
      swift_bridgeObjectRelease(v29);
      if ((v40 & 1) != 0) {
        goto LABEL_16;
      }
      unint64_t v48 = sub_100187014();
      uint64_t v36 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v48, 0LL, 0LL);
      *(_DWORD *)uint64_t v37 = 11;
      unint64_t v38 = 0xD000000000000017LL;
      unint64_t v39 = 0x8000000100507FB0LL;
    }

    else
    {
      unint64_t v35 = sub_100187014();
      uint64_t v36 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v35, 0LL, 0LL);
      *(_DWORD *)uint64_t v37 = 11;
      unint64_t v38 = 0x7473696765726E55LL;
      unint64_t v39 = 0xEC00000064657265LL;
    }

    *(void *)(v37 + 8) = v38;
    *(void *)(v37 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v39;
    swift_willThrow(v36);
    Swift::String v24 = (void *)(v0 + 16);
    goto LABEL_9;
  }

  sub_100187100(v0 + 56, &qword_100650060);
  unint64_t v14 = sub_100187014();
  uint64_t v15 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v14, 0LL, 0LL);
  *(_DWORD *)uint64_t v16 = 37;
  *(void *)(v16 + 8) = 0xD000000000000027LL;
  *(void *)(v16 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x8000000100507CD0LL;
  swift_willThrow(v15);
  swift_bridgeObjectRelease(v6);
LABEL_2:
  swift_task_dealloc(*(void *)(v0 + 120));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10027B284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064B28C);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  return sub_10027AD90(a1, a2, a3);
}

uint64_t sub_10027B2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  uint64_t v4 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  v3[11] = v4;
  v3[12] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10027B34C, 0LL, 0LL);
}

uint64_t sub_10027B34C()
{
  id v1 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  unsigned int v3 = [v1 BOOLForKey:v2];

  if (v3)
  {
    if (qword_1006440A0 != -1) {
      swift_once(&qword_1006440A0, sub_1002770B0);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL);
    uint64_t v5 = sub_100186DE4(v4, (uint64_t)qword_10064A8D8);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  v7,  "### TESTING ONLY: throwAKSCreateTokenError default set, throwing generic error",  v8,  2u);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    unint64_t v9 = sub_100187014();
    uint64_t v10 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v9, 0LL, 0LL);
    *(_DWORD *)uint64_t v11 = 34;
    *(void *)(v11 + 8) = 0xD00000000000002CLL;
    *(void *)(v11 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x8000000100508180LL;
    swift_willThrow(v10);
    swift_task_dealloc(v0[12]);
    uint64_t v20 = (uint64_t (*)(void))v0[1];
  }

  else
  {
    uint64_t v12 = (void *)v0[9];
    uint64_t v13 = v12[3];
    uint64_t v14 = v12[4];
    sub_10019A708(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    sub_10019A708(v0 + 2, v0[5]);
    uint64_t v15 = v12[3];
    uint64_t v16 = v12[5];
    sub_10019A708(v12, v15);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
    unint64_t v19 = v18;
    sub_10043E438(v17, v18);

    sub_100189B20(v17, v19);
    sub_10018709C(v0 + 2);
    if (qword_1006440A0 != -1) {
      swift_once(&qword_1006440A0, sub_1002770B0);
    }
    uint64_t v23 = v0[12];
    uint64_t v24 = v0[10];
    uint64_t v25 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v25, (uint64_t)qword_10064A8D8);
    uint64_t v26 = sub_100284ABC(v24, v23);
    unint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.default.getter();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = v0[12];
    if (v29)
    {
      uint64_t v31 = v0[11];
      uint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v33 = swift_slowAlloc(32LL, -1LL);
      *(_DWORD *)uint64_t v32 = 136315138;
      uint64_t v43 = v33;
      unint64_t v34 = sub_10034F010(*(void *)(v30 + *(int *)(v31 + 28)));
      uint64_t v36 = (const char *)v35;
      v0[7] = sub_10018CDB4(v34, v35, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 7, v0 + 8, v32 + 4, v32 + 12);
      swift_bridgeObjectRelease(v36);
      sub_1001A4BC8(v30, type metadata accessor for SDAuthenticationCommonOperationInput);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "AUTHENTICATION SUCCEEDED for %s", v32, 0xCu);
      swift_arrayDestroy(v33, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1LL, -1LL);
      swift_slowDealloc(v32, -1LL, -1LL);
    }

    else
    {
      sub_1001A4BC8(v0[12], type metadata accessor for SDAuthenticationCommonOperationInput);
    }

    uint64_t v37 = v0[12];
    unint64_t v38 = (void *)v0[8];
    uint64_t v39 = v12[3];
    uint64_t v40 = v12[4];
    uint64_t v41 = sub_10019A708((void *)v0[9], v39);
    _OWORD v38[3] = v39;
    v38[4] = *(void *)(v40 + 8);
    Swift::String v42 = sub_1001A4B04(v38);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16LL))(v42, v41, v39);
    swift_task_dealloc(v37);
    uint64_t v20 = (uint64_t (*)(void))v0[1];
  }

  return v20();
}

uint64_t sub_10027B7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v7 = (void *)swift_task_alloc(dword_10064B3A4);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v7;
  *os_log_type_t v7 = v3;
  v7[1] = sub_100195708;
  return sub_10027B2EC(a1, a2, a3);
}

uint64_t sub_10027B840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[27] = a2;
  v3[28] = a3;
  v3[26] = a1;
  uint64_t v4 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  v3[29] = v4;
  v3[30] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10027B8A0, 0LL, 0LL);
}

uint64_t sub_10027B8A0()
{
  uint64_t v1 = *(void *)(v0 + 224) + *(int *)(*(void *)(v0 + 232) + 36LL);
  sub_100284608(v1, v0 + 56);
  if (*(void *)(v0 + 80))
  {
    NSString v2 = *(void **)(v0 + 216);
    sub_1001CE0D0((__int128 *)(v0 + 56), v0 + 16);
    uint64_t v3 = sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v4 = v2[3];
    uint64_t v5 = v2[4];
    sub_10019A708(v2, v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    unint64_t v8 = v7;
    uint64_t v9 = *v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession;
    uint64_t v10 = *(void *)v9;
    LOBYTE(v9) = *(_BYTE *)(v9 + 8);
    *(void *)(v0 + 176) = v10;
    *(_BYTE *)(v0 + 184) = v9;
    uint64_t v11 = sub_100183098(&qword_10064B338);
    Optional.tryUnwrap(_:file:line:)( 0xD00000000000002CLL,  0x8000000100508020LL,  0xD000000000000062LL,  0x8000000100508050LL,  87LL,  v11);
    sub_10031F978(v6, v8);
    sub_100189B0C(v21, v22);
    sub_100189B20(v6, v8);
    sub_10018709C((void *)(v0 + 16));
    sub_100284608(v1, v0 + 96);
    if (*(void *)(v0 + 120))
    {
      sub_1001CE0D0((__int128 *)(v0 + 96), v0 + 136);
      sub_10019A708((void *)(v0 + 136), *(void *)(v0 + 160));
      sub_10028534C();
      sub_10018709C((void *)(v0 + 136));
    }

    else
    {
      sub_100187100(v0 + 96, &qword_100650060);
    }

    if (qword_1006440A0 != -1) {
      swift_once(&qword_1006440A0, sub_1002770B0);
    }
    uint64_t v23 = *(void *)(v0 + 240);
    uint64_t v24 = *(void *)(v0 + 224);
    uint64_t v25 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v25, (uint64_t)qword_10064A8D8);
    uint64_t v26 = sub_100284ABC(v24, v23);
    unint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.default.getter();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = *(void *)(v0 + 240);
    if (v29)
    {
      uint64_t v31 = *(void *)(v0 + 232);
      uint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v33 = swift_slowAlloc(32LL, -1LL);
      *(_DWORD *)uint64_t v32 = 136315138;
      uint64_t v43 = v33;
      unint64_t v34 = sub_10034F010(*(void *)(v30 + *(int *)(v31 + 28)));
      uint64_t v36 = (const char *)v35;
      *(void *)(v0 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = sub_10018CDB4(v34, v35, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208, v32 + 4, v32 + 12);
      swift_bridgeObjectRelease(v36);
      sub_1001A4BC8(v30, type metadata accessor for SDAuthenticationCommonOperationInput);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "AUTHENTICATION SUCCEEDED for %s", v32, 0xCu);
      swift_arrayDestroy(v33, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1LL, -1LL);
      swift_slowDealloc(v32, -1LL, -1LL);
    }

    else
    {
      sub_1001A4BC8(*(void *)(v0 + 240), type metadata accessor for SDAuthenticationCommonOperationInput);
    }

    uint64_t v37 = *(void *)(v0 + 240);
    unint64_t v38 = *(void **)(v0 + 208);
    uint64_t v39 = v2[3];
    uint64_t v40 = v2[4];
    uint64_t v41 = sub_10019A708(*(void **)(v0 + 216), v39);
    _OWORD v38[3] = v39;
    v38[4] = *(void *)(v40 + 8);
    Swift::String v42 = sub_1001A4B04(v38);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16LL))(v42, v41, v39);
    swift_task_dealloc(v37);
    unint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  }

  else
  {
    sub_100187100(v0 + 56, &qword_100650060);
    unint64_t v12 = sub_100187014();
    uint64_t v13 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v12, 0LL, 0LL);
    *(_DWORD *)uint64_t v14 = 37;
    *(void *)(v14 + 8) = 0xD000000000000027LL;
    *(void *)(v14 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v13);
    uint64_t v15 = *(void *)(v0 + 240);
    unint64_t v16 = sub_100187014();
    uint64_t v17 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v16, 0LL, 0LL);
    *(_DWORD *)uint64_t v18 = 34;
    *(void *)(v18 + 8) = 0xD00000000000003ALL;
    *(void *)(v18 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x80000001005080C0LL;
    swift_willThrow(v17);
    swift_errorRelease(v13);
    swift_task_dealloc(v15);
    unint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  }

  return v19();
}

uint64_t sub_10027BD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc(dword_10064B34C);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_100195708;
  return sub_10027B840(a1, a2, a3);
}

uint64_t sub_10027BD80(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch(sub_10027BD98, 0LL, 0LL);
}

uint64_t sub_10027BD98()
{
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10019A708(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  unint64_t v6 = v5;
  sub_100189B0C(v4, v5);
  if (v6 >> 60 == 15)
  {
    unint64_t v7 = sub_100187014();
    uint64_t v8 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v7, 0LL, 0LL);
    *(_DWORD *)uint64_t v9 = 1;
    *(void *)(v9 + 8) = 0xD000000000000012LL;
    *(void *)(v9 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x8000000100507EA0LL;
    swift_willThrow(v8);
  }

  else
  {
    uint64_t v10 = *(void **)(v0 + 16);
    uint64_t v11 = v1[3];
    uint64_t v12 = v1[4];
    uint64_t v13 = sub_10019A708(*(void **)(v0 + 24), v11);
    v10[3] = v11;
    v10[4] = *(void *)(*(void *)(v12 + 8) + 8LL);
    uint64_t v14 = sub_1001A4B04(v10);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v14, v13, v11);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027BEA4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc(dword_10064AD6C);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100195708;
  void v5[2] = a1;
  v5[3] = a2;
  return swift_task_switch(sub_10027BD98, 0LL, 0LL);
}

uint64_t sub_10027BF08(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return swift_task_switch(sub_10027BF20, 0LL, 0LL);
}

uint64_t sub_10027BF20()
{
  uint64_t v1 = *(void **)(v0 + 72);
  sub_1002499DC((uint64_t)v1, v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 56);
  sub_1002499B4(v0 + 16, v2);
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  unint64_t v5 = sub_10019A708(v1, v1[3]);
  unint64_t v6 = (int *)_s15MacApprovePhoneV18InitialLockContextVMa(0LL);
  uint64_t v8 = (char *)v5 + v6[9];
  uint64_t v9 = (const char *)*((void *)v8 + 1);
  if (v9)
  {
    swift_bridgeObjectRetain(*((const char **)v8 + 1));
    NSString v10 = String._bridgeToObjectiveC()();
    *(void *)&double v7 = swift_bridgeObjectRelease(v9).n128_u64[0];
  }

  else
  {
    NSString v10 = 0LL;
  }

  uint64_t v11 = *(void **)(v0 + 72);
  objc_msgSend(v4, "setAppName:", v10, v7);

  uint64_t v12 = *(void *)(v0 + 40);
  uint64_t v13 = *(void *)(v0 + 56);
  sub_1002499B4(v0 + 16, v12);
  uint64_t v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
  uint64_t v15 = (char *)sub_10019A708(v11, v1[3]) + v6[8];
  uint64_t v17 = (const char *)*((void *)v15 + 1);
  if (v17)
  {
    swift_bridgeObjectRetain(*((const char **)v15 + 1));
    NSString v18 = String._bridgeToObjectiveC()();
    *(void *)&double v16 = swift_bridgeObjectRelease(v17).n128_u64[0];
  }

  else
  {
    NSString v18 = 0LL;
  }

  unint64_t v19 = *(void **)(v0 + 64);
  uint64_t v20 = *(void **)(v0 + 72);
  objc_msgSend(v14, "setBundleID:", v18, v16);

  uint64_t v21 = *(void *)(v0 + 40);
  uint64_t v22 = *(void *)(v0 + 56);
  sub_1002499B4(v0 + 16, v21);
  uint64_t v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
  objc_msgSend(v23, "setBiometricOnly:", *((_BYTE *)sub_10019A708(v20, v1[3]) + v6[10]) & 1);

  uint64_t v24 = *(void *)(v0 + 40);
  uint64_t v25 = *(void *)(v0 + 48);
  uint64_t v26 = sub_10019A708((void *)(v0 + 16), v24);
  v19[3] = v24;
  v19[4] = *(void *)(v25 + 8);
  unint64_t v27 = sub_1001A4B04(v19);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16LL))(v27, v26, v24);
  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027C14C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc(dword_10064AD74);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100195708;
  v5[8] = a1;
  void v5[9] = a2;
  return swift_task_switch(sub_10027BF20, 0LL, 0LL);
}

uint64_t sub_10027C1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_10027C1CC, 0LL, 0LL);
}

uint64_t sub_10027C1CC()
{
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = *(void **)(v0 + 32);
  uint64_t v30 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  uint64_t v3 = sub_10034EC60(*(void *)((char *)v2 + *(int *)(v30 + 28)));
  uint64_t v4 = v2[8];
  uint64_t v5 = v2[9];
  sub_10019A708(v2 + 5, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  double v7 = v6;
  uint64_t v8 = sub_10019A708(v1, v1[3]);
  uint64_t v9 = (int *)_s15MacApprovePhoneV26HandleApprovePromptContextVMa(0LL);
  NSString v10 = *(const char **)((char *)v8 + v9[9] + 8);
  uint64_t v11 = *(const char **)((char *)sub_10019A708(v1, v1[3]) + v9[8] + 8);
  uint64_t v12 = *((unsigned __int8 *)sub_10019A708(v1, v1[3]) + v9[10]);
  *(void *)&double v13 = swift_bridgeObjectRetain(v10).n128_u64[0];
  swift_bridgeObjectRetain(v11, v13);
  if (v7)
  {
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }

  else
  {
    NSString v14 = 0LL;
  }

  id v15 = objc_allocWithZone(&OBJC_CLASS___SFAuthenticationApproveInfo);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = (uint8_t *)objc_msgSend( v15,  "initWithType:idsDeviceID:appName:bundleID:biometricOnly:",  v3,  v14,  v16,  v17,  v12,  swift_bridgeObjectRelease(v11).n128_f64[0]);

  if (v18)
  {
    unint64_t v19 = *(void **)(v0 + 32);
    sub_10019A708(v19, v19[3]);
    sub_1004771A0((uint64_t)v19 + *(int *)(v30 + 24), v18);
    uint64_t v24 = *(void **)(v0 + 16);
    uint64_t v23 = *(void **)(v0 + 24);
    uint64_t v25 = v1[3];
    uint64_t v26 = v23[4];
    unint64_t v27 = sub_10019A708(v23, v25);
    uint64_t v24[3] = v25;
    v24[4] = *(void *)(v26 + 8);
    os_log_type_t v28 = sub_1001A4B04(v24);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16LL))(v28, v27, v25);
  }

  else
  {
    unint64_t v20 = sub_100187014();
    uint64_t v21 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v20, 0LL, 0LL);
    *(_DWORD *)uint64_t v22 = 10;
    *(void *)(v22 + 8) = 0xD00000000000001DLL;
    *(void *)(v22 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x8000000100508100LL;
    swift_willThrow(v21);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027C448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v7 = (void *)swift_task_alloc(dword_10064B36C);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v7;
  *double v7 = v3;
  v7[1] = sub_100195708;
  v7[3] = a2;
  v7[4] = a3;
  void v7[2] = a1;
  return swift_task_switch(sub_10027C1CC, 0LL, 0LL);
}

uint64_t sub_10027C4D4()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_10027C4DC()
{
  return *(unsigned int *)(v0 + 20);
}

uint64_t sub_10027C4E4(uint64_t a1, uint64_t a2)
{
  v2[8] = a1;
  void v2[9] = a2;
  uint64_t v3 = type metadata accessor for Date(0LL);
  v2[10] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[11] = v4;
  v2[12] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10027C544, 0LL, 0LL);
}

uint64_t sub_10027C544()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v4 = *(void **)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v5 = *(void **)(v0 + 64);
  sub_1002499DC((uint64_t)v4, v0 + 16);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v6);
  uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
  uint64_t v9 = sub_10019A708(v4, v4[3]);
  uint64_t v10 = Date.init()(v9);
  double v11 = Date.timeIntervalSince1970.getter(v10);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  [v8 setSessionStartDate:v11];

  uint64_t v12 = *(void *)(v0 + 40);
  uint64_t v13 = *(void *)(v0 + 48);
  NSString v14 = sub_10019A708((void *)(v0 + 16), v12);
  v5[3] = v12;
  v5[4] = *(void *)(v13 + 8);
  id v15 = sub_1001A4B04(v5);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16LL))(v15, v14, v12);
  sub_10018709C((void *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027C668(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064AD5C);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  return sub_10027C4E4(a1, a2);
}

uint64_t sub_10027C6C0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a2;
  return swift_task_switch(sub_10027C6D8, 0LL, 0LL);
}

uint64_t sub_10027C6D8()
{
  uint64_t v1 = *(void **)(v0 + 120);
  sub_100284B44((uint64_t)v1, v0 + 16);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[5];
  sub_10019A708(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  if (v5 >> 60 == 15)
  {
    unint64_t v6 = sub_100187014();
    uint64_t v7 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v6, 0LL, 0LL);
    *(_DWORD *)uint64_t v8 = 1;
    *(void *)(v8 + 8) = 0xD000000000000010LL;
    *(void *)(v8 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x8000000100508140LL;
    swift_willThrow(v7);
  }

  else
  {
    uint64_t v9 = v4;
    unint64_t v10 = v5;
    double v11 = *(void **)(v0 + 120);
    uint64_t v12 = v1[3];
    uint64_t v13 = v1[5];
    sub_10019A708(v11, v12);
    (*(void (**)(uint64_t))(*(void *)(v13 + 8) + 16LL))(v12);
    sub_10019A708((void *)(v0 + 72), *(void *)(v0 + 96));
    uint64_t v14 = v1[3];
    uint64_t v15 = v11[4];
    sub_10019A708(v11, v14);
    NSString v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 16);
    sub_10019BA8C(v9, v10);
    uint64_t v17 = v16(v14, v15);
    unint64_t v19 = v18;
    sub_10043E788(v9, v10);
    sub_10043E438(v17, v19);
    uint64_t v22 = v21;
    uint64_t v23 = *(void **)(v0 + 112);
    sub_100189B20(v17, v19);
    sub_100189B0C(v9, v10);
    uint64_t v24 = Data.init(referencing:)(v22);
    unint64_t v26 = v25;

    sub_10018709C((void *)(v0 + 72));
    uint64_t v27 = *(void *)(v0 + 40);
    uint64_t v28 = *(void *)(v0 + 64);
    sub_1002499B4(v0 + 16, v27);
    BOOL v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v29 setAksToken:isa];

    uint64_t v31 = *(void *)(v0 + 40);
    uint64_t v32 = *(void *)(v0 + 48);
    uint64_t v33 = sub_10019A708((void *)(v0 + 16), v31);
    uint64_t v23[3] = v31;
    void v23[4] = *(void *)(v32 + 8);
    unint64_t v34 = sub_1001A4B04(v23);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16LL))(v34, v33, v31);
    sub_100189B20(v24, v26);
    sub_100189B0C(v9, v10);
  }

  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027C9B4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc(dword_10064B37C);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100195708;
  void v5[14] = a1;
  v5[15] = a2;
  return swift_task_switch(sub_10027C6D8, 0LL, 0LL);
}

uint64_t sub_10027CA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_100284B98, 0LL, 0LL);
}

uint64_t sub_10027CA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064AD7C);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return swift_task_switch(sub_100284B98, 0LL, 0LL);
}

uint64_t sub_10027CAA8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return swift_task_switch(sub_10027CAC0, 0LL, 0LL);
}

uint64_t sub_10027CAC0()
{
  uint64_t v1 = *(void **)(v0 + 112);
  sub_1002499DC((uint64_t)v1, v0 + 16);
  uint64_t v2 = sub_10019A708(v1, v1[3]);
  uint64_t v3 = (void *)((char *)v2 + *(int *)(_s14MacUnlockPhoneV17InitialKeyContextVMa(0LL) + 36));
  unint64_t v4 = v3[1];
  if (v4 >> 60 == 15)
  {
    unint64_t v5 = sub_100187014();
    uint64_t v6 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v5, 0LL, 0LL);
    *(_DWORD *)uint64_t v7 = 1;
    *(void *)(v7 + 8) = 0xD000000000000012LL;
    *(void *)(v7 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x8000000100507E80LL;
    swift_willThrow(v6);
  }

  else
  {
    uint64_t v8 = *v3;
    uint64_t v9 = *(void **)(v0 + 112);
    uint64_t v10 = v1[3];
    uint64_t v11 = v9[4];
    sub_10019A708(v9, v10);
    uint64_t v12 = *(void *)(v11 + 8);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 16);
    sub_10019BA8C(v8, v4);
    v13(v10, v12);
    sub_10019A708((void *)(v0 + 64), *(void *)(v0 + 88));
    sub_10019BA8C(v8, v4);
    sub_10043E788(v8, v4);
    sub_10043E438(0LL, 0xF000000000000000LL);
    NSString v16 = v15;
    uint64_t v17 = *(void **)(v0 + 104);
    sub_100189B0C(v8, v4);
    uint64_t v18 = Data.init(referencing:)(v16);
    unint64_t v20 = v19;

    sub_10018709C((void *)(v0 + 64));
    uint64_t v21 = *(void *)(v0 + 40);
    uint64_t v22 = *(void *)(v0 + 56);
    sub_1002499B4(v0 + 16, v21);
    uint64_t v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v23 setAksToken:isa];

    uint64_t v25 = *(void *)(v0 + 40);
    uint64_t v26 = *(void *)(v0 + 56);
    uint64_t v27 = sub_10019A708((void *)(v0 + 16), v25);
    v17[3] = v25;
    v17[4] = *(void *)(v26 + 8);
    uint64_t v28 = sub_1001A4B04(v17);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16LL))(v28, v27, v25);
    sub_100189B20(v18, v20);
    sub_100189B0C(v8, v4);
  }

  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027CD4C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc(dword_10064AD64);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100195708;
  v5[13] = a1;
  void v5[14] = a2;
  return swift_task_switch(sub_10027CAC0, 0LL, 0LL);
}

uint64_t sub_10027CDB0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a2;
  return swift_task_switch(sub_10027CDC8, 0LL, 0LL);
}

uint64_t sub_10027CDC8()
{
  uint64_t v1 = *(void **)(v0 + 120);
  sub_100284B44((uint64_t)v1, v0 + 16);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10019A708(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  if (v5 >> 60 != 15)
  {
    uint64_t v9 = v4;
    unint64_t v10 = v5;
    if (qword_1006440A0 != -1) {
      swift_once(&qword_1006440A0, sub_1002770B0);
    }
    uint64_t v11 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v11, (uint64_t)qword_10064A8D8);
    sub_1001A4C04(v9, v10);
    unint64_t v12 = v10 >> 62;
    uint64_t v13 = sub_10019BA8C(v9, v10);
    uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v14, v15))
    {
      NSString v16 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v22 = swift_slowAlloc(32LL, -1LL);
      uint64_t v23 = v22;
      *(_DWORD *)NSString v16 = 136315138;
      sub_10019BA8C(v9, v10);
      uint64_t v17 = Data.description.getter(v9, v10);
      unint64_t v19 = v18;
      sub_100189B0C(v9, v10);
      uint64_t v20 = v17;
      unint64_t v12 = v10 >> 62;
      *(void *)(v0 + 72) = sub_10018CDB4(v20, (unint64_t)v19, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v16 + 4, v16 + 12);
      swift_bridgeObjectRelease(v19);
      sub_100189B0C(v9, v10);
      sub_100189B0C(v9, v10);
      _os_log_impl( (void *)&_mh_execute_header,  v14,  v15,  "Starting MacApprovePhone AKS session with acmToken: %s",  v16,  0xCu);
      swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1LL, -1LL);
      swift_slowDealloc(v16, -1LL, -1LL);
    }

    else
    {
      sub_100189B0C(v9, v10);
      sub_100189B0C(v9, v10);
    }

    __asm { BR              X10 }
  }

  unint64_t v6 = sub_100187014();
  uint64_t v7 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v6, 0LL, 0LL);
  *(_DWORD *)uint64_t v8 = 30;
  *(void *)(v8 + 8) = 0xD000000000000019LL;
  *(void *)(v8 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x8000000100508120LL;
  swift_willThrow(v7);
  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027D2E0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc(dword_10064B374);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100195708;
  void v5[14] = a1;
  v5[15] = a2;
  return swift_task_switch(sub_10027CDC8, 0LL, 0LL);
}

uint64_t sub_10027D344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  return swift_task_switch(sub_10027D360, 0LL, 0LL);
}

uint64_t sub_10027D360()
{
  uint64_t v1 = *(void *)(v0 + 152);
  sub_10019A6C4(*(void *)(v0 + 144), v0 + 16);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v1 + *(int *)(v2 + 36), v0 + 96);
  if (*(void *)(v0 + 120))
  {
    sub_1001CE0D0((__int128 *)(v0 + 96), v0 + 56);
    sub_10019A708((void *)(v0 + 56), *(void *)(v0 + 80));
    uint64_t v6 = sub_100284C5C(0LL, 0xF000000000000000LL, 0LL, 0xF000000000000000LL);
    unint64_t v8 = v7;
    uint64_t v9 = *(void **)(v0 + 136);
    sub_10018709C((void *)(v0 + 56));
    uint64_t v10 = *(void *)(v0 + 40);
    uint64_t v11 = *(void *)(v0 + 48);
    sub_1002499B4(v0 + 16, v10);
    unint64_t v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v12 setAksToken:isa];

    uint64_t v14 = *(void *)(v0 + 40);
    uint64_t v15 = *(void *)(v0 + 48);
    NSString v16 = sub_10019A708((void *)(v0 + 16), v14);
    v9[3] = v14;
    v9[4] = *(void *)(v15 + 8);
    uint64_t v17 = sub_1001A4B04(v9);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16LL))(v17, v16, v14);
    sub_100189B20(v6, v8);
  }

  else
  {
    sub_100187100(v0 + 96, &qword_100650060);
    unint64_t v3 = sub_100187014();
    uint64_t v4 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v3, 0LL, 0LL);
    *(_DWORD *)uint64_t v5 = 37;
    *(void *)(v5 + 8) = 0xD000000000000027LL;
    *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v4);
  }

  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027D548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc(dword_10064AD8C);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[18] = a2;
  v7[19] = a3;
  v7[17] = a1;
  return swift_task_switch(sub_10027D360, 0LL, 0LL);
}

uint64_t sub_10027D5BC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a2;
  return swift_task_switch(sub_10027D5D4, 0LL, 0LL);
}

uint64_t sub_10027D5D4()
{
  uint64_t v1 = *(void **)(v0 + 120);
  sub_100284B44((uint64_t)v1, v0 + 16);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10019A708(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  sub_10019A708((void *)(v0 + 72), *(void *)(v0 + 96));
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[5];
  sub_10019A708(v1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  unint64_t v8 = v7;
  sub_10043E788(0LL, 0xF000000000000000LL);
  sub_10043E438(v6, v8);
  uint64_t v11 = v10;
  unint64_t v12 = *(void **)(v0 + 112);
  sub_100189B20(v6, v8);
  uint64_t v13 = Data.init(referencing:)(v11);
  unint64_t v15 = v14;

  sub_10018709C((void *)(v0 + 72));
  uint64_t v16 = *(void *)(v0 + 40);
  uint64_t v17 = *(void *)(v0 + 64);
  sub_1002499B4(v0 + 16, v16);
  uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v18 setAksToken:isa];

  uint64_t v20 = *(void *)(v0 + 40);
  uint64_t v21 = *(void *)(v0 + 48);
  uint64_t v22 = sub_10019A708((void *)(v0 + 16), v20);
  v12[3] = v20;
  v12[4] = *(void *)(v21 + 8);
  uint64_t v23 = sub_1001A4B04(v12);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16LL))(v23, v22, v20);
  sub_100189B20(v13, v15);
  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027D7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064B3B4);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  void v5[14] = a1;
  v5[15] = a2;
  return swift_task_switch(sub_10027D5D4, 0LL, 0LL);
}

uint64_t sub_10027D824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  return swift_task_switch(sub_10027D840, 0LL, 0LL);
}

uint64_t sub_10027D840()
{
  uint64_t v1 = *(void *)(v0 + 160);
  sub_1002499DC(*(void *)(v0 + 152), v0 + 16);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v1 + *(int *)(v2 + 36), v0 + 104);
  if (*(void *)(v0 + 128))
  {
    uint64_t v3 = *(void **)(v0 + 152);
    sub_1001CE0D0((__int128 *)(v0 + 104), v0 + 64);
    sub_10019A708((void *)(v0 + 64), *(void *)(v0 + 88));
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    sub_10019A708(v3, v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    unint64_t v8 = v7;
    uint64_t v12 = sub_100284C5C(0LL, 0xF000000000000000LL, v6, v7);
    unint64_t v14 = v13;
    unint64_t v15 = *(void **)(v0 + 144);
    sub_100189B20(v6, v8);
    sub_10018709C((void *)(v0 + 64));
    uint64_t v16 = *(void *)(v0 + 40);
    uint64_t v17 = *(void *)(v0 + 56);
    sub_1002499B4(v0 + 16, v16);
    uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v18 setAksToken:isa];

    uint64_t v20 = *(void *)(v0 + 40);
    uint64_t v21 = *(void *)(v0 + 48);
    uint64_t v22 = sub_10019A708((void *)(v0 + 16), v20);
    v15[3] = v20;
    void v15[4] = *(void *)(v21 + 8);
    uint64_t v23 = sub_1001A4B04(v15);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16LL))(v23, v22, v20);
    sub_100189B20(v12, v14);
  }

  else
  {
    sub_100187100(v0 + 104, &qword_100650060);
    unint64_t v9 = sub_100187014();
    uint64_t v10 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v9, 0LL, 0LL);
    *(_DWORD *)uint64_t v11 = 37;
    *(void *)(v11 + 8) = 0xD000000000000027LL;
    *(void *)(v11 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v10);
  }

  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027DA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc(dword_10064B324);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[19] = a2;
  v7[20] = a3;
  v7[18] = a1;
  return swift_task_switch(sub_10027D840, 0LL, 0LL);
}

uint64_t sub_10027DAF4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 192) = a1;
  *(void *)(v2 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = a2;
  return swift_task_switch(sub_10027DB0C, 0LL, 0LL);
}

uint64_t sub_10027DB0C()
{
  uint64_t v1 = *(void *)(v0 + 200);
  sub_1002499DC(v1, v0 + 16);
  sub_1002499DC(v1, v0 + 64);
  uint64_t v2 = sub_100183098(&qword_10064B388);
  uint64_t v3 = sub_100183098(&qword_10064B390);
  if ((swift_dynamicCast(v0 + 152, v0 + 64, v2, v3, 6LL) & 1) != 0)
  {
    sub_1001CE0D0((__int128 *)(v0 + 152), v0 + 112);
    uint64_t v4 = *(void *)(v0 + 136);
    uint64_t v5 = *(void *)(v0 + 144);
    sub_10019A708((void *)(v0 + 112), v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    unint64_t v8 = v7;
    sub_10018709C((void *)(v0 + 112));
  }

  else
  {
    *(void *)(v0 + 184) = 0LL;
    *(_OWORD *)(v0 + 152) = 0u;
    *(_OWORD *)(v0 + 168) = 0u;
    sub_100187100(v0 + 152, &qword_10064B398);
    uint64_t v6 = 0LL;
    unint64_t v8 = 0xF000000000000000LL;
  }

  unint64_t v9 = *(void **)(v0 + 200);
  uint64_t v10 = v9[3];
  uint64_t v11 = v9[4];
  sub_10019A708(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  sub_10019A708((void *)(v0 + 64), *(void *)(v0 + 88));
  sub_10043E438(v6, v8);
  unint64_t v13 = v12;
  unint64_t v14 = *(void **)(v0 + 192);
  sub_10018709C((void *)(v0 + 64));
  uint64_t v15 = *(void *)(v0 + 40);
  uint64_t v16 = *(void *)(v0 + 56);
  sub_1002499B4(v0 + 16, v15);
  uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
  uint64_t v18 = Data.init(referencing:)(v13);
  unint64_t v20 = v19;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100189B20(v18, v20);
  [v17 setAksToken:isa];

  uint64_t v22 = *(void *)(v0 + 40);
  uint64_t v23 = *(void *)(v0 + 48);
  uint64_t v24 = sub_10019A708((void *)(v0 + 16), v22);
  void v14[3] = v22;
  v14[4] = *(void *)(v23 + 8);
  uint64_t v25 = sub_1001A4B04(v14);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16LL))(v25, v24, v22);
  sub_100189B0C(v6, v8);

  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027DD68(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064B384);
  *(void *)(v2 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  _BYTE v5[24] = a1;
  v5[25] = a2;
  return swift_task_switch(sub_10027DB0C, 0LL, 0LL);
}

uint64_t sub_10027DDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[20] = a2;
  v3[21] = a3;
  v3[19] = a1;
  return swift_task_switch(sub_10027DDE8, 0LL, 0LL);
}

uint64_t sub_10027DDE8()
{
  uint64_t v1 = *(void *)(v0 + 168);
  sub_1002499DC(*(void *)(v0 + 160), v0 + 16);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v1 + *(int *)(v2 + 36), v0 + 104);
  if (*(void *)(v0 + 128))
  {
    uint64_t v3 = *(void **)(v0 + 160);
    sub_1001CE0D0((__int128 *)(v0 + 104), v0 + 64);
    uint64_t v4 = sub_10019A708((void *)(v0 + 64), *(void *)(v0 + 88));
    uint64_t v5 = v3[3];
    uint64_t v6 = v3[4];
    sub_10019A708(v3, v5);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
    unint64_t v9 = v8;
    uint64_t v10 = *v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession;
    uint64_t v11 = *(void *)v10;
    LOBYTE(v1_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(_BYTE *)(v10 + 8);
    *(void *)(v0 + 104) = v11;
    *(_BYTE *)(v0 + 112) = v10;
    uint64_t v12 = sub_100183098(&qword_10064B338);
    Optional.tryUnwrap(_:file:line:)( 0xD00000000000002CLL,  0x8000000100508020LL,  0xD000000000000062LL,  0x8000000100508050LL,  87LL,  v12);
    sub_10031F978(v7, v9);
    uint64_t v17 = v16;
    unint64_t v19 = v18;
    sub_100189B20(v7, v9);
    sub_10018709C((void *)(v0 + 64));
    uint64_t v22 = *(void *)(v0 + 40);
    uint64_t v23 = *(void *)(v0 + 56);
    sub_1002499B4(v0 + 16, v22);
    uint64_t v24 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
    if (v19 >> 60 == 15)
    {
      Class isa = 0LL;
    }

    else
    {
      sub_10019BA8C(v17, v19);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100189B0C(v17, v19);
    }

    uint64_t v26 = *(void **)(v0 + 152);
    [v24 setAksToken:isa];

    uint64_t v27 = *(void *)(v0 + 40);
    uint64_t v28 = *(void *)(v0 + 48);
    BOOL v29 = sub_10019A708((void *)(v0 + 16), v27);
    v26[3] = v27;
    v26[4] = *(void *)(v28 + 8);
    uint64_t v30 = sub_1001A4B04(v26);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16LL))(v30, v29, v27);
    sub_100189B0C(v17, v19);
    sub_10018709C((void *)(v0 + 16));
    unint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  }

  else
  {
    sub_100187100(v0 + 104, &qword_100650060);
    unint64_t v13 = sub_100187014();
    uint64_t v14 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v13, 0LL, 0LL);
    *(_DWORD *)uint64_t v15 = 37;
    *(void *)(v15 + 8) = 0xD000000000000027LL;
    *(void *)(v15 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v14);
    sub_10018709C((void *)(v0 + 16));
    unint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  }

  return v20();
}

uint64_t sub_10027E0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064B334);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 72) + 40LL, v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[20] = a2;
  v7[21] = a3;
  v7[19] = a1;
  return swift_task_switch(sub_10027DDE8, 0LL, 0LL);
}

uint64_t sub_10027E148(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return swift_task_switch(sub_10027E160, 0LL, 0LL);
}

uint64_t sub_10027E160()
{
  uint64_t v1 = sub_100284670();
  unint64_t v3 = v2;
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v5 = *(void **)(v0 + 64);
  sub_1002499B4(v0 + 16, v4);
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v4, v6);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v7 setRangingToken:isa];

  uint64_t v9 = *(void *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v9);
  uint64_t v11 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 16);
  sub_10019BA8C(v1, v3);
  v11(v1, v3, v9, v10);
  uint64_t v12 = *(void *)(v0 + 40);
  uint64_t v13 = *(void *)(v0 + 56);
  uint64_t v14 = sub_10019A708((void *)(v0 + 16), v12);
  v5[3] = v12;
  v5[4] = *(void *)(v13 + 8);
  uint64_t v15 = sub_1001A4B04(v5);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16LL))(v15, v14, v12);
  sub_100189B20(v1, v3);
  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027E2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064AD3C);
  *(void *)(v2 + sub_1002499DC(*(void *)(v0 + 72), v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  v5[8] = a1;
  void v5[9] = a2;
  return swift_task_switch(sub_10027E160, 0LL, 0LL);
}

uint64_t sub_10027E32C(uint64_t a1, uint64_t a2)
{
  v2[8] = a1;
  void v2[9] = a2;
  uint64_t v3 = type metadata accessor for Date(0LL);
  v2[10] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[11] = v4;
  v2[12] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_1006457E8);
  v2[13] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10027E3B0, 0LL, 0LL);
}

uint64_t sub_10027E3B0()
{
  uint64_t v2 = (uint64_t *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v24 = *(void *)(v0 + 80);
  uint64_t v4 = *(void **)(v0 + 72);
  sub_1002499DC((uint64_t)v4, v0 + 16);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 56);
  sub_1002499B4(v0 + 16, v5);
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
  uint64_t v8 = v4[3];
  uint64_t v9 = v4[4];
  sub_10019A708(v4, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1LL, v24);
  if ((_DWORD)v10 == 1)
  {
    uint64_t v2 = (uint64_t *)(v0 + 96);
    uint64_t v11 = sub_100187100(*(void *)(v0 + 104), &qword_1006457E8);
    uint64_t v10 = static Date.distantFuture.getter(v11);
  }

  uint64_t v12 = *v2;
  uint64_t v13 = *(void *)(v0 + 96);
  uint64_t v14 = *(void *)(v0 + 104);
  uint64_t v15 = *(void *)(v0 + 80);
  uint64_t v16 = *(void *)(v0 + 88);
  uint64_t v17 = *(void **)(v0 + 64);
  double v18 = Date.timeIntervalSince1970.getter(v10);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v12, v15);
  [v7 setUnlockDate:v18];

  uint64_t v19 = *(void *)(v0 + 40);
  uint64_t v20 = *(void *)(v0 + 48);
  uint64_t v21 = sub_10019A708((void *)(v0 + 16), v19);
  v17[3] = v19;
  v17[4] = *(void *)(v20 + 8);
  uint64_t v22 = sub_1001A4B04(v17);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16LL))(v22, v21, v19);
  sub_10018709C((void *)(v0 + 16));
  swift_task_dealloc(v14);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027E548(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064AD34);
  *(void *)(v2 + sub_1002499DC(*(void *)(v0 + 72), v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  return sub_10027E32C(a1, a2);
}

uint64_t sub_10027E5A0(uint64_t a1, uint64_t a2)
{
  void v2[9] = a1;
  v2[10] = a2;
  uint64_t v3 = sub_100183098(&qword_1006457E8);
  v2[11] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Date(0LL);
  v2[12] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[13] = v5;
  unint64_t v6 = (*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[14] = swift_task_alloc(v6);
  v2[15] = swift_task_alloc(v6);
  return swift_task_switch(sub_10027E634, 0LL, 0LL);
}

uint64_t sub_10027E634()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = (void *)v0[10];
  uint64_t v4 = v0[11];
  sub_1002499DC((uint64_t)v3, (uint64_t)(v0 + 2));
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  sub_10019A708(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1LL, v1);
  uint64_t v8 = v0[15];
  uint64_t v9 = v0[11];
  if (v7 == 1)
  {
    uint64_t v10 = v0[14];
    sub_100187100(v0[11], &qword_1006457E8);
    unint64_t v11 = sub_100187014();
    uint64_t v12 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v11, 0LL, 0LL);
    *(_DWORD *)uint64_t v13 = 11;
    *(void *)(v13 + 8) = 0xD00000000000002ELL;
    *(void *)(v13 + sub_1002499DC(*(void *)(v0 + 72), v0 + 16) = 0x8000000100507E50LL;
    swift_willThrow(v12);
    sub_10018709C(v0 + 2);
    swift_task_dealloc(v8);
    swift_task_dealloc(v10);
    swift_task_dealloc(v9);
    uint64_t v14 = (uint64_t (*)(void))v0[1];
  }

  else
  {
    (*(void (**)(void, void, void))(v0[13] + 32LL))(v0[15], v0[11], v0[12]);
    if (qword_1006440A0 != -1) {
      swift_once(&qword_1006440A0, sub_1002770B0);
    }
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v17 = v0[12];
    uint64_t v18 = v0[13];
    uint64_t v19 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v19, (uint64_t)qword_10064A8D8);
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, v15, v17);
    uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.default.getter();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v25 = v0[13];
    uint64_t v24 = v0[14];
    uint64_t v26 = v0[12];
    if (v23)
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v46 = swift_slowAlloc(32LL, -1LL);
      uint64_t v48 = v46;
      *(_DWORD *)uint64_t v27 = 136315138;
      uint64_t v28 = sub_100183F14( (unint64_t *)&qword_100651A50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
      uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter(v26, v28);
      uint64_t v31 = (const char *)v30;
      v0[8] = sub_10018CDB4(v29, v30, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 8, v0 + 9, v27 + 4, v27 + 12);
      __n128 v32 = swift_bridgeObjectRelease(v31);
      uint64_t v47 = *(void (**)(uint64_t, uint64_t, __n128))(v25 + 8);
      v47(v24, v26, v32);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Registration success date: %s", v27, 0xCu);
      swift_arrayDestroy(v46, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1LL, -1LL);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    else
    {
      uint64_t v47 = *(void (**)(uint64_t, uint64_t, __n128))(v25 + 8);
      ((void (*)(void, void))v47)(v0[14], v0[12]);
    }

    uint64_t v33 = v0[14];
    uint64_t v34 = v0[15];
    uint64_t v35 = v0[11];
    uint64_t v36 = v0[12];
    uint64_t v37 = (void *)v0[9];
    uint64_t v38 = v0[5];
    uint64_t v39 = v0[7];
    sub_1002499B4((uint64_t)(v0 + 2), v38);
    uint64_t v40 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 24))(v38, v39);
    [v40 setUnlockDate:Date.timeIntervalSince1970.getter(v40)];

    uint64_t v41 = v0[5];
    uint64_t v42 = v0[6];
    uint64_t v43 = sub_10019A708(v0 + 2, v41);
    v37[3] = v41;
    uint64_t v37[4] = *(void *)(v42 + 8);
    uint64_t v44 = sub_1001A4B04(v37);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16LL))(v44, v43, v41);
    ((void (*)(uint64_t, uint64_t))v47)(v34, v36);
    sub_10018709C(v0 + 2);
    swift_task_dealloc(v34);
    swift_task_dealloc(v33);
    swift_task_dealloc(v35);
    uint64_t v14 = (uint64_t (*)(void))v0[1];
  }

  return v14();
}

uint64_t sub_10027E9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064AD54);
  *(void *)(v2 + sub_1002499DC(*(void *)(v0 + 72), v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  return sub_10027E5A0(a1, a2);
}

uint64_t sub_10027EA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  uint64_t v4 = sub_100183098(&qword_1006457E8);
  v3[21] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Date(0LL);
  v3[22] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[23] = v6;
  unint64_t v7 = (*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[24] = swift_task_alloc(v7);
  v3[25] = swift_task_alloc(v7);
  return swift_task_switch(sub_10027EAE8, 0LL, 0LL);
}

uint64_t sub_10027EAE8()
{
  uint64_t v1 = (void *)(v0 + 16);
  sub_10019A6C4(*(void *)(v0 + 152), v0 + 16);
  sub_100277140();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v0 + 160);
  uint64_t v12 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v11 + *(int *)(v12 + 36), v0 + 96);
  if (!*(void *)(v0 + 120))
  {
    sub_100187100(v0 + 96, &qword_100650060);
    unint64_t v18 = sub_100187014();
    uint64_t v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v18, 0LL, 0LL);
    *(_DWORD *)uint64_t v20 = 37;
    *(void *)(v20 + 8) = 0xD000000000000027LL;
    *(void *)(v20 + sub_1002499DC(*(void *)(v0 + 72), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v19);
    swift_bridgeObjectRelease(v10);
LABEL_2:
    uint64_t v3 = *(void *)(v0 + 192);
    uint64_t v2 = *(void *)(v0 + 200);
    uint64_t v4 = *(void *)(v0 + 168);
    sub_10018709C(v1);
    swift_task_dealloc(v2);
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }

  NSString v78 = (void *)(v0 + 16);
  sub_1001CE0D0((__int128 *)(v0 + 96), v0 + 56);
  uint64_t v13 = *(void *)(*sub_10019A708((void *)(v0 + 56), *(void *)(v0 + 80))
                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
  uint64_t v14 = *(os_unfair_lock_s **)(v13 + 112);
  uint64_t v15 = (void *)swift_task_alloc(48LL);
  v15[2] = v13;
  v15[3] = v8;
  void v15[4] = v10;
  uint64_t v16 = swift_task_alloc(32LL);
  *(void *)(v16 + sub_1002499DC(*(void *)(v0 + 72), v0 + 16) = sub_1002847D0;
  *(void *)(v16 + 24) = v15;
  v14 += 4;
  os_unfair_lock_lock(v14);
  sub_1002737FC(v17, *(uint64_t (**)(void))(v16 + 16));
  os_unfair_lock_unlock(v14);
  swift_task_dealloc(v16);
  uint64_t v77 = (void *)(v0 + 56);
  uint64_t v21 = *(void *)(v0 + 176);
  uint64_t v22 = *(void *)(v0 + 184);
  uint64_t v23 = *(void *)(v0 + 168);
  swift_task_dealloc(v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v23, 1LL, v21) == 1)
  {
    uint64_t v24 = *(void *)(v0 + 168);
    swift_bridgeObjectRelease(v10);
    sub_100187100(v24, &qword_1006457E8);
    unint64_t v25 = sub_100187014();
    uint64_t v26 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v25, 0LL, 0LL);
    *(_DWORD *)uint64_t v27 = 11;
    *(void *)(v27 + 8) = 0xD00000000000002ELL;
    *(void *)(v27 + sub_1002499DC(*(void *)(v0 + 72), v0 + 16) = 0x8000000100507E50LL;
    swift_willThrow(v26);
    uint64_t v28 = (void *)(v0 + 56);
LABEL_9:
    sub_10018709C(v28);
    uint64_t v1 = (void *)(v0 + 16);
    goto LABEL_2;
  }

  (*(void (**)(void, void, void))(*(void *)(v0 + 184) + 32LL))( *(void *)(v0 + 200),  *(void *)(v0 + 168),  *(void *)(v0 + 176));
  uint64_t v29 = *(void *)(*sub_10019A708(v77, *(void *)(v0 + 80))
                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
  unint64_t v30 = *(os_unfair_lock_s **)(v29 + 112);
  uint64_t v31 = (void *)swift_task_alloc(48LL);
  v31[2] = v29;
  v31[3] = v8;
  v31[4] = v10;
  uint64_t v32 = swift_task_alloc(32LL);
  *(void *)(v32 + sub_1002499DC(*(void *)(v0 + 72), v0 + 16) = sub_1002847EC;
  *(void *)(v32 + 24) = v31;
  os_unfair_lock_lock(v30 + 4);
  (*(void (**)(uint64_t *__return_ptr))(v32 + 16))(v79);
  uint64_t v33 = v79[1];
  os_unfair_lock_unlock(v30 + 4);
  swift_bridgeObjectRelease(v10);
  swift_task_dealloc(v32);
  swift_task_dealloc(v31);
  if (!v33)
  {
    uint64_t v53 = *(void *)(v0 + 200);
    uint64_t v54 = *(void *)(v0 + 176);
    uint64_t v55 = *(void *)(v0 + 184);
    unint64_t v56 = sub_100187014();
    uint64_t v57 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v56, 0LL, 0LL);
    *(_DWORD *)uint64_t v58 = 11;
    *(void *)(v58 + 8) = 0xD00000000000002ELL;
    *(void *)(v58 + sub_1002499DC(*(void *)(v0 + 72), v0 + 16) = 0x8000000100507E50LL;
    swift_willThrow(v57);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
    uint64_t v28 = (void *)(v0 + 56);
    goto LABEL_9;
  }

  id v76 = (const char *)v33;
  if (qword_1006440A0 != -1) {
    swift_once(&qword_1006440A0, sub_1002770B0);
  }
  uint64_t v35 = *(void *)(v0 + 192);
  uint64_t v34 = *(void *)(v0 + 200);
  uint64_t v37 = *(void *)(v0 + 176);
  uint64_t v36 = *(void *)(v0 + 184);
  uint64_t v38 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v38, (uint64_t)qword_10064A8D8);
  uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v35, v34, v37);
  uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
  os_log_type_t v41 = static os_log_type_t.default.getter();
  BOOL v42 = os_log_type_enabled(v40, v41);
  uint64_t v43 = *(void *)(v0 + 184);
  uint64_t v44 = *(void *)(v0 + 192);
  uint64_t v45 = *(void *)(v0 + 176);
  if (v42)
  {
    uint64_t v46 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v47 = swift_slowAlloc(32LL, -1LL);
    v79[0] = v47;
    *(_DWORD *)uint64_t v46 = 136315138;
    uint64_t v48 = sub_100183F14( (unint64_t *)&qword_100651A50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
    uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter(v45, v48);
    uint64_t v51 = (const char *)v50;
    *(void *)(v0 + 136) = sub_10018CDB4(v49, v50, v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v46 + 4, v46 + 12);
    __n128 v52 = swift_bridgeObjectRelease(v51);
    uint64_t v75 = *(void (**)(uint64_t, uint64_t, __n128))(v43 + 8);
    v75(v44, v45, v52);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Registration success date: %s", v46, 0xCu);
    swift_arrayDestroy(v47, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1LL, -1LL);
    swift_slowDealloc(v46, -1LL, -1LL);
  }

  else
  {
    uint64_t v75 = *(void (**)(uint64_t, uint64_t, __n128))(v43 + 8);
    ((void (*)(void, void))v75)(*(void *)(v0 + 192), *(void *)(v0 + 176));
  }

  uint64_t v59 = *(void *)(v0 + 192);
  uint64_t v60 = *(void *)(v0 + 200);
  uint64_t v61 = *(void *)(v0 + 168);
  uint64_t v62 = *(void *)(v0 + 176);
  uint64_t v63 = *(void **)(v0 + 144);
  uint64_t v64 = *(void *)(v0 + 40);
  uint64_t v65 = *(void *)(v0 + 48);
  sub_1002499B4((uint64_t)v78, v64);
  uint64_t v66 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 24))(v64, v65);
  [v66 setUnlockDate:Date.timeIntervalSince1970.getter(v66)];

  uint64_t v67 = *(void *)(v0 + 40);
  uint64_t v68 = *(void *)(v0 + 48);
  sub_1002499B4((uint64_t)v78, v67);
  uint64_t v69 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v68 + 24))(v67, v68);
  NSString v70 = String._bridgeToObjectiveC()();
  objc_msgSend(v69, "setRegistrationID:", v70, swift_bridgeObjectRelease(v76).n128_f64[0]);

  uint64_t v71 = *(void *)(v0 + 40);
  uint64_t v72 = *(void *)(v0 + 48);
  uint64_t v73 = sub_10019A708(v78, v71);
  v63[3] = v71;
  v63[4] = *(void *)(v72 + 8);
  uint64_t v74 = sub_1001A4B04(v63);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v71 - 8) + 16LL))(v74, v73, v71);
  ((void (*)(uint64_t, uint64_t))v75)(v60, v62);
  sub_10018709C(v77);
  sub_10018709C(v78);
  swift_task_dealloc(v60);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10027F198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064AD84);
  *(void *)(v3 + sub_1002499DC(*(void *)(v0 + 72), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  return sub_10027EA50(a1, a2, a3);
}

uint64_t sub_10027F200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_10027F21C, 0LL, 0LL);
}

uint64_t sub_10027F21C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  sub_10019A6C4(*(void *)(v0 + 88), v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v2);
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  [v4 setVersion:1];

  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v5);
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
  uint64_t v8 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  UUID.uuidString.getter(v8);
  uint64_t v10 = v9;
  NSString v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setSessionID:", v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

  uint64_t v12 = *(void *)(v0 + 40);
  uint64_t v13 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v12);
  uint64_t v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
  if (HIDWORD(*(void *)(v1 + *(int *)(v8 + 28)))) {
    return _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Not enough bits to represent the passed value",  45LL,  2LL,  "Swift/Integers.swift",  20LL,  2,  3455LL,  0);
  }
  uint64_t v15 = v14;
  uint64_t v16 = v0 + 56;
  objc_msgSend(v14, "setType:");

  if (qword_1006440A0 != -1) {
    swift_once(&qword_1006440A0, sub_1002770B0);
  }
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = sub_100186DE4(v17, (uint64_t)qword_10064A8D8);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v34 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v21 = 138412290;
    swift_beginAccess(v0 + 16, v0 + 56, 33LL, 0LL);
    uint64_t v23 = *(void *)(v0 + 40);
    uint64_t v22 = *(void *)(v0 + 48);
    sub_1002499B4(v0 + 16, v23);
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 24);
    uint64_t v25 = v22;
    uint64_t v16 = v0 + 56;
    uint64_t v26 = v24(v23, v25);
    swift_endAccess(v0 + 56);
    *(void *)(v0 + 56) = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v21 + 4, v21 + 12);
    *uint64_t v34 = v26;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Sending %@", v21, 0xCu);
    uint64_t v27 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v34, 1LL, v27);
    swift_slowDealloc(v34, -1LL, -1LL);
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  uint64_t v28 = *(void **)(v0 + 80);

  swift_beginAccess(v0 + 16, v16, 0LL, 0LL);
  uint64_t v29 = *(void *)(v0 + 40);
  uint64_t v30 = *(void *)(v0 + 48);
  uint64_t v31 = sub_10019A708((void *)(v0 + 16), v29);
  uint64_t v28[3] = v29;
  v28[4] = *(void *)(v30 + 8);
  uint64_t v32 = sub_1001A4B04(v28);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16LL))(v32, v31, v29);
  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027F5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064AD44);
  *(void *)(v3 + sub_1002499DC(*(void *)(v0 + 72), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return swift_task_switch(sub_10027F21C, 0LL, 0LL);
}

uint64_t sub_10027F614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_100284B9C, 0LL, 0LL);
}

uint64_t sub_10027F630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064B32C);
  *(void *)(v3 + sub_1002499DC(*(void *)(v0 + 72), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return swift_task_switch(sub_100284B9C, 0LL, 0LL);
}

uint64_t sub_10027F6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_10027F6C0, 0LL, 0LL);
}

uint64_t sub_10027F6C0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v1);
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
  [v3 setVersion:1];

  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v4);
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  uint64_t v7 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  UUID.uuidString.getter(v7);
  uint64_t v9 = v8;
  NSString v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setSessionID:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

  if (qword_1006440A0 != -1) {
    swift_once(&qword_1006440A0, sub_1002770B0);
  }
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = sub_100186DE4(v11, (uint64_t)qword_10064A8D8);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v26 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v15 = 138412290;
    swift_beginAccess(v0 + 16, v0 + 56, 33LL, 0LL);
    uint64_t v16 = *(void *)(v0 + 40);
    uint64_t v17 = *(void *)(v0 + 48);
    sub_1002499B4(v0 + 16, v16);
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
    swift_endAccess(v0 + 56);
    *(void *)(v0 + 56) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v15 + 4, v15 + 12);
    *uint64_t v26 = v18;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Sending %@", v15, 0xCu);
    uint64_t v19 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v26, 1LL, v19);
    swift_slowDealloc(v26, -1LL, -1LL);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  os_log_type_t v20 = *(void **)(v0 + 80);

  swift_beginAccess(v0 + 16, v0 + 56, 0LL, 0LL);
  uint64_t v21 = *(void *)(v0 + 40);
  uint64_t v22 = *(void *)(v0 + 48);
  uint64_t v23 = sub_10019A708((void *)(v0 + 16), v21);
  v20[3] = v21;
  v20[4] = *(void *)(v22 + 8);
  uint64_t v24 = sub_1001A4B04(v20);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16LL))(v24, v23, v21);
  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027F98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064B344);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 88), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return swift_task_switch(sub_10027F6C0, 0LL, 0LL);
}

uint64_t sub_10027FA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_10027FA1C, 0LL, 0LL);
}

uint64_t sub_10027FA1C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v1);
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
  [v3 setVersion:1];

  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v4);
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  uint64_t v7 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  UUID.uuidString.getter(v7);
  uint64_t v9 = v8;
  NSString v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setSessionID:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v12 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v11);
  uint64_t v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(v11, v12);
  [v13 setSuccess:1];

  if (qword_1006440A0 != -1) {
    swift_once(&qword_1006440A0, sub_1002770B0);
  }
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = sub_100186DE4(v14, (uint64_t)qword_10064A8D8);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v18 = 138412290;
    swift_beginAccess(v0 + 16, v0 + 56, 33LL, 0LL);
    uint64_t v19 = *(void *)(v0 + 40);
    uint64_t v20 = *(void *)(v0 + 48);
    sub_1002499B4(v0 + 16, v19);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 32))(v19, v20);
    swift_endAccess(v0 + 56);
    *(void *)(v0 + 56) = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v18 + 4, v18 + 12);
    uint64_t *v29 = v21;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Sending %@", v18, 0xCu);
    uint64_t v22 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v29, 1LL, v22);
    swift_slowDealloc(v29, -1LL, -1LL);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  uint64_t v23 = *(void **)(v0 + 80);

  swift_beginAccess(v0 + 16, v0 + 56, 0LL, 0LL);
  uint64_t v24 = *(void *)(v0 + 40);
  uint64_t v25 = *(void *)(v0 + 48);
  uint64_t v26 = sub_10019A708((void *)(v0 + 16), v24);
  uint64_t v23[3] = v24;
  void v23[4] = *(void *)(v25 + 16);
  uint64_t v27 = sub_1001A4B04(v23);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16LL))(v27, v26, v24);
  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027FD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064B27C);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 88), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return swift_task_switch(sub_10027FA1C, 0LL, 0LL);
}

uint64_t sub_10027FD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  return swift_task_switch(sub_10027FDB4, 0LL, 0LL);
}

uint64_t sub_10027FDB4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v1);
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
  [v3 setVersion:1];

  sub_100277140();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v0 + 152);
  uint64_t v11 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v10 + *(int *)(v11 + 36), v0 + 96);
  if (!*(void *)(v0 + 120))
  {
    sub_100187100(v0 + 96, &qword_100650060);
    unint64_t v17 = sub_100187014();
    uint64_t v18 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v17, 0LL, 0LL);
    *(_DWORD *)uint64_t v19 = 37;
    *(void *)(v19 + 8) = 0xD000000000000027LL;
    *(void *)(v19 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v18);
    swift_bridgeObjectRelease(v9);
LABEL_2:
    sub_10018709C((void *)(v0 + 16));
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }

  sub_1001CE0D0((__int128 *)(v0 + 96), v0 + 56);
  uint64_t v12 = *(void *)(*sub_10019A708((void *)(v0 + 56), *(void *)(v0 + 80))
                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
  uint64_t v13 = *(os_unfair_lock_s **)(v12 + 112);
  uint64_t v14 = (void *)swift_task_alloc(48LL);
  v14[2] = v12;
  void v14[3] = v7;
  v14[4] = v9;
  uint64_t v15 = swift_task_alloc(32LL);
  *(void *)(v15 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = sub_100284824;
  *(void *)(v15 + 24) = v14;
  uint64_t v16 = v13 + 4;
  os_unfair_lock_lock(v16);
  (*(void (**)(void *__return_ptr))(v15 + 16))(v57);
  unint64_t v56 = (void *)(v0 + 56);
  uint64_t v20 = (const char *)v57[1];
  os_unfair_lock_unlock(v16);
  swift_bridgeObjectRelease(v9);
  swift_task_dealloc(v15);
  swift_task_dealloc(v14);
  if (!v20)
  {
    sub_10018709C(v56);
    unint64_t v53 = sub_100187014();
    uint64_t v54 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v53, 0LL, 0LL);
    *(_DWORD *)uint64_t v55 = 10;
    *(void *)(v55 + 8) = 0xD000000000000012LL;
    *(void *)(v55 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = 0x8000000100507F50LL;
    swift_willThrow(v54);
    goto LABEL_2;
  }

  uint64_t v21 = *(void *)(v0 + 152);
  uint64_t v22 = v0 + 56;
  sub_10018709C(v56);
  uint64_t v23 = *(void *)(v0 + 40);
  uint64_t v24 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v23);
  uint64_t v25 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 24))(v23, v24);
  NSString v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v25, "setPairingID:", v26, swift_bridgeObjectRelease(v20).n128_f64[0]);

  uint64_t v27 = *(void *)(v0 + 40);
  uint64_t v28 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v27);
  uint64_t v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
  UUID.uuidString.getter(v29);
  uint64_t v31 = v30;
  NSString v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setSessionID:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

  uint64_t v33 = *(void *)(v0 + 40);
  uint64_t v34 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v33);
  uint64_t v35 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v34 + 24))(v33, v34);
  if (!HIDWORD(*(void *)(v21 + *(int *)(v11 + 28))))
  {
    uint64_t v36 = v35;
    objc_msgSend(v35, "setType:");

    if (qword_1006440A0 != -1) {
      swift_once(&qword_1006440A0, sub_1002770B0);
    }
    uint64_t v37 = type metadata accessor for Logger(0LL);
    uint64_t v38 = sub_100186DE4(v37, (uint64_t)qword_10064A8D8);
    uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      os_log_type_t v41 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      BOOL v42 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)os_log_type_t v41 = 138412290;
      swift_beginAccess(v0 + 16, v56, 33LL, 0LL);
      uint64_t v44 = *(void *)(v0 + 40);
      uint64_t v43 = *(void *)(v0 + 48);
      sub_1002499B4(v0 + 16, v44);
      uint64_t v45 = v44;
      uint64_t v22 = v0 + 56;
      uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 24))(v45, v43);
      swift_endAccess(v56);
      *(void *)(v0 + 56) = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v56, v0 + 64, v41 + 4, v41 + 12);
      *BOOL v42 = v46;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Sending %@", v41, 0xCu);
      uint64_t v47 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v42, 1LL, v47);
      swift_slowDealloc(v42, -1LL, -1LL);
      swift_slowDealloc(v41, -1LL, -1LL);
    }

    uint64_t v48 = *(void **)(v0 + 136);

    swift_beginAccess(v0 + 16, v22, 0LL, 0LL);
    uint64_t v49 = *(void *)(v0 + 40);
    uint64_t v50 = *(void *)(v0 + 48);
    uint64_t v51 = sub_10019A708((void *)(v0 + 16), v49);
    v48[3] = v49;
    v48[4] = *(void *)(v50 + 8);
    __n128 v52 = sub_1001A4B04(v48);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16LL))(v52, v51, v49);
    sub_10018709C((void *)(v0 + 16));
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }

  return _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Not enough bits to represent the passed value",  45LL,  2LL,  "Swift/Integers.swift",  20LL,  2,  3455LL,  0);
}

uint64_t sub_100280388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064ADA4);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[18] = a2;
  v7[19] = a3;
  v7[17] = a1;
  return swift_task_switch(sub_10027FDB4, 0LL, 0LL);
}

uint64_t sub_1002803FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return swift_task_switch(sub_100280418, 0LL, 0LL);
}

uint64_t sub_100280418()
{
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v7 + *(int *)(v8 + 36), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    sub_1001CE0D0((__int128 *)(v0 + 56), v0 + 16);
    uint64_t v9 = *(void *)(*sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40))
                   + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
    uint64_t v10 = *(os_unfair_lock_s **)(v9 + 112);
    uint64_t v11 = (void *)swift_task_alloc(48LL);
    v11[2] = v9;
    v11[3] = v4;
    v11[4] = v6;
    uint64_t v12 = swift_task_alloc(32LL);
    *(void *)(v12 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = sub_100284840;
    *(void *)(v12 + 24) = v11;
    v10 += 4;
    os_unfair_lock_lock(v10);
    sub_1002737FC(v13, *(uint64_t (**)(void))(v12 + 16));
    os_unfair_lock_unlock(v10);
    swift_task_dealloc(v12);
    swift_task_dealloc(v11);
    sub_10018709C((void *)(v0 + 16));
    if (qword_1006440A0 != -1) {
      swift_once(&qword_1006440A0, sub_1002770B0);
    }
    uint64_t v17 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v17, (uint64_t)qword_10064A8D8);
    swift_bridgeObjectRetain(v6);
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v22 = swift_slowAlloc(32LL, -1LL);
      uint64_t v23 = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      swift_bridgeObjectRetain(v6);
      *(void *)(v0 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = sub_10018CDB4(v4, (unint64_t)v6, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v21 + 4, v21 + 12);
      swift_bridgeObjectRelease_n(v6, 3LL);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Unpaired %s", v21, 0xCu);
      swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1LL, -1LL);
      swift_slowDealloc(v21, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(v6, 2LL);
    }

    sub_10019A6C4(*(void *)(v0 + 104), *(void *)(v0 + 96));
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  }

  else
  {
    sub_100187100(v0 + 56, &qword_100650060);
    unint64_t v14 = sub_100187014();
    uint64_t v15 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v14, 0LL, 0LL);
    *(_DWORD *)uint64_t v16 = 37;
    *(void *)(v16 + 8) = 0xD000000000000027LL;
    *(void *)(v16 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v15);
    swift_bridgeObjectRelease(v6);
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  }

  return v1();
}

uint64_t sub_100280734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064ADAC);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  return swift_task_switch(sub_100280418, 0LL, 0LL);
}

uint64_t sub_1002807A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return swift_task_switch(sub_1002807C4, 0LL, 0LL);
}

uint64_t sub_1002807C4()
{
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v7 + *(int *)(v8 + 36), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    uint64_t v9 = *(void **)(v0 + 104);
    sub_1001CE0D0((__int128 *)(v0 + 56), v0 + 16);
    sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v10 = sub_10019A708(v9, v9[3]);
    uint64_t v11 = *(const char **)((char *)v10 + *(int *)(_s6UnpairV27HandlePairingDisableContextVMa(0LL) + 24) + 8);
    swift_bridgeObjectRetain(v11);
    sub_100287224();
    swift_bridgeObjectRelease(v11);
    sub_10018709C((void *)(v0 + 16));
    if (qword_1006440A0 != -1) {
      swift_once(&qword_1006440A0, sub_1002770B0);
    }
    uint64_t v15 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v15, (uint64_t)qword_10064A8D8);
    swift_bridgeObjectRetain(v6);
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v20 = swift_slowAlloc(32LL, -1LL);
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v27 = v20;
      swift_bridgeObjectRetain(v6);
      *(void *)(v0 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = sub_10018CDB4(v4, (unint64_t)v6, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v19 + 4, v19 + 12);
      swift_bridgeObjectRelease_n(v6, 3LL);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Unpaired %s", v19, 0xCu);
      swift_arrayDestroy(v20, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1LL, -1LL);
      swift_slowDealloc(v19, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(v6, 2LL);
    }

    uint64_t v22 = *(void **)(v0 + 96);
    uint64_t v21 = *(void **)(v0 + 104);
    uint64_t v23 = v9[3];
    uint64_t v24 = v21[4];
    uint64_t v25 = sub_10019A708(v21, v23);
    v22[3] = v23;
    void v22[4] = *(void *)(v24 + 8);
    NSString v26 = sub_1001A4B04(v22);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16LL))(v26, v25, v23);
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  }

  else
  {
    sub_100187100(v0 + 56, &qword_100650060);
    unint64_t v12 = sub_100187014();
    uint64_t v13 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v12, 0LL, 0LL);
    *(_DWORD *)uint64_t v14 = 37;
    *(void *)(v14 + 8) = 0xD000000000000027LL;
    *(void *)(v14 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v13);
    swift_bridgeObjectRelease(v6);
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  }

  return v1();
}

uint64_t sub_100280AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064B274);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  return swift_task_switch(sub_1002807C4, 0LL, 0LL);
}

uint64_t sub_100280B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_100280B88, 0LL, 0LL);
}

uint64_t sub_100280B88()
{
  uint64_t v1 = *(void *)(v0 + 96);
  sub_10019A6C4(*(void *)(v0 + 88), v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v2);
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  [v4 setVersion:1];
  swift_unknownObjectRelease(v4);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v5);
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
  uint64_t v8 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  UUID.uuidString.getter(v8);
  uint64_t v10 = v9;
  NSString v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setSessionID:", v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

  swift_unknownObjectRelease(v7);
  uint64_t v12 = *(void *)(v0 + 40);
  uint64_t v13 = *(void *)(v0 + 48);
  sub_1002499B4(v0 + 16, v12);
  uint64_t v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
  if (HIDWORD(*(void *)(v1 + *(int *)(v8 + 28)))) {
    return _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Not enough bits to represent the passed value",  45LL,  2LL,  "Swift/Integers.swift",  20LL,  2,  3455LL,  0);
  }
  uint64_t v15 = v14;
  objc_msgSend(v14, "setType:");
  swift_unknownObjectRelease(v15);
  if (qword_1006440A0 != -1) {
    swift_once(&qword_1006440A0, sub_1002770B0);
  }
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = sub_100186DE4(v16, (uint64_t)qword_10064A8D8);
  os_log_type_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v34 = swift_slowAlloc(32LL, -1LL);
    uint64_t v35 = v34;
    *(_DWORD *)uint64_t v20 = 136315138;
    swift_beginAccess(v0 + 16, v0 + 56, 33LL, 0LL);
    uint64_t v22 = *(void *)(v0 + 40);
    uint64_t v21 = *(void *)(v0 + 48);
    sub_1002499B4(v0 + 16, v22);
    uint64_t v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 32))(v22, v21);
    swift_endAccess(v0 + 56);
    id v24 = [v23 description];
    swift_unknownObjectRelease(v23);
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    uint64_t v27 = v26;

    *(void *)(v0 + 56) = sub_10018CDB4(v25, (unint64_t)v27, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Sending %s", v20, 0xCu);
    swift_arrayDestroy(v34, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1LL, -1LL);
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  uint64_t v28 = *(void **)(v0 + 80);
  swift_beginAccess(v0 + 16, v0 + 56, 0LL, 0LL);
  uint64_t v29 = *(void *)(v0 + 40);
  uint64_t v30 = *(void *)(v0 + 48);
  uint64_t v31 = sub_10019A708((void *)(v0 + 16), v29);
  uint64_t v28[3] = v29;
  v28[4] = *(void *)(v30 + 8);
  NSString v32 = sub_1001A4B04(v28);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16LL))(v32, v31, v29);
  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100280F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064ACB4);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return swift_task_switch(sub_100280B88, 0LL, 0LL);
}

uint64_t sub_100280FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  return swift_task_switch(sub_100280FE4, 0LL, 0LL);
}

uint64_t sub_100280FE4()
{
  uint64_t v1 = *(void *)(v0 + 152);
  sub_10019A6C4(*(void *)(v0 + 144), v0 + 16);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v1 + *(int *)(v2 + 36), v0 + 96);
  if (*(void *)(v0 + 120))
  {
    sub_1001CE0D0((__int128 *)(v0 + 96), v0 + 56);
    uint64_t v3 = *(void *)(*sub_10019A708((void *)(v0 + 56), *(void *)(v0 + 80))
                   + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
    uint64_t v4 = *(os_unfair_lock_s **)(v3 + 112);
    uint64_t v5 = swift_task_alloc(32LL);
    *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = sub_100284650;
    *(void *)(v5 + 24) = v3;
    os_unfair_lock_lock(v4 + 4);
    sub_1002737FC(v6, *(uint64_t (**)(void))(v5 + 16));
    uint64_t v10 = *(void **)(v0 + 136);
    os_unfair_lock_unlock(v4 + 4);
    swift_task_dealloc(v5);
    sub_10018709C((void *)(v0 + 56));
    uint64_t v11 = *(void *)(v0 + 40);
    uint64_t v12 = *(void *)(v0 + 48);
    sub_1002499B4(v0 + 16, v11);
    uint64_t v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v13 setLongTermKey:isa];

    uint64_t v15 = *(void *)(v0 + 40);
    uint64_t v16 = *(void *)(v0 + 48);
    uint64_t v17 = sub_10019A708((void *)(v0 + 16), v15);
    v10[3] = v15;
    v10[4] = *(void *)(v16 + 8);
    os_log_type_t v18 = sub_1001A4B04(v10);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16LL))(v18, v17, v15);
    sub_100189B20(v20, v21);
  }

  else
  {
    sub_100187100(v0 + 96, &qword_100650060);
    unint64_t v7 = sub_100187014();
    uint64_t v8 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v7, 0LL, 0LL);
    *(_DWORD *)uint64_t v9 = 37;
    *(void *)(v9 + 8) = 0xD000000000000027LL;
    *(void *)(v9 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v8);
  }

  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10028121C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc(dword_10064ACBC);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[18] = a2;
  v7[19] = a3;
  v7[17] = a1;
  return swift_task_switch(sub_100280FE4, 0LL, 0LL);
}

uint64_t sub_100281290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  return swift_task_switch(sub_1002812AC, 0LL, 0LL);
}

uint64_t sub_1002812AC()
{
  uint64_t v1 = *(void *)(v0 + 160);
  sub_1002499DC(*(void *)(v0 + 152), v0 + 16);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v1 + *(int *)(v2 + 36), v0 + 104);
  if (*(void *)(v0 + 128))
  {
    sub_1001CE0D0((__int128 *)(v0 + 104), v0 + 64);
    uint64_t v3 = *(void *)(*sub_10019A708((void *)(v0 + 64), *(void *)(v0 + 88))
                   + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
    uint64_t v4 = *(os_unfair_lock_s **)(v3 + 112);
    uint64_t v5 = swift_task_alloc(32LL);
    *(void *)(v5 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = sub_100284650;
    *(void *)(v5 + 24) = v3;
    v4 += 4;
    os_unfair_lock_lock(v4);
    sub_1002737FC(v6, *(uint64_t (**)(void))(v5 + 16));
    uint64_t v10 = *(void **)(v0 + 152);
    os_unfair_lock_unlock(v4);
    swift_task_dealloc(v5);
    sub_10019A708((void *)(v0 + 64), *(void *)(v0 + 88));
    uint64_t v11 = v10[3];
    uint64_t v12 = v10[4];
    sub_10019A708(v10, v11);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
    unint64_t v15 = v14;
    uint64_t v17 = sub_100285B9C(v13, v14, 0LL, 0xF000000000000000LL);
    os_log_type_t v18 = *(void **)(v0 + 144);
    unint64_t v20 = v19;
    sub_100189B20(v13, v15);
    uint64_t v21 = *(void *)(v0 + 40);
    uint64_t v22 = *(void *)(v0 + 56);
    sub_1002499B4(v0 + 16, v21);
    uint64_t v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v23 setLongTermKey:isa];

    uint64_t v25 = *(void *)(v0 + 40);
    uint64_t v26 = *(void *)(v0 + 56);
    sub_1002499B4(v0 + 16, v25);
    uint64_t v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 24))(v25, v26);
    Class v28 = Data._bridgeToObjectiveC()().super.isa;
    [v27 setToken:v28];

    uint64_t v29 = *(void *)(v0 + 40);
    uint64_t v30 = *(void *)(v0 + 48);
    uint64_t v31 = sub_10019A708((void *)(v0 + 16), v29);
    uint64_t v18[3] = v29;
    v18[4] = *(void *)(v30 + 8);
    NSString v32 = sub_1001A4B04(v18);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16LL))(v32, v31, v29);
    sub_100189B20(v17, v20);
    sub_100189B20(v33, v34);
    sub_10018709C((void *)(v0 + 64));
  }

  else
  {
    sub_100187100(v0 + 104, &qword_100650060);
    unint64_t v7 = sub_100187014();
    uint64_t v8 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v7, 0LL, 0LL);
    *(_DWORD *)uint64_t v9 = 37;
    *(void *)(v9 + 8) = 0xD000000000000027LL;
    *(void *)(v9 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v8);
  }

  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002815EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc(dword_10064B2BC);
  *(void *)(v3 + sub_10019A6C4(*(void *)(v0 + 144), v0 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[19] = a2;
  v7[20] = a3;
  v7[18] = a1;
  return swift_task_switch(sub_1002812AC, 0LL, 0LL);
}

uint64_t sub_100281660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[20] = a2;
  v3[21] = a3;
  v3[19] = a1;
  return swift_task_switch(sub_10028167C, 0LL, 0LL);
}

uint64_t sub_10028167C()
{
  uint64_t v2 = *(void *)(v0 + 168);
  swift_bridgeObjectRelease(v3);
  uint64_t v4 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v2 + *(int *)(v4 + 36), v0 + 112);
  if (*(void *)(v0 + 136))
  {
    uint64_t v5 = *(void **)(v0 + 160);
    sub_1001CE0D0((__int128 *)(v0 + 112), v0 + 72);
    sub_10019A708((void *)(v0 + 72), *(void *)(v0 + 96));
    uint64_t v6 = v5[3];
    uint64_t v7 = v5[4];
    sub_10019A708(v5, v6);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
    unint64_t v10 = v9;
    uint64_t v11 = v5[3];
    uint64_t v12 = v5[5];
    sub_10019A708(v5, v11);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
    unint64_t v15 = v14;
    uint64_t v16 = sub_100285B9C(v8, v10, v13, v14);
    unint64_t v21 = v20;
    uint64_t v22 = *(void **)(v0 + 152);
    uint64_t v31 = v16;
    sub_100189B20(v13, v15);
    sub_100189B20(v8, v10);
    uint64_t v23 = *(void *)(v0 + 40);
    uint64_t v24 = *(void *)(v0 + 64);
    sub_1002499B4(v0 + 16, v23);
    uint64_t v25 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 24))(v23, v24);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v25 setToken:isa];

    uint64_t v27 = *(void *)(v0 + 40);
    uint64_t v28 = *(void *)(v0 + 48);
    uint64_t v29 = sub_10019A708((void *)(v0 + 16), v27);
    v22[3] = v27;
    void v22[4] = *(void *)(v28 + 8);
    uint64_t v30 = sub_1001A4B04(v22);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16LL))(v30, v29, v27);
    sub_100189B20(v31, v21);
    sub_10018709C((void *)(v0 + 72));
  }

  else
  {
    sub_100187100(v0 + 112, &qword_100650060);
    unint64_t v17 = sub_100187014();
    uint64_t v18 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v17, 0LL, 0LL);
    *(_DWORD *)uint64_t v19 = 37;
    *(void *)(v19 + 8) = 0xD000000000000027LL;
    *(void *)(v19 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v18);
  }

  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100281928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064B2C4);
  *(void *)(v3 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[20] = a2;
  v7[21] = a3;
  v7[19] = a1;
  return swift_task_switch(sub_10028167C, 0LL, 0LL);
}

uint64_t sub_10028199C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  v3[6] = v4;
  v3[7] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002819FC, 0LL, 0LL);
}

uint64_t sub_1002819FC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (*(void *)(*(void *)(v0 + 40) + *(int *)(v1 + 28)) == 3LL)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(SFAuthenticationsDynamicStoreEnabledBioArmPath);
    uint64_t v3 = v2;
    if (qword_1006440A0 != -1) {
      swift_once(&qword_1006440A0, sub_1002770B0);
    }
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v6 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v6, (uint64_t)qword_10064A8D8);
    uint64_t v7 = sub_100284ABC(v5, v4);
    uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v9 = static os_log_type_t.default.getter();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = *(void *)(v0 + 56);
    if (v10)
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v21 = swift_slowAlloc(32LL, -1LL);
      uint64_t v13 = v21;
      *(_DWORD *)uint64_t v12 = 136315138;
      unint64_t v14 = sub_10034F010(*(void *)(v11 + *(int *)(v1 + 28)));
      uint64_t v16 = (const char *)v15;
      *(void *)(v0 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = sub_10018CDB4(v14, v15, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v16);
      sub_1001A4BC8(v11, type metadata accessor for SDAuthenticationCommonOperationInput);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Setting dynamic store to enabled for type %s", v12, 0xCu);
      swift_arrayDestroy(v13, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1LL, -1LL);
      swift_slowDealloc(v12, -1LL, -1LL);
    }

    else
    {
      sub_1001A4BC8(*(void *)(v0 + 56), type metadata accessor for SDAuthenticationCommonOperationInput);
    }

    NSString v17 = String._bridgeToObjectiveC()();
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v3);
    sub_10008A698(0LL, v17, v18);
  }

  uint64_t v19 = *(void *)(v0 + 56);
  sub_10019A6C4(*(void *)(v0 + 32), *(void *)(v0 + 24));
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100281C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064B2CC);
  *(void *)(v3 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  return sub_10028199C(a1, a2, a3);
}

uint64_t sub_100281CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  return swift_task_switch(sub_100281CDC, 0LL, 0LL);
}

uint64_t sub_100281CDC()
{
  uint64_t v1 = *(void *)(v0 + 160);
  sub_1002499DC(*(void *)(v0 + 152), v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 56);
  sub_1002499B4(v0 + 16, v2);
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  uint64_t v5 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v1 + *(int *)(v5 + 36), v0 + 104);
  if (*(void *)(v0 + 128))
  {
    uint64_t v6 = *(void **)(v0 + 152);
    sub_1001CE0D0((__int128 *)(v0 + 104), v0 + 64);
    sub_10019A708((void *)(v0 + 64), *(void *)(v0 + 88));
    uint64_t v7 = v6[3];
    uint64_t v8 = v6[4];
    sub_10019A708(v6, v7);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    unint64_t v11 = (unint64_t)v10;
    unint64_t v15 = sub_100286138(v9, v10);
    unint64_t v17 = v16;
    NSString v18 = *(void **)(v0 + 144);
    sub_100189B20(v9, v11);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100189B20((uint64_t)v15, v17);
    sub_10018709C((void *)(v0 + 64));
    [v4 setToken:isa];

    uint64_t v20 = *(void *)(v0 + 40);
    uint64_t v21 = *(void *)(v0 + 48);
    uint64_t v22 = sub_10019A708((void *)(v0 + 16), v20);
    uint64_t v18[3] = v20;
    v18[4] = *(void *)(v21 + 8);
    uint64_t v23 = sub_1001A4B04(v18);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16LL))(v23, v22, v20);
  }

  else
  {
    sub_100187100(v0 + 104, &qword_100650060);
    unint64_t v12 = sub_100187014();
    uint64_t v13 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v12, 0LL, 0LL);
    *(_DWORD *)uint64_t v14 = 37;
    *(void *)(v14 + 8) = 0xD000000000000027LL;
    *(void *)(v14 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v13);
  }

  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100281F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064B2D4);
  *(void *)(v3 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[19] = a2;
  v7[20] = a3;
  v7[18] = a1;
  return swift_task_switch(sub_100281CDC, 0LL, 0LL);
}

uint64_t sub_100281F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  return swift_task_switch(sub_100281FA4, 0LL, 0LL);
}

uint64_t sub_100281FA4()
{
  uint64_t v1 = *(void *)(v0 + 160);
  sub_1002499DC(*(void *)(v0 + 152), v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 56);
  sub_1002499B4(v0 + 16, v2);
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  uint64_t v5 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v1 + *(int *)(v5 + 36), v0 + 104);
  if (*(void *)(v0 + 128))
  {
    uint64_t v6 = *(void **)(v0 + 152);
    sub_1001CE0D0((__int128 *)(v0 + 104), v0 + 64);
    sub_10019A708((void *)(v0 + 64), *(void *)(v0 + 88));
    uint64_t v7 = v6[3];
    uint64_t v8 = v6[4];
    sub_10019A708(v6, v7);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    unint64_t v11 = v10;
    unint64_t v15 = sub_100286E1C(v9, v10);
    unint64_t v17 = v16;
    NSString v18 = *(void **)(v0 + 144);
    sub_100189B20(v9, v11);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100189B20((uint64_t)v15, v17);
    sub_10018709C((void *)(v0 + 64));
    [v4 setToken:isa];

    uint64_t v20 = *(void *)(v0 + 40);
    uint64_t v21 = *(void *)(v0 + 48);
    uint64_t v22 = sub_10019A708((void *)(v0 + 16), v20);
    uint64_t v18[3] = v20;
    v18[4] = *(void *)(v21 + 8);
    uint64_t v23 = sub_1001A4B04(v18);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16LL))(v23, v22, v20);
  }

  else
  {
    sub_100187100(v0 + 104, &qword_100650060);
    unint64_t v12 = sub_100187014();
    uint64_t v13 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v12, 0LL, 0LL);
    *(_DWORD *)uint64_t v14 = 37;
    *(void *)(v14 + 8) = 0xD000000000000027LL;
    *(void *)(v14 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v13);
  }

  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002821DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064B29C);
  *(void *)(v3 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[19] = a2;
  v7[20] = a3;
  v7[18] = a1;
  return swift_task_switch(sub_100281FA4, 0LL, 0LL);
}

uint64_t sub_100282250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  uint64_t v4 = type metadata accessor for String.Encoding(0LL);
  v3[17] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002822AC, 0LL, 0LL);
}

uint64_t sub_1002822AC()
{
  uint64_t v1 = *(void **)(v0 + 120);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[5];
  sub_10019A708(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  if (v5 >> 60 == 15) {
    goto LABEL_6;
  }
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  *(void *)(v0 + 96) = v4;
  uint64_t v8 = *(void *)(v0 + 136);
  *(void *)(v0 + 104) = v5;
  static String.Encoding.utf8.getter(v4);
  unint64_t v9 = sub_100284B00();
  uint64_t v10 = String.init<A>(bytes:encoding:)(v0 + 96, v8, &type metadata for Data, v9);
  if (!v11)
  {
    sub_100189B0C(v6, v7);
LABEL_6:
    unint64_t v22 = sub_100187014();
    uint64_t v23 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v22, 0LL, 0LL);
    *(_DWORD *)uint64_t v24 = 1;
    *(void *)(v24 + 8) = 0xD000000000000024LL;
    *(void *)(v24 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = 0x8000000100507FF0LL;
    swift_willThrow(v23);
LABEL_7:
    swift_task_dealloc(*(void *)(v0 + 136));
    uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
    return v36();
  }

  uint64_t v12 = v10;
  uint64_t v13 = v11;
  uint64_t v14 = *(void *)(v0 + 128);
  uint64_t v15 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v14 + *(int *)(v15 + 36), v0 + 56);
  if (!*(void *)(v0 + 80))
  {
    sub_100187100(v0 + 56, &qword_100650060);
    unint64_t v26 = sub_100187014();
    uint64_t v27 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v26, 0LL, 0LL);
    *(_DWORD *)uint64_t v28 = 37;
    *(void *)(v28 + 8) = 0xD000000000000027LL;
    *(void *)(v28 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v27);
    swift_bridgeObjectRelease(v13);
    sub_100189B0C(v6, v7);
    goto LABEL_7;
  }

  unint64_t v16 = *(void **)(v0 + 120);
  sub_1001CE0D0((__int128 *)(v0 + 56), v0 + 16);
  sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v18 = v1[3];
  uint64_t v17 = v1[4];
  sub_10019A708(v16, v18);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v18, v17);
  unint64_t v21 = v20;
  sub_10028683C(v19, v20, v12, (uint64_t)v13);
  uint64_t v29 = *(void *)(v0 + 136);
  uint64_t v31 = *(void **)(v0 + 112);
  uint64_t v30 = *(void **)(v0 + 120);
  swift_bridgeObjectRelease(v13);
  sub_100189B20(v19, v21);
  sub_10018709C((void *)(v0 + 16));
  uint64_t v33 = v1[3];
  uint64_t v32 = v1[4];
  unint64_t v34 = sub_10019A708(v30, v33);
  v31[3] = v33;
  v31[4] = *(void *)(v32 + 8);
  uint64_t v35 = sub_1001A4B04(v31);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16LL))(v35, v34, v33);
  sub_100189B0C(v6, v7);
  swift_task_dealloc(v29);
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_100282594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc(dword_10064B2E4);
  *(void *)(v3 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_100195708;
  return sub_100282250(a1, a2, a3);
}

uint64_t sub_1002825FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  return swift_task_switch(sub_100282618, 0LL, 0LL);
}

uint64_t sub_100282618()
{
  uint64_t v1 = *(void *)(v0 + 152);
  sub_10019A6C4(*(void *)(v0 + 144), v0 + 16);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v1 + *(int *)(v2 + 36), v0 + 96);
  if (*(void *)(v0 + 120))
  {
    sub_1001CE0D0((__int128 *)(v0 + 96), v0 + 56);
    sub_10019A708((void *)(v0 + 56), *(void *)(v0 + 80));
    sub_100285550();
    sub_10019A708((void *)(v0 + 56), *(void *)(v0 + 80));
    uint64_t v7 = sub_100286B00(0LL, 0xF000000000000000LL);
    unint64_t v9 = v8;
    uint64_t v10 = *(void **)(v0 + 136);
    uint64_t v11 = *(void *)(v0 + 40);
    uint64_t v12 = *(void *)(v0 + 48);
    sub_1002499B4(v0 + 16, v11);
    uint64_t v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v13 setToken:isa];

    uint64_t v15 = *(void *)(v0 + 40);
    uint64_t v16 = *(void *)(v0 + 48);
    uint64_t v17 = sub_10019A708((void *)(v0 + 16), v15);
    v10[3] = v15;
    v10[4] = *(void *)(v16 + 8);
    uint64_t v18 = sub_1001A4B04(v10);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16LL))(v18, v17, v15);
    sub_100189B20(v7, v9);
    sub_10018709C((void *)(v0 + 56));
  }

  else
  {
    sub_100187100(v0 + 96, &qword_100650060);
    unint64_t v3 = sub_100187014();
    uint64_t v4 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v3, 0LL, 0LL);
    *(_DWORD *)uint64_t v5 = 37;
    *(void *)(v5 + 8) = 0xD000000000000027LL;
    *(void *)(v5 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v4);
  }

  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100282838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064AD94);
  *(void *)(v3 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[18] = a2;
  v7[19] = a3;
  v7[17] = a1;
  return swift_task_switch(sub_100282618, 0LL, 0LL);
}

uint64_t sub_1002828AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  return swift_task_switch(sub_1002828C8, 0LL, 0LL);
}

uint64_t sub_1002828C8()
{
  uint64_t v1 = *(void *)(v0 + 160);
  sub_1002499DC(*(void *)(v0 + 152), v0 + 16);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v1 + *(int *)(v2 + 36), v0 + 104);
  if (*(void *)(v0 + 128))
  {
    uint64_t v3 = *(void **)(v0 + 152);
    sub_1001CE0D0((__int128 *)(v0 + 104), v0 + 64);
    sub_10019A708((void *)(v0 + 64), *(void *)(v0 + 88));
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    sub_10019A708(v3, v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    unint64_t v8 = v7;
    uint64_t v12 = sub_100286B00(v6, v7);
    unint64_t v14 = v13;
    uint64_t v15 = *(void **)(v0 + 144);
    sub_100189B20(v6, v8);
    sub_10018709C((void *)(v0 + 64));
    uint64_t v16 = *(void *)(v0 + 40);
    uint64_t v17 = *(void *)(v0 + 56);
    sub_1002499B4(v0 + 16, v16);
    uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v18 setToken:isa];

    uint64_t v20 = *(void *)(v0 + 40);
    uint64_t v21 = *(void *)(v0 + 48);
    unint64_t v22 = sub_10019A708((void *)(v0 + 16), v20);
    v15[3] = v20;
    void v15[4] = *(void *)(v21 + 8);
    uint64_t v23 = sub_1001A4B04(v15);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16LL))(v23, v22, v20);
    sub_100189B20(v12, v14);
  }

  else
  {
    sub_100187100(v0 + 104, &qword_100650060);
    unint64_t v9 = sub_100187014();
    uint64_t v10 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v9, 0LL, 0LL);
    *(_DWORD *)uint64_t v11 = 37;
    *(void *)(v11 + 8) = 0xD000000000000027LL;
    *(void *)(v11 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v10);
  }

  sub_10018709C((void *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100282AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc(dword_10064B294);
  *(void *)(v3 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[19] = a2;
  v7[20] = a3;
  v7[18] = a1;
  return swift_task_switch(sub_1002828C8, 0LL, 0LL);
}

uint64_t sub_100282B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return swift_task_switch(sub_100282B88, 0LL, 0LL);
}

uint64_t sub_100282B88()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v1 + *(int *)(v2 + 36), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    uint64_t v3 = *(void **)(v0 + 104);
    sub_1001CE0D0((__int128 *)(v0 + 56), v0 + 16);
    sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    sub_10019A708(v3, v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    unint64_t v8 = v7;
    sub_100287078(v6, v7);
    sub_100189B20(v6, v8);
    sub_10018709C((void *)(v0 + 16));
    if (qword_1006440A0 != -1) {
      swift_once(&qword_1006440A0, sub_1002770B0);
    }
    uint64_t v9 = type metadata accessor for Logger(0LL);
    uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_10064A8D8);
    uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      unint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Finalized Registration", v13, 2u);
      swift_slowDealloc(v13, -1LL, -1LL);
    }

    uint64_t v15 = *(void **)(v0 + 96);
    unint64_t v14 = *(void **)(v0 + 104);

    uint64_t v16 = v3[3];
    uint64_t v17 = v3[4];
    uint64_t v18 = sub_10019A708(v14, v16);
    v15[3] = v16;
    void v15[4] = *(void *)(v17 + 8);
    uint64_t v19 = sub_1001A4B04(v15);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16LL))(v19, v18, v16);
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  }

  else
  {
    sub_100187100(v0 + 56, &qword_100650060);
    unint64_t v21 = sub_100187014();
    uint64_t v22 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v21, 0LL, 0LL);
    *(_DWORD *)uint64_t v23 = 37;
    *(void *)(v23 + 8) = 0xD000000000000027LL;
    *(void *)(v23 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v22);
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  }

  return v20();
}

uint64_t sub_100282DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc(dword_10064B2A4);
  *(void *)(v3 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  return swift_task_switch(sub_100282B88, 0LL, 0LL);
}

uint64_t sub_100282E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return swift_task_switch(sub_100282E4C, 0LL, 0LL);
}

uint64_t sub_100282E4C()
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v4 + *(int *)(v5 + 36), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    sub_1001CE0D0((__int128 *)(v0 + 56), v0 + 16);
    uint64_t v6 = sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40));
    UUID.uuidString.getter(v6);
    unint64_t v8 = v7;
    sub_1002872AC();
    *(void *)&double v9 = swift_bridgeObjectRelease(v3).n128_u64[0];
    swift_bridgeObjectRelease(v8, v9);
    sub_10018709C((void *)(v0 + 16));
    if (qword_1006440A0 != -1) {
      swift_once(&qword_1006440A0, sub_1002770B0);
    }
    uint64_t v10 = type metadata accessor for Logger(0LL);
    uint64_t v11 = sub_100186DE4(v10, (uint64_t)qword_10064A8D8);
    os_log_type_t v12 = (os_log_s *)Logger.logObject.getter(v11);
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      unint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Record Last Registration", v14, 2u);
      swift_slowDealloc(v14, -1LL, -1LL);
    }

    uint64_t v16 = *(void *)(v0 + 96);
    uint64_t v15 = *(void *)(v0 + 104);

    sub_10019A6C4(v15, v16);
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  }

  else
  {
    sub_100187100(v0 + 56, &qword_100650060);
    unint64_t v18 = sub_100187014();
    uint64_t v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v18, 0LL, 0LL);
    *(_DWORD *)uint64_t v20 = 37;
    *(void *)(v20 + 8) = 0xD000000000000027LL;
    *(void *)(v20 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v19);
    swift_bridgeObjectRelease(v3);
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  }

  return v17();
}

uint64_t sub_100283080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc(dword_10064B2B4);
  *(void *)(v3 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  return swift_task_switch(sub_100282E4C, 0LL, 0LL);
}

uint64_t sub_1002830F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return swift_task_switch(sub_100283110, 0LL, 0LL);
}

uint64_t sub_100283110()
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v4 + *(int *)(v5 + 36), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    uint64_t v6 = *(void *)(v0 + 112);
    sub_1001CE0D0((__int128 *)(v0 + 56), v0 + 16);
    unint64_t v7 = sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40));
    UUID.uuidString.getter(v7);
    double v9 = v8;
    uint64_t v20 = *(int *)(v5 + 32);
    sub_10028732C();
    *(void *)&double v10 = swift_bridgeObjectRelease(v3).n128_u64[0];
    swift_bridgeObjectRelease(v9, v10);
    sub_10018709C((void *)(v0 + 16));
    if (qword_1006440A0 != -1) {
      swift_once(&qword_1006440A0, sub_1002770B0);
    }
    uint64_t v11 = type metadata accessor for Logger(0LL);
    uint64_t v12 = sub_100186DE4(v11, (uint64_t)qword_10064A8D8);
    os_log_type_t v13 = (os_log_s *)Logger.logObject.getter(v12);
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Record PairingID and Last Registration Date", v15, 2u);
      swift_slowDealloc(v15, -1LL, -1LL);
    }

    if ((*(_BYTE *)(v6 + v20) & 1) == 0)
    {
      sub_10019A708(*(void **)(v0 + 112), *(void *)(*(void *)(v0 + 112) + 24LL));
      sub_10047700C();
    }

    sub_10019A6C4(*(void *)(v0 + 104), *(void *)(v0 + 96));
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  }

  else
  {
    sub_100187100(v0 + 56, &qword_100650060);
    unint64_t v17 = sub_100187014();
    uint64_t v18 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v17, 0LL, 0LL);
    *(_DWORD *)uint64_t v19 = 37;
    *(void *)(v19 + 8) = 0xD000000000000027LL;
    *(void *)(v19 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v18);
    swift_bridgeObjectRelease(v3);
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  }

  return v16();
}

uint64_t sub_10028336C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc(dword_10064B2DC);
  *(void *)(v3 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  return swift_task_switch(sub_100283110, 0LL, 0LL);
}

uint64_t sub_1002833E0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch(sub_1002833F8, 0LL, 0LL);
}

uint64_t sub_1002833F8()
{
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10019A708(v1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3) & 1) != 0)
  {
    uint64_t v4 = *(void **)(v0 + 16);
    uint64_t v5 = v1[3];
    uint64_t v6 = v1[4];
    unint64_t v7 = sub_10019A708(*(void **)(v0 + 24), v5);
    void v4[3] = v5;
    v4[4] = *(void *)(v6 + 16);
    unint64_t v8 = sub_1001A4B04(v4);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16LL))(v8, v7, v5);
  }

  else
  {
    unint64_t v9 = sub_100187014();
    uint64_t v10 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v9, 0LL, 0LL);
    *(_DWORD *)uint64_t v11 = 10;
    *(void *)(v11 + 8) = 0xD000000000000037LL;
    *(void *)(v11 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = 0x8000000100507F70LL;
    swift_willThrow(v10);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002834F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc(dword_10064B284);
  *(void *)(v2 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100195708;
  void v5[2] = a1;
  v5[3] = a2;
  return swift_task_switch(sub_1002833F8, 0LL, 0LL);
}

uint64_t sub_100283554(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return swift_task_switch(sub_10028356C, 0LL, 0LL);
}

uint64_t sub_10028356C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10019A708(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_10043EDF4();
  uint64_t v5 = *(void **)(v0 + 56);
  uint64_t v4 = *(void **)(v0 + 64);
  sub_10018709C((void *)(v0 + 16));
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  unint64_t v8 = sub_10019A708(v4, v6);
  v5[3] = v6;
  v5[4] = *(void *)(v7 + 8);
  unint64_t v9 = sub_1001A4B04(v5);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v9, v8, v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100283650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return swift_task_switch(sub_10028366C, 0LL, 0LL);
}

uint64_t sub_10028366C()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  sub_100284608(v1 + *(int *)(v2 + 36), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    sub_1001CE0D0((__int128 *)(v0 + 56), v0 + 16);
    sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40));
    sub_1002850D0();
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v6 = *(void *)(v0 + 104);
    sub_10018709C((void *)(v0 + 16));
    sub_10019A6C4(v6, v7);
  }

  else
  {
    sub_100187100(v0 + 56, &qword_100650060);
    unint64_t v3 = sub_100187014();
    uint64_t v4 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v3, 0LL, 0LL);
    *(_DWORD *)uint64_t v5 = 37;
    *(void *)(v5 + 8) = 0xD000000000000027LL;
    *(void *)(v5 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = 0x8000000100507CD0LL;
    swift_willThrow(v4);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100283780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064B364);
  *(void *)(v3 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  return swift_task_switch(sub_10028366C, 0LL, 0LL);
}

uint64_t sub_1002837F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[27] = a2;
  v3[28] = a3;
  v3[26] = a1;
  uint64_t v4 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  v3[29] = v4;
  v3[30] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_1006457E8);
  v3[31] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100283878, 0LL, 0LL);
}

uint64_t sub_100283878()
{
  uint64_t v1 = *(void *)(v0 + 216);
  sub_10019A6C4(v1, *(void *)(v0 + 208));
  sub_10019A6C4(v1, v0 + 56);
  uint64_t v2 = sub_100183098(&qword_100645A28);
  uint64_t v3 = sub_100183098(&qword_10064B310);
  if ((swift_dynamicCast(v0 + 96, v0 + 56, v2, v3, 6LL) & 1) != 0)
  {
    uint64_t v4 = *(void *)(v0 + 240);
    uint64_t v5 = *(void *)(v0 + 248);
    uint64_t v6 = *(void *)(v0 + 232);
    uint64_t v7 = *(void **)(v0 + 208);
    uint64_t v8 = sub_1001CE0D0((__int128 *)(v0 + 96), v0 + 16);
    Date.init()(v8);
    uint64_t v9 = type metadata accessor for Date(0LL);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v5, 0LL, 1LL, v9);
    uint64_t v10 = *(void *)(v0 + 40);
    uint64_t v11 = *(void *)(v0 + 48);
    sub_1002499B4(v0 + 16, v10);
    uint64_t v12 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))( v0 + 176,  v10,  v11);
    sub_100225008(v5, v13 + *(int *)(v6 + 20));
    v12(v0 + 176, 0LL);
    uint64_t v14 = *(void *)(v0 + 40);
    uint64_t v15 = *(void *)(v0 + 48);
    sub_10019A708((void *)(v0 + 16), v14);
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
    type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
    sub_10043C9B8();
    sub_1001A4BC8(v4, type metadata accessor for SDAuthenticationSessionMetrics);
    uint64_t v16 = *(void *)(v0 + 40);
    uint64_t v17 = *(void *)(v0 + 48);
    uint64_t v18 = sub_10019A708((void *)(v0 + 16), v16);
    *(void *)(v0 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = v16;
    *(void *)(v0 + 168) = *(void *)(v17 + 8);
    uint64_t v19 = sub_1001A4B04((void *)(v0 + 136));
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16LL))(v19, v18, v16);
    sub_10018709C(v7);
    sub_1001CE0D0((__int128 *)(v0 + 136), (uint64_t)v7);
    sub_10018709C((void *)(v0 + 16));
  }

  else
  {
    *(void *)(v0 + 128) = 0LL;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    sub_100187100(v0 + 96, &qword_10064B358);
  }

  uint64_t v20 = *(void *)(v0 + 240);
  swift_task_dealloc(*(void *)(v0 + 248));
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100283A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_10064B354);
  *(void *)(v3 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1001943E8;
  return sub_1002837F4(a1, a2, a3);
}

id sub_100283B00()
{
  return [*v0 hasErrorCode];
}

id sub_100283B20()
{
  return [*v0 errorCode];
}

uint64_t sub_100283B30(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v19 + ((v5 + 16LL) & ~(unint64_t)v5);
    swift_retain(v19);
  }

  else
  {
    __int128 v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    __int128 v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    uint64_t v9 = a3[6];
    uint64_t v10 = v4 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16LL))(v10, v11, v12);
    uint64_t v13 = a3[8];
    *(void *)(v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(_BYTE *)(v4 + v13) = *((_BYTE *)a2 + v13);
    uint64_t v14 = a3[9];
    uint64_t v15 = v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 24);
    if (v17)
    {
      uint64_t v18 = *(void *)(v16 + 32);
      *(void *)(v15 + 24) = v17;
      *(void *)(v15 + sub_100195658(v0 + 32) = v18;
      (**(void (***)(void))(v17 - 8))();
    }

    else
    {
      __int128 v20 = *(_OWORD *)(v16 + 16);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *(_OWORD *)(v15 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v20;
      *(void *)(v15 + sub_100195658(v0 + 32) = *(void *)(v16 + 32);
    }
  }

  return v4;
}

void *sub_100283C50(void *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for UUID(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
  id result = (void *)((char *)a1 + *(int *)(a2 + 36));
  if (result[3]) {
    return (void *)sub_10018709C(result);
  }
  return result;
}

uint64_t sub_100283CBC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  __int128 v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13 + 24);
  if (v16)
  {
    uint64_t v17 = *(void *)(v15 + 32);
    *(void *)(v14 + 24) = v16;
    *(void *)(v14 + sub_100195658(v0 + 32) = v17;
    (**(void (***)(void))(v16 - 8))();
  }

  else
  {
    __int128 v18 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v18;
    *(void *)(v14 + sub_100195658(v0 + 32) = *(void *)(v15 + 32);
  }

  return a1;
}

void *sub_100283DA8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a3[6];
  __int128 v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24LL))(v7, v8, v9);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  uint64_t v10 = a3[9];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *((void *)v12 + 3);
  if (!*(void *)((char *)a1 + v10 + 24))
  {
    if (v13)
    {
      *((void *)v11 + 3) = v13;
      *((void *)v11 + 4) = *((void *)v12 + 4);
      (**(void (***)(char *, char *))(v13 - 8))(v11, v12);
      return a1;
    }

uint64_t sub_100283EA0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v6;
  *(void *)(a1 + sub_100195658(v0 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(_OWORD *)(a2 + 40);
  __int128 v7 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 56) = v7;
  uint64_t v11 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL))(v9, v10, v11);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  __int128 v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v16;
  *(void *)(v14 + sub_100195658(v0 + 32) = *(void *)(v15 + 32);
  return a1;
}

uint64_t sub_100283F5C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v6;
  *(void *)(a1 + sub_100195658(v0 + 32) = *(void *)(a2 + 32);
  sub_10018709C((void *)(a1 + 40));
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v1sub_10022D314(2, 1) = *(_BYTE *)(a2 + v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = a1 + v12;
  if (*(void *)(a1 + v12 + 24)) {
    sub_10018709C((void *)(a1 + v12));
  }
  __int128 v14 = *(_OWORD *)(a2 + v12 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)(a2 + v12);
  *(_OWORD *)(v13 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = v14;
  *(void *)(v13 + sub_100195658(v0 + 32) = *(void *)(a2 + v12 + 32);
  return a1;
}

uint64_t sub_100284034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100284040);
}

uint64_t sub_100284040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for UUID(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))( a1 + *(int *)(a3 + 24),  a2,  v8);
  }

uint64_t sub_1002840BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002840C8);
}

uint64_t sub_1002840C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UUID(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( v5 + *(int *)(a4 + 24),  a2,  a2,  v7);
  }

  return result;
}

uint64_t type metadata accessor for SDAuthenticationCommonOperationInput(uint64_t a1)
{
  uint64_t result = qword_10064A948;
  if (!qword_10064A948) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationCommonOperationInput);
  }
  return result;
}

uint64_t sub_100284178(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = "(";
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    void v4[2] = *(void *)(result - 8) + 64LL;
    void v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = &unk_1004D1630;
    void v4[5] = &unk_1004D1648;
    swift_initStructMetadata(a1, 256LL, 6LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

ValueMetadata *type metadata accessor for SDAuthentication()
{
  return &type metadata for SDAuthentication;
}

uint64_t *destroy for SDAuthenticationApproveResult(uint64_t *result)
{
  unint64_t v1 = result[1];
  if (v1 >> 60 != 15) {
    return (uint64_t *)sub_100189B20(*result, v1);
  }
  return result;
}

uint64_t _s16DaemoniOSLibrary29SDAuthenticationApproveResultVwCP_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }

  else
  {
    uint64_t v5 = *a2;
    sub_10019BA8C(*a2, a2[1]);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v4;
  }

  *(_BYTE *)(a1 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = *((_BYTE *)a2 + 16);
  *(_DWORD *)(a1 + 2_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *((_DWORD *)a2 + 5);
  return a1;
}

uint64_t assignWithCopy for SDAuthenticationApproveResult(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) >> 60 != 15LL)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a2;
      sub_10019BA8C(*(void *)a2, *(void *)(a2 + 8));
      uint64_t v7 = *(void *)a1;
      unint64_t v8 = *(void *)(a1 + 8);
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = v4;
      sub_100189B20(v7, v8);
      goto LABEL_8;
    }

    sub_10019DC8C(a1);
    goto LABEL_6;
  }

  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }

  uint64_t v5 = *(void *)a2;
  sub_10019BA8C(*(void *)a2, *(void *)(a2 + 8));
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
LABEL_8:
  *(_BYTE *)(a1 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = *(_BYTE *)(a2 + 16);
  *(_DWORD *)(a1 + 2_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(_DWORD *)(a2 + 20);
  return a1;
}

uint64_t assignWithTake for SDAuthenticationApproveResult(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = *(void *)(a2 + 8);
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a1;
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      sub_100189B20(v6, v4);
      goto LABEL_6;
    }

    sub_10019DC8C(a1);
  }

  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  *(_BYTE *)(a1 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = *(_BYTE *)(a2 + 16);
  *(_DWORD *)(a1 + 2_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = *(_DWORD *)(a2 + 20);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAuthenticationApproveResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SDAuthenticationApproveResult( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = 0LL;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 24) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 24) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = a2 + 1;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SDAuthenticationApproveResult()
{
  return &type metadata for SDAuthenticationApproveResult;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UnpairRemoteLTK()
{
  return &type metadata for SDAuthentication.Operation.UnpairRemoteLTK;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.BuildPairingDisableMessage()
{
  return &type metadata for SDAuthentication.Operation.BuildPairingDisableMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckLockRegisteredAndArmedWithAKSManager()
{
  return &type metadata for SDAuthentication.Operation.CheckLockRegisteredAndArmedWithAKSManager;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeAKSTokenInRegistrationResponseMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeAKSTokenInRegistrationResponseMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeFirstAKSTokenWithLTKSessionInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeFirstAKSTokenWithLTKSessionInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeLastRegistrationInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeLastRegistrationInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SendApprovePromptMessage()
{
  return &type metadata for SDAuthentication.Operation.SendApprovePromptMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeApproveMetadataInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeApproveMetadataInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckACMTokenExists()
{
  return &type metadata for SDAuthentication.Operation.CheckACMTokenExists;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UseAuthTokenForFirstAKSTokenAsKeyInMessage()
{
  return &type metadata for SDAuthentication.Operation.UseAuthTokenForFirstAKSTokenAsKeyInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeSessionStartDateInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeSessionStartDateInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeLastRegistrationDateInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeLastRegistrationDateInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckEnabledWithPeer()
{
  return &type metadata for SDAuthentication.Operation.CheckEnabledWithPeer;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SendRequestMessage()
{
  return &type metadata for SDAuthentication.Operation.SendRequestMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeRangingTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeRangingTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeLastUnlockDateInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeLastUnlockDateInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeAWDLInfoInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeAWDLInfoInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckLocalSecurityPolicy()
{
  return &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordRemoteDevice()
{
  return &type metadata for SDAuthentication.Operation.RecordRemoteDevice;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckRemoteDeviceOSVersionIsSupported()
{
  return &type metadata for SDAuthentication.Operation.CheckRemoteDeviceOSVersionIsSupported;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckWatchIsNearby()
{
  return &type metadata for SDAuthentication.Operation.CheckWatchIsNearby;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckIsWiFiEnabled()
{
  return &type metadata for SDAuthentication.Operation.CheckIsWiFiEnabled;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckIsBluetoothEnabled()
{
  return &type metadata for SDAuthentication.Operation.CheckIsBluetoothEnabled;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeLongTermKeyInPairingMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeLongTermKeyInPairingMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.BuildMessageHeader()
{
  return &type metadata for SDAuthentication.Operation.BuildMessageHeader;
}

uint64_t sub_100284608(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100650060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100284650@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002060A0(v1, a1);
}

uint64_t sub_100284668(uint64_t a1)
{
  return sub_10022282C(a1, *(char **)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_100284670()
{
  uint64_t v0 = static Array._allocateBufferUninitialized(minimumCapacity:)(64LL, &type metadata for Int8);
  *(void *)(v0 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = 64LL;
  *(_OWORD *)(v0 + sub_100195658(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000002DLL,  0x8000000100505960LL,  "DaemoniOSLibrary/SDAirDropDiscoveredEndpoint.swift",  50LL,  2LL,  298LL, 0) = 0u;
  if (SecRandomCopyBytes(kSecRandomDefault, 0x40uLL, (void *)(v0 + 32)))
  {
    swift_bridgeObjectRelease((const char *)v0);
    _StringGuts.grow(_:)(42LL);
    swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
    v1._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int32,  &protocol witness table for Int32);
    object = (const char *)v1._object;
    String.append(_:)(v1);
    swift_bridgeObjectRelease(object);
    v3._uint64_t countAndFlagsBits = 41LL;
    v3._object = (void *)0xE100000000000000LL;
    String.append(_:)(v3);
    unint64_t v4 = sub_100187014();
    uint64_t v5 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v4, 0LL, 0LL);
    *(_DWORD *)uint64_t v6 = 10;
    *(void *)(v6 + 8) = 0xD000000000000027LL;
    *(void *)(v6 + sub_100284B44(*(void *)(v0 + 160), v0 + 16) = 0x8000000100507E20LL;
    return swift_willThrow(v5);
  }

  else
  {
    uint64_t v8 = sub_10033C9DC((_BYTE *)(v0 + 32), 64LL);
    swift_bridgeObjectRelease((const char *)v0);
    return v8;
  }

uint64_t sub_1002847D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1002088C4(*(void *)(v1 + 16), *(void *)(v1 + 24), *(const char **)(v1 + 32), a1);
}

void sub_1002847EC(void *a1@<X8>)
{
}